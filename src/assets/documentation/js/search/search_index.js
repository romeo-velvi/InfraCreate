var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/Aoption.html",[0,0.34,1,3.671]],["body/classes/Aoption.html",[0,0.632,1,6.824,2,0.45,3,0.072,4,0.064,5,0.072,6,5.611,7,1.251,8,3.58,9,1.42,10,6.348,11,0.911,12,1.562,13,2.042,14,0.099,15,0.254,16,7.294,17,7.294,18,0.12,19,0.006,20,0.421,21,0.163,22,6.83,23,6.83,24,0.259,25,5.07,26,1.83,27,2.142,28,4.335,29,2.238,30,5.611,31,3.9,32,1.89,33,2.646,34,0.094,35,4.961,36,5.611,37,0.544,38,0.981,39,1.375,40,5.611,41,2.646,42,6.348,43,4.515,44,0.767,45,2.32,46,2.646,47,2.405,48,2.812,49,1.291,50,2.45,51,5.611,52,2.45,53,0.013,54,0.013,55,0.013,56,0.013]],["title/components/AppComponent.html",[57,0.977,58,1.966]],["body/components/AppComponent.html",[0,0.346,3,0.052,4,0.045,5,0.052,11,0.731,14,0.07,15,0.204,18,0.134,19,0.006,20,0.331,21,0.183,24,0.332,26,1.3,27,1.719,32,1.343,33,1.88,34,0.052,38,0.952,39,1.335,48,1.998,52,1.741,53,0.009,54,0.009,55,0.009,56,0.009,57,1.356,58,3.339,59,1.88,60,2.085,61,2.085,62,2.085,63,4.854,64,2.085,65,4.31,66,4.077,67,3.368,68,2.787,69,7.547,70,2.787,71,6.627,72,6.735,73,5.561,74,5.287,75,6.735,76,7.547,77,5.361,78,6.473,79,8.489,80,3.735,81,1.126,82,3.525,83,4.177,84,4.488,85,5.89,86,6.662,87,6.627,88,1.259,89,1.259,90,0.918,91,4.989,92,4.854,93,4.854,94,1.145,95,2.708,96,2.867,97,2.062,98,4.854,99,5.801,100,4.854,101,4.854,102,4.854,103,5.914,104,4.854,105,3.208,106,3.208,107,4.854,108,4.854,109,4.854,110,4.854,111,6.627,112,1.591,113,2.607,114,2.041,115,4.854,116,3.668,117,4.854,118,1.563,119,4.854,120,4.854,121,5.914,122,3.368,123,4.854,124,4.854,125,4.854,126,3.355,127,4.854,128,4.854,129,4.854,130,3.987,131,3.525,132,4.854,133,4.854,134,5.094,135,4.854,136,4.854,137,3.987,138,3.355,139,1.808,140,3.525,141,2.085,142,2.847,143,1.536,144,2.085,145,2.398,146,2.085,147,1.957,148,0.657,149,2.132,150,1.957,151,3.315,152,2.041,153,1.998,154,1.587,155,2.132,156,1.998,157,0.782,158,2.132,159,1.998,160,2.132,161,2.132,162,1.918,163,2.132,164,1.957,165,2.132,166,1.918,167,1.957,168,2.132,169,1.918,170,1.918,171,2.132,172,2.132,173,1.998,174,2.132,175,1.918,176,1.998,177,2.132,178,2.041,179,1.881,180,2.041,181,2.911,182,2.041,183,2.041,184,1.918,185,1.918,186,2.132,187,1.918,188,1.918,189,1.918,190,2.132,191,1.957,192,2.132,193,2.132,194,2.132]],["title/modules/AppModule.html",[38,0.686,195,3.671]],["body/modules/AppModule.html",[0,0.255,3,0.038,4,0.033,5,0.038,18,0.052,19,0.006,21,0.071,24,0.38,26,0.96,33,3.49,34,0.038,38,1.014,39,1.423,53,0.007,54,0.007,55,0.007,56,0.007,58,3.814,66,1.476,77,2.37,88,0.93,89,0.93,90,0.678,139,1.336,150,3.474,153,3.709,156,3.26,157,0.86,159,3.26,162,3.13,164,3.194,166,3.331,167,3.194,169,3.331,170,3.13,173,3.709,175,3.331,176,3.709,178,3.33,179,1.903,180,3.33,182,3.33,183,3.33,184,3.331,185,3.13,187,3.331,188,3.331,189,3.13,191,3.474,195,7.834,196,1.311,197,4.103,198,3.2,199,3.2,200,3.2,201,3.2,202,3.2,203,3.2,204,5.752,205,7.068,206,5.026,207,5.474,208,5.235,209,5.026,210,3.2,211,2.945,212,3.2,213,3.585,214,3.585,215,5.338,216,2.068,217,3.585,218,4.764,219,4.386,220,5.338,221,6.378,222,0.945,223,3.585,224,5.338,225,7.066,226,3.585,227,3.585,228,0.819,229,1.078,230,5.338,231,4.386,232,2.756,233,5.338,234,5.338,235,4.764,236,5.338,237,3.585,238,3.585,239,3.2,240,3.2,241,2.945,242,3.2,243,5.338,244,2.422,245,1.417,246,1.389,247,4.216,248,7.066,249,5.338,250,5.338,251,4.216,252,5.338,253,5.338,254,2.422,255,2.945,256,3.585,257,3.585,258,3.585,259,3.585,260,3.585,261,3.2,262,3.2,263,2.642,264,3.585,265,3.585,266,3.2,267,5.338,268,6.739,269,4.103,270,4.764,271,3.585,272,5.338,273,2.37,274,5.338,275,4.902,276,5.338,277,3.2,278,3.2,279,5.338,280,3.585,281,3.585,282,3.585,283,3.585,284,3.585,285,3.585,286,3.585,287,3.2,288,3.585,289,6.378,290,3.2,291,3.585,292,3.585,293,3.585,294,3.2,295,3.585,296,3.585,297,3.585,298,5.338,299,3.585,300,5.338,301,2.945,302,3.2,303,3.585,304,2.37,305,2.37,306,3.2,307,3.585,308,3.2,309,1.648,310,1.336,311,5.338,312,4.386,313,5.338,314,3.585,315,3.585,316,1.507,317,3.585,318,3.585,319,3.585,320,0.9,321,1.155,322,1.476,323,1.196,324,3.585,325,5.338,326,3.585,327,3.585,328,3.585,329,3.585,330,1.218]],["title/modules/AppRoutingModule.html",[38,0.686,204,3.469]],["body/modules/AppRoutingModule.html",[0,0.439,3,0.065,4,0.058,5,0.065,19,0.006,24,0.368,26,1.652,34,0.065,53,0.011,54,0.011,55,0.011,56,0.011,57,2.036,105,4.077,150,3.421,162,3.352,164,3.832,167,3.421,191,3.421,196,2.255,204,5.633,218,5.504,235,6.921,239,5.504,240,5.504,241,5.067,242,5.504,247,5.608,251,5.608,261,5.504,262,5.504,304,4.077,305,4.077,306,5.504,309,3.566,312,5.067,320,1.549,331,6.167,332,6.167,333,7.756,334,7.536,335,6.97,336,6.167,337,7.756,338,7.649,339,5.633,340,5.961,341,6.921,342,7.756,343,7.756,344,6.167]],["title/classes/AreaApplication.html",[0,0.34,345,2.427]],["body/classes/AreaApplication.html",[0,0.658,2,0.298,3,0.048,4,0.042,5,0.048,9,1.084,11,0.867,14,0.065,15,0.194,18,0.127,19,0.006,20,0.427,21,0.174,24,0.35,34,0.101,38,0.649,39,1.584,44,0.883,46,1.75,49,1.193,53,0.008,54,0.008,55,0.008,56,0.008,90,1.193,94,0.638,139,2.93,148,0.516,154,1.883,179,1.686,196,2.656,254,2.621,263,3.597,320,1.135,321,2.664,323,1.507,345,3.205,346,2.359,347,1.802,348,3.041,349,2.77,350,1.067,351,1.929,352,4.518,353,3.941,354,2.516,355,4.518,356,4.518,357,0.82,358,4.518,359,4.518,360,2.078,361,4.518,362,4.518,363,2.71,364,2.333,365,2.18,366,2.71,367,2.18,368,2.492,369,2.18,370,3.341,371,2.359,372,3.341,373,2.359,374,3.341,375,2.359,376,2.97,377,2.236,378,3.379,379,2.127,380,2.447,381,1.382,382,1.962,383,2.067,384,1.774,385,1.804,386,2.104,387,2.077,388,2.236,389,2.447,390,2.011,391,3.507,392,3.055,393,3.055,394,3.055,395,4.441,396,4.242,397,1.331,398,2.71,399,2.221,400,3.044,401,3.205,402,2.35,403,3.293,404,3.293,405,2.443,406,2.221,407,3.293,408,1.331,409,3.044,410,3.264,411,2.359,412,1.455,413,1,414,1.941,415,2.359,416,2.359,417,2.077,418,2.359,419,2.359,420,1.562,421,2.359,422,2.127,423,1.984,424,1.984,425,1.534,426,1.941,427,2.359,428,1.455,429,2.359,430,2.077,431,3.044,432,2.295,433,2.077,434,1.271,435,1.507,436,2.97,437,3.896,438,2.18,439,2.18,440,3.205,441,3.996,442,3.795,443,3.379,444,3.293,445,3.794,446,3.692,447,3.264,448,2.18,449,3.996,450,1.941,451,0.868,452,2.295,453,2.127,454,2.18]],["title/classes/AreaColorDTO.html",[0,0.34,452,2.427]],["body/classes/AreaColorDTO.html",[0,0.664,2,0.311,3,0.05,4,0.044,5,0.05,9,1.118,11,0.884,14,0.068,15,0.2,18,0.108,19,0.006,20,0.424,21,0.147,24,0.353,34,0.102,38,0.678,39,1.309,44,0.9,46,1.829,53,0.009,54,0.009,55,0.009,56,0.009,139,2.986,148,0.335,154,1.919,179,1.726,196,2.719,254,2.657,263,3.682,320,1.186,321,2.707,323,1.575,345,2.399,346,2.465,347,1.818,348,2.169,350,1.1,353,2.99,354,2.127,357,0.817,360,1.86,363,2.794,364,2.366,365,2.278,366,2.794,367,2.278,368,2.57,369,2.278,370,3.42,371,2.465,372,3.42,373,2.465,374,3.42,375,2.465,376,3.062,377,2.336,378,3.444,379,2.223,380,2.493,381,1.444,382,2.023,383,2.131,384,1.829,385,1.86,386,2.804,387,2.17,388,2.336,389,2.493,390,2.058,391,3.589,392,3.128,393,3.128,394,3.128,395,4.489,396,4.301,397,1.373,398,2.794,399,2.29,400,3.138,401,3.304,402,2.423,403,3.395,404,3.395,405,2.519,406,2.29,407,3.395,408,1.373,409,3.138,410,3.342,411,2.465,412,1.52,413,1.045,414,2.028,415,2.465,416,2.465,417,2.17,418,2.465,419,2.465,420,1.632,421,2.465,422,2.223,423,2.073,424,2.073,425,1.603,426,2.028,427,2.465,428,1.52,429,2.465,430,2.17,431,3.138,432,2.399,433,2.17,434,1.328,435,1.575,436,3.062,437,3.958,438,2.278,439,2.278,440,3.304,441,4.073,442,3.868,443,3.444,444,3.395,445,3.884,446,3.78,447,3.342,448,2.278,449,4.073,450,2.028,451,0.907,452,3.304,453,2.223,454,2.278,455,1.742,456,4.721,457,4.721,458,4.721]],["title/classes/AreaDTO.html",[0,0.34,348,1.593]],["body/classes/AreaDTO.html",[0,0.696,2,0.29,3,0.047,4,0.041,5,0.047,13,1.087,14,0.064,15,0.19,18,0.123,19,0.006,20,0.451,21,0.168,24,0.272,34,0.104,37,0.696,38,1.116,39,1.442,49,1.713,53,0.008,54,0.008,55,0.008,56,0.008,94,1.2,148,0.683,157,0.709,330,1.494,347,0.858,348,2.065,349,3.146,350,1.533,351,2.599,357,0.875,360,2.223,380,1.368,381,2.191,382,2.228,383,2.347,384,1.237,385,1.77,386,2.065,451,1.376,455,1.658,459,1.976,460,4.398,461,4.398,462,4.398,463,4.398,464,4.398,465,4.398,466,2.603,467,2.603,468,1.976,469,2.775,470,1.89,471,1.608,472,1.976,473,1.976,474,1.976,475,1.976,476,1.467,477,1.89,478,1.976,479,1.932,480,1.467,481,3.34,482,1.976,483,1.976,484,1.345,485,2.659,486,1.976,487,2.781,488,1.976,489,1.976,490,3.834,491,1.578,492,2.659,493,1.976,494,1.976,495,1.976,496,1.976,497,1.976,498,1.976,499,1.253,500,1.976,501,2.659,502,1.671,503,2.603,504,1.976,505,2.719,506,1.976,507,1.976,508,1.608,509,1.608,510,1.608,511,1.608,512,1.608,513,1.608,514,1.608,515,1.608,516,1.608,517,1.932,518,1.8,519,1.932,520,1.932,521,1.932,522,1.932,523,1.932,524,1.932,525,1.932,526,1.02,527,1.555,528,1.932,529,1.926,530,1.976,531,1.053,532,1.976,533,2.496,534,1.159,535,1.639,536,1.322,537,1.392,538,1.671,539,2.719,540,1.608,541,1.639,542,1.976,543,1.849,544,1.932,545,1.976,546,1.671]],["title/classes/AreaExport.html",[0,0.34,547,2.818]],["body/classes/AreaExport.html",[0,0.693,2,0.416,3,0.067,4,0.059,5,0.067,9,1.084,11,0.867,12,1.192,13,1.558,14,0.091,15,0.242,18,0.114,19,0.006,20,0.441,21,0.155,24,0.239,34,0.103,37,0.627,38,0.905,44,0.708,53,0.012,54,0.012,55,0.012,56,0.012,148,0.448,320,1.583,350,1.561,357,0.761,390,1.745,397,1.331,408,1.331,435,2.103,451,1.51,455,2.403,499,1.267,518,1.833,527,1.583,529,1.961,534,1.662,535,2.349,537,1.995,540,2.305,547,5.057,548,3.853,549,6.304,550,6.304,551,2.821,552,2.821,553,4.49,554,2.821,555,2.395,556,2.349,557,2.141,558,2.103,559,2.066,560,2.349,561,2.349,562,2.349,563,2.262,564,2.262,565,3.489,566,2.103,567,2.066,568,4.49,569,4.49,570,4.64,571,4.64,572,4.49,573,3.72,574,4.64,575,3.72,576,4.64,577,3.853,578,3.853,579,3.853]],["title/injectables/AttachmentsService.html",[580,1.926,581,4.262]],["body/injectables/AttachmentsService.html",[0,0.405,3,0.06,4,0.053,5,0.06,14,0.082,18,0.118,19,0.006,20,0.422,21,0.161,24,0.347,26,1.522,34,0.06,37,0.587,53,0.01,54,0.01,55,0.01,56,0.01,67,2.887,81,1.318,88,2.117,89,2.117,90,1.543,113,3.954,154,1.762,208,6.166,209,5.92,222,1.94,228,1.681,273,3.755,304,3.755,305,3.755,309,4.213,310,2.742,357,0.839,417,2.612,580,2.968,581,6.568,582,3.052,583,5.681,584,3.621,585,7.36,586,7.36,587,4.367,588,6.272,589,5.681,590,5.346,591,7.36,592,8.635,593,5.681,594,5.07,595,4.498,596,7.36,597,5.681,598,5.07,599,5.681,600,4.367,601,5.681,602,5.07,603,5.07,604,3.927,605,4.667,606,3.052,607,2.887,608,4.671,609,5.681,610,3.71,611,7.36,612,6.568,613,7.36,614,7.36,615,6.046,616,7.36,617,7.36,618,6.637,619,6.568,620,7.36,621,6.568,622,6.568,623,6.568,624,4.343,625,6.568,626,6.568,627,6.568,628,6.568,629,2.213,630,5.681,631,5.681]],["title/injectables/AuthGuard.html",[335,3.924,580,1.926]],["body/injectables/AuthGuard.html",[0,0.448,3,0.067,4,0.059,5,0.067,14,0.091,18,0.114,19,0.006,21,0.155,24,0.325,26,1.684,34,0.067,53,0.012,54,0.012,55,0.012,56,0.012,67,3.195,73,5.432,74,5.372,81,1.459,82,4.567,88,2.036,89,2.036,90,1.484,105,4.156,112,2.061,114,3.301,222,2.069,228,1.436,244,2.388,268,7.364,269,7.091,309,2.891,316,2.644,335,6.449,347,1.532,580,3.166,582,3.378,584,3.382,606,3.378,629,2.36,632,6.288,633,8.559,634,8.559,635,6.288,636,6.288,637,8.964,638,7.638,639,8.964,640,6.288,641,6.889,642,4.482,643,5.189,644,6.288,645,6.288,646,5.658,647,6.288,648,6.288,649,6.288,650,6.288,651,3.711,652,6.288,653,6.288,654,6.288,655,6.288,656,8.559,657,4.887,658,7.85,659,6.288,660,7.85,661,7.85,662,6.288,663,6.288,664,6.288,665,3.48,666,6.288,667,2.135,668,6.288,669,6.288,670,6.288]],["title/classes/BlueprintFileDTO.html",[0,0.34,671,2.919]],["body/classes/BlueprintFileDTO.html",[0,0.678,2,0.408,3,0.066,4,0.058,5,0.066,14,0.09,15,0.239,18,0.129,19,0.006,20,0.449,21,0.176,24,0.235,34,0.102,37,0.493,49,1.607,53,0.011,54,0.011,55,0.011,56,0.011,94,0.874,148,0.603,309,2.846,320,2.135,350,1.553,351,1.893,357,0.791,360,1.771,384,1.742,385,1.771,499,0.998,502,2.352,508,2.263,509,2.263,510,2.263,511,2.263,512,2.263,513,2.263,514,2.263,515,2.263,516,2.263,518,1.8,529,1.926,541,2.307,546,2.352,566,2.835,567,2.785,671,5.195,672,4.092,673,6.191,674,6.191,675,2.446,676,6.191,677,6.191,678,4.752,679,4.752,680,3.929,681,4.092,682,3.929,683,4.092,684,4.092,685,4.092,686,4.934,687,4.092,688,4.092,689,2.398,690,4.092,691,4.752,692,4.092,693,3.929,694,3.929,695,3.929,696,4.092,697,4.092,698,3.929,699,3.784,700,3.929]],["title/classes/BorderNetworkDTO.html",[0,0.34,701,3.469]],["body/classes/BorderNetworkDTO.html",[0,0.649,2,0.434,3,0.07,4,0.061,5,0.07,14,0.095,15,0.248,18,0.132,19,0.006,20,0.444,21,0.18,34,0.097,37,0.525,49,1.799,53,0.012,54,0.012,55,0.012,56,0.012,74,3.762,94,0.93,148,0.574,351,2.91,357,0.864,469,3.13,499,1.062,531,1.578,675,2.603,701,6.618,702,5.064,703,6.717,704,3.094,705,6.588,706,6.588,707,3.195,708,6.588,709,6.588,710,5.869,711,6.21,712,3.762,713,5.064,714,2.552,715,5.064,716,5.064,717,4.553]],["title/interfaces/CommonModule.html",[263,2.364,389,1.486]],["body/interfaces/CommonModule.html",[0,0.662,3,0.049,4,0.044,5,0.049,9,1.108,11,0.879,14,0.068,15,0.198,18,0.125,19,0.006,20,0.415,24,0.352,34,0.102,38,0.669,39,1.298,44,0.895,46,1.806,53,0.009,54,0.009,55,0.009,56,0.009,139,2.402,148,0.331,154,1.909,179,1.714,196,2.701,254,2.647,263,3.946,320,1.171,321,2.695,323,1.555,345,2.369,346,2.434,347,1.791,348,2.15,354,1.333,357,0.856,360,1.843,363,2.769,364,2.356,365,2.249,366,2.769,367,2.249,368,2.547,369,2.249,370,3.397,371,2.434,372,3.397,373,2.434,374,3.397,375,2.434,376,3.035,377,2.307,378,3.719,379,2.195,380,2.693,381,1.426,382,2.005,383,2.113,384,1.813,385,1.843,386,2.15,387,2.143,388,2.307,389,2.48,390,2.395,391,4.177,392,3.639,393,3.639,394,3.639,395,4.646,396,4.476,397,1.361,398,2.769,399,2.27,400,3.111,401,3.275,402,2.402,403,3.366,404,3.366,405,2.497,406,2.27,407,3.366,408,1.361,409,3.111,410,3.319,411,2.434,412,1.501,413,1.032,414,2.003,415,2.434,416,2.434,417,2.143,418,2.434,419,2.434,420,1.612,421,2.434,422,2.195,423,2.047,424,2.047,425,1.583,426,2.003,427,2.434,428,1.501,429,2.434,430,2.143,431,3.111,432,2.369,433,2.143,434,1.311,435,1.555,436,3.035,437,3.94,438,2.249,439,2.249,440,3.275,441,4.051,442,3.847,443,3.425,444,3.366,445,3.858,446,3.755,447,3.319,448,2.249,449,4.051,450,2.003,451,0.895,452,2.369,453,2.195,454,2.249,718,2.849]],["title/components/ComposerComponent.html",[57,0.977,150,1.926]],["body/components/ComposerComponent.html",[0,0.178,3,0.027,4,0.023,5,0.076,7,0.459,9,1.464,11,0.753,12,1.533,14,0.036,15,0.124,18,0.123,19,0.006,20,0.355,21,0.176,24,0.284,26,0.671,27,1.048,28,2.565,29,2.532,31,3.902,32,2.386,33,0.97,34,0.027,37,0.658,38,0.918,39,1.376,41,0.97,44,1.031,45,2.54,47,1.423,48,1.031,52,0.899,53,0.005,54,0.005,55,0.005,56,0.005,57,0.827,58,1.031,59,1.967,60,1.076,61,1.076,62,1.076,64,1.076,65,4.031,66,3.736,68,1.699,70,1.699,73,3.223,74,4.105,77,3.852,78,5.711,81,1.178,82,1.819,88,0.65,89,1.048,90,0.474,94,1.091,95,2.452,96,2.596,97,2.327,105,1.656,106,1.656,112,0.821,113,3.131,114,4.062,116,1.386,118,1.301,126,3.51,138,1.731,140,1.819,141,1.076,142,1.736,143,1.607,144,1.076,145,1.723,146,1.076,147,1.01,148,0.605,149,1.1,150,3.017,151,2.231,152,1.053,153,1.031,154,1.531,155,1.1,156,1.031,157,0.818,158,1.1,159,1.031,160,1.1,161,1.1,162,0.99,163,1.1,164,1.01,165,1.1,166,0.99,167,1.01,168,1.1,169,0.99,170,0.99,171,1.1,172,1.1,173,1.031,174,1.1,175,0.99,176,1.031,177,1.1,178,1.053,179,1.352,180,1.053,181,1.775,182,1.053,183,1.053,184,0.99,185,0.99,186,1.1,187,0.99,188,0.99,189,0.99,190,1.1,191,1.01,192,1.1,193,1.1,194,1.1,196,2.628,207,5.711,222,1.065,228,1.331,229,1.215,251,2.671,316,3.248,321,0.807,322,2.632,323,0.836,339,4.233,350,0.859,354,2.139,408,1.23,412,1.301,413,1.29,414,2.936,422,2.744,426,2.746,428,2.554,432,2.053,434,1.639,435,2.398,447,2.282,450,2.936,453,2.744,491,1.45,518,1.477,562,0.933,584,2.701,604,2.793,618,4.479,629,1.215,641,3.106,675,0.99,719,8.952,720,2.505,721,1.979,722,1.979,723,2.133,724,4.041,725,4.041,726,3.361,727,3.852,728,4.041,729,3.07,730,6.146,731,1.125,732,3.223,733,5.079,734,4.041,735,4.172,736,4.532,737,5.252,738,5.079,739,4.532,740,5.079,741,5.2,742,6.099,743,6.099,744,3.562,745,5.75,746,4.041,747,2.814,748,2.171,749,3.106,750,3.606,751,2.618,752,2.505,753,2.104,754,4.261,755,1.372,756,3.606,757,3.606,758,2.505,759,4.479,760,4.964,761,5.2,762,6.099,763,5.2,764,4.964,765,4.177,766,4.041,767,2.399,768,5.2,769,5.526,770,2.229,771,4.787,772,2.505,773,4.041,774,4.787,775,2.505,776,1.597,777,2.935,778,3.106,779,3.606,780,2.618,781,3.106,782,3.043,783,2.505,784,3.659,785,2.053,786,3.773,787,1.372,788,2.671,789,2.671,790,2.505,791,2.793,792,4.041,793,4.418,794,2.505,795,3.606,796,2.505,797,2.505,798,3.522,799,6.676,800,2.935,801,2.505,802,2.171,803,3.606,804,2.053,805,2.171,806,2.793,807,4.041,808,2.505,809,3.606,810,3.606,811,3.32,812,2.505,813,2.505,814,3.32,815,2.505,816,3.32,817,2.505,818,3.852,819,2.505,820,0.951,821,2.235,822,2.235,823,2.235,824,2.235,825,2.235,826,1.478,827,2.058,828,2.235,829,2.505,830,1.59,831,1.782,832,3.606,833,2.235,834,3.606,835,2.505,836,2.235,837,2.505,838,2.235,839,2.505,840,4.172,841,2.235,842,2.505,843,2.058,844,1.386,845,2.505,846,4.532,847,5.079,848,6.834,849,1.209,850,2.505,851,2.058,852,2.505,853,5.2,854,2.058,855,2.235,856,2.058,857,2.235,858,3.606,859,1.656,860,2.935,861,3.606,862,4.041,863,3.32,864,2.935,865,2.171,866,4.041,867,2.565,868,5.2,869,2.505,870,2.235,871,2.505,872,3.606,873,2.235,874,1.731,875,2.505,876,2.235,877,2.505,878,2.235,879,3.606,880,3.606,881,3.606,882,2.793,883,3.106,884,2.235,885,2.235]],["title/classes/ConfigurationTemplateDTO.html",[0,0.34,492,2.052]],["body/classes/ConfigurationTemplateDTO.html",[0,0.693,2,0.28,3,0.045,4,0.04,5,0.045,13,1.05,14,0.062,15,0.186,18,0.134,19,0.006,20,0.451,21,0.182,24,0.266,34,0.103,37,0.748,38,1.206,39,0.855,49,1.634,53,0.008,54,0.008,55,0.008,56,0.008,94,1.142,148,0.672,157,0.684,330,1.442,347,0.829,348,1.417,349,1.865,350,1.52,351,2.341,357,0.872,360,2.01,380,1.321,381,2.149,382,2.186,383,2.303,384,1.195,385,1.727,386,2.014,451,1.35,455,1.618,459,1.908,466,2.539,467,2.539,468,1.908,469,2.722,470,1.825,471,1.553,472,1.908,473,1.908,474,1.908,475,1.908,476,1.417,477,1.825,478,1.908,479,1.865,480,1.417,481,3.288,482,1.908,483,1.908,484,1.299,485,2.595,486,1.908,487,3.438,488,1.908,489,1.908,490,3.796,491,1.524,492,3.019,493,3.157,494,3.157,495,3.157,496,3.157,497,3.157,498,3.157,499,1.354,500,3.157,501,2.595,502,1.613,503,2.539,504,1.908,505,2.652,506,1.908,507,1.908,508,1.553,509,1.553,510,1.553,511,1.553,512,1.553,513,1.553,514,1.553,515,1.553,516,1.553,517,1.865,518,1.756,519,1.865,520,1.865,521,1.865,522,1.865,523,1.865,524,1.865,525,1.865,526,0.985,527,1.517,528,1.865,529,1.879,530,1.908,531,1.017,532,1.908,533,2.435,534,1.119,535,1.582,536,1.277,537,1.344,538,1.613,539,2.652,540,1.553,541,1.582,542,1.908,543,1.786,544,1.865,545,1.908,546,1.613,675,3.32,886,4.247,887,4.247,888,4.247,889,4.247,890,4.247,891,4.247,892,4.247,893,4.247,894,4.247,895,4.247,896,4.247]],["title/classes/ConstraintsMSD.html",[0,0.34,897,2.145]],["body/classes/ConstraintsMSD.html",[0,0.705,2,0.335,3,0.054,4,0.047,5,0.054,9,0.873,11,0.753,12,0.96,13,1.689,14,0.074,15,0.21,18,0.112,19,0.006,20,0.437,21,0.153,24,0.193,34,0.105,37,0.708,44,0.57,53,0.009,54,0.009,55,0.009,56,0.009,94,1.166,97,1.58,148,0.36,216,1.967,320,1.275,350,1.156,357,0.607,389,2.126,390,1.405,397,1.072,408,1.072,413,1.124,420,3.358,451,1.587,499,0.818,527,1.275,531,1.85,534,1.338,536,1.527,551,2.452,552,2.452,554,2.452,555,1.929,556,1.892,557,1.724,558,1.694,559,1.664,560,1.892,561,1.892,562,1.892,563,1.822,564,1.822,566,1.694,567,1.664,689,1.967,704,2.321,707,3.509,714,1.967,897,3.47,898,2.335,899,3.47,900,3.47,901,3.47,902,3.47,903,5.078,904,3.47,905,5.078,906,3.47,907,5.078,908,3.001,909,3.001,910,3.001,911,3.001,912,3.001,913,2.182,914,3.001,915,3.001,916,3.001,917,3.001,918,3.001,919,2.335,920,2.335,921,2.048,922,3.001,923,2.281,924,2.281,925,3.07,926,2.281,927,3.07,928,2.281,929,3.001,930,2.335,931,2.335,932,2.335,933,3.318,934,3.712,935,2.281,936,2.182,937,3.001,938,2.091,939,3.47,940,3.712,941,2.007,942,3.07,943,3.07,944,3.07,945,3.142,946,3.001,947,2.281,948,2.281,949,2.281]],["title/classes/ConsumerInterfaceLinkDTO.html",[0,0.34,533,1.926]],["body/classes/ConsumerInterfaceLinkDTO.html",[0,0.698,2,0.297,3,0.048,4,0.042,5,0.048,13,1.113,14,0.065,15,0.193,18,0.105,19,0.006,20,0.451,21,0.143,24,0.275,34,0.104,37,0.7,38,1.127,39,0.906,49,1.661,53,0.008,54,0.008,55,0.008,56,0.008,94,1.166,148,0.678,157,0.725,330,1.528,347,0.878,348,1.501,349,1.977,350,1.486,351,2.401,357,0.875,360,2.074,380,1.4,381,2.218,382,2.256,383,2.377,384,1.266,385,1.799,386,2.098,451,1.393,455,1.685,459,2.022,466,2.645,467,2.645,468,2.022,469,2.809,470,1.934,471,1.645,472,2.022,473,2.022,474,2.022,475,2.022,476,1.501,477,1.934,478,2.022,479,1.977,480,1.501,481,3.374,482,2.022,483,2.022,484,1.376,485,2.703,486,2.022,487,2.826,488,2.022,489,2.022,490,3.859,491,1.615,492,2.703,493,2.022,494,2.022,495,2.022,496,2.022,497,2.022,498,2.022,499,1.265,500,2.022,501,2.703,502,1.71,503,2.645,504,2.022,505,2.763,506,2.022,507,2.022,508,1.645,509,1.645,510,1.645,511,1.645,512,1.645,513,1.645,514,1.645,515,1.645,516,1.645,517,1.977,518,1.829,519,1.977,520,1.977,521,1.977,522,1.977,523,1.977,524,1.977,525,1.977,526,1.044,527,1.58,528,1.977,529,1.957,530,2.022,531,1.078,532,2.022,533,2.925,534,1.911,535,2.702,536,2.181,537,1.424,538,1.71,539,2.763,540,1.645,541,1.677,542,2.022,543,1.892,544,1.977,545,2.022,546,1.71,950,4.501,951,4.501,952,4.501]],["title/classes/ConsumerInterfaceLinkExport.html",[0,0.34,576,2.818]],["body/classes/ConsumerInterfaceLinkExport.html",[0,0.692,2,0.412,3,0.066,4,0.058,5,0.066,9,1.074,11,0.862,12,1.181,13,1.544,14,0.091,15,0.24,18,0.124,19,0.006,20,0.441,21,0.169,24,0.237,34,0.103,37,0.623,38,0.897,44,0.702,53,0.011,54,0.011,55,0.011,56,0.011,148,0.443,320,1.569,350,1.443,357,0.758,390,1.729,397,1.319,408,1.319,435,2.084,451,1.502,455,2.094,499,1.26,518,1.817,527,1.569,529,1.943,534,2.249,535,2.328,536,2.351,537,1.977,540,2.284,547,4.614,548,3.818,551,2.805,552,2.805,553,4.464,554,2.805,555,2.373,556,2.328,557,2.122,558,2.084,559,2.047,560,2.328,561,2.328,562,2.328,563,2.241,564,2.241,565,3.457,566,2.084,567,2.047,568,4.464,569,4.464,570,4.614,571,4.614,572,4.464,573,3.687,574,4.614,575,3.687,576,5.036,577,3.818,578,3.818,579,3.818,953,6.977,954,6.247,955,6.247,956,6.247]],["title/components/ControlTemplate.html",[57,0.977,152,2.008]],["body/components/ControlTemplate.html",[0,0.475,3,0.052,4,0.046,5,0.052,7,0.898,11,0.736,12,0.927,14,0.071,18,0.118,19,0.006,20,0.292,21,0.168,24,0.288,26,1.313,27,1.968,32,2.099,33,1.899,34,0.071,37,0.532,38,0.958,39,1.344,44,0.749,48,2.018,52,1.759,53,0.009,54,0.009,55,0.009,56,0.009,57,1.552,58,2.018,59,1.899,60,2.106,61,2.106,62,2.106,64,2.106,65,4.301,66,4.059,68,2.806,70,2.806,73,3.112,94,0.942,97,1.525,122,2.491,134,3.768,139,1.827,141,2.106,142,2.867,143,1.552,144,2.106,145,2.408,146,2.106,147,1.977,148,0.659,149,2.153,150,1.977,151,3.332,152,3.582,153,2.018,154,1.598,155,2.153,156,2.018,157,1.495,158,2.153,159,2.018,160,2.153,161,2.153,162,1.937,163,2.153,164,1.977,165,2.153,166,1.937,167,1.977,168,2.153,169,1.937,170,1.937,171,2.153,172,2.153,173,2.018,174,2.153,175,1.937,176,2.018,177,2.153,178,2.061,179,2.039,180,2.061,181,2.931,182,2.061,183,2.061,184,1.937,185,1.937,186,2.153,187,1.937,188,1.937,189,1.937,190,2.153,191,1.977,192,2.153,193,2.153,194,2.153,222,1.759,228,1.12,229,1.474,244,1.862,245,1.937,246,1.899,321,1.579,347,0.957,354,1.402,357,0.723,364,2.393,425,2.266,434,1.877,476,1.635,484,2.491,595,2.997,643,5.631,667,2.266,723,1.085,744,4.978,747,2.747,785,2.491,830,3.112,849,2.366,957,4.375,958,5.955,959,5.207,960,1.973,961,5.482,962,5.955,963,6.77,964,5.955,965,6.259,966,7.267,967,4.138,968,4.903,969,4.903,970,4.903,971,4.903,972,4.903,973,4.612,974,5.955,975,4.375,976,3.768,977,4.375,978,3.768,979,4.375,980,2.491,981,4.375,982,3.585,983,4.375,984,4.028,985,4.375,986,4.375,987,4.375,988,4.375,989,4.375,990,4.375,991,4.375,992,4.375,993,4.028,994,5.955,995,2.799,996,4.375,997,4.076,998,2.997,999,4.903,1000,3.768,1001,2.799,1002,3.241,1003,3.241,1004,4.375,1005,3.112,1006,4.903,1007,2.799,1008,4.903,1009,2.491,1010,4.903,1011,3.693,1012,3.241]],["title/classes/DataInput.html",[0,0.34,1013,2.919]],["body/classes/DataInput.html",[0,0.671,2,0.368,3,0.059,4,0.052,5,0.059,7,1.021,9,0.958,11,0.615,14,0.081,15,0.224,18,0.142,19,0.006,20,0.431,21,0.18,27,1.446,32,1.543,34,0.1,37,0.683,41,2.816,46,2.16,47,1.964,49,1.621,50,3.379,53,0.01,54,0.01,55,0.01,56,0.01,90,1.724,94,1.255,157,1.433,330,1.894,347,1.579,357,0.495,398,3.124,412,1.796,484,2.224,559,2.383,657,4.62,665,3.086,723,1.79,751,3.266,770,2.328,1013,5.756,1014,4.989,1015,3.539,1016,4.225,1017,5.977,1018,5.135,1019,5.135,1020,5.576,1021,5.576,1022,5.576,1023,5.576,1024,5.576,1025,4.024,1026,5.241,1027,4.291,1028,5.576,1029,3.086,1030,3.539,1031,5.135,1032,3.408,1033,2.833,1034,3.408,1035,3.539,1036,3.539,1037,4.291,1038,3.184,1039,3.539,1040,3.408,1041,3.408,1042,2.912,1043,3.539,1044,3.539,1045,3.408,1046,2.762,1047,4.024,1048,3.539,1049,4.152,1050,3.408,1051,3.408,1052,3.408,1053,3.291,1054,3.539]],["title/classes/DataInputCheck.html",[0,0.34,1040,2.919]],["body/classes/DataInputCheck.html",[0,0.667,2,0.358,3,0.058,4,0.051,5,0.058,7,0.995,9,0.934,11,0.599,14,0.079,15,0.22,18,0.142,19,0.006,20,0.429,21,0.182,27,1.409,32,1.503,34,0.099,37,0.676,41,2.769,46,2.104,47,1.913,49,1.605,50,3.36,53,0.01,54,0.01,55,0.01,56,0.01,90,1.771,94,1.278,157,1.421,330,1.845,347,1.656,353,4.162,354,2.589,357,0.482,398,2.334,412,1.749,484,2.186,559,1.78,657,4.561,665,3.006,723,1.582,751,2.44,770,2.315,1013,6.014,1014,3.84,1015,3.448,1016,3.732,1017,5.943,1018,5.07,1019,5.07,1025,3.955,1026,5.188,1027,4.218,1029,3.006,1030,3.448,1031,5.386,1032,3.32,1033,2.76,1034,3.32,1035,3.448,1036,3.448,1037,4.218,1038,4.081,1039,4.536,1040,4.369,1041,4.882,1042,2.836,1043,3.448,1044,3.448,1045,3.32,1046,2.715,1047,3.955,1048,3.448,1049,4.081,1050,3.32,1051,3.32,1052,3.32,1053,3.206,1054,3.448,1055,5.432,1056,4.463,1057,4.463,1058,4.463,1059,4.463,1060,4.463,1061,4.463]],["title/components/DataInputComponent.html",[57,0.977,153,1.966]],["body/components/DataInputComponent.html",[0,0.262,3,0.039,4,0.034,5,0.039,7,0.675,9,0.936,11,0.999,12,1.03,14,0.053,15,0.167,18,0.111,19,0.006,20,0.161,21,0.168,24,0.246,26,0.987,27,1.413,32,2.114,33,1.427,34,0.039,37,0.609,38,0.782,39,1.097,41,3.206,47,1.918,48,1.517,49,1.03,50,2.569,52,1.322,53,0.007,54,0.007,55,0.012,56,0.007,57,1.114,58,1.517,59,1.427,60,1.583,61,1.583,62,1.583,64,1.583,65,4.211,66,3.955,68,2.29,70,2.29,81,1.503,83,3.014,84,3.962,88,1.413,89,1.413,90,1.03,95,1.954,97,1.146,114,2.725,126,2.546,130,4.475,131,2.676,141,1.583,142,2.34,143,1.166,144,1.583,145,2.117,146,1.583,147,1.486,148,0.616,149,1.618,150,1.486,151,2.846,152,1.549,153,3.293,154,2.078,155,1.618,156,1.517,157,1.442,158,1.618,159,1.517,160,1.618,161,1.618,162,1.456,163,1.618,164,1.486,165,1.618,166,1.456,167,1.486,168,1.618,169,1.456,170,1.456,171,1.618,172,1.618,173,1.517,174,1.618,175,1.456,176,1.517,177,1.618,178,1.549,179,1.661,180,1.549,181,2.392,182,1.549,183,1.549,184,1.456,185,1.456,186,1.618,187,1.456,188,1.456,189,1.456,190,1.618,191,1.486,192,1.618,193,1.618,194,1.618,222,1.435,228,1.635,229,2.297,290,7.742,301,3.026,310,2.668,316,1.549,321,1.186,399,1.918,410,2.447,426,3.076,428,2.736,484,1.666,526,1.856,607,1.872,723,1.88,731,1.655,732,4.113,744,4.376,753,2.39,754,2.926,765,3.329,770,2.283,784,3.436,787,1.85,798,2.565,831,1.127,844,3.014,849,1.778,959,3.329,960,1.61,982,1.979,995,4.088,1014,4.661,1016,2.844,1025,3.014,1027,3.824,1029,3.962,1047,4.426,1049,4.088,1050,3.329,1051,3.329,1052,2.252,1053,3.824,1062,3.684,1063,5.601,1064,4.861,1065,4.475,1066,4.186,1067,4.861,1068,4.861,1069,4.949,1070,4.186,1071,7.25,1072,4.861,1073,4.475,1074,4.861,1075,3.11,1076,3.11,1077,6.48,1078,5.447,1079,7.64,1080,7.998,1081,7.998,1082,8.496,1083,7.64,1084,2.676,1085,5.447,1086,3.684,1087,7.16,1088,4.733,1089,3.684,1090,5.447,1091,3.684,1092,5.447,1093,5.447,1094,5.447,1095,3.684,1096,3.457,1097,4.475,1098,5.447,1099,5.447,1100,8.275,1101,7.64,1102,5.447,1103,3.684,1104,4.861,1105,2.926,1106,3.684,1107,5.447,1108,4.861,1109,2.174,1110,3.684,1111,3.684,1112,3.684,1113,3.684,1114,3.684,1115,5.447,1116,3.684,1117,5.447,1118,3.287,1119,5.447,1120,3.287,1121,6.48,1122,5.447,1123,5.447,1124,3.684,1125,3.684,1126,4.186,1127,5.447,1128,3.684,1129,5.503,1130,5.447,1131,5.447,1132,5.447,1133,4.861,1134,5.447,1135,5.447]],["title/classes/DataInputElement.html",[0,0.34,1029,2.643]],["body/classes/DataInputElement.html",[0,0.679,2,0.391,3,0.063,4,0.055,5,0.063,7,1.087,9,1.02,11,0.654,14,0.086,15,0.233,18,0.138,19,0.006,20,0.425,21,0.117,27,1.539,28,3.765,31,3.387,32,2.094,34,0.101,37,0.603,41,3.4,46,2.298,47,2.089,49,1.431,50,3.252,53,0.011,54,0.011,55,0.011,56,0.011,94,1.239,157,1.414,330,2.015,347,1.626,357,0.527,398,2.549,412,1.91,484,2.314,559,1.944,657,3.387,665,4.188,723,1.844,751,2.665,770,2.358,1013,5.83,1014,4.065,1015,3.765,1016,4.351,1017,6.054,1018,3.765,1019,3.765,1025,3.283,1026,5.093,1027,3.501,1029,4.188,1030,3.765,1031,5.288,1032,3.626,1033,3.014,1034,3.626,1035,3.765,1036,3.765,1037,4.466,1038,3.387,1039,3.765,1040,3.626,1041,3.626,1042,3.098,1043,3.765,1044,3.765,1045,3.626,1046,2.874,1047,4.188,1048,3.765,1049,4.321,1050,3.626,1051,3.626,1052,3.626,1053,3.501,1054,3.765,1136,5.933]],["title/classes/DataInputReturned.html",[0,0.34,1047,2.643]],["body/classes/DataInputReturned.html",[0,0.676,2,0.381,3,0.061,4,0.054,5,0.061,7,1.058,9,0.993,11,0.637,14,0.084,15,0.229,18,0.14,19,0.006,20,0.424,21,0.163,27,1.498,32,2.059,34,0.101,37,0.656,41,3.366,46,2.238,47,2.62,49,1.407,50,3.226,53,0.011,54,0.011,55,0.011,56,0.011,90,1.407,94,1.269,157,1.4,330,2.526,347,1.606,357,0.513,398,2.482,412,1.86,484,2.275,559,1.893,657,3.298,665,3.197,675,2.283,723,1.821,751,2.595,770,2.345,1013,5.724,1014,4.668,1015,3.666,1016,3.884,1017,6.021,1018,3.666,1019,3.666,1025,3.197,1026,5.029,1027,3.409,1029,3.197,1030,3.666,1031,5.222,1032,3.531,1033,2.935,1034,3.531,1035,3.666,1036,3.666,1037,4.39,1038,3.298,1039,3.666,1040,3.531,1041,3.531,1042,3.016,1043,3.666,1044,3.666,1045,3.531,1046,3.125,1047,4.809,1048,3.666,1049,4.248,1050,5.029,1051,5.029,1052,4.547,1053,4.39,1054,3.666,1137,5.776,1138,5.776,1139,5.776]],["title/classes/DataInputReturnedV2.html",[0,0.34,1140,3.924]],["body/classes/DataInputReturnedV2.html",[0,0.521,2,0.482,3,0.078,4,0.068,5,0.078,7,1.34,14,0.106,15,0.265,18,0.137,19,0.006,20,0.377,21,0.181,32,2.025,34,0.078,47,2.577,53,0.013,54,0.013,55,0.013,56,0.013,157,1.521,723,1.619,770,1.809,982,4.911,1014,5.069,1046,2.779,1140,7.07,1141,7.317,1142,7.317,1143,7.317,1144,8.159,1145,8.159,1146,7.317,1147,7.317,1148,7.317]],["title/classes/DataInputSelection.html",[0,0.34,1034,2.919]],["body/classes/DataInputSelection.html",[0,0.665,2,0.352,3,0.057,4,0.05,5,0.057,7,0.979,9,0.918,11,0.589,14,0.077,15,0.217,18,0.143,19,0.006,20,0.429,21,0.187,27,1.385,32,1.478,34,0.099,37,0.672,41,2.738,46,2.069,47,1.881,49,1.594,50,3.348,53,0.01,54,0.01,55,0.01,56,0.01,90,1.764,94,1.272,157,1.413,330,1.814,347,1.645,353,4.143,354,2.577,357,0.628,398,2.295,412,1.72,484,2.162,559,1.751,657,4.524,665,2.956,723,1.564,751,2.4,770,2.307,1013,6.002,1014,4.53,1015,3.39,1016,3.691,1017,5.922,1018,5.028,1019,5.028,1025,3.912,1026,5.618,1027,4.172,1029,2.956,1030,3.39,1031,5.351,1032,3.265,1033,2.714,1034,4.321,1035,5.028,1036,5.028,1037,4.675,1038,3.05,1039,3.39,1040,3.265,1041,3.265,1042,2.789,1043,3.39,1044,3.39,1045,3.265,1046,2.685,1047,3.912,1048,3.39,1049,4.036,1050,3.265,1051,3.265,1052,3.265,1053,3.153,1054,3.39,1056,4.389,1057,4.389,1058,4.389,1059,4.389,1060,4.389,1061,4.389,1149,5.342,1150,5.342,1151,5.342]],["title/classes/DataInputText.html",[0,0.34,1032,2.919]],["body/classes/DataInputText.html",[0,0.667,2,0.358,3,0.058,4,0.051,5,0.058,7,0.995,9,0.934,11,0.599,14,0.079,15,0.22,18,0.142,19,0.006,20,0.431,21,0.182,27,1.409,32,1.503,34,0.099,37,0.676,41,2.769,46,2.104,47,1.913,49,1.605,50,3.399,53,0.01,54,0.01,55,0.01,56,0.01,90,1.771,94,1.245,157,1.421,330,1.845,347,1.656,353,4.162,354,2.589,357,0.482,398,2.334,412,1.749,484,2.186,559,1.78,657,4.561,665,3.006,723,1.582,751,2.44,770,2.315,1013,6.014,1014,3.84,1015,3.448,1016,3.732,1017,5.943,1018,5.07,1019,5.07,1025,3.955,1026,5.188,1027,4.218,1029,3.006,1030,4.536,1031,5.386,1032,4.369,1033,4.059,1034,3.32,1035,3.448,1036,3.448,1037,4.218,1038,3.102,1039,3.448,1040,3.32,1041,3.32,1042,2.836,1043,3.448,1044,3.448,1045,3.32,1046,2.715,1047,3.955,1048,3.448,1049,4.081,1050,3.32,1051,3.32,1052,3.32,1053,3.206,1054,3.448,1056,4.463,1057,4.463,1058,4.463,1059,4.463,1060,4.463,1061,4.463,1152,5.432]],["title/components/DataInputV2Component.html",[57,0.977,156,1.966]],["body/components/DataInputV2Component.html",[0,0.176,3,0.026,4,0.023,5,0.026,7,0.451,8,2.025,11,0.984,12,1.659,14,0.036,15,0.123,18,0.129,19,0.006,20,0.313,21,0.18,24,0.19,26,0.66,27,1.759,28,4.023,29,0.808,31,2.868,32,2.125,33,0.954,34,0.026,37,0.655,38,0.572,39,0.803,41,0.954,44,0.924,45,2.95,47,2.618,48,1.014,49,0.466,50,2.951,52,0.884,53,0.005,54,0.005,55,0.005,56,0.005,57,0.816,58,1.014,59,0.954,60,1.059,61,1.059,62,1.059,64,1.059,65,4.022,66,3.726,68,1.677,70,1.677,80,3.357,81,1.165,83,2.207,84,3.194,88,1.303,89,1.303,90,1.35,94,1.008,95,3.082,96,1.515,97,1.562,114,3.23,118,0.793,130,2.024,141,1.059,142,1.713,143,1.262,144,1.059,145,1.706,146,1.059,147,0.994,148,0.545,149,1.082,150,0.994,151,2.206,152,1.036,153,2.068,154,2.12,155,1.082,156,2.793,157,1.618,158,1.082,159,1.014,160,1.082,161,1.082,162,0.974,163,1.082,164,0.994,165,1.082,166,0.974,167,0.994,168,1.082,169,0.974,170,0.974,171,1.082,172,1.082,173,1.014,174,1.082,175,0.974,176,1.014,177,1.082,178,1.036,179,1.339,180,1.036,181,1.751,182,1.036,183,1.036,184,0.974,185,0.974,186,1.082,187,0.974,188,0.974,189,0.974,190,1.082,191,0.994,192,1.082,193,1.082,194,1.082,222,1.051,228,1.631,229,1.906,294,8.171,310,2.362,316,1.036,321,0.793,322,2.068,402,1.871,405,1.945,423,1.082,428,1.859,434,1.783,455,0.66,476,1.33,484,2.349,526,1.657,607,1.252,608,1.564,624,1.454,629,1.199,657,3.295,667,0.837,721,0.837,722,0.837,723,2.037,727,3.32,731,1.107,732,3.188,744,3.528,747,3.061,753,2.009,765,3.528,770,2.222,776,1.576,777,2.896,780,3.208,781,3.065,784,3.862,787,0.837,788,3.32,789,2.636,802,3.994,806,5.139,826,2.353,844,2.207,861,3.558,960,2.006,965,3.065,967,2.552,982,2.698,993,2.024,995,3.295,1007,3.619,1014,4.919,1016,1.287,1025,3.754,1026,3.874,1027,4.214,1029,4.939,1033,1.252,1037,4.003,1041,3.07,1046,1.908,1047,3.508,1049,1.407,1063,4.532,1064,3.558,1066,3.86,1070,3.065,1071,6.108,1072,3.558,1073,3.276,1074,3.558,1075,2.277,1076,2.277,1084,1.79,1088,4.915,1104,5.151,1109,1.454,1140,4.126,1144,2.199,1145,2.199,1153,2.464,1154,2.756,1155,3.558,1156,4.192,1157,3.987,1158,6.339,1159,3.987,1160,3.987,1161,5.022,1162,3.987,1163,6.783,1164,5.772,1165,6.339,1166,6.783,1167,6.783,1168,5.772,1169,6.783,1170,5.022,1171,5.022,1172,5.151,1173,5.022,1174,3.065,1175,3.987,1176,2.464,1177,6.783,1178,2.464,1179,5.151,1180,4.927,1181,5.772,1182,2.785,1183,5.772,1184,3.987,1185,2.756,1186,2.464,1187,3.987,1188,3.987,1189,3.987,1190,3.558,1191,3.987,1192,3.987,1193,3.276,1194,2.464,1195,3.276,1196,3.987,1197,5.772,1198,2.464,1199,2.464,1200,2.464,1201,3.987,1202,2.896,1203,3.987,1204,4.436,1205,5.022,1206,3.648,1207,5.022,1208,5.022,1209,2.723,1210,5.022,1211,4.482,1212,2.623,1213,2.424,1214,3.86,1215,5.022,1216,5.022,1217,5.022,1218,2.464,1219,3.987,1220,3.987,1221,2.464,1222,2.199,1223,2.464,1224,1.703,1225,2.464,1226,2.464,1227,2.464,1228,2.464,1229,2.207,1230,3.987,1231,2.464,1232,2.199,1233,2.464,1234,3.276,1235,3.987,1236,2.464,1237,2.464,1238,2.464,1239,2.199,1240,2.464,1241,2.464,1242,3.987,1243,2.464,1244,2.464,1245,5.772,1246,3.987,1247,5.022,1248,2.024,1249,2.464,1250,2.464,1251,6.339,1252,3.987,1253,2.464,1254,2.464,1255,2.464,1256,2.464,1257,6.339,1258,5.022,1259,2.464,1260,2.464,1261,2.464,1262,2.464,1263,2.464,1264,2.464,1265,5.772,1266,2.464,1267,5.022,1268,2.464,1269,2.464,1270,3.987,1271,1.564,1272,1.564,1273,3.987,1274,4.126,1275,2.464,1276,3.987,1277,2.142,1278,1.454,1279,2.199,1280,2.464,1281,2.464,1282,3.987]],["title/components/DataItemComponent.html",[57,0.977,159,1.966]],["body/components/DataItemComponent.html",[0,0.258,2,0.239,3,0.038,4,0.034,5,0.038,7,0.664,8,3.207,11,0.593,12,1.599,14,0.053,15,0.166,18,0.127,19,0.006,20,0.379,21,0.174,24,0.137,26,0.971,27,1.843,32,2.391,33,1.404,34,0.038,37,0.429,38,0.773,39,1.084,44,1.034,47,2.801,48,1.493,50,1.931,52,1.301,53,0.007,54,0.007,55,0.007,56,0.007,57,1.101,58,1.493,59,1.404,60,1.558,61,1.558,62,1.558,64,1.558,65,4.205,66,3.947,68,2.263,70,2.263,80,3.757,81,1.489,83,3.553,84,3.932,88,0.94,89,0.94,90,0.686,94,1.072,95,2.954,96,2.883,97,2.21,114,3.633,116,2.007,118,1.733,131,3.91,138,3.72,139,1.351,141,1.558,142,2.313,143,1.147,144,1.558,145,2.101,146,1.558,147,1.462,148,0.613,149,1.592,150,1.462,151,2.82,152,1.524,153,1.493,154,2.025,155,1.592,156,1.493,157,1.47,158,1.592,159,3.274,160,2.82,161,1.592,162,1.433,163,1.592,164,1.462,165,1.592,166,1.433,167,1.462,168,1.592,169,1.433,170,1.433,171,1.592,172,1.592,173,1.493,174,1.592,175,1.433,176,1.493,177,1.592,178,1.524,179,1.648,180,1.524,181,2.364,182,1.524,183,1.524,184,1.433,185,1.433,186,1.592,187,1.433,188,1.433,189,1.433,190,1.592,191,1.462,192,1.592,193,1.592,194,1.592,219,2.979,222,1.419,228,1.229,229,1.619,302,7.96,310,1.351,428,1.733,471,1.325,526,1.845,607,1.842,610,2.313,723,2.129,751,1.629,753,1.999,754,2.892,755,1.828,770,2.173,780,3.192,784,3.416,786,3.177,789,3.558,806,3.72,831,1.109,863,4.422,960,2.101,997,4.272,998,4.342,1000,2.787,1001,3.666,1005,2.301,1011,2.979,1014,4.792,1063,3.416,1065,4.422,1069,3.72,1075,3.074,1076,3.074,1084,2.633,1088,4.696,1109,2.14,1154,4.91,1156,3.91,1179,6.34,1202,3.91,1206,3.91,1209,2.313,1214,4.137,1232,4.804,1274,2.979,1277,1.948,1278,2.14,1279,3.236,1283,3.626,1284,5.383,1285,5.383,1286,5.383,1287,5.383,1288,5.383,1289,5.383,1290,5.383,1291,4.804,1292,7.952,1293,4.696,1294,7.104,1295,4.137,1296,8.233,1297,6.42,1298,6.42,1299,5.383,1300,5.729,1301,5.729,1302,5.729,1303,6.34,1304,8.457,1305,6.773,1306,6.42,1307,5.383,1308,3.626,1309,5.383,1310,5.383,1311,3.626,1312,4.422,1313,4.137,1314,5.383,1315,3.626,1316,3.626,1317,5.16,1318,5.16,1319,5.383,1320,3.626,1321,2.892,1322,3.626,1323,4.804,1324,5.383,1325,7.418,1326,4.804,1327,4.804,1328,3.626,1329,4.422,1330,4.422,1331,4.479,1332,3.626,1333,3.626,1334,3.236,1335,4.804,1336,3.626,1337,4.422,1338,3.236,1339,5.274,1340,3.626,1341,4.663,1342,3.626,1343,3.626,1344,3.626,1345,3.236,1346,3.626,1347,3.626,1348,5.729,1349,3.626,1350,4.804,1351,5.383,1352,6.42,1353,3.626]],["title/classes/DataRouteComposer.html",[0,0.34,793,3.301]],["body/classes/DataRouteComposer.html",[0,0.406,2,0.259,3,0.042,4,0.037,5,0.042,7,0.719,9,1.268,11,0.987,12,1.482,14,0.057,15,0.227,18,0.13,19,0.006,20,0.358,21,0.146,27,1.743,34,0.1,37,0.588,38,1.125,39,1.353,44,0.88,45,1.937,47,2.367,49,0.742,53,0.007,54,0.007,55,0.007,56,0.007,74,4.213,148,0.477,154,0.939,196,2.865,247,3.77,251,3.77,350,1.137,354,2.242,357,0.348,402,1.462,410,1.762,412,2.376,413,1.735,425,1.937,428,1.837,430,2.622,435,2.242,451,0.754,518,1.954,531,1.767,557,2.282,608,2.49,704,2.506,723,2.066,726,2.562,727,2.593,729,1.434,747,2.767,751,3.521,770,1.41,785,2.898,787,2.506,793,3.942,800,2.85,802,4.534,806,4.645,818,4.877,830,4.975,874,2.711,882,2.711,960,2.182,997,4.811,1209,1.685,1354,3.223,1355,5.998,1356,5.998,1357,3.923,1358,3.923,1359,3.923,1360,3.923,1361,7.114,1362,3.015,1363,3.947,1364,3.223,1365,2.711,1366,4.686,1367,4.686,1368,3.223,1369,3.223,1370,3.501,1371,3.501,1372,3.223,1373,3.223,1374,2.711,1375,3.223,1376,3.223,1377,3.223,1378,3.223,1379,3.223,1380,3.223,1381,3.223,1382,2.315,1383,3.223,1384,3.223,1385,3.223,1386,3.015,1387,3.223,1388,3.223,1389,2.24,1390,2.85,1391,1.993,1392,4.213,1393,4.686,1394,4.686,1395,4.686,1396,3.223,1397,3.09,1398,2.049,1399,6.094,1400,6.585,1401,5.521,1402,5.834,1403,5.834,1404,6.488,1405,8.025,1406,6.488,1407,6.488,1408,3.223,1409,3.223,1410,2.315,1411,5.521,1412,4.384,1413,2.593,1414,3.015,1415,3.015,1416,3.223,1417,2.451,1418,4.686,1419,4.686,1420,4.686,1421,4.384,1422,5.166,1423,4.384,1424,4.686,1425,4.384,1426,4.686,1427,4.686,1428,4.686,1429,4.686,1430,4.686,1431,4.686,1432,4.686,1433,4.686,1434,3.223,1435,3.501,1436,3.223,1437,3.223,1438,3.223,1439,3.223,1440,4.686,1441,4.686,1442,4.686,1443,4.686,1444,4.686,1445,3.015,1446,4.686,1447,3.223,1448,3.501,1449,3.501,1450,3.501,1451,3.501,1452,3.501]],["title/classes/DataRouteVisualizer.html",[0,0.34,1390,3.469]],["body/classes/DataRouteVisualizer.html",[0,0.41,2,0.262,3,0.042,4,0.037,5,0.042,7,0.727,9,1.275,11,0.99,12,1.489,14,0.057,15,0.228,18,0.126,19,0.006,20,0.296,21,0.114,27,1.754,34,0.101,37,0.591,38,1.131,39,1.362,44,0.884,45,1.953,47,2.382,49,1.279,53,0.007,54,0.007,55,0.007,56,0.007,74,4.236,148,0.282,154,0.95,196,2.879,247,3.802,251,3.802,350,0.671,354,2.252,357,0.511,402,1.478,410,1.783,412,2.389,413,1.743,425,1.953,428,1.852,430,2.644,435,2.257,451,0.762,518,1.154,531,1.776,557,2.297,608,2.518,704,2.519,723,2.07,726,1.783,727,2.623,729,1.451,747,2.785,751,3.538,770,1.422,785,2.922,787,2.519,793,2.743,800,2.882,802,4.55,806,4.675,818,4.904,830,4.998,874,2.743,882,2.743,960,2.193,997,4.824,1209,1.705,1354,3.26,1355,6.037,1356,6.037,1361,7.122,1362,3.05,1363,3.962,1364,3.26,1365,2.743,1366,4.725,1367,4.725,1368,3.26,1369,3.26,1370,3.541,1371,3.541,1372,3.26,1373,3.26,1374,2.743,1375,3.26,1376,3.26,1377,3.26,1378,3.26,1379,3.26,1380,3.26,1381,3.26,1382,2.342,1383,3.26,1384,3.26,1385,3.26,1386,3.05,1387,3.26,1388,3.26,1389,3.284,1390,4.178,1391,2.016,1392,4.236,1393,4.725,1394,4.725,1395,4.725,1396,3.26,1397,3.11,1398,2.072,1399,6.111,1400,6.62,1401,5.557,1402,5.854,1403,5.854,1404,6.51,1405,8.035,1406,6.51,1407,6.51,1408,3.26,1409,3.26,1410,2.342,1411,5.557,1412,4.421,1413,2.623,1414,3.05,1415,3.05,1416,3.26,1417,2.471,1418,4.725,1419,4.725,1420,4.725,1421,4.421,1422,5.199,1423,4.421,1424,4.725,1425,4.421,1426,4.725,1427,4.725,1428,4.725,1429,4.725,1430,4.725,1431,4.725,1432,4.725,1433,4.725,1434,3.26,1435,3.541,1436,3.26,1437,3.26,1438,3.26,1439,3.26,1440,4.725,1441,4.725,1442,4.725,1443,4.725,1444,4.725,1445,3.05,1446,4.725,1447,3.26,1448,3.541,1449,3.541,1450,3.541,1451,3.541,1452,3.541,1453,3.968,1454,3.968]],["title/classes/DeployInstanceDTO.html",[0,0.34,680,3.031]],["body/classes/DeployInstanceDTO.html",[0,0.677,2,0.408,3,0.066,4,0.058,5,0.066,14,0.09,15,0.239,18,0.129,19,0.006,20,0.449,21,0.176,24,0.234,34,0.102,49,1.606,53,0.011,54,0.011,55,0.011,56,0.011,90,1.469,94,0.873,148,0.603,309,2.843,320,1.553,350,1.437,351,1.891,357,0.791,360,1.768,384,1.739,385,1.768,499,0.996,502,2.349,508,2.26,509,2.26,510,2.26,511,2.26,512,2.26,513,2.26,514,2.26,515,2.26,516,2.26,518,1.798,529,1.924,541,2.304,546,2.349,566,2.063,567,2.026,671,4.748,672,4.087,678,4.748,679,4.748,680,4.93,681,5.614,682,5.391,683,5.614,684,5.614,685,4.087,686,4.93,687,4.087,688,4.087,689,2.395,690,4.087,691,4.748,692,4.087,693,3.924,694,3.924,695,3.924,696,4.087,697,4.087,698,3.924,699,3.779,700,3.924,1455,6.183,1456,6.183,1457,6.183,1458,6.183]],["title/components/DocsComponent.html",[57,0.977,162,1.887]],["body/components/DocsComponent.html",[0,0.358,3,0.053,4,0.047,5,0.053,7,0.92,11,0.748,14,0.073,15,0.209,18,0.111,19,0.006,20,0.36,21,0.163,24,0.291,26,1.345,27,1.759,29,2.222,32,2.377,34,0.053,37,0.54,44,0.994,45,2.303,47,2.896,50,1.801,52,1.801,57,1.387,59,1.945,60,2.157,61,2.157,62,2.157,64,2.157,65,2.913,66,2.792,68,2.851,70,2.851,81,1.782,88,1.302,89,1.302,90,0.949,95,1.801,96,1.907,112,1.645,113,3.643,114,3.722,118,2.184,141,2.157,142,3.533,143,1.589,144,2.157,145,1.484,146,2.157,154,1.624,162,3.25,222,1.787,228,1.146,229,2.039,231,4.124,232,3.858,273,3.318,309,2.308,310,1.87,321,1.617,330,2.303,354,1.939,410,3.046,426,2.913,588,5.973,590,5.973,612,4.48,624,5.069,667,2.608,721,2.303,722,2.303,723,1.82,731,2.255,732,4.873,744,5.026,753,1.908,770,2.033,776,2.68,777,4.925,780,3.046,784,3.533,785,4.178,831,2.074,960,2.617,1004,4.48,1009,3.446,1011,4.551,1154,4.687,1209,2.913,1214,5.212,1459,5.02,1460,6.051,1461,8.851,1462,6.781,1463,6.781,1464,6.781,1465,6.781,1466,7.679,1467,6.781,1468,8.589,1469,7.679,1470,5.02,1471,8.851,1472,6.781,1473,6.781,1474,7.679,1475,5.02,1476,6.051,1477,6.051,1478,8.223,1479,5.02,1480,6.781,1481,6.051,1482,6.781,1483,6.781,1484,6.781,1485,4.482,1486,4.48,1487,4.48,1488,6.051,1489,5.02,1490,5.02,1491,5.02,1492,5.02,1493,5.02,1494,5.02,1495,6.781,1496,6.781,1497,5.02,1498,5.026,1499,3.541,1500,3.186,1501,5.84,1502,5.02,1503,5.02,1504,5.02,1505,3.858,1506,4.125,1507,5.02,1508,5.02,1509,5.02,1510,5.02,1511,5.02]],["title/classes/ElementIntoTheaterDTO.html",[0,0.34,541,1.779]],["body/classes/ElementIntoTheaterDTO.html",[0,0.698,2,0.298,3,0.048,4,0.042,5,0.048,13,1.118,14,0.066,15,0.194,18,0.091,19,0.006,20,0.451,21,0.125,24,0.276,34,0.104,37,0.727,38,1.13,39,0.911,49,1.664,53,0.008,54,0.008,55,0.008,56,0.008,94,1.168,148,0.678,157,0.729,330,1.536,347,0.882,348,1.508,349,1.986,350,1.488,351,2.406,357,0.875,360,2.079,380,1.407,381,2.406,382,2.262,383,2.579,384,1.272,385,1.805,386,2.105,451,1.59,455,1.691,459,2.031,466,2.654,467,2.654,468,2.031,469,2.816,470,1.943,471,1.653,472,2.031,473,2.031,474,2.031,475,2.031,476,1.508,477,1.943,478,2.031,479,1.986,480,1.508,481,3.38,482,2.031,483,2.031,484,1.383,485,2.712,486,2.031,487,2.835,488,2.031,489,2.031,490,3.864,491,1.622,492,2.712,493,2.031,494,2.031,495,2.031,496,2.031,497,2.031,498,2.031,499,1.268,500,2.031,501,2.712,502,1.718,503,2.654,504,2.031,505,2.772,506,2.031,507,2.031,508,1.653,509,1.653,510,1.653,511,1.653,512,1.653,513,1.653,514,1.653,515,1.653,516,1.653,517,1.986,518,1.835,519,1.986,520,1.986,521,1.986,522,1.986,523,1.986,524,1.986,525,1.986,526,1.049,527,1.585,528,1.986,529,1.963,530,2.031,531,1.083,532,2.031,533,2.545,534,1.192,535,1.685,536,1.36,537,1.431,538,1.718,539,2.772,540,1.653,541,2.351,542,2.031,543,1.901,544,1.986,545,2.031,546,1.718,1512,4.522,1513,4.522]],["title/classes/EmptyModuleInfo.html",[0,0.34,1514,4.262]],["body/classes/EmptyModuleInfo.html",[0,0.373,2,0.345,3,0.056,4,0.049,5,0.056,7,0.958,9,1.348,11,0.864,14,0.076,15,0.214,18,0.132,19,0.006,21,0.181,24,0.297,27,1.808,34,0.083,44,0.939,53,0.01,54,0.01,55,0.01,56,0.01,57,1.07,95,3.28,96,3.473,179,2.182,254,2.841,309,2.406,310,2.921,364,2.529,370,4.403,372,3.605,374,3.605,406,2.455,412,1.685,424,3.062,425,2.663,428,1.685,558,1.745,665,3.858,667,2.368,723,1.158,751,3.132,755,2.368,760,5.064,770,2.26,787,2.368,826,3.088,978,4.021,997,4.492,1042,2.732,1097,5.728,1195,4.298,1361,5.064,1363,2.525,1399,5.78,1401,4.298,1402,5.78,1403,5.78,1404,6.427,1405,7.631,1406,6.427,1407,6.427,1505,3.913,1514,6.222,1515,8.289,1516,4.669,1517,3.64,1518,6.222,1519,3.64,1520,7.457,1521,6.694,1522,6.694,1523,5.232,1524,5.232,1525,5.232,1526,5.232,1527,5.232,1528,5.232,1529,5.232,1530,4.609,1531,5.232,1532,5.064,1533,5.232,1534,5.064,1535,5.232,1536,5.064,1537,4.298,1538,4.298,1539,3.321,1540,4.298,1541,4.669,1542,4.669,1543,5.232,1544,3.321,1545,4.669,1546,3.458,1547,4.669,1548,2.659,1549,1.913,1550,5.232]],["title/classes/EmptyNodeInfo.html",[0,0.34,1551,4.262]],["body/classes/EmptyNodeInfo.html",[0,0.416,2,0.385,3,0.062,4,0.055,5,0.062,7,1.07,9,1.421,11,0.912,14,0.085,15,0.23,18,0.12,19,0.006,21,0.164,24,0.314,27,1.943,34,0.088,44,0.98,53,0.011,54,0.011,55,0.011,56,0.011,57,1.195,95,2.967,96,3.141,179,2.093,254,2.668,309,2.685,310,3.081,363,3.553,364,2.375,366,3.553,368,3.268,406,2.638,412,1.88,424,3.29,425,2.809,428,1.88,531,2.089,558,1.948,665,4.146,667,1.983,704,2.963,723,1.292,751,3.365,755,2.544,760,5.441,770,2.32,787,2.544,826,3.446,978,4.488,1042,3.049,1097,6.154,1195,4.797,1361,5.441,1363,2.818,1392,4.982,1505,2.623,1517,3.911,1518,6.685,1519,3.911,1536,5.441,1537,4.797,1538,4.797,1539,3.706,1540,4.797,1541,6.685,1544,3.706,1545,5.211,1546,3.86,1547,5.211,1548,2.967,1549,2.135,1551,6.685,1552,7.786,1553,5.211,1554,6.934,1555,6.934,1556,6.934,1557,9.604,1558,5.839,1559,5.839,1560,5.839,1561,5.441,1562,5.839,1563,5.441,1564,5.839,1565,5.441,1566,5.839,1567,5.211]],["title/classes/EntityNameMappingFileDTO.html",[0,0.34,691,2.919]],["body/classes/EntityNameMappingFileDTO.html",[0,0.682,2,0.42,3,0.068,4,0.059,5,0.068,14,0.092,15,0.243,18,0.092,19,0.006,20,0.449,21,0.126,24,0.242,34,0.103,49,1.628,53,0.012,54,0.012,55,0.012,56,0.012,94,0.899,148,0.611,309,2.929,320,1.6,350,1.456,351,1.948,357,0.799,360,1.822,384,1.792,385,1.822,499,1.027,502,2.42,508,2.329,509,2.329,510,2.329,511,2.329,512,2.329,513,2.329,514,2.329,515,2.329,516,2.329,518,1.852,529,1.982,541,2.374,546,2.42,566,2.125,567,2.088,671,4.838,672,4.211,678,4.838,679,4.838,680,4.043,681,4.211,682,4.043,683,4.211,684,4.211,685,4.211,686,5.464,687,4.211,688,4.211,689,2.468,690,4.211,691,5.263,692,5.691,693,4.043,694,4.043,695,4.043,696,4.211,697,4.211,698,4.043,699,3.894,700,4.043,1568,6.371]],["title/classes/ExportModule.html",[0,0.34,1569,3.924]],["body/classes/ExportModule.html",[0,0.163,2,0.151,3,0.024,4,0.021,5,0.024,7,0.42,9,1.451,11,0.849,12,1.415,13,0.567,14,0.033,15,0.116,18,0.112,19,0.006,20,0.409,21,0.152,24,0.231,29,1.566,31,1.309,34,0.024,37,0.707,38,0.941,41,0.888,43,2.485,44,1.016,47,1.324,53,0.004,54,0.004,55,0.004,56,0.004,81,1.737,88,1.583,89,1.796,90,1.154,94,0.324,95,0.822,96,0.871,97,1.169,114,3.148,118,2.112,143,1.512,148,0.619,154,1.658,196,0.838,216,1.456,222,0.991,228,1.76,310,0.854,322,0.944,350,0.388,357,0.582,389,0.713,390,0.634,397,1.167,412,2.23,413,1.93,414,2.976,417,3.015,422,1.079,423,2.88,425,0.778,428,2.411,430,1.728,431,1.106,433,2.197,434,2.495,451,1.062,499,0.369,526,1.283,527,0.576,531,1.994,551,0.822,552,0.822,554,0.822,558,2.187,563,1.349,564,1.349,595,5.013,629,2.251,675,2.185,704,2.867,707,2.643,714,0.888,718,2.921,721,2.227,722,2.227,723,1.99,727,2.485,729,2.945,747,2.513,748,2.02,751,1.689,753,2.266,765,2.921,770,2.059,778,2.889,784,2.817,787,1.277,788,1.515,802,3.884,820,0.871,826,2.219,831,2.005,844,4.001,849,2.306,854,1.883,859,2.485,860,2.731,899,1.03,900,1.03,901,1.03,908,1.007,909,1.007,910,1.007,911,1.007,912,1.007,913,3.31,914,3.539,915,3.288,916,3.288,917,3.176,918,3.176,922,1.007,923,1.03,924,1.03,926,1.689,928,1.03,929,2.428,933,1.615,935,2.147,936,2.375,937,1.007,938,1.967,939,2.147,941,2.185,943,1.689,944,1.689,946,1.007,947,1.03,948,1.03,949,1.03,960,1.939,982,2.97,1063,2.386,1180,3.471,1185,2.598,1206,2.731,1213,3.164,1224,3.821,1248,1.883,1339,1.883,1365,1.584,1391,1.165,1397,3.324,1412,2.889,1415,2.889,1417,2.817,1481,2.046,1505,3.248,1544,3.509,1549,2.532,1569,4.542,1570,2.292,1571,3.088,1572,4.249,1573,6.452,1574,6.926,1575,5.529,1576,3.759,1577,6.558,1578,5.529,1579,5.529,1580,5.529,1581,3.759,1582,3.759,1583,2.292,1584,4.542,1585,4.542,1586,5.852,1587,2.292,1588,3.355,1589,3.759,1590,2.598,1591,6.103,1592,2.292,1593,5.093,1594,3.355,1595,3.355,1596,2.731,1597,4.265,1598,3.355,1599,3.355,1600,3.355,1601,3.355,1602,3.355,1603,3.355,1604,4.934,1605,3.088,1606,3.355,1607,3.759,1608,2.292,1609,3.088,1610,3.759,1611,3.759,1612,2.02,1613,4.631,1614,3.759,1615,2.292,1616,3.759,1617,4.022,1618,5.69,1619,3.759,1620,3.088,1621,3.759,1622,4.265,1623,5.852,1624,2.292,1625,3.088,1626,3.355,1627,5.387,1628,5.852,1629,5.04,1630,2.889,1631,3.759,1632,3.759,1633,2.292,1634,3.759,1635,3.759,1636,2.292,1637,3.759,1638,3.759,1639,3.759,1640,3.355,1641,2.292,1642,4.779,1643,1.165,1644,1.455,1645,2.046,1646,2.046,1647,2.046,1648,2.292,1649,2.046,1650,2.292,1651,3.759,1652,2.292,1653,2.292,1654,2.292,1655,6.876,1656,3.355,1657,3.355,1658,4.779,1659,1.883,1660,3.355,1661,2.292,1662,1.883,1663,2.292,1664,1.883,1665,2.292,1666,2.292,1667,3.759,1668,2.292,1669,2.292,1670,2.292,1671,2.292,1672,2.292,1673,2.046,1674,2.292,1675,2.292,1676,3.759,1677,5.529,1678,2.292,1679,2.292,1680,2.292,1681,2.485,1682,2.946,1683,3.759,1684,2.292,1685,4.779,1686,2.292,1687,2.292,1688,2.292,1689,3.759,1690,6.181,1691,2.292,1692,2.292,1693,2.292,1694,3.759,1695,2.292,1696,2.292,1697,2.292,1698,2.292,1699,2.292,1700,2.889,1701,3.673,1702,2.292,1703,2.292,1704,2.292,1705,2.292,1706,4.265,1707,3.759,1708,2.292,1709,3.759,1710,2.292,1711,2.292,1712,2.292,1713,2.292,1714,2.292,1715,2.292,1716,2.292,1717,3.759,1718,3.759,1719,2.292,1720,2.292,1721,2.292,1722,3.759,1723,2.292,1724,2.292,1725,2.292,1726,2.292,1727,2.292,1728,2.292,1729,2.292,1730,2.292,1731,3.759,1732,2.292,1733,2.292,1734,2.046,1735,2.292,1736,2.046,1737,2.292,1738,2.292,1739,2.292,1740,3.759,1741,3.759,1742,2.292,1743,3.759,1744,2.292,1745,2.292,1746,2.292,1747,2.292,1748,3.759,1749,2.292,1750,1.665,1751,1.762,1752,3.759,1753,2.292,1754,2.292,1755,2.292,1756,2.292,1757,2.292,1758,2.292,1759,2.292,1760,2.292,1761,4.265]],["title/injectables/ExportService.html",[580,1.926,1762,4.262]],["body/injectables/ExportService.html",[0,0.254,3,0.038,4,0.033,5,0.087,7,0.653,14,0.052,15,0.163,18,0.127,19,0.006,20,0.346,21,0.17,24,0.326,26,0.955,34,0.038,37,0.424,38,1.175,39,1.28,44,1.047,45,3.165,53,0.007,54,0.007,55,0.007,56,0.007,67,1.811,81,0.827,88,2.049,89,2.271,90,1.494,95,1.907,96,2.019,112,1.742,114,3.323,145,1.571,154,2.27,222,1.401,228,1.805,229,2.376,309,3.633,310,2.625,322,2.9,354,1.52,412,2.269,413,1.937,414,3.517,417,4.025,428,2.71,434,2.582,435,2.92,450,3.517,556,3.352,563,1.907,564,2.835,565,2.941,580,2.143,582,1.915,602,3.181,603,3.181,604,6.344,605,2.928,606,1.915,615,4.366,618,5.415,619,4.743,621,4.743,622,4.743,623,4.743,624,3.136,625,4.743,626,4.743,627,4.743,628,4.743,629,2.118,699,3.249,723,2.108,747,3.464,748,3.785,753,2.531,754,4.52,764,3.86,770,2.224,784,3.027,785,3.58,802,4.52,818,2.356,820,1.354,831,2.752,913,2.283,976,4.085,1182,3.4,1476,6.287,1546,6.161,1569,5.788,1572,6.916,1643,1.811,1644,2.262,1645,3.181,1762,4.743,1763,3.564,1764,3.373,1765,5.315,1766,2.855,1767,6.492,1768,5.315,1769,4.743,1770,4.085,1771,5.315,1772,5.315,1773,5.315,1774,5.315,1775,7.902,1776,7.902,1777,5.315,1778,5.315,1779,3.564,1780,7.045,1781,5.315,1782,3.564,1783,7.045,1784,5.315,1785,3.564,1786,5.315,1787,3.564,1788,5.788,1789,5.315,1790,8.415,1791,3.564,1792,7.045,1793,7.045,1794,7.902,1795,5.315,1796,3.564,1797,3.564,1798,7.045,1799,7.045,1800,7.045,1801,7.045,1802,7.045,1803,7.045,1804,5.315,1805,3.564,1806,3.564,1807,5.315,1808,3.181,1809,5.315,1810,3.564,1811,3.564,1812,3.564,1813,3.564,1814,3.564,1815,3.564,1816,3.564,1817,3.564,1818,3.564,1819,3.564,1820,3.564,1821,7.045,1822,7.045,1823,5.315,1824,4.743,1825,5.315,1826,5.315,1827,3.564]],["title/classes/ExportTheater.html",[0,0.34,1788,3.924]],["body/classes/ExportTheater.html",[0,0.263,2,0.243,3,0.069,4,0.034,5,0.039,7,0.676,9,1.231,12,1.513,13,1.603,14,0.053,15,0.168,18,0.104,19,0.006,20,0.405,21,0.158,24,0.272,29,1.787,34,0.039,37,0.638,38,0.931,39,1.612,41,1.429,43,4.736,44,1.037,45,2.433,53,0.007,54,0.007,55,0.007,56,0.007,81,2.014,88,1.414,89,1.414,90,1.031,118,2.737,148,0.588,154,1.983,157,0.879,196,1.349,222,1.437,228,1.828,310,1.375,350,0.922,357,0.328,397,1.513,412,2.307,413,1.881,417,3.908,422,1.737,423,2.395,428,2.737,430,2.507,433,3.294,434,2.575,435,2.987,450,3.557,451,1.047,455,1.461,499,0.879,518,1.073,527,0.927,529,1.148,534,0.972,536,1.109,537,1.168,540,1.349,551,1.324,552,1.324,553,2.107,554,1.324,558,2.39,563,1.956,564,2.571,565,4.429,568,4.956,569,4.853,572,2.107,573,2.177,575,2.177,595,5.195,629,1.95,675,2.155,707,1.349,721,2.718,722,2.718,723,1.881,729,3.107,747,2.245,748,2.929,751,2.45,753,2.251,765,3.333,784,3.078,787,1.852,802,4.299,826,3.218,831,1.984,844,3.018,856,3.031,953,3.292,982,3.484,1185,3.769,1206,3.961,1224,3.769,1397,3.679,1417,2.343,1505,2.914,1544,3.461,1571,4.48,1572,5.507,1573,7.585,1584,5.886,1585,5.886,1586,7.142,1593,4.736,1594,6.394,1595,4.866,1596,3.961,1597,6.823,1598,4.866,1599,4.866,1600,4.866,1601,4.866,1602,4.866,1603,4.866,1604,6.394,1605,4.48,1606,4.866,1613,4.179,1618,4.48,1620,4.48,1625,4.48,1626,4.866,1627,4.48,1628,4.866,1629,5.507,1630,5.507,1640,4.866,1643,1.875,1644,2.341,1646,3.292,1647,3.292,1649,3.292,1655,7.142,1656,3.292,1657,3.292,1660,3.292,1706,3.292,1734,3.292,1736,3.292,1788,5.886,1808,3.292,1828,3.689,1829,7.165,1830,5.453,1831,7.165,1832,5.453,1833,5.453,1834,3.689,1835,3.689,1836,5.453,1837,3.689,1838,5.453,1839,4.48,1840,5.453,1841,5.453,1842,4.866,1843,5.453,1844,4.48,1845,5.453,1846,3.689,1847,5.453,1848,5.453,1849,3.689,1850,3.689,1851,3.689,1852,3.689,1853,3.689,1854,3.689,1855,3.689,1856,3.689,1857,5.453,1858,5.453,1859,3.689,1860,3.689,1861,3.689,1862,3.689,1863,3.689,1864,3.689,1865,3.689,1866,3.689,1867,3.689,1868,3.689,1869,3.689,1870,3.689,1871,3.689,1872,3.689,1873,5.453,1874,3.689,1875,5.453,1876,3.689,1877,3.689,1878,3.689,1879,3.689,1880,3.689,1881,3.689,1882,3.689,1883,3.689,1884,3.689]],["title/injectables/FileService.html",[580,1.926,1885,3.924]],["body/injectables/FileService.html",[0,0.394,3,0.059,4,0.052,5,0.106,7,1.012,11,0.797,12,1.777,14,0.08,15,0.222,18,0.105,19,0.006,20,0.242,21,0.169,24,0.209,26,1.48,29,2.8,34,0.059,37,0.44,43,5.647,44,0.96,53,0.01,54,0.01,55,0.01,56,0.01,67,2.808,81,1.282,88,1.433,89,1.433,90,1.045,112,2.369,114,3.387,222,1.905,228,1.839,309,2.54,310,2.693,330,1.876,354,2.067,428,1.779,434,2.033,558,2.411,580,2.915,582,2.968,584,3.376,604,4.995,606,2.968,629,2.422,642,4.599,721,2.454,722,2.901,723,2.152,747,2.975,748,3.883,753,2.403,755,2.454,767,2.975,776,2.856,784,3.105,798,3.403,831,1.69,864,4.013,867,3.507,1065,5.938,1126,5.555,1211,6.45,1318,5.25,1764,4.587,1767,7.019,1824,4.931,1885,5.938,1886,5.525,1887,5.555,1888,7.227,1889,7.227,1890,7.227,1891,8.055,1892,8.543,1893,6.45,1894,7.227,1895,5.525,1896,7.227,1897,6.45,1898,6.45,1899,8.543,1900,7.227,1901,6.45,1902,5.525,1903,7.227,1904,4,1905,6.45,1906,7.227,1907,5.525,1908,7.227,1909,5.525,1910,5.525,1911,4.247,1912,4.247,1913,5.525,1914,5.525,1915,5.525,1916,3.377,1917,5.525,1918,5.525,1919,5.525,1920,5.525,1921,5.525,1922,5.525]],["title/classes/FlavorApplication.html",[0,0.34,453,2.249]],["body/classes/FlavorApplication.html",[0,0.662,2,0.306,3,0.049,4,0.043,5,0.049,9,1.106,11,0.878,14,0.067,15,0.198,18,0.115,19,0.006,20,0.425,21,0.157,24,0.352,34,0.102,38,0.667,39,1.295,44,0.894,46,1.8,53,0.009,54,0.009,55,0.009,56,0.009,139,2.397,148,0.33,154,1.907,179,1.712,196,2.697,254,2.645,263,3.652,320,1.167,321,2.692,323,1.55,345,2.362,346,2.427,347,1.812,348,2.146,353,3.392,354,2.277,357,0.84,360,1.84,363,2.764,364,2.354,365,2.243,366,2.764,367,2.243,368,2.542,369,2.243,370,3.392,371,2.427,372,3.392,373,2.427,374,3.392,375,2.427,376,4.072,377,2.301,378,3.421,379,2.189,380,2.477,381,1.421,382,2.001,383,2.108,384,1.81,385,1.84,386,2.146,387,2.137,388,2.301,389,2.477,390,2.042,391,3.56,392,3.102,393,3.102,394,3.102,395,4.473,396,4.28,397,1.358,398,2.764,399,2.266,400,3.104,401,3.269,402,2.397,403,3.359,404,3.359,405,2.492,406,2.266,407,3.359,408,1.358,409,3.104,410,3.314,411,2.427,412,1.497,413,1.029,414,1.997,415,2.427,416,2.427,417,2.137,418,2.427,419,2.427,420,1.607,421,2.427,422,2.189,423,2.041,424,2.041,425,1.578,426,1.997,427,2.427,428,1.497,429,2.427,430,2.137,431,3.104,432,2.362,433,2.137,434,1.307,435,1.55,436,3.029,437,3.936,438,2.243,439,2.243,440,3.269,441,4.046,442,3.842,443,3.421,444,3.359,445,3.852,446,3.749,447,3.314,448,2.243,449,4.046,450,1.997,451,0.893,452,2.362,453,3.029,454,3.56,1923,4.083,1924,4.083,1925,4.083,1926,4.648,1927,4.148,1928,4.148,1929,4.148]],["title/classes/FlavorBasicInfo.html",[0,0.34,376,2.249]],["body/classes/FlavorBasicInfo.html",[0,0.636,2,0.456,3,0.073,4,0.065,5,0.073,14,0.1,15,0.256,18,0.129,19,0.006,20,0.441,21,0.177,34,0.095,49,1.574,53,0.013,54,0.013,55,0.013,56,0.013,148,0.591,316,2.909,347,1.35,350,1.17,351,2.546,357,0.878,376,4.204,1923,5.666,1924,5.666,1925,5.666,1930,5.684,1931,6.918,1932,6.918,1933,6.918,1934,6.398,1935,5.684,1936,5.684,1937,5.684,1938,4.782,1939,5.684,1940,5.684]],["title/classes/FlavorDTO.html",[0,0.34,1938,3.301]],["body/classes/FlavorDTO.html",[0,0.617,2,0.426,3,0.069,4,0.06,5,0.069,14,0.094,15,0.246,18,0.141,19,0.006,20,0.441,21,0.192,34,0.092,37,0.515,49,1.711,53,0.012,54,0.012,55,0.012,56,0.012,148,0.643,316,2.718,347,1.558,350,1.093,351,2.768,353,3.985,354,2.478,357,0.873,376,4.46,675,2.555,1923,5.5,1924,5.5,1925,5.5,1927,5.769,1928,5.769,1929,5.769,1930,5.311,1934,6.661,1935,5.311,1936,5.311,1937,5.311,1938,5.52,1939,7.12,1940,7.12,1941,6.465,1942,6.465,1943,6.465,1944,6.465,1945,6.465]],["title/injectables/FlavorService.html",[580,1.926,1946,3.671]],["body/injectables/FlavorService.html",[0,0.435,3,0.065,4,0.057,5,0.065,14,0.088,18,0.112,19,0.006,20,0.389,21,0.167,24,0.347,26,1.635,34,0.065,49,1.154,53,0.011,54,0.011,55,0.011,56,0.011,67,3.102,81,1.416,88,1.999,89,1.999,90,1.457,113,3.28,209,6.018,222,2.031,228,1.76,273,4.036,304,4.036,305,4.036,309,3.543,310,2.871,330,2.617,357,0.684,377,3.022,580,3.108,582,3.28,584,3.69,587,4.692,588,6.442,590,5.597,600,4.692,606,3.28,607,3.102,608,5.629,629,2.317,642,5.477,651,4.548,867,4.891,1911,5.923,1912,5.923,1938,5.836,1946,5.923,1947,6.105,1948,8.869,1949,7.706,1950,6.105,1951,6.105,1952,7.706,1953,6.105,1954,6.105,1955,6.331,1956,6.331,1957,6.331,1958,6.331,1959,6.331,1960,6.331,1961,6.105,1962,6.105]],["title/classes/GenericParameterDTO.html",[0,0.34,490,2.098]],["body/classes/GenericParameterDTO.html",[0,0.698,2,0.297,3,0.048,4,0.042,5,0.048,13,1.113,14,0.065,15,0.193,18,0.105,19,0.006,20,0.451,21,0.143,24,0.275,34,0.104,37,0.726,38,1.127,39,0.906,49,1.661,53,0.008,54,0.008,55,0.008,56,0.008,94,1.166,148,0.678,157,0.725,330,1.528,347,0.878,348,1.501,349,1.977,350,1.541,351,2.401,357,0.875,360,2.074,380,1.4,381,2.218,382,2.256,383,2.377,384,1.266,385,1.799,386,2.098,451,1.393,455,1.685,459,2.022,466,2.645,467,2.645,468,2.022,469,2.809,470,1.934,471,1.645,472,2.022,473,2.022,474,2.022,475,2.022,476,1.501,477,1.934,478,2.022,479,1.977,480,1.501,481,3.374,482,2.022,483,2.022,484,1.376,485,2.703,486,2.022,487,2.826,488,2.022,489,2.022,490,3.937,491,2.602,492,2.703,493,2.022,494,2.022,495,2.022,496,2.022,497,2.022,498,2.022,499,1.265,500,2.022,501,2.703,502,1.71,503,2.645,504,2.022,505,2.763,506,2.022,507,2.022,508,1.645,509,1.645,510,1.645,511,1.645,512,1.645,513,1.645,514,1.645,515,1.645,516,1.645,517,1.977,518,1.829,519,1.977,520,1.977,521,1.977,522,1.977,523,1.977,524,1.977,525,1.977,526,1.044,527,1.58,528,1.977,529,1.957,530,2.022,531,1.078,532,2.022,533,2.537,534,1.186,535,1.677,536,1.353,537,1.424,538,1.71,539,2.763,540,1.645,541,1.677,542,2.022,543,1.892,544,1.977,545,2.022,546,1.71,1963,4.501,1964,4.501,1965,4.501]],["title/components/HomeComponent.html",[57,0.977,164,1.926]],["body/components/HomeComponent.html",[0,0.131,3,0.019,4,0.017,5,0.088,7,0.746,9,0.826,10,2.399,11,0.828,12,1.735,14,0.027,15,0.096,18,0.128,19,0.006,20,0.336,21,0.174,24,0.237,25,2.745,26,0.491,27,1.247,32,1.491,33,0.711,34,0.019,37,0.739,38,1.051,39,1.474,41,1.862,44,1.05,45,2.657,47,2.064,48,0.755,49,1.567,50,2.807,52,1.12,53,0.003,54,0.003,55,0.007,56,0.003,57,0.983,58,0.755,59,0.711,60,0.788,61,1.75,62,0.788,64,0.788,65,3.843,66,3.515,68,1.312,70,1.312,74,3.92,80,2.016,81,0.945,82,1.333,85,2.959,88,1.397,89,1.781,90,1.182,91,2.693,94,0.827,95,2.463,96,2.608,97,2.048,105,1.213,113,1.677,114,4.022,118,1.548,121,2.786,122,3.612,134,1.41,139,2.184,141,0.788,142,1.341,143,1.289,144,0.788,145,2.269,146,0.788,147,0.74,148,0.595,149,0.806,150,0.74,151,1.789,152,0.772,153,0.755,154,0.747,155,0.806,156,0.755,157,1.21,158,0.806,159,0.755,160,0.806,161,0.806,162,0.725,163,0.806,164,2.364,165,0.806,166,0.725,167,0.74,168,0.806,169,0.725,170,0.725,171,0.806,172,0.806,173,0.755,174,0.806,175,0.725,176,0.755,177,0.806,178,0.772,179,1.115,180,0.772,181,1.371,182,0.772,183,0.772,184,0.725,185,0.725,186,0.806,187,0.725,188,0.725,189,0.725,190,0.806,191,0.74,192,0.806,193,0.806,194,0.806,211,2.564,222,0.823,228,1.339,229,1.762,247,3.874,251,3.874,310,1.163,316,2.989,322,1.979,323,1.603,339,2.267,350,1.202,354,2.147,357,0.427,402,1.163,408,0.659,409,1.506,412,2.289,413,1.297,428,1.888,433,1.435,434,2.38,435,1.955,471,0.671,476,1.603,491,1.12,518,2.067,527,0.784,557,1.99,560,1.791,561,1.791,584,1.61,604,1.268,607,0.932,610,0.788,629,0.552,638,5.231,641,3.694,651,1.083,657,3.759,721,1.06,722,1.06,723,2.079,729,2.407,732,1.165,745,5.06,747,2.413,748,1.677,751,2.159,753,2.201,754,3.149,755,1.99,770,2.187,776,2.967,778,2.399,780,0.824,781,5.06,782,2.51,784,3.97,785,4.374,786,2.837,787,1.06,789,4.699,793,2.157,802,2.582,803,6.344,804,1.586,811,2.564,816,2.564,818,4.84,820,0.697,823,1.638,830,3.051,831,2.013,834,2.786,836,2.786,838,2.786,840,3.347,846,1.638,849,1.966,851,2.564,863,2.564,881,2.786,882,2.157,883,1.41,960,2.102,995,2.326,997,2.582,998,1.908,1001,1.782,1007,2.326,1009,1.586,1011,3.244,1014,0.986,1016,2.51,1025,1.728,1029,3.934,1046,1.186,1047,3.244,1053,1.842,1069,2.157,1071,5.841,1096,3.72,1108,2.786,1126,2.399,1154,2.157,1156,2.267,1185,2.157,1193,2.564,1206,2.267,1212,1.63,1222,2.786,1239,1.638,1277,1.677,1337,1.507,1341,4.782,1362,5.628,1389,2.745,1390,2.267,1417,1.341,1460,2.786,1498,2.49,1499,2.127,1500,1.165,1501,1.165,1505,0.824,1539,1.981,1544,1.165,1548,2.442,1588,7.208,1625,3.949,1627,2.564,1630,2.399,1673,2.786,1761,1.638,1764,1.981,1885,5.841,1887,2.399,1893,2.786,1901,2.786,1904,1.728,1966,1.835,1967,3.122,1968,2.786,1969,3.122,1970,3.122,1971,3.122,1972,4.074,1973,3.122,1974,7.823,1975,4.074,1976,5.388,1977,5.388,1978,4.074,1979,4.074,1980,4.074,1981,4.074,1982,5.388,1983,3.122,1984,3.122,1985,4.807,1986,6.584,1987,3.122,1988,3.122,1989,1.835,1990,3.122,1991,3.122,1992,1.835,1993,3.949,1994,2.399,1995,3.122,1996,3.122,1997,3.122,1998,3.122,1999,1.835,2000,2.564,2001,3.122,2002,3.122,2003,1.835,2004,1.835,2005,3.122,2006,3.122,2007,3.122,2008,1.835,2009,3.122,2010,3.122,2011,3.122,2012,3.122,2013,1.835,2014,6.584,2015,3.122,2016,7.509,2017,5.861,2018,1.835,2019,4.289,2020,5.388,2021,1.835,2022,1.835,2023,3.122,2024,1.835,2025,3.122,2026,1.835,2027,3.122,2028,2.564,2029,1.835,2030,1.835,2031,3.122,2032,1.835,2033,4.807,2034,1.835,2035,1.835,2036,1.835,2037,2.786,2038,1.835,2039,2.786,2040,1.835,2041,1.835,2042,1.835,2043,1.835,2044,4.807,2045,1.835,2046,1.835,2047,1.638,2048,1.835,2049,3.122,2050,3.122,2051,5.388,2052,3.122,2053,1.835,2054,1.835,2055,1.835,2056,1.835,2057,1.41,2058,1.41,2059,1.638,2060,1.835,2061,3.122,2062,1.835,2063,2.786,2064,1.835,2065,1.835,2066,1.835,2067,1.835,2068,3.122,2069,3.122,2070,1.835,2071,1.835,2072,4.074,2073,3.122,2074,1.835,2075,1.835,2076,1.835,2077,1.835,2078,1.835,2079,1.835,2080,1.835,2081,3.122,2082,3.122,2083,3.122,2084,3.122,2085,3.122,2086,3.122,2087,3.949,2088,3.122,2089,5.861,2090,3.122,2091,2.063,2092,3.122,2093,1.213,2094,1.835,2095,1.638,2096,3.122,2097,2.786,2098,3.122,2099,3.122,2100,2.786,2101,3.122,2102,3.122,2103,1.835,2104,1.835,2105,1.835,2106,1.835,2107,1.835,2108,4.074,2109,1.835,2110,3.122,2111,1.835,2112,1.835,2113,1.835,2114,1.835,2115,1.835,2116,1.835,2117,1.835,2118,1.835,2119,1.835,2120,1.835,2121,1.835,2122,1.507,2123,1.835,2124,1.835,2125,4.074,2126,1.638,2127,2.786,2128,1.638,2129,1.638,2130,1.835,2131,1.835,2132,1.835,2133,1.835,2134,1.835,2135,1.835,2136,1.835,2137,1.638,2138,4.289,2139,7.509,2140,4.807,2141,4.807,2142,1.835]],["title/components/HostComponent.html",[57,0.977,166,1.887]],["body/components/HostComponent.html",[0,0.278,3,0.041,4,0.036,5,0.041,14,0.057,15,0.175,18,0.107,19,0.006,21,0.167,24,0.31,26,1.046,27,1.474,32,1.08,33,1.512,34,0.041,38,0.816,39,1.145,48,1.607,50,2.641,52,1.401,53,0.007,54,0.007,55,0.007,56,0.007,57,1.506,58,1.607,59,1.512,60,1.677,61,1.677,62,1.677,64,1.677,65,4.216,66,3.952,68,2.39,70,2.39,80,2.813,81,0.906,83,4.074,84,4.074,88,1.012,89,1.012,90,0.738,94,1.153,95,2.807,96,2.972,97,1.768,112,1.279,114,2.39,116,3.709,122,3.405,139,3.14,141,1.677,142,2.442,143,1.236,144,1.677,145,2.177,146,1.677,147,1.574,148,0.643,149,1.715,150,1.574,151,2.944,152,1.642,153,1.607,154,1.763,155,1.715,156,1.607,157,1.186,158,1.715,159,1.607,160,1.715,161,1.715,162,1.543,163,1.715,164,1.574,165,1.715,166,2.909,167,1.574,168,1.715,169,1.543,170,1.543,171,1.715,172,1.715,173,1.607,174,1.715,175,1.543,176,1.607,177,1.715,178,1.642,179,1.815,180,1.642,181,2.496,182,1.642,183,1.642,184,1.543,185,1.543,186,1.715,187,1.543,188,1.543,189,1.543,190,1.715,191,1.574,192,1.715,193,1.715,194,1.715,216,2.202,222,1.498,228,0.892,229,1.174,244,1.483,245,2.246,246,1.512,254,2.641,316,3.095,347,1.109,364,2.436,471,2.86,476,2.456,491,2.039,526,0.906,624,3.354,646,4.43,820,1.483,849,2.743,941,2.246,959,3.474,997,3.6,998,2.386,1001,3.827,1002,2.581,1003,2.581,1005,2.478,1007,4.662,1009,3.405,1011,3.146,1012,2.581,1033,2.888,1075,3.245,1076,3.245,1109,2.304,1271,2.478,1272,2.478,1277,4.203,1278,2.304,1293,3.757,1331,2.304,1391,3.741,1410,3.354,1485,3.757,1499,2.968,1500,4.965,1501,4.672,1505,1.754,1506,2.097,1549,2.691,1681,6.059,1682,1.754,1916,3.474,1923,3.607,1924,3.607,1925,3.607,2091,2.581,2093,3.757,2143,3.904,2144,4.632,2145,5.643,2146,6.702,2147,5.684,2148,5.931,2149,5.506,2150,4.632,2151,4.632,2152,4.632,2153,5.088,2154,2.698,2155,5.684,2156,3.904,2157,3.904,2158,3.904,2159,3.904,2160,3.904,2161,2.698,2162,2.698,2163,2.478,2164,2.698,2165,2.698,2166,3.928,2167,3.474,2168,5.684,2169,8.165,2170,4.669,2171,8.165,2172,7.362,2173,8.165,2174,8.165,2175,3.354,2176,3.928,2177,3.928,2178,3.928,2179,3.928,2180,3.928,2181,3.928,2182,3.928,2183,3.928,2184,2.698,2185,2.698,2186,2.698,2187,2.229,2188,2.581,2189,2.698,2190,2.698,2191,2.698,2192,2.698,2193,2.698,2194,3.928,2195,3.928,2196,2.698,2197,2.698,2198,5.088,2199,2.478,2200,2.581,2201,2.581,2202,2.698,2203,3.354,2204,3.928,2205,3.928,2206,2.698,2207,5.643,2208,2.698,2209,2.304,2210,2.698,2211,2.698,2212,2.698]],["title/classes/HostModuleDTO.html",[0,0.34,378,2.052]],["body/classes/HostModuleDTO.html",[0,0.597,2,0.461,3,0.074,4,0.065,5,0.074,14,0.101,15,0.258,18,0.138,19,0.006,20,0.431,21,0.188,24,0.265,34,0.089,49,1.758,53,0.013,54,0.013,55,0.013,56,0.013,94,1.182,148,0.66,351,2.742,357,0.796,378,3.598,469,3.473,712,4.782,933,3.002,936,3.852,2213,6.237,2214,8.002,2215,6.988,2216,6.988,2217,6.988,2218,6.197,2219,6.988,2220,6.988,2221,6.237]],["title/classes/HostNode.html",[0,0.34,1561,3.469]],["body/classes/HostNode.html",[0,0.403,2,0.256,3,0.041,4,0.036,5,0.041,7,0.711,8,2.281,11,0.927,12,1.731,14,0.056,15,0.174,18,0.127,19,0.006,20,0.342,21,0.17,24,0.327,29,2.405,34,0.071,37,0.451,44,0.945,45,2.268,53,0.007,54,0.007,55,0.007,56,0.007,57,1.366,81,1.549,88,2.113,89,2.113,90,1.54,112,1.854,118,1.249,143,1.79,145,2.17,148,0.275,154,1.599,157,0.912,166,2.235,179,2.124,222,1.491,228,1.921,229,2.346,244,2.149,245,1.533,246,1.503,254,2.689,255,3.187,321,1.249,322,2.329,323,2.227,347,1.303,357,0.593,363,2.869,364,2.393,368,1.533,397,1.41,399,1.992,402,1.445,405,1.503,406,2.352,408,1.194,413,0.858,425,1.317,434,2.366,454,2.73,480,1.294,526,1.312,584,2.639,610,2.43,629,1.166,667,1.921,721,2.856,722,2.65,723,2.077,726,2.541,729,3.151,731,1.743,753,2.513,755,2.65,767,2.329,770,0.959,776,2.9,780,1.743,782,2.954,787,2.268,798,1.826,804,3.729,805,3.039,820,1.473,831,2.042,844,2.147,865,3.039,921,2.281,960,2.17,967,1.971,980,1.971,1046,1.473,1105,3.039,1182,1.872,1209,1.667,1212,2.954,1213,2.73,1321,3.943,1363,1.872,1382,2.289,1391,1.971,1392,3.23,1397,4.409,1417,2.43,1517,2.954,1519,2.954,1548,2.874,1549,3.621,1554,4.348,1561,5.917,1612,3.039,1613,3.487,1617,3.039,1643,1.971,1659,4.648,1682,2.541,1766,3.039,1904,3.131,1923,3.59,1924,3.59,1925,3.59,2170,4.648,2222,3.187,2223,3.695,2224,3.91,2225,3.91,2226,3.91,2227,3.91,2228,3.91,2229,3.91,2230,5.657,2231,3.695,2232,3.131,2233,3.879,2234,4.799,2235,4.062,2236,3.587,2237,4.062,2238,4.062,2239,3.131,2240,3.039,2241,3.131,2242,2.681,2243,3.879,2244,2.681,2245,3.131,2246,3.879,2247,2.681,2248,3.879,2249,2.681,2250,3.131,2251,3.879,2252,3.131,2253,3.131,2254,3.131,2255,3.131,2256,3.039,2257,3.039,2258,3.131,2259,3.131,2260,2.681,2261,3.91,2262,3.695,2263,3.695,2264,3.879,2265,2.681,2266,2.681,2267,2.681,2268,2.681,2269,1.92,2270,1.92,2271,2.147,2272,3.462,2273,3.458,2274,2.147,2275,2.084,2276,2.084,2277,2.084,2278,2.084,2279,2.084,2280,3.462,2281,2.147,2282,2.147,2283,2.147,2284,2.147,2285,2.147,2286,3.131,2287,2.147,2288,2.147,2289,2.147,2290,2.147,2291,2.147]],["title/classes/HostPortModuleDTO.html",[0,0.34,2218,3.301]],["body/classes/HostPortModuleDTO.html",[0,0.6,2,0.466,3,0.075,4,0.066,5,0.075,14,0.102,15,0.259,18,0.135,19,0.006,20,0.428,21,0.184,24,0.268,34,0.089,49,1.763,53,0.013,54,0.013,55,0.013,56,0.013,94,0.997,148,0.662,351,2.159,357,0.799,378,3.033,469,3.613,712,5.142,933,3.869,936,3.033,2213,6.3,2214,6.3,2218,6.224,2221,8.037,2292,7.06,2293,7.06,2294,7.06,2295,7.06]],["title/components/HowToUseComponent.html",[57,0.977,167,1.926]],["body/components/HowToUseComponent.html",[0,0.423,3,0.063,4,0.055,5,0.063,14,0.086,19,0.006,21,0.15,24,0.225,26,1.591,27,1.964,32,1.644,33,2.301,34,0.063,38,1.087,39,1.525,48,2.445,52,2.131,53,0.011,54,0.011,55,0.011,56,0.011,57,1.549,58,2.445,59,2.301,60,2.552,61,2.552,62,2.552,64,2.552,65,4.369,66,4.15,68,3.184,70,3.184,81,1.378,112,2.482,141,2.552,142,3.254,143,1.88,144,2.552,145,2.596,146,2.552,147,2.395,148,0.684,149,2.609,150,2.395,151,3.662,152,2.498,153,2.445,154,1.813,155,2.609,156,2.445,157,0.957,158,2.609,159,2.445,160,2.609,161,2.609,162,2.347,163,2.609,164,2.395,165,2.609,166,2.347,167,3.541,168,2.609,169,2.347,170,2.347,171,2.609,172,2.609,173,2.445,174,2.609,175,2.347,176,2.445,177,2.609,178,2.498,179,2.037,180,2.498,181,3.326,182,2.498,183,2.498,184,2.347,185,2.347,186,2.609,187,2.347,188,2.347,189,2.347,190,2.609,191,2.395,192,2.609,193,2.609,194,2.609,222,1.996,228,1.356,229,2.277,241,6.849,321,1.913,340,5.821,731,2.668,732,5.291,744,5.367,2296,8.337,2297,5.94,2298,8.337,2299,7.573,2300,5.94,2301,5.94]],["title/classes/InterfaceConstraints.html",[0,0.34,902,2.145]],["body/classes/InterfaceConstraints.html",[0,0.703,2,0.327,3,0.053,4,0.046,5,0.053,9,0.853,11,0.742,12,0.938,13,1.663,14,0.072,15,0.207,18,0.124,19,0.006,20,0.439,21,0.169,24,0.188,34,0.105,37,0.703,44,0.557,53,0.009,54,0.009,55,0.009,56,0.009,94,1.208,95,2.414,96,2.556,97,2.093,148,0.352,216,1.923,320,1.247,350,1.138,357,0.597,389,2.093,390,1.373,397,1.048,408,1.048,413,1.098,420,3.348,451,1.572,499,0.8,527,1.247,531,1.828,534,2.012,536,2.296,551,2.414,552,2.414,554,2.414,555,1.885,556,1.849,557,1.685,558,1.656,559,1.627,560,1.849,561,1.849,562,1.849,563,1.781,564,1.781,566,1.656,567,1.627,689,2.957,704,2.285,707,3.496,714,1.923,897,3.023,898,2.282,899,2.23,900,2.23,901,2.23,902,3.43,904,3.023,906,3.023,908,2.955,909,2.955,910,2.955,911,2.955,912,2.955,913,2.132,914,2.955,915,2.955,916,2.955,917,2.955,918,2.955,919,2.282,920,2.282,921,2.001,922,2.955,923,2.23,924,2.23,925,3.023,926,2.23,927,3.023,928,2.23,929,2.955,930,3.51,931,3.51,932,3.094,933,3.28,934,3.677,935,2.23,936,2.132,937,2.955,938,2.043,939,3.43,940,3.677,941,1.961,942,3.023,943,3.023,944,3.023,945,3.094,946,2.955,947,2.23,948,2.23,949,2.23,2302,4.963,2303,4.963,2304,4.963,2305,4.963,2306,4.963]],["title/classes/InterfaceNetworksConsumer.html",[0,0.34,927,2.145]],["body/classes/InterfaceNetworksConsumer.html",[0,0.704,2,0.332,3,0.053,4,0.047,5,0.053,9,0.866,11,0.75,12,0.953,13,2.036,14,0.073,15,0.209,18,0.119,19,0.006,20,0.439,21,0.163,24,0.191,34,0.105,37,0.706,44,0.566,53,0.009,54,0.009,55,0.009,56,0.009,94,1.163,97,1.568,148,0.358,216,1.953,320,1.266,350,1.15,357,0.604,389,2.563,390,1.395,397,1.064,408,1.064,413,1.116,420,3.355,451,1.582,499,0.812,527,1.266,531,2.06,534,1.329,536,1.516,551,2.44,552,2.44,554,2.44,555,1.915,556,1.878,557,1.712,558,1.682,559,1.652,560,1.878,561,1.878,562,1.878,563,1.808,564,1.808,566,1.682,567,1.652,689,1.953,704,2.309,707,3.505,714,1.953,897,3.055,898,2.318,899,2.265,900,2.265,901,2.265,902,3.055,904,3.055,906,3.055,908,2.987,909,2.987,910,2.987,911,2.987,912,2.987,913,2.166,914,2.987,915,2.987,916,2.987,917,2.987,918,2.987,919,2.318,920,2.318,921,2.033,922,2.987,923,2.265,924,2.265,925,3.055,926,2.265,927,3.457,928,2.265,929,2.987,930,2.318,931,2.318,932,2.318,933,3.695,934,3.864,935,2.265,936,2.166,937,2.987,938,2.075,939,3.457,940,3.701,941,1.992,942,3.055,943,3.055,944,3.055,945,3.126,946,2.987,947,2.265,948,2.265,949,2.265,2307,5.041,2308,5.041,2309,5.041,2310,5.041]],["title/classes/InterfaceNetworksProvider.html",[0,0.34,925,2.145]],["body/classes/InterfaceNetworksProvider.html",[0,0.704,2,0.332,3,0.053,4,0.047,5,0.053,9,0.866,11,0.75,12,0.953,13,2.036,14,0.073,15,0.209,18,0.119,19,0.006,20,0.439,21,0.163,24,0.191,34,0.105,37,0.706,44,0.566,53,0.009,54,0.009,55,0.009,56,0.009,94,1.163,97,1.568,148,0.358,216,1.953,320,1.266,350,1.15,357,0.604,389,2.563,390,1.395,397,1.064,408,1.064,413,1.116,420,3.355,451,1.582,499,0.812,527,1.266,531,2.06,534,1.329,536,1.516,551,2.44,552,2.44,554,2.44,555,1.915,556,1.878,557,1.712,558,1.682,559,1.652,560,1.878,561,1.878,562,1.878,563,1.808,564,1.808,566,1.682,567,1.652,689,1.953,704,2.309,707,3.505,714,1.953,897,3.055,898,2.318,899,2.265,900,2.265,901,2.265,902,3.055,904,3.055,906,3.055,908,2.987,909,2.987,910,2.987,911,2.987,912,2.987,913,2.166,914,2.987,915,2.987,916,2.987,917,2.987,918,2.987,919,2.318,920,2.318,921,2.033,922,2.987,923,2.265,924,2.265,925,3.457,926,2.265,927,3.055,928,2.265,929,2.987,930,2.318,931,2.318,932,2.318,933,3.695,934,3.864,935,2.265,936,2.166,937,2.987,938,2.075,939,3.457,940,3.701,941,1.992,942,3.055,943,3.055,944,3.055,945,3.126,946,2.987,947,2.265,948,2.265,949,2.265,2311,5.041,2312,5.041,2313,5.041,2314,5.041]],["title/components/MirroringModuleInstanceComponent.html",[57,0.977,169,1.887]],["body/components/MirroringModuleInstanceComponent.html",[0,0.268,3,0.04,4,0.035,5,0.04,14,0.055,15,0.17,18,0.105,19,0.006,21,0.178,24,0.306,26,1.009,27,1.436,32,1.042,33,1.459,34,0.04,38,0.795,39,1.115,48,1.551,50,2.597,52,1.351,53,0.007,54,0.007,55,0.007,56,0.007,57,1.481,58,1.551,59,1.459,60,1.618,61,1.618,62,1.618,64,1.618,65,4.201,66,3.933,68,2.328,70,2.328,80,2.741,81,0.874,83,4.005,84,4.005,88,0.977,89,0.977,90,0.712,94,1.138,95,3.131,96,3.315,112,1.235,114,2.328,116,3.634,122,3.336,139,3.105,141,1.618,142,2.379,143,1.192,144,1.618,145,2.14,146,1.618,147,1.519,148,0.639,149,1.654,150,1.519,151,2.884,152,1.584,153,1.551,154,1.733,155,1.654,156,1.551,157,1.166,158,1.654,159,1.551,160,1.654,161,1.654,162,1.489,163,1.654,164,1.519,165,1.654,166,1.489,167,1.519,168,1.654,169,2.86,170,1.489,171,1.654,172,1.654,173,1.551,174,1.654,175,1.489,176,1.551,177,1.654,178,1.584,179,1.789,180,1.584,181,2.432,182,1.584,183,1.584,184,1.489,185,1.489,186,1.654,187,1.489,188,1.489,189,1.489,190,1.654,191,1.519,192,1.654,193,1.654,194,1.654,216,2.145,222,1.459,228,0.86,229,1.133,244,1.431,245,2.188,246,1.459,254,2.783,316,3.595,347,1.08,364,2.524,455,1.483,471,2.819,476,2.414,491,1.986,499,0.892,526,0.874,624,3.268,646,4.34,667,2.738,820,1.431,849,2.672,941,2.188,959,3.384,997,3.527,998,2.303,1001,3.749,1002,2.49,1003,2.49,1005,2.391,1007,4.604,1009,3.336,1011,3.064,1012,2.49,1033,2.814,1075,3.162,1076,3.162,1109,2.223,1271,2.391,1272,2.391,1277,4.143,1278,2.223,1293,3.66,1331,2.223,1398,3.779,1410,3.268,1485,3.66,1499,2.891,1500,4.894,1501,4.593,1505,1.692,1506,2.024,1549,2.646,1681,6.016,1682,1.692,1770,5.046,1916,3.384,2091,2.49,2093,3.66,2144,4.538,2145,5.573,2148,5.257,2150,4.538,2151,4.538,2152,4.538,2153,5.002,2154,2.604,2161,2.604,2162,2.604,2163,2.391,2164,2.604,2165,2.604,2166,3.827,2167,3.384,2175,3.268,2176,3.827,2177,3.827,2178,3.827,2179,3.827,2180,3.827,2181,3.827,2182,3.827,2183,3.827,2184,2.604,2185,2.604,2186,2.604,2187,2.151,2188,2.49,2189,2.604,2190,2.604,2191,2.604,2192,2.604,2193,2.604,2194,3.827,2195,3.827,2196,2.604,2197,2.604,2198,5.002,2199,2.391,2200,2.49,2201,2.49,2202,2.604,2203,3.268,2204,3.827,2205,3.827,2206,2.604,2207,5.573,2208,2.604,2209,2.223,2210,2.604,2211,2.604,2212,2.604,2315,3.767,2316,6.565,2317,5.537,2318,6.565,2319,5.257,2320,5.394,2321,5.257,2322,5.537,2323,3.767,2324,5.859,2325,3.767,2326,3.767,2327,3.767,2328,3.767,2329,3.767,2330,3.767,2331,3.767,2332,3.767,2333,3.095,2334,3.095,2335,3.095,2336,5.537,2337,6.624,2338,6.197,2339,4.549,2340,4.549,2341,5.946,2342,5.946,2343,5.946]],["title/classes/MirroringModuleInstanceNode.html",[0,0.34,1530,3.157]],["body/classes/MirroringModuleInstanceNode.html",[0,0.405,2,0.258,3,0.041,4,0.036,5,0.041,7,0.716,8,2.293,11,0.929,12,1.733,14,0.057,15,0.175,18,0.128,19,0.006,21,0.171,24,0.328,29,2.414,34,0.071,37,0.453,38,0.561,44,0.947,45,2.277,53,0.007,54,0.007,55,0.007,56,0.007,57,1.372,81,1.556,88,2.118,89,2.118,90,1.544,112,1.864,118,1.258,143,1.8,145,2.177,148,0.277,154,1.606,157,0.916,169,2.247,179,2.127,222,1.499,228,1.925,229,2.353,244,2.16,245,1.544,246,1.513,254,2.694,321,1.258,322,2.341,323,2.237,347,1.308,350,0.661,364,2.398,370,3.386,392,1.643,393,1.643,394,1.643,397,1.415,399,2.003,402,1.456,405,1.513,406,2.361,408,1.201,413,1.484,425,1.327,434,2.371,455,1.047,480,1.303,499,0.63,526,1.319,537,1.237,538,1.484,584,2.65,610,2.443,629,1.175,667,2.658,721,2.863,722,2.658,723,2.079,726,2.555,729,3.158,731,1.755,753,2.517,755,2.658,767,2.341,770,0.966,776,2.91,780,1.755,782,2.97,787,2.277,798,1.84,804,3.742,805,3.055,820,1.484,831,2.051,844,2.162,865,3.055,921,2.293,960,2.177,967,1.985,980,1.985,1046,1.484,1105,3.055,1182,1.885,1209,1.679,1212,2.97,1213,2.744,1321,3.956,1363,1.885,1382,2.306,1397,4.372,1398,2.04,1403,3.931,1417,2.443,1517,2.97,1519,2.97,1520,4.371,1530,5.399,1548,2.89,1549,3.623,1612,3.055,1613,3.501,1617,3.055,1643,1.985,1682,2.555,1766,3.055,1904,3.147,2223,3.711,2224,3.931,2225,3.931,2226,3.931,2227,3.931,2228,3.931,2229,3.931,2231,3.711,2232,3.147,2234,4.807,2235,4.076,2236,3.602,2237,4.076,2238,4.076,2239,3.147,2240,3.055,2241,3.147,2242,2.701,2244,2.701,2245,3.147,2247,2.701,2249,2.701,2250,3.147,2252,3.147,2253,3.147,2254,3.147,2255,3.147,2256,3.055,2257,3.055,2258,3.147,2259,3.147,2260,2.701,2261,3.931,2262,3.711,2263,3.711,2265,2.701,2266,2.701,2267,2.701,2268,2.701,2269,1.934,2270,1.934,2271,2.162,2274,2.162,2275,3.602,2276,2.099,2277,2.099,2278,2.099,2279,2.099,2281,2.162,2282,2.162,2283,2.162,2284,2.162,2285,2.162,2286,3.147,2287,2.162,2288,2.162,2289,2.162,2290,2.162,2291,2.162,2344,3.21,2345,5.687,2346,3.907,2347,3.907,2348,3.907,2349,3.907,2350,3.907,2351,3.907,2352,3.487,2353,5.075,2354,3.487]],["title/classes/ModalButton.html",[0,0.34,2355,3.469]],["body/classes/ModalButton.html",[0,0.57,2,0.427,3,0.069,4,0.061,5,0.069,7,1.187,11,0.715,12,1.513,14,0.094,15,0.246,18,0.137,19,0.006,20,0.421,21,0.172,24,0.246,25,4.568,26,1.736,27,2.075,28,4.114,29,2.622,31,3.701,32,1.794,34,0.085,37,0.691,44,0.898,49,1.641,50,3.113,52,2.325,53,0.012,54,0.012,55,0.012,56,0.012,80,3.208,85,5.81,91,4.285,170,3.58,723,2.06,767,3.293,770,2.145,785,4.065,802,4.298,1016,3.385,1042,4.177,1046,3.039,1313,6.149,1751,6.149,2057,4.982,2058,4.982,2175,4.721,2355,6.302,2356,5.785,2357,7.139,2358,7.139,2359,6.482,2360,6.482,2361,6.572,2362,6.572,2363,7.139,2364,7.139,2365,6.482,2366,5.785,2367,5.325,2368,5.785]],["title/components/ModalComponent.html",[57,0.977,170,1.887]],["body/components/ModalComponent.html",[0,0.282,3,0.042,4,0.037,5,0.042,7,0.726,8,3.174,11,0.818,14,0.057,15,0.177,18,0.123,19,0.006,21,0.18,24,0.256,26,1.54,27,1.491,29,1.884,32,2.178,33,1.536,34,0.042,37,0.539,38,0.825,39,1.158,41,2.619,44,1.042,47,2.982,48,1.632,52,1.422,53,0.007,54,0.007,55,0.007,56,0.007,57,1.176,58,1.632,59,1.536,60,1.703,61,1.703,62,1.703,64,1.703,65,4.24,66,3.99,68,2.417,70,2.417,75,6.618,81,0.92,85,4.175,88,1.491,89,1.491,90,1.087,91,4.902,94,1.196,95,2.426,97,1.788,112,1.884,114,2.843,118,2.793,141,1.703,142,2.469,143,1.255,144,1.703,145,2.192,146,1.703,147,1.599,148,0.628,149,1.741,150,1.599,151,2.97,152,1.667,153,1.632,154,1.376,155,1.741,156,1.632,157,1.465,158,1.741,159,1.632,160,1.741,161,1.741,162,1.567,163,1.741,164,1.599,165,1.741,166,1.567,167,1.599,168,1.741,169,1.567,170,3.244,171,1.741,172,1.741,173,1.632,174,1.741,175,1.567,176,1.632,177,1.741,178,1.667,179,1.72,180,1.667,181,2.525,182,1.667,183,1.667,184,1.567,185,1.567,186,1.741,187,1.567,188,1.567,189,1.567,190,1.741,191,1.599,192,1.741,193,1.741,194,1.741,222,1.515,228,1.693,229,2.23,310,2.142,316,2.417,428,1.851,434,1.902,526,2.133,629,1.192,667,1.952,721,1.952,722,1.952,723,1.987,753,2.309,754,3.632,755,1.952,767,2.784,770,2.185,784,3.986,786,3.99,787,1.952,831,1.213,960,2.564,984,4.722,995,4.495,1063,3.648,1088,5.733,1096,4.291,1129,4.418,1156,4.175,1174,4.418,1204,5.699,1234,4.722,1313,4.418,1317,5.718,1318,5.386,1389,3.282,2028,7.262,2355,5.386,2369,3.965,2370,4.418,2371,4.722,2372,6.762,2373,5.748,2374,7.326,2375,6.762,2376,7.415,2377,5.923,2378,7.872,2379,6.034,2380,5.748,2381,4.418,2382,3.965,2383,5.748,2384,5.748,2385,6.034,2386,6.034,2387,5.748,2388,3.965,2389,3.965,2390,3.965,2391,5.748,2392,5.748,2393,3.965,2394,4.376,2395,3.965,2396,3.965,2397,5.748,2398,3.538,2399,3.965,2400,3.538,2401,3.965,2402,3.538,2403,3.538,2404,5.13,2405,3.965,2406,3.965,2407,3.965,2408,5.748,2409,3.965,2410,5.748,2411,5.748,2412,5.748]],["title/classes/ModalItem.html",[0,0.34,91,3.157]],["body/classes/ModalItem.html",[0,0.566,2,0.423,3,0.068,4,0.06,5,0.068,7,1.175,11,0.876,12,1.213,14,0.093,15,0.244,18,0.14,19,0.006,20,0.424,21,0.183,24,0.243,25,4.931,26,1.718,27,1.663,28,5.044,29,2.102,31,4.538,32,2.199,34,0.084,37,0.511,44,0.72,49,1.213,50,2.301,52,3.098,53,0.012,54,0.012,55,0.012,56,0.012,80,4.274,85,4.658,90,1.788,91,5.253,95,2.301,96,2.436,170,3.666,723,1.997,767,2.64,770,2.135,785,3.259,802,3.445,1016,4.15,1042,3.349,1046,2.436,1313,4.929,1751,4.929,2057,6.637,2058,6.637,2175,3.785,2355,6.272,2356,5.723,2357,5.723,2358,5.723,2361,5.269,2362,5.269,2363,5.723,2364,5.723,2366,7.092,2367,7.094,2368,7.092,2413,6.413,2414,6.413,2415,6.413,2416,6.413,2417,6.413]],["title/injectables/ModalService.html",[86,3.924,580,1.926]],["body/injectables/ModalService.html",[0,0.282,3,0.042,4,0.037,5,0.042,7,0.725,9,1.273,11,0.904,12,1.551,14,0.057,15,0.176,18,0.119,19,0.006,20,0.359,21,0.171,24,0.256,26,1.059,34,0.042,37,0.627,44,1.064,45,2.785,47,3.236,49,1.085,50,2.058,53,0.007,54,0.007,55,0.007,56,0.007,59,2.869,67,2.01,72,6.026,73,5.607,80,1.958,81,0.918,86,4.714,88,1.751,89,1.751,90,1.277,91,4.463,95,3.169,96,2.565,97,1.785,99,6.504,106,2.614,112,1.88,118,2.791,143,2.344,222,1.512,228,1.873,229,1.725,310,3.056,323,1.914,354,2.118,402,2.138,408,1.564,409,3.574,423,2.52,428,2.791,479,1.737,484,2.065,491,2.058,580,2.314,582,2.125,606,2.125,629,2.227,707,2.097,723,1.986,729,2.097,747,3.049,753,2.438,755,1.949,759,4.41,764,4.168,765,3.507,784,3.524,785,3.764,786,5.295,791,3.966,804,2.915,826,4.371,831,2.065,876,5.12,960,2.653,995,3.276,1066,4.41,1067,5.12,1070,4.41,1096,3.642,1155,6.61,1182,2.769,1193,6.085,1209,2.465,1229,4.099,1248,4.714,1295,5.693,1312,4.714,1417,3.182,1447,4.714,1544,3.642,1605,4.714,1764,5.206,1887,4.41,2028,7.864,2039,5.12,2047,3.53,2057,3.04,2058,3.04,2059,3.53,2234,3.082,2240,3.082,2256,3.082,2355,5.38,2361,3.249,2362,3.249,2367,6.952,2377,4.807,2394,4.371,2418,3.955,2419,5.738,2420,5.738,2421,5.738,2422,5.738,2423,5.738,2424,4.714,2425,5.738,2426,5.738,2427,5.738,2428,5.738,2429,5.738,2430,5.738,2431,5.738,2432,5.738,2433,5.738,2434,5.738,2435,5.738,2436,5.738,2437,5.738,2438,5.738,2439,7.407,2440,5.738,2441,5.738,2442,5.738,2443,5.738,2444,3.955,2445,5.738,2446,3.955,2447,5.738,2448,5.738,2449,3.955,2450,4.714,2451,4.714,2452,5.738,2453,5.738,2454,5.738,2455,5.12,2456,5.738,2457,3.955,2458,5.738,2459,8.973,2460,5.738,2461,3.955,2462,7.407,2463,3.955,2464,7.407,2465,3.955,2466,3.955,2467,6.752,2468,3.955,2469,3.955,2470,3.955,2471,3.955,2472,3.955,2473,3.955,2474,3.955,2475,3.955,2476,3.955,2477,3.955,2478,3.955,2479,3.955,2480,3.955,2481,3.955,2482,3.955,2483,3.955,2484,3.955,2485,3.955,2486,3.955]],["title/classes/ModuleApplication.html",[0,0.34,414,2.052]],["body/classes/ModuleApplication.html",[0,0.622,2,0.232,3,0.037,4,0.033,5,0.037,7,0.644,9,1.084,11,0.826,14,0.051,15,0.162,18,0.143,19,0.006,20,0.428,21,0.196,24,0.331,34,0.097,37,0.65,38,0.505,39,1.06,44,0.842,46,2.039,49,0.995,53,0.006,54,0.006,55,0.006,56,0.006,90,0.995,94,0.497,139,1.961,148,0.448,154,1.676,157,0.848,179,1.463,196,2.558,254,2.405,263,3.464,320,1.584,321,2.413,323,1.173,345,1.787,346,1.837,347,1.703,348,1.755,350,0.89,351,1.609,353,4.497,354,2.803,357,0.813,360,1.505,363,2.261,364,2.141,365,1.697,366,2.261,367,1.697,368,2.08,369,1.697,370,2.899,371,1.837,372,2.899,373,1.837,374,2.899,375,1.837,376,2.478,377,1.741,378,3.219,379,1.656,380,2.331,381,1.076,382,2.912,383,1.725,384,1.48,385,2.677,386,1.755,387,1.617,388,1.741,389,2.177,390,2.074,391,3.616,392,3.151,393,3.151,394,3.151,395,4.319,396,4.035,397,1.331,398,2.709,399,2.221,400,3.043,401,3.204,402,2.349,403,3.292,404,3.292,405,2.442,406,2.221,407,3.292,408,1.331,409,3.043,410,3.144,411,2.748,412,1.695,413,1.165,414,2.261,415,1.837,416,1.837,417,1.617,418,1.837,419,1.837,420,1.216,421,1.837,422,1.656,423,1.545,424,1.545,425,1.194,426,1.511,427,1.837,428,1.133,429,1.837,430,1.617,431,2.54,432,1.787,433,1.617,434,0.989,435,1.173,436,2.478,437,3.528,438,1.697,439,1.697,440,2.674,441,3.556,442,3.377,443,3.007,444,2.748,445,3.292,446,3.204,447,2.833,448,1.697,449,3.556,450,1.511,451,0.676,452,1.787,453,1.656,454,1.697,481,2.709,485,1.511,492,1.511,499,0.848,501,1.511,503,1.479,508,1.924,509,1.924,510,1.924,511,1.924,512,1.924,513,1.924,514,1.924,515,1.924,516,1.924,517,2.311,518,1.53,519,2.311,520,2.311,521,2.311,522,2.311,523,2.311,524,2.311,525,2.311,526,1.221,527,1.322,528,2.311,529,1.637,675,2.961,731,1.58,2487,3.517,2488,3.517,2489,3.517,2490,3.517,2491,3.517,2492,3.517,2493,3.517,2494,3.517,2495,3.517,2496,3.517,2497,3.517,2498,3.517,2499,3.517,2500,3.517,2501,3.517,2502,3.517,2503,3.517,2504,3.517,2505,3.517,2506,3.517,2507,3.517,2508,2.89,2509,2.89,2510,2.89,2511,2.89,2512,2.89,2513,2.89,2514,2.89,2515,2.89,2516,2.89,2517,2.89,2518,2.89,2519,2.89,2520,2.89,2521,2.89,2522,2.89]],["title/classes/ModuleClassificationDTO.html",[0,0.34,485,2.052]],["body/classes/ModuleClassificationDTO.html",[0,0.696,2,0.289,3,0.046,4,0.041,5,0.046,13,1.082,14,0.063,15,0.19,18,0.126,19,0.006,20,0.451,21,0.172,24,0.271,34,0.104,37,0.721,38,1.114,39,0.882,49,1.711,53,0.008,54,0.008,55,0.008,56,0.008,94,1.155,148,0.675,157,0.705,330,1.487,347,0.854,348,1.461,349,1.923,350,1.475,351,2.595,357,0.875,360,2.043,380,1.362,381,2.185,382,2.223,383,2.342,384,1.232,385,1.765,386,2.058,451,1.372,455,1.653,459,1.967,466,2.594,467,2.594,468,1.967,469,2.768,470,1.881,471,1.6,472,1.967,473,1.967,474,1.967,475,1.967,476,1.461,477,1.881,478,1.967,479,1.923,480,1.461,481,3.333,482,1.967,483,1.967,484,1.339,485,3.07,486,3.21,487,3.485,488,3.21,489,3.21,490,3.829,491,1.571,492,2.651,493,1.967,494,1.967,495,1.967,496,1.967,497,1.967,498,1.967,499,1.25,500,1.967,501,2.651,502,1.663,503,2.594,504,1.967,505,2.71,506,1.967,507,1.967,508,1.6,509,1.6,510,1.6,511,1.6,512,1.6,513,1.6,514,1.6,515,1.6,516,1.6,517,1.923,518,1.794,519,1.923,520,1.923,521,1.923,522,1.923,523,1.923,524,1.923,525,1.923,526,1.016,527,1.55,528,1.923,529,1.919,530,1.967,531,1.048,532,1.967,533,2.488,534,1.154,535,1.631,536,1.316,537,1.386,538,1.663,539,2.71,540,1.6,541,1.631,542,1.967,543,1.841,544,1.923,545,1.967,546,1.663,2523,4.378,2524,4.378,2525,4.378,2526,4.378,2527,4.378,2528,4.378,2529,4.378]],["title/classes/ModuleConstraints.html",[0,0.34,904,2.145]],["body/classes/ModuleConstraints.html",[0,0.707,2,0.343,3,0.055,4,0.049,5,0.055,9,0.895,11,0.766,12,0.985,13,1.718,19,0.006,20,0.438,24,0.198,34,0.105,37,0.713,44,0.585,53,0.01,54,0.01,55,0.01,56,0.01,94,1.179,97,1.621,148,0.37,216,2.018,320,1.308,350,1.176,357,0.617,389,2.163,390,1.442,397,1.1,408,1.1,413,1.153,420,3.37,451,1.603,499,0.839,527,1.308,531,1.874,534,1.373,536,1.566,551,2.494,552,2.494,554,2.494,555,1.979,556,1.941,557,1.769,558,1.738,559,1.707,560,1.941,561,1.941,562,1.941,563,1.869,564,1.869,566,1.738,567,1.707,689,2.018,704,2.361,707,3.523,714,2.018,897,3.123,898,2.395,899,2.34,900,2.34,901,2.34,902,3.123,904,3.515,906,3.123,908,3.053,909,3.053,910,3.053,911,3.053,912,3.053,913,2.238,914,3.053,915,3.053,916,3.053,917,3.053,918,3.053,919,2.395,920,2.395,921,2.101,922,3.053,923,2.34,924,2.34,925,3.123,926,2.34,927,3.123,928,2.34,929,3.053,930,2.395,931,2.395,932,2.395,933,3.361,934,3.75,935,2.34,936,2.238,937,3.053,938,2.145,939,3.515,940,3.75,941,2.059,942,3.123,943,3.123,944,3.123,945,3.196,946,3.053,947,2.34,948,2.34,949,2.34]],["title/classes/ModuleDTO.html",[0,0.34,385,1.366]],["body/classes/ModuleDTO.html",[0,0.681,2,0.242,3,0.039,4,0.034,5,0.039,13,0.908,14,0.053,15,0.167,18,0.142,19,0.006,20,0.45,21,0.194,24,0.245,34,0.101,37,0.736,38,1.027,39,0.74,49,1.639,53,0.007,54,0.007,55,0.007,56,0.007,90,1.028,94,1.128,148,0.665,157,1.043,330,1.248,347,1.061,348,1.226,349,1.614,350,1.466,351,2.444,353,4.277,354,2.66,357,0.861,360,1.851,380,1.143,381,1.979,382,2.962,383,2.121,384,1.034,385,1.851,386,1.814,451,1.243,455,1.456,459,1.651,466,2.286,467,2.286,468,1.651,469,2.507,470,1.579,471,1.344,472,1.651,473,1.651,474,1.651,475,1.651,476,1.226,477,1.579,478,1.651,479,1.614,480,1.226,481,3.553,482,1.651,483,1.651,484,1.124,485,2.78,486,1.651,487,2.443,488,1.651,489,1.651,490,3.632,491,1.319,492,2.78,493,1.651,494,1.651,495,1.651,496,1.651,497,1.651,498,1.651,499,1.288,500,1.651,501,2.78,502,1.396,503,2.721,504,1.651,505,2.388,506,1.651,507,1.651,508,2.366,509,2.366,510,2.366,511,2.366,512,2.366,513,2.366,514,2.366,515,2.366,516,2.366,517,2.842,518,2.08,519,2.842,520,2.842,521,2.842,522,2.842,523,2.842,524,2.842,525,2.842,526,1.501,527,1.796,528,2.842,529,2.225,530,1.651,531,0.88,532,1.651,533,2.193,534,0.969,535,1.369,536,1.105,537,1.163,538,1.396,539,2.388,540,1.344,541,1.369,542,1.651,543,1.545,544,1.614,545,1.651,546,1.396,675,3.016,2508,3.019,2509,3.019,2510,3.019,2511,3.019,2512,3.019,2513,3.019,2514,3.019,2515,3.019,2516,3.019,2517,3.019,2518,3.019,2519,3.019,2520,3.019,2521,3.019,2522,3.019,2530,3.675,2531,3.675,2532,3.675,2533,3.675,2534,3.675,2535,3.675,2536,3.675,2537,3.675,2538,3.675,2539,3.675,2540,3.675,2541,3.675,2542,3.675,2543,3.675]],["title/classes/ModuleExport.html",[0,0.34,913,2.052]],["body/classes/ModuleExport.html",[0,0.701,2,0.318,3,0.051,4,0.045,5,0.051,7,0.884,9,1.134,11,0.892,12,1.248,13,1.632,14,0.07,15,0.203,18,0.13,19,0.006,20,0.437,21,0.177,24,0.183,34,0.104,37,0.714,44,0.741,53,0.009,54,0.009,55,0.009,56,0.009,94,1.142,97,1.501,148,0.342,216,1.869,320,1.89,350,1.368,357,0.586,389,2.053,390,1.335,397,1.393,408,1.393,413,1.461,420,3.334,451,1.554,499,0.777,527,1.212,531,1.802,534,1.272,536,1.451,551,2.368,552,2.368,554,2.699,555,1.832,556,2.459,557,2.241,558,2.202,559,2.163,560,2.459,561,2.459,562,2.459,563,2.368,564,2.368,566,2.51,567,2.466,675,1.906,689,1.869,704,2.241,707,3.543,714,1.869,897,2.965,898,2.218,899,2.167,900,2.167,901,2.167,902,2.965,904,2.965,906,2.965,908,2.899,909,2.899,910,2.899,911,2.899,912,2.899,913,2.836,914,2.899,915,2.899,916,2.899,917,2.899,918,2.899,919,3.459,920,3.459,921,3.034,922,2.899,923,2.167,924,2.167,925,2.965,926,2.167,927,2.965,928,2.167,929,2.899,930,2.218,931,2.218,932,2.218,933,3.232,934,3.634,935,2.167,936,2.073,937,2.899,938,1.986,939,3.38,940,3.634,941,1.906,942,2.965,943,2.965,944,2.965,945,3.035,946,2.899,947,2.167,948,2.167,949,2.167,2544,4.824,2545,4.824,2546,4.824,2547,4.824,2548,4.824,2549,4.824,2550,4.824]],["title/classes/ModuleInstance.html",[0,0.34,447,2.145]],["body/classes/ModuleInstance.html",[0,0.661,2,0.305,3,0.049,4,0.043,5,0.049,9,1.103,11,0.876,14,0.067,15,0.197,18,0.121,19,0.006,20,0.417,21,0.165,24,0.352,34,0.102,37,0.511,38,0.665,39,1.292,44,0.893,46,1.794,53,0.008,54,0.008,55,0.008,56,0.008,139,2.39,148,0.329,154,1.904,179,1.937,196,2.691,254,2.641,263,3.644,320,1.163,321,2.688,323,1.545,345,2.353,346,2.418,347,1.811,348,2.14,353,2.95,354,2.106,357,0.814,360,1.835,363,2.757,364,2.351,365,2.234,366,2.757,367,2.234,368,2.535,369,2.234,370,3.655,371,2.418,372,3.655,373,2.418,374,3.655,375,2.418,376,3.021,377,2.292,378,3.415,379,2.18,380,2.473,381,1.962,382,1.996,383,2.103,384,2.348,385,1.835,386,2.14,387,2.129,388,2.292,389,2.473,390,2.037,391,3.553,392,3.096,393,3.096,394,3.096,395,4.593,396,4.383,397,1.354,398,2.757,399,2.26,400,3.096,401,3.26,402,2.39,403,3.35,404,3.35,405,2.485,406,2.26,407,3.35,408,1.354,409,3.096,410,3.308,411,2.418,412,1.491,413,1.025,414,1.989,415,2.418,416,2.418,417,2.129,418,2.418,419,2.418,420,1.601,421,2.418,422,2.18,423,2.034,424,2.034,425,1.572,426,1.989,427,2.418,428,1.491,429,2.418,430,2.129,431,3.096,432,2.353,433,2.129,434,1.302,435,1.545,436,3.467,437,3.931,438,2.234,439,2.234,440,3.26,441,4.039,442,3.836,443,3.415,444,3.35,445,3.845,446,4.039,447,3.571,448,3.553,449,4.039,450,1.989,451,1.414,452,2.353,453,2.18,454,2.234,731,2.08,2551,4.63,2552,4.63,2553,4.63,2554,4.63,2555,4.63]],["title/classes/ModuleInstanceDTO.html",[0,0.34,384,1.343]],["body/classes/ModuleInstanceDTO.html",[0,0.698,2,0.299,3,0.048,4,0.042,5,0.048,13,1.12,14,0.066,15,0.194,18,0.092,19,0.006,20,0.451,21,0.125,24,0.276,34,0.104,37,0.727,38,1.131,39,0.912,49,1.664,53,0.008,54,0.008,55,0.008,56,0.008,94,1.169,148,0.678,157,0.73,330,1.538,347,0.884,348,1.511,349,1.99,350,1.489,351,2.408,357,0.875,360,2.081,380,1.409,381,2.408,382,2.264,383,2.385,384,1.778,385,1.807,386,2.108,451,1.591,455,1.693,459,2.035,466,2.657,467,2.657,468,2.035,469,2.819,470,1.946,471,1.656,472,2.035,473,2.035,474,2.035,475,2.035,476,1.511,477,1.946,478,2.035,479,1.99,480,1.511,481,3.383,482,2.035,483,2.035,484,1.385,485,2.715,486,2.035,487,2.839,488,2.035,489,2.035,490,3.866,491,1.625,492,2.715,493,2.035,494,2.035,495,2.035,496,2.035,497,2.035,498,2.035,499,1.269,500,2.035,501,2.715,502,1.721,503,2.657,504,2.035,505,2.776,506,2.035,507,2.035,508,1.656,509,1.656,510,1.656,511,1.656,512,1.656,513,1.656,514,1.656,515,1.656,516,1.656,517,1.99,518,1.838,519,1.99,520,1.99,521,1.99,522,1.99,523,1.99,524,1.99,525,1.99,526,1.051,527,1.587,528,1.99,529,1.966,530,2.035,531,1.085,532,2.035,533,2.548,534,1.194,535,1.688,536,1.362,537,1.434,538,1.721,539,2.776,540,1.656,541,1.688,542,2.035,543,1.905,544,1.99,545,2.035,546,1.721,2556,4.53,2557,4.53]],["title/classes/ModuleInstancePropertiesDTO.html",[0,0.34,381,1.461]],["body/classes/ModuleInstancePropertiesDTO.html",[0,0.696,2,0.29,3,0.047,4,0.041,5,0.047,13,1.087,14,0.064,15,0.19,18,0.123,19,0.006,20,0.451,21,0.168,24,0.272,34,0.104,37,0.696,38,1.22,39,0.886,49,1.651,53,0.008,54,0.008,55,0.008,56,0.008,94,1.157,148,0.675,157,0.709,330,1.494,347,0.858,348,1.467,349,1.932,350,1.533,351,2.377,357,0.877,360,2.048,380,1.368,381,2.377,382,2.228,383,2.347,384,1.237,385,1.77,386,2.065,451,1.376,455,2.082,459,1.976,466,2.603,467,2.603,468,1.976,469,2.775,470,1.89,471,1.608,472,1.976,473,1.976,474,1.976,475,1.976,476,1.467,477,1.89,478,1.976,479,1.932,480,1.467,481,3.34,482,1.976,483,1.976,484,1.345,485,2.659,486,1.976,487,2.781,488,1.976,489,1.976,490,3.834,491,1.578,492,2.659,493,1.976,494,1.976,495,1.976,496,1.976,497,1.976,498,1.976,499,1.369,500,1.976,501,2.659,502,1.671,503,2.603,504,1.976,505,2.719,506,1.976,507,1.976,508,1.608,509,1.608,510,1.608,511,1.608,512,1.608,513,1.608,514,1.608,515,1.608,516,1.608,517,1.932,518,1.8,519,1.932,520,1.932,521,1.932,522,1.932,523,1.932,524,1.932,525,1.932,526,1.02,527,1.555,528,1.932,529,1.926,530,1.976,531,1.053,532,1.976,533,2.888,534,1.159,535,1.639,536,1.322,537,2.267,538,2.721,539,2.719,540,1.608,541,1.639,542,1.976,543,1.849,544,1.932,545,1.976,546,1.671,2558,4.398,2559,4.398,2560,4.398,2561,4.398,2562,4.398,2563,4.398]],["title/classes/ModuleInstanceSimpleData.html",[0,0.34,569,2.727]],["body/classes/ModuleInstanceSimpleData.html",[0,0.693,2,0.416,3,0.067,4,0.059,5,0.067,9,1.084,11,0.867,12,1.192,13,1.558,14,0.091,15,0.242,18,0.114,19,0.006,20,0.439,21,0.155,24,0.239,34,0.103,37,0.715,38,0.905,44,0.708,53,0.012,54,0.012,55,0.012,56,0.012,148,0.448,320,1.583,350,1.449,357,0.761,390,1.745,397,1.331,408,1.331,435,2.103,451,1.723,455,2.106,499,1.267,518,1.833,527,1.583,529,1.961,534,1.662,535,2.349,537,1.995,540,2.305,547,4.64,548,3.853,551,2.821,552,3.074,553,4.49,554,2.821,555,2.395,556,2.349,557,2.141,558,2.103,559,2.066,560,2.349,561,2.349,562,2.349,563,2.262,564,2.262,565,3.489,566,2.103,567,2.066,568,4.49,569,4.893,570,4.64,571,4.64,572,4.893,573,3.72,574,4.64,575,3.72,576,4.64,577,3.853,578,3.853,579,3.853,2564,6.304,2565,6.304]],["title/classes/ModuleListDTO.html",[0,0.34,470,2.052]],["body/classes/ModuleListDTO.html",[0,0.693,2,0.28,3,0.045,4,0.04,5,0.045,13,1.048,14,0.061,15,0.185,18,0.134,19,0.006,20,0.451,21,0.182,24,0.266,34,0.103,37,0.688,38,1.098,39,0.854,49,1.633,53,0.008,54,0.008,55,0.008,56,0.008,94,1.247,148,0.671,157,0.683,330,1.44,347,0.827,348,1.414,349,1.862,350,1.461,351,2.339,357,0.883,360,2.008,380,1.319,381,2.147,382,2.379,383,2.301,384,1.193,385,1.725,386,2.012,451,1.348,455,1.616,459,1.905,466,2.952,467,2.952,468,1.905,469,2.719,470,2.591,471,2.566,472,3.154,473,3.154,474,3.154,475,3.154,476,2.342,477,3.016,478,3.154,479,3.083,480,2.342,481,3.285,482,1.905,483,1.905,484,1.297,485,2.591,486,1.905,487,2.71,488,1.905,489,1.905,490,3.794,491,1.521,492,2.591,493,1.905,494,1.905,495,1.905,496,1.905,497,1.905,498,1.905,499,1.232,500,1.905,501,2.591,502,1.61,503,2.536,504,1.905,505,2.649,506,1.905,507,1.905,508,1.55,509,1.55,510,1.55,511,1.55,512,1.55,513,1.55,514,1.55,515,1.55,516,1.55,517,1.862,518,1.754,519,1.862,520,1.862,521,1.862,522,1.862,523,1.862,524,1.862,525,1.862,526,0.984,527,1.515,528,1.862,529,1.876,530,1.905,531,1.015,532,1.905,533,2.432,534,1.117,535,1.58,536,1.275,537,1.342,538,1.61,539,2.649,540,1.55,541,1.58,542,1.905,543,1.783,544,1.862,545,1.905,546,1.61,2566,4.24,2567,4.24,2568,4.24,2569,4.24,2570,4.24,2571,4.24,2572,4.24,2573,4.24,2574,4.24,2575,4.24,2576,4.24]],["title/classes/ModuleModeDTO.html",[0,0.34,501,2.052]],["body/classes/ModuleModeDTO.html",[0,0.698,2,0.296,3,0.048,4,0.042,5,0.048,13,1.11,14,0.065,15,0.193,18,0.105,19,0.006,20,0.451,21,0.143,24,0.275,34,0.104,37,0.7,38,1.126,39,0.905,49,1.721,53,0.008,54,0.008,55,0.008,56,0.008,94,1.166,148,0.685,157,0.724,330,1.526,347,0.877,348,1.499,349,1.973,350,1.485,351,2.399,357,0.877,360,2.072,380,1.398,381,2.216,382,2.254,383,2.374,384,1.264,385,1.797,386,2.096,451,1.392,455,1.683,459,2.018,466,2.642,467,2.642,468,2.018,469,2.806,470,1.93,471,1.642,472,2.018,473,2.018,474,2.018,475,2.018,476,1.499,477,1.93,478,2.018,479,1.973,480,1.499,481,3.371,482,2.018,483,2.018,484,1.374,485,2.699,486,2.018,487,2.822,488,2.018,489,2.018,490,3.857,491,1.612,492,2.699,493,2.018,494,2.018,495,2.018,496,2.018,497,2.018,498,2.018,499,1.264,500,2.018,501,3.113,502,2.752,503,2.642,504,2.018,505,2.759,506,2.018,507,2.018,508,1.642,509,1.642,510,1.642,511,1.642,512,1.642,513,1.642,514,1.642,515,1.642,516,1.642,517,1.973,518,1.827,519,1.973,520,1.973,521,1.973,522,1.973,523,1.973,524,1.973,525,1.973,526,1.042,527,1.578,528,1.973,529,1.954,530,2.018,531,1.076,532,2.018,533,2.534,534,1.184,535,1.674,536,1.351,537,1.422,538,1.706,539,2.759,540,1.642,541,1.674,542,2.018,543,1.889,544,1.973,545,2.018,546,1.706,2577,4.492,2578,4.492,2579,4.492]],["title/classes/ModuleNetworkInterfaceDTO.html",[0,0.34,380,1.486]],["body/classes/ModuleNetworkInterfaceDTO.html",[0,0.696,2,0.289,3,0.046,4,0.041,5,0.046,13,1.082,14,0.063,15,0.19,18,0.126,19,0.006,20,0.451,21,0.172,24,0.271,34,0.104,37,0.721,38,1.218,39,0.882,49,1.711,53,0.008,54,0.008,55,0.008,56,0.008,94,1.155,148,0.675,157,0.705,330,1.487,347,0.854,348,1.461,349,1.923,350,1.475,351,2.595,357,0.875,360,2.043,380,1.919,381,2.185,382,2.223,383,2.342,384,1.232,385,2.043,386,2.058,451,1.372,455,1.653,459,1.967,466,2.594,467,2.594,468,1.967,469,3.005,470,1.881,471,1.6,472,1.967,473,1.967,474,1.967,475,1.967,476,1.461,477,1.881,478,1.967,479,1.923,480,1.461,481,3.333,482,1.967,483,1.967,484,1.339,485,2.651,486,1.967,487,2.772,488,1.967,489,1.967,490,3.829,491,1.571,492,2.651,493,1.967,494,1.967,495,1.967,496,1.967,497,1.967,498,1.967,499,1.25,500,1.967,501,2.651,502,1.663,503,2.594,504,1.967,505,2.71,506,1.967,507,1.967,508,1.6,509,1.6,510,1.6,511,1.6,512,1.6,513,1.6,514,1.6,515,1.6,516,1.6,517,1.923,518,1.794,519,1.923,520,1.923,521,1.923,522,1.923,523,1.923,524,1.923,525,1.923,526,1.016,527,1.55,528,1.923,529,1.919,530,3.21,531,1.711,532,3.21,533,2.488,534,1.154,535,1.631,536,1.316,537,1.386,538,1.663,539,2.71,540,1.6,541,1.631,542,1.967,543,1.841,544,1.923,545,1.967,546,1.663,2580,4.378,2581,4.378,2582,4.378,2583,4.378,2584,4.378,2585,4.378,2586,4.378]],["title/injectables/ModuleService.html",[206,3.031,580,1.926]],["body/injectables/ModuleService.html",[0,0.348,3,0.052,4,0.046,5,0.052,14,0.071,18,0.123,19,0.006,20,0.423,21,0.174,24,0.333,26,1.309,34,0.052,49,1.259,53,0.009,54,0.009,55,0.009,56,0.009,67,2.484,81,1.134,88,2.207,89,2.207,90,1.609,113,2.626,206,4.226,209,5.703,222,1.755,228,1.943,273,3.231,304,3.231,305,3.231,309,3.739,310,3.03,330,2.762,357,0.84,378,2.861,379,2.301,380,2.072,382,2.072,385,1.904,387,2.247,470,2.861,580,2.686,582,2.626,584,3.817,587,3.757,588,5.908,590,4.837,594,5.943,595,4.07,600,3.757,606,2.626,607,2.484,608,5.804,610,2.1,629,2.446,642,5.59,651,4.8,667,2.262,867,5.162,1505,2.992,1911,6.251,1912,6.251,1955,6.682,1956,6.682,1957,6.682,1958,6.682,1959,6.682,1960,6.682,2587,4.888,2588,8.133,2589,6.659,2590,5.943,2591,6.659,2592,6.659,2593,4.888,2594,4.888,2595,6.659,2596,4.888,2597,7.575,2598,6.659,2599,4.888,2600,4.888,2601,4.888,2602,5.943,2603,6.659,2604,4.888,2605,6.659,2606,6.659,2607,4.888,2608,6.659,2609,4.888,2610,4.888,2611,4.888]],["title/classes/ModuleSimpleData.html",[0,0.34,914,2.098]],["body/classes/ModuleSimpleData.html",[0,0.705,2,0.337,3,0.054,4,0.048,5,0.054,9,0.879,11,0.757,12,0.967,13,1.698,14,0.074,15,0.211,18,0.1,19,0.006,20,0.437,21,0.136,24,0.194,34,0.105,37,0.737,44,0.575,53,0.009,54,0.009,55,0.009,56,0.009,94,1.17,97,1.591,148,0.363,216,1.982,320,1.285,350,1.162,357,0.61,389,2.136,390,1.416,397,1.08,408,1.08,413,1.132,420,3.362,451,1.709,499,0.824,527,1.285,531,1.856,534,1.348,536,1.538,551,2.464,552,2.781,554,2.464,555,1.943,556,1.906,557,1.737,558,1.706,559,1.677,560,1.906,561,1.906,562,1.906,563,1.835,564,1.835,566,1.706,567,1.677,689,1.982,704,2.332,707,3.513,714,1.982,897,3.085,898,2.352,899,2.298,900,2.298,901,2.298,902,3.085,904,3.085,906,3.085,908,3.016,909,3.016,910,3.016,911,3.016,912,3.016,913,2.198,914,3.405,915,3.016,916,3.016,917,3.016,918,3.016,919,2.352,920,2.352,921,2.063,922,3.405,923,2.298,924,2.298,925,3.085,926,2.298,927,3.085,928,2.298,929,3.016,930,2.352,931,2.352,932,2.352,933,3.331,934,3.723,935,2.298,936,2.198,937,3.016,938,2.106,939,3.483,940,3.723,941,2.022,942,3.085,943,3.085,944,3.085,945,3.158,946,3.016,947,2.298,948,2.298,949,2.298,2612,5.116,2613,5.116]],["title/classes/ModuleStatusDTO.html",[0,0.34,503,2.008]],["body/classes/ModuleStatusDTO.html",[0,0.698,2,0.296,3,0.048,4,0.042,5,0.048,13,1.11,14,0.065,15,0.193,18,0.105,19,0.006,20,0.451,21,0.143,24,0.275,34,0.104,37,0.7,38,1.126,39,0.905,49,1.721,53,0.008,54,0.008,55,0.008,56,0.008,94,1.166,148,0.685,157,0.724,330,1.526,347,0.877,348,1.499,349,1.973,350,1.485,351,2.399,357,0.877,360,2.072,380,1.398,381,2.216,382,2.254,383,2.374,384,1.264,385,1.797,386,2.096,451,1.392,455,1.683,459,2.018,466,2.642,467,2.642,468,2.018,469,2.806,470,1.93,471,1.642,472,2.018,473,2.018,474,2.018,475,2.018,476,1.499,477,1.93,478,2.018,479,1.973,480,1.499,481,3.371,482,2.018,483,2.018,484,1.374,485,2.699,486,2.018,487,2.822,488,2.018,489,2.018,490,3.857,491,1.612,492,2.699,493,2.018,494,2.018,495,2.018,496,2.018,497,2.018,498,2.018,499,1.264,500,2.018,501,2.699,502,1.706,503,3.046,504,3.255,505,2.759,506,2.018,507,2.018,508,1.642,509,1.642,510,1.642,511,1.642,512,1.642,513,1.642,514,1.642,515,1.642,516,1.642,517,1.973,518,1.827,519,1.973,520,1.973,521,1.973,522,1.973,523,1.973,524,1.973,525,1.973,526,1.042,527,1.578,528,1.973,529,1.954,530,2.018,531,1.076,532,2.018,533,2.534,534,1.184,535,1.674,536,1.351,537,1.422,538,1.706,539,2.759,540,1.642,541,1.674,542,2.018,543,1.889,544,1.973,545,2.018,546,1.706,2614,4.492,2615,4.492,2616,4.492]],["title/interfaces/ModuleTopology.html",[389,1.486,446,2.427]],["body/interfaces/ModuleTopology.html",[0,0.664,3,0.05,4,0.044,5,0.05,9,1.121,11,0.885,14,0.069,15,0.201,18,0.095,19,0.006,20,0.416,24,0.354,34,0.102,38,0.681,39,1.314,44,0.902,46,1.838,53,0.009,54,0.009,55,0.009,56,0.009,139,2.431,148,0.337,154,1.923,179,2.019,196,2.726,254,2.661,263,3.691,320,1.191,321,2.712,323,1.582,345,2.41,346,2.477,347,1.82,348,2.176,354,1.357,357,0.818,360,1.866,363,2.803,364,2.369,365,2.289,366,2.803,367,2.289,368,2.578,369,2.289,370,3.872,371,2.477,372,3.872,373,2.477,374,3.872,375,2.477,376,3.072,377,2.348,378,3.451,379,2.234,380,2.499,381,1.451,382,2.03,383,2.138,384,1.835,385,1.866,386,2.176,387,2.181,388,2.348,389,2.499,390,2.064,391,3.599,392,3.136,393,3.136,394,3.136,395,4.661,396,4.495,397,1.377,398,2.803,399,2.298,400,3.148,401,3.315,402,2.431,403,3.407,404,3.407,405,2.527,406,2.298,407,3.407,408,1.377,409,3.148,410,3.35,411,2.477,412,1.528,413,1.05,414,2.038,415,2.477,416,2.477,417,2.181,418,2.477,419,2.477,420,1.64,421,2.477,422,2.234,423,2.084,424,2.084,425,1.611,426,2.038,427,2.477,428,1.528,429,2.477,430,2.181,431,3.148,432,2.41,433,2.181,434,1.334,435,1.582,436,3.072,437,3.965,438,2.289,439,2.289,440,3.789,441,4.081,442,3.876,443,3.451,444,3.407,445,3.894,446,4.081,447,3.35,448,2.289,449,4.081,450,2.038,451,0.911,452,2.41,453,2.234,454,2.289,718,2.9]],["title/classes/NameMappingDTO.html",[0,0.34,686,3.031]],["body/classes/NameMappingDTO.html",[0,0.678,2,0.409,3,0.066,4,0.058,5,0.066,14,0.09,15,0.239,18,0.129,19,0.006,20,0.449,21,0.176,24,0.235,34,0.102,49,1.608,53,0.011,54,0.011,55,0.011,56,0.011,94,0.875,148,0.604,309,2.85,320,1.557,350,1.438,351,1.896,357,0.792,360,1.773,384,1.744,385,1.773,499,0.999,502,2.355,508,2.266,509,2.266,510,2.266,511,2.266,512,2.266,513,2.266,514,2.266,515,2.266,516,2.266,518,1.803,529,1.928,541,2.31,546,2.355,566,2.068,567,2.032,671,4.756,672,4.098,678,4.756,679,4.756,680,3.934,681,4.098,682,3.934,683,4.098,684,4.098,685,4.098,686,5.397,687,5.621,688,5.621,689,3.294,690,5.621,691,4.756,692,4.098,693,3.934,694,3.934,695,3.934,696,4.098,697,4.098,698,3.934,699,3.789,700,3.934,2617,6.199,2618,6.199,2619,6.199,2620,6.199]],["title/components/NavbarComponent.html",[33,1.85,57,0.977]],["body/components/NavbarComponent.html",[0,0.319,3,0.047,4,0.042,5,0.047,7,0.82,8,2.527,9,1.077,12,1.481,14,0.065,18,0.113,19,0.006,20,0.275,21,0.169,24,0.238,26,1.199,27,2.216,32,2.282,33,3.034,34,0.047,35,6.503,38,0.9,39,1.262,41,2.801,44,1.035,45,2.128,47,2.759,48,3.745,52,1.606,53,0.008,54,0.008,55,0.008,56,0.008,57,1.282,58,1.843,59,1.734,60,1.923,61,1.923,62,1.923,64,1.923,65,4.283,66,4.043,68,2.635,70,2.635,80,4.081,81,1.678,88,1.161,89,1.161,90,0.846,95,2.248,112,2.054,118,2.018,126,3.093,141,1.923,142,2.692,143,1.417,144,1.923,145,2.316,146,1.923,147,1.805,148,0.646,149,1.966,150,1.805,151,3.176,152,1.882,153,1.843,154,1.501,155,1.966,156,1.843,157,1.515,158,1.966,159,1.843,160,1.966,161,1.966,162,1.769,163,1.966,164,1.805,165,1.966,166,1.769,167,1.805,168,1.966,169,1.769,170,1.769,171,1.966,172,1.966,173,1.843,174,1.966,175,1.769,176,1.843,177,1.966,178,1.882,179,1.817,180,1.882,181,2.752,182,1.882,183,1.882,184,1.769,185,1.769,186,1.966,187,1.769,188,1.769,189,1.769,190,1.966,191,1.805,192,1.966,193,1.966,194,1.966,222,1.652,228,1.431,229,2.174,310,1.668,321,1.441,323,2.09,399,2.207,424,2.752,434,1.763,526,1.983,721,2.128,722,2.128,723,1.981,730,5.148,731,2.011,749,4.816,753,2.204,755,2.128,770,1.549,776,2.476,784,3.846,786,3.698,787,2.128,831,1.369,960,1.853,995,3.578,1069,4.331,1088,4.78,1118,3.994,1120,3.994,1129,4.816,1156,5.69,1185,4.331,1202,4.551,1229,3.468,1317,4.551,1318,4.551,1993,6.435,2370,4.816,2621,4.476,2622,6.266,2623,7.231,2624,7.231,2625,6.266,2626,7.833,2627,6.266,2628,6.453,2629,6.266,2630,6.266,2631,4.476,2632,7.833,2633,6.266,2634,6.266,2635,4.476,2636,6.266,2637,7.833,2638,4.476,2639,6.266,2640,6.266,2641,6.266,2642,4.476,2643,4.476,2644,4.476,2645,4.476,2646,4.476,2647,4.476,2648,3.994,2649,4.476,2650,4.476,2651,4.476,2652,6.266]],["title/classes/NavbarElement.html",[0,0.34,35,3.469]],["body/classes/NavbarElement.html",[0,0.625,1,6.242,2,0.438,3,0.07,4,0.062,5,0.07,6,5.457,7,1.217,8,3.275,9,1.142,10,5.105,11,0.732,12,1.256,13,1.642,14,0.096,15,0.25,16,5.457,17,5.457,18,0.132,19,0.006,20,0.4,21,0.181,24,0.252,25,5.217,26,1.779,27,2.275,28,5.154,29,2.661,30,6.671,31,4.637,32,2.247,33,3.146,34,0.093,35,5.898,36,7.206,37,0.699,38,1.166,39,1.635,40,7.206,41,3.398,42,6.742,43,4.391,44,0.746,45,2.256,46,2.573,47,2.339,48,2.735,49,1.256,50,2.383,51,5.457,52,2.383,53,0.012,54,0.012,55,0.012,56,0.012,90,1.728,2653,6.642,2654,6.642,2655,6.642,2656,6.642]],["title/components/NavbarElementComponent.html",[57,0.977,173,1.966]],["body/components/NavbarElementComponent.html",[0,0.359,3,0.054,4,0.047,5,0.054,7,0.924,9,1.17,11,0.75,19,0.006,21,0.1,24,0.191,26,1.352,27,1.765,29,2.23,32,2.131,33,1.955,34,0.054,38,0.977,39,1.37,41,2.636,44,0.764,47,2.396,48,3.948,52,1.81,53,0.009,54,0.009,55,0.009,56,0.009,57,1.392,58,2.077,59,1.955,60,2.168,61,2.168,62,2.168,64,2.168,65,4.322,66,4.092,68,2.861,70,2.861,81,1.171,112,2.23,122,2.564,139,1.88,141,2.168,142,2.924,143,1.597,144,2.168,145,2.437,146,2.168,147,2.035,148,0.663,149,2.216,150,2.035,151,3.382,152,2.122,153,2.077,154,1.629,155,2.216,156,2.077,157,0.813,158,2.216,159,2.077,160,2.216,161,2.216,162,1.994,163,2.216,164,2.035,165,2.216,166,1.994,167,2.035,168,2.216,169,1.994,170,1.994,171,2.216,172,2.216,173,3.393,174,2.216,175,1.994,176,2.077,177,2.216,178,2.122,179,1.912,180,2.122,181,2.989,182,2.122,183,2.122,184,1.994,185,1.994,186,2.216,187,1.994,188,1.994,189,1.994,190,2.216,191,2.035,192,2.216,193,2.216,194,2.216,287,6.073,339,4.943,340,5.23,341,6.073,667,2.311,721,2.311,722,2.311,755,2.311,1154,4.703,1330,7.283,1498,4.159,1968,6.073,2087,5.59,2095,4.503,2097,6.073,2126,4.503,2127,8.558,2128,4.503,2129,6.073,2137,8.222,2657,6.805,2658,5.046,2659,6.805,2660,7.699,2661,6.805,2662,5.046,2663,5.046,2664,5.046,2665,5.046,2666,6.805,2667,6.871,2668,9.06,2669,9.06,2670,5.046,2671,6.805,2672,6.805,2673,6.805,2674,9.213,2675,8.241,2676,8.241,2677,8.241,2678,8.241,2679,5.046]],["title/classes/NavbarItem.html",[0,0.34,42,3.671]],["body/classes/NavbarItem.html",[0,0.625,1,6.742,2,0.438,3,0.07,4,0.062,5,0.07,6,5.457,7,1.217,8,3.537,9,1.142,10,5.105,11,0.732,12,1.256,13,1.642,14,0.096,15,0.25,16,5.457,17,5.457,18,0.132,19,0.006,20,0.418,21,0.181,24,0.252,25,5.217,26,1.779,27,2.275,28,4.216,29,2.177,30,5.457,31,3.793,32,1.838,33,2.573,34,0.093,35,4.825,36,5.457,37,0.529,38,0.954,39,1.338,40,5.457,41,2.573,42,6.742,43,5.368,44,0.912,45,2.758,46,3.146,47,2.86,48,3.343,49,1.658,50,3.147,51,7.206,52,3.147,53,0.012,54,0.012,55,0.012,56,0.012,90,1.728,2680,6.642,2681,6.642,2682,6.642,2683,6.642]],["title/classes/NetOSRouterDTO.html",[0,0.34,710,3.469]],["body/classes/NetOSRouterDTO.html",[0,0.649,2,0.434,3,0.07,4,0.061,5,0.07,14,0.095,15,0.248,18,0.132,19,0.006,20,0.443,21,0.18,34,0.097,37,0.525,49,1.799,53,0.012,54,0.012,55,0.012,56,0.012,74,3.762,94,0.93,148,0.574,351,2.91,357,0.864,469,3.13,499,1.062,531,1.578,675,2.603,701,6.618,702,5.064,703,5.064,704,3.094,707,3.195,710,6.348,711,7.003,712,3.762,713,5.064,714,2.552,715,5.064,716,5.064,717,4.553,2684,6.588,2685,6.588,2686,6.588,2687,6.588]],["title/components/NetworkComponent.html",[57,0.977,175,1.887]],["body/components/NetworkComponent.html",[0,0.283,3,0.061,4,0.037,5,0.042,14,0.058,15,0.177,18,0.108,19,0.006,21,0.168,24,0.312,26,1.065,27,1.493,32,1.1,33,1.54,34,0.042,37,0.459,38,0.827,39,1.16,48,1.636,50,2.663,52,1.426,53,0.007,54,0.007,55,0.007,56,0.007,57,1.519,58,1.636,59,1.54,60,1.708,61,1.708,62,1.708,64,1.708,65,4.223,66,3.961,68,2.421,70,2.421,80,2.85,81,0.922,83,4.109,84,4.109,88,1.031,89,1.031,90,0.752,94,1.16,95,2.827,96,2.993,97,1.791,112,1.303,114,2.421,116,3.747,122,3.44,139,3.157,141,1.708,142,2.474,143,1.258,144,1.708,145,2.195,146,1.708,147,1.603,148,0.659,149,1.746,150,1.603,151,2.974,152,1.671,153,1.636,154,1.778,155,1.746,156,1.636,157,1.196,158,1.746,159,1.636,160,1.746,161,1.746,162,1.571,163,1.746,164,1.603,165,1.746,166,1.571,167,1.603,168,1.746,169,1.571,170,1.571,171,1.746,172,1.746,173,1.636,174,1.746,175,2.934,176,1.636,177,1.746,178,1.671,179,1.828,180,1.671,181,2.529,182,1.671,183,1.671,184,1.571,185,1.571,186,1.746,187,1.571,188,1.571,189,1.571,190,1.746,191,1.603,192,1.746,193,1.746,194,1.746,216,2.231,222,1.518,228,0.908,229,1.195,244,1.51,245,2.275,246,1.54,254,2.654,316,3.121,347,1.124,364,2.446,389,1.791,471,2.88,476,2.476,491,2.066,526,0.922,531,0.952,624,3.398,646,4.476,820,1.51,849,2.779,941,2.275,959,3.52,997,4.233,998,3.52,1001,4.239,1002,2.627,1003,2.627,1005,2.523,1007,4.691,1009,3.44,1011,3.187,1012,2.627,1033,2.926,1075,3.288,1076,3.288,1109,2.346,1271,2.523,1272,2.523,1274,3.265,1277,4.233,1278,2.346,1293,3.806,1331,2.346,1337,3.265,1341,4.182,1391,3.772,1410,3.398,1414,5.204,1485,3.806,1499,3.007,1500,5.001,1501,4.712,1505,1.786,1506,2.135,1549,2.714,1681,6.08,1682,1.786,1916,3.52,2091,2.627,2093,3.806,2144,4.68,2145,5.679,2149,5.563,2150,4.68,2151,4.68,2152,4.68,2153,5.131,2154,2.747,2161,2.747,2162,2.747,2163,2.523,2164,2.747,2165,2.747,2166,3.98,2167,3.52,2175,3.398,2176,3.98,2177,3.98,2178,3.98,2179,3.98,2180,3.98,2181,3.98,2182,3.98,2183,3.98,2184,2.747,2185,2.747,2186,2.747,2187,2.27,2188,2.627,2189,2.747,2190,2.747,2191,2.747,2192,2.747,2193,2.747,2194,3.98,2195,3.98,2196,2.747,2197,2.747,2198,5.131,2199,2.523,2200,2.627,2201,2.627,2202,2.747,2203,3.398,2204,3.98,2205,3.98,2206,2.747,2207,5.679,2208,2.747,2209,2.346,2210,2.747,2211,2.747,2212,2.747,2319,5.968,2688,3.975,2689,6.771,2690,5.758,2691,5.758,2692,3.975,2693,3.975,2694,3.975,2695,3.975,2696,3.975,2697,5.758,2698,8.216,2699,8.216,2700,3.975]],["title/classes/NetworkConstraints.html",[0,0.34,906,2.145]],["body/classes/NetworkConstraints.html",[0,0.707,2,0.343,3,0.055,4,0.049,5,0.055,9,0.895,11,0.766,12,0.985,13,1.718,19,0.006,20,0.438,24,0.198,34,0.105,37,0.713,44,0.585,53,0.01,54,0.01,55,0.01,56,0.01,94,1.179,97,1.621,148,0.37,216,2.018,320,1.308,350,1.176,357,0.617,389,2.163,390,1.442,397,1.1,408,1.1,413,1.153,420,3.37,451,1.603,499,0.839,527,1.308,531,1.874,534,1.373,536,1.566,551,2.494,552,2.494,554,2.494,555,1.979,556,1.941,557,1.769,558,1.738,559,1.707,560,1.941,561,1.941,562,1.941,563,1.869,564,1.869,566,1.738,567,1.707,689,2.018,704,2.361,707,3.523,714,2.018,897,3.123,898,2.395,899,2.34,900,2.34,901,2.34,902,3.123,904,3.123,906,3.515,908,3.053,909,3.053,910,3.053,911,3.053,912,3.053,913,2.238,914,3.053,915,3.053,916,3.053,917,3.053,918,3.053,919,2.395,920,2.395,921,2.101,922,3.053,923,2.34,924,2.34,925,3.123,926,2.34,927,3.123,928,2.34,929,3.053,930,2.395,931,2.395,932,2.395,933,3.361,934,3.75,935,2.34,936,2.238,937,3.053,938,2.145,939,3.515,940,3.75,941,2.059,942,3.123,943,3.123,944,3.123,945,3.196,946,3.053,947,2.34,948,2.34,949,2.34]],["title/classes/NetworkDTO.html",[0,0.34,469,1.85]],["body/classes/NetworkDTO.html",[0,0.653,2,0.442,3,0.071,4,0.063,5,0.071,14,0.097,15,0.251,18,0.128,19,0.006,20,0.445,21,0.174,34,0.097,49,1.806,53,0.012,54,0.012,55,0.012,56,0.012,74,3.824,94,0.946,148,0.651,351,2.922,357,0.859,469,3.41,499,1.079,531,1.604,701,6.394,702,5.148,703,5.148,704,2.772,707,2.984,710,5.928,711,6.273,712,3.824,713,5.148,714,2.594,715,5.148,716,5.148,717,4.629,2701,6.698,2702,6.698,2703,6.698]],["title/classes/NetworkNode.html",[0,0.34,1563,3.469]],["body/classes/NetworkNode.html",[0,0.409,2,0.261,3,0.042,4,0.037,5,0.042,7,0.725,8,2.315,11,0.933,12,1.738,14,0.057,15,0.177,18,0.123,19,0.006,20,0.173,21,0.171,24,0.329,29,2.428,34,0.072,37,0.458,44,0.951,45,2.294,53,0.007,54,0.007,55,0.007,56,0.007,57,1.382,81,1.567,88,2.128,89,2.128,90,1.551,112,1.882,118,1.275,143,1.817,145,2.191,148,0.281,154,1.618,157,0.925,175,2.269,179,2.132,222,1.513,228,1.933,229,2.365,244,2.181,245,1.564,246,1.533,254,2.702,321,1.275,322,2.364,323,2.253,347,1.318,364,2.406,366,2.467,368,1.564,397,1.426,399,2.022,402,1.475,405,1.533,406,2.379,408,1.212,413,0.876,425,1.344,434,2.381,480,1.32,526,1.332,531,1.375,584,2.669,610,2.467,629,1.19,667,1.95,721,2.874,722,2.672,723,2.084,726,2.579,729,3.169,731,1.778,753,2.525,755,2.672,767,2.364,770,0.978,776,2.928,780,1.778,782,2.998,787,2.294,798,1.864,804,3.765,805,3.084,820,1.504,831,2.066,844,2.191,849,1.91,865,3.084,921,2.315,960,2.191,967,2.011,980,2.011,1046,1.504,1105,3.084,1182,1.91,1209,1.701,1212,2.998,1213,2.77,1321,3.981,1363,1.91,1365,3.968,1382,2.336,1391,2.011,1397,4.421,1417,2.467,1517,2.998,1519,2.998,1548,2.917,1549,3.6,1556,3.043,1563,5.959,1612,3.084,1613,3.527,1617,3.084,1643,2.011,1664,4.717,1682,2.579,1766,3.084,1904,3.177,2223,3.739,2224,3.968,2225,3.968,2226,3.968,2227,3.968,2228,3.968,2229,3.968,2231,3.739,2232,3.177,2234,4.821,2235,4.101,2236,3.629,2237,4.101,2238,4.101,2239,3.177,2240,3.084,2241,3.177,2242,2.736,2244,2.736,2245,3.177,2247,2.736,2249,2.736,2250,3.177,2252,3.177,2253,3.177,2254,3.177,2255,3.177,2256,3.084,2257,3.084,2258,3.177,2259,3.177,2260,2.736,2261,3.968,2262,3.739,2263,3.739,2265,2.736,2266,2.736,2267,2.736,2268,2.736,2269,1.959,2270,1.959,2271,2.191,2273,4.129,2274,2.191,2276,2.127,2277,2.127,2278,2.127,2279,2.127,2281,2.191,2282,2.191,2283,2.191,2284,2.191,2285,2.191,2286,3.177,2287,2.191,2288,2.191,2289,2.191,2290,2.191,2291,2.191,2704,3.252,2705,5.741,2706,3.958,2707,3.958,2708,3.958,2709,3.958,2710,3.958,2711,3.958,2712,3.533,2713,5.123,2714,5.123,2715,3.533,2716,3.533]],["title/classes/NetworkSimpleData.html",[0,0.34,917,2.098]],["body/classes/NetworkSimpleData.html",[0,0.705,2,0.337,3,0.054,4,0.048,5,0.054,9,0.879,11,0.757,12,0.967,13,1.698,14,0.074,15,0.211,18,0.1,19,0.006,20,0.437,21,0.136,24,0.194,34,0.105,37,0.737,44,0.575,53,0.009,54,0.009,55,0.009,56,0.009,94,1.17,97,1.591,148,0.363,216,1.982,320,1.285,350,1.162,357,0.61,389,2.136,390,1.416,397,1.08,408,1.08,413,1.132,420,3.362,451,1.709,499,0.824,527,1.285,531,1.856,534,1.348,536,1.538,551,2.464,552,2.464,554,2.464,555,1.943,556,1.906,557,1.737,558,1.706,559,1.677,560,1.906,561,1.906,562,1.906,563,1.835,564,1.835,566,1.706,567,1.677,689,1.982,704,2.332,707,3.513,714,1.982,897,3.085,898,2.352,899,2.298,900,2.298,901,2.298,902,3.085,904,3.085,906,3.085,908,3.405,909,3.016,910,3.016,911,3.016,912,3.016,913,2.198,914,3.016,915,3.016,916,3.016,917,3.405,918,3.016,919,2.352,920,2.352,921,2.063,922,3.016,923,2.298,924,2.298,925,3.085,926,2.298,927,3.085,928,2.298,929,3.016,930,2.352,931,2.352,932,2.352,933,3.331,934,3.723,935,2.298,936,2.198,937,3.016,938,2.106,939,3.483,940,3.723,941,2.022,942,3.483,943,3.085,944,3.085,945,3.158,946,3.016,947,2.298,948,2.298,949,2.298,2717,5.116,2718,5.116]],["title/classes/NodeSimpleData.html",[0,0.34,915,2.098]],["body/classes/NodeSimpleData.html",[0,0.704,2,0.332,3,0.053,4,0.047,5,0.053,9,0.865,11,0.749,12,0.951,13,1.679,14,0.073,15,0.209,18,0.119,19,0.006,20,0.436,21,0.163,24,0.191,34,0.105,37,0.734,44,0.565,53,0.009,54,0.009,55,0.009,56,0.009,94,1.162,97,1.565,148,0.357,216,1.949,320,1.263,350,1.149,357,0.603,389,2.112,390,2.127,397,1.062,408,1.062,413,1.113,420,3.354,451,1.701,499,0.811,527,1.263,531,1.841,534,1.326,536,1.513,551,2.436,552,2.436,554,2.436,555,1.911,556,1.874,557,1.708,558,1.678,559,1.649,560,1.874,561,1.874,562,1.874,563,1.805,564,1.805,566,1.678,567,1.649,689,1.949,704,2.306,707,3.546,714,1.949,897,3.051,898,2.313,899,2.26,900,2.26,901,2.26,902,3.051,904,3.051,906,3.051,908,2.982,909,3.376,910,2.982,911,2.982,912,2.982,913,2.161,914,2.982,915,3.376,916,2.982,917,2.982,918,2.982,919,2.313,920,2.313,921,2.029,922,2.982,923,2.26,924,2.26,925,3.051,926,2.26,927,3.051,928,2.26,929,2.982,930,2.313,931,2.313,932,2.313,933,3.303,934,3.697,935,2.26,936,2.161,937,2.982,938,2.071,939,3.861,940,3.861,941,1.988,942,3.051,943,3.051,944,3.051,945,3.122,946,2.982,947,2.26,948,2.26,949,2.26,2719,5.03,2720,5.03,2721,5.03,2722,5.03]],["title/classes/NodeTopologyElement.html",[0,0.34,396,2.364]],["body/classes/NodeTopologyElement.html",[0,0.665,2,0.315,3,0.051,4,0.045,5,0.051,9,1.127,11,0.888,14,0.069,15,0.202,18,0.095,19,0.006,20,0.417,21,0.13,24,0.354,34,0.102,37,0.381,38,0.686,39,1.32,44,0.905,46,1.85,53,0.009,54,0.009,55,0.009,56,0.009,139,2.442,148,0.339,154,1.929,179,1.736,196,2.736,254,2.667,263,3.704,320,1.2,321,2.718,323,1.593,345,2.427,346,2.494,347,1.801,348,2.187,354,1.366,357,0.819,360,1.875,363,2.816,364,2.374,365,2.305,366,2.816,367,2.305,368,2.59,369,2.305,370,3.441,371,2.494,372,3.441,373,2.494,374,3.441,375,2.494,376,3.087,377,2.364,378,3.461,379,2.249,380,2.506,381,1.461,382,2.039,383,2.148,384,1.844,385,1.875,386,2.187,387,2.196,388,2.364,389,2.506,390,2.071,391,3.612,392,3.147,393,3.147,394,3.147,395,4.502,396,4.42,397,1.384,398,2.816,399,2.309,400,3.163,401,3.331,402,2.442,403,3.423,404,3.423,405,2.539,406,2.309,407,3.423,408,1.384,409,3.163,410,3.362,411,2.494,412,1.538,413,1.057,414,2.052,415,2.494,416,2.494,417,2.196,418,2.494,419,2.494,420,1.652,421,2.494,422,2.249,423,2.098,424,2.098,425,1.622,426,2.052,427,2.494,428,1.538,429,2.494,430,2.196,431,3.163,432,2.427,433,2.196,434,1.344,435,1.593,436,3.087,437,4.106,438,2.305,439,2.305,440,3.331,441,4.289,442,4.208,443,3.747,444,3.423,445,3.908,446,3.803,447,3.362,448,2.305,449,4.093,450,2.052,451,0.918,452,2.427,453,2.249,454,2.305,675,1.888,731,2.146,2723,4.777,2724,4.777]],["title/components/OffcanvasComponent.html",[57,0.977,176,1.966]],["body/components/OffcanvasComponent.html",[0,0.221,3,0.033,4,0.029,5,0.033,7,0.569,8,3.336,11,0.889,12,1.417,14,0.045,15,0.147,18,0.129,19,0.006,20,0.382,21,0.181,24,0.118,25,4.459,26,0.832,27,1.242,29,1.569,32,1.963,33,1.203,34,0.033,37,0.704,38,0.687,39,0.964,41,2.263,44,0.993,45,1.626,48,1.279,50,2.968,52,1.114,53,0.006,54,0.006,55,0.006,56,0.006,57,0.979,58,1.279,59,1.203,60,1.334,61,1.334,62,1.334,64,1.334,65,4.138,66,3.865,68,2.013,70,2.013,80,3.709,81,0.721,83,3.234,84,3.634,88,1.242,89,1.242,90,0.905,94,1.168,95,2.801,96,2.494,97,2.043,112,1.569,114,3.669,116,1.719,118,2.81,122,2.969,131,3.478,137,2.551,138,3.309,139,3.251,140,4.244,141,1.334,142,2.057,143,1.849,144,1.334,145,1.941,146,1.334,147,1.252,148,0.587,149,1.364,150,1.252,151,2.566,152,1.306,153,1.279,154,1.146,155,1.364,156,1.279,157,1.52,158,1.364,159,1.279,160,1.364,161,1.364,162,1.227,163,1.364,164,1.252,165,1.364,166,1.227,167,1.252,168,1.364,169,1.227,170,1.227,171,1.364,172,1.364,173,1.279,174,1.364,175,1.227,176,2.703,177,1.364,178,1.306,179,1.523,180,1.306,181,2.103,182,1.306,183,1.306,184,1.227,185,1.227,186,1.364,187,1.227,188,1.227,189,1.227,190,1.364,191,1.252,192,1.364,193,1.364,194,1.364,222,1.262,228,1.334,229,1.757,310,1.157,322,2.703,354,1.369,397,0.656,402,1.784,408,1.011,412,1.542,428,1.542,434,1.995,476,1.597,491,1.114,526,1.812,607,1.578,610,2.057,615,3.933,629,0.934,667,1.626,723,1.658,751,1.395,753,1.847,754,3.139,767,2.405,770,1.623,776,2.595,784,3.94,785,2.433,786,4.882,789,3.165,831,0.95,843,3.933,844,2.65,960,1.941,995,2.734,1000,3.68,1001,2.734,1007,2.734,1009,2.433,1011,3.234,1075,1.773,1076,1.773,1084,2.256,1088,4.34,1096,3.708,1174,3.68,1202,5.443,1204,5.047,1234,3.933,1278,3.875,1300,5.214,1301,5.214,1302,5.214,1303,5.86,1305,6.33,1312,3.933,1317,4.244,1325,7.169,1326,4.273,1327,4.273,1329,3.933,1330,3.933,1331,3.448,1335,4.273,1341,2.256,1345,2.772,1348,5.86,1350,2.772,1389,2.734,1487,4.273,1498,2.926,1499,1.622,1539,3.039,1916,3.571,2122,2.551,2138,5.214,2187,1.773,2188,3.862,2199,4.167,2201,4.34,2370,5.047,2371,3.933,2374,5.214,2377,5.515,2379,5.214,2385,5.214,2386,5.214,2398,2.772,2400,2.772,2402,2.772,2403,2.772,2404,4.273,2455,4.273,2648,2.772,2667,2.772,2725,3.106,2726,3.933,2727,7.809,2728,4.273,2729,6.566,2730,8.449,2731,6.566,2732,4.788,2733,4.788,2734,4.788,2735,6.566,2736,6.566,2737,5.843,2738,4.788,2739,6.566,2740,6.33,2741,5.843,2742,4.788,2743,4.788,2744,3.106,2745,4.788,2746,4.273,2747,6.566,2748,3.106,2749,4.788,2750,3.106,2751,3.106,2752,4.788,2753,8.598,2754,4.788,2755,4.788,2756,4.788,2757,4.788,2758,3.106,2759,3.106,2760,4.788,2761,4.788,2762,3.106,2763,3.106,2764,3.106,2765,4.788,2766,3.106,2767,3.933,2768,3.106,2769,3.106,2770,3.106,2771,3.106,2772,3.106,2773,3.106,2774,5.843,2775,3.106,2776,3.106,2777,5.76,2778,5.214,2779,2.772,2780,3.106,2781,4.273,2782,4.788,2783,4.788,2784,4.788,2785,3.106,2786,3.106,2787,3.106,2788,3.106,2789,2.772,2790,2.772]],["title/classes/PageableDTO.html",[0,0.34,466,2.008]],["body/classes/PageableDTO.html",[0,0.593,2,0.456,3,0.073,4,0.065,5,0.073,14,0.1,15,0.256,18,0.139,19,0.006,20,0.422,21,0.19,34,0.088,53,0.013,54,0.013,55,0.013,56,0.013,94,1.375,357,0.855,466,3.5,467,3.754,477,3.836,480,2.308,2791,6.174,2792,7.968,2793,7.968,2794,7.968,2795,7.968,2796,7.968,2797,6.918,2798,6.918,2799,6.918,2800,6.918,2801,6.918,2802,6.918,2803,6.174,2804,6.174]],["title/classes/ParseDataForTheaterVisualizer.html",[0,0.34,2805,3.924]],["body/classes/ParseDataForTheaterVisualizer.html",[0,0.14,2,0.129,3,0.021,4,0.018,5,0.021,7,0.359,9,1.347,11,0.669,12,1.508,14,0.028,15,0.131,18,0.116,19,0.006,20,0.4,21,0.158,24,0.291,27,0.856,29,1.644,32,0.913,34,0.021,37,0.446,38,0.871,39,1.606,43,2.181,44,1.025,45,2.475,47,1.162,49,0.948,53,0.004,54,0.004,55,0.004,56,0.004,67,2.548,81,0.992,88,2.069,89,2.159,90,1.508,112,0.642,113,1.773,118,1.954,143,2.042,145,2.216,148,0.545,157,0.689,196,3.005,206,4.871,208,4.954,222,1.322,228,2.021,229,0.992,254,1.307,310,0.73,322,1.358,323,1.101,354,1.434,357,0.681,360,2.281,363,1.418,364,1.164,365,0.945,366,1.418,367,0.945,368,1.304,369,0.945,378,2.155,379,0.923,380,1.33,382,2.671,383,2.115,384,1.574,387,0.901,388,0.97,390,0.542,391,0.945,395,1.633,399,1.162,400,1.592,405,2.35,412,1.063,413,1.658,423,1.449,424,1.449,425,2.06,426,2.155,428,2.681,433,2.306,434,2.415,435,2.932,436,3.32,437,2.856,438,2.063,439,2.063,442,3.114,443,2.606,447,3.044,448,2.063,450,3.366,451,0.376,484,2.575,526,1.163,531,0.79,541,1.868,543,1.797,544,0.861,567,1.834,584,3.422,629,2.308,642,4.944,651,4.783,667,1.452,675,2.212,682,1.243,689,1.278,699,1.198,704,1.703,712,1.884,718,3.065,721,2.301,722,2.301,723,2.036,729,2.477,747,2.903,748,3.259,749,2.536,753,2.588,754,2.694,759,2.536,764,3.643,765,3.065,767,1.358,770,2.305,776,1.304,787,2.916,798,1.554,800,2.397,802,3.64,806,2.281,814,4.12,820,0.744,827,1.61,831,2.514,849,0.945,859,3.315,860,2.397,864,2.397,867,2.094,874,5.879,938,2.065,960,2.155,982,4.209,1038,1.884,1133,1.748,1180,2.397,1209,2.155,1224,2.954,1229,3.357,1374,1.354,1389,1.884,1392,2.863,1397,1.517,1413,3.315,1417,1.418,1421,2.536,1422,2.536,1539,2.094,1549,1.206,1590,2.281,1593,2.181,1618,2.711,1644,1.243,1700,2.536,1701,3.285,1750,2.397,1767,4.12,1994,2.536,2163,1.243,2167,2.613,2218,2.281,2805,2.711,2806,1.959,2807,3.855,2808,3.855,2809,5.015,2810,3.3,2811,5.015,2812,4.475,2813,4.475,2814,4.475,2815,4.475,2816,4.475,2817,5.015,2818,5.015,2819,5.015,2820,5.015,2821,2.945,2822,1.748,2823,1.959,2824,3.3,2825,1.959,2826,3.3,2827,3.3,2828,7.052,2829,3.3,2830,1.959,2831,3.3,2832,3.3,2833,2.711,2834,3.3,2835,1.959,2836,2.945,2837,1.959,2838,3.3,2839,3.3,2840,2.945,2841,1.959,2842,3.3,2843,3.3,2844,3.3,2845,3.3,2846,2.945,2847,1.959,2848,6.066,2849,2.945,2850,1.959,2851,2.945,2852,1.959,2853,3.3,2854,2.945,2855,4.12,2856,3.3,2857,5.015,2858,3.3,2859,3.3,2860,3.285,2861,3.285,2862,3.285,2863,2.945,2864,3.3,2865,1.959,2866,3.3,2867,3.3,2868,1.959,2869,2.945,2870,3.3,2871,2.945,2872,3.3,2873,3.3,2874,3.3,2875,1.959,2876,3.3,2877,3.3,2878,3.3,2879,3.3,2880,1.959,2881,3.3,2882,2.945,2883,1.959,2884,3.3,2885,3.3,2886,3.3,2887,3.3,2888,3.3,2889,3.3,2890,3.3,2891,3.3,2892,3.3,2893,1.748,2894,1.506,2895,1.61,2896,1.61,2897,1.61,2898,1.959,2899,1.959,2900,1.959,2901,4.274,2902,2.945,2903,1.959,2904,1.959,2905,1.959,2906,3.3,2907,1.959,2908,1.959,2909,1.959,2910,5.015,2911,1.959,2912,1.959,2913,3.3,2914,1.959,2915,1.959,2916,4.274,2917,1.959,2918,3.3,2919,1.959,2920,1.959,2921,1.959,2922,1.959,2923,1.959,2924,1.959,2925,1.959,2926,1.959,2927,1.959,2928,1.959,2929,1.959,2930,1.748,2931,1.959,2932,1.748,2933,1.748,2934,2.945,2935,1.748,2936,1.748,2937,1.748,2938,1.748,2939,3.511,2940,1.748,2941,1.748,2942,3.814,2943,3.814,2944,1.748,2945,2.945,2946,2.945,2947,1.748,2948,2.711,2949,1.748,2950,1.959,2951,4.475,2952,1.959,2953,1.959,2954,1.959,2955,1.959,2956,1.959,2957,1.959,2958,1.959,2959,1.959,2960,1.959,2961,1.959,2962,1.959,2963,1.748,2964,3.3,2965,1.959,2966,1.959,2967,4.12,2968,1.959,2969,1.959,2970,1.959,2971,1.959,2972,3.511,2973,1.959,2974,1.959,2975,1.959,2976,1.748,2977,1.61,2978,3.511,2979,3.511,2980,3.511,2981,1.61,2982,2.711,2983,1.61,2984,1.61,2985,1.61,2986,3.511,2987,1.61,2988,2.711,2989,1.61,2990,1.61,2991,4.598,2992,1.61,2993,4.12,2994,1.61,2995,1.61,2996,2.711,2997,5.301,2998,1.61,2999,1.61,3000,1.61,3001,2.711,3002,2.711,3003,1.61,3004,1.61,3005,1.61,3006,1.61,3007,1.61,3008,1.61,3009,1.61,3010,1.61,3011,1.61,3012,1.61,3013,1.61,3014,1.61,3015,1.61]],["title/injectables/ParseService.html",[207,3.301,580,1.926]],["body/injectables/ParseService.html",[0,0.302,3,0.045,4,0.04,5,0.045,7,0.777,11,0.973,14,0.061,15,0.185,18,0.102,19,0.006,20,0.379,21,0.166,24,0.359,26,1.136,34,0.045,37,0.338,44,1.046,45,2.048,49,1.446,53,0.008,54,0.008,55,0.008,56,0.008,67,2.154,81,0.984,88,1.821,89,1.821,90,1.528,95,1.521,96,1.61,112,1.39,113,3.771,118,1.942,148,0.301,196,2.795,206,5.604,207,4.169,208,5.711,222,1.59,228,2.016,304,2.803,305,2.803,310,2.849,312,3.483,357,0.745,412,1.942,413,1.335,414,2.591,428,2.463,434,2.66,435,2.551,447,2.71,450,2.591,453,2.84,557,2.048,580,2.432,582,2.278,584,3.679,595,4.674,606,2.278,629,2.655,642,5.316,651,5.211,721,2.048,722,2.048,723,1.692,726,2.71,729,2.795,737,4.955,747,3.635,748,4.744,753,2.484,770,2.366,780,2.71,784,2.591,787,2.999,831,2.471,859,3.987,960,2.611,1214,4.636,1224,4.169,1389,4.366,1413,3.987,1572,4.636,1593,6.094,1644,2.691,1764,4.853,1946,6.787,2381,4.636,2805,6.283,2821,5.383,2822,3.784,2882,5.383,2893,3.784,2894,3.259,3016,4.24,3017,6.032,3018,6.032,3019,6.032,3020,6.032,3021,6.032,3022,6.032,3023,6.824,3024,5.383,3025,6.824,3026,6.032,3027,4.24,3028,6.283,3029,7.647,3030,5.383,3031,4.24,3032,6.283,3033,7.02,3034,4.24,3035,6.032,3036,6.283,3037,7.647,3038,4.24,3039,7.02,3040,6.032,3041,6.032,3042,3.784,3043,7.647,3044,4.24,3045,4.24,3046,4.24,3047,4.24,3048,4.24,3049,7.647,3050,4.24,3051,4.24,3052,4.24,3053,4.24,3054,4.24,3055,4.24,3056,4.24]],["title/classes/PerseDataForModuleComposer.html",[0,0.34,3028,3.924]],["body/classes/PerseDataForModuleComposer.html",[0,0.408,2,0.378,3,0.061,4,0.053,5,0.061,7,1.049,11,0.816,12,1.825,14,0.083,18,0.107,19,0.006,21,0.162,24,0.311,27,1.919,32,2.048,34,0.061,44,1.032,47,2.606,53,0.011,54,0.011,55,0.011,56,0.011,81,1.329,88,1.919,89,1.919,90,1.399,118,2.383,222,1.95,228,1.978,377,2.835,413,1.637,434,2.081,453,4.459,454,2.764,584,3.239,607,2.911,629,2.225,642,4.68,651,3.381,721,2.513,722,2.513,723,1.917,726,3.324,729,3.166,737,7.116,747,3.046,748,3.975,753,2.437,754,3.975,770,2.141,787,3.119,831,2.263,960,2.188,1209,3.721,1593,6.071,1644,3.636,1923,3.636,1924,3.636,1925,3.636,1938,6.546,1946,7.355,2381,5.687,2807,6.658,2808,6.658,3023,7.73,3028,6.079,3042,5.112,3057,5.729,3058,8.662,3059,5.729,3060,5.729,3061,7.399,3062,5.729,3063,5.729,3064,5.729,3065,5.729,3066,7.399,3067,5.729,3068,5.729,3069,5.729,3070,5.729,3071,5.729,3072,5.729]],["title/classes/PerseDataForModuleVisualizer.html",[0,0.34,3032,3.924]],["body/classes/PerseDataForModuleVisualizer.html",[0,0.23,2,0.213,3,0.034,4,0.03,5,0.034,7,0.591,9,0.847,11,0.9,12,1.733,14,0.047,18,0.115,19,0.006,20,0.38,21,0.156,24,0.324,27,1.278,32,1.364,34,0.034,38,1.279,44,1.011,47,1.736,49,1.266,53,0.006,54,0.006,55,0.006,56,0.006,81,1.388,88,2.053,89,2.053,90,1.496,118,2.157,145,1.98,148,0.229,157,0.52,206,5.508,222,1.299,228,1.982,229,0.97,254,1.83,310,1.837,320,0.81,322,2.029,323,1.644,357,0.743,363,2.118,364,1.629,365,1.557,366,2.118,367,1.557,368,1.948,369,1.557,378,2.878,379,1.519,380,1.861,385,2.575,387,1.483,390,0.893,391,1.557,392,1.356,393,1.356,394,1.356,395,1.597,396,2.44,413,1.993,414,3.4,423,2.165,425,2.772,428,2.9,433,2.266,434,2.476,437,2.321,438,2.379,439,2.379,442,2.887,443,2.57,448,2.379,484,0.987,526,1.144,531,1.18,543,2.073,584,3.592,607,1.639,629,2.17,642,5.19,651,4.671,667,2.584,704,2.275,712,2.815,718,3.013,721,2.275,722,2.275,723,1.684,726,2.215,729,2.984,747,2.029,753,2.476,754,2.648,767,2.758,770,2.344,787,2.584,820,1.225,831,2.421,849,1.557,859,3.259,860,2.343,864,3.581,867,3.129,938,2.758,960,2.524,1185,3.407,1209,2.118,1229,2.728,1374,2.23,1389,3.825,1392,3.825,1417,2.118,1539,3.129,1549,1.802,1585,4.05,1593,4.428,1644,2.047,1700,3.789,1701,4.598,1750,3.581,1751,3.789,1898,4.399,1905,4.399,1994,3.789,2167,1.972,2218,3.407,2590,4.399,2726,4.05,2807,6.273,2808,3.789,2855,4.05,2860,4.598,2861,4.598,2862,4.598,2869,4.399,2894,2.48,2895,2.65,2897,2.65,2939,5.928,2948,4.05,2967,4.05,2972,4.05,2977,2.65,2978,4.915,2979,4.915,2980,4.915,2981,2.65,2982,4.05,2983,2.65,2984,2.65,2985,2.65,2986,4.915,2987,2.65,2988,4.05,2989,2.65,2990,2.65,2991,5.928,2992,2.65,2993,5.503,2994,2.65,2995,2.65,2996,4.05,2997,6.502,2998,2.65,2999,2.65,3000,2.65,3001,4.05,3002,4.05,3003,2.65,3004,2.65,3005,2.65,3006,2.65,3007,2.65,3008,2.65,3009,2.65,3010,2.65,3011,2.65,3012,2.65,3013,2.65,3014,2.65,3015,2.65,3024,4.399,3030,4.399,3032,4.05,3073,3.226,3074,6.698,3075,6.698,3076,6.698,3077,6.698,3078,6.698,3079,2.879,3080,3.226,3081,4.93,3082,3.226,3083,4.399,3084,4.93,3085,3.226,3086,6.698,3087,4.93,3088,4.93,3089,3.226,3090,4.93,3091,3.226,3092,4.399,3093,4.93,3094,4.93,3095,4.93,3096,3.226,3097,4.93,3098,4.93,3099,4.93,3100,4.93,3101,3.226,3102,3.226,3103,3.226,3104,4.93,3105,3.226,3106,3.226,3107,3.226,3108,3.226,3109,4.93,3110,3.226,3111,3.226]],["title/classes/PerseDataForTheaterComposer.html",[0,0.34,3036,3.924]],["body/classes/PerseDataForTheaterComposer.html",[0,0.191,2,0.177,3,0.029,4,0.025,5,0.029,7,0.492,9,0.734,11,0.928,12,1.637,14,0.039,18,0.107,19,0.006,20,0.391,21,0.156,24,0.307,27,1.108,29,1.4,32,1.182,34,0.029,37,0.562,38,0.614,44,1.011,45,2.606,47,2.136,53,0.005,54,0.005,55,0.005,56,0.005,81,1.235,88,1.918,89,1.918,90,1.398,118,1.376,143,1.352,145,1.793,148,0.561,157,0.433,196,3.234,206,5.424,222,1.126,228,2,229,0.808,254,1.627,310,1.001,322,2.191,323,1.425,350,0.454,354,1.222,357,0.472,363,1.836,364,1.449,365,1.296,366,1.836,367,1.296,368,1.689,369,1.296,378,2.606,379,1.265,380,1.655,382,2.839,384,1.202,387,1.235,390,0.743,391,1.296,400,2.062,401,2.171,405,2.731,406,1.505,413,0.946,423,1.877,424,3.37,425,2.06,428,2.271,431,2.062,434,1.706,435,2.352,436,3.895,437,2.012,438,2.062,439,2.062,442,2.568,443,2.286,447,2.974,448,2.568,451,0.516,455,0.719,484,2.614,499,0.433,526,0.991,531,1.023,537,0.85,538,1.02,543,1.797,584,3.557,607,1.365,610,1.836,629,2.223,642,5.139,651,4.968,667,1.807,675,2.616,704,2.06,712,2.44,718,3.707,721,2.06,722,2.06,723,1.698,726,2.725,729,2.577,747,1.759,748,2.296,753,2.532,754,4.123,767,3.159,770,2.305,787,3.057,802,2.296,814,5.792,820,1.02,826,2.522,830,1.705,831,2.261,849,1.296,859,4.009,860,1.951,864,3.104,867,2.712,874,5.907,938,2.497,960,2.396,982,4.354,1073,3.511,1182,2.062,1209,1.836,1229,3.357,1291,3.813,1323,3.813,1374,1.856,1392,3.463,1425,2.065,1445,2.065,1477,3.813,1539,2.712,1549,1.562,1571,3.511,1593,2.825,1620,3.511,1644,1.705,1700,3.284,1701,4.09,1769,3.813,1994,3.284,2167,1.642,2218,2.953,2726,3.511,2807,5.898,2808,3.284,2812,5.413,2813,3.813,2814,5.413,2815,5.413,2816,5.413,2836,3.813,2840,3.813,2846,3.813,2849,3.813,2851,3.813,2854,3.813,2855,5.792,2860,4.09,2861,4.09,2862,4.09,2863,3.813,2871,6.848,2894,2.065,2895,2.207,2896,2.207,2897,2.207,2902,3.813,2930,2.397,2932,2.397,2933,2.397,2934,3.813,2935,2.397,2936,2.397,2937,2.397,2938,2.397,2939,4.372,2940,2.397,2941,2.397,2942,4.749,2943,5.413,2944,2.397,2945,3.813,2946,3.813,2947,2.397,2948,3.511,2949,2.397,2951,3.813,2963,2.397,2967,3.511,2972,3.511,2976,2.397,2977,2.207,2978,4.372,2979,4.372,2980,4.372,2981,2.207,2982,3.511,2983,2.207,2984,2.207,2985,2.207,2986,4.372,2987,2.207,2988,3.511,2989,2.207,2990,2.207,2991,5.439,2992,2.207,2993,4.983,2994,2.207,2995,2.207,2996,3.511,2997,6.074,2998,2.207,2999,2.207,3000,2.207,3001,3.511,3002,3.511,3003,2.207,3004,2.207,3005,2.207,3006,2.207,3007,2.207,3008,2.207,3009,2.207,3010,2.207,3011,2.207,3012,2.207,3013,2.207,3014,2.207,3015,2.207,3025,5.413,3036,3.511,3079,2.397,3083,3.813,3092,3.813,3112,2.686,3113,6.065,3114,7.051,3115,2.686,3116,2.686,3117,3.813,3118,2.686,3119,2.686,3120,2.686,3121,4.273,3122,2.686,3123,4.273,3124,4.273,3125,4.273,3126,2.686,3127,4.273,3128,2.686,3129,4.273,3130,4.273,3131,2.686,3132,4.273,3133,4.273,3134,2.686,3135,2.686,3136,2.686,3137,2.686,3138,2.686,3139,2.686,3140,4.273,3141,2.686,3142,5.321,3143,2.686,3144,2.686,3145,1.951]],["title/classes/PortSimpleData.html",[0,0.34,916,2.098]],["body/classes/PortSimpleData.html",[0,0.705,2,0.337,3,0.054,4,0.048,5,0.054,9,0.879,11,0.757,12,0.967,13,1.698,14,0.074,15,0.211,18,0.1,19,0.006,20,0.437,21,0.136,24,0.194,34,0.105,37,0.737,44,0.575,53,0.009,54,0.009,55,0.009,56,0.009,94,1.17,97,1.591,148,0.363,216,1.982,320,1.285,350,1.162,357,0.61,389,2.136,390,1.416,397,1.08,408,1.08,413,1.132,420,3.362,451,1.592,499,0.824,527,1.285,531,1.856,534,1.348,536,1.538,551,2.464,552,2.464,554,2.464,555,1.943,556,1.906,557,1.737,558,1.706,559,1.677,560,1.906,561,1.906,562,1.906,563,1.835,564,1.835,566,1.706,567,1.677,689,1.982,704,2.332,707,3.513,714,1.982,897,3.085,898,2.352,899,2.298,900,2.298,901,2.298,902,3.085,904,3.085,906,3.085,908,3.016,909,3.016,910,3.405,911,3.016,912,3.016,913,2.198,914,3.016,915,3.016,916,3.405,917,3.016,918,3.016,919,2.352,920,2.352,921,2.063,922,3.016,923,2.298,924,2.298,925,3.085,926,2.298,927,3.085,928,2.298,929,3.016,930,2.352,931,2.352,932,2.352,933,3.331,934,3.723,935,2.298,936,2.198,937,3.016,938,2.106,939,3.883,940,3.883,941,2.022,942,3.085,943,3.085,944,3.085,945,3.158,946,3.016,947,2.298,948,2.298,949,2.298,3146,5.116,3147,5.116]],["title/classes/PropertiesMISD.html",[0,0.34,572,2.727]],["body/classes/PropertiesMISD.html",[0,0.688,2,0.399,3,0.064,4,0.056,5,0.064,9,1.04,11,0.845,12,1.144,13,1.496,14,0.088,15,0.236,18,0.135,19,0.006,20,0.44,21,0.184,24,0.229,34,0.103,37,0.611,38,1.207,44,0.68,53,0.011,54,0.011,55,0.011,56,0.011,90,1.449,148,0.43,320,1.52,350,1.422,357,0.81,390,1.675,397,1.277,408,1.277,435,2.019,451,1.472,455,2.368,499,1.425,518,1.76,527,1.52,529,1.883,534,1.595,535,2.255,537,2.662,540,2.212,547,4.522,548,3.699,551,2.749,552,2.749,553,4.376,554,2.749,555,2.299,556,2.255,557,2.055,558,2.019,559,1.983,560,2.255,561,2.255,562,2.255,563,2.171,564,2.171,565,3.349,566,2.019,567,1.983,568,4.376,569,4.376,570,4.522,571,4.522,572,4.802,573,4.963,574,4.963,575,4.963,576,4.963,577,3.699,578,3.699,579,3.699,3148,6.052,3149,6.052,3150,6.052,3151,6.052,3152,6.052,3153,6.052]],["title/classes/PropertiesMSD.html",[0,0.34,922,2.098]],["body/classes/PropertiesMSD.html",[0,0.703,2,0.327,3,0.053,4,0.046,5,0.053,9,0.851,11,0.741,12,0.936,13,1.661,14,0.072,15,0.207,18,0.128,19,0.006,20,0.438,21,0.174,24,0.188,34,0.105,37,0.719,44,0.556,53,0.009,54,0.009,55,0.009,56,0.009,94,1.155,97,1.541,148,0.352,216,1.919,320,1.244,350,1.383,357,0.677,389,2.09,390,1.371,397,1.046,408,1.046,413,1.096,420,3.347,451,1.571,499,1.229,527,1.915,531,1.826,534,1.305,536,1.489,551,2.736,552,2.411,554,2.411,555,1.881,556,1.845,557,1.682,558,1.652,559,1.623,560,1.845,561,1.845,562,1.845,563,1.777,564,1.777,566,1.652,567,1.623,675,1.957,689,1.919,704,2.282,707,3.495,714,1.919,897,3.426,898,2.277,899,2.225,900,2.225,901,2.225,902,3.019,904,3.019,906,3.019,908,2.951,909,2.951,910,2.951,911,2.951,912,2.951,913,2.128,914,2.951,915,2.951,916,2.951,917,2.951,918,2.951,919,2.277,920,2.277,921,1.997,922,3.35,923,3.426,924,3.426,925,3.019,926,2.225,927,3.019,928,3.426,929,3.35,930,2.277,931,2.277,932,2.277,933,3.276,934,3.674,935,2.225,936,2.128,937,2.951,938,2.039,939,3.426,940,3.674,941,1.957,942,3.019,943,3.019,944,3.019,945,3.089,946,2.951,947,2.225,948,2.225,949,2.225,3154,4.953,3155,4.953,3156,4.953,3157,4.953,3158,4.953,3159,4.953]],["title/classes/PropertiesNSD.html",[0,0.34,942,2.145]],["body/classes/PropertiesNSD.html",[0,0.704,2,0.331,3,0.053,4,0.047,5,0.053,9,0.864,11,0.748,12,0.95,13,1.677,14,0.073,15,0.209,18,0.111,19,0.006,20,0.436,21,0.152,24,0.191,34,0.105,37,0.706,44,0.564,53,0.009,54,0.009,55,0.009,56,0.009,90,1.674,94,1.213,97,1.563,148,0.357,216,1.947,320,1.262,350,1.148,357,0.602,389,2.111,390,1.391,397,1.061,408,1.061,413,1.112,420,3.353,451,1.58,499,0.81,527,1.262,531,1.84,534,1.324,536,1.511,551,2.434,552,2.434,554,2.434,555,1.909,556,1.872,557,1.707,558,1.676,559,1.647,560,1.872,561,1.872,562,1.872,563,1.803,564,1.803,566,1.676,567,1.647,689,1.947,704,2.304,707,3.562,714,1.947,897,3.048,898,2.31,899,2.257,900,2.257,901,2.257,902,3.048,904,3.048,906,3.048,908,2.98,909,2.98,910,2.98,911,2.98,912,2.98,913,2.159,914,2.98,915,2.98,916,2.98,917,2.98,918,2.98,919,2.31,920,2.31,921,2.026,922,2.98,923,2.257,924,2.257,925,3.048,926,2.257,927,3.048,928,2.257,929,2.98,930,2.31,931,2.31,932,2.31,933,3.301,934,3.696,935,2.257,936,2.159,937,2.98,938,2.069,939,3.451,940,3.696,941,1.986,942,3.451,943,3.696,944,3.696,945,3.782,946,2.98,947,2.257,948,2.257,949,2.257,3160,5.025,3161,5.025,3162,5.025]],["title/classes/PropertiesSSD.html",[0,0.34,946,2.098]],["body/classes/PropertiesSSD.html",[0,0.703,2,0.328,3,0.053,4,0.046,5,0.053,9,0.855,11,0.743,12,0.94,13,1.666,14,0.072,15,0.207,18,0.119,19,0.006,20,0.436,21,0.162,24,0.189,34,0.105,37,0.719,44,0.559,53,0.009,54,0.009,55,0.009,56,0.009,90,1.736,94,1.209,97,1.547,148,0.353,216,1.927,320,1.249,350,1.14,357,0.598,389,2.096,390,1.376,397,1.05,408,1.05,413,1.101,420,3.349,451,1.574,499,0.801,527,1.249,531,1.83,534,1.311,536,1.495,551,2.417,552,2.417,554,2.417,555,1.889,556,1.853,557,1.689,558,1.659,559,1.63,560,1.853,561,1.853,562,1.853,563,1.784,564,1.784,566,1.659,567,1.63,675,1.965,689,1.927,704,2.782,707,3.557,714,1.927,897,3.027,898,2.287,899,2.234,900,2.234,901,2.234,902,3.027,904,3.027,906,3.027,908,2.96,909,2.96,910,2.96,911,2.96,912,2.96,913,2.137,914,2.96,915,2.96,916,2.96,917,2.96,918,2.96,919,2.287,920,2.287,921,2.006,922,2.96,923,2.234,924,2.234,925,3.027,926,2.234,927,3.027,928,2.234,929,2.96,930,2.287,931,2.287,932,2.287,933,3.283,934,3.68,935,2.234,936,2.137,937,2.96,938,2.048,939,3.433,940,3.68,941,1.965,942,3.027,943,3.68,944,3.68,945,3.766,946,3.357,947,2.234,948,2.234,949,2.234,3163,4.973,3164,4.973,3165,4.973,3166,4.973]],["title/classes/PropertiesTSD.html",[0,0.34,570,2.818]],["body/classes/PropertiesTSD.html",[0,0.689,2,0.4,3,0.064,4,0.057,5,0.064,9,1.043,11,0.846,12,1.147,13,1.5,14,0.088,15,0.236,18,0.135,19,0.006,20,0.44,21,0.184,24,0.23,34,0.103,37,0.612,38,0.871,44,0.681,53,0.011,54,0.011,55,0.011,56,0.011,148,0.431,320,1.524,350,1.544,357,0.786,390,1.679,397,1.281,408,1.281,435,2.024,451,1.474,455,2.056,499,1.426,518,2.448,527,2.115,529,2.619,534,1.599,535,2.26,537,1.92,540,3.078,547,4.969,548,3.708,551,3.021,552,2.754,553,4.383,554,2.754,555,2.304,556,2.26,557,2.06,558,2.024,559,1.988,560,2.26,561,2.26,562,2.26,563,2.176,564,2.176,565,3.357,566,2.024,567,1.988,568,4.383,569,4.383,570,4.969,571,4.969,572,4.383,573,3.58,574,4.53,575,3.58,576,4.53,577,3.708,578,3.708,579,3.708,3167,6.067,3168,6.067,3169,6.067,3170,6.067,3171,6.067,3172,6.067]],["title/classes/RelationshipsExport.html",[0,0.34,940,2.145]],["body/classes/RelationshipsExport.html",[0,0.705,2,0.337,3,0.054,4,0.048,5,0.054,9,0.879,11,0.757,12,0.967,13,1.698,14,0.074,15,0.211,18,0.1,19,0.006,20,0.438,21,0.136,24,0.194,34,0.105,37,0.737,44,0.575,53,0.009,54,0.009,55,0.009,56,0.009,94,1.17,97,1.591,148,0.363,216,1.982,320,1.285,350,1.162,357,0.61,389,2.136,390,1.416,397,1.08,408,1.08,413,1.132,420,3.362,451,1.592,499,0.824,527,1.285,531,1.856,534,1.348,536,1.538,551,2.464,552,2.464,554,2.464,555,1.943,556,1.906,557,1.737,558,1.706,559,1.677,560,1.906,561,1.906,562,1.906,563,1.835,564,1.835,566,1.706,567,1.677,689,1.982,704,2.332,707,3.513,714,1.982,897,3.085,898,2.352,899,2.298,900,2.298,901,2.298,902,3.085,904,3.085,906,3.085,908,3.016,909,3.016,910,3.016,911,3.405,912,3.016,913,2.198,914,3.016,915,3.016,916,3.016,917,3.016,918,3.016,919,2.352,920,2.352,921,2.063,922,3.016,923,2.298,924,2.298,925,3.085,926,2.298,927,3.085,928,2.298,929,3.016,930,2.352,931,2.352,932,2.352,933,3.331,934,3.723,935,2.298,936,2.198,937,3.016,938,2.106,939,3.483,940,3.883,941,3.064,942,3.085,943,3.085,944,3.085,945,3.158,946,3.016,947,2.298,948,2.298,949,2.298,3173,5.116,3174,5.116]],["title/classes/ReteConnection.html",[0,0.34,437,2.249]],["body/classes/ReteConnection.html",[0,0.664,2,0.313,3,0.05,4,0.044,5,0.05,9,1.121,11,0.885,14,0.069,15,0.201,18,0.116,19,0.006,20,0.426,21,0.159,24,0.354,34,0.102,38,0.681,39,1.314,44,0.902,46,1.838,53,0.009,54,0.009,55,0.009,56,0.009,139,2.431,148,0.337,154,1.923,179,1.73,196,2.726,254,2.661,263,3.691,320,1.191,321,2.712,323,1.582,345,2.41,346,2.477,347,1.798,348,2.176,354,1.357,357,0.818,360,1.866,363,2.803,364,2.369,365,2.289,366,2.803,367,2.289,368,2.578,369,2.289,370,3.429,371,2.477,372,3.429,373,2.477,374,3.429,375,2.477,376,3.072,377,2.348,378,3.451,379,2.234,380,2.499,381,1.451,382,2.03,383,2.138,384,1.835,385,1.866,386,2.176,387,2.181,388,2.348,389,2.499,390,2.064,391,3.599,392,3.136,393,3.136,394,3.136,395,4.495,396,4.307,397,1.377,398,2.803,399,2.298,400,3.148,401,3.315,402,2.431,403,3.407,404,3.407,405,2.527,406,2.298,407,3.407,408,1.377,409,3.148,410,3.35,411,2.477,412,1.528,413,1.05,414,2.038,415,2.477,416,2.477,417,2.181,418,2.477,419,2.477,420,1.64,421,2.477,422,2.234,423,2.084,424,2.084,425,1.611,426,2.038,427,2.477,428,1.528,429,2.477,430,2.181,431,3.148,432,2.41,433,2.181,434,1.334,435,1.582,436,3.072,437,4.097,438,3.599,439,3.599,440,3.315,441,4.081,442,3.876,443,3.451,444,3.407,445,3.894,446,3.789,447,3.35,448,2.289,449,4.081,450,2.038,451,0.911,452,2.41,453,2.234,454,2.289,3175,4.744,3176,4.744,3177,4.744,3178,4.744]],["title/classes/ReteHostInfo.html",[0,0.34,363,2.052]],["body/classes/ReteHostInfo.html",[0,0.447,2,0.295,3,0.048,4,0.042,5,0.048,7,0.821,8,1.807,11,0.909,12,1.693,14,0.065,15,0.193,18,0.136,19,0.006,20,0.415,21,0.18,24,0.34,29,2.055,34,0.077,37,0.625,44,0.812,45,2.129,53,0.008,54,0.008,55,0.008,56,0.008,57,1.283,81,1.039,112,1.468,118,1.443,143,1.418,145,2.317,148,0.514,154,1.073,157,1.263,166,2.478,179,2.036,228,1.023,244,2.382,245,1.77,246,1.735,254,2.614,255,3.68,321,1.443,322,1.844,323,1.494,347,1.412,353,3.603,354,2.241,357,0.759,363,3.367,364,2.327,368,1.77,397,1.527,399,1.578,406,2.208,408,1.527,413,1.388,434,2.204,454,3.782,480,1.494,526,1.818,584,1.77,610,2.694,629,1.347,667,2.129,721,2.661,722,2.457,723,2.04,726,2.012,729,3.015,753,2.204,755,2.129,767,1.844,770,1.55,776,1.77,780,2.012,782,2.339,787,1.521,798,2.109,804,3.186,805,2.407,820,1.702,831,2.212,865,3.369,960,1.854,967,2.276,980,2.276,1046,1.702,1105,2.407,1182,2.162,1212,2.339,1213,2.162,1321,3.369,1363,3.026,1391,2.276,1392,2.558,1397,4.183,1417,1.925,1517,2.339,1519,2.339,1548,2.276,1549,3.406,1554,4.819,1561,5.991,1612,2.407,1613,2.339,1617,2.407,1643,2.276,1659,5.943,1682,2.817,1766,2.407,1923,4.973,1924,4.973,1925,4.973,2170,6.438,2222,3.68,2223,3.47,2231,3.47,2232,2.479,2234,4.431,2235,3.47,2236,3.369,2237,3.47,2238,3.47,2239,2.479,2240,2.407,2241,2.479,2245,2.479,2250,2.479,2252,2.479,2253,2.479,2254,2.479,2255,2.479,2256,2.407,2257,2.407,2258,2.479,2259,2.479,2262,2.479,2263,2.479,2269,2.217,2270,2.217,2271,2.479,2272,3.998,2273,5.364,2274,2.479,2275,3.369,2276,2.407,2277,2.407,2278,2.407,2279,2.407,2280,3.998,2281,2.479,2282,2.479,2283,2.479,2284,2.479,2285,2.479,2286,3.47,2287,2.479,2288,2.479,2289,2.479,2290,2.479,2291,2.479,3179,4.48,3180,4.48,3181,4.48,3182,4.48,3183,4.48,3184,4.48,3185,3.68,3186,3.68,3187,3.68]],["title/classes/ReteMirroringModuleInstanceInfo.html",[0,0.34,370,2.196]],["body/classes/ReteMirroringModuleInstanceInfo.html",[0,0.437,2,0.286,3,0.046,4,0.041,5,0.046,7,0.796,8,1.751,11,0.899,12,1.68,14,0.063,15,0.189,18,0.139,19,0.006,20,0.389,21,0.186,24,0.337,29,2.011,34,0.075,37,0.616,38,1.021,44,0.799,45,2.083,53,0.008,54,0.008,55,0.008,56,0.008,57,1.255,81,1.008,112,1.423,118,1.399,143,1.374,145,2.285,148,0.505,154,1.04,157,1.246,169,2.424,179,2.018,228,0.992,244,2.33,245,1.716,246,1.682,254,1.328,321,1.399,322,1.788,323,1.449,347,1.388,350,1.203,353,4.334,354,2.696,357,0.724,364,1.182,370,3.749,381,2.588,392,2.991,393,2.991,394,2.991,397,1.502,399,1.529,406,2.161,408,1.502,413,1.574,434,2.174,455,1.905,480,1.449,499,1.146,526,1.793,533,1.751,537,2.251,538,2.702,584,1.716,610,2.636,629,1.306,667,2.769,721,2.625,722,2.416,723,2.027,726,1.951,729,2.981,753,2.174,755,2.083,767,1.788,770,1.517,776,1.716,780,1.951,782,2.268,787,1.475,798,2.045,804,3.117,805,2.333,820,1.65,831,2.175,865,3.296,960,1.814,967,2.207,980,2.207,1046,1.65,1105,2.333,1182,2.096,1212,2.268,1213,2.096,1321,3.296,1363,2.96,1397,4.085,1398,2.268,1403,3.002,1417,1.866,1517,2.268,1519,2.268,1520,4.715,1530,5.39,1548,2.207,1549,3.386,1612,2.333,1613,2.268,1617,2.333,1643,2.207,1682,2.756,1766,2.333,2223,3.395,2231,3.395,2232,2.403,2234,4.38,2235,3.395,2236,3.296,2237,3.395,2238,3.395,2239,2.403,2240,2.333,2241,2.403,2245,2.403,2250,2.403,2252,2.403,2253,2.403,2254,2.403,2255,2.403,2256,2.333,2257,2.333,2258,2.403,2259,2.403,2262,2.403,2263,2.403,2269,2.15,2270,2.15,2271,2.403,2274,2.403,2275,5.023,2276,2.333,2277,2.333,2278,2.333,2279,2.333,2281,2.403,2282,2.403,2283,2.403,2284,2.403,2285,2.403,2286,3.395,2287,2.403,2288,2.403,2289,2.403,2290,2.403,2291,2.403,2344,3.568,2352,3.876,2353,6.348,2354,3.876,3188,3.568,3189,3.568,3190,3.568,3191,3.568,3192,3.568,3193,3.568,3194,3.568,3195,3.338,3196,3.338,3197,3.338,3198,3.338,3199,3.338,3200,3.338]],["title/classes/ReteModuleComposerSettings.html",[0,0.34,3201,4.262]],["body/classes/ReteModuleComposerSettings.html",[0,0.331,2,0.306,3,0.049,4,0.043,5,0.049,7,0.851,14,0.067,15,0.198,18,0.125,19,0.006,21,0.175,24,0.359,34,0.049,44,0.894,53,0.009,54,0.009,55,0.009,56,0.009,57,0.95,81,1.711,88,1.204,89,1.204,90,0.878,95,2.998,96,3.174,97,2.476,118,2.07,122,2.359,145,1.901,147,3.699,157,0.748,179,2.195,222,1.694,228,1.06,229,1.396,244,1.764,245,1.835,246,3.633,316,2.703,338,3.569,364,2.46,397,1.357,405,2.49,443,2.762,455,1.244,476,1.549,484,1.42,526,1.077,610,3.168,629,2.217,667,1.577,707,3.394,721,2.183,722,2.183,723,1.999,753,1.808,755,2.183,771,5.282,776,2.54,831,2.434,960,1.901,973,5.975,982,2.495,1009,2.359,1209,2.762,1277,2.495,1498,2.838,1499,2.425,1505,2.086,1506,2.495,1546,5.261,1549,1.697,1590,4.443,1904,3.558,2087,3.815,2187,2.651,2203,2.74,2209,3.794,2269,2.298,2270,2.298,2377,2.838,2394,3.794,3145,3.373,3201,7.103,3202,6.944,3203,4.644,3204,6.117,3205,4.941,3206,4.941,3207,4.941,3208,6.645,3209,7.37,3210,5.668,3211,6.117,3212,4.941,3213,6.423,3214,6.429,3215,4.644,3216,4.644,3217,4.644,3218,4.644,3219,4.644,3220,4.941,3221,3.569,3222,3.569,3223,4.144,3224,3.569,3225,3.373,3226,3.373,3227,3.569,3228,3.569,3229,3.569,3230,3.209,3231,3.569,3232,3.209,3233,4.144,3234,3.815,3235,4.941,3236,3.569,3237,3.569,3238,3.373,3239,3.569,3240,3.569,3241,3.569,3242,3.569,3243,3.569,3244,3.569,3245,3.569,3246,3.569,3247,3.569,3248,3.569,3249,3.569,3250,3.569,3251,3.569,3252,3.373,3253,3.569,3254,3.373,3255,3.569,3256,5.668,3257,3.569,3258,3.569,3259,3.569,3260,3.569,3261,3.569,3262,3.569,3263,3.569,3264,3.569,3265,3.569,3266,3.569,3267,4.941,3268,3.569,3269,3.569,3270,3.569,3271,3.569,3272,3.569,3273,3.569,3274,3.569,3275,3.569,3276,3.373,3277,3.569,3278,3.569,3279,3.569]],["title/classes/ReteModuleVisualizerSettings.html",[0,0.34,3280,4.262]],["body/classes/ReteModuleVisualizerSettings.html",[0,0.286,2,0.265,3,0.043,4,0.038,5,0.043,7,0.736,14,0.058,15,0.178,18,0.119,19,0.006,21,0.172,24,0.353,34,0.043,44,0.926,53,0.007,54,0.007,55,0.007,56,0.007,57,1.187,81,1.581,88,1.042,89,1.042,90,0.76,95,2.839,96,3.006,97,2.708,118,1.869,122,2.949,145,2.206,147,3.631,157,0.647,179,2.158,222,1.529,228,1.325,229,1.745,244,1.526,245,1.588,246,3.631,316,2.44,338,3.088,364,2.414,397,1.225,405,2.89,443,2.493,455,1.076,476,1.34,484,1.775,526,0.932,610,3.543,629,2.48,643,2.656,667,1.364,707,3.369,721,1.971,722,1.971,723,1.926,747,2.389,753,2.099,755,2.534,776,3.259,831,2.282,960,1.716,973,5.7,982,3.118,1009,2.949,1096,3.683,1209,2.493,1277,3.118,1498,2.456,1499,3.03,1505,3.06,1506,2.158,1546,5.231,1549,1.469,1590,4.011,1904,4.129,2187,3.314,2203,3.425,2209,4.403,2269,1.989,2270,1.989,2377,3.547,2394,4.403,3145,4.215,3202,6.817,3204,6.338,3205,4.46,3206,4.46,3207,4.46,3208,6.338,3209,7.205,3210,5.236,3211,5.735,3212,4.46,3213,6.082,3220,6.338,3221,3.088,3222,3.088,3223,3.585,3224,3.088,3225,2.918,3226,2.918,3227,3.088,3228,3.088,3229,3.088,3230,2.777,3231,3.088,3232,2.777,3233,3.585,3234,3.301,3235,4.46,3236,3.088,3237,3.088,3238,2.918,3239,3.088,3240,3.088,3241,3.088,3242,3.088,3243,4.46,3244,4.46,3245,4.46,3246,3.088,3247,3.088,3248,3.088,3249,4.46,3250,4.46,3251,4.46,3252,2.918,3253,3.088,3254,2.918,3255,3.088,3256,5.735,3257,4.46,3258,4.46,3259,4.46,3260,4.46,3261,4.46,3262,4.46,3263,4.46,3264,4.46,3265,4.46,3266,4.46,3267,5.236,3268,4.46,3269,4.46,3270,4.46,3271,4.46,3272,4.46,3273,4.46,3274,4.46,3275,3.088,3276,2.918,3277,4.46,3278,4.46,3279,4.46,3280,6.658,3281,4.018,3282,5.803,3283,6.658,3284,5.803,3285,4.018,3286,4.018,3287,4.018,3288,4.018,3289,4.018,3290,4.018,3291,5.179,3292,5.179,3293,5.179,3294,4.018,3295,3.585]],["title/classes/ReteNetworkInfo.html",[0,0.34,366,2.052]],["body/classes/ReteNetworkInfo.html",[0,0.462,2,0.31,3,0.05,4,0.044,5,0.05,7,0.862,8,1.898,11,0.926,12,1.714,14,0.068,15,0.2,18,0.133,19,0.006,20,0.368,21,0.172,24,0.344,29,2.127,34,0.079,37,0.638,44,0.834,45,2.204,53,0.009,54,0.009,55,0.009,56,0.009,57,1.328,81,1.092,112,1.543,118,1.516,143,1.49,145,2.367,148,0.527,154,1.127,157,1.29,175,2.564,179,2.064,228,1.075,244,2.465,245,1.86,246,1.823,254,2.271,321,1.516,322,1.938,323,1.57,347,1.449,353,3.681,354,2.289,364,2.022,366,3.191,368,1.86,397,1.568,399,1.658,406,2.285,408,1.568,413,1.436,434,2.252,480,1.57,526,1.857,531,1.127,584,1.86,610,2.788,629,1.415,667,2.204,721,2.719,722,2.522,723,2.06,726,2.114,729,3.07,753,2.252,755,2.204,767,1.938,770,1.604,776,1.86,780,2.114,782,2.458,787,1.598,798,2.216,804,3.297,805,2.529,820,1.788,831,2.271,849,2.271,865,3.486,960,1.919,967,2.392,980,2.392,1046,1.788,1105,2.529,1182,2.271,1212,2.458,1213,2.271,1321,3.486,1363,3.132,1365,5.133,1391,2.392,1397,4.229,1417,2.022,1517,2.458,1519,2.458,1548,2.392,1549,3.437,1556,3.618,1563,6.1,1612,2.529,1613,2.458,1617,2.529,1643,2.392,1664,6.102,1682,2.915,1766,2.529,2223,3.591,2231,3.591,2232,2.605,2234,4.511,2235,3.591,2236,3.486,2237,3.591,2238,3.591,2239,2.605,2240,2.529,2241,2.605,2245,2.605,2250,2.605,2252,2.605,2253,2.605,2254,2.605,2255,2.605,2256,2.529,2257,2.529,2258,2.605,2259,2.605,2262,2.605,2263,2.605,2269,2.33,2270,2.33,2271,2.605,2273,5.623,2274,2.605,2276,2.529,2277,2.529,2278,2.529,2279,2.529,2281,2.605,2282,2.605,2283,2.605,2284,2.605,2285,2.605,2286,3.591,2287,2.605,2288,2.605,2289,2.605,2290,2.605,2291,2.605,2704,3.867,2712,4.2,2713,7.144,2714,7.144,2715,4.2,2716,4.2,3185,3.867,3186,3.867,3187,3.867,3296,4.707,3297,4.707,3298,4.707]],["title/classes/ReteSubnetInfo.html",[0,0.34,368,1.887]],["body/classes/ReteSubnetInfo.html",[0,0.456,2,0.304,3,0.049,4,0.043,5,0.049,7,0.845,8,1.86,11,0.919,12,1.705,14,0.067,15,0.197,18,0.134,19,0.006,20,0.401,21,0.175,24,0.342,29,2.097,34,0.078,37,0.632,44,0.825,45,2.173,53,0.008,54,0.008,55,0.008,56,0.008,57,1.309,81,1.07,94,0.903,112,1.512,118,1.485,143,1.46,145,2.347,148,0.522,154,1.104,157,1.279,179,2.053,184,2.529,228,1.053,244,2.431,245,1.823,246,1.787,254,2.427,321,1.485,322,1.899,323,1.539,347,1.434,353,3.649,354,2.27,357,0.568,364,2.161,368,3.294,397,1.551,399,1.624,406,2.254,408,1.551,413,1.416,434,2.232,480,1.539,499,1.279,526,1.841,584,1.823,610,2.749,629,1.387,667,2.173,704,1.566,714,3.074,717,5.485,721,2.695,722,2.495,723,2.052,726,2.072,729,3.047,753,2.232,755,2.173,767,1.899,770,1.582,776,1.823,780,2.072,782,2.408,787,1.566,798,2.172,804,3.252,805,2.478,820,1.752,831,2.247,865,3.438,960,1.892,967,2.344,980,2.344,1046,1.752,1105,2.478,1182,2.226,1212,2.408,1213,2.226,1321,3.438,1363,3.088,1391,2.344,1397,4.211,1417,1.982,1517,2.408,1519,2.408,1548,2.344,1549,3.425,1555,4.918,1565,6.055,1612,2.478,1613,2.408,1617,2.478,1643,2.344,1662,6.037,1682,2.875,1766,2.478,2223,3.541,2231,3.541,2232,2.553,2234,4.479,2235,3.541,2236,3.438,2237,3.541,2238,3.541,2239,2.553,2240,2.478,2241,2.553,2245,2.553,2250,2.553,2252,2.553,2253,2.553,2254,2.553,2255,2.553,2256,2.478,2257,2.478,2258,2.553,2259,2.553,2262,2.553,2263,2.553,2269,2.283,2270,2.283,2271,2.553,2273,5.408,2274,2.553,2275,3.438,2276,2.478,2277,2.478,2278,2.478,2279,2.478,2281,2.553,2282,2.553,2283,2.553,2284,2.553,2285,2.553,2286,3.541,2287,2.553,2288,2.553,2289,2.553,2290,2.553,2291,2.553,3185,3.789,3186,3.789,3187,3.789,3299,3.789,3300,4.612,3301,4.612,3302,4.612,3303,4.612,3304,4.116,3305,4.116]],["title/classes/ReteTheaterComposerSettings.html",[0,0.34,3306,4.262]],["body/classes/ReteTheaterComposerSettings.html",[0,0.329,2,0.304,3,0.049,4,0.043,5,0.049,7,0.846,14,0.067,15,0.197,18,0.125,19,0.006,21,0.175,24,0.352,34,0.049,44,0.892,53,0.008,54,0.008,55,0.008,56,0.008,57,0.944,73,6.115,81,1.706,88,1.197,89,1.197,90,0.873,95,2.992,96,3.168,97,2.47,118,2.062,122,2.346,145,1.893,147,3.694,157,0.744,179,2.152,222,1.688,228,1.054,229,1.388,244,1.754,245,1.824,246,3.548,316,2.692,364,2.456,397,1.352,405,2.48,443,1.984,455,1.237,476,1.54,484,1.412,526,1.071,610,3.158,629,2.211,667,1.568,707,3.425,721,2.175,722,2.175,723,1.996,753,1.801,755,2.175,774,5.261,776,2.53,831,2.428,960,1.893,973,5.964,982,2.48,1009,2.346,1209,2.751,1277,2.48,1498,2.822,1499,2.411,1505,2.074,1506,2.48,1546,5.248,1549,1.688,1590,4.426,1904,3.544,2187,2.636,2203,2.725,2209,3.779,2269,2.285,2270,2.285,2377,2.822,2394,3.779,3145,3.353,3202,6.934,3204,6.102,3205,4.922,3206,4.922,3207,4.922,3208,6.633,3209,7.364,3210,5.651,3211,6.102,3212,4.922,3213,6.41,3220,4.922,3221,3.549,3222,3.549,3224,3.549,3225,3.353,3226,3.353,3227,3.549,3228,3.549,3229,3.549,3230,3.191,3231,3.549,3232,3.191,3235,4.922,3236,3.549,3237,3.549,3238,3.353,3239,3.549,3240,3.549,3241,3.549,3242,3.549,3243,3.549,3244,3.549,3245,3.549,3246,3.549,3247,3.549,3248,3.549,3249,3.549,3250,3.549,3251,3.549,3252,3.353,3253,3.549,3254,3.353,3255,3.549,3256,4.922,3257,3.549,3258,3.549,3259,3.549,3260,3.549,3261,3.549,3262,3.549,3263,3.549,3264,3.549,3265,3.549,3266,3.549,3267,4.922,3268,3.549,3269,3.549,3270,3.549,3271,3.549,3272,3.549,3273,3.549,3274,3.549,3275,3.549,3276,3.353,3277,3.549,3278,3.549,3279,3.549,3306,7.085,3307,4.617,3308,6.403,3309,4.617,3310,4.617,3311,4.617,3312,4.617,3313,4.617]],["title/classes/ReteTheaterInternalServiceModuleInstanceInfo.html",[0,0.34,372,2.196]],["body/classes/ReteTheaterInternalServiceModuleInstanceInfo.html",[0,0.437,2,0.286,3,0.046,4,0.041,5,0.046,7,0.796,8,1.751,11,0.899,12,1.68,14,0.063,15,0.189,18,0.139,19,0.006,20,0.389,21,0.186,24,0.337,29,2.011,34,0.075,37,0.616,38,1.021,44,0.799,45,2.083,53,0.008,54,0.008,55,0.008,56,0.008,57,1.255,81,1.008,112,1.423,118,1.399,143,1.374,145,2.285,148,0.505,154,1.04,157,1.246,179,2.018,187,2.424,228,0.992,244,2.33,245,1.716,246,1.682,254,1.328,321,1.399,322,1.788,323,1.449,347,1.388,350,1.203,353,4.334,354,2.696,357,0.724,364,1.182,372,3.749,381,2.588,392,2.991,393,2.991,394,2.991,397,1.502,399,1.529,406,2.161,408,1.502,413,1.574,434,2.174,455,1.905,480,1.449,499,1.146,526,1.793,533,1.751,537,2.251,538,2.702,584,1.716,610,2.636,629,1.306,667,2.769,721,2.625,722,2.416,723,2.027,726,1.951,729,2.981,753,2.174,755,2.083,767,1.788,770,1.517,776,1.716,780,1.951,782,2.268,787,1.475,798,2.045,804,3.117,805,2.333,820,1.65,831,2.175,865,3.296,960,1.814,967,2.207,980,2.207,1046,1.65,1105,2.333,1182,2.096,1212,2.268,1213,2.096,1321,3.296,1363,2.96,1397,4.085,1398,2.268,1402,3.002,1417,1.866,1517,2.268,1519,2.268,1522,4.715,1532,5.922,1548,2.207,1549,3.386,1612,2.333,1613,2.268,1617,2.333,1643,2.207,1682,2.756,1766,2.333,2223,3.395,2231,3.395,2232,2.403,2234,4.38,2235,3.395,2236,3.296,2237,3.395,2238,3.395,2239,2.403,2240,2.333,2241,2.403,2245,2.403,2250,2.403,2252,2.403,2253,2.403,2254,2.403,2255,2.403,2256,2.333,2257,2.333,2258,2.403,2259,2.403,2262,2.403,2263,2.403,2269,2.15,2270,2.15,2271,2.403,2274,2.403,2275,5.023,2276,2.333,2277,2.333,2278,2.333,2279,2.333,2281,2.403,2282,2.403,2283,2.403,2284,2.403,2285,2.403,2286,3.395,2287,2.403,2288,2.403,2289,2.403,2290,2.403,2291,2.403,3188,3.568,3189,3.568,3190,3.568,3191,3.568,3192,3.568,3193,3.568,3194,3.568,3195,3.338,3196,3.338,3197,3.338,3198,3.338,3199,3.338,3200,3.338,3314,3.568,3315,6.348,3316,3.876,3317,3.876]],["title/classes/ReteTheaterModuleInstanceInfo.html",[0,0.34,374,2.196]],["body/classes/ReteTheaterModuleInstanceInfo.html",[0,0.437,2,0.286,3,0.046,4,0.041,5,0.046,7,0.796,8,1.751,11,0.899,12,1.68,14,0.063,15,0.189,18,0.139,19,0.006,20,0.389,21,0.186,24,0.337,29,2.011,34,0.075,37,0.616,38,1.021,44,0.799,45,2.083,53,0.008,54,0.008,55,0.008,56,0.008,57,1.255,81,1.008,112,1.423,118,1.399,143,1.374,145,2.285,148,0.505,154,1.04,157,1.246,179,2.018,188,2.424,228,0.992,244,2.33,245,1.716,246,1.682,254,1.328,321,1.399,322,1.788,323,1.449,347,1.388,350,1.203,353,4.334,354,2.696,357,0.724,364,1.182,374,3.749,381,2.588,392,2.991,393,2.991,394,2.991,397,1.502,399,1.529,406,2.161,408,1.502,413,1.574,434,2.174,455,1.905,480,1.449,499,1.146,526,1.793,533,1.751,537,2.251,538,2.702,584,1.716,610,2.636,629,1.306,667,2.769,721,2.625,722,2.416,723,2.027,726,1.951,729,2.981,753,2.174,755,2.083,767,1.788,770,1.517,776,1.716,780,1.951,782,2.268,787,1.475,798,2.045,804,3.117,805,2.333,820,1.65,831,2.175,865,3.296,960,1.814,967,2.207,980,2.207,1046,1.65,1105,2.333,1182,2.096,1212,2.268,1213,2.096,1321,3.296,1363,2.96,1397,4.085,1398,2.268,1399,3.002,1417,1.866,1517,2.268,1519,2.268,1521,4.715,1530,4.702,1534,4.456,1548,2.207,1549,3.386,1612,2.333,1613,2.268,1617,2.333,1643,2.207,1682,2.756,1766,2.333,2223,3.395,2231,3.395,2232,2.403,2234,4.38,2235,3.395,2236,3.296,2237,3.395,2238,3.395,2239,2.403,2240,2.333,2241,2.403,2245,2.403,2250,2.403,2252,2.403,2253,2.403,2254,2.403,2255,2.403,2256,2.333,2257,2.333,2258,2.403,2259,2.403,2262,2.403,2263,2.403,2269,2.15,2270,2.15,2271,2.403,2274,2.403,2275,5.023,2276,2.333,2277,2.333,2278,2.333,2279,2.333,2281,2.403,2282,2.403,2283,2.403,2284,2.403,2285,2.403,2286,3.395,2287,2.403,2288,2.403,2289,2.403,2290,2.403,2291,2.403,3188,3.568,3189,3.568,3190,3.568,3191,3.568,3192,3.568,3193,3.568,3194,3.568,3195,3.338,3196,3.338,3197,3.338,3198,3.338,3199,3.338,3200,3.338,3318,3.568,3319,6.348,3320,3.876,3321,3.876]],["title/classes/ReteTheaterVisualizerSettings.html",[0,0.34,3322,4.262]],["body/classes/ReteTheaterVisualizerSettings.html",[0,0.29,2,0.268,3,0.043,4,0.038,5,0.043,7,0.746,14,0.059,15,0.18,18,0.12,19,0.006,21,0.173,24,0.342,34,0.043,44,0.93,53,0.007,54,0.007,55,0.007,56,0.007,57,1.199,81,1.592,88,1.056,89,1.056,90,0.77,95,2.854,96,3.022,97,2.718,118,1.887,122,2.977,145,2.22,147,3.642,157,0.656,179,2.095,222,1.544,228,1.338,229,1.762,244,1.547,245,1.609,246,3.542,316,2.464,364,2.422,397,1.237,405,2.908,443,1.749,455,1.091,476,1.358,484,1.792,526,0.945,610,3.559,629,2.491,667,1.383,707,3.378,721,1.99,722,1.99,723,1.933,747,2.412,753,2.112,755,2.55,776,3.274,831,2.296,960,1.733,973,5.726,982,3.148,1009,2.977,1096,3.719,1209,2.517,1277,3.148,1498,2.489,1499,3.06,1505,3.084,1506,2.188,1546,5.258,1549,1.488,1590,4.05,1904,4.155,2187,3.346,2203,3.458,2209,4.431,2269,2.015,2270,2.015,2377,3.582,2394,4.431,3145,4.256,3202,6.839,3204,6.367,3205,4.504,3206,4.504,3207,4.504,3208,6.367,3209,7.221,3210,5.276,3211,5.77,3212,4.504,3213,6.114,3220,6.367,3221,3.13,3222,3.13,3224,3.13,3225,2.958,3226,2.958,3227,3.13,3228,3.13,3229,3.13,3230,2.814,3231,3.13,3232,2.814,3235,4.504,3236,3.13,3237,3.13,3238,2.958,3239,3.13,3240,3.13,3241,3.13,3242,3.13,3243,4.504,3244,4.504,3245,4.504,3246,3.13,3247,3.13,3248,3.13,3249,4.504,3250,4.504,3251,4.504,3252,2.958,3253,3.13,3254,2.958,3255,3.13,3256,5.77,3257,4.504,3258,4.504,3259,4.504,3260,4.504,3261,4.504,3262,4.504,3263,4.504,3264,4.504,3265,4.504,3266,4.504,3267,5.276,3268,4.504,3269,4.504,3270,4.504,3271,4.504,3272,4.504,3273,4.504,3274,4.504,3275,3.13,3276,2.958,3277,4.504,3278,4.504,3279,4.504,3283,6.7,3291,5.229,3292,5.229,3293,5.229,3295,3.634,3322,6.7,3323,4.072,3324,5.86,3325,5.86,3326,4.072,3327,4.072,3328,4.072,3329,4.072,3330,4.072,3331,4.072]],["title/classes/SelectOption.html",[0,0.34,1037,2.818]],["body/classes/SelectOption.html",[0,0.677,2,0.384,3,0.062,4,0.054,5,0.062,7,1.067,9,1.285,11,0.825,14,0.084,15,0.23,18,0.14,19,0.006,20,0.429,21,0.163,27,1.511,32,1.612,34,0.101,37,0.596,41,2.897,46,2.256,47,2.051,49,1.414,50,3.366,53,0.011,54,0.011,55,0.011,56,0.011,90,1.414,94,1.231,157,1.405,330,1.978,347,1.612,357,0.517,398,2.503,412,1.876,484,2.666,559,1.909,657,3.326,665,3.224,723,1.655,751,2.617,770,2.349,1013,5.735,1014,4.683,1015,3.697,1016,3.905,1017,6.031,1018,3.697,1019,3.697,1025,3.224,1026,5.049,1027,3.438,1029,3.224,1030,3.697,1031,5.243,1032,3.561,1033,2.96,1034,3.561,1035,3.697,1036,3.697,1037,4.875,1038,3.326,1039,3.697,1040,3.561,1041,3.561,1042,3.905,1043,4.747,1044,4.747,1045,4.572,1046,2.841,1047,4.139,1048,3.697,1049,4.271,1050,3.561,1051,3.561,1052,3.561,1053,3.438,1054,3.697,3332,5.825,3333,5.825,3334,5.825]],["title/classes/SimpleAreaDTO.html",[0,0.34,386,1.593]],["body/classes/SimpleAreaDTO.html",[0,0.698,2,0.299,3,0.048,4,0.042,5,0.048,13,1.12,14,0.066,15,0.194,18,0.092,19,0.006,20,0.451,21,0.125,24,0.276,34,0.104,37,0.702,38,1.131,39,0.912,49,1.664,53,0.008,54,0.008,55,0.008,56,0.008,94,1.169,148,0.678,157,0.73,330,1.538,347,0.884,348,1.511,349,1.99,350,1.543,351,2.408,357,0.875,360,2.081,380,1.409,381,2.226,382,2.264,383,2.385,384,1.274,385,1.807,386,2.428,451,1.398,455,2.109,459,2.035,466,2.657,467,2.657,468,2.035,469,2.819,470,1.946,471,1.656,472,2.035,473,2.035,474,2.035,475,2.035,476,1.511,477,1.946,478,2.035,479,1.99,480,1.511,481,3.383,482,2.035,483,2.035,484,1.385,485,2.715,486,2.035,487,2.839,488,2.035,489,2.035,490,3.866,491,1.625,492,2.715,493,2.035,494,2.035,495,2.035,496,2.035,497,2.035,498,2.035,499,1.269,500,2.035,501,2.715,502,1.721,503,2.657,504,2.035,505,2.776,506,2.035,507,2.035,508,1.656,509,1.656,510,1.656,511,1.656,512,1.656,513,1.656,514,1.656,515,1.656,516,1.656,517,1.99,518,1.838,519,1.99,520,1.99,521,1.99,522,1.99,523,1.99,524,1.99,525,1.99,526,1.051,527,1.587,528,1.99,529,1.966,530,2.035,531,1.085,532,2.035,533,2.548,534,1.194,535,1.688,536,1.362,537,1.434,538,1.721,539,2.776,540,1.656,541,1.688,542,2.035,543,1.905,544,1.99,545,2.035,546,1.721,3335,4.53,3336,4.53]],["title/classes/SimpleModuleApplication.html",[0,0.34,436,2.249]],["body/classes/SimpleModuleApplication.html",[0,0.639,2,0.26,3,0.042,4,0.037,5,0.042,7,0.723,9,1.159,11,0.866,14,0.057,15,0.176,18,0.14,19,0.006,20,0.43,21,0.192,24,0.34,34,0.099,37,0.457,38,0.567,39,1.154,44,0.921,46,1.53,49,1.084,53,0.007,54,0.007,55,0.007,56,0.007,90,1.084,94,0.557,139,2.135,148,0.479,154,1.772,179,1.565,196,2.873,254,2.507,263,3.663,320,0.992,321,2.531,323,1.317,345,2.006,346,2.062,347,1.75,348,1.912,350,0.969,351,1.753,353,4.328,354,2.709,357,0.83,360,1.639,363,2.462,364,2.232,365,1.906,366,2.462,367,1.906,368,2.265,369,1.906,370,3.101,371,2.062,372,3.101,373,2.062,374,3.101,375,2.062,376,2.698,377,1.954,378,3.377,379,1.859,380,2.445,381,1.208,382,2.977,383,1.878,384,1.612,385,1.639,386,1.912,387,1.815,388,1.954,389,2.302,390,2.175,391,3.793,392,3.305,393,3.305,394,3.305,395,4.439,396,4.186,397,1.424,398,2.898,399,2.376,400,3.255,401,3.428,402,2.513,403,3.522,404,3.522,405,2.613,406,2.376,407,3.522,408,1.424,409,3.255,410,3.325,411,2.062,412,1.272,413,0.874,414,1.696,415,2.062,416,2.062,417,1.815,418,2.062,419,2.062,420,1.365,421,2.062,422,1.859,423,1.734,424,1.734,425,1.341,426,1.696,427,2.062,428,1.272,429,2.062,430,1.815,431,3.255,432,2.006,433,2.635,434,1.612,435,1.912,436,3.176,437,3.701,438,1.906,439,1.906,440,2.912,441,3.761,442,3.571,443,3.18,444,2.993,445,3.522,446,3.428,447,3.03,448,1.906,449,3.761,450,1.696,451,0.758,452,2.006,453,1.859,454,1.906,499,0.923,503,1.66,508,2.095,509,2.095,510,2.095,511,2.095,512,2.095,513,2.095,514,2.095,515,2.095,516,2.095,731,1.774,2508,3.244,2509,3.244,2510,3.244,2511,3.244,2512,3.244,2513,3.244,2514,3.244,2515,3.244,2516,3.244,2517,3.244,2518,3.244,2519,3.244,2520,3.244,2521,3.244,2522,3.244,3337,3.949,3338,3.949,3339,3.949,3340,3.949,3341,3.949,3342,3.949]],["title/classes/SimpleModuleDTO.html",[0,0.34,382,1.486]],["body/classes/SimpleModuleDTO.html",[0,0.692,2,0.274,3,0.044,4,0.039,5,0.044,13,1.026,14,0.06,15,0.183,18,0.137,19,0.006,20,0.451,21,0.188,24,0.263,34,0.103,37,0.712,38,1.087,39,0.835,49,1.69,53,0.008,54,0.008,55,0.008,56,0.008,90,1.123,94,1.177,148,0.677,157,0.669,330,1.409,347,0.81,348,1.384,349,1.822,350,1.512,351,2.55,357,0.872,360,1.984,380,1.291,381,2.121,382,2.356,383,2.273,384,1.167,385,1.698,386,1.981,451,1.332,455,1.591,459,1.864,466,2.497,467,2.497,468,1.864,469,2.687,470,1.782,471,1.517,472,1.864,473,1.864,474,1.864,475,1.864,476,1.384,477,1.782,478,1.864,479,1.822,480,1.384,481,3.253,482,1.864,483,1.864,484,1.269,485,2.551,486,1.864,487,2.668,488,1.864,489,1.864,490,3.77,491,1.488,492,2.551,493,1.864,494,1.864,495,1.864,496,1.864,497,1.864,498,1.864,499,1.343,500,1.864,501,2.551,502,1.576,503,2.916,504,1.864,505,2.608,506,1.864,507,1.864,508,2.536,509,2.536,510,2.536,511,2.536,512,2.536,513,2.536,514,2.536,515,2.536,516,2.536,517,1.822,518,1.727,519,1.822,520,1.822,521,1.822,522,1.822,523,1.822,524,1.822,525,1.822,526,0.963,527,1.492,528,1.822,529,1.848,530,1.864,531,0.993,532,1.864,533,2.395,534,1.093,535,1.546,536,1.248,537,1.313,538,1.576,539,2.608,540,1.517,541,1.546,542,1.864,543,1.744,544,1.822,545,1.864,546,1.576,3343,4.149,3344,4.149,3345,4.149,3346,4.149,3347,4.149,3348,4.149,3349,4.149,3350,4.149,3351,4.149,3352,4.149,3353,4.149,3354,4.149,3355,4.149,3356,4.149,3357,4.149]],["title/classes/SingleDataInputReturned.html",[0,0.34,1049,2.727]],["body/classes/SingleDataInputReturned.html",[0,0.676,2,0.381,3,0.061,4,0.054,5,0.061,7,1.058,9,0.993,11,0.637,14,0.084,15,0.229,18,0.14,19,0.006,20,0.431,21,0.172,27,1.929,32,1.598,34,0.101,37,0.693,41,2.882,46,2.882,47,2.034,49,1.643,50,3.359,53,0.011,54,0.011,55,0.011,56,0.011,94,1.227,157,1.4,330,1.962,347,1.606,357,0.513,398,2.482,412,2.396,484,2.657,559,1.893,657,3.298,665,3.197,723,1.646,751,2.595,770,2.345,1013,5.724,1014,4.83,1015,3.666,1016,4.297,1017,6.021,1018,3.666,1019,3.666,1025,3.197,1026,5.029,1027,3.409,1029,3.197,1030,3.666,1031,5.222,1032,3.531,1033,2.935,1034,3.531,1035,3.666,1036,3.666,1037,4.39,1038,3.298,1039,3.666,1040,3.531,1041,3.531,1042,3.016,1043,3.666,1044,3.666,1045,3.531,1046,3.125,1047,4.117,1048,3.666,1049,4.698,1050,3.531,1051,3.531,1052,3.531,1053,3.409,1054,4.721,3358,5.776,3359,5.776,3360,5.776,3361,5.776]],["title/classes/SortDTO.html",[0,0.34,467,2.008]],["body/classes/SortDTO.html",[0,0.607,2,0.475,3,0.076,4,0.067,5,0.076,14,0.104,15,0.262,18,0.132,19,0.006,20,0.398,21,0.179,34,0.09,53,0.013,54,0.013,55,0.013,56,0.013,94,1.396,357,0.806,466,3.026,467,3.817,477,3.092,480,3.029,2791,6.422,2792,6.422,2793,6.422,2794,6.422,2795,6.422,2796,6.422,2803,8.102,2804,8.102,3362,7.197,3363,7.197,3364,7.197]],["title/classes/SourceExport.html",[0,0.34,574,2.818]],["body/classes/SourceExport.html",[0,0.692,2,0.412,3,0.066,4,0.058,5,0.066,9,1.074,11,0.862,12,1.181,13,1.544,14,0.091,15,0.24,18,0.124,19,0.006,20,0.441,21,0.169,24,0.237,34,0.103,37,0.623,38,0.897,44,0.702,53,0.011,54,0.011,55,0.011,56,0.011,148,0.443,320,1.569,350,1.443,357,0.758,390,2.361,397,1.319,408,1.319,435,2.084,451,1.502,455,2.094,499,1.26,518,1.817,527,1.569,529,1.943,534,1.646,535,3.179,537,1.977,540,2.284,547,4.614,548,3.818,551,2.805,552,2.805,553,4.464,554,2.805,555,2.373,556,2.328,557,2.122,558,2.084,559,2.047,560,2.328,561,2.328,562,2.328,563,2.241,564,2.241,565,3.457,566,2.084,567,2.047,568,4.464,569,4.464,570,4.614,571,4.614,572,4.464,573,3.687,574,5.036,575,3.687,576,4.614,577,3.818,578,3.818,579,3.818,1392,4.464,3365,6.247,3366,6.247,3367,6.247]],["title/classes/SpinnerData.html",[0,0.34,3368,3.924]],["body/classes/SpinnerData.html",[0,0.539,2,0.392,3,0.063,4,0.055,5,0.063,7,1.088,11,0.835,14,0.086,15,0.233,18,0.11,19,0.006,20,0.365,21,0.15,24,0.316,26,1.591,29,1.947,34,0.063,37,0.473,44,0.936,50,3.381,53,0.011,54,0.011,55,0.011,56,0.011,59,2.301,67,3.018,77,6.368,78,6.069,81,1.378,94,1.177,99,6.408,106,3.926,114,2.498,118,2.986,228,1.356,275,4.565,310,2.213,397,1.599,402,2.213,408,1.599,580,3.054,606,3.191,607,3.018,629,1.786,723,1.676,753,1.671,769,5.821,770,1.872,784,2.552,786,5.352,791,4.105,831,2.55,1229,3.287,1295,5.821,1596,6.93,1609,4.88,1629,4.565,1764,4.806,1839,4.88,2377,5.76,2394,4.469,2424,4.88,2767,4.88,3368,6.849,3369,5.301,3370,5.94,3371,5.94,3372,6.758,3373,7.836,3374,4.88,3375,5.301,3376,5.301,3377,5.301,3378,5.301,3379,5.301,3380,5.301,3381,5.301,3382,5.301,3383,6.758,3384,5.301,3385,5.301,3386,5.301,3387,5.301,3388,5.301,3389,5.301,3390,5.301,3391,5.301]],["title/injectables/SpinnerService.html",[78,3.301,580,1.926]],["body/injectables/SpinnerService.html",[0,0.503,3,0.057,4,0.05,5,0.057,7,0.977,11,0.588,14,0.077,15,0.217,18,0.115,19,0.006,20,0.369,21,0.167,24,0.3,26,1.429,29,2.315,34,0.057,37,0.425,44,1.012,50,3.296,53,0.01,54,0.01,55,0.01,56,0.01,59,2.736,67,2.711,77,6.462,78,6.059,81,1.837,88,1.832,89,1.832,90,1.336,94,1.19,95,2.534,96,2.683,99,6.478,106,3.527,114,3.329,118,3.04,222,1.862,228,1.808,229,1.604,275,4.101,310,2.632,397,1.126,402,2.632,408,1.126,580,2.848,582,2.867,606,2.867,607,2.711,629,1.604,723,1.865,753,1.987,769,6.478,770,1.319,784,3.035,786,5.423,791,4.882,831,2.422,1229,3.909,1295,6.478,1596,7.066,1609,5.803,1629,5.429,1764,5.349,1839,5.803,2377,5.506,2394,4.974,2424,5.803,2767,5.803,3368,6.924,3369,4.762,3372,7.521,3373,8.039,3374,5.803,3375,6.304,3376,6.304,3377,6.304,3378,6.304,3379,6.304,3380,6.304,3381,6.304,3382,6.304,3383,7.066,3384,4.762,3385,6.304,3386,7.521,3387,4.762,3388,6.304,3389,4.762,3390,4.762,3391,4.762,3392,7.064,3393,5.336,3394,7.064,3395,5.336,3396,5.336]],["title/classes/StatisticItemDTO.html",[0,0.34,505,2.098]],["body/classes/StatisticItemDTO.html",[0,0.698,2,0.295,3,0.047,4,0.042,5,0.047,13,1.106,14,0.065,15,0.193,18,0.105,19,0.006,20,0.451,21,0.143,24,0.274,34,0.104,37,0.699,38,1.125,39,0.901,49,1.659,53,0.008,54,0.008,55,0.008,56,0.008,94,1.164,148,0.677,157,0.721,330,2.455,347,0.873,348,1.493,349,1.966,350,1.484,351,2.396,357,0.88,360,2.068,380,1.392,381,2.211,382,2.249,383,2.37,384,1.259,385,1.792,386,2.09,451,1.389,455,1.678,459,2.011,466,2.635,467,2.635,468,2.011,469,2.801,470,1.923,471,1.636,472,2.011,473,2.011,474,2.011,475,2.011,476,1.493,477,1.923,478,2.011,479,1.966,480,1.493,481,3.365,482,2.011,483,2.011,484,1.369,485,2.692,486,2.011,487,2.815,488,2.011,489,2.011,490,3.853,491,1.606,492,2.692,493,2.011,494,2.011,495,2.011,496,2.011,497,2.011,498,2.011,499,1.262,500,2.011,501,2.692,502,1.7,503,2.635,504,2.011,505,3.176,506,3.248,507,3.248,508,1.636,509,1.636,510,1.636,511,1.636,512,1.636,513,1.636,514,1.636,515,1.636,516,1.636,517,1.966,518,1.822,519,1.966,520,1.966,521,1.966,522,1.966,523,1.966,524,1.966,525,1.966,526,1.038,527,1.574,528,1.966,529,1.949,530,2.011,531,1.072,532,2.011,533,2.527,534,1.18,535,1.668,536,1.346,537,1.417,538,1.7,539,2.752,540,1.636,541,1.668,542,2.011,543,1.882,544,1.966,545,2.011,546,1.7,3397,4.476,3398,4.476,3399,4.476]],["title/injectables/StorageService.html",[580,1.926,745,3.671]],["body/injectables/StorageService.html",[0,0.458,3,0.068,4,0.06,5,0.068,7,1.178,9,1.553,14,0.093,15,0.245,18,0.115,19,0.006,21,0.179,24,0.244,26,1.722,34,0.068,44,1.088,53,0.012,54,0.012,55,0.012,56,0.012,59,3.083,67,3.267,81,1.492,88,1.668,89,1.668,90,1.216,112,2.609,113,4.645,154,2.224,228,1.468,229,1.933,354,2.276,558,2.655,580,3.21,582,3.454,606,3.454,629,1.933,723,1.999,729,3.458,745,6.118,747,3.277,748,4.276,753,2.542,784,3.42,791,5.502,1070,6.118,1174,6.118,1204,4.942,1229,4.405,1410,4.698,1596,5.782,2450,6.54,2451,6.54,3400,6.43,3401,7.96,3402,7.96,3403,8.646,3404,6.43,3405,6.43,3406,7.104,3407,6.43,3408,6.43,3409,7.96,3410,6.43,3411,6.43,3412,6.43,3413,7.96]],["title/components/SubnetComponent.html",[57,0.977,184,1.887]],["body/components/SubnetComponent.html",[0,0.282,3,0.042,4,0.037,5,0.042,14,0.057,15,0.177,18,0.107,19,0.006,21,0.167,24,0.311,26,1.061,27,1.49,32,1.096,33,1.535,34,0.042,38,0.825,39,1.157,48,1.631,50,2.659,52,1.421,53,0.007,54,0.007,55,0.007,56,0.007,57,1.516,58,1.631,59,1.535,60,1.702,61,1.702,62,1.702,64,1.702,65,4.222,66,3.959,68,2.415,70,2.415,80,2.843,81,0.919,83,4.102,84,4.102,88,1.027,89,1.027,90,0.749,94,1.159,95,2.823,96,2.989,112,1.298,114,2.415,116,3.74,122,3.434,139,3.154,141,1.702,142,2.468,143,1.254,144,1.702,145,2.192,146,1.702,147,1.598,148,0.645,149,1.74,150,1.598,151,2.968,152,1.666,153,1.631,154,1.775,155,1.74,156,1.631,157,1.194,158,1.74,159,1.631,160,1.74,161,1.74,162,1.566,163,1.74,164,1.598,165,1.74,166,1.566,167,1.598,168,1.74,169,1.566,170,1.566,171,1.74,172,1.74,173,1.631,174,1.74,175,1.566,176,1.631,177,1.74,178,1.666,179,1.826,180,1.666,181,2.523,182,1.666,183,1.666,184,2.929,185,1.566,186,1.74,187,1.566,188,1.566,189,1.566,190,1.74,191,1.598,192,1.74,193,1.74,194,1.74,216,2.225,222,1.514,228,0.905,229,1.191,244,1.505,245,2.27,246,1.535,254,2.652,316,3.451,347,1.121,364,2.444,471,2.877,476,2.473,491,2.061,499,0.926,526,0.919,624,3.39,646,4.467,714,2.225,820,1.505,849,3.577,941,2.27,959,3.511,997,3.631,998,2.422,1001,3.859,1002,2.619,1003,2.619,1005,2.514,1007,4.686,1009,3.434,1011,3.179,1012,2.619,1033,2.919,1075,3.28,1076,3.28,1109,2.338,1271,2.514,1272,2.514,1277,4.228,1278,2.338,1293,3.797,1331,2.338,1391,3.766,1410,3.39,1485,3.797,1499,3,1500,4.994,1501,4.704,1505,1.78,1506,2.128,1549,2.71,1681,6.076,1682,1.78,1916,3.511,2091,2.619,2093,3.797,2144,4.671,2145,5.672,2149,5.552,2150,4.671,2151,4.671,2152,4.671,2153,5.123,2154,2.738,2161,2.738,2162,2.738,2163,2.514,2164,2.738,2165,2.738,2166,3.97,2167,3.511,2175,3.39,2176,3.97,2177,3.97,2178,3.97,2179,3.97,2180,3.97,2181,3.97,2182,3.97,2183,3.97,2184,2.738,2185,2.738,2186,2.738,2187,2.262,2188,2.619,2189,2.738,2190,2.738,2191,2.738,2192,2.738,2193,2.738,2194,3.97,2195,3.97,2196,2.738,2197,2.738,2198,5.123,2199,2.514,2200,2.619,2201,2.619,2202,2.738,2203,3.39,2204,3.97,2205,3.97,2206,2.738,2207,5.672,2208,2.738,2209,2.338,2210,2.738,2211,2.738,2212,2.738,2321,5.961,2338,6.308,3414,3.962,3415,6.758,3416,5.745,3417,5.745,3418,3.962,3419,3.962,3420,3.962,3421,3.962,3422,3.962,3423,5.745,3424,8.207,3425,5.745,3426,5.745,3427,5.745]],["title/classes/SubnetDTO.html",[0,0.34,712,2.727]],["body/classes/SubnetDTO.html",[0,0.634,2,0.406,3,0.065,4,0.057,5,0.065,14,0.089,15,0.238,18,0.143,19,0.006,20,0.445,21,0.195,34,0.094,49,1.77,53,0.011,54,0.011,55,0.011,56,0.011,74,4.841,94,1.094,148,0.632,351,2.862,357,0.843,469,3.284,499,1.366,531,2.03,701,6.463,702,4.734,703,4.734,704,2.632,707,2.833,710,6.158,711,6.839,712,4.425,713,6.517,714,3.284,715,6.517,716,6.517,717,5.86,3428,6.16,3429,6.16,3430,6.16,3431,6.16,3432,6.16,3433,6.16,3434,6.16,3435,6.16,3436,6.16,3437,6.16,3438,6.16,3439,6.16]],["title/classes/SubnetExport.html",[0,0.34,934,2.145]],["body/classes/SubnetExport.html",[0,0.706,2,0.34,3,0.055,4,0.048,5,0.055,9,0.886,11,0.761,12,0.974,13,1.706,14,0.075,15,0.212,18,0.075,19,0.006,20,0.438,21,0.102,24,0.195,34,0.105,37,0.711,44,0.579,53,0.009,54,0.009,55,0.009,56,0.009,94,1.173,97,1.603,148,0.366,216,1.996,320,1.294,350,1.167,357,0.613,389,2.147,390,1.426,397,1.088,408,1.088,413,1.141,420,3.365,451,1.597,499,0.83,527,1.294,531,1.863,534,1.358,536,1.55,551,2.476,552,2.476,554,2.476,555,1.958,556,1.92,557,1.75,558,1.719,559,1.689,560,1.92,561,1.92,562,1.92,563,1.849,564,1.849,566,1.719,567,1.689,689,1.996,704,2.823,707,3.517,714,1.996,897,3.101,898,2.37,899,2.315,900,2.315,901,2.315,902,3.101,904,3.101,906,3.101,908,3.031,909,3.031,910,3.031,911,3.031,912,3.031,913,2.214,914,3.031,915,3.031,916,3.031,917,3.031,918,3.031,919,2.37,920,2.37,921,2.078,922,3.031,923,2.315,924,2.315,925,3.101,926,2.315,927,3.101,928,2.315,929,3.031,930,2.37,931,2.37,932,2.37,933,3.343,934,3.893,935,2.315,936,2.214,937,3.031,938,2.122,939,3.496,940,3.734,941,2.037,942,3.101,943,3.101,944,3.101,945,3.173,946,3.031,947,2.315,948,2.315,949,2.315,3440,5.154]],["title/classes/SubnetNode.html",[0,0.34,1565,3.469]],["body/classes/SubnetNode.html",[0,0.407,2,0.259,3,0.042,4,0.037,5,0.042,7,0.72,8,2.304,11,0.931,12,1.735,14,0.057,15,0.176,18,0.122,19,0.006,20,0.295,21,0.171,24,0.328,29,2.421,34,0.071,37,0.455,44,0.949,45,2.286,53,0.007,54,0.007,55,0.007,56,0.007,57,1.377,81,1.561,88,2.123,89,2.123,90,1.548,94,0.555,112,1.873,118,1.266,143,1.808,145,2.184,148,0.279,154,1.612,157,0.921,179,2.129,184,2.258,222,1.506,228,1.929,229,2.359,244,2.17,245,1.554,246,1.523,254,2.698,321,1.266,322,2.352,323,2.245,347,1.313,357,0.349,364,2.402,368,2.919,397,1.421,399,2.012,402,1.465,405,1.523,406,2.37,408,1.206,413,0.87,425,1.336,434,2.376,480,1.312,499,0.921,526,1.326,584,2.659,610,2.455,629,1.182,667,1.94,704,1.94,714,2.213,717,3.949,721,2.869,722,2.665,723,2.082,726,2.567,729,3.163,731,1.767,753,2.521,755,2.665,767,2.352,770,0.972,776,2.919,780,1.767,782,2.984,787,2.286,798,1.852,804,3.753,805,3.07,820,1.494,831,2.058,844,2.176,865,3.07,921,2.304,960,2.184,967,1.998,980,1.998,1046,1.494,1105,3.07,1182,1.898,1209,1.69,1212,2.984,1213,2.757,1321,3.968,1363,1.898,1382,2.321,1391,1.998,1397,4.417,1417,2.455,1517,2.984,1519,2.984,1548,2.903,1549,3.598,1555,4.392,1565,5.946,1612,3.07,1613,3.514,1617,3.07,1643,1.998,1662,4.694,1682,2.567,1766,3.07,1904,3.162,2223,3.725,2224,3.949,2225,3.949,2226,3.949,2227,3.949,2228,3.949,2229,3.949,2231,3.725,2232,3.162,2234,4.814,2235,4.088,2236,3.616,2237,4.088,2238,4.088,2239,3.162,2240,3.07,2241,3.162,2242,2.718,2244,2.718,2245,3.162,2247,2.718,2249,2.718,2250,3.162,2252,3.162,2253,3.162,2254,3.162,2255,3.162,2256,3.07,2257,3.07,2258,3.162,2259,3.162,2260,2.718,2261,3.949,2262,3.725,2263,3.725,2265,2.718,2266,2.718,2267,2.718,2268,2.718,2269,1.946,2270,1.946,2271,2.176,2273,3.493,2274,2.176,2275,2.113,2276,2.113,2277,2.113,2278,2.113,2279,2.113,2281,2.176,2282,2.176,2283,2.176,2284,2.176,2285,2.176,2286,3.162,2287,2.176,2288,2.176,2289,2.176,2290,2.176,2291,2.176,3299,3.231,3304,3.51,3305,3.51,3441,5.714,3442,3.933,3443,3.933,3444,3.933,3445,3.933,3446,3.933,3447,3.933]],["title/classes/SubnetSimpleData.html",[0,0.34,918,2.098]],["body/classes/SubnetSimpleData.html",[0,0.705,2,0.335,3,0.054,4,0.047,5,0.054,9,0.873,11,0.753,12,0.96,13,1.689,14,0.074,15,0.21,18,0.112,19,0.006,20,0.437,21,0.153,24,0.193,34,0.105,37,0.735,44,0.57,53,0.009,54,0.009,55,0.009,56,0.009,94,1.166,97,1.58,148,0.36,216,1.967,320,1.275,350,1.156,357,0.607,389,2.126,390,1.405,397,1.072,408,1.072,413,1.124,420,3.358,451,1.706,499,0.818,527,1.275,531,1.85,534,1.338,536,1.527,551,2.452,552,2.452,554,2.452,555,1.929,556,1.892,557,1.724,558,1.694,559,1.664,560,1.892,561,1.892,562,1.892,563,1.822,564,1.822,566,1.694,567,1.664,689,1.967,704,2.321,707,3.509,714,1.967,897,3.07,898,2.335,899,2.281,900,2.281,901,2.281,902,3.07,904,3.07,906,3.07,908,3.001,909,3.001,910,3.001,911,3.001,912,3.392,913,2.182,914,3.001,915,3.001,916,3.001,917,3.001,918,3.392,919,2.335,920,2.335,921,2.048,922,3.001,923,2.281,924,2.281,925,3.07,926,2.281,927,3.07,928,2.281,929,3.001,930,2.335,931,2.335,932,2.335,933,3.318,934,3.712,935,2.281,936,2.182,937,3.001,938,2.091,939,3.873,940,3.873,941,2.007,942,3.07,943,3.07,944,3.07,945,3.142,946,3.392,947,2.281,948,2.281,949,2.281,3448,5.078,3449,5.078,3450,5.078]],["title/components/TabnavComponent.html",[57,0.977,185,1.887]],["body/components/TabnavComponent.html",[0,0.287,3,0.043,4,0.038,5,0.043,7,0.739,8,3.015,9,1,11,0.642,12,1.413,14,0.058,15,0.179,18,0.123,19,0.006,20,0.404,21,0.172,24,0.221,26,1.081,27,1.51,32,2.193,33,1.563,34,0.043,37,0.632,38,0.836,39,1.172,41,2.645,44,1.036,47,2.633,48,1.661,50,2.088,52,1.447,53,0.007,54,0.007,55,0.007,56,0.007,57,1.191,58,1.661,59,1.563,60,1.733,61,1.733,62,1.733,64,1.733,65,4.247,66,3.998,68,2.447,70,2.447,80,3.38,81,0.936,83,3.779,84,4.137,88,1.51,89,1.51,90,1.101,94,0.964,95,1.447,96,1.532,97,1.255,114,3.472,116,2.233,131,2.93,138,2.788,139,2.169,140,4.228,141,1.733,142,2.501,143,1.277,144,1.733,145,2.21,146,1.733,147,1.627,148,0.63,149,1.772,150,1.627,151,2.999,152,1.696,153,1.661,154,2.087,155,1.772,156,1.661,157,1.5,158,1.772,159,1.661,160,1.772,161,1.772,162,1.594,163,1.772,164,1.627,165,1.772,166,1.594,167,1.627,168,1.772,169,1.594,170,1.594,171,1.772,172,1.772,173,1.661,174,1.772,175,1.594,176,1.661,177,1.772,178,1.696,179,1.734,180,1.696,181,2.556,182,1.696,183,1.696,184,1.594,185,3.263,186,1.772,187,1.594,188,1.594,189,1.594,190,1.772,191,1.627,192,1.772,193,1.772,194,1.772,222,1.534,228,1.329,229,2.053,316,2.871,321,1.299,322,2.396,354,1.665,408,1.229,426,3.212,434,1.637,471,1.475,476,1.942,557,1.977,607,2.05,731,1.812,732,4.334,735,4.782,744,4.569,747,2.396,753,2.103,755,1.977,765,3.558,770,1.439,776,2.954,777,4.228,780,2.615,784,3.872,785,3.798,787,1.977,788,3.848,831,1.78,843,6.142,960,2.21,995,3.899,1000,3.101,1001,3.899,1007,3.324,1009,2.05,1066,4.474,1084,2.93,1096,3.694,1129,4.474,1202,5.43,1213,2.809,1271,3.694,1272,3.694,1278,2.381,1331,2.381,1338,3.6,1339,4.782,1341,2.93,1498,3.558,1499,2.107,1505,3.068,1916,2.466,2000,4.782,2019,5.194,2037,5.194,2122,3.315,2163,4.744,2200,2.667,2370,4.474,2371,4.782,2381,4.474,2394,3.435,2740,6.094,2746,5.194,2777,7.464,2778,3.6,2779,3.6,2781,3.6,2789,3.6,2790,3.6,3451,4.035,3452,5.821,3453,5.821,3454,6.828,3455,5.821,3456,7.926,3457,6.828,3458,5.821,3459,4.035,3460,5.746,3461,4.035,3462,5.821,3463,4.035,3464,5.821,3465,4.035,3466,4.035,3467,6.671,3468,5.821,3469,5.821,3470,4.035,3471,4.035,3472,4.035,3473,4.035,3474,4.035,3475,4.035,3476,5.821,3477,4.035]],["title/classes/TabnavElement.html",[0,0.34,3460,3.671]],["body/classes/TabnavElement.html",[0,0.602,2,0.468,3,0.075,4,0.066,5,0.075,7,1.299,8,2.86,14,0.103,15,0.26,18,0.103,19,0.006,20,0.37,21,0.14,24,0.269,25,4.823,26,1.899,27,2.34,29,2.768,32,2.338,34,0.09,41,3.495,44,0.796,49,1.341,50,2.544,52,2.544,53,0.013,54,0.013,55,0.013,56,0.013,157,1.361,185,3.771,426,3.629,755,2.408,770,2.23,1536,6.136,2777,5.45,3460,6.493,3478,6.328,3479,7.412,3480,7.091,3481,6.328]],["title/classes/TabnavItem.html",[0,0.34,3479,3.924]],["body/classes/TabnavItem.html",[0,0.595,2,0.459,3,0.074,4,0.065,5,0.074,7,1.275,8,3.368,14,0.101,15,0.257,18,0.13,19,0.006,20,0.407,21,0.177,24,0.264,25,5.11,26,1.864,27,2.321,29,2.28,32,1.926,34,0.089,41,2.695,44,0.938,49,1.692,50,3.211,52,3.211,53,0.013,54,0.013,55,0.013,56,0.013,157,1.121,185,3.668,426,2.989,755,2.836,770,2.212,1536,5.054,2777,6.42,3460,5.348,3478,6.21,3479,7.353,3481,7.454,3482,6.958,3483,6.958,3484,6.958]],["title/classes/TagCatalogueDTO.html",[0,0.34,678,2.919]],["body/classes/TagCatalogueDTO.html",[0,0.679,2,0.411,3,0.066,4,0.058,5,0.066,14,0.09,15,0.24,18,0.124,19,0.006,20,0.449,21,0.169,24,0.237,34,0.102,49,1.74,53,0.011,54,0.011,55,0.011,56,0.011,94,0.881,148,0.653,309,2.869,320,1.567,350,1.557,351,1.908,357,0.817,360,1.784,384,1.755,385,1.784,499,1.005,502,2.37,508,2.281,509,2.281,510,2.281,511,2.281,512,2.281,513,2.281,514,2.281,515,2.281,516,2.281,518,1.814,529,1.941,541,2.325,546,2.37,566,2.081,567,2.045,671,4.775,672,4.124,678,5.213,679,4.775,680,3.96,681,4.124,682,3.96,683,4.124,684,4.124,685,4.124,686,4.958,687,4.124,688,4.124,689,2.417,690,4.124,691,4.775,692,4.124,693,3.96,694,3.96,695,3.96,696,4.124,697,4.124,698,3.96,699,3.814,700,3.96,3485,6.239,3486,6.239,3487,6.239]],["title/classes/TagTIP.html",[0,0.34,539,2.098]],["body/classes/TagTIP.html",[0,0.699,2,0.301,3,0.048,4,0.043,5,0.048,13,1.805,14,0.066,15,0.195,18,0.066,19,0.006,20,0.451,21,0.09,24,0.277,34,0.104,37,0.703,38,1.134,39,0.918,49,1.667,53,0.008,54,0.008,55,0.008,56,0.008,94,1.172,148,0.679,157,0.735,330,1.549,347,0.89,348,1.521,349,2.003,350,1.492,351,2.415,357,0.876,360,2.089,380,1.419,381,2.234,382,2.272,383,2.394,384,1.283,385,1.816,386,2.118,451,1.403,455,1.701,459,2.049,466,2.669,467,2.669,468,2.049,469,2.829,470,1.959,471,1.667,472,2.049,473,2.049,474,2.049,475,2.049,476,1.521,477,1.959,478,2.049,479,2.003,480,1.521,481,3.393,482,2.049,483,2.049,484,1.395,485,2.728,486,2.049,487,2.852,488,2.049,489,2.049,490,3.873,491,1.636,492,2.728,493,2.049,494,2.049,495,2.049,496,2.049,497,2.049,498,2.049,499,1.273,500,2.049,501,2.728,502,1.732,503,2.669,504,2.049,505,2.788,506,2.049,507,2.049,508,1.667,509,1.667,510,1.667,511,1.667,512,1.667,513,1.667,514,1.667,515,1.667,516,1.667,517,2.003,518,1.846,519,2.003,520,2.003,521,2.003,522,2.003,523,2.003,524,2.003,525,2.003,526,1.058,527,1.595,528,2.003,529,1.975,530,2.049,531,1.092,532,2.049,533,2.56,534,1.202,535,1.699,536,1.371,537,1.443,538,1.732,539,3.208,540,1.667,541,1.699,542,2.049,543,1.917,544,2.003,545,2.049,546,1.732,3488,4.56]],["title/classes/TagsExport.html",[0,0.34,571,2.818]],["body/classes/TagsExport.html",[0,0.695,2,0.42,3,0.068,4,0.059,5,0.068,9,1.093,11,0.872,12,1.203,13,2.127,14,0.092,15,0.243,18,0.092,19,0.006,20,0.44,21,0.126,24,0.241,34,0.103,37,0.63,38,0.913,44,0.715,53,0.012,54,0.012,55,0.012,56,0.012,148,0.452,320,1.598,350,1.455,357,0.764,390,1.761,397,1.343,408,1.343,435,2.122,451,1.519,455,2.118,499,1.274,518,1.85,527,1.598,529,1.979,534,1.677,535,2.37,537,2.014,540,2.326,547,4.667,548,3.889,551,2.837,552,2.837,553,4.515,554,2.837,555,2.417,556,2.37,557,2.161,558,2.122,559,2.085,560,2.37,561,2.37,562,2.37,563,2.283,564,2.283,565,3.521,566,2.122,567,2.085,568,4.515,569,4.515,570,4.667,571,5.078,572,4.515,573,3.755,574,4.667,575,3.755,576,4.667,577,3.889,578,3.889,579,3.889,3489,6.362]],["title/classes/TheaterApplication.html",[0,0.34,450,2.052]],["body/classes/TheaterApplication.html",[0,0.638,2,0.258,3,0.042,4,0.037,5,0.042,9,0.98,11,0.813,14,0.057,15,0.175,18,0.142,19,0.006,20,0.43,21,0.193,24,0.34,34,0.099,37,0.454,38,0.563,39,1.148,44,0.828,46,1.518,49,1.078,53,0.007,54,0.007,55,0.007,56,0.007,94,0.553,139,2.124,148,0.477,154,1.766,179,1.559,196,2.456,254,2.501,263,3.325,320,0.985,321,2.524,323,1.308,345,1.992,346,2.047,347,1.747,348,1.902,350,0.964,351,1.743,353,4.433,354,2.768,357,0.805,360,2.786,363,2.449,364,2.226,365,1.892,366,2.449,367,1.892,368,2.253,369,1.892,370,3.089,371,2.047,372,3.089,373,2.047,374,3.089,375,2.047,376,2.684,377,1.94,378,3.169,379,1.846,380,2.294,381,1.199,382,1.773,383,2.202,384,1.604,385,1.63,386,1.902,387,1.802,388,1.94,389,2.294,390,1.859,391,3.242,392,2.825,393,2.825,394,2.825,395,4.432,396,4.047,397,1.203,398,2.449,399,2.008,400,2.751,401,2.897,402,2.124,403,2.977,404,2.977,405,2.208,406,2.008,407,2.977,408,1.203,409,2.751,410,3.018,411,2.047,412,1.262,413,0.867,414,1.684,415,2.047,416,2.047,417,1.802,418,2.047,419,2.047,420,1.355,421,2.047,422,1.846,423,1.722,424,1.722,425,1.331,426,1.684,427,2.047,428,1.262,429,2.047,430,1.802,431,2.751,432,1.992,433,1.802,434,1.103,435,1.308,436,2.684,437,3.85,438,1.892,439,1.892,440,2.897,441,3.748,442,3.946,443,3.513,444,2.977,445,3.508,446,3.413,447,3.018,448,1.892,449,4.155,450,2.449,451,1.29,452,1.992,453,1.846,454,1.892,499,0.919,508,2.084,509,2.084,510,2.084,511,2.084,512,2.084,513,2.084,514,2.084,515,2.084,516,2.084,518,1.658,529,1.773,671,2.396,675,2.253,678,2.396,679,2.396,691,2.396,693,3.618,694,3.618,695,3.618,698,3.618,731,1.761,3490,3.92,3491,3.92,3492,3.92,3493,3.92,3494,3.92,3495,3.92,3496,3.92,3497,3.92,3498,3.92,3499,3.92,3500,3.92,3501,3.92,3502,3.92,3503,3.92,3504,3.92,3505,3.92,3506,3.92,3507,3.92,3508,3.92,3509,3.92,3510,3.92,3511,3.92,3512,3.92,3513,3.92]],["title/classes/TheaterDTO.html",[0,0.34,360,1.366]],["body/classes/TheaterDTO.html",[0,0.656,2,0.355,3,0.057,4,0.05,5,0.057,14,0.078,15,0.219,18,0.145,19,0.006,20,0.449,21,0.197,24,0.204,34,0.099,37,0.43,49,1.663,53,0.01,54,0.01,55,0.01,56,0.01,94,1.004,148,0.624,309,2.478,320,1.354,350,1.488,351,2.434,357,0.802,360,2.033,384,1.516,385,1.541,499,1.282,502,2.047,508,2.909,509,2.909,510,2.909,511,2.909,512,2.909,513,2.909,514,2.909,515,2.909,516,2.909,518,2.314,529,2.475,541,2.008,546,2.047,566,1.798,567,1.766,671,4.864,672,3.563,675,2.13,678,4.864,679,4.864,680,3.421,681,3.563,682,3.421,683,3.563,684,3.563,685,3.563,686,4.513,687,3.563,688,3.563,689,2.088,690,3.563,691,4.864,692,3.563,693,5.05,694,5.05,695,5.05,696,3.563,697,3.563,698,5.05,699,3.294,700,3.421,3514,5.39,3515,5.39,3516,5.39,3517,5.39,3518,5.39,3519,5.39,3520,5.39,3521,5.39,3522,5.39,3523,5.39,3524,5.39,3525,5.39,3526,5.39,3527,5.39,3528,5.39,3529,5.39,3530,5.39,3531,5.39,3532,5.39,3533,5.39]],["title/classes/TheaterExport.html",[0,0.34,565,2.643]],["body/classes/TheaterExport.html",[0,0.688,2,0.399,3,0.064,4,0.056,5,0.064,7,1.107,9,1.316,11,0.974,12,1.448,13,1.494,14,0.088,15,0.235,18,0.128,19,0.006,20,0.439,21,0.175,24,0.229,34,0.103,37,0.67,38,0.868,44,0.86,53,0.011,54,0.011,55,0.011,56,0.011,148,0.429,320,2.111,350,1.542,357,0.746,390,1.673,397,1.616,408,1.616,435,2.554,451,1.471,455,2.051,499,1.234,518,1.757,527,1.518,529,1.88,534,1.593,535,2.252,537,1.913,540,2.209,547,4.519,548,3.694,551,2.747,552,2.747,553,4.372,554,3.015,555,2.296,556,2.853,557,2.6,558,2.554,559,2.509,560,2.853,561,2.853,562,2.853,563,2.747,564,2.747,565,4.238,566,2.804,567,2.755,568,4.372,569,4.372,570,4.519,571,4.519,572,4.372,573,3.567,574,4.519,575,3.567,576,4.519,577,3.694,578,3.694,579,3.694,675,2.388,3534,6.044,3535,6.044,3536,6.044,3537,6.044]],["title/classes/TheaterInstanceDTO.html",[0,0.34,546,1.814]],["body/classes/TheaterInstanceDTO.html",[0,0.698,2,0.299,3,0.048,4,0.042,5,0.048,13,1.12,14,0.066,15,0.194,18,0.092,19,0.006,20,0.451,21,0.125,24,0.276,34,0.104,37,0.727,38,1.131,39,0.912,49,1.664,53,0.008,54,0.008,55,0.008,56,0.008,94,1.169,148,0.678,157,0.73,330,1.538,347,0.884,348,1.511,349,1.99,350,1.489,351,2.408,357,0.875,360,2.081,380,1.409,381,2.226,382,2.264,383,2.581,384,1.274,385,1.807,386,2.108,451,1.591,455,1.693,459,2.035,466,2.657,467,2.657,468,2.035,469,2.819,470,1.946,471,1.656,472,2.035,473,2.035,474,2.035,475,2.035,476,1.511,477,1.946,478,2.035,479,1.99,480,1.511,481,3.383,482,2.035,483,2.035,484,1.385,485,2.715,486,2.035,487,2.839,488,2.035,489,2.035,490,3.866,491,1.625,492,2.715,493,2.035,494,2.035,495,2.035,496,2.035,497,2.035,498,2.035,499,1.269,500,2.035,501,2.715,502,1.721,503,2.657,504,2.035,505,2.776,506,2.035,507,2.035,508,1.656,509,1.656,510,1.656,511,1.656,512,1.656,513,1.656,514,1.656,515,1.656,516,1.656,517,1.99,518,1.838,519,1.99,520,1.99,521,1.99,522,1.99,523,1.99,524,1.99,525,1.99,526,1.051,527,1.587,528,1.99,529,1.966,530,2.035,531,1.085,532,2.035,533,2.548,534,1.194,535,1.688,536,1.362,537,1.434,538,1.721,539,2.776,540,1.656,541,1.688,542,2.035,543,1.905,544,1.99,545,2.035,546,2.4,3538,4.53,3539,4.53]],["title/classes/TheaterInstancePropertiesDTO.html",[0,0.34,383,1.565]],["body/classes/TheaterInstancePropertiesDTO.html",[0,0.696,2,0.291,3,0.047,4,0.041,5,0.047,13,1.089,14,0.064,15,0.191,18,0.123,19,0.006,20,0.451,21,0.168,24,0.272,34,0.104,37,0.696,38,1.117,39,0.887,49,1.652,53,0.008,54,0.008,55,0.008,56,0.008,94,1.157,148,0.675,157,0.71,330,1.496,347,0.86,348,1.47,349,1.935,350,1.533,351,2.379,357,0.875,360,2.05,380,1.371,381,2.193,382,2.23,383,2.55,384,1.24,385,1.773,386,2.392,451,1.377,455,1.66,459,1.979,466,2.606,467,2.606,468,1.979,469,2.777,470,1.893,471,1.611,472,1.979,473,1.979,474,1.979,475,1.979,476,1.47,477,1.893,478,1.979,479,1.935,480,1.47,481,3.342,482,1.979,483,1.979,484,1.348,485,2.663,486,1.979,487,2.784,488,1.979,489,1.979,490,3.836,491,1.581,492,2.663,493,1.979,494,1.979,495,1.979,496,1.979,497,1.979,498,1.979,499,1.37,500,1.979,501,2.663,502,1.674,503,2.606,504,1.979,505,2.722,506,1.979,507,1.979,508,1.611,509,1.611,510,1.611,511,1.611,512,1.611,513,1.611,514,1.611,515,1.611,516,1.611,517,1.935,518,2.262,519,1.935,520,1.935,521,1.935,522,1.935,523,1.935,524,1.935,525,1.935,526,1.022,527,1.954,528,1.935,529,2.42,530,1.979,531,1.055,532,1.979,533,2.499,534,1.161,535,1.642,536,1.325,537,1.395,538,1.674,539,3.149,540,2.621,541,1.642,542,1.979,543,1.853,544,1.935,545,1.979,546,1.674,3540,4.406,3541,4.406,3542,4.406,3543,4.406,3544,4.406,3545,4.406]],["title/components/TheaterInternalServiceModuleInstanceComponent.html",[57,0.977,187,1.887]],["body/components/TheaterInternalServiceModuleInstanceComponent.html",[0,0.268,3,0.04,4,0.035,5,0.04,14,0.055,15,0.17,18,0.105,19,0.006,21,0.178,24,0.306,26,1.009,27,1.436,32,1.042,33,1.459,34,0.04,38,0.795,39,1.115,48,1.551,50,2.597,52,1.351,53,0.007,54,0.007,55,0.007,56,0.007,57,1.481,58,1.551,59,1.459,60,1.618,61,1.618,62,1.618,64,1.618,65,4.201,66,3.933,68,2.328,70,2.328,80,2.741,81,0.874,83,4.005,84,4.005,88,0.977,89,0.977,90,0.712,94,1.138,95,3.131,96,3.315,112,1.235,114,2.328,116,3.634,122,3.336,139,3.105,141,1.618,142,2.379,143,1.192,144,1.618,145,2.14,146,1.618,147,1.519,148,0.639,149,1.654,150,1.519,151,2.884,152,1.584,153,1.551,154,1.733,155,1.654,156,1.551,157,1.166,158,1.654,159,1.551,160,1.654,161,1.654,162,1.489,163,1.654,164,1.519,165,1.654,166,1.489,167,1.519,168,1.654,169,1.489,170,1.489,171,1.654,172,1.654,173,1.551,174,1.654,175,1.489,176,1.551,177,1.654,178,1.584,179,1.789,180,1.584,181,2.432,182,1.584,183,1.584,184,1.489,185,1.489,186,1.654,187,2.86,188,1.489,189,1.489,190,1.654,191,1.519,192,1.654,193,1.654,194,1.654,216,2.145,222,1.459,228,0.86,229,1.133,244,1.431,245,2.188,246,1.459,254,2.783,316,3.595,347,1.08,364,2.524,455,1.483,471,2.819,476,2.414,491,1.986,499,0.892,526,0.874,624,3.268,646,4.34,667,2.738,820,1.431,849,2.672,941,2.188,959,3.384,997,3.527,998,2.303,1001,3.749,1002,2.49,1003,2.49,1005,2.391,1007,4.604,1009,3.336,1011,3.064,1012,2.49,1033,2.814,1075,3.162,1076,3.162,1109,2.223,1271,2.391,1272,2.391,1277,4.143,1278,2.223,1293,3.66,1331,2.223,1398,3.779,1410,3.268,1485,3.66,1499,2.891,1500,4.894,1501,4.593,1505,1.692,1506,2.024,1549,2.646,1681,6.016,1682,1.692,1770,5.046,1916,3.384,2091,2.49,2093,3.66,2144,4.538,2145,5.573,2148,5.257,2150,4.538,2151,4.538,2152,4.538,2153,5.002,2154,2.604,2161,2.604,2162,2.604,2163,2.391,2164,2.604,2165,2.604,2166,3.827,2167,3.384,2175,3.268,2176,3.827,2177,3.827,2178,3.827,2179,3.827,2180,3.827,2181,3.827,2182,3.827,2183,3.827,2184,2.604,2185,2.604,2186,2.604,2187,2.151,2188,2.49,2189,2.604,2190,2.604,2191,2.604,2192,2.604,2193,2.604,2194,3.827,2195,3.827,2196,2.604,2197,2.604,2198,5.002,2199,2.391,2200,2.49,2201,2.49,2202,2.604,2203,3.268,2204,3.827,2205,3.827,2206,2.604,2207,5.573,2208,2.604,2209,2.223,2210,2.604,2211,2.604,2212,2.604,2319,5.257,2320,5.394,2321,5.257,2333,3.095,2334,3.095,2335,3.095,2337,6.624,2338,6.197,2339,4.549,2340,4.549,2341,5.946,2342,5.946,2343,5.946,3546,3.767,3547,6.565,3548,5.537,3549,6.565,3550,5.537,3551,3.767,3552,3.767,3553,3.767,3554,3.767,3555,3.767,3556,3.767,3557,3.767,3558,3.767,3559,5.859,3560,3.767,3561,5.537]],["title/classes/TheaterInternalServiceModuleInstanceNode.html",[0,0.34,1532,3.469]],["body/classes/TheaterInternalServiceModuleInstanceNode.html",[0,0.405,2,0.258,3,0.041,4,0.036,5,0.041,7,0.716,8,2.293,11,0.929,12,1.733,14,0.057,15,0.175,18,0.128,19,0.006,21,0.171,24,0.328,29,2.414,34,0.071,37,0.453,38,0.561,44,0.947,45,2.277,53,0.007,54,0.007,55,0.007,56,0.007,57,1.372,81,1.556,88,2.118,89,2.118,90,1.544,112,1.864,118,1.258,143,1.8,145,2.177,148,0.277,154,1.606,157,0.916,179,2.127,187,2.247,222,1.499,228,1.925,229,2.353,244,2.16,245,1.544,246,1.513,254,2.694,321,1.258,322,2.341,323,2.237,347,1.308,350,0.661,364,2.398,372,3.386,392,1.643,393,1.643,394,1.643,397,1.415,399,2.003,402,1.456,405,1.513,406,2.361,408,1.201,413,1.484,425,1.327,434,2.371,455,1.047,480,1.303,499,0.63,526,1.319,537,1.237,538,1.484,584,2.65,610,2.443,629,1.175,667,2.658,721,2.863,722,2.658,723,2.079,726,2.555,729,3.158,731,1.755,753,2.517,755,2.658,767,2.341,770,0.966,776,2.91,780,1.755,782,2.97,787,2.277,798,1.84,804,3.742,805,3.055,820,1.484,831,2.051,844,2.162,865,3.055,921,2.293,960,2.177,967,1.985,980,1.985,1046,1.484,1105,3.055,1182,1.885,1209,1.679,1212,2.97,1213,2.744,1321,3.956,1363,1.885,1382,2.306,1397,4.372,1398,2.04,1402,3.931,1417,2.443,1517,2.97,1519,2.97,1522,4.371,1532,5.932,1548,2.89,1549,3.623,1612,3.055,1613,3.501,1617,3.055,1643,1.985,1682,2.555,1766,3.055,1904,3.147,2223,3.711,2224,3.931,2225,3.931,2226,3.931,2227,3.931,2228,3.931,2229,3.931,2231,3.711,2232,3.147,2234,4.807,2235,4.076,2236,3.602,2237,4.076,2238,4.076,2239,3.147,2240,3.055,2241,3.147,2242,2.701,2244,2.701,2245,3.147,2247,2.701,2249,2.701,2250,3.147,2252,3.147,2253,3.147,2254,3.147,2255,3.147,2256,3.055,2257,3.055,2258,3.147,2259,3.147,2260,2.701,2261,3.931,2262,3.711,2263,3.711,2265,2.701,2266,2.701,2267,2.701,2268,2.701,2269,1.934,2270,1.934,2271,2.162,2274,2.162,2275,3.602,2276,2.099,2277,2.099,2278,2.099,2279,2.099,2281,2.162,2282,2.162,2283,2.162,2284,2.162,2285,2.162,2286,3.147,2287,2.162,2288,2.162,2289,2.162,2290,2.162,2291,2.162,3314,3.21,3315,5.075,3316,3.487,3317,3.487,3562,5.687,3563,3.907,3564,3.907,3565,3.907,3566,3.907,3567,3.907,3568,3.907]],["title/components/TheaterModuleInstanceComponent.html",[57,0.977,188,1.887]],["body/components/TheaterModuleInstanceComponent.html",[0,0.268,3,0.04,4,0.035,5,0.04,14,0.055,15,0.17,18,0.105,19,0.006,21,0.178,24,0.306,26,1.009,27,1.436,32,1.042,33,1.459,34,0.04,38,0.795,39,1.115,48,1.551,50,2.597,52,1.351,53,0.007,54,0.007,55,0.007,56,0.007,57,1.481,58,1.551,59,1.459,60,1.618,61,1.618,62,1.618,64,1.618,65,4.201,66,3.933,68,2.328,70,2.328,80,2.741,81,0.874,83,4.005,84,4.005,88,0.977,89,0.977,90,0.712,94,1.138,95,3.131,96,3.315,112,1.235,114,2.328,116,3.634,122,3.336,139,3.105,141,1.618,142,2.379,143,1.192,144,1.618,145,2.14,146,1.618,147,1.519,148,0.639,149,1.654,150,1.519,151,2.884,152,1.584,153,1.551,154,1.733,155,1.654,156,1.551,157,1.166,158,1.654,159,1.551,160,1.654,161,1.654,162,1.489,163,1.654,164,1.519,165,1.654,166,1.489,167,1.519,168,1.654,169,1.489,170,1.489,171,1.654,172,1.654,173,1.551,174,1.654,175,1.489,176,1.551,177,1.654,178,1.584,179,1.789,180,1.584,181,2.432,182,1.584,183,1.584,184,1.489,185,1.489,186,1.654,187,1.489,188,2.86,189,1.489,190,1.654,191,1.519,192,1.654,193,1.654,194,1.654,216,2.145,222,1.459,228,0.86,229,1.133,244,1.431,245,2.188,246,1.459,254,2.783,316,3.595,347,1.08,364,2.524,455,1.483,471,2.819,476,2.414,491,1.986,499,0.892,526,0.874,624,3.268,646,4.34,667,2.738,820,1.431,849,2.672,941,2.188,959,3.384,997,3.527,998,2.303,1001,3.749,1002,2.49,1003,2.49,1005,2.391,1007,4.604,1009,3.336,1011,3.064,1012,2.49,1033,2.814,1075,3.162,1076,3.162,1109,2.223,1271,2.391,1272,2.391,1277,4.143,1278,2.223,1293,3.66,1331,2.223,1398,3.779,1410,3.268,1485,3.66,1499,2.891,1500,4.894,1501,4.593,1505,1.692,1506,2.024,1549,2.646,1681,6.016,1682,1.692,1770,5.046,1916,3.384,2091,2.49,2093,3.66,2144,4.538,2145,5.573,2148,5.257,2150,4.538,2151,4.538,2152,4.538,2153,5.002,2154,2.604,2161,2.604,2162,2.604,2163,2.391,2164,2.604,2165,2.604,2166,3.827,2167,3.384,2175,3.268,2176,3.827,2177,3.827,2178,3.827,2179,3.827,2180,3.827,2181,3.827,2182,3.827,2183,3.827,2184,2.604,2185,2.604,2186,2.604,2187,2.151,2188,2.49,2189,2.604,2190,2.604,2191,2.604,2192,2.604,2193,2.604,2194,3.827,2195,3.827,2196,2.604,2197,2.604,2198,5.002,2199,2.391,2200,2.49,2201,2.49,2202,2.604,2203,3.268,2204,3.827,2205,3.827,2206,2.604,2207,5.573,2208,2.604,2209,2.223,2210,2.604,2211,2.604,2212,2.604,2319,5.257,2320,5.394,2321,5.257,2333,3.095,2334,3.095,2335,3.095,2337,6.624,2338,6.197,2339,4.549,2340,4.549,2341,5.946,2342,5.946,2343,5.946,3569,3.767,3570,6.565,3571,5.537,3572,6.565,3573,5.537,3574,3.767,3575,3.767,3576,3.767,3577,3.767,3578,3.767,3579,3.767,3580,3.767,3581,3.767,3582,5.859,3583,3.767,3584,5.537]],["title/classes/TheaterModuleInstanceNode.html",[0,0.34,1534,3.469]],["body/classes/TheaterModuleInstanceNode.html",[0,0.405,2,0.258,3,0.041,4,0.036,5,0.041,7,0.716,8,2.293,11,0.929,12,1.733,14,0.057,15,0.175,18,0.128,19,0.006,21,0.171,24,0.328,29,2.414,34,0.071,37,0.453,38,0.561,44,0.947,45,2.277,53,0.007,54,0.007,55,0.007,56,0.007,57,1.372,81,1.556,88,2.118,89,2.118,90,1.544,112,1.864,118,1.258,143,1.8,145,2.177,148,0.277,154,1.606,157,0.916,179,2.127,188,2.247,222,1.499,228,1.925,229,2.353,244,2.16,245,1.544,246,1.513,254,2.694,321,1.258,322,2.341,323,2.237,347,1.308,350,0.661,364,2.398,374,3.386,392,1.643,393,1.643,394,1.643,397,1.415,399,2.003,402,1.456,405,1.513,406,2.361,408,1.201,413,1.484,425,1.327,434,2.371,455,1.047,480,1.303,499,0.63,526,1.319,537,1.237,538,1.484,584,2.65,610,2.443,629,1.175,667,2.658,721,2.863,722,2.658,723,2.079,726,2.555,729,3.158,731,1.755,753,2.517,755,2.658,767,2.341,770,0.966,776,2.91,780,1.755,782,2.97,787,2.277,798,1.84,804,3.742,805,3.055,820,1.484,831,2.051,844,2.162,865,3.055,921,2.293,960,2.177,967,1.985,980,1.985,1046,1.484,1105,3.055,1182,1.885,1209,1.679,1212,2.97,1213,2.744,1321,3.956,1363,1.885,1382,2.306,1397,4.372,1398,2.04,1399,3.931,1417,2.443,1517,2.97,1519,2.97,1521,4.371,1530,4.432,1534,4.87,1548,2.89,1549,3.623,1612,3.055,1613,3.501,1617,3.055,1643,1.985,1682,2.555,1766,3.055,1904,3.147,2223,3.711,2224,3.931,2225,3.931,2226,3.931,2227,3.931,2228,3.931,2229,3.931,2231,3.711,2232,3.147,2234,4.807,2235,4.076,2236,3.602,2237,4.076,2238,4.076,2239,3.147,2240,3.055,2241,3.147,2242,2.701,2244,2.701,2245,3.147,2247,2.701,2249,2.701,2250,3.147,2252,3.147,2253,3.147,2254,3.147,2255,3.147,2256,3.055,2257,3.055,2258,3.147,2259,3.147,2260,2.701,2261,3.931,2262,3.711,2263,3.711,2265,2.701,2266,2.701,2267,2.701,2268,2.701,2269,1.934,2270,1.934,2271,2.162,2274,2.162,2275,3.602,2276,2.099,2277,2.099,2278,2.099,2279,2.099,2281,2.162,2282,2.162,2283,2.162,2284,2.162,2285,2.162,2286,3.147,2287,2.162,2288,2.162,2289,2.162,2290,2.162,2291,2.162,3318,3.21,3319,5.075,3320,3.487,3321,3.487,3585,5.687,3586,3.907,3587,3.907,3588,3.907,3589,3.907,3590,3.907,3591,3.907]],["title/injectables/TheaterService.html",[208,3.157,580,1.926]],["body/injectables/TheaterService.html",[0,0.418,3,0.062,4,0.055,5,0.062,14,0.085,18,0.12,19,0.006,20,0.425,21,0.164,24,0.351,26,1.574,34,0.062,53,0.011,54,0.011,55,0.011,56,0.011,67,2.985,81,1.363,88,2.151,89,2.151,90,1.568,113,3.156,208,4.971,209,5.966,222,1.982,228,1.717,273,3.883,304,3.883,305,3.883,309,3.457,310,2.802,330,2.554,357,0.821,360,2.151,382,2.339,387,2.701,388,2.908,580,3.033,582,3.156,584,3.654,587,4.515,588,6.352,590,5.462,595,4.596,598,6.711,600,4.515,606,3.156,607,2.985,608,5.55,629,2.261,642,5.49,651,4.438,867,4.773,1911,4.515,1912,5.78,1955,6.178,1956,6.178,1957,6.178,1958,6.178,1959,6.178,1960,6.178,2602,6.711,3592,5.875,3593,7.52,3594,7.52,3595,5.875,3596,7.52,3597,5.875,3598,7.52,3599,5.875,3600,5.875,3601,5.875,3602,5.875]],["title/classes/TheaterSimpleData.html",[0,0.34,568,2.727]],["body/classes/TheaterSimpleData.html",[0,0.693,2,0.416,3,0.067,4,0.059,5,0.067,9,1.084,11,0.867,12,1.192,13,1.558,14,0.091,15,0.242,18,0.114,19,0.006,20,0.439,21,0.155,24,0.239,34,0.103,37,0.715,38,0.905,44,0.708,53,0.012,54,0.012,55,0.012,56,0.012,148,0.448,320,1.583,350,1.449,357,0.761,390,1.745,397,1.331,408,1.331,435,2.103,451,1.723,455,2.106,499,1.267,518,1.833,527,1.583,529,1.961,534,1.662,535,2.349,537,1.995,540,2.305,547,4.64,548,3.853,551,2.821,552,2.821,553,4.893,554,2.821,555,2.395,556,2.349,557,2.141,558,2.103,559,2.066,560,2.349,561,2.349,562,2.349,563,2.262,564,2.262,565,3.489,566,2.103,567,2.066,568,4.893,569,4.49,570,5.057,571,4.64,572,4.49,573,3.72,574,4.64,575,3.72,576,4.64,577,3.853,578,3.853,579,3.853,3603,6.304,3604,6.304]],["title/interfaces/TheaterTopology.html",[389,1.486,449,2.427]],["body/interfaces/TheaterTopology.html",[0,0.665,3,0.051,4,0.045,5,0.051,9,1.126,11,0.888,14,0.069,15,0.201,18,0.095,19,0.006,20,0.417,24,0.354,34,0.102,37,0.522,38,0.685,39,1.319,44,0.904,46,1.848,53,0.009,54,0.009,55,0.009,56,0.009,139,2.441,148,0.339,154,1.928,179,1.736,196,2.735,254,2.666,263,3.703,320,1.199,321,2.718,323,1.592,345,2.425,346,2.492,347,1.822,348,2.185,354,1.365,357,0.819,360,1.874,363,2.814,364,2.373,365,2.303,366,2.814,367,2.303,368,2.589,369,2.303,370,3.439,371,2.492,372,3.439,373,2.492,374,3.439,375,2.492,376,3.085,377,2.362,378,3.459,379,2.247,380,2.505,381,1.459,382,2.038,383,2.147,384,1.843,385,1.874,386,2.185,387,2.194,388,2.362,389,2.505,390,2.07,391,3.61,392,3.145,393,3.145,394,3.145,395,4.501,396,4.315,397,1.383,398,2.814,399,2.307,400,3.161,401,3.329,402,2.441,403,3.421,404,3.421,405,2.538,406,2.307,407,3.421,408,1.383,409,3.161,410,3.361,411,2.492,412,1.537,413,1.056,414,2.05,415,2.492,416,2.492,417,2.194,418,2.492,419,2.492,420,1.65,421,2.492,422,2.247,423,2.096,424,2.096,425,1.621,426,2.05,427,2.492,428,1.537,429,2.492,430,2.194,431,3.161,432,2.425,433,2.194,434,1.342,435,1.592,436,3.085,437,4.204,438,2.303,439,2.303,440,3.329,441,4.288,442,4.309,443,3.836,444,3.421,445,3.906,446,3.801,447,3.361,448,2.303,449,4.288,450,2.05,451,0.917,452,2.425,453,2.247,454,2.303,675,2.589,718,2.917]],["title/classes/TheatreStatusDTO.html",[0,0.34,679,2.919]],["body/classes/TheatreStatusDTO.html",[0,0.679,2,0.411,3,0.066,4,0.058,5,0.066,14,0.09,15,0.24,18,0.124,19,0.006,20,0.449,21,0.169,24,0.237,34,0.102,49,1.74,53,0.011,54,0.011,55,0.011,56,0.011,94,0.881,148,0.653,309,2.869,320,1.567,350,1.442,351,1.908,357,0.817,360,1.784,384,1.755,385,1.784,499,1.005,502,3.239,508,2.281,509,2.281,510,2.281,511,2.281,512,2.281,513,2.281,514,2.281,515,2.281,516,2.281,518,1.814,529,1.941,541,2.325,546,2.37,566,2.081,567,2.045,671,4.775,672,4.124,678,4.775,679,5.213,680,3.96,681,4.124,682,3.96,683,4.124,684,4.124,685,4.124,686,4.958,687,4.124,688,4.124,689,2.417,690,4.124,691,4.775,692,4.124,693,3.96,694,3.96,695,3.96,696,4.124,697,4.124,698,3.96,699,3.814,700,3.96,3605,6.239,3606,6.239,3607,6.239]],["title/injectables/TokenService.html",[209,3.031,580,1.926]],["body/injectables/TokenService.html",[0,0.35,3,0.052,4,0.046,5,0.052,7,0.901,9,1.401,11,1.01,12,1.663,14,0.071,15,0.206,18,0.11,19,0.006,21,0.186,24,0.254,26,1.317,29,2.192,34,0.052,37,0.392,44,1.104,45,2.271,47,2.355,53,0.009,54,0.009,55,0.009,56,0.009,67,2.499,81,1.141,88,1.971,89,1.971,90,1.437,112,2.192,113,4.988,137,4.04,209,4.244,222,1.762,228,2.055,229,2.285,273,3.251,310,1.832,399,2.355,408,1.412,410,3.004,412,2.153,471,1.798,580,2.697,582,2.642,595,4.087,606,2.642,629,2.285,721,2.271,722,2.271,723,1.947,747,2.753,748,3.592,753,2.687,784,3.779,831,2.045,960,1.977,995,5.229,1045,4.984,1180,6.39,1229,4.513,1413,4.42,1417,2.873,1423,6.267,1486,7.611,1488,7.277,1584,6.699,1630,5.14,1764,4.244,1887,5.14,1897,5.968,2394,3.946,2451,5.494,3117,7.277,3406,5.968,3608,4.918,3609,6.687,3610,7.598,3611,9.286,3612,8.154,3613,8.154,3614,8.154,3615,6.687,3616,6.687,3617,6.687,3618,6.687,3619,4.918,3620,8.154,3621,8.797,3622,4.918,3623,8.154,3624,4.918,3625,6.687,3626,4.918,3627,6.687,3628,4.918,3629,6.687,3630,4.918,3631,4.918,3632,6.687,3633,6.687,3634,4.918,3635,7.598,3636,8.154,3637,4.918,3638,4.918,3639,4.918,3640,7.598,3641,4.918]],["title/classes/TopologyElement.html",[0,0.34,441,2.427]],["body/classes/TopologyElement.html",[0,0.665,2,0.316,3,0.051,4,0.045,5,0.051,9,1.128,11,0.889,14,0.069,15,0.202,18,0.095,19,0.006,20,0.417,21,0.13,24,0.354,34,0.102,37,0.381,38,0.687,39,1.322,44,0.905,46,1.854,53,0.009,54,0.009,55,0.009,56,0.009,139,2.446,148,0.34,154,1.931,179,1.738,196,2.739,254,2.669,263,3.708,320,1.202,321,2.72,323,1.597,345,2.432,346,2.499,347,1.802,348,2.19,354,1.369,357,0.82,360,1.877,363,2.82,364,2.376,365,2.31,366,2.82,367,2.31,368,2.594,369,2.31,370,3.445,371,2.499,372,3.445,373,2.499,374,3.445,375,2.499,376,3.091,377,2.369,378,3.464,379,2.254,380,2.508,381,1.464,382,2.042,383,2.151,384,1.847,385,1.877,386,2.19,387,2.201,388,2.369,389,2.508,390,2.073,391,3.615,392,3.15,393,3.15,394,3.15,395,4.504,396,4.319,397,1.386,398,2.82,399,2.312,400,3.168,401,3.335,402,2.446,403,3.428,404,3.428,405,2.543,406,2.312,407,3.428,408,1.386,409,3.168,410,3.366,411,2.499,412,1.541,413,1.059,414,2.056,415,2.499,416,2.499,417,2.201,418,2.499,419,2.499,420,1.655,421,2.499,422,2.254,423,2.102,424,2.102,425,1.625,426,2.056,427,2.499,428,1.541,429,2.499,430,2.201,431,3.168,432,2.432,433,2.201,434,1.346,435,1.597,436,3.091,437,4.109,438,2.31,439,2.31,440,3.335,441,4.292,442,4.211,443,3.749,444,3.428,445,3.912,446,3.807,447,3.366,448,2.31,449,4.096,450,2.056,451,0.919,452,2.432,453,2.254,454,2.31,675,1.891,3642,4.786,3643,4.786]],["title/interfaces/TopologyList.html",[389,1.486,440,2.427]],["body/interfaces/TopologyList.html",[0,0.665,3,0.051,4,0.045,5,0.051,9,1.129,11,0.889,14,0.069,15,0.202,18,0.095,19,0.006,20,0.417,24,0.354,34,0.102,38,0.688,39,1.323,44,0.906,46,1.856,53,0.009,54,0.009,55,0.009,56,0.009,90,1.242,139,2.447,148,0.34,154,1.931,179,2.025,196,2.74,254,2.669,263,3.71,320,1.203,321,2.721,323,1.598,345,2.434,346,2.502,347,1.802,348,2.191,354,1.37,357,0.82,360,1.879,363,2.822,364,2.376,365,2.312,366,2.822,367,2.312,368,2.596,369,2.312,370,3.446,371,2.502,372,3.446,373,2.502,374,3.446,375,2.502,376,3.093,377,2.371,378,3.465,379,2.256,380,2.509,381,1.465,382,2.044,383,2.153,384,1.848,385,1.879,386,2.191,387,2.203,388,2.371,389,2.509,390,2.074,391,3.617,392,3.152,393,3.152,394,3.152,395,4.669,396,4.32,397,1.387,398,2.822,399,2.313,400,3.17,401,3.338,402,2.447,403,3.43,404,3.43,405,2.545,406,2.313,407,3.43,408,1.387,409,3.17,410,3.368,411,2.502,412,1.543,413,1.06,414,2.058,415,2.502,416,2.502,417,2.203,418,2.502,419,2.502,420,1.657,421,2.502,422,2.256,423,2.104,424,2.104,425,1.627,426,2.058,427,2.502,428,1.543,429,2.502,430,2.203,431,3.17,432,2.434,433,2.203,434,1.348,435,1.598,436,3.093,437,3.979,438,2.312,439,2.312,440,3.809,441,4.435,442,3.892,443,3.465,444,3.43,445,3.914,446,3.809,447,3.368,448,2.312,449,4.098,450,2.058,451,0.92,452,2.434,453,2.256,454,2.312,718,2.928]],["title/classes/TypesCatalogueDTO.html",[0,0.34,481,2.052]],["body/classes/TypesCatalogueDTO.html",[0,0.697,2,0.294,3,0.047,4,0.042,5,0.047,13,1.102,14,0.065,15,0.192,18,0.113,19,0.006,20,0.451,21,0.155,24,0.274,34,0.104,37,0.713,38,1.123,39,0.898,49,1.719,53,0.008,54,0.008,55,0.008,56,0.008,94,1.163,148,0.677,157,0.719,330,1.514,347,0.87,348,1.487,349,1.958,350,1.482,351,2.392,357,0.876,360,2.064,380,1.387,381,2.207,382,2.245,383,2.365,384,1.254,385,1.787,386,2.085,451,1.386,455,1.674,459,2.003,466,2.628,467,2.628,468,2.003,469,2.795,470,1.916,471,1.63,472,2.003,473,2.003,474,2.003,475,2.003,476,1.487,477,1.916,478,2.003,479,1.958,480,1.487,481,3.538,482,3.242,483,3.242,484,2.207,485,2.685,486,2.003,487,2.808,488,2.003,489,2.003,490,3.849,491,1.6,492,2.685,493,2.003,494,2.003,495,2.003,496,2.003,497,2.003,498,2.003,499,1.26,500,2.003,501,2.685,502,1.694,503,2.628,504,2.003,505,2.745,506,2.003,507,2.003,508,1.63,509,1.63,510,1.63,511,1.63,512,1.63,513,1.63,514,1.63,515,1.63,516,1.63,517,1.958,518,1.817,519,1.958,520,1.958,521,1.958,522,1.958,523,1.958,524,1.958,525,1.958,526,1.035,527,1.57,528,1.958,529,1.944,530,2.003,531,1.068,532,2.003,533,2.52,534,1.175,535,1.661,536,1.341,537,1.411,538,1.694,539,2.745,540,1.63,541,1.661,542,2.003,543,1.875,544,1.958,545,2.003,546,1.694,675,1.762,3644,4.459,3645,4.459,3646,4.459,3647,4.459]],["title/components/UnderbarComponent.html",[57,0.977,189,1.887]],["body/components/UnderbarComponent.html",[0,0.339,3,0.05,4,0.044,5,0.05,7,0.872,14,0.069,18,0.108,19,0.006,21,0.159,24,0.248,26,1.274,27,2.086,31,4.592,32,2.333,33,1.843,34,0.05,37,0.379,38,0.939,39,1.317,41,2.893,44,1.048,45,2.22,48,3.075,49,1.412,52,1.707,53,0.009,54,0.009,55,0.009,56,0.009,57,1.337,58,1.959,59,1.843,60,2.044,61,2.044,62,2.044,64,2.044,65,4.304,66,4.069,68,2.749,70,2.749,81,1.733,88,1.234,89,1.234,90,0.9,112,2.143,126,3.288,141,2.044,142,2.809,143,1.506,144,2.044,145,2.378,146,2.044,147,1.919,148,0.655,149,2.09,150,1.919,151,3.28,152,2.001,153,1.959,154,1.926,155,2.09,156,1.959,157,1.438,158,2.09,159,1.959,160,2.09,161,2.09,162,1.88,163,2.09,164,1.919,165,2.09,166,1.88,167,1.919,168,2.09,169,1.88,170,1.88,171,2.09,172,2.09,173,1.959,174,2.09,175,1.88,176,1.959,177,2.09,178,2.001,179,1.866,180,2.001,181,2.871,182,2.001,183,2.001,184,1.88,185,1.88,186,2.09,187,1.88,188,1.88,189,3.442,190,2.09,191,1.919,192,2.09,193,2.09,194,2.09,222,1.723,228,1.493,229,1.431,310,1.773,316,2.001,399,2.832,431,3.155,526,1.866,557,2.22,629,1.966,723,1.78,747,2.692,753,1.839,755,2.22,770,1.616,784,3.455,788,4.322,831,1.455,851,5.371,1038,2.717,1068,5.834,1069,5.558,1075,3.733,1076,3.733,1088,4.937,1109,2.808,1126,6.181,1154,4.519,1213,3.155,1229,3.618,1317,4.749,1318,4.749,1389,3.733,1505,2.937,1750,4.749,1993,5.371,2000,5.371,2450,5.371,2628,7.177,3467,5.834,3648,4.758,3649,8.042,3650,6.538,3651,6.538,3652,7.469,3653,6.538,3654,6.538,3655,6.538,3656,6.538,3657,6.538,3658,6.181,3659,4.758,3660,6.538,3661,6.538,3662,6.538,3663,6.181,3664,4.758,3665,4.758,3666,4.758,3667,4.758,3668,4.758,3669,4.758,3670,6.538,3671,4.758,3672,4.758,3673,4.758,3674,4.758]],["title/classes/UnderbarElement.html",[0,0.34,3658,3.671]],["body/classes/UnderbarElement.html",[0,0.593,2,0.457,3,0.074,4,0.065,5,0.074,7,1.269,11,0.985,14,0.1,15,0.256,18,0.1,19,0.006,20,0.392,21,0.137,24,0.263,25,4.757,26,1.856,27,1.797,29,2.928,32,2.305,34,0.088,37,0.552,41,3.46,46,2.684,49,1.31,52,2.989,53,0.013,54,0.013,55,0.013,56,0.013,157,1.342,189,3.747,753,2.343,767,2.852,770,2.208,960,2.463,1042,3.618,1046,2.632,1063,5.287,2175,4.916,3658,6.403,3663,6.866,3675,6.183,3676,6.928,3677,6.183,3678,6.183,3679,6.183,3680,6.183]],["title/classes/UnderbarItem.html",[0,0.34,3663,3.671]],["body/classes/UnderbarItem.html",[0,0.578,2,0.438,3,0.07,4,0.062,5,0.07,7,1.217,11,0.967,14,0.096,15,0.25,18,0.132,19,0.006,20,0.4,21,0.181,24,0.252,25,5.008,26,1.779,27,2.106,29,2.875,32,1.838,34,0.086,37,0.728,41,2.573,46,3.146,49,1.658,52,3.362,53,0.012,54,0.012,55,0.012,56,0.012,90,1.728,157,1.07,189,3.611,675,2.625,753,1.869,767,3.343,770,2.168,960,1.964,1042,4.24,1046,3.085,1063,4.216,2175,5.531,3658,5.105,3663,6.742,3675,5.928,3677,7.247,3678,7.247,3679,5.928,3680,5.928,3681,6.642,3682,6.642,3683,6.642,3684,6.642]],["title/classes/VirtualMachine.html",[0,0.34,929,2.098]],["body/classes/VirtualMachine.html",[0,0.705,2,0.337,3,0.054,4,0.048,5,0.054,9,0.879,11,0.757,12,0.967,13,1.698,14,0.074,15,0.211,18,0.1,19,0.006,20,0.438,21,0.136,24,0.194,34,0.105,37,0.709,44,0.575,53,0.009,54,0.009,55,0.009,56,0.009,94,1.17,97,1.591,148,0.363,216,1.982,320,1.285,350,1.162,357,0.61,389,2.136,390,1.416,397,1.08,408,1.08,413,1.132,420,3.362,451,1.592,499,0.824,527,1.285,531,1.856,534,1.348,536,1.538,551,2.464,552,2.464,554,2.464,555,1.943,556,1.906,557,1.737,558,1.706,559,1.677,560,1.906,561,1.906,562,1.906,563,1.835,564,1.835,566,1.706,567,1.677,689,1.982,704,2.332,707,3.513,714,1.982,897,3.085,898,2.352,899,2.298,900,2.298,901,2.298,902,3.085,904,3.085,906,3.085,908,3.016,909,3.016,910,3.016,911,3.016,912,3.016,913,2.198,914,3.016,915,3.016,916,3.016,917,3.016,918,3.016,919,2.352,920,2.352,921,2.063,922,3.016,923,2.298,924,2.298,925,3.085,926,2.298,927,3.085,928,2.298,929,3.405,930,2.352,931,2.352,932,2.352,933,3.331,934,3.723,935,3.483,936,3.331,937,3.405,938,2.106,939,3.483,940,3.723,941,2.022,942,3.085,943,3.085,944,3.085,945,3.158,946,3.016,947,2.298,948,2.298,949,2.298,3685,5.116,3686,5.116]],["title/classes/VirtualMachinePorts.html",[0,0.34,937,2.098]],["body/classes/VirtualMachinePorts.html",[0,0.705,2,0.335,3,0.054,4,0.047,5,0.054,9,0.873,11,0.753,12,0.96,13,1.689,14,0.074,15,0.21,18,0.112,19,0.006,20,0.438,21,0.153,24,0.193,34,0.105,37,0.708,44,0.57,53,0.009,54,0.009,55,0.009,56,0.009,94,1.166,97,1.58,148,0.36,216,1.967,320,1.275,350,1.156,357,0.607,389,2.126,390,1.405,397,1.072,408,1.072,413,1.124,420,3.358,451,1.587,499,0.818,527,1.275,531,2.065,534,1.338,536,1.527,551,2.452,552,2.452,554,2.452,555,1.929,556,1.892,557,1.724,558,1.694,559,1.664,560,1.892,561,1.892,562,1.892,563,1.822,564,1.822,566,1.694,567,1.664,689,1.967,704,2.321,707,3.509,714,1.967,897,3.07,898,2.335,899,2.281,900,2.281,901,2.281,902,3.07,904,3.07,906,3.07,908,3.001,909,3.001,910,3.001,911,3.001,912,3.001,913,2.182,914,3.001,915,3.001,916,3.001,917,3.001,918,3.001,919,2.335,920,2.335,921,2.048,922,3.001,923,2.281,924,2.281,925,3.07,926,2.281,927,3.07,928,2.281,929,3.001,930,2.335,931,2.335,932,2.335,933,3.704,934,3.873,935,2.281,936,2.182,937,3.392,938,3.18,939,3.47,940,3.712,941,2.007,942,3.07,943,3.07,944,3.07,945,3.142,946,3.001,947,2.281,948,2.281,949,2.281,3687,5.078,3688,5.078,3689,5.078]],["title/classes/VirtualizationEnvironmentTypeDTO.html",[0,0.34,1934,3.671]],["body/classes/VirtualizationEnvironmentTypeDTO.html",[0,0.629,2,0.444,3,0.071,4,0.063,5,0.071,14,0.098,15,0.252,18,0.139,19,0.006,20,0.44,21,0.191,34,0.094,49,1.736,53,0.012,54,0.012,55,0.012,56,0.012,148,0.652,316,2.832,347,1.314,350,1.493,351,2.808,357,0.868,376,3.856,1923,4.274,1924,4.274,1925,4.274,1930,5.533,1934,6.783,1935,7.25,1936,7.25,1937,7.25,1938,4.655,1939,5.533,1940,5.533,3690,6.735,3691,6.735,3692,6.735,3693,6.735,3694,6.735,3695,6.735,3696,6.735]],["title/components/VisualizerComponent.html",[57,0.977,191,1.926]],["body/components/VisualizerComponent.html",[0,0.214,3,0.032,4,0.028,5,0.032,9,1.526,11,0.515,12,1.22,14,0.044,15,0.144,18,0.121,19,0.006,20,0.205,21,0.175,24,0.293,26,0.805,27,1.211,29,2.29,31,4.223,32,2.267,33,1.165,34,0.032,37,0.68,38,1.176,39,1.65,44,1.016,45,1.586,47,1.645,48,1.238,49,1.459,52,1.079,53,0.006,54,0.006,55,0.006,56,0.006,57,0.955,58,1.238,59,2.218,60,1.292,61,1.292,62,1.292,64,1.292,65,4.123,66,3.847,68,1.963,70,1.963,73,3.633,74,4.407,77,4.266,78,5.986,81,1.328,82,2.184,88,0.78,89,0.78,90,0.569,94,1.044,95,2.315,96,2.452,97,2.301,105,1.988,106,1.988,112,0.986,113,3.076,114,3.981,116,1.664,118,1.504,126,4.461,138,2.078,140,2.184,141,1.292,142,2.006,143,0.952,144,1.292,145,2.066,146,1.292,147,1.213,148,0.582,149,1.321,150,1.213,151,2.514,152,1.264,153,1.238,154,1.118,155,1.321,156,1.238,157,0.485,158,1.321,159,1.238,160,1.321,161,1.321,162,1.188,163,1.321,164,1.213,165,1.321,166,1.188,167,1.213,168,1.321,169,1.188,170,1.188,171,1.321,172,1.321,173,1.238,174,1.321,175,1.188,176,1.238,177,1.321,178,1.264,179,1.497,180,1.264,181,2.051,182,1.264,183,1.264,184,1.188,185,1.188,186,1.321,187,1.188,188,1.188,189,1.188,190,1.321,191,2.983,192,2.514,193,1.321,194,1.321,207,6.253,222,1.231,228,1.474,229,0.904,247,3.087,316,3.355,321,0.968,322,1.923,339,4.688,354,1.846,357,0.415,412,1.504,413,1.637,414,2.773,422,3.039,426,1.292,428,2.382,435,1.558,450,2.773,491,1.675,584,3.238,618,4.961,641,3.589,721,1.586,722,1.586,723,2.111,726,2.098,727,3.087,729,3.061,730,6.076,731,1.351,732,3.633,735,4.703,736,5.109,739,5.109,741,5.76,742,6.6,743,6.6,744,3.945,747,2.657,748,2.509,749,3.589,750,4.167,751,2.572,753,2.244,754,4.499,755,1.586,756,4.167,757,4.167,759,4.961,760,5.372,761,5.76,762,6.6,763,5.76,764,4.688,765,3.945,767,2.657,768,5.76,769,6.436,770,2.298,771,3.836,774,3.836,776,1.845,777,3.392,778,3.589,779,4.167,780,2.098,781,3.589,784,3.598,785,2.373,786,2.756,787,1.586,788,3.087,789,3.087,791,4.461,793,2.078,795,4.167,798,2.199,799,4.167,809,4.167,810,4.167,811,3.836,816,3.836,818,3.784,820,1.142,821,2.684,822,2.684,824,2.684,825,2.684,826,1.775,827,2.47,828,2.684,831,1.751,832,4.167,833,2.684,840,4.703,841,2.684,853,5.76,854,3.836,855,2.684,856,3.836,857,2.684,858,4.167,859,3.087,868,5.76,870,4.167,872,4.167,878,2.684,879,5.76,880,5.76,882,3.228,883,3.589,884,2.684,885,2.684,960,1.381,1224,4.461,1389,2.666,1390,4.688,2063,5.109,3697,8.967,3698,3.007,3699,5.725,3700,4.67,3701,4.67,3702,3.007,3703,3.007,3704,6.454,3705,3.007,3706,3.007,3707,3.007,3708,3.007,3709,3.007,3710,3.007,3711,3.007,3712,6.454,3713,6.454,3714,3.007,3715,3.007,3716,3.007,3717,3.007,3718,3.007,3719,3.007,3720,3.007,3721,3.007]],["title/classes/_Control.html",[0,0.34,980,2.427]],["body/classes/_Control.html",[0,0.517,2,0.367,3,0.059,4,0.052,5,0.059,7,1.019,11,0.613,12,1.373,14,0.081,15,0.223,18,0.134,19,0.006,20,0.389,21,0.184,24,0.306,26,1.49,27,1.883,32,1.54,34,0.077,37,0.683,44,0.625,53,0.01,54,0.01,55,0.01,56,0.01,57,1.818,68,2.339,70,2.339,73,5.639,81,1.291,88,2.096,89,2.096,90,1.528,94,0.785,97,1.731,134,4.276,152,3.053,157,1.432,179,1.684,222,1.913,228,1.658,229,2.183,244,2.113,245,2.198,246,2.155,321,1.792,347,1.417,354,2.076,357,0.824,364,2.563,425,1.889,434,1.565,484,2.22,595,3.401,643,5.874,667,2.465,675,2.198,723,1.607,731,2.499,744,3.401,747,2.29,785,3.689,830,4.608,849,2.685,957,4.965,958,4.965,959,5.57,960,1.645,961,4.571,962,4.965,963,4.965,964,4.965,965,5.58,966,6.479,967,3.689,973,6.142,974,7.212,975,4.965,976,5.58,977,6.479,978,5.58,979,6.479,980,3.689,981,7.212,982,4.895,983,4.965,984,7.037,985,4.965,986,4.965,987,4.965,988,4.965,989,4.965,990,6.479,991,4.965,992,4.965,993,5.964,994,6.479,995,4.614,996,4.965,1172,6.479,3722,7.26,3723,5.564,3724,7.26,3725,5.564,3726,7.26,3727,5.564,3728,5.564]],["title/dependencies.html",[197,4.422,3729,3.543]],["body/dependencies.html",[19,0.006,26,1.676,53,0.011,54,0.011,55,0.011,56,0.011,77,4.135,105,4.135,106,4.135,139,2.331,179,2.295,197,4.808,219,6.428,231,6.428,232,6.014,244,3.243,245,2.472,246,3.792,266,5.582,269,6.014,275,6.563,277,5.582,278,6.983,301,5.139,308,5.582,338,4.808,417,2.876,443,3.362,455,1.676,604,4.323,605,5.139,643,4.135,1506,3.36,3225,4.543,3226,4.543,3230,4.323,3232,4.323,3234,5.139,3238,4.543,3276,4.543,3730,6.255,3731,8.736,3732,6.255,3733,6.255,3734,6.255,3735,6.255,3736,6.255,3737,6.255,3738,6.255,3739,6.255,3740,6.255,3741,6.255,3742,6.255,3743,6.255,3744,6.255,3745,6.255,3746,6.255,3747,6.255,3748,6.255,3749,6.255,3750,6.255,3751,6.255,3752,6.255,3753,6.255,3754,6.255,3755,6.255,3756,6.255,3757,6.255,3758,6.255,3759,6.255,3760,6.255,3761,6.255,3762,7.825,3763,6.255,3764,6.255,3765,5.582,3766,6.255,3767,6.255,3768,6.255,3769,6.255,3770,6.255,3771,6.255,3772,5.582,3773,6.255,3774,6.255,3775,6.255,3776,6.255,3777,6.255,3778,6.255]],["title/miscellaneous/enumerations.html",[3779,3.543,3780,5.135]],["body/miscellaneous/enumerations.html",[0,0.548,9,1.168,11,1.057,12,1.652,14,0.048,15,0.155,18,0.116,19,0.006,38,0.976,39,1.369,44,0.566,45,1.711,53,0.006,54,0.006,55,0.006,56,0.006,157,0.812,179,1.577,196,2.671,247,3.33,251,3.33,254,1.541,354,2.355,364,1.657,402,1.877,410,1.491,412,1.622,413,1.822,425,1.711,428,1.622,430,2.316,435,2.031,526,1.169,531,1.972,551,1.807,552,1.807,553,2.876,554,1.807,558,1.68,608,2.107,665,2.788,700,2.107,704,2.715,723,2.038,727,3.33,729,1.213,751,2.263,770,1.245,785,2.56,787,2.308,800,2.411,802,3.651,818,3.33,826,6.041,830,4.638,882,2.294,908,2.212,909,2.212,910,2.212,911,2.212,912,2.212,938,1.366,960,2.494,976,5.913,997,4.76,1011,1.837,1025,1.837,1209,2.164,1325,8.098,1329,2.727,1331,1.959,1334,7.907,1354,2.727,1361,6.851,1362,3.872,1363,4.37,1364,2.727,1365,3.482,1366,4.139,1367,4.139,1368,2.727,1369,4.139,1372,2.727,1373,2.727,1374,3.482,1375,2.727,1376,2.727,1377,2.727,1378,2.727,1379,2.727,1380,2.727,1381,2.727,1382,1.959,1383,2.727,1384,4.139,1385,2.727,1386,2.551,1387,2.727,1388,2.727,1391,2.56,1392,4.564,1393,4.139,1394,4.139,1395,4.139,1396,4.139,1397,3.537,1398,2.63,1399,5.943,1402,5.943,1403,5.943,1404,6.482,1406,6.482,1407,6.482,1408,4.139,1409,2.727,1410,1.959,1411,5.002,1412,3.872,1413,3.33,1414,2.551,1415,2.551,1416,2.727,1417,2.164,1418,4.139,1419,4.139,1420,4.139,1421,3.872,1422,4.679,1423,3.872,1424,4.139,1425,4.679,1426,5.002,1427,5.002,1428,5.002,1429,5.002,1430,5.002,1431,5.002,1432,5.002,1433,4.139,1434,4.139,1436,2.727,1437,2.727,1438,2.727,1439,2.727,1440,5.002,1441,4.139,1442,4.139,1443,4.139,1444,4.139,1445,3.872,1446,2.727,1505,3.456,1506,2.706,1515,2.962,1516,4.496,1536,3.659,1537,4.139,1538,4.139,1539,3.197,1540,4.139,1542,4.496,1544,3.197,1552,2.962,1553,4.496,1567,4.496,1622,2.962,1623,2.962,1844,2.727,2148,3.659,2319,3.659,2321,3.659,2324,4.496,3559,4.496,3582,4.496,3780,2.962,3781,9.056,3782,7.693,3783,5.038,3784,8.433,3785,3.319,3786,7.693,3787,5.038,3788,5.038,3789,7.693,3790,3.319,3791,5.038,3792,3.319,3793,6.088,3794,6.088,3795,6.088,3796,5.038,3797,5.038,3798,3.319,3799,3.319,3800,3.319,3801,3.319,3802,3.319,3803,3.319,3804,3.319,3805,3.319,3806,5.038,3807,3.319,3808,3.319,3809,3.319,3810,3.319,3811,3.319,3812,3.319,3813,3.319,3814,3.319,3815,3.319,3816,3.319]],["title/miscellaneous/functions.html",[3779,3.543,3817,5.754]],["body/miscellaneous/functions.html",[9,0.728,11,1.004,12,1.527,14,0.061,18,0.141,19,0.006,20,0.387,32,1.942,37,0.48,38,1.097,39,1.214,44,0.991,45,3.05,53,0.008,54,0.008,55,0.008,56,0.008,88,2.434,89,2.434,90,1.775,118,2.703,148,0.543,196,1.549,228,2.196,254,2.567,268,4.952,269,3.256,270,5.379,354,2.007,363,2.59,364,2.351,366,2.59,368,2.382,370,1.948,372,1.948,374,1.948,378,2.59,384,1.696,399,2.471,400,3.386,406,2.956,408,1.772,409,3.386,413,1.787,414,3.284,425,2.383,434,2.43,435,2.011,436,3.953,447,3.152,450,3.284,480,2.8,531,1.014,642,2.419,675,2.382,704,1.439,712,4.365,721,2.851,722,2.851,723,2.128,729,3.403,753,2.66,754,4.107,755,2.851,760,3.077,788,3.984,789,4.638,798,3.953,960,1.253,1016,3.664,1046,3.189,1063,4.453,1182,4.051,1209,1.82,1213,2.044,1229,3.883,1389,4.007,1392,2.419,1397,3.971,1520,5.393,1521,5.393,1522,5.393,1530,2.8,1532,3.077,1534,3.077,1549,3.069,1554,5.393,1555,5.393,1556,5.393,1561,3.077,1563,3.077,1565,3.077,1844,3.48,2222,3.48,2236,4.51,2257,4.107,2276,4.51,2277,4.51,2278,4.51,2279,4.51,2344,3.48,2704,3.48,2860,4.633,2861,4.633,2862,4.633,2896,4.952,3299,3.48,3314,3.48,3318,3.48,3374,6.28,3818,7.644,3819,4.236,3820,4.236,3821,4.236,3822,4.236,3823,4.236,3824,4.236,3825,4.236,3826,6.028,3827,8.828,3828,6.028,3829,6.028,3830,6.028,3831,6.028,3832,6.028,3833,6.028,3834,6.028,3835,4.236,3836,4.236,3837,6.028,3838,4.236,3839,6.028,3840,4.236,3841,4.236,3842,4.236,3843,6.028,3844,4.236,3845,4.236,3846,4.236,3847,4.236,3848,4.236,3849,4.236,3850,4.236,3851,4.236,3852,4.236,3853,4.236,3854,4.236,3855,4.236]],["title/index.html",[873,3.543,1682,1.784,3856,3.971]],["body/index.html",[4,0.062,19,0.006,53,0.012,54,0.012,55,0.012,56,0.012,57,1.79,66,2.72,103,5.895,148,0.469,229,2.631,244,3.324,246,2.559,310,2.461,340,6.725,428,2.606,499,1.304,502,2.509,883,5.077,961,5.427,965,5.077,1038,3.772,1069,4.566,1180,4.798,1190,5.895,1382,3.899,1413,5.35,1549,2.959,1690,5.895,1750,4.798,2199,5.788,3230,4.566,3232,4.566,3252,4.798,3254,4.798,3731,5.895,3765,7.809,3772,5.895,3857,8.093,3858,6.606,3859,6.606,3860,6.606,3861,6.606,3862,6.606,3863,6.606,3864,6.606,3865,6.606,3866,6.606,3867,6.606,3868,6.606,3869,6.606,3870,9.358,3871,9.645,3872,6.606,3873,6.606,3874,6.606,3875,6.606,3876,6.606,3877,6.606,3878,6.606,3879,8.75,3880,6.606,3881,9.358,3882,6.606,3883,6.606,3884,6.606,3885,6.606,3886,6.606,3887,6.606,3888,6.606,3889,8.093,3890,8.093,3891,9.12,3892,6.606,3893,8.093,3894,8.093,3895,6.606,3896,6.606,3897,6.606,3898,6.606,3899,8.75,3900,6.606,3901,6.606]],["title/modules.html",[874,4.53]],["body/modules.html",[12,1.47,19,0.005,53,0.014,54,0.014,55,0.014,56,0.014,195,5.977,196,2.843,204,5.648,232,5.977,323,2.974,1842,6.939,2728,6.939,3902,7.776,3903,7.776,3904,8.915,3905,7.776]],["title/overview.html",[3906,6.555]],["body/overview.html",[2,0.37,19,0.006,33,3.603,53,0.01,54,0.01,55,0.01,56,0.01,58,3.883,59,2.175,150,3.467,153,3.83,156,3.342,159,3.342,162,3.208,164,3.274,166,3.208,167,3.274,169,3.208,170,3.208,173,3.83,175,3.208,176,3.83,178,3.413,180,3.413,182,3.413,183,3.413,184,3.208,185,3.208,187,3.208,188,3.208,189,3.208,191,3.467,195,7.937,196,2.053,197,5.614,198,5.011,199,5.011,200,5.011,201,5.011,202,5.011,203,5.011,204,5.896,205,7.244,206,5.152,207,5.611,208,5.366,209,5.152,210,5.011,211,4.613,212,5.011,582,3.017,667,1.907,718,3.432,1386,4.316,1544,3.564,2100,5.011,3907,5.615,3908,5.615,3909,5.615]],["title/properties.html",[451,1.105,3729,3.543]],["body/properties.html",[15,0.243,19,0.006,53,0.014,54,0.014,55,0.014,56,0.014,499,1.273,3910,7.903]],["title/classes/reteBasicModuleInfo.html",[0,0.34,2275,2.566]],["body/classes/reteBasicModuleInfo.html",[0,0.529,2,0.572,3,0.061,4,0.054,5,0.061,7,1.054,8,3.313,9,1.412,11,0.906,14,0.083,15,0.228,18,0.142,19,0.006,20,0.433,21,0.194,24,0.281,27,2.13,34,0.079,37,0.692,38,1.066,44,0.923,53,0.011,54,0.011,55,0.011,56,0.011,148,0.616,157,1.398,196,2.713,347,1.693,350,1.255,353,4.228,354,2.63,357,0.842,364,2.581,381,2.929,392,3.454,393,3.454,394,3.454,406,2.893,424,3.608,425,1.955,455,1.988,499,1.196,526,2.013,533,2.321,537,2.349,538,2.819,643,5.736,729,3.003,755,2.79,787,2.79,820,2.186,1391,3.771,1398,4.289,2273,3.518,2275,4.413,2833,6.748,3195,4.424,3196,4.424,3197,4.424,3198,4.424,3199,4.424,3200,4.424,3911,5.137,3912,5.756,3913,5.756,3914,5.756,3915,5.756,3916,5.756,3917,5.756,3918,5.756,3919,5.137,3920,5.137]],["title/classes/reteBasicNodeInfo.html",[0,0.34,2273,2.919]],["body/classes/reteBasicNodeInfo.html",[0,0.568,2,0.596,3,0.068,4,0.06,5,0.068,7,1.181,8,3.491,9,1.488,11,0.954,14,0.093,15,0.245,18,0.131,19,0.006,20,0.428,21,0.179,24,0.302,27,2.245,34,0.085,37,0.721,44,0.972,53,0.012,54,0.012,55,0.012,56,0.012,148,0.642,157,1.457,196,2.357,347,1.689,357,0.768,364,2.53,381,2.438,392,2.711,393,2.711,394,2.711,406,3.048,424,3.802,425,2.708,526,2.098,643,5.978,729,3.164,755,2.94,787,2.94,820,2.449,1391,4.398,1398,4.163,2273,4.873,2275,4.283,2833,7.111,3911,5.754,3919,5.754,3920,5.754,3921,6.447,3922,6.447,3923,6.447,3924,6.447]],["title/routes.html",[334,5.385]],["body/routes.html",[19,0.006,53,0.015,54,0.015,55,0.015,56,0.015,334,6.525]]],"invertedIndex":[["",{"_index":19,"title":{},"body":{"classes/Aoption.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"injectables/AttachmentsService.html":{},"injectables/AuthGuard.html":{},"classes/BlueprintFileDTO.html":{},"classes/BorderNetworkDTO.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"components/ControlTemplate.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputReturnedV2.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/DeployInstanceDTO.html":{},"components/DocsComponent.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"classes/FlavorApplication.html":{},"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"injectables/FlavorService.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"classes/HostModuleDTO.html":{},"classes/HostNode.html":{},"classes/HostPortModuleDTO.html":{},"components/HowToUseComponent.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModalButton.html":{},"components/ModalComponent.html":{},"classes/ModalItem.html":{},"injectables/ModalService.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"injectables/ModuleService.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"interfaces/ModuleTopology.html":{},"classes/NameMappingDTO.html":{},"components/NavbarComponent.html":{},"classes/NavbarElement.html":{},"components/NavbarElementComponent.html":{},"classes/NavbarItem.html":{},"classes/NetOSRouterDTO.html":{},"components/NetworkComponent.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkDTO.html":{},"classes/NetworkNode.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/NodeTopologyElement.html":{},"components/OffcanvasComponent.html":{},"classes/PageableDTO.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SelectOption.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/SingleDataInputReturned.html":{},"classes/SortDTO.html":{},"classes/SourceExport.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"classes/StatisticItemDTO.html":{},"injectables/StorageService.html":{},"components/SubnetComponent.html":{},"classes/SubnetDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"components/TabnavComponent.html":{},"classes/TabnavElement.html":{},"classes/TabnavItem.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"injectables/TheaterService.html":{},"classes/TheaterSimpleData.html":{},"interfaces/TheaterTopology.html":{},"classes/TheatreStatusDTO.html":{},"injectables/TokenService.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/TypesCatalogueDTO.html":{},"components/UnderbarComponent.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{},"routes.html":{}}}],["0",{"_index":667,"title":{},"body":{"injectables/AuthGuard.html":{},"components/ControlTemplate.html":{},"components/DataInputV2Component.html":{},"components/DocsComponent.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/HostNode.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"components/ModalComponent.html":{},"injectables/ModuleService.html":{},"components/NavbarElementComponent.html":{},"classes/NetworkNode.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SubnetNode.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/_Control.html":{},"overview.html":{}}}],["0!important",{"_index":1279,"title":{},"body":{"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{}}}],["0.1",{"_index":3269,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["0.2.0",{"_index":3760,"title":{},"body":{"dependencies.html":{}}}],["0.2.1",{"_index":3762,"title":{},"body":{"dependencies.html":{}}}],["0.2.2",{"_index":3771,"title":{},"body":{"dependencies.html":{}}}],["0.2s",{"_index":2128,"title":{},"body":{"components/HomeComponent.html":{},"components/NavbarElementComponent.html":{}}}],["0.3.0",{"_index":3772,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["0.3.1",{"_index":3768,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":3773,"title":{},"body":{"dependencies.html":{}}}],["0.5.0",{"_index":3763,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":3770,"title":{},"body":{"dependencies.html":{}}}],["0.6.1",{"_index":3766,"title":{},"body":{"dependencies.html":{}}}],["0.6s",{"_index":2671,"title":{},"body":{"components/NavbarElementComponent.html":{}}}],["0.7",{"_index":2101,"title":{},"body":{"components/HomeComponent.html":{}}}],["0.8.3",{"_index":3769,"title":{},"body":{"dependencies.html":{}}}],["0.9.1",{"_index":3778,"title":{},"body":{"dependencies.html":{}}}],["0.9em",{"_index":1352,"title":{},"body":{"components/DataItemComponent.html":{}}}],["000000",{"_index":2141,"title":{},"body":{"components/HomeComponent.html":{}}}],["0000005e",{"_index":2059,"title":{},"body":{"components/HomeComponent.html":{},"injectables/ModalService.html":{}}}],["05",{"_index":2119,"title":{},"body":{"components/HomeComponent.html":{}}}],["0d6fd0",{"_index":2118,"title":{},"body":{"components/HomeComponent.html":{}}}],["0f131a",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["0px",{"_index":2139,"title":{},"body":{"components/HomeComponent.html":{}}}],["1",{"_index":1505,"title":{},"body":{"components/DocsComponent.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"injectables/ModuleService.html":{},"components/NetworkComponent.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"miscellaneous/enumerations.html":{}}}],["1.0",{"_index":932,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["1.0.0",{"_index":3910,"title":{},"body":{"properties.html":{}}}],["1.0.1",{"_index":3754,"title":{},"body":{"dependencies.html":{}}}],["1.1.19",{"_index":3736,"title":{},"body":{"dependencies.html":{}}}],["1.14.0",{"_index":3756,"title":{},"body":{"dependencies.html":{}}}],["1.2.2",{"_index":3747,"title":{},"body":{"dependencies.html":{}}}],["1.2em",{"_index":2123,"title":{},"body":{"components/HomeComponent.html":{}}}],["1.4.1",{"_index":3759,"title":{},"body":{"dependencies.html":{}}}],["1.5em",{"_index":2781,"title":{},"body":{"components/OffcanvasComponent.html":{},"components/TabnavComponent.html":{}}}],["1.8.1",{"_index":3744,"title":{},"body":{"dependencies.html":{}}}],["1.9.0",{"_index":3776,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":1498,"title":{},"body":{"components/DocsComponent.html":{},"components/HomeComponent.html":{},"components/NavbarElementComponent.html":{},"components/OffcanvasComponent.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"components/TabnavComponent.html":{}}}],["10em",{"_index":3477,"title":{},"body":{"components/TabnavComponent.html":{}}}],["10px",{"_index":2186,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["11.0.2",{"_index":3750,"title":{},"body":{"dependencies.html":{}}}],["110",{"_index":1008,"title":{},"body":{"components/ControlTemplate.html":{}}}],["12",{"_index":3908,"title":{},"body":{"overview.html":{}}}],["12.0.1",{"_index":3751,"title":{},"body":{"dependencies.html":{}}}],["12.16.1",{"_index":3860,"title":{},"body":{"index.html":{}}}],["12.20",{"_index":3862,"title":{},"body":{"index.html":{}}}],["124",{"_index":3909,"title":{},"body":{"overview.html":{}}}],["140px",{"_index":1010,"title":{},"body":{"components/ControlTemplate.html":{}}}],["1459",{"_index":3719,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["14px",{"_index":2206,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["150",{"_index":2132,"title":{},"body":{"components/HomeComponent.html":{}}}],["16",{"_index":1388,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"miscellaneous/enumerations.html":{}}}],["18px",{"_index":2196,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["19",{"_index":2099,"title":{},"body":{"components/HomeComponent.html":{}}}],["1em",{"_index":1341,"title":{},"body":{"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/TabnavComponent.html":{}}}],["1px",{"_index":1004,"title":{},"body":{"components/ControlTemplate.html":{},"components/DocsComponent.html":{}}}],["1px!important",{"_index":1344,"title":{},"body":{"components/DataItemComponent.html":{}}}],["1rem",{"_index":2786,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["2",{"_index":1544,"title":{},"body":{"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"components/HomeComponent.html":{},"injectables/ModalService.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["2*$socket",{"_index":2211,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["2.0.1",{"_index":3741,"title":{},"body":{"dependencies.html":{}}}],["2.10.2",{"_index":3738,"title":{},"body":{"dependencies.html":{}}}],["2.7vw",{"_index":2121,"title":{},"body":{"components/HomeComponent.html":{}}}],["200",{"_index":3295,"title":{},"body":{"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["26",{"_index":2100,"title":{},"body":{"components/HomeComponent.html":{},"overview.html":{}}}],["2a2f34",{"_index":2773,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["2em",{"_index":3476,"title":{},"body":{"components/TabnavComponent.html":{}}}],["2px",{"_index":1002,"title":{},"body":{"components/ControlTemplate.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["3",{"_index":1734,"title":{},"body":{"classes/ExportModule.html":{},"classes/ExportTheater.html":{}}}],["3.6.0",{"_index":3746,"title":{},"body":{"dependencies.html":{}}}],["30px",{"_index":999,"title":{},"body":{"components/ControlTemplate.html":{}}}],["39",{"_index":2666,"title":{},"body":{"components/NavbarElementComponent.html":{}}}],["39px",{"_index":2140,"title":{},"body":{"components/HomeComponent.html":{}}}],["4",{"_index":1386,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["400",{"_index":3277,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["4000",{"_index":3273,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["5.1.3",{"_index":3742,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":2667,"title":{},"body":{"components/NavbarElementComponent.html":{},"components/OffcanvasComponent.html":{}}}],["5000",{"_index":3272,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["502",{"_index":3721,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["5rem",{"_index":2785,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["6.10.3",{"_index":3758,"title":{},"body":{"dependencies.html":{}}}],["6.12.6",{"_index":3740,"title":{},"body":{"dependencies.html":{}}}],["6.4.0",{"_index":3774,"title":{},"body":{"dependencies.html":{}}}],["626a71",{"_index":1340,"title":{},"body":{"components/DataItemComponent.html":{}}}],["64",{"_index":3275,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["6px",{"_index":1003,"title":{},"body":{"components/ControlTemplate.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["8",{"_index":1824,"title":{},"body":{"injectables/ExportService.html":{},"injectables/FileService.html":{}}}],["8.0.1",{"_index":3748,"title":{},"body":{"dependencies.html":{}}}],["8px",{"_index":2197,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["9.0.1",{"_index":3752,"title":{},"body":{"dependencies.html":{}}}],["9.1.12",{"_index":3731,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["9.2.0",{"_index":3753,"title":{},"body":{"dependencies.html":{}}}],["93a1ba",{"_index":2779,"title":{},"body":{"components/OffcanvasComponent.html":{},"components/TabnavComponent.html":{}}}],["99",{"_index":2783,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["999",{"_index":1006,"title":{},"body":{"components/ControlTemplate.html":{}}}],["_control",{"_index":980,"title":{"classes/_Control.html":{}},"body":{"components/ControlTemplate.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/_Control.html":{}}}],["_data",{"_index":3403,"title":{},"body":{"injectables/StorageService.html":{}}}],["_show",{"_index":2374,"title":{},"body":{"components/ModalComponent.html":{},"components/OffcanvasComponent.html":{}}}],["_socket",{"_index":2269,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["_value",{"_index":1163,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["a.area",{"_index":1879,"title":{},"body":{"classes/ExportTheater.html":{}}}],["a.classlist.add('d",{"_index":623,"title":{},"body":{"injectables/AttachmentsService.html":{},"injectables/ExportService.html":{}}}],["a.click",{"_index":626,"title":{},"body":{"injectables/AttachmentsService.html":{},"injectables/ExportService.html":{}}}],["a.description",{"_index":1880,"title":{},"body":{"classes/ExportTheater.html":{}}}],["a.download",{"_index":1826,"title":{},"body":{"injectables/ExportService.html":{}}}],["a.href",{"_index":625,"title":{},"body":{"injectables/AttachmentsService.html":{},"injectables/ExportService.html":{}}}],["a.remove",{"_index":628,"title":{},"body":{"injectables/AttachmentsService.html":{},"injectables/ExportService.html":{}}}],["a_element",{"_index":2644,"title":{},"body":{"components/NavbarComponent.html":{}}}],["a_element.setattribute(opt.attr_key",{"_index":2649,"title":{},"body":{"components/NavbarComponent.html":{}}}],["a_option",{"_index":51,"title":{},"body":{"classes/Aoption.html":{},"classes/NavbarElement.html":{},"classes/NavbarItem.html":{}}}],["access",{"_index":663,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["accessori",{"_index":1174,"title":{},"body":{"components/DataInputV2Component.html":{},"components/ModalComponent.html":{},"components/OffcanvasComponent.html":{},"injectables/StorageService.html":{}}}],["accordion",{"_index":1284,"title":{},"body":{"components/DataItemComponent.html":{}}}],["activatedroutesnapshot",{"_index":637,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["activates",{"_index":2179,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["active",{"_index":735,"title":{},"body":{"components/ComposerComponent.html":{},"components/TabnavComponent.html":{},"components/VisualizerComponent.html":{}}}],["active(val",{"_index":3464,"title":{},"body":{"components/TabnavComponent.html":{}}}],["activetab",{"_index":3456,"title":{},"body":{"components/TabnavComponent.html":{}}}],["actual_component",{"_index":194,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["ad",{"_index":1750,"title":{},"body":{"classes/ExportModule.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"components/UnderbarComponent.html":{},"index.html":{}}}],["adattabile",{"_index":1594,"title":{},"body":{"classes/ExportModule.html":{},"classes/ExportTheater.html":{}}}],["adatto",{"_index":2891,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["add",{"_index":2997,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["additional",{"_index":662,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["adeguate",{"_index":779,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["adeguato",{"_index":1230,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["afterviewinit",{"_index":2623,"title":{},"body":{"components/NavbarComponent.html":{}}}],["aggiornamento",{"_index":1250,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["aggiornare",{"_index":1252,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["aggiungere",{"_index":3864,"title":{},"body":{"index.html":{}}}],["aggiunta",{"_index":3863,"title":{},"body":{"index.html":{}}}],["aggiuntiva",{"_index":1799,"title":{},"body":{"injectables/ExportService.html":{}}}],["aggiunto",{"_index":2006,"title":{},"body":{"components/HomeComponent.html":{}}}],["ai",{"_index":728,"title":{},"body":{"components/ComposerComponent.html":{}}}],["ajv",{"_index":3739,"title":{},"body":{"dependencies.html":{}}}],["al",{"_index":412,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"classes/FlavorApplication.html":{},"components/HomeComponent.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/ReteConnection.html":{},"classes/SelectOption.html":{},"classes/SimpleModuleApplication.html":{},"classes/SingleDataInputReturned.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"injectables/TokenService.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"components/VisualizerComponent.html":{},"miscellaneous/enumerations.html":{}}}],["alert(e",{"_index":2075,"title":{},"body":{"components/HomeComponent.html":{}}}],["align",{"_index":2198,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["all'ambiente",{"_index":3206,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["all'app",{"_index":1890,"title":{},"body":{"injectables/FileService.html":{}}}],["all'applacazione",{"_index":3021,"title":{},"body":{"injectables/ParseService.html":{}}}],["all'applicazione",{"_index":2892,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["all'elemento",{"_index":1197,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["all'export",{"_index":1595,"title":{},"body":{"classes/ExportModule.html":{},"classes/ExportTheater.html":{}}}],["all'inizializzazione",{"_index":777,"title":{},"body":{"components/ComposerComponent.html":{},"components/DataInputV2Component.html":{},"components/DocsComponent.html":{},"components/TabnavComponent.html":{},"components/VisualizerComponent.html":{}}}],["all'interno",{"_index":1612,"title":{},"body":{"classes/ExportModule.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["all'oggetto",{"_index":2832,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["all'utente",{"_index":1967,"title":{},"body":{"components/HomeComponent.html":{}}}],["alla",{"_index":31,"title":{},"body":{"classes/Aoption.html":{},"components/ComposerComponent.html":{},"classes/DataInputElement.html":{},"components/DataInputV2Component.html":{},"classes/ExportModule.html":{},"classes/ModalButton.html":{},"classes/ModalItem.html":{},"classes/NavbarElement.html":{},"classes/NavbarItem.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["alle",{"_index":1599,"title":{},"body":{"classes/ExportModule.html":{},"classes/ExportTheater.html":{}}}],["allo",{"_index":1839,"title":{},"body":{"classes/ExportTheater.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{}}}],["allocate(component",{"_index":3262,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["allocationpool",{"_index":713,"title":{},"body":{"classes/BorderNetworkDTO.html":{},"classes/NetOSRouterDTO.html":{},"classes/NetworkDTO.html":{},"classes/SubnetDTO.html":{}}}],["allow",{"_index":660,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["alt_title",{"_index":2740,"title":{},"body":{"components/OffcanvasComponent.html":{},"components/TabnavComponent.html":{}}}],["alternativo",{"_index":2746,"title":{},"body":{"components/OffcanvasComponent.html":{},"components/TabnavComponent.html":{}}}],["altra",{"_index":1436,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"miscellaneous/enumerations.html":{}}}],["altri",{"_index":1438,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"miscellaneous/enumerations.html":{}}}],["ambo",{"_index":1702,"title":{},"body":{"classes/ExportModule.html":{}}}],["anche",{"_index":767,"title":{},"body":{"components/ComposerComponent.html":{},"injectables/FileService.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModalButton.html":{},"components/ModalComponent.html":{},"classes/ModalItem.html":{},"classes/NetworkNode.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{},"components/VisualizerComponent.html":{}}}],["anchor_parameters",{"_index":493,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["angular",{"_index":244,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthGuard.html":{},"components/ControlTemplate.html":{},"components/HostComponent.html":{},"classes/HostNode.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"components/NetworkComponent.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"components/SubnetComponent.html":{},"classes/SubnetNode.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/_Control.html":{},"dependencies.html":{},"index.html":{}}}],["angular/animations",{"_index":3730,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":266,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":273,"title":{},"body":{"modules/AppModule.html":{},"injectables/AttachmentsService.html":{},"components/DocsComponent.html":{},"injectables/FlavorService.html":{},"injectables/ModuleService.html":{},"injectables/TheaterService.html":{},"injectables/TokenService.html":{}}}],["angular/compiler",{"_index":3732,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":26,"title":{},"body":{"classes/Aoption.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AttachmentsService.html":{},"injectables/AuthGuard.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"injectables/ExportService.html":{},"injectables/FileService.html":{},"injectables/FlavorService.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/ModalButton.html":{},"components/ModalComponent.html":{},"classes/ModalItem.html":{},"injectables/ModalService.html":{},"injectables/ModuleService.html":{},"components/NavbarComponent.html":{},"classes/NavbarElement.html":{},"components/NavbarElementComponent.html":{},"classes/NavbarItem.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"injectables/ParseService.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"injectables/StorageService.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"classes/TabnavElement.html":{},"classes/TabnavItem.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"injectables/TheaterService.html":{},"injectables/TokenService.html":{},"components/UnderbarComponent.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{},"dependencies.html":{}}}],["angular/elements",{"_index":3733,"title":{},"body":{"dependencies.html":{}}}],["angular/forms",{"_index":301,"title":{},"body":{"modules/AppModule.html":{},"components/DataInputComponent.html":{},"dependencies.html":{}}}],["angular/localize",{"_index":3734,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":231,"title":{},"body":{"modules/AppModule.html":{},"components/DocsComponent.html":{},"dependencies.html":{}}}],["angular/router",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"components/ComposerComponent.html":{},"components/HomeComponent.html":{},"components/VisualizerComponent.html":{},"dependencies.html":{}}}],["angularcomponent",{"_index":2223,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["angularcomponentdata",{"_index":2231,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["angularcontrol",{"_index":974,"title":{},"body":{"components/ControlTemplate.html":{},"classes/_Control.html":{}}}],["angularrenderplugin",{"_index":3227,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["animation",{"_index":2129,"title":{},"body":{"components/HomeComponent.html":{},"components/NavbarElementComponent.html":{}}}],["annessa",{"_index":3133,"title":{},"body":{"classes/PerseDataForTheaterComposer.html":{}}}],["annullare",{"_index":1092,"title":{},"body":{"components/DataInputComponent.html":{}}}],["aoption",{"_index":1,"title":{"classes/Aoption.html":{}},"body":{"classes/Aoption.html":{},"classes/NavbarElement.html":{},"classes/NavbarItem.html":{}}}],["aperto",{"_index":1309,"title":{},"body":{"components/DataItemComponent.html":{}}}],["api",{"_index":1423,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"injectables/TokenService.html":{},"miscellaneous/enumerations.html":{}}}],["api/flavor.service",{"_index":3042,"title":{},"body":{"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{}}}],["api/module.service",{"_index":2894,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["api/theater.service",{"_index":2893,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{}}}],["app",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"index.html":{}}}],["app.component",{"_index":237,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":71,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.sass",{"_index":69,"title":{},"body":{"components/AppComponent.html":{}}}],["app_initializer",{"_index":233,"title":{},"body":{"modules/AppModule.html":{}}}],["appartenenti",{"_index":2876,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["appcomponent",{"_index":58,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"overview.html":{}}}],["appena",{"_index":1993,"title":{},"body":{"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"components/UnderbarComponent.html":{}}}],["application",{"_index":1780,"title":{},"body":{"injectables/ExportService.html":{}}}],["application/json",{"_index":3637,"title":{},"body":{"injectables/TokenService.html":{}}}],["application/json;charset=utf",{"_index":1823,"title":{},"body":{"injectables/ExportService.html":{}}}],["application/zip",{"_index":617,"title":{},"body":{"injectables/AttachmentsService.html":{}}}],["applicationref",{"_index":225,"title":{},"body":{"modules/AppModule.html":{}}}],["appmodule",{"_index":195,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appoggio",{"_index":1234,"title":{},"body":{"components/DataInputV2Component.html":{},"components/ModalComponent.html":{},"components/OffcanvasComponent.html":{}}}],["apposita",{"_index":1439,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"miscellaneous/enumerations.html":{}}}],["appref",{"_index":227,"title":{},"body":{"modules/AppModule.html":{}}}],["appref.bootstrap(appcomponent",{"_index":326,"title":{},"body":{"modules/AppModule.html":{}}}],["approutingmodule",{"_index":204,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["apptype",{"_index":444,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["area",{"_index":455,"title":{},"body":{"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"components/DataInputV2Component.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/ExportTheater.html":{},"classes/GenericParameterDTO.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesTSD.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/SourceExport.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/TheaterSimpleData.html":{},"classes/TypesCatalogueDTO.html":{},"dependencies.html":{},"classes/reteBasicModuleInfo.html":{}}}],["areaapplication",{"_index":345,"title":{"classes/AreaApplication.html":{}},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["areacolordto",{"_index":452,"title":{"classes/AreaColorDTO.html":{}},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["areadto",{"_index":348,"title":{"classes/AreaDTO.html":{}},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"interfaces/CommonModule.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/FlavorApplication.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterApplication.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/TypesCatalogueDTO.html":{}}}],["areadto:135",{"_index":358,"title":{},"body":{"classes/AreaApplication.html":{}}}],["areadto:136",{"_index":362,"title":{},"body":{"classes/AreaApplication.html":{}}}],["areadto:137",{"_index":359,"title":{},"body":{"classes/AreaApplication.html":{}}}],["areadto:138",{"_index":356,"title":{},"body":{"classes/AreaApplication.html":{}}}],["areadto:139",{"_index":361,"title":{},"body":{"classes/AreaApplication.html":{}}}],["areadto:140",{"_index":355,"title":{},"body":{"classes/AreaApplication.html":{}}}],["areaexport",{"_index":547,"title":{"classes/AreaExport.html":{}},"body":{"classes/AreaExport.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesTSD.html":{},"classes/SourceExport.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{}}}],["areaplugin",{"_index":3228,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["areaplugin.zoomat(this.editor",{"_index":3257,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["areas",{"_index":540,"title":{},"body":{"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/ExportTheater.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesTSD.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/SourceExport.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheaterSimpleData.html":{},"classes/TypesCatalogueDTO.html":{}}}],["aree",{"_index":1847,"title":{},"body":{"classes/ExportTheater.html":{}}}],["arrange",{"_index":3232,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"dependencies.html":{},"index.html":{}}}],["array",{"_index":665,"title":{},"body":{"injectables/AuthGuard.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{},"miscellaneous/enumerations.html":{}}}],["arraybuffer",{"_index":613,"title":{},"body":{"injectables/AttachmentsService.html":{}}}],["arricchisce",{"_index":2844,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["arrow",{"_index":1329,"title":{},"body":{"components/DataItemComponent.html":{},"components/OffcanvasComponent.html":{},"miscellaneous/enumerations.html":{}}}],["artifacts",{"_index":3882,"title":{},"body":{"index.html":{}}}],["assegna",{"_index":1517,"title":{},"body":{"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["assegnando",{"_index":1598,"title":{},"body":{"classes/ExportModule.html":{},"classes/ExportTheater.html":{}}}],["assegnare",{"_index":1195,"title":{},"body":{"components/DataInputV2Component.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{}}}],["assegnazioni",{"_index":3841,"title":{},"body":{"miscellaneous/functions.html":{}}}],["assign",{"_index":2167,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["associato",{"_index":3376,"title":{},"body":{"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{}}}],["associazioni",{"_index":1845,"title":{},"body":{"classes/ExportTheater.html":{}}}],["astratta",{"_index":1289,"title":{},"body":{"components/DataItemComponent.html":{}}}],["async",{"_index":584,"title":{},"body":{"injectables/AttachmentsService.html":{},"injectables/AuthGuard.html":{},"components/ComposerComponent.html":{},"injectables/FileService.html":{},"injectables/FlavorService.html":{},"components/HomeComponent.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"injectables/ModuleService.html":{},"classes/NetworkNode.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"injectables/TheaterService.html":{},"components/VisualizerComponent.html":{}}}],["attachments",{"_index":517,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["attachments_uuid",{"_index":592,"title":{},"body":{"injectables/AttachmentsService.html":{}}}],["attachmentsservice",{"_index":581,"title":{"injectables/AttachmentsService.html":{}},"body":{"injectables/AttachmentsService.html":{}}}],["attenzione",{"_index":1447,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"injectables/ModalService.html":{}}}],["attiva",{"_index":3468,"title":{},"body":{"components/TabnavComponent.html":{}}}],["attivata",{"_index":2427,"title":{},"body":{"injectables/ModalService.html":{}}}],["attivit",{"_index":768,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["attr_key",{"_index":16,"title":{},"body":{"classes/Aoption.html":{},"classes/NavbarElement.html":{},"classes/NavbarItem.html":{}}}],["attr_val",{"_index":17,"title":{},"body":{"classes/Aoption.html":{},"classes/NavbarElement.html":{},"classes/NavbarItem.html":{}}}],["attraverso",{"_index":1070,"title":{},"body":{"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"injectables/ModalService.html":{},"injectables/StorageService.html":{}}}],["attributi",{"_index":400,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"miscellaneous/functions.html":{}}}],["attributo",{"_index":1219,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["attrubuti",{"_index":2640,"title":{},"body":{"components/NavbarComponent.html":{}}}],["attuale",{"_index":1205,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["attualmente",{"_index":1072,"title":{},"body":{"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{}}}],["authguard",{"_index":335,"title":{"injectables/AuthGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{}}}],["author",{"_index":518,"title":{},"body":{"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"classes/BlueprintFileDTO.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/DeployInstanceDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/ExportTheater.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/NameMappingDTO.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesTSD.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/SourceExport.html":{},"classes/StatisticItemDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheaterSimpleData.html":{},"classes/TheatreStatusDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["authorization",{"_index":3638,"title":{},"body":{"injectables/TokenService.html":{}}}],["auto",{"_index":1506,"title":{},"body":{"components/DocsComponent.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{}}}],["autoarrangeplugin",{"_index":3231,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["automatic",{"_index":1416,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"miscellaneous/enumerations.html":{}}}],["automatic_system",{"_index":1444,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"miscellaneous/enumerations.html":{}}}],["automatically",{"_index":3875,"title":{},"body":{"index.html":{}}}],["automatico",{"_index":1067,"title":{},"body":{"components/DataInputComponent.html":{},"injectables/ModalService.html":{}}}],["automaticsystem",{"_index":1407,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/EmptyModuleInfo.html":{},"miscellaneous/enumerations.html":{}}}],["available",{"_index":2483,"title":{},"body":{"injectables/ModalService.html":{}}}],["aver",{"_index":2005,"title":{},"body":{"components/HomeComponent.html":{}}}],["avvale",{"_index":2886,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["avviene",{"_index":2256,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"injectables/ModalService.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["await",{"_index":651,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/FlavorService.html":{},"components/HomeComponent.html":{},"injectables/ModuleService.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"injectables/TheaterService.html":{}}}],["b3b3b3",{"_index":2775,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["background",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"components/ControlTemplate.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["backgroundcolor",{"_index":2058,"title":{},"body":{"components/HomeComponent.html":{},"classes/ModalButton.html":{},"classes/ModalItem.html":{},"injectables/ModalService.html":{}}}],["bar",{"_index":1343,"title":{},"body":{"components/DataItemComponent.html":{}}}],["base",{"_index":727,"title":{},"body":{"components/ComposerComponent.html":{},"components/DataInputV2Component.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/ExportModule.html":{},"components/VisualizerComponent.html":{},"miscellaneous/enumerations.html":{}}}],["base/area",{"_index":1030,"title":{},"body":{"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{}}}],["basis",{"_index":1509,"title":{},"body":{"components/DocsComponent.html":{}}}],["bearer",{"_index":3639,"title":{},"body":{"injectables/TokenService.html":{}}}],["behaviorsubject",{"_index":2459,"title":{},"body":{"injectables/ModalService.html":{}}}],["behaviorsubject(false",{"_index":2462,"title":{},"body":{"injectables/ModalService.html":{}}}],["behaviorsubject(modalitem",{"_index":2460,"title":{},"body":{"injectables/ModalService.html":{}}}],["bg",{"_index":2095,"title":{},"body":{"components/HomeComponent.html":{},"components/NavbarElementComponent.html":{}}}],["bi",{"_index":1325,"title":{},"body":{"components/DataItemComponent.html":{},"components/OffcanvasComponent.html":{},"miscellaneous/enumerations.html":{}}}],["bisogna",{"_index":2235,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["blend",{"_index":2110,"title":{},"body":{"components/HomeComponent.html":{}}}],["blob",{"_index":615,"title":{},"body":{"injectables/AttachmentsService.html":{},"injectables/ExportService.html":{},"components/OffcanvasComponent.html":{}}}],["blob([data",{"_index":616,"title":{},"body":{"injectables/AttachmentsService.html":{}}}],["blob([decodeuricomponent(encodeuri(data",{"_index":1825,"title":{},"body":{"injectables/ExportService.html":{}}}],["block",{"_index":1485,"title":{},"body":{"components/DocsComponent.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["blueprint",{"_index":544,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["blueprintfile",{"_index":693,"title":{},"body":{"classes/BlueprintFileDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/NameMappingDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheatreStatusDTO.html":{}}}],["blueprintfiledto",{"_index":671,"title":{"classes/BlueprintFileDTO.html":{}},"body":{"classes/BlueprintFileDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/NameMappingDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheatreStatusDTO.html":{}}}],["blueprinttype",{"_index":486,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["blueprintuuid",{"_index":694,"title":{},"body":{"classes/BlueprintFileDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/NameMappingDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheatreStatusDTO.html":{}}}],["bnname",{"_index":703,"title":{},"body":{"classes/BorderNetworkDTO.html":{},"classes/NetOSRouterDTO.html":{},"classes/NetworkDTO.html":{},"classes/SubnetDTO.html":{}}}],["body",{"_index":137,"title":{},"body":{"components/AppComponent.html":{},"components/OffcanvasComponent.html":{},"injectables/TokenService.html":{}}}],["bold",{"_index":2789,"title":{},"body":{"components/OffcanvasComponent.html":{},"components/TabnavComponent.html":{}}}],["boolean",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"classes/AreaApplication.html":{},"classes/AreaDTO.html":{},"classes/BlueprintFileDTO.html":{},"classes/BorderNetworkDTO.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"components/ControlTemplate.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/DeployInstanceDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/ExportModule.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"classes/HostModuleDTO.html":{},"classes/HostPortModuleDTO.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"classes/NameMappingDTO.html":{},"classes/NetOSRouterDTO.html":{},"components/NetworkComponent.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkDTO.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"components/OffcanvasComponent.html":{},"classes/PageableDTO.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteSubnetInfo.html":{},"classes/SelectOption.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/SingleDataInputReturned.html":{},"classes/SortDTO.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"classes/StatisticItemDTO.html":{},"components/SubnetComponent.html":{},"classes/SubnetDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"components/TabnavComponent.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheatreStatusDTO.html":{},"classes/TypesCatalogueDTO.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{}}}],["bootstrap",{"_index":219,"title":{},"body":{"modules/AppModule.html":{},"components/DataItemComponent.html":{},"dependencies.html":{}}}],["border",{"_index":997,"title":{},"body":{"components/ControlTemplate.html":{},"components/DataItemComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/EmptyModuleInfo.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"miscellaneous/enumerations.html":{}}}],["bordernetwork",{"_index":711,"title":{},"body":{"classes/BorderNetworkDTO.html":{},"classes/NetOSRouterDTO.html":{},"classes/NetworkDTO.html":{},"classes/SubnetDTO.html":{}}}],["bordernetworkdto",{"_index":701,"title":{"classes/BorderNetworkDTO.html":{}},"body":{"classes/BorderNetworkDTO.html":{},"classes/NetOSRouterDTO.html":{},"classes/NetworkDTO.html":{},"classes/SubnetDTO.html":{}}}],["both",{"_index":2672,"title":{},"body":{"components/NavbarElementComponent.html":{}}}],["bottom",{"_index":1278,"title":{},"body":{"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["box",{"_index":1011,"title":{},"body":{"components/ControlTemplate.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"miscellaneous/enumerations.html":{}}}],["branch",{"_index":1974,"title":{},"body":{"components/HomeComponent.html":{}}}],["branch===composer?\"create",{"_index":2090,"title":{},"body":{"components/HomeComponent.html":{}}}],["break",{"_index":1339,"title":{},"body":{"components/DataItemComponent.html":{},"classes/ExportModule.html":{},"components/TabnavComponent.html":{}}}],["broadcast",{"_index":3794,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["browser",{"_index":232,"title":{},"body":{"modules/AppModule.html":{},"components/DocsComponent.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":280,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":279,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":230,"title":{},"body":{"modules/AppModule.html":{}}}],["bs",{"_index":2176,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["btn",{"_index":1270,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["build",{"_index":3881,"title":{},"body":{"index.html":{}}}],["builder",{"_index":2224,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["builder(node",{"_index":2232,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["burn",{"_index":2116,"title":{},"body":{"components/HomeComponent.html":{}}}],["button",{"_index":2175,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/ModalButton.html":{},"classes/ModalItem.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{}}}],["buttonclick",{"_index":1983,"title":{},"body":{"components/HomeComponent.html":{}}}],["buttonclick(branch",{"_index":1988,"title":{},"body":{"components/HomeComponent.html":{}}}],["buttons",{"_index":2057,"title":{},"body":{"components/HomeComponent.html":{},"classes/ModalButton.html":{},"classes/ModalItem.html":{},"injectables/ModalService.html":{}}}],["c",{"_index":2340,"title":{},"body":{"components/MirroringModuleInstanceComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["c.output",{"_index":1871,"title":{},"body":{"classes/ExportTheater.html":{}}}],["calc(0.5rem",{"_index":2120,"title":{},"body":{"components/HomeComponent.html":{}}}],["calc(100",{"_index":2210,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["cambiamento",{"_index":1215,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["campo",{"_index":861,"title":{},"body":{"components/ComposerComponent.html":{},"components/DataInputV2Component.html":{}}}],["canactivate",{"_index":342,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["cancel",{"_index":1053,"title":{},"body":{"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/HomeComponent.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{}}}],["cancellato",{"_index":2249,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["cancellazione",{"_index":1294,"title":{},"body":{"components/DataItemComponent.html":{}}}],["canvas",{"_index":859,"title":{},"body":{"components/ComposerComponent.html":{},"classes/ExportModule.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"components/VisualizerComponent.html":{}}}],["canvas/editor",{"_index":1766,"title":{},"body":{"injectables/ExportService.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["capabilites",{"_index":920,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["capabilities",{"_index":519,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["capire",{"_index":1187,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["capta",{"_index":2391,"title":{},"body":{"components/ModalComponent.html":{}}}],["captare",{"_index":3017,"title":{},"body":{"injectables/ParseService.html":{}}}],["captato",{"_index":1899,"title":{},"body":{"injectables/FileService.html":{}}}],["caratterisiche",{"_index":2634,"title":{},"body":{"components/NavbarComponent.html":{}}}],["caratteristiche/quantit",{"_index":3462,"title":{},"body":{"components/TabnavComponent.html":{}}}],["caricato",{"_index":2031,"title":{},"body":{"components/HomeComponent.html":{}}}],["caso",{"_index":806,"title":{},"body":{"components/ComposerComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/ParseDataForTheaterVisualizer.html":{}}}],["catalog1",{"_index":520,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["catalog2",{"_index":521,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["catalog3",{"_index":522,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["catch",{"_index":867,"title":{},"body":{"components/ComposerComponent.html":{},"injectables/FileService.html":{},"injectables/FlavorService.html":{},"injectables/ModuleService.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"injectables/TheaterService.html":{}}}],["catch((e",{"_index":2074,"title":{},"body":{"components/HomeComponent.html":{}}}],["catch((error",{"_index":327,"title":{},"body":{"modules/AppModule.html":{}}}],["category",{"_index":487,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["cdr",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["center",{"_index":2094,"title":{},"body":{"components/HomeComponent.html":{}}}],["centos",{"_index":1381,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"miscellaneous/enumerations.html":{}}}],["cerca",{"_index":3904,"title":{},"body":{"modules.html":{}}}],["cha",{"_index":1896,"title":{},"body":{"injectables/FileService.html":{}}}],["change",{"_index":965,"title":{},"body":{"components/ControlTemplate.html":{},"components/DataInputV2Component.html":{},"classes/_Control.html":{},"index.html":{}}}],["changedetection",{"_index":1075,"title":{},"body":{"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{}}}],["changedetectionstrategy",{"_index":1109,"title":{},"body":{"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":1076,"title":{},"body":{"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{}}}],["changedetectorref",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["che",{"_index":44,"title":{},"body":{"classes/Aoption.html":{},"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaExport.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"components/ControlTemplate.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"components/DocsComponent.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"classes/FlavorApplication.html":{},"components/HomeComponent.html":{},"classes/HostNode.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModalButton.html":{},"components/ModalComponent.html":{},"classes/ModalItem.html":{},"injectables/ModalService.html":{},"classes/ModuleApplication.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleSimpleData.html":{},"interfaces/ModuleTopology.html":{},"components/NavbarComponent.html":{},"classes/NavbarElement.html":{},"components/NavbarElementComponent.html":{},"classes/NavbarItem.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkNode.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/NodeTopologyElement.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SimpleModuleApplication.html":{},"classes/SourceExport.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"injectables/StorageService.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"components/TabnavComponent.html":{},"classes/TabnavElement.html":{},"classes/TabnavItem.html":{},"classes/TagsExport.html":{},"classes/TheaterApplication.html":{},"classes/TheaterExport.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/TheaterSimpleData.html":{},"interfaces/TheaterTopology.html":{},"injectables/TokenService.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"components/UnderbarComponent.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["check",{"_index":1038,"title":{},"body":{"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{},"components/UnderbarComponent.html":{},"index.html":{}}}],["check[e.id",{"_index":3670,"title":{},"body":{"components/UnderbarComponent.html":{}}}],["checkbox",{"_index":1027,"title":{},"body":{"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{}}}],["checked",{"_index":1041,"title":{},"body":{"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{}}}],["chiamata",{"_index":410,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"components/DataInputComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"components/DocsComponent.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"injectables/TokenService.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"miscellaneous/enumerations.html":{}}}],["chiamate",{"_index":3117,"title":{},"body":{"classes/PerseDataForTheaterComposer.html":{},"injectables/TokenService.html":{}}}],["chiuso",{"_index":1310,"title":{},"body":{"components/DataItemComponent.html":{}}}],["chiusura",{"_index":2455,"title":{},"body":{"injectables/ModalService.html":{},"components/OffcanvasComponent.html":{}}}],["ci",{"_index":843,"title":{},"body":{"components/ComposerComponent.html":{},"components/OffcanvasComponent.html":{},"components/TabnavComponent.html":{}}}],["cidr",{"_index":714,"title":{},"body":{"classes/BorderNetworkDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ExportModule.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetOSRouterDTO.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkDTO.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteSubnetInfo.html":{},"components/SubnetComponent.html":{},"classes/SubnetDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["cite",{"_index":2774,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["class",{"_index":0,"title":{"classes/Aoption.html":{},"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"classes/BlueprintFileDTO.html":{},"classes/BorderNetworkDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputReturnedV2.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/DeployInstanceDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"classes/FlavorApplication.html":{},"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/HostModuleDTO.html":{},"classes/HostNode.html":{},"classes/HostPortModuleDTO.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModalButton.html":{},"classes/ModalItem.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"classes/NameMappingDTO.html":{},"classes/NavbarElement.html":{},"classes/NavbarItem.html":{},"classes/NetOSRouterDTO.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkDTO.html":{},"classes/NetworkNode.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/NodeTopologyElement.html":{},"classes/PageableDTO.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SelectOption.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/SingleDataInputReturned.html":{},"classes/SortDTO.html":{},"classes/SourceExport.html":{},"classes/SpinnerData.html":{},"classes/StatisticItemDTO.html":{},"classes/SubnetDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"classes/TabnavElement.html":{},"classes/TabnavItem.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/TheaterSimpleData.html":{},"classes/TheatreStatusDTO.html":{},"classes/TopologyElement.html":{},"classes/TypesCatalogueDTO.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{},"classes/_Control.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}},"body":{"classes/Aoption.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"injectables/AttachmentsService.html":{},"injectables/AuthGuard.html":{},"classes/BlueprintFileDTO.html":{},"classes/BorderNetworkDTO.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"components/ControlTemplate.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputReturnedV2.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/DeployInstanceDTO.html":{},"components/DocsComponent.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"classes/FlavorApplication.html":{},"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"injectables/FlavorService.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"classes/HostModuleDTO.html":{},"classes/HostNode.html":{},"classes/HostPortModuleDTO.html":{},"components/HowToUseComponent.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModalButton.html":{},"components/ModalComponent.html":{},"classes/ModalItem.html":{},"injectables/ModalService.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"injectables/ModuleService.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"interfaces/ModuleTopology.html":{},"classes/NameMappingDTO.html":{},"components/NavbarComponent.html":{},"classes/NavbarElement.html":{},"components/NavbarElementComponent.html":{},"classes/NavbarItem.html":{},"classes/NetOSRouterDTO.html":{},"components/NetworkComponent.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkDTO.html":{},"classes/NetworkNode.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/NodeTopologyElement.html":{},"components/OffcanvasComponent.html":{},"classes/PageableDTO.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SelectOption.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/SingleDataInputReturned.html":{},"classes/SortDTO.html":{},"classes/SourceExport.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"classes/StatisticItemDTO.html":{},"injectables/StorageService.html":{},"components/SubnetComponent.html":{},"classes/SubnetDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"components/TabnavComponent.html":{},"classes/TabnavElement.html":{},"classes/TabnavItem.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"injectables/TheaterService.html":{},"classes/TheaterSimpleData.html":{},"interfaces/TheaterTopology.html":{},"classes/TheatreStatusDTO.html":{},"injectables/TokenService.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/TypesCatalogueDTO.html":{},"components/UnderbarComponent.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{},"miscellaneous/enumerations.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["class=\"modal",{"_index":2411,"title":{},"body":{"components/ModalComponent.html":{}}}],["classe",{"_index":397,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaExport.html":{},"interfaces/CommonModule.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"classes/FlavorApplication.html":{},"classes/HostNode.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModuleApplication.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleSimpleData.html":{},"interfaces/ModuleTopology.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkNode.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/NodeTopologyElement.html":{},"components/OffcanvasComponent.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SimpleModuleApplication.html":{},"classes/SourceExport.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"classes/TagsExport.html":{},"classes/TheaterApplication.html":{},"classes/TheaterExport.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/TheaterSimpleData.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["classi",{"_index":2,"title":{},"body":{"classes/Aoption.html":{},"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"classes/BlueprintFileDTO.html":{},"classes/BorderNetworkDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputReturnedV2.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataItemComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/DeployInstanceDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"classes/FlavorApplication.html":{},"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/HostModuleDTO.html":{},"classes/HostNode.html":{},"classes/HostPortModuleDTO.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModalButton.html":{},"classes/ModalItem.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"classes/NameMappingDTO.html":{},"classes/NavbarElement.html":{},"classes/NavbarItem.html":{},"classes/NetOSRouterDTO.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkDTO.html":{},"classes/NetworkNode.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/NodeTopologyElement.html":{},"classes/PageableDTO.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SelectOption.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/SingleDataInputReturned.html":{},"classes/SortDTO.html":{},"classes/SourceExport.html":{},"classes/SpinnerData.html":{},"classes/StatisticItemDTO.html":{},"classes/SubnetDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"classes/TabnavElement.html":{},"classes/TabnavItem.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/TheaterSimpleData.html":{},"classes/TheatreStatusDTO.html":{},"classes/TopologyElement.html":{},"classes/TypesCatalogueDTO.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{},"classes/_Control.html":{},"overview.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["classification",{"_index":523,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["clear",{"_index":2471,"title":{},"body":{"injectables/ModalService.html":{}}}],["cli",{"_index":3765,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["cliccato",{"_index":2392,"title":{},"body":{"components/ModalComponent.html":{}}}],["click",{"_index":1156,"title":{},"body":{"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{}}}],["clickbutton",{"_index":2375,"title":{},"body":{"components/ModalComponent.html":{}}}],["clickbutton(val",{"_index":2389,"title":{},"body":{"components/ModalComponent.html":{}}}],["clicked",{"_index":2358,"title":{},"body":{"classes/ModalButton.html":{},"classes/ModalItem.html":{}}}],["closeiconclass",{"_index":1300,"title":{},"body":{"components/DataItemComponent.html":{},"components/OffcanvasComponent.html":{}}}],["closemodal",{"_index":2376,"title":{},"body":{"components/ModalComponent.html":{}}}],["closeoffcanvas",{"_index":2739,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["cloud",{"_index":3796,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["cloudify",{"_index":3815,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["cloudify.openstack.nodes.network",{"_index":3807,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["cloudify.openstack.nodes.port",{"_index":3809,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["cloudify.openstack.nodes.server",{"_index":3808,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["cloudify.openstack.nodes.subnet",{"_index":3814,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["cloudify.openstack.server_connected_to_port",{"_index":3812,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["cloudify.relationships.contained_in",{"_index":3813,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["cloudify.relationships.depends_on",{"_index":3810,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["cloudify_dsl_1_3",{"_index":3816,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["clouds",{"_index":3800,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["cluster_appmodule",{"_index":198,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":201,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":203,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_exports",{"_index":199,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":200,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":202,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":502,"title":{},"body":{"classes/AreaDTO.html":{},"classes/BlueprintFileDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/NameMappingDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterDTO.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheatreStatusDTO.html":{},"classes/TypesCatalogueDTO.html":{},"index.html":{}}}],["coerenza",{"_index":421,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["coinvolgono",{"_index":403,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["collapse",{"_index":1293,"title":{},"body":{"components/DataItemComponent.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["collega",{"_index":3083,"title":{},"body":{"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["collegano",{"_index":1638,"title":{},"body":{"classes/ExportModule.html":{}}}],["collegare",{"_index":2869,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{}}}],["collegato",{"_index":2419,"title":{},"body":{"injectables/ModalService.html":{}}}],["color",{"_index":139,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"components/ControlTemplate.html":{},"components/DataItemComponent.html":{},"classes/FlavorApplication.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"classes/NodeTopologyElement.html":{},"components/OffcanvasComponent.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"classes/TheaterApplication.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"dependencies.html":{}}}],["color!important",{"_index":2787,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["color,4",{"_index":2192,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["colorpickermodule",{"_index":307,"title":{},"body":{"modules/AppModule.html":{}}}],["column",{"_index":1503,"title":{},"body":{"components/DocsComponent.html":{}}}],["come",{"_index":29,"title":{},"body":{"classes/Aoption.html":{},"components/ComposerComponent.html":{},"components/DataInputV2Component.html":{},"components/DocsComponent.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModalButton.html":{},"components/ModalComponent.html":{},"classes/ModalItem.html":{},"classes/NavbarElement.html":{},"components/NavbarElementComponent.html":{},"classes/NavbarItem.html":{},"classes/NetworkNode.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"classes/SubnetNode.html":{},"classes/TabnavElement.html":{},"classes/TabnavItem.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"injectables/TokenService.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{},"components/VisualizerComponent.html":{}}}],["commonmodule",{"_index":263,"title":{"interfaces/CommonModule.html":{}},"body":{"modules/AppModule.html":{},"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["compatibility",{"_index":931,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["completati",{"_index":1675,"title":{},"body":{"classes/ExportModule.html":{}}}],["compodoc",{"_index":1463,"title":{},"body":{"components/DocsComponent.html":{}}}],["compodoc/compodoc",{"_index":3735,"title":{},"body":{"dependencies.html":{}}}],["compodoc_index_html",{"_index":1468,"title":{},"body":{"components/DocsComponent.html":{}}}],["component",{"_index":57,"title":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"classes/HostNode.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"classes/NetworkNode.html":{},"components/OffcanvasComponent.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"components/SubnetComponent.html":{},"classes/SubnetNode.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{},"index.html":{}}}],["component.name",{"_index":3264,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["component_template",{"_index":146,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["componente",{"_index":32,"title":{},"body":{"classes/Aoption.html":{},"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputReturnedV2.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/ModalButton.html":{},"components/ModalComponent.html":{},"classes/ModalItem.html":{},"components/NavbarComponent.html":{},"classes/NavbarElement.html":{},"components/NavbarElementComponent.html":{},"classes/NavbarItem.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"classes/TabnavElement.html":{},"classes/TabnavItem.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{},"miscellaneous/functions.html":{}}}],["componenti",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"injectables/StorageService.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"overview.html":{}}}],["components",{"_index":147,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["components/data",{"_index":289,"title":{},"body":{"modules/AppModule.html":{}}}],["components/modal/modal.component",{"_index":292,"title":{},"body":{"modules/AppModule.html":{}}}],["components/modal/modaltype",{"_index":107,"title":{},"body":{"components/AppComponent.html":{}}}],["components/navbar/navbar.component",{"_index":285,"title":{},"body":{"modules/AppModule.html":{}}}],["components/offcanvas/offcanvas.component",{"_index":284,"title":{},"body":{"modules/AppModule.html":{}}}],["components/tabnav/tabnav.component",{"_index":296,"title":{},"body":{"modules/AppModule.html":{}}}],["components/underbar/underbar.component",{"_index":293,"title":{},"body":{"modules/AppModule.html":{}}}],["componete",{"_index":1473,"title":{},"body":{"components/DocsComponent.html":{}}}],["comporta",{"_index":2426,"title":{},"body":{"injectables/ModalService.html":{}}}],["comportamento",{"_index":1181,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["composer",{"_index":251,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ComposerComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"components/HomeComponent.html":{},"miscellaneous/enumerations.html":{}}}],["composer'},{'name",{"_index":151,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["composer.component",{"_index":253,"title":{},"body":{"modules/AppModule.html":{}}}],["composer.component.html",{"_index":734,"title":{},"body":{"components/ComposerComponent.html":{}}}],["composer.component.sass",{"_index":733,"title":{},"body":{"components/ComposerComponent.html":{}}}],["composer/rete",{"_index":252,"title":{},"body":{"modules/AppModule.html":{}}}],["composercomponent",{"_index":150,"title":{"components/ComposerComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"overview.html":{}}}],["composervisualizertype",{"_index":1362,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"components/HomeComponent.html":{},"miscellaneous/enumerations.html":{}}}],["composervisualizertype.composer",{"_index":2020,"title":{},"body":{"components/HomeComponent.html":{}}}],["composervisualizertype.visualizer",{"_index":2044,"title":{},"body":{"components/HomeComponent.html":{}}}],["composizione",{"_index":3035,"title":{},"body":{"injectables/ParseService.html":{}}}],["comprensibile",{"_index":3020,"title":{},"body":{"injectables/ParseService.html":{}}}],["computazioni",{"_index":2267,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["con",{"_index":143,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"classes/ExportModule.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"classes/HostNode.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"classes/NetworkNode.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"components/SubnetComponent.html":{},"classes/SubnetNode.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["condivisibili",{"_index":3402,"title":{},"body":{"injectables/StorageService.html":{}}}],["conf",{"_index":2050,"title":{},"body":{"components/HomeComponent.html":{}}}],["conferma",{"_index":2453,"title":{},"body":{"injectables/ModalService.html":{}}}],["conferma/cancellazione",{"_index":2430,"title":{},"body":{"injectables/ModalService.html":{}}}],["conferma/non",{"_index":2452,"title":{},"body":{"injectables/ModalService.html":{}}}],["configurationtemplate",{"_index":524,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["configurationtemplatedto",{"_index":492,"title":{"classes/ConfigurationTemplateDTO.html":{}},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["configurazione",{"_index":2383,"title":{},"body":{"components/ModalComponent.html":{}}}],["confirm",{"_index":2465,"title":{},"body":{"injectables/ModalService.html":{}}}],["conivolgono",{"_index":2266,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["connect",{"_index":2900,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["connect_port",{"_index":3811,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["connected",{"_index":3803,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["connection",{"_index":443,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteConnection.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"dependencies.html":{}}}],["connectionpathplugin",{"_index":3223,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{}}}],["connectionplugin",{"_index":3222,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["connections_list",{"_index":2967,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["connections_list.push",{"_index":2972,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["connesisoni",{"_index":1637,"title":{},"body":{"classes/ExportModule.html":{}}}],["connesse",{"_index":1752,"title":{},"body":{"classes/ExportModule.html":{}}}],["connessioni",{"_index":1618,"title":{},"body":{"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"classes/ParseDataForTheaterVisualizer.html":{}}}],["connesso",{"_index":1714,"title":{},"body":{"classes/ExportModule.html":{}}}],["consente",{"_index":2450,"title":{},"body":{"injectables/ModalService.html":{},"injectables/StorageService.html":{},"components/UnderbarComponent.html":{}}}],["considerare",{"_index":2431,"title":{},"body":{"injectables/ModalService.html":{}}}],["considerata",{"_index":2996,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["console.error(\"problema",{"_index":1263,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["console.error(\"underbaritem",{"_index":3671,"title":{},"body":{"components/UnderbarComponent.html":{}}}],["console.error('[ngdobootstrap",{"_index":328,"title":{},"body":{"modules/AppModule.html":{}}}],["console.error(e",{"_index":2948,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["console.log(json.stringify(this.editor.tojson",{"_index":3259,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["console.warn(\"module",{"_index":1666,"title":{},"body":{"classes/ExportModule.html":{}}}],["console.warn(\"only",{"_index":2482,"title":{},"body":{"injectables/ModalService.html":{}}}],["console.warn(\"root",{"_index":2957,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["console.warn(\"theater",{"_index":2921,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["console.warn(\"type",{"_index":1746,"title":{},"body":{"classes/ExportModule.html":{}}}],["const",{"_index":309,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AttachmentsService.html":{},"injectables/AuthGuard.html":{},"classes/BlueprintFileDTO.html":{},"classes/DeployInstanceDTO.html":{},"components/DocsComponent.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/EntityNameMappingFileDTO.html":{},"injectables/ExportService.html":{},"injectables/FileService.html":{},"injectables/FlavorService.html":{},"injectables/ModuleService.html":{},"classes/NameMappingDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TheaterDTO.html":{},"injectables/TheaterService.html":{},"classes/TheatreStatusDTO.html":{}}}],["constraints",{"_index":923,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/ExportModule.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["constraintsmsd",{"_index":897,"title":{"classes/ConstraintsMSD.html":{}},"body":{"classes/ConstraintsMSD.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["constructor",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"components/ComposerComponent.html":{},"components/DocsComponent.html":{},"injectables/ExportService.html":{},"injectables/FileService.html":{},"components/HostComponent.html":{},"classes/HostNode.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"classes/NetworkNode.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"injectables/StorageService.html":{},"components/SubnetComponent.html":{},"classes/SubnetNode.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"injectables/TokenService.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["constructor(cdr",{"_index":1084,"title":{},"body":{"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/OffcanvasComponent.html":{},"components/TabnavComponent.html":{}}}],["constructor(container",{"_index":3212,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["constructor(emitter",{"_index":3723,"title":{},"body":{"classes/_Control.html":{}}}],["constructor(flavorservice",{"_index":3059,"title":{},"body":{"classes/PerseDataForModuleComposer.html":{}}}],["constructor(http",{"_index":587,"title":{},"body":{"injectables/AttachmentsService.html":{},"injectables/FlavorService.html":{},"injectables/ModuleService.html":{},"injectables/TheaterService.html":{}}}],["constructor(module",{"_index":1581,"title":{},"body":{"classes/ExportModule.html":{}}}],["constructor(moduleservice",{"_index":3079,"title":{},"body":{"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["constructor(private",{"_index":607,"title":{},"body":{"injectables/AttachmentsService.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"injectables/FlavorService.html":{},"components/HomeComponent.html":{},"injectables/ModuleService.html":{},"components/OffcanvasComponent.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"components/TabnavComponent.html":{},"injectables/TheaterService.html":{}}}],["constructor(public",{"_index":983,"title":{},"body":{"components/ControlTemplate.html":{},"classes/_Control.html":{}}}],["constructor(router",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"components/ComposerComponent.html":{},"components/HomeComponent.html":{},"components/VisualizerComponent.html":{}}}],["constructor(sanitizer",{"_index":1470,"title":{},"body":{"components/DocsComponent.html":{}}}],["constructor(service",{"_index":2154,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["constructor(ss",{"_index":3393,"title":{},"body":{"injectables/SpinnerService.html":{}}}],["constructor(theater",{"_index":1832,"title":{},"body":{"classes/ExportTheater.html":{}}}],["constructor(theaterservice",{"_index":2822,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{}}}],["consumer",{"_index":1366,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"miscellaneous/enumerations.html":{}}}],["consumer/privisor",{"_index":1739,"title":{},"body":{"classes/ExportModule.html":{}}}],["consumer/provisor",{"_index":1631,"title":{},"body":{"classes/ExportModule.html":{}}}],["consumer_interface_link",{"_index":575,"title":{},"body":{"classes/AreaExport.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/ExportTheater.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesTSD.html":{},"classes/SourceExport.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{}}}],["consumer_interfaces_link",{"_index":538,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/TypesCatalogueDTO.html":{},"classes/reteBasicModuleInfo.html":{}}}],["consumerif",{"_index":1865,"title":{},"body":{"classes/ExportTheater.html":{}}}],["consumerif.connections.foreach(c",{"_index":1867,"title":{},"body":{"classes/ExportTheater.html":{}}}],["consumerinterfacelinkdto",{"_index":533,"title":{"classes/ConsumerInterfaceLinkDTO.html":{}},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{},"classes/reteBasicModuleInfo.html":{}}}],["consumerinterfacelinkexport",{"_index":576,"title":{"classes/ConsumerInterfaceLinkExport.html":{}},"body":{"classes/AreaExport.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesTSD.html":{},"classes/SourceExport.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{}}}],["consumers",{"_index":926,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/ExportModule.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["consumo",{"_index":850,"title":{},"body":{"components/ComposerComponent.html":{}}}],["contain",{"_index":2107,"title":{},"body":{"components/HomeComponent.html":{}}}],["contained",{"_index":1727,"title":{},"body":{"classes/ExportModule.html":{}}}],["contained_in",{"_index":1623,"title":{},"body":{"classes/ExportModule.html":{},"miscellaneous/enumerations.html":{}}}],["container",{"_index":3208,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["contenente",{"_index":398,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/SelectOption.html":{},"classes/SimpleModuleApplication.html":{},"classes/SingleDataInputReturned.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["contenenti",{"_index":1540,"title":{},"body":{"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"miscellaneous/enumerations.html":{}}}],["content",{"_index":471,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"components/DataItemComponent.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"components/NetworkComponent.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"injectables/TokenService.html":{},"classes/TypesCatalogueDTO.html":{}}}],["contenttype",{"_index":1822,"title":{},"body":{"injectables/ExportService.html":{}}}],["contenuto",{"_index":2370,"title":{},"body":{"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/OffcanvasComponent.html":{},"components/TabnavComponent.html":{}}}],["conterr",{"_index":2014,"title":{},"body":{"components/HomeComponent.html":{}}}],["context",{"_index":3225,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"dependencies.html":{}}}],["contextmenuplugin",{"_index":3224,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["contiene",{"_index":557,"title":{},"body":{"classes/AreaExport.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"components/HomeComponent.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"injectables/ParseService.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/SourceExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"components/TabnavComponent.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{},"components/UnderbarComponent.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["continue",{"_index":1668,"title":{},"body":{"classes/ExportModule.html":{}}}],["control",{"_index":959,"title":{},"body":{"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/_Control.html":{}}}],["control.css",{"_index":963,"title":{},"body":{"components/ControlTemplate.html":{},"classes/_Control.html":{}}}],["control.html",{"_index":964,"title":{},"body":{"components/ControlTemplate.html":{},"classes/_Control.html":{}}}],["control_parameters",{"_index":497,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["controlla",{"_index":1213,"title":{},"body":{"components/DataInputV2Component.html":{},"classes/ExportModule.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"components/TabnavComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"components/UnderbarComponent.html":{},"miscellaneous/functions.html":{}}}],["controllare",{"_index":2853,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["controlli",{"_index":1098,"title":{},"body":{"components/DataInputComponent.html":{}}}],["controllo",{"_index":860,"title":{},"body":{"components/ComposerComponent.html":{},"classes/ExportModule.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["controls/control",{"_index":2271,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["controltemplate",{"_index":152,"title":{"components/ControlTemplate.html":{}},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{}}}],["convalida",{"_index":1094,"title":{},"body":{"components/DataInputComponent.html":{}}}],["converte",{"_index":1838,"title":{},"body":{"classes/ExportTheater.html":{}}}],["convertire",{"_index":1571,"title":{},"body":{"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["convertirli",{"_index":3019,"title":{},"body":{"injectables/ParseService.html":{}}}],["convertmodule",{"_index":1575,"title":{},"body":{"classes/ExportModule.html":{}}}],["converttheater",{"_index":1829,"title":{},"body":{"classes/ExportTheater.html":{}}}],["correct",{"_index":2953,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["corretta",{"_index":1451,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["correttamente",{"_index":863,"title":{},"body":{"components/ComposerComponent.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{}}}],["corretto",{"_index":2007,"title":{},"body":{"components/HomeComponent.html":{}}}],["corrispondente",{"_index":56,"title":{},"body":{"classes/Aoption.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"injectables/AttachmentsService.html":{},"injectables/AuthGuard.html":{},"classes/BlueprintFileDTO.html":{},"classes/BorderNetworkDTO.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"components/ControlTemplate.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputReturnedV2.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/DeployInstanceDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"classes/FlavorApplication.html":{},"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"injectables/FlavorService.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"classes/HostModuleDTO.html":{},"classes/HostNode.html":{},"classes/HostPortModuleDTO.html":{},"components/HowToUseComponent.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModalButton.html":{},"components/ModalComponent.html":{},"classes/ModalItem.html":{},"injectables/ModalService.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"injectables/ModuleService.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"interfaces/ModuleTopology.html":{},"classes/NameMappingDTO.html":{},"components/NavbarComponent.html":{},"classes/NavbarElement.html":{},"components/NavbarElementComponent.html":{},"classes/NavbarItem.html":{},"classes/NetOSRouterDTO.html":{},"components/NetworkComponent.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkDTO.html":{},"classes/NetworkNode.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/NodeTopologyElement.html":{},"components/OffcanvasComponent.html":{},"classes/PageableDTO.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SelectOption.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/SingleDataInputReturned.html":{},"classes/SortDTO.html":{},"classes/SourceExport.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"classes/StatisticItemDTO.html":{},"injectables/StorageService.html":{},"components/SubnetComponent.html":{},"classes/SubnetDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"components/TabnavComponent.html":{},"classes/TabnavElement.html":{},"classes/TabnavItem.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"injectables/TheaterService.html":{},"classes/TheaterSimpleData.html":{},"interfaces/TheaterTopology.html":{},"classes/TheatreStatusDTO.html":{},"injectables/TokenService.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/TypesCatalogueDTO.html":{},"components/UnderbarComponent.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{},"routes.html":{}}}],["corrispondenza",{"_index":53,"title":{},"body":{"classes/Aoption.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"injectables/AttachmentsService.html":{},"injectables/AuthGuard.html":{},"classes/BlueprintFileDTO.html":{},"classes/BorderNetworkDTO.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"components/ControlTemplate.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputReturnedV2.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/DeployInstanceDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"classes/FlavorApplication.html":{},"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"injectables/FlavorService.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"classes/HostModuleDTO.html":{},"classes/HostNode.html":{},"classes/HostPortModuleDTO.html":{},"components/HowToUseComponent.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModalButton.html":{},"components/ModalComponent.html":{},"classes/ModalItem.html":{},"injectables/ModalService.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"injectables/ModuleService.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"interfaces/ModuleTopology.html":{},"classes/NameMappingDTO.html":{},"components/NavbarComponent.html":{},"classes/NavbarElement.html":{},"components/NavbarElementComponent.html":{},"classes/NavbarItem.html":{},"classes/NetOSRouterDTO.html":{},"components/NetworkComponent.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkDTO.html":{},"classes/NetworkNode.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/NodeTopologyElement.html":{},"components/OffcanvasComponent.html":{},"classes/PageableDTO.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SelectOption.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/SingleDataInputReturned.html":{},"classes/SortDTO.html":{},"classes/SourceExport.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"classes/StatisticItemDTO.html":{},"injectables/StorageService.html":{},"components/SubnetComponent.html":{},"classes/SubnetDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"components/TabnavComponent.html":{},"classes/TabnavElement.html":{},"classes/TabnavItem.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"injectables/TheaterService.html":{},"classes/TheaterSimpleData.html":{},"interfaces/TheaterTopology.html":{},"classes/TheatreStatusDTO.html":{},"injectables/TokenService.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/TypesCatalogueDTO.html":{},"components/UnderbarComponent.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{},"routes.html":{}}}],["costruire",{"_index":2017,"title":{},"body":{"components/HomeComponent.html":{}}}],["costruttore",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"injectables/AttachmentsService.html":{},"injectables/AuthGuard.html":{},"components/ComposerComponent.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"injectables/FlavorService.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"classes/HostNode.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"injectables/ModuleService.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"classes/NetworkNode.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"injectables/StorageService.html":{},"components/SubnetComponent.html":{},"classes/SubnetNode.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"injectables/TheaterService.html":{},"injectables/TokenService.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{}}}],["costrutture",{"_index":2381,"title":{},"body":{"components/ModalComponent.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"components/TabnavComponent.html":{}}}],["costruzione",{"_index":726,"title":{},"body":{"components/ComposerComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"components/VisualizerComponent.html":{}}}],["counter",{"_index":2986,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["cover",{"_index":2115,"title":{},"body":{"components/HomeComponent.html":{}}}],["cpu",{"_index":1923,"title":{},"body":{"classes/FlavorApplication.html":{},"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"components/HostComponent.html":{},"classes/HostNode.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/ReteHostInfo.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{}}}],["crea",{"_index":3094,"title":{},"body":{"classes/PerseDataForModuleVisualizer.html":{}}}],["creare",{"_index":1548,"title":{},"body":{"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"components/HomeComponent.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["crearne",{"_index":2237,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["create",{"_index":2087,"title":{},"body":{"components/HomeComponent.html":{},"components/NavbarElementComponent.html":{},"classes/ReteModuleComposerSettings.html":{}}}],["created",{"_index":2225,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["created(node",{"_index":2242,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["createdby",{"_index":508,"title":{},"body":{"classes/AreaDTO.html":{},"classes/BlueprintFileDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/NameMappingDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheatreStatusDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["createddate",{"_index":509,"title":{},"body":{"classes/AreaDTO.html":{},"classes/BlueprintFileDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/NameMappingDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheatreStatusDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["createhost",{"_index":2860,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"miscellaneous/functions.html":{}}}],["createhost(host_name",{"_index":2985,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["createhost(name",{"_index":3836,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createmodulenode",{"_index":2896,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"miscellaneous/functions.html":{}}}],["createmodulenode(moduleinstancename",{"_index":2965,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["createmodulenode(name",{"_index":3838,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createmodulenode(undefined",{"_index":3143,"title":{},"body":{"classes/PerseDataForTheaterComposer.html":{}}}],["createnetwork",{"_index":2862,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"miscellaneous/functions.html":{}}}],["createnetwork(name",{"_index":3842,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createnetwork(network_name",{"_index":3006,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["createnewnode",{"_index":2226,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["createnewnode(node",{"_index":2245,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["createsubnet",{"_index":2861,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"miscellaneous/functions.html":{}}}],["createsubnet(name",{"_index":3844,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createsubnet(subnet_name",{"_index":2999,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["creato",{"_index":2244,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["creazione",{"_index":1625,"title":{},"body":{"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"components/HomeComponent.html":{}}}],["cui",{"_index":804,"title":{},"body":{"components/ComposerComponent.html":{},"components/HomeComponent.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"injectables/ModalService.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["currently",{"_index":648,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["currentpage",{"_index":2606,"title":{},"body":{"injectables/ModuleService.html":{}}}],["cursor",{"_index":1271,"title":{},"body":{"components/DataInputV2Component.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["custom",{"_index":2664,"title":{},"body":{"components/NavbarElementComponent.html":{}}}],["custom_elements_schema",{"_index":221,"title":{},"body":{"modules/AppModule.html":{}}}],["cyber",{"_index":2081,"title":{},"body":{"components/HomeComponent.html":{}}}],["cyberrange",{"_index":2088,"title":{},"body":{"components/HomeComponent.html":{}}}],["da",{"_index":354,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"classes/DataInputCheck.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"components/DocsComponent.html":{},"injectables/ExportService.html":{},"injectables/FileService.html":{},"classes/FlavorApplication.html":{},"classes/FlavorDTO.html":{},"components/HomeComponent.html":{},"injectables/ModalService.html":{},"classes/ModuleApplication.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SimpleModuleApplication.html":{},"injectables/StorageService.html":{},"components/TabnavComponent.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"classes/reteBasicModuleInfo.html":{}}}],["dai",{"_index":977,"title":{},"body":{"components/ControlTemplate.html":{},"classes/_Control.html":{}}}],["dal",{"_index":1224,"title":{},"body":{"components/DataInputV2Component.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"components/VisualizerComponent.html":{}}}],["dall'input",{"_index":1900,"title":{},"body":{"injectables/FileService.html":{}}}],["dalla",{"_index":426,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"components/DataInputComponent.html":{},"components/DocsComponent.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"components/TabnavComponent.html":{},"classes/TabnavElement.html":{},"classes/TabnavItem.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"components/VisualizerComponent.html":{}}}],["dalle",{"_index":1629,"title":{},"body":{"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{}}}],["danger",{"_index":2363,"title":{},"body":{"classes/ModalButton.html":{},"classes/ModalItem.html":{}}}],["dare",{"_index":1201,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["data",{"_index":154,"title":{},"body":{"components/AppComponent.html":{},"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"injectables/AttachmentsService.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"components/DocsComponent.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"classes/FlavorApplication.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"classes/HostNode.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"components/ModalComponent.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"classes/NetworkNode.html":{},"classes/NodeTopologyElement.html":{},"components/OffcanvasComponent.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SimpleModuleApplication.html":{},"injectables/StorageService.html":{},"components/SubnetComponent.html":{},"classes/SubnetNode.html":{},"components/TabnavComponent.html":{},"classes/TheaterApplication.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["data(data",{"_index":3412,"title":{},"body":{"injectables/StorageService.html":{}}}],["data_appended",{"_index":1018,"title":{},"body":{"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{}}}],["data_input_template",{"_index":1975,"title":{},"body":{"components/HomeComponent.html":{}}}],["data_prepended",{"_index":1019,"title":{},"body":{"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{}}}],["dataeditor",{"_index":1573,"title":{},"body":{"classes/ExportModule.html":{},"classes/ExportTheater.html":{}}}],["dataform",{"_index":1079,"title":{},"body":{"components/DataInputComponent.html":{}}}],["dataformrouter",{"_index":828,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["datafromrouter",{"_index":736,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["datainput",{"_index":1013,"title":{"classes/DataInput.html":{}},"body":{"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{}}}],["datainput:14",{"_index":1058,"title":{},"body":{"classes/DataInputCheck.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{}}}],["datainput:15",{"_index":1060,"title":{},"body":{"classes/DataInputCheck.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{}}}],["datainput:16",{"_index":1061,"title":{},"body":{"classes/DataInputCheck.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{}}}],["datainput:17",{"_index":1057,"title":{},"body":{"classes/DataInputCheck.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{}}}],["datainput:18",{"_index":1056,"title":{},"body":{"classes/DataInputCheck.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{}}}],["datainput:19",{"_index":1059,"title":{},"body":{"classes/DataInputCheck.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{}}}],["datainputcheck",{"_index":1040,"title":{"classes/DataInputCheck.html":{}},"body":{"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{}}}],["datainputcomponent",{"_index":153,"title":{"components/DataInputComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"overview.html":{}}}],["datainputcomponet",{"_index":1017,"title":{},"body":{"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{}}}],["datainputelement",{"_index":1029,"title":{"classes/DataInputElement.html":{}},"body":{"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"components/HomeComponent.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{}}}],["datainputelement.element",{"_index":1264,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["datainputreturned",{"_index":1047,"title":{"classes/DataInputReturned.html":{}},"body":{"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"components/HomeComponent.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{}}}],["datainputreturned(val",{"_index":1222,"title":{},"body":{"components/DataInputV2Component.html":{},"components/HomeComponent.html":{}}}],["datainputreturnedv2",{"_index":1140,"title":{"classes/DataInputReturnedV2.html":{}},"body":{"classes/DataInputReturnedV2.html":{},"components/DataInputV2Component.html":{}}}],["datainputselection",{"_index":1034,"title":{"classes/DataInputSelection.html":{}},"body":{"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{}}}],["datainputtext",{"_index":1032,"title":{"classes/DataInputText.html":{}},"body":{"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{}}}],["datainputtype",{"_index":1111,"title":{},"body":{"components/DataInputComponent.html":{}}}],["datainputtypev2",{"_index":1240,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["datainputv2",{"_index":1142,"title":{},"body":{"classes/DataInputReturnedV2.html":{}}}],["datainputv2component",{"_index":156,"title":{"components/DataInputV2Component.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"overview.html":{}}}],["datainputv2componet",{"_index":1143,"title":{},"body":{"classes/DataInputReturnedV2.html":{}}}],["dataitemcomponent",{"_index":159,"title":{"components/DataItemComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"overview.html":{}}}],["datamodal",{"_index":1976,"title":{},"body":{"components/HomeComponent.html":{}}}],["dataroutecomposer",{"_index":793,"title":{"classes/DataRouteComposer.html":{}},"body":{"components/ComposerComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"components/HomeComponent.html":{},"components/VisualizerComponent.html":{}}}],["dataroutevisualizer",{"_index":1390,"title":{"classes/DataRouteVisualizer.html":{}},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"components/HomeComponent.html":{},"components/VisualizerComponent.html":{}}}],["datasubmitted",{"_index":1083,"title":{},"body":{"components/DataInputComponent.html":{}}}],["dati",{"_index":729,"title":{},"body":{"components/ComposerComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"components/HomeComponent.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"injectables/ModalService.html":{},"classes/NetworkNode.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"injectables/StorageService.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"components/VisualizerComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["dato",{"_index":1016,"title":{},"body":{"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"components/HomeComponent.html":{},"classes/ModalButton.html":{},"classes/ModalItem.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{},"miscellaneous/functions.html":{}}}],["dc3545",{"_index":2117,"title":{},"body":{"components/HomeComponent.html":{}}}],["declarations",{"_index":319,"title":{},"body":{"modules/AppModule.html":{}}}],["declared",{"_index":2960,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["decoration",{"_index":1273,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["decorators",{"_index":2022,"title":{},"body":{"components/HomeComponent.html":{}}}],["dedotte",{"_index":1602,"title":{},"body":{"classes/ExportModule.html":{},"classes/ExportTheater.html":{}}}],["default",{"_index":491,"title":{},"body":{"classes/AreaDTO.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"injectables/ModalService.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"components/SubnetComponent.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TypesCatalogueDTO.html":{},"components/VisualizerComponent.html":{}}}],["definiti",{"_index":3139,"title":{},"body":{"classes/PerseDataForTheaterComposer.html":{}}}],["definito",{"_index":21,"title":{},"body":{"classes/Aoption.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"injectables/AttachmentsService.html":{},"injectables/AuthGuard.html":{},"classes/BlueprintFileDTO.html":{},"classes/BorderNetworkDTO.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"components/ControlTemplate.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputReturnedV2.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/DeployInstanceDTO.html":{},"components/DocsComponent.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"classes/FlavorApplication.html":{},"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"injectables/FlavorService.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"classes/HostModuleDTO.html":{},"classes/HostNode.html":{},"classes/HostPortModuleDTO.html":{},"components/HowToUseComponent.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModalButton.html":{},"components/ModalComponent.html":{},"classes/ModalItem.html":{},"injectables/ModalService.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"injectables/ModuleService.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"classes/NameMappingDTO.html":{},"components/NavbarComponent.html":{},"classes/NavbarElement.html":{},"components/NavbarElementComponent.html":{},"classes/NavbarItem.html":{},"classes/NetOSRouterDTO.html":{},"components/NetworkComponent.html":{},"classes/NetworkDTO.html":{},"classes/NetworkNode.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/NodeTopologyElement.html":{},"components/OffcanvasComponent.html":{},"classes/PageableDTO.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SelectOption.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/SingleDataInputReturned.html":{},"classes/SortDTO.html":{},"classes/SourceExport.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"classes/StatisticItemDTO.html":{},"injectables/StorageService.html":{},"components/SubnetComponent.html":{},"classes/SubnetDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"components/TabnavComponent.html":{},"classes/TabnavElement.html":{},"classes/TabnavItem.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"injectables/TheaterService.html":{},"classes/TheaterSimpleData.html":{},"classes/TheatreStatusDTO.html":{},"injectables/TokenService.html":{},"classes/TopologyElement.html":{},"classes/TypesCatalogueDTO.html":{},"components/UnderbarComponent.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["degli",{"_index":1539,"title":{},"body":{"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"components/HomeComponent.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"miscellaneous/enumerations.html":{}}}],["dei",{"_index":787,"title":{},"body":{"components/ComposerComponent.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"components/HomeComponent.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"classes/NetworkNode.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"components/TabnavComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"components/VisualizerComponent.html":{},"miscellaneous/enumerations.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["del",{"_index":434,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputV2Component.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"classes/FlavorApplication.html":{},"components/HomeComponent.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"components/ModalComponent.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"components/NavbarComponent.html":{},"classes/NetworkNode.html":{},"classes/NodeTopologyElement.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SimpleModuleApplication.html":{},"classes/SubnetNode.html":{},"components/TabnavComponent.html":{},"classes/TheaterApplication.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/_Control.html":{},"miscellaneous/functions.html":{}}}],["delete",{"_index":2929,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["deleted",{"_index":349,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["dell",{"_index":1483,"title":{},"body":{"components/DocsComponent.html":{}}}],["dell'applicazione",{"_index":3382,"title":{},"body":{"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{}}}],["dell'editor",{"_index":1585,"title":{},"body":{"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"classes/PerseDataForModuleVisualizer.html":{}}}],["dell'elemento",{"_index":1206,"title":{},"body":{"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"components/HomeComponent.html":{}}}],["dell'evento",{"_index":2357,"title":{},"body":{"classes/ModalButton.html":{},"classes/ModalItem.html":{}}}],["dell'hide",{"_index":2385,"title":{},"body":{"components/ModalComponent.html":{},"components/OffcanvasComponent.html":{}}}],["dell'host",{"_index":1616,"title":{},"body":{"classes/ExportModule.html":{}}}],["dell'input",{"_index":1903,"title":{},"body":{"injectables/FileService.html":{}}}],["dell'inserimento",{"_index":2033,"title":{},"body":{"components/HomeComponent.html":{}}}],["dell'ip",{"_index":1383,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"miscellaneous/enumerations.html":{}}}],["dell'offcanvas",{"_index":2753,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["dell'oggetto",{"_index":1290,"title":{},"body":{"components/DataItemComponent.html":{}}}],["dell'underbar",{"_index":3660,"title":{},"body":{"components/UnderbarComponent.html":{}}}],["dell'upload",{"_index":2001,"title":{},"body":{"components/HomeComponent.html":{}}}],["dell'utente",{"_index":2433,"title":{},"body":{"injectables/ModalService.html":{}}}],["della",{"_index":47,"title":{},"body":{"classes/Aoption.html":{},"components/ComposerComponent.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputReturnedV2.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"components/DocsComponent.html":{},"classes/ExportModule.html":{},"components/HomeComponent.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"components/NavbarComponent.html":{},"classes/NavbarElement.html":{},"components/NavbarElementComponent.html":{},"classes/NavbarItem.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{},"components/TabnavComponent.html":{},"injectables/TokenService.html":{},"components/VisualizerComponent.html":{}}}],["delle",{"_index":1417,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"components/HomeComponent.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"injectables/ModalService.html":{},"classes/NetworkNode.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"injectables/TokenService.html":{},"miscellaneous/enumerations.html":{}}}],["dello",{"_index":1596,"title":{},"body":{"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"injectables/StorageService.html":{}}}],["dependencies",{"_index":197,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dependes_on",{"_index":1703,"title":{},"body":{"classes/ExportModule.html":{}}}],["depends_on",{"_index":1622,"title":{},"body":{"classes/ExportModule.html":{},"miscellaneous/enumerations.html":{}}}],["deployinstancedto",{"_index":680,"title":{"classes/DeployInstanceDTO.html":{}},"body":{"classes/BlueprintFileDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/NameMappingDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TheaterDTO.html":{},"classes/TheatreStatusDTO.html":{}}}],["deploymentsequence",{"_index":695,"title":{},"body":{"classes/BlueprintFileDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/NameMappingDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheatreStatusDTO.html":{}}}],["deps",{"_index":317,"title":{},"body":{"modules/AppModule.html":{}}}],["depth",{"_index":3279,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["description",{"_index":350,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"classes/BlueprintFileDTO.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/DeployInstanceDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"classes/NameMappingDTO.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/SourceExport.html":{},"classes/StatisticItemDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/TheaterSimpleData.html":{},"classes/TheatreStatusDTO.html":{},"classes/TypesCatalogueDTO.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{},"classes/reteBasicModuleInfo.html":{}}}],["descriptioncode",{"_index":504,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["descrittiva",{"_index":1395,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"miscellaneous/enumerations.html":{}}}],["descrizione",{"_index":7,"title":{},"body":{"classes/Aoption.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputReturnedV2.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"components/DocsComponent.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModalButton.html":{},"components/ModalComponent.html":{},"classes/ModalItem.html":{},"injectables/ModalService.html":{},"classes/ModuleApplication.html":{},"classes/ModuleExport.html":{},"components/NavbarComponent.html":{},"classes/NavbarElement.html":{},"components/NavbarElementComponent.html":{},"classes/NavbarItem.html":{},"classes/NetworkNode.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SelectOption.html":{},"classes/SimpleModuleApplication.html":{},"classes/SingleDataInputReturned.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"injectables/StorageService.html":{},"classes/SubnetNode.html":{},"components/TabnavComponent.html":{},"classes/TabnavElement.html":{},"classes/TabnavItem.html":{},"classes/TheaterExport.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"injectables/TokenService.html":{},"components/UnderbarComponent.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{},"classes/_Control.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["design",{"_index":782,"title":{},"body":{"components/ComposerComponent.html":{},"components/HomeComponent.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["designer",{"_index":881,"title":{},"body":{"components/ComposerComponent.html":{},"components/HomeComponent.html":{}}}],["designer/visualize",{"_index":1990,"title":{},"body":{"components/HomeComponent.html":{}}}],["destra",{"_index":2733,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["destroyed",{"_index":2227,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["destroyed(node",{"_index":2247,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["detailjson",{"_index":1939,"title":{},"body":{"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{}}}],["detailproperties",{"_index":525,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["determinate",{"_index":1208,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["determinati",{"_index":1285,"title":{},"body":{"components/DataItemComponent.html":{}}}],["determinato",{"_index":1155,"title":{},"body":{"components/DataInputV2Component.html":{},"injectables/ModalService.html":{}}}],["dettagli",{"_index":2871,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["dettaglio",{"_index":3098,"title":{},"body":{"classes/PerseDataForModuleVisualizer.html":{}}}],["dev",{"_index":3872,"title":{},"body":{"index.html":{}}}],["deve",{"_index":1671,"title":{},"body":{"classes/ExportModule.html":{}}}],["development",{"_index":3869,"title":{},"body":{"index.html":{}}}],["devono",{"_index":560,"title":{},"body":{"classes/AreaExport.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"components/HomeComponent.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/SourceExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["dhcp",{"_index":3426,"title":{},"body":{"components/SubnetComponent.html":{}}}],["di",{"_index":723,"title":{},"body":{"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputReturnedV2.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"components/DocsComponent.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModalButton.html":{},"components/ModalComponent.html":{},"classes/ModalItem.html":{},"injectables/ModalService.html":{},"components/NavbarComponent.html":{},"classes/NetworkNode.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"injectables/StorageService.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"injectables/TokenService.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["dichiarata",{"_index":2276,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"miscellaneous/functions.html":{}}}],["dichiarazioni",{"_index":214,"title":{},"body":{"modules/AppModule.html":{}}}],["direct",{"_index":1177,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["directchange",{"_index":1169,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["directives",{"_index":193,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":3880,"title":{},"body":{"index.html":{}}}],["directory",{"_index":3885,"title":{},"body":{"index.html":{}}}],["direttamente",{"_index":423,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"components/DataInputV2Component.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"classes/FlavorApplication.html":{},"injectables/ModalService.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["direttive",{"_index":144,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["diretto",{"_index":1216,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["disk",{"_index":1924,"title":{},"body":{"classes/FlavorApplication.html":{},"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"components/HostComponent.html":{},"classes/HostNode.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/ReteHostInfo.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{}}}],["display",{"_index":1500,"title":{},"body":{"components/DocsComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["display_name",{"_index":687,"title":{},"body":{"classes/BlueprintFileDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/NameMappingDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TheaterDTO.html":{},"classes/TheatreStatusDTO.html":{}}}],["displayed",{"_index":1496,"title":{},"body":{"components/DocsComponent.html":{}}}],["displayer",{"_index":192,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["disponibile",{"_index":1842,"title":{},"body":{"classes/ExportTheater.html":{},"modules.html":{}}}],["disponibili",{"_index":1073,"title":{},"body":{"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["dist",{"_index":3884,"title":{},"body":{"index.html":{}}}],["div",{"_index":1337,"title":{},"body":{"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/NetworkComponent.html":{}}}],["diverga",{"_index":2827,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["diverse",{"_index":3381,"title":{},"body":{"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{}}}],["diversi",{"_index":1068,"title":{},"body":{"components/DataInputComponent.html":{},"components/UnderbarComponent.html":{}}}],["dizionario",{"_index":814,"title":{},"body":{"components/ComposerComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["dns",{"_index":715,"title":{},"body":{"classes/BorderNetworkDTO.html":{},"classes/NetOSRouterDTO.html":{},"classes/NetworkDTO.html":{},"classes/SubnetDTO.html":{}}}],["dobootstrap",{"_index":234,"title":{},"body":{"modules/AppModule.html":{}}}],["dock",{"_index":3234,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"dependencies.html":{}}}],["dockplugin",{"_index":3233,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{}}}],["docs",{"_index":1465,"title":{},"body":{"components/DocsComponent.html":{}}}],["docs'},{'name",{"_index":163,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["docs.component.html",{"_index":1467,"title":{},"body":{"components/DocsComponent.html":{}}}],["docs.component.sass",{"_index":1466,"title":{},"body":{"components/DocsComponent.html":{}}}],["docscomponent",{"_index":162,"title":{"components/DocsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"overview.html":{}}}],["document.body.appendchild(a",{"_index":622,"title":{},"body":{"injectables/AttachmentsService.html":{},"injectables/ExportService.html":{}}}],["document.body.style.background",{"_index":120,"title":{},"body":{"components/AppComponent.html":{}}}],["document.body.style.overflow",{"_index":115,"title":{},"body":{"components/AppComponent.html":{}}}],["document.createelement('a",{"_index":621,"title":{},"body":{"injectables/AttachmentsService.html":{},"injectables/ExportService.html":{}}}],["document.getelementbyid(el.id",{"_index":1120,"title":{},"body":{"components/DataInputComponent.html":{},"components/NavbarComponent.html":{}}}],["documentation",{"_index":341,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/NavbarElementComponent.html":{}}}],["documentazione",{"_index":1461,"title":{},"body":{"components/DocsComponent.html":{}}}],["doesn't",{"_index":2922,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["dom",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["domsanitizer",{"_index":1471,"title":{},"body":{"components/DocsComponent.html":{}}}],["dopo",{"_index":1673,"title":{},"body":{"classes/ExportModule.html":{},"components/HomeComponent.html":{}}}],["dovesse",{"_index":1800,"title":{},"body":{"injectables/ExportService.html":{}}}],["dovute",{"_index":3840,"title":{},"body":{"miscellaneous/functions.html":{}}}],["dovuti",{"_index":3204,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["down",{"_index":1330,"title":{},"body":{"components/DataItemComponent.html":{},"components/NavbarElementComponent.html":{},"components/OffcanvasComponent.html":{}}}],["down:hover",{"_index":2670,"title":{},"body":{"components/NavbarElementComponent.html":{}}}],["download",{"_index":1792,"title":{},"body":{"injectables/ExportService.html":{}}}],["dsl_definition",{"_index":919,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["due",{"_index":2437,"title":{},"body":{"injectables/ModalService.html":{}}}],["duplicated",{"_index":3672,"title":{},"body":{"components/UnderbarComponent.html":{}}}],["dx",{"_index":2755,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["dynamic",{"_index":3276,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"dependencies.html":{}}}],["e",{"_index":428,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"classes/FlavorApplication.html":{},"components/HomeComponent.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"components/VisualizerComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["e.required",{"_index":1114,"title":{},"body":{"components/DataInputComponent.html":{}}}],["e2e",{"_index":3896,"title":{},"body":{"index.html":{}}}],["ed",{"_index":2808,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["edito",{"_index":3213,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["editor",{"_index":1546,"title":{},"body":{"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"injectables/ExportService.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["editor).convertmodule",{"_index":1813,"title":{},"body":{"injectables/ExportService.html":{}}}],["editor).converttheater",{"_index":1817,"title":{},"body":{"injectables/ExportService.html":{}}}],["editoruse",{"_index":3211,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["editoruse_simple",{"_index":3283,"title":{},"body":{"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["effettivo",{"_index":1793,"title":{},"body":{"injectables/ExportService.html":{}}}],["el",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/DataInputComponent.html":{},"components/NavbarComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["el.a_option",{"_index":2646,"title":{},"body":{"components/NavbarComponent.html":{}}}],["el.a_option.foreach",{"_index":2647,"title":{},"body":{"components/NavbarComponent.html":{}}}],["el.element.foreach(e",{"_index":3669,"title":{},"body":{"components/UnderbarComponent.html":{}}}],["el.id",{"_index":1123,"title":{},"body":{"components/DataInputComponent.html":{}}}],["el.show",{"_index":128,"title":{},"body":{"components/AppComponent.html":{}}}],["el.text",{"_index":130,"title":{},"body":{"components/AppComponent.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{}}}],["el.type",{"_index":1121,"title":{},"body":{"components/DataInputComponent.html":{}}}],["el.value",{"_index":1269,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["elaborare",{"_index":1107,"title":{},"body":{"components/DataInputComponent.html":{}}}],["element",{"_index":41,"title":{},"body":{"classes/Aoption.html":{},"components/ComposerComponent.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"components/HomeComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"classes/NavbarElement.html":{},"components/NavbarElementComponent.html":{},"classes/NavbarItem.html":{},"components/OffcanvasComponent.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{},"components/TabnavComponent.html":{},"classes/TabnavElement.html":{},"classes/TabnavItem.html":{},"components/UnderbarComponent.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{}}}],["element'},{'name",{"_index":174,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["element.component",{"_index":288,"title":{},"body":{"modules/AppModule.html":{}}}],["element.component.css",{"_index":2660,"title":{},"body":{"components/NavbarElementComponent.html":{}}}],["element.component.html",{"_index":2661,"title":{},"body":{"components/NavbarElementComponent.html":{}}}],["element.component.ts",{"_index":2658,"title":{},"body":{"components/NavbarElementComponent.html":{}}}],["element.component.ts:11",{"_index":2662,"title":{},"body":{"components/NavbarElementComponent.html":{}}}],["element.data.type",{"_index":1658,"title":{},"body":{"classes/ExportModule.html":{}}}],["element.text_content",{"_index":2410,"title":{},"body":{"components/ModalComponent.html":{}}}],["element.title",{"_index":2408,"title":{},"body":{"components/ModalComponent.html":{}}}],["element.type",{"_index":2652,"title":{},"body":{"components/NavbarComponent.html":{}}}],["element/navbar",{"_index":287,"title":{},"body":{"modules/AppModule.html":{},"components/NavbarElementComponent.html":{}}}],["elementdto",{"_index":468,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["elementi",{"_index":1069,"title":{},"body":{"components/DataInputComponent.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"components/UnderbarComponent.html":{},"index.html":{}}}],["elementintotheaterdto",{"_index":541,"title":{"classes/ElementIntoTheaterDTO.html":{}},"body":{"classes/AreaDTO.html":{},"classes/BlueprintFileDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/NameMappingDTO.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterDTO.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheatreStatusDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["elemento",{"_index":27,"title":{},"body":{"classes/Aoption.html":{},"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"components/DocsComponent.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/ModalButton.html":{},"components/ModalComponent.html":{},"classes/ModalItem.html":{},"components/NavbarComponent.html":{},"classes/NavbarElement.html":{},"components/NavbarElementComponent.html":{},"classes/NavbarItem.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"classes/TabnavElement.html":{},"classes/TabnavItem.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["elements",{"_index":442,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["elements[host_name",{"_index":2984,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["elements[host_name].output.push(port_name",{"_index":3010,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["elements[moduleinstancename",{"_index":2966,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["elements[network_name",{"_index":3005,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["elements[network_name].input.push(subnet_name",{"_index":3009,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["elements[subnet_name",{"_index":2998,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["elements[subnet_name].output.push(network_name",{"_index":3003,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["elimina",{"_index":1314,"title":{},"body":{"components/DataItemComponent.html":{}}}],["eliminazione",{"_index":1319,"title":{},"body":{"components/DataItemComponent.html":{}}}],["ellipsis",{"_index":1345,"title":{},"body":{"components/DataItemComponent.html":{},"components/OffcanvasComponent.html":{}}}],["embedded",{"_index":1495,"title":{},"body":{"components/DocsComponent.html":{}}}],["emette",{"_index":1317,"title":{},"body":{"components/DataItemComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/OffcanvasComponent.html":{},"components/UnderbarComponent.html":{}}}],["emettere",{"_index":1104,"title":{},"body":{"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{}}}],["emitter",{"_index":984,"title":{},"body":{"components/ControlTemplate.html":{},"components/ModalComponent.html":{},"classes/_Control.html":{}}}],["empty",{"_index":480,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/NetworkNode.html":{},"classes/PageableDTO.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/SortDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/SubnetNode.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/TypesCatalogueDTO.html":{},"miscellaneous/functions.html":{}}}],["emptymoduleinfo",{"_index":1514,"title":{"classes/EmptyModuleInfo.html":{}},"body":{"classes/EmptyModuleInfo.html":{}}}],["emptynodeinfo",{"_index":1551,"title":{"classes/EmptyNodeInfo.html":{}},"body":{"classes/EmptyNodeInfo.html":{}}}],["enable_dhcp",{"_index":948,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/ExportModule.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["end",{"_index":2199,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"index.html":{}}}],["endpage",{"_index":2607,"title":{},"body":{"injectables/ModuleService.html":{}}}],["ends",{"_index":2078,"title":{},"body":{"components/HomeComponent.html":{}}}],["engine",{"_index":3209,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["entitynamemappingfile",{"_index":698,"title":{},"body":{"classes/BlueprintFileDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/NameMappingDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheatreStatusDTO.html":{}}}],["entitynamemappingfiledto",{"_index":691,"title":{"classes/EntityNameMappingFileDTO.html":{}},"body":{"classes/BlueprintFileDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/NameMappingDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheatreStatusDTO.html":{}}}],["entrycomponents",{"_index":215,"title":{},"body":{"modules/AppModule.html":{}}}],["enum",{"_index":1361,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"miscellaneous/enumerations.html":{}}}],["enumerations",{"_index":3780,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enummoduletype",{"_index":1398,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"miscellaneous/enumerations.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["enummoduletype.mirroringmoduleinstance",{"_index":2353,"title":{},"body":{"classes/MirroringModuleInstanceNode.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{}}}],["enummoduletype.theaterinternalservicemoduleinstance",{"_index":3315,"title":{},"body":{"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{}}}],["enummoduletype.theatermoduleinstance",{"_index":3319,"title":{},"body":{"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["enummoduletypedescription",{"_index":1408,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"miscellaneous/enumerations.html":{}}}],["enumnodetype",{"_index":1391,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/ExportModule.html":{},"components/HostComponent.html":{},"classes/HostNode.html":{},"components/NetworkComponent.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"components/SubnetComponent.html":{},"classes/SubnetNode.html":{},"miscellaneous/enumerations.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["enumnodetype.host",{"_index":1659,"title":{},"body":{"classes/ExportModule.html":{},"classes/HostNode.html":{},"classes/ReteHostInfo.html":{}}}],["enumnodetype.network",{"_index":1664,"title":{},"body":{"classes/ExportModule.html":{},"classes/NetworkNode.html":{},"classes/ReteNetworkInfo.html":{}}}],["enumnodetype.subnet",{"_index":1662,"title":{},"body":{"classes/ExportModule.html":{},"classes/ReteSubnetInfo.html":{},"classes/SubnetNode.html":{}}}],["enumnodetypedescription",{"_index":1396,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"miscellaneous/enumerations.html":{}}}],["environment",{"_index":304,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AttachmentsService.html":{},"injectables/FlavorService.html":{},"injectables/ModuleService.html":{},"injectables/ParseService.html":{},"injectables/TheaterService.html":{}}}],["environment.getallflavor",{"_index":1954,"title":{},"body":{"injectables/FlavorService.html":{}}}],["environment.getallflavor+'/'+id",{"_index":1962,"title":{},"body":{"injectables/FlavorService.html":{}}}],["environment.getallmodules",{"_index":2605,"title":{},"body":{"injectables/ModuleService.html":{}}}],["environment.getmoduleattachment(module_id",{"_index":609,"title":{},"body":{"injectables/AttachmentsService.html":{}}}],["environment.getmoduleinterfacesbymoduleid",{"_index":2611,"title":{},"body":{"injectables/ModuleService.html":{}}}],["environment.getmoduleshostsbytheateruuid",{"_index":2609,"title":{},"body":{"injectables/ModuleService.html":{}}}],["environment.gettheaterattachment(theater_id",{"_index":631,"title":{},"body":{"injectables/AttachmentsService.html":{}}}],["environment.gettheaterbyid",{"_index":3600,"title":{},"body":{"injectables/TheaterService.html":{}}}],["environment.gettheatermodulesbyuuid",{"_index":3602,"title":{},"body":{"injectables/TheaterService.html":{}}}],["environment.gmhhost",{"_index":2610,"title":{},"body":{"injectables/ModuleService.html":{}}}],["environment.mocked",{"_index":312,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/ParseService.html":{}}}],["eport",{"_index":1765,"title":{},"body":{"injectables/ExportService.html":{}}}],["ereditato",{"_index":353,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/DataInputCheck.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"classes/FlavorApplication.html":{},"classes/FlavorDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstance.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"classes/reteBasicModuleInfo.html":{}}}],["error",{"_index":330,"title":{},"body":{"modules/AppModule.html":{},"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DocsComponent.html":{},"classes/ElementIntoTheaterDTO.html":{},"injectables/FileService.html":{},"injectables/FlavorService.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"injectables/ModuleService.html":{},"classes/ModuleStatusDTO.html":{},"classes/SelectOption.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/SingleDataInputReturned.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"injectables/TheaterService.html":{},"classes/TypesCatalogueDTO.html":{}}}],["errore",{"_index":810,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["esclusiva",{"_index":427,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["esclusivamente",{"_index":2429,"title":{},"body":{"injectables/ModalService.html":{}}}],["esegue",{"_index":754,"title":{},"body":{"components/ComposerComponent.html":{},"components/DataInputComponent.html":{},"components/DataItemComponent.html":{},"injectables/ExportService.html":{},"components/HomeComponent.html":{},"components/ModalComponent.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"components/VisualizerComponent.html":{},"miscellaneous/functions.html":{}}}],["eseguire",{"_index":1209,"title":{},"body":{"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"components/DocsComponent.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"injectables/ModalService.html":{},"classes/NetworkNode.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["esporta",{"_index":2924,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["esportare",{"_index":2831,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["espresse",{"_index":1418,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"miscellaneous/enumerations.html":{}}}],["essa",{"_index":1182,"title":{},"body":{"components/DataInputV2Component.html":{},"injectables/ExportService.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"injectables/ModalService.html":{},"classes/NetworkNode.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"miscellaneous/functions.html":{}}}],["esserci",{"_index":561,"title":{},"body":{"classes/AreaExport.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"components/HomeComponent.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/SourceExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["essere",{"_index":765,"title":{},"body":{"components/ComposerComponent.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"injectables/ModalService.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"components/TabnavComponent.html":{},"components/VisualizerComponent.html":{}}}],["esso",{"_index":1751,"title":{},"body":{"classes/ExportModule.html":{},"classes/ModalButton.html":{},"classes/ModalItem.html":{},"classes/PerseDataForModuleVisualizer.html":{}}}],["estende",{"_index":1031,"title":{},"body":{"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{}}}],["ethernet",{"_index":3790,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["event",{"_index":1126,"title":{},"body":{"components/DataInputComponent.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"components/UnderbarComponent.html":{}}}],["event.d.ts",{"_index":3865,"title":{},"body":{"index.html":{}}}],["event.target.files[0",{"_index":1907,"title":{},"body":{"injectables/FileService.html":{}}}],["eventemitter",{"_index":1088,"title":{},"body":{"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/OffcanvasComponent.html":{},"components/UnderbarComponent.html":{}}}],["example",{"_index":1809,"title":{},"body":{"injectables/ExportService.html":{}}}],["exclamation",{"_index":3787,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["execute",{"_index":3893,"title":{},"body":{"index.html":{}}}],["exists",{"_index":2958,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["exit",{"_index":1080,"title":{},"body":{"components/DataInputComponent.html":{}}}],["exitstatus",{"_index":1051,"title":{},"body":{"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{}}}],["expectedinstancetype",{"_index":488,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["export",{"_index":34,"title":{},"body":{"classes/Aoption.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"injectables/AttachmentsService.html":{},"injectables/AuthGuard.html":{},"classes/BlueprintFileDTO.html":{},"classes/BorderNetworkDTO.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"components/ControlTemplate.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputReturnedV2.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/DeployInstanceDTO.html":{},"components/DocsComponent.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"classes/FlavorApplication.html":{},"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"injectables/FlavorService.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"classes/HostModuleDTO.html":{},"classes/HostNode.html":{},"classes/HostPortModuleDTO.html":{},"components/HowToUseComponent.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModalButton.html":{},"components/ModalComponent.html":{},"classes/ModalItem.html":{},"injectables/ModalService.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"injectables/ModuleService.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"interfaces/ModuleTopology.html":{},"classes/NameMappingDTO.html":{},"components/NavbarComponent.html":{},"classes/NavbarElement.html":{},"components/NavbarElementComponent.html":{},"classes/NavbarItem.html":{},"classes/NetOSRouterDTO.html":{},"components/NetworkComponent.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkDTO.html":{},"classes/NetworkNode.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/NodeTopologyElement.html":{},"components/OffcanvasComponent.html":{},"classes/PageableDTO.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SelectOption.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/SingleDataInputReturned.html":{},"classes/SortDTO.html":{},"classes/SourceExport.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"classes/StatisticItemDTO.html":{},"injectables/StorageService.html":{},"components/SubnetComponent.html":{},"classes/SubnetDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"components/TabnavComponent.html":{},"classes/TabnavElement.html":{},"classes/TabnavItem.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"injectables/TheaterService.html":{},"classes/TheaterSimpleData.html":{},"interfaces/TheaterTopology.html":{},"classes/TheatreStatusDTO.html":{},"injectables/TokenService.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/TypesCatalogueDTO.html":{},"components/UnderbarComponent.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["exportmodule",{"_index":1569,"title":{"classes/ExportModule.html":{}},"body":{"classes/ExportModule.html":{},"injectables/ExportService.html":{}}}],["exportmodule(module",{"_index":1812,"title":{},"body":{"injectables/ExportService.html":{}}}],["exportmoduletojson",{"_index":1771,"title":{},"body":{"injectables/ExportService.html":{}}}],["exportmoduletojson(module",{"_index":1778,"title":{},"body":{"injectables/ExportService.html":{}}}],["exportmoduletoyaml",{"_index":1772,"title":{},"body":{"injectables/ExportService.html":{}}}],["exportmoduletoyaml(module",{"_index":1781,"title":{},"body":{"injectables/ExportService.html":{}}}],["exports",{"_index":218,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["exportservice",{"_index":1762,"title":{"injectables/ExportService.html":{}},"body":{"injectables/ExportService.html":{}}}],["exporttheater",{"_index":1788,"title":{"classes/ExportTheater.html":{}},"body":{"injectables/ExportService.html":{},"classes/ExportTheater.html":{}}}],["exporttheater(theater",{"_index":1816,"title":{},"body":{"injectables/ExportService.html":{}}}],["exporttheatertojson",{"_index":1773,"title":{},"body":{"injectables/ExportService.html":{}}}],["exporttheatertojson(theater",{"_index":1784,"title":{},"body":{"injectables/ExportService.html":{}}}],["exporttheatertoyaml",{"_index":1774,"title":{},"body":{"injectables/ExportService.html":{}}}],["exporttheatertoyaml(theater",{"_index":1786,"title":{},"body":{"injectables/ExportService.html":{}}}],["exporttojson",{"_index":1775,"title":{},"body":{"injectables/ExportService.html":{}}}],["exporttojson(fn",{"_index":1789,"title":{},"body":{"injectables/ExportService.html":{}}}],["exporttoyaml",{"_index":1776,"title":{},"body":{"injectables/ExportService.html":{}}}],["exporttoyaml(fn",{"_index":1795,"title":{},"body":{"injectables/ExportService.html":{}}}],["extends",{"_index":347,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"injectables/AuthGuard.html":{},"interfaces/CommonModule.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"components/ControlTemplate.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/FlavorApplication.html":{},"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"classes/GenericParameterDTO.html":{},"components/HostComponent.html":{},"classes/HostNode.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"interfaces/ModuleTopology.html":{},"components/NetworkComponent.html":{},"classes/NetworkNode.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SelectOption.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/SingleDataInputReturned.html":{},"classes/StatisticItemDTO.html":{},"components/SubnetComponent.html":{},"classes/SubnetNode.html":{},"classes/TagTIP.html":{},"classes/TheaterApplication.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/TypesCatalogueDTO.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{},"classes/_Control.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["external",{"_index":1414,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"components/NetworkComponent.html":{},"miscellaneous/enumerations.html":{}}}],["external_virtual_machine",{"_index":1443,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"miscellaneous/enumerations.html":{}}}],["externalinterfacename",{"_index":2713,"title":{},"body":{"classes/NetworkNode.html":{},"classes/ReteNetworkInfo.html":{}}}],["externalinterfacetype",{"_index":2714,"title":{},"body":{"classes/NetworkNode.html":{},"classes/ReteNetworkInfo.html":{}}}],["externalvirtualmachine",{"_index":1406,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/EmptyModuleInfo.html":{},"miscellaneous/enumerations.html":{}}}],["f.cpu",{"_index":3070,"title":{},"body":{"classes/PerseDataForModuleComposer.html":{}}}],["f.disk",{"_index":3072,"title":{},"body":{"classes/PerseDataForModuleComposer.html":{}}}],["f.name",{"_index":3069,"title":{},"body":{"classes/PerseDataForModuleComposer.html":{}}}],["f.ram",{"_index":3071,"title":{},"body":{"classes/PerseDataForModuleComposer.html":{}}}],["f124",{"_index":2185,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["f9fafb24",{"_index":2060,"title":{},"body":{"components/HomeComponent.html":{}}}],["fa",{"_index":3066,"title":{},"body":{"classes/PerseDataForModuleComposer.html":{}}}],["fa.push",{"_index":3068,"title":{},"body":{"classes/PerseDataForModuleComposer.html":{}}}],["failed",{"_index":329,"title":{},"body":{"modules/AppModule.html":{}}}],["false",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"classes/ConstraintsMSD.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/ExportModule.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"components/NetworkComponent.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"components/OffcanvasComponent.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"components/TabnavComponent.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{}}}],["fam",{"_index":2195,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["family",{"_index":2194,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["fare",{"_index":2435,"title":{},"body":{"injectables/ModalService.html":{}}}],["fase",{"_index":2234,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"injectables/ModalService.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["fatto",{"_index":1672,"title":{},"body":{"classes/ExportModule.html":{}}}],["fetch",{"_index":2848,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["fetching",{"_index":2807,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["ff0000",{"_index":2193,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["fff",{"_index":2124,"title":{},"body":{"components/HomeComponent.html":{}}}],["ffffff5e",{"_index":2368,"title":{},"body":{"classes/ModalButton.html":{},"classes/ModalItem.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/Aoption.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"injectables/AttachmentsService.html":{},"injectables/AuthGuard.html":{},"classes/BlueprintFileDTO.html":{},"classes/BorderNetworkDTO.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"components/ControlTemplate.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputReturnedV2.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/DeployInstanceDTO.html":{},"components/DocsComponent.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"classes/FlavorApplication.html":{},"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"injectables/FlavorService.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"classes/HostModuleDTO.html":{},"classes/HostNode.html":{},"classes/HostPortModuleDTO.html":{},"components/HowToUseComponent.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModalButton.html":{},"components/ModalComponent.html":{},"classes/ModalItem.html":{},"injectables/ModalService.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"injectables/ModuleService.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"interfaces/ModuleTopology.html":{},"classes/NameMappingDTO.html":{},"components/NavbarComponent.html":{},"classes/NavbarElement.html":{},"components/NavbarElementComponent.html":{},"classes/NavbarItem.html":{},"classes/NetOSRouterDTO.html":{},"components/NetworkComponent.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkDTO.html":{},"classes/NetworkNode.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/NodeTopologyElement.html":{},"components/OffcanvasComponent.html":{},"classes/PageableDTO.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SelectOption.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/SingleDataInputReturned.html":{},"classes/SortDTO.html":{},"classes/SourceExport.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"classes/StatisticItemDTO.html":{},"injectables/StorageService.html":{},"components/SubnetComponent.html":{},"classes/SubnetDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"components/TabnavComponent.html":{},"classes/TabnavElement.html":{},"classes/TabnavItem.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"injectables/TheaterService.html":{},"classes/TheaterSimpleData.html":{},"interfaces/TheaterTopology.html":{},"classes/TheatreStatusDTO.html":{},"injectables/TokenService.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/TypesCatalogueDTO.html":{},"components/UnderbarComponent.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["filejson",{"_index":1977,"title":{},"body":{"components/HomeComponent.html":{}}}],["fileloaded",{"_index":1978,"title":{},"body":{"components/HomeComponent.html":{}}}],["filename",{"_index":1821,"title":{},"body":{"injectables/ExportService.html":{}}}],["filereader",{"_index":1908,"title":{},"body":{"injectables/FileService.html":{}}}],["filereader.onerror",{"_index":1920,"title":{},"body":{"injectables/FileService.html":{}}}],["filereader.onload",{"_index":1913,"title":{},"body":{"injectables/FileService.html":{}}}],["filereader.readastext(this.selectedfile",{"_index":1909,"title":{},"body":{"injectables/FileService.html":{}}}],["files",{"_index":3877,"title":{},"body":{"index.html":{}}}],["fileservice",{"_index":1885,"title":{"injectables/FileService.html":{}},"body":{"injectables/FileService.html":{},"components/HomeComponent.html":{}}}],["fill",{"_index":3797,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["filtraggio",{"_index":763,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["findnode",{"_index":1576,"title":{},"body":{"classes/ExportModule.html":{}}}],["findnode(name",{"_index":1607,"title":{},"body":{"classes/ExportModule.html":{}}}],["first",{"_index":479,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"injectables/ModalService.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["fix",{"_index":2826,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["fixare",{"_index":2890,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["fixed_parameters",{"_index":496,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["fixtheatername",{"_index":2809,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["fixtheatername(rowtheater",{"_index":2824,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["flag",{"_index":3887,"title":{},"body":{"index.html":{}}}],["flavor",{"_index":737,"title":{},"body":{"components/ComposerComponent.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{}}}],["flavorapplication",{"_index":453,"title":{"classes/FlavorApplication.html":{}},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["flavorbasicinfo",{"_index":376,"title":{"classes/FlavorBasicInfo.html":{}},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{}}}],["flavorbasicinfo:2",{"_index":1927,"title":{},"body":{"classes/FlavorApplication.html":{},"classes/FlavorDTO.html":{}}}],["flavorbasicinfo:3",{"_index":1928,"title":{},"body":{"classes/FlavorApplication.html":{},"classes/FlavorDTO.html":{}}}],["flavorbasicinfo:4",{"_index":1929,"title":{},"body":{"classes/FlavorApplication.html":{},"classes/FlavorDTO.html":{}}}],["flavordto",{"_index":1938,"title":{"classes/FlavorDTO.html":{}},"body":{"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"injectables/FlavorService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{}}}],["flavordto.foreach(f",{"_index":3067,"title":{},"body":{"classes/PerseDataForModuleComposer.html":{}}}],["flavorname",{"_index":454,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/HostNode.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["flavorservice",{"_index":1946,"title":{"injectables/FlavorService.html":{}},"body":{"injectables/FlavorService.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{}}}],["flex",{"_index":1501,"title":{},"body":{"components/DocsComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["flow",{"_index":1502,"title":{},"body":{"components/DocsComponent.html":{}}}],["fn",{"_index":1794,"title":{},"body":{"injectables/ExportService.html":{}}}],["fonr",{"_index":2790,"title":{},"body":{"components/OffcanvasComponent.html":{},"components/TabnavComponent.html":{}}}],["font",{"_index":1007,"title":{},"body":{"components/ControlTemplate.html":{},"components/DataInputV2Component.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["footer",{"_index":2412,"title":{},"body":{"components/ModalComponent.html":{}}}],["force",{"_index":645,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["foreach",{"_index":1689,"title":{},"body":{"classes/ExportModule.html":{}}}],["form",{"_index":1071,"title":{},"body":{"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/HomeComponent.html":{}}}],["formato",{"_index":1572,"title":{},"body":{"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/ParseService.html":{}}}],["formcontrol",{"_index":1101,"title":{},"body":{"components/DataInputComponent.html":{}}}],["formelementcomposer",{"_index":1979,"title":{},"body":{"components/HomeComponent.html":{}}}],["formelementmodal",{"_index":1980,"title":{},"body":{"components/HomeComponent.html":{}}}],["formelementvisualizer",{"_index":1981,"title":{},"body":{"components/HomeComponent.html":{}}}],["formgroup",{"_index":1100,"title":{},"body":{"components/DataInputComponent.html":{}}}],["formsmodule",{"_index":298,"title":{},"body":{"modules/AppModule.html":{}}}],["formtype",{"_index":1170,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["fornire",{"_index":2884,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["fornisce",{"_index":2633,"title":{},"body":{"components/NavbarComponent.html":{}}}],["forniti",{"_index":1603,"title":{},"body":{"classes/ExportModule.html":{},"classes/ExportTheater.html":{}}}],["fornito",{"_index":1586,"title":{},"body":{"classes/ExportModule.html":{},"classes/ExportTheater.html":{}}}],["found",{"_index":1134,"title":{},"body":{"components/DataInputComponent.html":{}}}],["four",{"_index":1385,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"miscellaneous/enumerations.html":{}}}],["full",{"_index":2729,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["full/mid",{"_index":2765,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["function",{"_index":967,"title":{},"body":{"components/ControlTemplate.html":{},"components/DataInputV2Component.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/_Control.html":{}}}],["functions",{"_index":3817,"title":{"miscellaneous/functions.html":{}},"body":{}}],["funzione",{"_index":753,"title":{},"body":{"components/ComposerComponent.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"components/NavbarComponent.html":{},"classes/NetworkNode.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"injectables/StorageService.html":{},"classes/SubnetNode.html":{},"components/TabnavComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"injectables/TokenService.html":{},"components/UnderbarComponent.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{},"components/VisualizerComponent.html":{},"miscellaneous/functions.html":{}}}],["funzioni",{"_index":760,"title":{},"body":{"components/ComposerComponent.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"components/VisualizerComponent.html":{},"miscellaneous/functions.html":{}}}],["funzone",{"_index":1609,"title":{},"body":{"classes/ExportModule.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{}}}],["further",{"_index":3898,"title":{},"body":{"index.html":{}}}],["future",{"_index":420,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/ConstraintsMSD.html":{},"classes/FlavorApplication.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleApplication.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstance.html":{},"classes/ModuleSimpleData.html":{},"interfaces/ModuleTopology.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/NodeTopologyElement.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["gateway",{"_index":716,"title":{},"body":{"classes/BorderNetworkDTO.html":{},"classes/NetOSRouterDTO.html":{},"classes/NetworkDTO.html":{},"classes/SubnetDTO.html":{}}}],["gateway_ip",{"_index":949,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/ExportModule.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["gear",{"_index":3801,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["genera",{"_index":2622,"title":{},"body":{"components/NavbarComponent.html":{}}}],["general",{"_index":110,"title":{},"body":{"components/AppComponent.html":{}}}],["generale",{"_index":2833,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["generali",{"_index":559,"title":{},"body":{"classes/AreaExport.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{},"classes/SourceExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["generare",{"_index":2277,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"miscellaneous/functions.html":{}}}],["generata",{"_index":1462,"title":{},"body":{"components/DocsComponent.html":{}}}],["generate",{"_index":3879,"title":{},"body":{"index.html":{}}}],["generated",{"_index":3858,"title":{},"body":{"index.html":{}}}],["generiche",{"_index":2420,"title":{},"body":{"injectables/ModalService.html":{}}}],["generici",{"_index":3651,"title":{},"body":{"components/UnderbarComponent.html":{}}}],["generico",{"_index":2371,"title":{},"body":{"components/ModalComponent.html":{},"components/OffcanvasComponent.html":{},"components/TabnavComponent.html":{}}}],["genericparameterdto",{"_index":490,"title":{"classes/GenericParameterDTO.html":{}},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["gestione",{"_index":1887,"title":{},"body":{"injectables/FileService.html":{},"components/HomeComponent.html":{},"injectables/ModalService.html":{},"injectables/TokenService.html":{}}}],["gestire",{"_index":1065,"title":{},"body":{"components/DataInputComponent.html":{},"components/DataItemComponent.html":{},"injectables/FileService.html":{}}}],["get_and_remove_theater_properties_from_blueprint",{"_index":2810,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["get_and_remove_theater_properties_from_blueprint(rowtheater",{"_index":2829,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["getallflavor",{"_index":1948,"title":{},"body":{"injectables/FlavorService.html":{}}}],["getallmodules",{"_index":2588,"title":{},"body":{"injectables/ModuleService.html":{}}}],["getallmodulespage",{"_index":2589,"title":{},"body":{"injectables/ModuleService.html":{}}}],["getallmodulespage(pageindex",{"_index":2595,"title":{},"body":{"injectables/ModuleService.html":{}}}],["getcheckbox",{"_index":1165,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["getdata",{"_index":3407,"title":{},"body":{"injectables/StorageService.html":{}}}],["getemptyhostinfo",{"_index":1554,"title":{},"body":{"classes/EmptyNodeInfo.html":{},"classes/HostNode.html":{},"classes/ReteHostInfo.html":{},"miscellaneous/functions.html":{}}}],["getemptynetworkinfo",{"_index":1556,"title":{},"body":{"classes/EmptyNodeInfo.html":{},"classes/NetworkNode.html":{},"classes/ReteNetworkInfo.html":{},"miscellaneous/functions.html":{}}}],["getemptynetworkinfo():retenetworkinfo",{"_index":2715,"title":{},"body":{"classes/NetworkNode.html":{},"classes/ReteNetworkInfo.html":{}}}],["getemptyretemirroringmoduleinstanceinfo",{"_index":1520,"title":{},"body":{"classes/EmptyModuleInfo.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"miscellaneous/functions.html":{}}}],["getemptyretetheaterinternalservicemoduleinstanceinfo",{"_index":1522,"title":{},"body":{"classes/EmptyModuleInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"miscellaneous/functions.html":{}}}],["getemptyretetheatermoduleinstanceinfo",{"_index":1521,"title":{},"body":{"classes/EmptyModuleInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/TheaterModuleInstanceNode.html":{},"miscellaneous/functions.html":{}}}],["getemptysubnetinfo",{"_index":1555,"title":{},"body":{"classes/EmptyNodeInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/SubnetNode.html":{},"miscellaneous/functions.html":{}}}],["getfile",{"_index":1892,"title":{},"body":{"injectables/FileService.html":{}}}],["getflavorbyid",{"_index":1949,"title":{},"body":{"injectables/FlavorService.html":{}}}],["getflavorbyid(id",{"_index":1952,"title":{},"body":{"injectables/FlavorService.html":{}}}],["getheaders",{"_index":3612,"title":{},"body":{"injectables/TokenService.html":{}}}],["gethostexport",{"_index":1577,"title":{},"body":{"classes/ExportModule.html":{}}}],["gethostexport(node",{"_index":1614,"title":{},"body":{"classes/ExportModule.html":{}}}],["gethttpgetoption",{"_index":3613,"title":{},"body":{"injectables/TokenService.html":{}}}],["getmainmoduledetails",{"_index":3074,"title":{},"body":{"classes/PerseDataForModuleVisualizer.html":{}}}],["getmainmoduledetails(module",{"_index":3081,"title":{},"body":{"classes/PerseDataForModuleVisualizer.html":{}}}],["getmainmoduleinterfaces",{"_index":3075,"title":{},"body":{"classes/PerseDataForModuleVisualizer.html":{}}}],["getmainmoduleinterfaces(module",{"_index":3084,"title":{},"body":{"classes/PerseDataForModuleVisualizer.html":{}}}],["getmainmodulenodes",{"_index":3076,"title":{},"body":{"classes/PerseDataForModuleVisualizer.html":{}}}],["getmainmodulenodes(module",{"_index":3088,"title":{},"body":{"classes/PerseDataForModuleVisualizer.html":{}}}],["getmainmoduletopology",{"_index":3077,"title":{},"body":{"classes/PerseDataForModuleVisualizer.html":{}}}],["getmainmoduletopology(moduleinfo",{"_index":3090,"title":{},"body":{"classes/PerseDataForModuleVisualizer.html":{}}}],["getmodal",{"_index":2439,"title":{},"body":{"injectables/ModalService.html":{}}}],["getmoduleattachment",{"_index":585,"title":{},"body":{"injectables/AttachmentsService.html":{}}}],["getmoduleattachment(module_id",{"_index":591,"title":{},"body":{"injectables/AttachmentsService.html":{}}}],["getmodulebyid",{"_index":2590,"title":{},"body":{"injectables/ModuleService.html":{},"classes/PerseDataForModuleVisualizer.html":{}}}],["getmodulebyid(id",{"_index":2598,"title":{},"body":{"injectables/ModuleService.html":{}}}],["getmoduleconnection",{"_index":2811,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["getmoduleconnection(theater",{"_index":2834,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["getmoduledict",{"_index":2812,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["getmoduledict(modules",{"_index":2836,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["getmoduleexport",{"_index":1578,"title":{},"body":{"classes/ExportModule.html":{}}}],["getmodulehostbytheateruuid",{"_index":2591,"title":{},"body":{"injectables/ModuleService.html":{}}}],["getmodulehostbytheateruuid(theater_uuid",{"_index":2600,"title":{},"body":{"injectables/ModuleService.html":{}}}],["getmoduleinstanceexport",{"_index":1830,"title":{},"body":{"classes/ExportTheater.html":{}}}],["getmoduleinstanceexport(module",{"_index":1836,"title":{},"body":{"classes/ExportTheater.html":{}}}],["getmoduleinterfacesbymoduleid",{"_index":2592,"title":{},"body":{"injectables/ModuleService.html":{}}}],["getmoduleinterfacesbymoduleid(module_id",{"_index":2603,"title":{},"body":{"injectables/ModuleService.html":{}}}],["getmodulesdetails",{"_index":2813,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["getmodulesdetails(modules",{"_index":2840,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["getmodulesinterfaces",{"_index":2814,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["getmodulesinterfaces(modules",{"_index":2846,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["getmodulesnodes",{"_index":2815,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["getmodulesnodes(modules",{"_index":2849,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["getmodulestopology",{"_index":2816,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["getmodulestopology(modulesinfo",{"_index":2851,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["getnetworkexport",{"_index":1579,"title":{},"body":{"classes/ExportModule.html":{}}}],["getnetworkexport(network",{"_index":1632,"title":{},"body":{"classes/ExportModule.html":{}}}],["getselection",{"_index":1166,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["getshow",{"_index":2398,"title":{},"body":{"components/ModalComponent.html":{},"components/OffcanvasComponent.html":{}}}],["getspinner",{"_index":3386,"title":{},"body":{"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{}}}],["getsubnetexport",{"_index":1580,"title":{},"body":{"classes/ExportModule.html":{}}}],["getsubnetexport(subnet",{"_index":1635,"title":{},"body":{"classes/ExportModule.html":{}}}],["gettext",{"_index":1167,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["gettheaterattachment",{"_index":586,"title":{},"body":{"injectables/AttachmentsService.html":{}}}],["gettheaterattachment(theater_id",{"_index":596,"title":{},"body":{"injectables/AttachmentsService.html":{}}}],["gettheaterexport",{"_index":1831,"title":{},"body":{"classes/ExportTheater.html":{}}}],["gettheaterinfobyid",{"_index":3593,"title":{},"body":{"injectables/TheaterService.html":{}}}],["gettheaterinfobyid(theater_id",{"_index":3596,"title":{},"body":{"injectables/TheaterService.html":{}}}],["gettheatermodulesbyuuid",{"_index":3594,"title":{},"body":{"injectables/TheaterService.html":{}}}],["gettheatermodulesbyuuid(theater_uuid",{"_index":3598,"title":{},"body":{"injectables/TheaterService.html":{}}}],["getting",{"_index":873,"title":{"index.html":{}},"body":{"components/ComposerComponent.html":{}}}],["gettoken",{"_index":3614,"title":{},"body":{"injectables/TokenService.html":{}}}],["getvalue",{"_index":1237,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["gi",{"_index":2858,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["giusta",{"_index":1192,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["gli",{"_index":399,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"components/DataInputComponent.html":{},"classes/FlavorApplication.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"components/NavbarComponent.html":{},"classes/NetworkNode.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SimpleModuleApplication.html":{},"classes/SubnetNode.html":{},"classes/TheaterApplication.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"interfaces/TheaterTopology.html":{},"injectables/TokenService.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"components/UnderbarComponent.html":{},"miscellaneous/functions.html":{}}}],["global",{"_index":111,"title":{},"body":{"components/AppComponent.html":{}}}],["go",{"_index":883,"title":{},"body":{"components/ComposerComponent.html":{},"components/HomeComponent.html":{},"components/VisualizerComponent.html":{},"index.html":{}}}],["goes",{"_index":542,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["gohome",{"_index":741,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["gradient(rgba(15",{"_index":2098,"title":{},"body":{"components/HomeComponent.html":{}}}],["grafico",{"_index":3905,"title":{},"body":{"modules.html":{}}}],["groove",{"_index":2700,"title":{},"body":{"components/NetworkComponent.html":{}}}],["group",{"_index":482,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["grow",{"_index":1507,"title":{},"body":{"components/DocsComponent.html":{}}}],["guardare",{"_index":1676,"title":{},"body":{"classes/ExportModule.html":{}}}],["h",{"_index":2939,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["h[key",{"_index":2945,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["ha",{"_index":721,"title":{},"body":{"components/ComposerComponent.html":{},"components/DataInputV2Component.html":{},"components/DocsComponent.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"classes/NetworkNode.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"injectables/TokenService.html":{},"components/VisualizerComponent.html":{},"miscellaneous/functions.html":{}}}],["hanno",{"_index":2009,"title":{},"body":{"components/HomeComponent.html":{}}}],["hard",{"_index":2111,"title":{},"body":{"components/HomeComponent.html":{}}}],["hasfile",{"_index":738,"title":{},"body":{"components/ComposerComponent.html":{}}}],["hasmultipletag",{"_index":3457,"title":{},"body":{"components/TabnavComponent.html":{}}}],["hasproblem",{"_index":739,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["hasquery",{"_index":2214,"title":{},"body":{"classes/HostModuleDTO.html":{},"classes/HostPortModuleDTO.html":{}}}],["hdd",{"_index":3799,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["header",{"_index":3632,"title":{},"body":{"injectables/TokenService.html":{}}}],["headers",{"_index":1488,"title":{},"body":{"components/DocsComponent.html":{},"injectables/TokenService.html":{}}}],["height",{"_index":1499,"title":{},"body":{"components/DocsComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["help",{"_index":3899,"title":{},"body":{"index.html":{}}}],["hidden",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/DataItemComponent.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/VisualizerComponent.html":{}}}],["hide",{"_index":2767,"title":{},"body":{"components/OffcanvasComponent.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{}}}],["hide/show",{"_index":2464,"title":{},"body":{"injectables/ModalService.html":{}}}],["history",{"_index":3238,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"dependencies.html":{}}}],["historyplugin",{"_index":3237,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["hn",{"_index":2978,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["home",{"_index":339,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ComposerComponent.html":{},"components/HomeComponent.html":{},"components/NavbarElementComponent.html":{},"components/VisualizerComponent.html":{}}}],["home'},{'name",{"_index":165,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["home.component.html",{"_index":1973,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.sass",{"_index":1972,"title":{},"body":{"components/HomeComponent.html":{}}}],["homecomponent",{"_index":164,"title":{"components/HomeComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"overview.html":{}}}],["host",{"_index":1392,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/EmptyNodeInfo.html":{},"classes/HostNode.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteHostInfo.html":{},"classes/SourceExport.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["host.component.html",{"_index":2147,"title":{},"body":{"components/HostComponent.html":{}}}],["host.component.sass",{"_index":2146,"title":{},"body":{"components/HostComponent.html":{}}}],["host/hostnode",{"_index":1562,"title":{},"body":{"classes/EmptyNodeInfo.html":{}}}],["host:string",{"_index":577,"title":{},"body":{"classes/AreaExport.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesTSD.html":{},"classes/SourceExport.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{}}}],["host_name",{"_index":2982,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["host_number",{"_index":392,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/ReteConnection.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["hostcomponent",{"_index":166,"title":{"components/HostComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"classes/HostNode.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"classes/ReteHostInfo.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"overview.html":{}}}],["hostdto",{"_index":3837,"title":{},"body":{"miscellaneous/functions.html":{}}}],["hosticon",{"_index":2148,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"miscellaneous/enumerations.html":{}}}],["hosticon=hosticon",{"_index":2335,"title":{},"body":{"components/MirroringModuleInstanceComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["hostmoduledto",{"_index":378,"title":{"classes/HostModuleDTO.html":{}},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/HostModuleDTO.html":{},"classes/HostPortModuleDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"injectables/ModuleService.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"miscellaneous/functions.html":{}}}],["hostname",{"_index":445,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["hostnode",{"_index":1561,"title":{"classes/HostNode.html":{}},"body":{"classes/EmptyNodeInfo.html":{},"classes/HostNode.html":{},"classes/ReteHostInfo.html":{},"miscellaneous/functions.html":{}}}],["hostos1",{"_index":1376,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"miscellaneous/enumerations.html":{}}}],["hostos2",{"_index":1378,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"miscellaneous/enumerations.html":{}}}],["hostos3",{"_index":1380,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"miscellaneous/enumerations.html":{}}}],["hostportmoduledto",{"_index":2218,"title":{"classes/HostPortModuleDTO.html":{}},"body":{"classes/HostModuleDTO.html":{},"classes/HostPortModuleDTO.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["hosts",{"_index":391,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["hover",{"_index":2190,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["howtousecomponent",{"_index":167,"title":{"components/HowToUseComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"overview.html":{}}}],["html",{"_index":142,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["htmlelement",{"_index":2645,"title":{},"body":{"components/NavbarComponent.html":{}}}],["htmlinputelement",{"_index":1119,"title":{},"body":{"components/DataInputComponent.html":{}}}],["http",{"_index":590,"title":{},"body":{"injectables/AttachmentsService.html":{},"components/DocsComponent.html":{},"injectables/FlavorService.html":{},"injectables/ModuleService.html":{},"injectables/TheaterService.html":{}}}],["http://localhost:4200",{"_index":3874,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":588,"title":{},"body":{"injectables/AttachmentsService.html":{},"components/DocsComponent.html":{},"injectables/FlavorService.html":{},"injectables/ModuleService.html":{},"injectables/TheaterService.html":{}}}],["httpclientmodule",{"_index":272,"title":{},"body":{"modules/AppModule.html":{}}}],["httpgetoption",{"_index":3610,"title":{},"body":{"injectables/TokenService.html":{}}}],["httpheaders",{"_index":1486,"title":{},"body":{"components/DocsComponent.html":{},"injectables/TokenService.html":{}}}],["httpheaders().set('content",{"_index":1489,"title":{},"body":{"components/DocsComponent.html":{}}}],["httpoption",{"_index":3633,"title":{},"body":{"injectables/TokenService.html":{}}}],["httpresponse",{"_index":599,"title":{},"body":{"injectables/AttachmentsService.html":{}}}],["i.length",{"_index":2289,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["i.network.name",{"_index":1749,"title":{},"body":{"classes/ExportModule.html":{}}}],["i.nodename",{"_index":1748,"title":{},"body":{"classes/ExportModule.html":{}}}],["i.type",{"_index":1743,"title":{},"body":{"classes/ExportModule.html":{}}}],["i/o",{"_index":1621,"title":{},"body":{"classes/ExportModule.html":{}}}],["i[key",{"_index":2946,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["icon",{"_index":1334,"title":{},"body":{"components/DataItemComponent.html":{},"miscellaneous/enumerations.html":{}}}],["icona",{"_index":1333,"title":{},"body":{"components/DataItemComponent.html":{}}}],["iconclass",{"_index":3679,"title":{},"body":{"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{}}}],["icone",{"_index":2771,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["icons",{"_index":3743,"title":{},"body":{"dependencies.html":{}}}],["id",{"_index":49,"title":{},"body":{"classes/Aoption.html":{},"classes/AreaApplication.html":{},"classes/AreaDTO.html":{},"classes/BlueprintFileDTO.html":{},"classes/BorderNetworkDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/DeployInstanceDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"injectables/FlavorService.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"classes/HostModuleDTO.html":{},"classes/HostPortModuleDTO.html":{},"classes/ModalButton.html":{},"classes/ModalItem.html":{},"injectables/ModalService.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"injectables/ModuleService.html":{},"classes/ModuleStatusDTO.html":{},"classes/NameMappingDTO.html":{},"classes/NavbarElement.html":{},"classes/NavbarItem.html":{},"classes/NetOSRouterDTO.html":{},"classes/NetworkDTO.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/SelectOption.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/SingleDataInputReturned.html":{},"classes/StatisticItemDTO.html":{},"classes/SubnetDTO.html":{},"classes/TabnavElement.html":{},"classes/TabnavItem.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheatreStatusDTO.html":{},"classes/TypesCatalogueDTO.html":{},"components/UnderbarComponent.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{},"components/VisualizerComponent.html":{}}}],["idforchanges",{"_index":1171,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["if(!this.name",{"_index":852,"title":{},"body":{"components/ComposerComponent.html":{}}}],["if(!val",{"_index":2477,"title":{},"body":{"injectables/ModalService.html":{}}}],["if(this.selectedfile.type!==\"application/json",{"_index":1914,"title":{},"body":{"injectables/FileService.html":{}}}],["if(val.id===\"no",{"_index":2480,"title":{},"body":{"injectables/ModalService.html":{}}}],["if(val.id===\"yes",{"_index":2478,"title":{},"body":{"injectables/ModalService.html":{}}}],["iframe",{"_index":1497,"title":{},"body":{"components/DocsComponent.html":{}}}],["iframevisibility",{"_index":1469,"title":{},"body":{"components/DocsComponent.html":{}}}],["il",{"_index":12,"title":{},"body":{"classes/Aoption.html":{},"classes/AreaExport.html":{},"components/ComposerComponent.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"classes/HostNode.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModalButton.html":{},"classes/ModalItem.html":{},"injectables/ModalService.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleSimpleData.html":{},"components/NavbarComponent.html":{},"classes/NavbarElement.html":{},"classes/NavbarItem.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkNode.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SourceExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"components/TabnavComponent.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/TheaterSimpleData.html":{},"injectables/TokenService.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"modules.html":{}}}],["image",{"_index":2096,"title":{},"body":{"components/HomeComponent.html":{}}}],["images/bg",{"_index":2103,"title":{},"body":{"components/HomeComponent.html":{}}}],["images/node",{"_index":2113,"title":{},"body":{"components/HomeComponent.html":{}}}],["img",{"_index":2104,"title":{},"body":{"components/HomeComponent.html":{}}}],["immediatamente",{"_index":1841,"title":{},"body":{"classes/ExportTheater.html":{}}}],["imp",{"_index":885,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["implementa",{"_index":731,"title":{},"body":{"components/ComposerComponent.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DocsComponent.html":{},"classes/HostNode.html":{},"components/HowToUseComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"components/NavbarComponent.html":{},"classes/NetworkNode.html":{},"classes/NodeTopologyElement.html":{},"classes/SimpleModuleApplication.html":{},"classes/SubnetNode.html":{},"components/TabnavComponent.html":{},"classes/TheaterApplication.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{}}}],["implementazioni",{"_index":419,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["implements",{"_index":321,"title":{},"body":{"modules/AppModule.html":{},"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DocsComponent.html":{},"classes/FlavorApplication.html":{},"classes/HostNode.html":{},"components/HowToUseComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"components/NavbarComponent.html":{},"classes/NetworkNode.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SimpleModuleApplication.html":{},"classes/SubnetNode.html":{},"components/TabnavComponent.html":{},"classes/TheaterApplication.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{}}}],["import",{"_index":24,"title":{},"body":{"classes/Aoption.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"injectables/AttachmentsService.html":{},"injectables/AuthGuard.html":{},"classes/BlueprintFileDTO.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/DeployInstanceDTO.html":{},"components/DocsComponent.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"classes/FlavorApplication.html":{},"injectables/FlavorService.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"classes/HostModuleDTO.html":{},"classes/HostNode.html":{},"classes/HostPortModuleDTO.html":{},"components/HowToUseComponent.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModalButton.html":{},"components/ModalComponent.html":{},"classes/ModalItem.html":{},"injectables/ModalService.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"injectables/ModuleService.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"interfaces/ModuleTopology.html":{},"classes/NameMappingDTO.html":{},"components/NavbarComponent.html":{},"classes/NavbarElement.html":{},"components/NavbarElementComponent.html":{},"classes/NavbarItem.html":{},"components/NetworkComponent.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkNode.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/NodeTopologyElement.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/SourceExport.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"classes/StatisticItemDTO.html":{},"injectables/StorageService.html":{},"components/SubnetComponent.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"components/TabnavComponent.html":{},"classes/TabnavElement.html":{},"classes/TabnavItem.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"injectables/TheaterService.html":{},"classes/TheaterSimpleData.html":{},"interfaces/TheaterTopology.html":{},"classes/TheatreStatusDTO.html":{},"injectables/TokenService.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/TypesCatalogueDTO.html":{},"components/UnderbarComponent.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["importa",{"_index":217,"title":{},"body":{"modules/AppModule.html":{}}}],["important",{"_index":140,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/OffcanvasComponent.html":{},"components/TabnavComponent.html":{},"components/VisualizerComponent.html":{}}}],["importato",{"_index":792,"title":{},"body":{"components/ComposerComponent.html":{}}}],["importing",{"_index":1888,"title":{},"body":{"injectables/FileService.html":{}}}],["imports",{"_index":320,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaExport.html":{},"classes/BlueprintFileDTO.html":{},"interfaces/CommonModule.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/DeployInstanceDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/FlavorApplication.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleApplication.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleSimpleData.html":{},"interfaces/ModuleTopology.html":{},"classes/NameMappingDTO.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/NodeTopologyElement.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/SourceExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagsExport.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{},"interfaces/TheaterTopology.html":{},"classes/TheatreStatusDTO.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["incoerenza",{"_index":2912,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["index",{"_index":1682,"title":{"index.html":{}},"body":{"classes/ExportModule.html":{},"components/HostComponent.html":{},"classes/HostNode.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"components/NetworkComponent.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"components/SubnetComponent.html":{},"classes/SubnetNode.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["index:string]:deployinstancedto",{"_index":696,"title":{},"body":{"classes/BlueprintFileDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/NameMappingDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TheaterDTO.html":{},"classes/TheatreStatusDTO.html":{}}}],["index_selected",{"_index":1267,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["indexc",{"_index":1740,"title":{},"body":{"classes/ExportModule.html":{}}}],["indexmodulecomponent",{"_index":1542,"title":{},"body":{"classes/EmptyModuleInfo.html":{},"miscellaneous/enumerations.html":{}}}],["indexnodecomponent",{"_index":1567,"title":{},"body":{"classes/EmptyNodeInfo.html":{},"miscellaneous/enumerations.html":{}}}],["indexp",{"_index":1741,"title":{},"body":{"classes/ExportModule.html":{}}}],["indica",{"_index":785,"title":{},"body":{"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"components/DocsComponent.html":{},"injectables/ExportService.html":{},"components/HomeComponent.html":{},"classes/ModalButton.html":{},"classes/ModalItem.html":{},"injectables/ModalService.html":{},"components/OffcanvasComponent.html":{},"components/TabnavComponent.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{},"miscellaneous/enumerations.html":{}}}],["indicano",{"_index":829,"title":{},"body":{"components/ComposerComponent.html":{}}}],["indicare",{"_index":1363,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"miscellaneous/enumerations.html":{}}}],["indicato",{"_index":2278,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"miscellaneous/functions.html":{}}}],["indicatrici",{"_index":1420,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"miscellaneous/enumerations.html":{}}}],["indicazione",{"_index":1437,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"miscellaneous/enumerations.html":{}}}],["indice",{"_index":14,"title":{},"body":{"classes/Aoption.html":{},"components/AppComponent.html":{},"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"injectables/AttachmentsService.html":{},"injectables/AuthGuard.html":{},"classes/BlueprintFileDTO.html":{},"classes/BorderNetworkDTO.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"components/ControlTemplate.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputReturnedV2.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/DeployInstanceDTO.html":{},"components/DocsComponent.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"classes/FlavorApplication.html":{},"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"injectables/FlavorService.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"classes/HostModuleDTO.html":{},"classes/HostNode.html":{},"classes/HostPortModuleDTO.html":{},"components/HowToUseComponent.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModalButton.html":{},"components/ModalComponent.html":{},"classes/ModalItem.html":{},"injectables/ModalService.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"injectables/ModuleService.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"interfaces/ModuleTopology.html":{},"classes/NameMappingDTO.html":{},"components/NavbarComponent.html":{},"classes/NavbarElement.html":{},"classes/NavbarItem.html":{},"classes/NetOSRouterDTO.html":{},"components/NetworkComponent.html":{},"classes/NetworkDTO.html":{},"classes/NetworkNode.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/NodeTopologyElement.html":{},"components/OffcanvasComponent.html":{},"classes/PageableDTO.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SelectOption.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/SingleDataInputReturned.html":{},"classes/SortDTO.html":{},"classes/SourceExport.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"classes/StatisticItemDTO.html":{},"injectables/StorageService.html":{},"components/SubnetComponent.html":{},"classes/SubnetDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"components/TabnavComponent.html":{},"classes/TabnavElement.html":{},"classes/TabnavItem.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"injectables/TheaterService.html":{},"classes/TheaterSimpleData.html":{},"interfaces/TheaterTopology.html":{},"classes/TheatreStatusDTO.html":{},"injectables/TokenService.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/TypesCatalogueDTO.html":{},"components/UnderbarComponent.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["indiretto",{"_index":1217,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/Aoption.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"injectables/AttachmentsService.html":{},"injectables/AuthGuard.html":{},"classes/BlueprintFileDTO.html":{},"classes/BorderNetworkDTO.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"components/ControlTemplate.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputReturnedV2.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/DeployInstanceDTO.html":{},"components/DocsComponent.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"classes/FlavorApplication.html":{},"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"injectables/FlavorService.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"classes/HostModuleDTO.html":{},"classes/HostNode.html":{},"classes/HostPortModuleDTO.html":{},"components/HowToUseComponent.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModalButton.html":{},"components/ModalComponent.html":{},"classes/ModalItem.html":{},"injectables/ModalService.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"injectables/ModuleService.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"interfaces/ModuleTopology.html":{},"classes/NameMappingDTO.html":{},"components/NavbarComponent.html":{},"classes/NavbarElement.html":{},"components/NavbarElementComponent.html":{},"classes/NavbarItem.html":{},"classes/NetOSRouterDTO.html":{},"components/NetworkComponent.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkDTO.html":{},"classes/NetworkNode.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/NodeTopologyElement.html":{},"components/OffcanvasComponent.html":{},"classes/PageableDTO.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SelectOption.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/SingleDataInputReturned.html":{},"classes/SortDTO.html":{},"classes/SourceExport.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"classes/StatisticItemDTO.html":{},"injectables/StorageService.html":{},"components/SubnetComponent.html":{},"classes/SubnetDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"components/TabnavComponent.html":{},"classes/TabnavElement.html":{},"classes/TabnavItem.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"injectables/TheaterService.html":{},"classes/TheaterSimpleData.html":{},"interfaces/TheaterTopology.html":{},"classes/TheatreStatusDTO.html":{},"injectables/TokenService.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/TypesCatalogueDTO.html":{},"components/UnderbarComponent.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["informazione",{"_index":2845,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["informazioni",{"_index":558,"title":{},"body":{"classes/AreaExport.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/SourceExport.html":{},"injectables/StorageService.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"miscellaneous/enumerations.html":{}}}],["informmazioni",{"_index":2025,"title":{},"body":{"components/HomeComponent.html":{}}}],["infra",{"_index":2679,"title":{},"body":{"components/NavbarElementComponent.html":{}}}],["infracreate",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["infrastructure_parameters",{"_index":498,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["infrastructured",{"_index":2086,"title":{},"body":{"components/HomeComponent.html":{}}}],["ingrandisci",{"_index":210,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["ingresso",{"_index":1843,"title":{},"body":{"classes/ExportTheater.html":{}}}],["init",{"_index":325,"title":{},"body":{"modules/AppModule.html":{}}}],["initemptymoduleinstance",{"_index":3113,"title":{},"body":{"classes/PerseDataForTheaterComposer.html":{}}}],["initemptymoduleinstance(modules",{"_index":3125,"title":{},"body":{"classes/PerseDataForTheaterComposer.html":{}}}],["initializekeycloak",{"_index":270,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["initializekeycloak(keycloak",{"_index":3846,"title":{},"body":{"miscellaneous/functions.html":{}}}],["initmodule",{"_index":742,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["inittheater",{"_index":743,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["inittheaterafterfetch",{"_index":2817,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["inittheaterafterfetch(rowtheater",{"_index":2864,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["inizia",{"_index":1597,"title":{},"body":{"classes/ExportModule.html":{},"classes/ExportTheater.html":{}}}],["iniziale",{"_index":2257,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"miscellaneous/functions.html":{}}}],["inizializza",{"_index":2857,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["inizializzare",{"_index":3092,"title":{},"body":{"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["inizializzata",{"_index":1097,"title":{},"body":{"components/DataInputComponent.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{}}}],["inizializzato",{"_index":842,"title":{},"body":{"components/ComposerComponent.html":{}}}],["inizializzazione",{"_index":761,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["inizializzazioni",{"_index":1099,"title":{},"body":{"components/DataInputComponent.html":{}}}],["injectable",{"_index":580,"title":{"injectables/AttachmentsService.html":{},"injectables/AuthGuard.html":{},"injectables/ExportService.html":{},"injectables/FileService.html":{},"injectables/FlavorService.html":{},"injectables/ModalService.html":{},"injectables/ModuleService.html":{},"injectables/ParseService.html":{},"injectables/SpinnerService.html":{},"injectables/StorageService.html":{},"injectables/TheaterService.html":{},"injectables/TokenService.html":{}},"body":{"injectables/AttachmentsService.html":{},"injectables/AuthGuard.html":{},"injectables/ExportService.html":{},"injectables/FileService.html":{},"injectables/FlavorService.html":{},"injectables/ModalService.html":{},"injectables/ModuleService.html":{},"injectables/ParseService.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"injectables/StorageService.html":{},"injectables/TheaterService.html":{},"injectables/TokenService.html":{}}}],["injectables",{"_index":582,"title":{},"body":{"injectables/AttachmentsService.html":{},"injectables/AuthGuard.html":{},"injectables/ExportService.html":{},"injectables/FileService.html":{},"injectables/FlavorService.html":{},"injectables/ModalService.html":{},"injectables/ModuleService.html":{},"injectables/ParseService.html":{},"injectables/SpinnerService.html":{},"injectables/StorageService.html":{},"injectables/TheaterService.html":{},"injectables/TokenService.html":{},"overview.html":{}}}],["inline",{"_index":2205,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["input",{"_index":157,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AreaDTO.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"components/ControlTemplate.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputReturnedV2.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/ExportTheater.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"classes/HostNode.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"components/ModalComponent.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"classes/NetworkNode.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SelectOption.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/SingleDataInputReturned.html":{},"classes/StatisticItemDTO.html":{},"components/SubnetComponent.html":{},"classes/SubnetNode.html":{},"components/TabnavComponent.html":{},"classes/TabnavElement.html":{},"classes/TabnavItem.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/TypesCatalogueDTO.html":{},"components/UnderbarComponent.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{},"miscellaneous/enumerations.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["input'},{'name",{"_index":155,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["input.component",{"_index":291,"title":{},"body":{"modules/AppModule.html":{}}}],["input.component.html",{"_index":1078,"title":{},"body":{"components/DataInputComponent.html":{}}}],["input.component.sass",{"_index":1077,"title":{},"body":{"components/DataInputComponent.html":{}}}],["input.component.ts",{"_index":1062,"title":{},"body":{"components/DataInputComponent.html":{}}}],["input.component.ts:21",{"_index":1086,"title":{},"body":{"components/DataInputComponent.html":{}}}],["input.component.ts:27",{"_index":1089,"title":{},"body":{"components/DataInputComponent.html":{}}}],["input.component.ts:33",{"_index":1085,"title":{},"body":{"components/DataInputComponent.html":{}}}],["input.component.ts:48",{"_index":1095,"title":{},"body":{"components/DataInputComponent.html":{}}}],["input.component.ts:62",{"_index":1106,"title":{},"body":{"components/DataInputComponent.html":{}}}],["input.component.ts:85",{"_index":1091,"title":{},"body":{"components/DataInputComponent.html":{}}}],["input.component.ts:99",{"_index":1103,"title":{},"body":{"components/DataInputComponent.html":{}}}],["input.name",{"_index":2183,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["input.value",{"_index":2080,"title":{},"body":{"components/HomeComponent.html":{}}}],["input/data",{"_index":290,"title":{},"body":{"modules/AppModule.html":{},"components/DataInputComponent.html":{}}}],["input/datainputtype",{"_index":1239,"title":{},"body":{"components/DataInputV2Component.html":{},"components/HomeComponent.html":{}}}],["input/datainputtype.ts",{"_index":1015,"title":{},"body":{"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{}}}],["input/datainputtype.ts:14",{"_index":1022,"title":{},"body":{"classes/DataInput.html":{}}}],["input/datainputtype.ts:15",{"_index":1024,"title":{},"body":{"classes/DataInput.html":{}}}],["input/datainputtype.ts:16",{"_index":1028,"title":{},"body":{"classes/DataInput.html":{}}}],["input/datainputtype.ts:17",{"_index":1021,"title":{},"body":{"classes/DataInput.html":{}}}],["input/datainputtype.ts:18",{"_index":1020,"title":{},"body":{"classes/DataInput.html":{}}}],["input/datainputtype.ts:19",{"_index":1023,"title":{},"body":{"classes/DataInput.html":{}}}],["input/datainputtype.ts:27",{"_index":1152,"title":{},"body":{"classes/DataInputText.html":{}}}],["input/datainputtype.ts:35",{"_index":1149,"title":{},"body":{"classes/DataInputSelection.html":{}}}],["input/datainputtype.ts:36",{"_index":1150,"title":{},"body":{"classes/DataInputSelection.html":{}}}],["input/datainputtype.ts:37",{"_index":1151,"title":{},"body":{"classes/DataInputSelection.html":{}}}],["input/datainputtype.ts:45",{"_index":1055,"title":{},"body":{"classes/DataInputCheck.html":{}}}],["input/datainputtype.ts:53",{"_index":3334,"title":{},"body":{"classes/SelectOption.html":{}}}],["input/datainputtype.ts:54",{"_index":3333,"title":{},"body":{"classes/SelectOption.html":{}}}],["input/datainputtype.ts:55",{"_index":3332,"title":{},"body":{"classes/SelectOption.html":{}}}],["input/datainputtype.ts:6",{"_index":1136,"title":{},"body":{"classes/DataInputElement.html":{}}}],["input/datainputtype.ts:63",{"_index":1137,"title":{},"body":{"classes/DataInputReturned.html":{}}}],["input/datainputtype.ts:64",{"_index":1139,"title":{},"body":{"classes/DataInputReturned.html":{}}}],["input/datainputtype.ts:65",{"_index":1138,"title":{},"body":{"classes/DataInputReturned.html":{}}}],["input/datainputtype.ts:72",{"_index":3358,"title":{},"body":{"classes/SingleDataInputReturned.html":{}}}],["input/datainputtype.ts:73",{"_index":3359,"title":{},"body":{"classes/SingleDataInputReturned.html":{}}}],["input/datainputtype.ts:74",{"_index":3360,"title":{},"body":{"classes/SingleDataInputReturned.html":{}}}],["input/datainputtype.ts:75",{"_index":3361,"title":{},"body":{"classes/SingleDataInputReturned.html":{}}}],["input/output",{"_index":2259,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["input=\"input",{"_index":1370,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["inputdata",{"_index":1640,"title":{},"body":{"classes/ExportModule.html":{},"classes/ExportTheater.html":{}}}],["inputs",{"_index":2261,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["inserimento",{"_index":1591,"title":{},"body":{"classes/ExportModule.html":{}}}],["inserire",{"_index":2854,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["inserisco",{"_index":1738,"title":{},"body":{"classes/ExportModule.html":{}}}],["inseriti",{"_index":2859,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["inserito",{"_index":2873,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["inserted",{"_index":507,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["installare",{"_index":3868,"title":{},"body":{"index.html":{}}}],["instance",{"_index":2901,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["instance_parameters",{"_index":494,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["instanceof",{"_index":664,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["instanzia",{"_index":3123,"title":{},"body":{"classes/PerseDataForTheaterComposer.html":{}}}],["instanziamento",{"_index":2258,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["instanziare",{"_index":2236,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"miscellaneous/functions.html":{}}}],["intefracce",{"_index":3087,"title":{},"body":{"classes/PerseDataForModuleVisualizer.html":{}}}],["interfacce",{"_index":718,"title":{},"body":{"interfaces/CommonModule.html":{},"classes/ExportModule.html":{},"interfaces/ModuleTopology.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"interfaces/TheaterTopology.html":{},"interfaces/TopologyList.html":{},"overview.html":{}}}],["interfaccia",{"_index":1364,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"miscellaneous/enumerations.html":{}}}],["interface",{"_index":389,"title":{"interfaces/CommonModule.html":{},"interfaces/ModuleTopology.html":{},"interfaces/TheaterTopology.html":{},"interfaces/TopologyList.html":{}},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/ConstraintsMSD.html":{},"classes/ExportModule.html":{},"classes/FlavorApplication.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleApplication.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstance.html":{},"classes/ModuleSimpleData.html":{},"interfaces/ModuleTopology.html":{},"components/NetworkComponent.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/NodeTopologyElement.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["interface_constraints",{"_index":899,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/ExportModule.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["interface_networks",{"_index":924,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/ExportModule.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["interfaceconstraints",{"_index":902,"title":{"classes/InterfaceConstraints.html":{}},"body":{"classes/ConstraintsMSD.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["interfacenetworksconsumer",{"_index":927,"title":{"classes/InterfaceNetworksConsumer.html":{}},"body":{"classes/ConstraintsMSD.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["interfacenetworksprovider",{"_index":925,"title":{"classes/InterfaceNetworksProvider.html":{}},"body":{"classes/ConstraintsMSD.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["interfaceporttype",{"_index":1365,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/ExportModule.html":{},"classes/NetworkNode.html":{},"classes/ReteNetworkInfo.html":{},"miscellaneous/enumerations.html":{}}}],["interfaceporttype.consumer",{"_index":1744,"title":{},"body":{"classes/ExportModule.html":{}}}],["interfaceporttype.producer",{"_index":1745,"title":{},"body":{"classes/ExportModule.html":{}}}],["interfaces",{"_index":390,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaExport.html":{},"interfaces/CommonModule.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/ExportModule.html":{},"classes/FlavorApplication.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleApplication.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleSimpleData.html":{},"interfaces/ModuleTopology.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/SourceExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/TagsExport.html":{},"classes/TheaterApplication.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["internal",{"_index":1409,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"miscellaneous/enumerations.html":{}}}],["internal_theatre_service",{"_index":1441,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"miscellaneous/enumerations.html":{}}}],["invalid.\\n",{"_index":2959,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["inversa",{"_index":1433,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"miscellaneous/enumerations.html":{}}}],["ip_version",{"_index":947,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/ExportModule.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["ipversiontype",{"_index":1384,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"miscellaneous/enumerations.html":{}}}],["ir",{"_index":3221,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["isaccessallowed",{"_index":634,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["isaccessallowed(route",{"_index":636,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["isdhcp",{"_index":717,"title":{},"body":{"classes/BorderNetworkDTO.html":{},"classes/NetOSRouterDTO.html":{},"classes/NetworkDTO.html":{},"classes/ReteSubnetInfo.html":{},"classes/SubnetDTO.html":{},"classes/SubnetNode.html":{}}}],["isenabled",{"_index":1935,"title":{},"body":{"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{}}}],["isfull",{"_index":1305,"title":{},"body":{"components/DataItemComponent.html":{},"components/OffcanvasComponent.html":{}}}],["islocked",{"_index":510,"title":{},"body":{"classes/AreaDTO.html":{},"classes/BlueprintFileDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/NameMappingDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheatreStatusDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["ismodalactive",{"_index":1982,"title":{},"body":{"components/HomeComponent.html":{}}}],["istanze",{"_index":2870,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["istanziate",{"_index":825,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["isupdatetime",{"_index":1164,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["isvalid",{"_index":1050,"title":{},"body":{"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{}}}],["italic",{"_index":1282,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["item",{"_index":1297,"title":{},"body":{"components/DataItemComponent.html":{}}}],["item'},{'name",{"_index":161,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["item.component",{"_index":303,"title":{},"body":{"modules/AppModule.html":{}}}],["item.component.html",{"_index":1299,"title":{},"body":{"components/DataItemComponent.html":{}}}],["item.component.sass",{"_index":1298,"title":{},"body":{"components/DataItemComponent.html":{}}}],["item.component.ts",{"_index":1283,"title":{},"body":{"components/DataItemComponent.html":{}}}],["item.component.ts:21",{"_index":1315,"title":{},"body":{"components/DataItemComponent.html":{}}}],["item.component.ts:26",{"_index":1308,"title":{},"body":{"components/DataItemComponent.html":{}}}],["item.component.ts:31",{"_index":1311,"title":{},"body":{"components/DataItemComponent.html":{}}}],["item.component.ts:37",{"_index":1316,"title":{},"body":{"components/DataItemComponent.html":{}}}],["item.component.ts:40",{"_index":1332,"title":{},"body":{"components/DataItemComponent.html":{}}}],["item.component.ts:41",{"_index":1328,"title":{},"body":{"components/DataItemComponent.html":{}}}],["item.component.ts:42",{"_index":1307,"title":{},"body":{"components/DataItemComponent.html":{}}}],["item.component.ts:54",{"_index":1320,"title":{},"body":{"components/DataItemComponent.html":{}}}],["item.component.ts:63",{"_index":1322,"title":{},"body":{"components/DataItemComponent.html":{}}}],["item.data_appended",{"_index":1135,"title":{},"body":{"components/DataInputComponent.html":{}}}],["item.data_prepended",{"_index":1130,"title":{},"body":{"components/DataInputComponent.html":{}}}],["item.text",{"_index":1129,"title":{},"body":{"components/DataInputComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/TabnavComponent.html":{}}}],["item/data",{"_index":302,"title":{},"body":{"modules/AppModule.html":{},"components/DataItemComponent.html":{}}}],["itemclicked",{"_index":3654,"title":{},"body":{"components/UnderbarComponent.html":{}}}],["itemclicked(event",{"_index":3662,"title":{},"body":{"components/UnderbarComponent.html":{}}}],["items",{"_index":3251,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["itemselected",{"_index":2628,"title":{},"body":{"components/NavbarComponent.html":{},"components/UnderbarComponent.html":{}}}],["itemselected:eventemitter",{"_index":3666,"title":{},"body":{"components/UnderbarComponent.html":{}}}],["itera",{"_index":1604,"title":{},"body":{"classes/ExportModule.html":{},"classes/ExportTheater.html":{}}}],["jquery",{"_index":3745,"title":{},"body":{"dependencies.html":{}}}],["js",{"_index":3749,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":604,"title":{},"body":{"injectables/AttachmentsService.html":{},"components/ComposerComponent.html":{},"injectables/ExportService.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"dependencies.html":{}}}],["json.stringify(objectdata",{"_index":1827,"title":{},"body":{"injectables/ExportService.html":{}}}],["justify",{"_index":2093,"title":{},"body":{"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["karma",{"_index":3895,"title":{},"body":{"index.html":{}}}],["key",{"_index":982,"title":{},"body":{"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"classes/DataInputReturnedV2.html":{},"components/DataInputV2Component.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/_Control.html":{}}}],["key.tolowercase().includes(moduleinstance.properties.module.tolowercase",{"_index":2954,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["key:string",{"_index":1048,"title":{},"body":{"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{}}}],["keyboard",{"_index":3248,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["keycloak",{"_index":269,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthGuard.html":{},"dependencies.html":{},"miscellaneous/functions.html":{}}}],["keycloakangularmodule",{"_index":267,"title":{},"body":{"modules/AppModule.html":{}}}],["keycloakauthguard",{"_index":633,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["keycloakservice",{"_index":268,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthGuard.html":{},"miscellaneous/functions.html":{}}}],["keyframes",{"_index":2673,"title":{},"body":{"components/NavbarElementComponent.html":{}}}],["l'ambiente",{"_index":725,"title":{},"body":{"components/ComposerComponent.html":{}}}],["l'appcomponent",{"_index":2422,"title":{},"body":{"injectables/ModalService.html":{}}}],["l'application",{"_index":1802,"title":{},"body":{"injectables/ExportService.html":{}}}],["l'applicazione",{"_index":2866,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["l'autore",{"_index":2015,"title":{},"body":{"components/HomeComponent.html":{}}}],["l'editor",{"_index":3220,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["l'effettivo",{"_index":1210,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["l'elaborazione",{"_index":2366,"title":{},"body":{"classes/ModalButton.html":{},"classes/ModalItem.html":{}}}],["l'elemento",{"_index":851,"title":{},"body":{"components/ComposerComponent.html":{},"components/HomeComponent.html":{},"components/UnderbarComponent.html":{}}}],["l'estensione",{"_index":1798,"title":{},"body":{"injectables/ExportService.html":{}}}],["l'evento",{"_index":1318,"title":{},"body":{"components/DataItemComponent.html":{},"injectables/FileService.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/UnderbarComponent.html":{}}}],["l'export",{"_index":556,"title":{},"body":{"classes/AreaExport.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"injectables/ExportService.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/SourceExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["l'header",{"_index":3620,"title":{},"body":{"injectables/TokenService.html":{}}}],["l'hide",{"_index":2397,"title":{},"body":{"components/ModalComponent.html":{}}}],["l'html",{"_index":1478,"title":{},"body":{"components/DocsComponent.html":{}}}],["l'http",{"_index":3623,"title":{},"body":{"injectables/TokenService.html":{}}}],["l'id",{"_index":2037,"title":{},"body":{"components/HomeComponent.html":{},"components/TabnavComponent.html":{}}}],["l'indicazione",{"_index":1393,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"miscellaneous/enumerations.html":{}}}],["l'indice",{"_index":1537,"title":{},"body":{"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"miscellaneous/enumerations.html":{}}}],["l'instanziazione",{"_index":3130,"title":{},"body":{"classes/PerseDataForTheaterComposer.html":{}}}],["l'isieme",{"_index":2027,"title":{},"body":{"components/HomeComponent.html":{}}}],["l'observable",{"_index":3385,"title":{},"body":{"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{}}}],["l'occorrenza",{"_index":3002,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["l'operazione",{"_index":1093,"title":{},"body":{"components/DataInputComponent.html":{}}}],["l'opzione",{"_index":3040,"title":{},"body":{"injectables/ParseService.html":{}}}],["l'underbar",{"_index":3677,"title":{},"body":{"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{}}}],["l'unsibscribe",{"_index":2438,"title":{},"body":{"injectables/ModalService.html":{}}}],["l'update",{"_index":2386,"title":{},"body":{"components/ModalComponent.html":{},"components/OffcanvasComponent.html":{}}}],["la",{"_index":960,"title":{},"body":{"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"components/DocsComponent.html":{},"classes/ExportModule.html":{},"components/HomeComponent.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"components/NavbarComponent.html":{},"classes/NetworkNode.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SubnetNode.html":{},"components/TabnavComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"injectables/TokenService.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["label",{"_index":530,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["landing",{"_index":1968,"title":{},"body":{"components/HomeComponent.html":{},"components/NavbarElementComponent.html":{}}}],["large",{"_index":2134,"title":{},"body":{"components/HomeComponent.html":{}}}],["last",{"_index":473,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["lastmodifiedby",{"_index":511,"title":{},"body":{"classes/AreaDTO.html":{},"classes/BlueprintFileDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/NameMappingDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheatreStatusDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["lastmodifieddate",{"_index":512,"title":{},"body":{"classes/AreaDTO.html":{},"classes/BlueprintFileDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/NameMappingDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheatreStatusDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["le",{"_index":9,"title":{},"body":{"classes/Aoption.html":{},"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaExport.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"classes/FlavorApplication.html":{},"components/HomeComponent.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"injectables/ModalService.html":{},"classes/ModuleApplication.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleSimpleData.html":{},"interfaces/ModuleTopology.html":{},"components/NavbarComponent.html":{},"classes/NavbarElement.html":{},"components/NavbarElementComponent.html":{},"classes/NavbarItem.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteConnection.html":{},"classes/SelectOption.html":{},"classes/SimpleModuleApplication.html":{},"classes/SingleDataInputReturned.html":{},"classes/SourceExport.html":{},"injectables/StorageService.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"components/TabnavComponent.html":{},"classes/TagsExport.html":{},"classes/TheaterApplication.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{},"interfaces/TheaterTopology.html":{},"injectables/TokenService.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"components/VisualizerComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["left",{"_index":2200,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["legenda",{"_index":141,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["lg",{"_index":1326,"title":{},"body":{"components/DataItemComponent.html":{},"components/OffcanvasComponent.html":{}}}],["li",{"_index":2842,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["libreria",{"_index":961,"title":{},"body":{"components/ControlTemplate.html":{},"classes/_Control.html":{},"index.html":{}}}],["light",{"_index":2112,"title":{},"body":{"components/HomeComponent.html":{}}}],["lighten($node",{"_index":2191,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["line",{"_index":2208,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["linear",{"_index":2097,"title":{},"body":{"components/HomeComponent.html":{},"components/NavbarElementComponent.html":{}}}],["link",{"_index":608,"title":{},"body":{"injectables/AttachmentsService.html":{},"components/DataInputV2Component.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"injectables/FlavorService.html":{},"injectables/ModuleService.html":{},"injectables/TheaterService.html":{},"miscellaneous/enumerations.html":{}}}],["link:hover",{"_index":1280,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["linux",{"_index":1377,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"miscellaneous/enumerations.html":{}}}],["list",{"_index":1133,"title":{},"body":{"components/DataInputComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{}}}],["literal",{"_index":675,"title":{},"body":{"classes/BlueprintFileDTO.html":{},"classes/BorderNetworkDTO.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/DataInputReturned.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"classes/FlavorDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/NetOSRouterDTO.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesSSD.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterExport.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"classes/TypesCatalogueDTO.html":{},"classes/UnderbarItem.html":{},"classes/_Control.html":{},"miscellaneous/functions.html":{}}}],["livelli",{"_index":1286,"title":{},"body":{"components/DataItemComponent.html":{}}}],["lo",{"_index":118,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"components/HomeComponent.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"components/NavbarComponent.html":{},"classes/NetworkNode.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"components/VisualizerComponent.html":{},"miscellaneous/functions.html":{}}}],["loading",{"_index":769,"title":{},"body":{"components/ComposerComponent.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"components/VisualizerComponent.html":{}}}],["local_interface",{"_index":534,"title":{},"body":{"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/ExportTheater.html":{},"classes/GenericParameterDTO.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/SourceExport.html":{},"classes/StatisticItemDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheaterSimpleData.html":{},"classes/TypesCatalogueDTO.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["locale",{"_index":1889,"title":{},"body":{"injectables/FileService.html":{}}}],["lockacquiredtimestamp",{"_index":513,"title":{},"body":{"classes/AreaDTO.html":{},"classes/BlueprintFileDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/NameMappingDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheatreStatusDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["locklastuseracquiring",{"_index":514,"title":{},"body":{"classes/AreaDTO.html":{},"classes/BlueprintFileDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/NameMappingDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheatreStatusDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["lockreleasedtimestamp",{"_index":515,"title":{},"body":{"classes/AreaDTO.html":{},"classes/BlueprintFileDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/NameMappingDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheatreStatusDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["log",{"_index":647,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["logo_img",{"_index":40,"title":{},"body":{"classes/Aoption.html":{},"classes/NavbarElement.html":{},"classes/NavbarItem.html":{}}}],["loro",{"_index":3657,"title":{},"body":{"components/UnderbarComponent.html":{}}}],["m",{"_index":3791,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["ma",{"_index":3142,"title":{},"body":{"classes/PerseDataForTheaterComposer.html":{}}}],["machine",{"_index":1415,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/ExportModule.html":{},"miscellaneous/enumerations.html":{}}}],["make",{"_index":2076,"title":{},"body":{"components/HomeComponent.html":{}}}],["managed",{"_index":3806,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["map",{"_index":543,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["margin",{"_index":1277,"title":{},"body":{"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["match",{"_index":2923,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["max",{"_index":3270,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["mb",{"_index":2172,"title":{},"body":{"components/HostComponent.html":{}}}],["mcclass",{"_index":489,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["me.description",{"_index":1650,"title":{},"body":{"classes/ExportModule.html":{}}}],["me.imports",{"_index":1652,"title":{},"body":{"classes/ExportModule.html":{}}}],["me.node_templates",{"_index":1679,"title":{},"body":{"classes/ExportModule.html":{}}}],["me.tosca_definitions_version",{"_index":1648,"title":{},"body":{"classes/ExportModule.html":{}}}],["memorizza",{"_index":791,"title":{},"body":{"components/ComposerComponent.html":{},"injectables/ModalService.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"injectables/StorageService.html":{},"components/VisualizerComponent.html":{}}}],["memorizzare",{"_index":1584,"title":{},"body":{"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"injectables/TokenService.html":{}}}],["memorizzati",{"_index":3409,"title":{},"body":{"injectables/StorageService.html":{}}}],["meno",{"_index":1214,"title":{},"body":{"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"injectables/ParseService.html":{}}}],["menu",{"_index":3226,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"dependencies.html":{}}}],["messaggio",{"_index":2447,"title":{},"body":{"injectables/ModalService.html":{}}}],["messo",{"_index":2760,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["metadati",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["metodi",{"_index":222,"title":{},"body":{"modules/AppModule.html":{},"injectables/AttachmentsService.html":{},"injectables/AuthGuard.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"injectables/FlavorService.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"classes/HostNode.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"injectables/ModuleService.html":{},"components/NavbarComponent.html":{},"components/NetworkComponent.html":{},"classes/NetworkNode.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"injectables/SpinnerService.html":{},"components/SubnetComponent.html":{},"classes/SubnetNode.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"injectables/TheaterService.html":{},"injectables/TokenService.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{}}}],["mi",{"_index":1857,"title":{},"body":{"classes/ExportTheater.html":{}}}],["mi[module.data.name",{"_index":1872,"title":{},"body":{"classes/ExportTheater.html":{}}}],["mid",{"_index":2731,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["middle",{"_index":2204,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["min",{"_index":2187,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["minimap",{"_index":3230,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"dependencies.html":{},"index.html":{}}}],["minimapplugin",{"_index":3229,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["mirroring",{"_index":1411,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"miscellaneous/enumerations.html":{}}}],["mirroringmoduleinstance",{"_index":1403,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/EmptyModuleInfo.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"miscellaneous/enumerations.html":{}}}],["mirroringmoduleinstance.component",{"_index":2352,"title":{},"body":{"classes/MirroringModuleInstanceNode.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{}}}],["mirroringmoduleinstance.component.html",{"_index":2317,"title":{},"body":{"components/MirroringModuleInstanceComponent.html":{}}}],["mirroringmoduleinstance.component.sass",{"_index":2316,"title":{},"body":{"components/MirroringModuleInstanceComponent.html":{}}}],["mirroringmoduleinstance/mirroringmoduleinstancenode",{"_index":1531,"title":{},"body":{"classes/EmptyModuleInfo.html":{}}}],["mirroringmoduleinstance_icon",{"_index":2324,"title":{},"body":{"components/MirroringModuleInstanceComponent.html":{},"miscellaneous/enumerations.html":{}}}],["mirroringmoduleinstancecomponent",{"_index":169,"title":{"components/MirroringModuleInstanceComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"overview.html":{}}}],["mirroringmoduleinstanceicon",{"_index":2318,"title":{},"body":{"components/MirroringModuleInstanceComponent.html":{}}}],["mirroringmoduleinstancenode",{"_index":1530,"title":{"classes/MirroringModuleInstanceNode.html":{}},"body":{"classes/EmptyModuleInfo.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/TheaterModuleInstanceNode.html":{},"miscellaneous/functions.html":{}}}],["miscellaneous",{"_index":3779,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}},"body":{}}],["mit",{"_index":3140,"title":{},"body":{"classes/PerseDataForTheaterComposer.html":{}}}],["mock",{"_index":3041,"title":{},"body":{"injectables/ParseService.html":{}}}],["mock/dataset",{"_index":3043,"title":{},"body":{"injectables/ParseService.html":{}}}],["mockato",{"_index":324,"title":{},"body":{"modules/AppModule.html":{}}}],["mocked",{"_index":3022,"title":{},"body":{"injectables/ParseService.html":{}}}],["mocked?=environment.mocked",{"_index":3048,"title":{},"body":{"injectables/ParseService.html":{}}}],["mockedallflavors",{"_index":3029,"title":{},"body":{"injectables/ParseService.html":{}}}],["mockedallmodules",{"_index":3037,"title":{},"body":{"injectables/ParseService.html":{}}}],["mockedmodule",{"_index":3033,"title":{},"body":{"injectables/ParseService.html":{}}}],["mockedmodule(id",{"_index":3054,"title":{},"body":{"injectables/ParseService.html":{}}}],["mockedtheater",{"_index":3039,"title":{},"body":{"injectables/ParseService.html":{}}}],["mockedtheater(id",{"_index":3050,"title":{},"body":{"injectables/ParseService.html":{}}}],["modal",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"classes/ModalButton.html":{},"components/ModalComponent.html":{},"classes/ModalItem.html":{}}}],["modal'},{'name",{"_index":171,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["modal.component.html",{"_index":2373,"title":{},"body":{"components/ModalComponent.html":{}}}],["modal.component.sass",{"_index":2372,"title":{},"body":{"components/ModalComponent.html":{}}}],["modalbutton",{"_index":2355,"title":{"classes/ModalButton.html":{}},"body":{"classes/ModalButton.html":{},"components/ModalComponent.html":{},"classes/ModalItem.html":{},"injectables/ModalService.html":{}}}],["modalcomponent",{"_index":170,"title":{"components/ModalComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/ModalButton.html":{},"components/ModalComponent.html":{},"classes/ModalItem.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"overview.html":{}}}],["modaldata",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"injectables/ModalService.html":{}}}],["modale",{"_index":2028,"title":{},"body":{"components/HomeComponent.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{}}}],["modalit",{"_index":3292,"title":{},"body":{"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["modalitem",{"_index":91,"title":{"classes/ModalItem.html":{}},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"classes/ModalButton.html":{},"components/ModalComponent.html":{},"classes/ModalItem.html":{},"injectables/ModalService.html":{}}}],["modalitem.text_content",{"_index":2474,"title":{},"body":{"injectables/ModalService.html":{}}}],["modalservice",{"_index":86,"title":{"injectables/ModalService.html":{}},"body":{"components/AppComponent.html":{},"injectables/ModalService.html":{}}}],["modaltype",{"_index":2401,"title":{},"body":{"components/ModalComponent.html":{}}}],["mode",{"_index":527,"title":{},"body":{"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/SourceExport.html":{},"classes/StatisticItemDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheaterSimpleData.html":{},"classes/TypesCatalogueDTO.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["modelsapplication/applicationmodels",{"_index":1644,"title":{},"body":{"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["modelsdto/falvordto",{"_index":377,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"injectables/FlavorService.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["modelsdto/hostdto",{"_index":379,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"injectables/ModuleService.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["modelsdto/moduledto",{"_index":387,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"injectables/ModuleService.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"injectables/TheaterService.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["modelsdto/networkdto",{"_index":2895,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["modelsdto/theaterdto",{"_index":388,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"injectables/TheaterService.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["modelsexport/moduleexport",{"_index":1645,"title":{},"body":{"classes/ExportModule.html":{},"injectables/ExportService.html":{}}}],["modelsexport/theaterexport",{"_index":1808,"title":{},"body":{"injectables/ExportService.html":{},"classes/ExportTheater.html":{}}}],["modelsexport/typeexport",{"_index":1646,"title":{},"body":{"classes/ExportModule.html":{},"classes/ExportTheater.html":{}}}],["modetypeexport",{"_index":551,"title":{},"body":{"classes/AreaExport.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/SourceExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"miscellaneous/enumerations.html":{}}}],["modetypeexport.managed",{"_index":1736,"title":{},"body":{"classes/ExportModule.html":{},"classes/ExportTheater.html":{}}}],["modifica",{"_index":1158,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["modifiche",{"_index":1190,"title":{},"body":{"components/DataInputV2Component.html":{},"index.html":{}}}],["modo",{"_index":1066,"title":{},"body":{"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"injectables/ModalService.html":{},"components/TabnavComponent.html":{}}}],["module",{"_index":38,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"classes/Aoption.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"classes/FlavorApplication.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"components/ModalComponent.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"interfaces/ModuleTopology.html":{},"components/NavbarComponent.html":{},"classes/NavbarElement.html":{},"components/NavbarElementComponent.html":{},"classes/NavbarItem.html":{},"components/NetworkComponent.html":{},"classes/NodeTopologyElement.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesTSD.html":{},"classes/ReteConnection.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/SourceExport.html":{},"classes/StatisticItemDTO.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterApplication.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/TheaterSimpleData.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/TypesCatalogueDTO.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"classes/reteBasicModuleInfo.html":{}}}],["module.data.area",{"_index":1862,"title":{},"body":{"classes/ExportTheater.html":{}}}],["module.data.module",{"_index":1860,"title":{},"body":{"classes/ExportTheater.html":{}}}],["module.data.sequence",{"_index":1863,"title":{},"body":{"classes/ExportTheater.html":{}}}],["module.data.version",{"_index":1861,"title":{},"body":{"classes/ExportTheater.html":{}}}],["module.inputs",{"_index":1864,"title":{},"body":{"classes/ExportTheater.html":{}}}],["module.inputs[key",{"_index":1866,"title":{},"body":{"classes/ExportTheater.html":{}}}],["module/theater",{"_index":1991,"title":{},"body":{"components/HomeComponent.html":{}}}],["module_constraints",{"_index":900,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/ExportModule.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["module_content",{"_index":2969,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["module_content.properties.consumer_interfaces_link",{"_index":2970,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["module_id",{"_index":594,"title":{},"body":{"injectables/AttachmentsService.html":{},"injectables/ModuleService.html":{}}}],["module_instance",{"_index":535,"title":{},"body":{"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesTSD.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/SourceExport.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheaterSimpleData.html":{},"classes/TypesCatalogueDTO.html":{}}}],["module_instance_name",{"_index":688,"title":{},"body":{"classes/BlueprintFileDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/NameMappingDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TheaterDTO.html":{},"classes/TheatreStatusDTO.html":{}}}],["module_interface",{"_index":953,"title":{},"body":{"classes/ConsumerInterfaceLinkExport.html":{},"classes/ExportTheater.html":{}}}],["module_interface:string",{"_index":578,"title":{},"body":{"classes/AreaExport.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesTSD.html":{},"classes/SourceExport.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{}}}],["module_name",{"_index":689,"title":{},"body":{"classes/BlueprintFileDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/DeployInstanceDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NameMappingDTO.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/TagCatalogueDTO.html":{},"classes/TheaterDTO.html":{},"classes/TheatreStatusDTO.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["moduleapplication",{"_index":414,"title":{"classes/ModuleApplication.html":{}},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"components/VisualizerComponent.html":{},"miscellaneous/functions.html":{}}}],["moduleclassificationdto",{"_index":485,"title":{"classes/ModuleClassificationDTO.html":{}},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["modulecomponents",{"_index":1550,"title":{},"body":{"classes/EmptyModuleInfo.html":{}}}],["modulecomposer",{"_index":766,"title":{},"body":{"components/ComposerComponent.html":{}}}],["moduleconnected",{"_index":1868,"title":{},"body":{"classes/ExportTheater.html":{}}}],["moduleconnected.data.name",{"_index":1870,"title":{},"body":{"classes/ExportTheater.html":{}}}],["moduleconstraints",{"_index":904,"title":{"classes/ModuleConstraints.html":{}},"body":{"classes/ConstraintsMSD.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["moduledesigner/mddata",{"_index":3046,"title":{},"body":{"injectables/ParseService.html":{}}}],["moduledict",{"_index":2934,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["moduledict[value.name",{"_index":2938,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["moduledto",{"_index":385,"title":{"classes/ModuleDTO.html":{}},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"classes/BlueprintFileDTO.html":{},"interfaces/CommonModule.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/FlavorApplication.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"injectables/ModuleService.html":{},"classes/ModuleStatusDTO.html":{},"interfaces/ModuleTopology.html":{},"classes/NameMappingDTO.html":{},"classes/NodeTopologyElement.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/ReteConnection.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"interfaces/TheaterTopology.html":{},"classes/TheatreStatusDTO.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/TypesCatalogueDTO.html":{}}}],["moduledto:100",{"_index":2501,"title":{},"body":{"classes/ModuleApplication.html":{}}}],["moduledto:101",{"_index":2502,"title":{},"body":{"classes/ModuleApplication.html":{}}}],["moduledto:102",{"_index":2503,"title":{},"body":{"classes/ModuleApplication.html":{}}}],["moduledto:103",{"_index":2505,"title":{},"body":{"classes/ModuleApplication.html":{}}}],["moduledto:104",{"_index":2504,"title":{},"body":{"classes/ModuleApplication.html":{}}}],["moduledto:105",{"_index":2506,"title":{},"body":{"classes/ModuleApplication.html":{}}}],["moduledto:106",{"_index":2507,"title":{},"body":{"classes/ModuleApplication.html":{}}}],["moduledto:93",{"_index":2494,"title":{},"body":{"classes/ModuleApplication.html":{}}}],["moduledto:94",{"_index":2495,"title":{},"body":{"classes/ModuleApplication.html":{}}}],["moduledto:95",{"_index":2496,"title":{},"body":{"classes/ModuleApplication.html":{}}}],["moduledto:96",{"_index":2497,"title":{},"body":{"classes/ModuleApplication.html":{}}}],["moduledto:97",{"_index":2498,"title":{},"body":{"classes/ModuleApplication.html":{}}}],["moduledto:98",{"_index":2499,"title":{},"body":{"classes/ModuleApplication.html":{}}}],["moduledto:99",{"_index":2500,"title":{},"body":{"classes/ModuleApplication.html":{}}}],["moduleexport",{"_index":913,"title":{"classes/ModuleExport.html":{}},"body":{"classes/ConstraintsMSD.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["moduleexport[this.module.name",{"_index":1760,"title":{},"body":{"classes/ExportModule.html":{}}}],["moduleinfo",{"_index":448,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["moduleinfo.host_number",{"_index":3013,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["moduleinfo.hosts.foreach",{"_index":2981,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["moduleinfo.interfaces",{"_index":3007,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["moduleinfo.network_number",{"_index":3015,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["moduleinfo.subnet_number",{"_index":3014,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["moduleinfo.topology",{"_index":3012,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["moduleinfo2",{"_index":3109,"title":{},"body":{"classes/PerseDataForModuleVisualizer.html":{}}}],["moduleinfo[key",{"_index":2944,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["moduleinstance",{"_index":447,"title":{"classes/ModuleInstance.html":{}},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"miscellaneous/functions.html":{}}}],["moduleinstance.properties.module",{"_index":2961,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["moduleinstanceconfigurationuuid",{"_index":681,"title":{},"body":{"classes/BlueprintFileDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/NameMappingDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TheaterDTO.html":{},"classes/TheatreStatusDTO.html":{}}}],["moduleinstancedto",{"_index":384,"title":{"classes/ModuleInstanceDTO.html":{}},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"classes/BlueprintFileDTO.html":{},"interfaces/CommonModule.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/FlavorApplication.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"interfaces/ModuleTopology.html":{},"classes/NameMappingDTO.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteConnection.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"interfaces/TheaterTopology.html":{},"classes/TheatreStatusDTO.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/TypesCatalogueDTO.html":{},"miscellaneous/functions.html":{}}}],["moduleinstancedto:163",{"_index":2554,"title":{},"body":{"classes/ModuleInstance.html":{}}}],["moduleinstancedto:164",{"_index":2555,"title":{},"body":{"classes/ModuleInstance.html":{}}}],["moduleinstancename",{"_index":682,"title":{},"body":{"classes/BlueprintFileDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/NameMappingDTO.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/TagCatalogueDTO.html":{},"classes/TheaterDTO.html":{},"classes/TheatreStatusDTO.html":{}}}],["moduleinstancepropertiesdto",{"_index":381,"title":{"classes/ModuleInstancePropertiesDTO.html":{}},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"interfaces/CommonModule.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/FlavorApplication.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterApplication.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/TypesCatalogueDTO.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["moduleinstancepropertiesdto:126",{"_index":3195,"title":{},"body":{"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/reteBasicModuleInfo.html":{}}}],["moduleinstancepropertiesdto:127",{"_index":3197,"title":{},"body":{"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/reteBasicModuleInfo.html":{}}}],["moduleinstancepropertiesdto:128",{"_index":3198,"title":{},"body":{"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/reteBasicModuleInfo.html":{}}}],["moduleinstancepropertiesdto:129",{"_index":3200,"title":{},"body":{"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/reteBasicModuleInfo.html":{}}}],["moduleinstancepropertiesdto:130",{"_index":3199,"title":{},"body":{"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/reteBasicModuleInfo.html":{}}}],["moduleinstancepropertiesdto:131",{"_index":3196,"title":{},"body":{"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/reteBasicModuleInfo.html":{}}}],["moduleinstances",{"_index":2902,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["moduleinstancesimpledata",{"_index":569,"title":{"classes/ModuleInstanceSimpleData.html":{}},"body":{"classes/AreaExport.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/ExportTheater.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesTSD.html":{},"classes/SourceExport.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{}}}],["moduleinstancesimpledata.properties.consumer_interface_link.push",{"_index":1869,"title":{},"body":{"classes/ExportTheater.html":{}}}],["moduleinstanceuuid",{"_index":683,"title":{},"body":{"classes/BlueprintFileDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/NameMappingDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TheaterDTO.html":{},"classes/TheatreStatusDTO.html":{}}}],["moduleinterfacedto",{"_index":3843,"title":{},"body":{"miscellaneous/functions.html":{}}}],["moduleintotheater",{"_index":2918,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["moduleintotheater.properties",{"_index":2928,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["moduleintotheater.type.tolowercase().includes(theatertype.tolowercase",{"_index":2919,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["modulelistdto",{"_index":470,"title":{"classes/ModuleListDTO.html":{}},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"injectables/ModuleService.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["modulemodedto",{"_index":501,"title":{"classes/ModuleModeDTO.html":{}},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["modulenetworkinterfacedto",{"_index":380,"title":{"classes/ModuleNetworkInterfaceDTO.html":{}},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"interfaces/CommonModule.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/FlavorApplication.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"injectables/ModuleService.html":{},"classes/ModuleStatusDTO.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteConnection.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterApplication.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/TypesCatalogueDTO.html":{}}}],["modules",{"_index":874,"title":{"modules.html":{}},"body":{"components/ComposerComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["modules.ts",{"_index":1516,"title":{},"body":{"classes/EmptyModuleInfo.html":{},"miscellaneous/enumerations.html":{}}}],["modules.ts:38",{"_index":1528,"title":{},"body":{"classes/EmptyModuleInfo.html":{}}}],["modules.ts:39",{"_index":1527,"title":{},"body":{"classes/EmptyModuleInfo.html":{}}}],["modules.ts:40",{"_index":1526,"title":{},"body":{"classes/EmptyModuleInfo.html":{}}}],["modules.ts:41",{"_index":1529,"title":{},"body":{"classes/EmptyModuleInfo.html":{}}}],["modules.ts:42",{"_index":1525,"title":{},"body":{"classes/EmptyModuleInfo.html":{}}}],["modules.ts:43",{"_index":1523,"title":{},"body":{"classes/EmptyModuleInfo.html":{}}}],["modules.ts:44",{"_index":1524,"title":{},"body":{"classes/EmptyModuleInfo.html":{}}}],["modules/export",{"_index":1515,"title":{},"body":{"classes/EmptyModuleInfo.html":{},"miscellaneous/enumerations.html":{}}}],["modules/mirroringmoduleinstance/mirroringmoduleinstance.component",{"_index":258,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/mirroringmoduleinstance/mirroringmoduleinstance.component.ts",{"_index":2315,"title":{},"body":{"components/MirroringModuleInstanceComponent.html":{}}}],["modules/mirroringmoduleinstance/mirroringmoduleinstance.component.ts:17",{"_index":2331,"title":{},"body":{"components/MirroringModuleInstanceComponent.html":{}}}],["modules/mirroringmoduleinstance/mirroringmoduleinstance.component.ts:18",{"_index":2330,"title":{},"body":{"components/MirroringModuleInstanceComponent.html":{}}}],["modules/mirroringmoduleinstance/mirroringmoduleinstance.component.ts:19",{"_index":2329,"title":{},"body":{"components/MirroringModuleInstanceComponent.html":{}}}],["modules/mirroringmoduleinstance/mirroringmoduleinstance.component.ts:20",{"_index":2328,"title":{},"body":{"components/MirroringModuleInstanceComponent.html":{}}}],["modules/mirroringmoduleinstance/mirroringmoduleinstance.component.ts:22",{"_index":2325,"title":{},"body":{"components/MirroringModuleInstanceComponent.html":{}}}],["modules/mirroringmoduleinstance/mirroringmoduleinstance.component.ts:23",{"_index":2326,"title":{},"body":{"components/MirroringModuleInstanceComponent.html":{}}}],["modules/mirroringmoduleinstance/mirroringmoduleinstance.component.ts:24",{"_index":2332,"title":{},"body":{"components/MirroringModuleInstanceComponent.html":{}}}],["modules/mirroringmoduleinstance/mirroringmoduleinstance.component.ts:25",{"_index":2327,"title":{},"body":{"components/MirroringModuleInstanceComponent.html":{}}}],["modules/mirroringmoduleinstance/mirroringmoduleinstance.component.ts:26",{"_index":2322,"title":{},"body":{"components/MirroringModuleInstanceComponent.html":{}}}],["modules/mirroringmoduleinstance/mirroringmoduleinstance.component.ts:34",{"_index":2323,"title":{},"body":{"components/MirroringModuleInstanceComponent.html":{}}}],["modules/mirroringmoduleinstance/mirroringmoduleinstancenode",{"_index":371,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["modules/mirroringmoduleinstance/mirroringmoduleinstancenode.ts",{"_index":2344,"title":{},"body":{"classes/MirroringModuleInstanceNode.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"miscellaneous/functions.html":{}}}],["modules/mirroringmoduleinstance/mirroringmoduleinstancenode.ts:122",{"_index":2351,"title":{},"body":{"classes/MirroringModuleInstanceNode.html":{}}}],["modules/mirroringmoduleinstance/mirroringmoduleinstancenode.ts:130",{"_index":2347,"title":{},"body":{"classes/MirroringModuleInstanceNode.html":{}}}],["modules/mirroringmoduleinstance/mirroringmoduleinstancenode.ts:138",{"_index":2349,"title":{},"body":{"classes/MirroringModuleInstanceNode.html":{}}}],["modules/mirroringmoduleinstance/mirroringmoduleinstancenode.ts:49",{"_index":2345,"title":{},"body":{"classes/MirroringModuleInstanceNode.html":{}}}],["modules/mirroringmoduleinstance/mirroringmoduleinstancenode.ts:67",{"_index":2346,"title":{},"body":{"classes/MirroringModuleInstanceNode.html":{}}}],["modules/mirroringmoduleinstance/mirroringmoduleinstancenode.ts:79",{"_index":2348,"title":{},"body":{"classes/MirroringModuleInstanceNode.html":{}}}],["modules/mirroringmoduleinstance/mirroringmoduleinstancenode.ts:92",{"_index":2350,"title":{},"body":{"classes/MirroringModuleInstanceNode.html":{}}}],["modules/theaterinternalservicemoduleinstance/theaterinternalservicemoduleinstance.component",{"_index":259,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/theaterinternalservicemoduleinstance/theaterinternalservicemoduleinstance.component.ts",{"_index":3546,"title":{},"body":{"components/TheaterInternalServiceModuleInstanceComponent.html":{}}}],["modules/theaterinternalservicemoduleinstance/theaterinternalservicemoduleinstance.component.ts:16",{"_index":3557,"title":{},"body":{"components/TheaterInternalServiceModuleInstanceComponent.html":{}}}],["modules/theaterinternalservicemoduleinstance/theaterinternalservicemoduleinstance.component.ts:17",{"_index":3556,"title":{},"body":{"components/TheaterInternalServiceModuleInstanceComponent.html":{}}}],["modules/theaterinternalservicemoduleinstance/theaterinternalservicemoduleinstance.component.ts:18",{"_index":3555,"title":{},"body":{"components/TheaterInternalServiceModuleInstanceComponent.html":{}}}],["modules/theaterinternalservicemoduleinstance/theaterinternalservicemoduleinstance.component.ts:19",{"_index":3554,"title":{},"body":{"components/TheaterInternalServiceModuleInstanceComponent.html":{}}}],["modules/theaterinternalservicemoduleinstance/theaterinternalservicemoduleinstance.component.ts:21",{"_index":3560,"title":{},"body":{"components/TheaterInternalServiceModuleInstanceComponent.html":{}}}],["modules/theaterinternalservicemoduleinstance/theaterinternalservicemoduleinstance.component.ts:22",{"_index":3552,"title":{},"body":{"components/TheaterInternalServiceModuleInstanceComponent.html":{}}}],["modules/theaterinternalservicemoduleinstance/theaterinternalservicemoduleinstance.component.ts:23",{"_index":3558,"title":{},"body":{"components/TheaterInternalServiceModuleInstanceComponent.html":{}}}],["modules/theaterinternalservicemoduleinstance/theaterinternalservicemoduleinstance.component.ts:24",{"_index":3553,"title":{},"body":{"components/TheaterInternalServiceModuleInstanceComponent.html":{}}}],["modules/theaterinternalservicemoduleinstance/theaterinternalservicemoduleinstance.component.ts:25",{"_index":3550,"title":{},"body":{"components/TheaterInternalServiceModuleInstanceComponent.html":{}}}],["modules/theaterinternalservicemoduleinstance/theaterinternalservicemoduleinstance.component.ts:33",{"_index":3551,"title":{},"body":{"components/TheaterInternalServiceModuleInstanceComponent.html":{}}}],["modules/theaterinternalservicemoduleinstance/theaterinternalservicemoduleinstancenode",{"_index":373,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["modules/theaterinternalservicemoduleinstance/theaterinternalservicemoduleinstancenode.ts",{"_index":3314,"title":{},"body":{"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"miscellaneous/functions.html":{}}}],["modules/theaterinternalservicemoduleinstance/theaterinternalservicemoduleinstancenode.ts:122",{"_index":3568,"title":{},"body":{"classes/TheaterInternalServiceModuleInstanceNode.html":{}}}],["modules/theaterinternalservicemoduleinstance/theaterinternalservicemoduleinstancenode.ts:130",{"_index":3564,"title":{},"body":{"classes/TheaterInternalServiceModuleInstanceNode.html":{}}}],["modules/theaterinternalservicemoduleinstance/theaterinternalservicemoduleinstancenode.ts:138",{"_index":3566,"title":{},"body":{"classes/TheaterInternalServiceModuleInstanceNode.html":{}}}],["modules/theaterinternalservicemoduleinstance/theaterinternalservicemoduleinstancenode.ts:49",{"_index":3562,"title":{},"body":{"classes/TheaterInternalServiceModuleInstanceNode.html":{}}}],["modules/theaterinternalservicemoduleinstance/theaterinternalservicemoduleinstancenode.ts:67",{"_index":3563,"title":{},"body":{"classes/TheaterInternalServiceModuleInstanceNode.html":{}}}],["modules/theaterinternalservicemoduleinstance/theaterinternalservicemoduleinstancenode.ts:79",{"_index":3565,"title":{},"body":{"classes/TheaterInternalServiceModuleInstanceNode.html":{}}}],["modules/theaterinternalservicemoduleinstance/theaterinternalservicemoduleinstancenode.ts:92",{"_index":3567,"title":{},"body":{"classes/TheaterInternalServiceModuleInstanceNode.html":{}}}],["modules/theatermoduleinstance/theatermoduleinstance.component",{"_index":260,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/theatermoduleinstance/theatermoduleinstance.component.ts",{"_index":3569,"title":{},"body":{"components/TheaterModuleInstanceComponent.html":{}}}],["modules/theatermoduleinstance/theatermoduleinstance.component.ts:16",{"_index":3580,"title":{},"body":{"components/TheaterModuleInstanceComponent.html":{}}}],["modules/theatermoduleinstance/theatermoduleinstance.component.ts:17",{"_index":3579,"title":{},"body":{"components/TheaterModuleInstanceComponent.html":{}}}],["modules/theatermoduleinstance/theatermoduleinstance.component.ts:18",{"_index":3578,"title":{},"body":{"components/TheaterModuleInstanceComponent.html":{}}}],["modules/theatermoduleinstance/theatermoduleinstance.component.ts:19",{"_index":3577,"title":{},"body":{"components/TheaterModuleInstanceComponent.html":{}}}],["modules/theatermoduleinstance/theatermoduleinstance.component.ts:21",{"_index":3583,"title":{},"body":{"components/TheaterModuleInstanceComponent.html":{}}}],["modules/theatermoduleinstance/theatermoduleinstance.component.ts:22",{"_index":3575,"title":{},"body":{"components/TheaterModuleInstanceComponent.html":{}}}],["modules/theatermoduleinstance/theatermoduleinstance.component.ts:23",{"_index":3581,"title":{},"body":{"components/TheaterModuleInstanceComponent.html":{}}}],["modules/theatermoduleinstance/theatermoduleinstance.component.ts:24",{"_index":3576,"title":{},"body":{"components/TheaterModuleInstanceComponent.html":{}}}],["modules/theatermoduleinstance/theatermoduleinstance.component.ts:25",{"_index":3573,"title":{},"body":{"components/TheaterModuleInstanceComponent.html":{}}}],["modules/theatermoduleinstance/theatermoduleinstance.component.ts:33",{"_index":3574,"title":{},"body":{"components/TheaterModuleInstanceComponent.html":{}}}],["modules/theatermoduleinstance/theatermoduleinstancenode",{"_index":375,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["modules/theatermoduleinstance/theatermoduleinstancenode.ts",{"_index":3318,"title":{},"body":{"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/TheaterModuleInstanceNode.html":{},"miscellaneous/functions.html":{}}}],["modules/theatermoduleinstance/theatermoduleinstancenode.ts:122",{"_index":3591,"title":{},"body":{"classes/TheaterModuleInstanceNode.html":{}}}],["modules/theatermoduleinstance/theatermoduleinstancenode.ts:130",{"_index":3587,"title":{},"body":{"classes/TheaterModuleInstanceNode.html":{}}}],["modules/theatermoduleinstance/theatermoduleinstancenode.ts:138",{"_index":3589,"title":{},"body":{"classes/TheaterModuleInstanceNode.html":{}}}],["modules/theatermoduleinstance/theatermoduleinstancenode.ts:49",{"_index":3585,"title":{},"body":{"classes/TheaterModuleInstanceNode.html":{}}}],["modules/theatermoduleinstance/theatermoduleinstancenode.ts:67",{"_index":3586,"title":{},"body":{"classes/TheaterModuleInstanceNode.html":{}}}],["modules/theatermoduleinstance/theatermoduleinstancenode.ts:79",{"_index":3588,"title":{},"body":{"classes/TheaterModuleInstanceNode.html":{}}}],["modules/theatermoduleinstance/theatermoduleinstancenode.ts:92",{"_index":3590,"title":{},"body":{"classes/TheaterModuleInstanceNode.html":{}}}],["modules[key",{"_index":2955,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["modules[moduleinstance.properties.module",{"_index":2952,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["modulesapplication",{"_index":2935,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["modulesdict",{"_index":740,"title":{},"body":{"components/ComposerComponent.html":{}}}],["moduleservice",{"_index":206,"title":{"injectables/ModuleService.html":{}},"body":{"modules/AppModule.html":{},"injectables/ModuleService.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"overview.html":{}}}],["modulesimpledata",{"_index":914,"title":{"classes/ModuleSimpleData.html":{}},"body":{"classes/ConstraintsMSD.html":{},"classes/ExportModule.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["modulesimpledata.properties.interface_networks[type].push",{"_index":1747,"title":{},"body":{"classes/ExportModule.html":{}}}],["modulesimpledata.properties.interface_networks[type][index].subnets.push",{"_index":1758,"title":{},"body":{"classes/ExportModule.html":{}}}],["modulesinfo",{"_index":2863,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["modulestatusdto",{"_index":503,"title":{"classes/ModuleStatusDTO.html":{}},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["moduletopology",{"_index":446,"title":{"interfaces/ModuleTopology.html":{}},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["moduletype",{"_index":1770,"title":{},"body":{"injectables/ExportService.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["moduletype.mirroringmoduleinstance",{"_index":2336,"title":{},"body":{"components/MirroringModuleInstanceComponent.html":{}}}],["moduletype.theaterinternalservicemoduleinstance",{"_index":3561,"title":{},"body":{"components/TheaterInternalServiceModuleInstanceComponent.html":{}}}],["moduletype.theatermoduleinstance",{"_index":3584,"title":{},"body":{"components/TheaterModuleInstanceComponent.html":{}}}],["moduletype1",{"_index":1434,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"miscellaneous/enumerations.html":{}}}],["moduletype2",{"_index":1445,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"miscellaneous/enumerations.html":{}}}],["moduletype2[smr.type",{"_index":3137,"title":{},"body":{"classes/PerseDataForTheaterComposer.html":{}}}],["moduletype=\".\"+subjecttype.module.tolowercase",{"_index":1811,"title":{},"body":{"injectables/ExportService.html":{}}}],["moduletypeexport",{"_index":552,"title":{},"body":{"classes/AreaExport.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/SourceExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"miscellaneous/enumerations.html":{}}}],["moduletypeexport[0",{"_index":1859,"title":{},"body":{"classes/ExportTheater.html":{}}}],["moduletypeexport[module.data.type",{"_index":1858,"title":{},"body":{"classes/ExportTheater.html":{}}}],["moduletypeexport[this.module.type]?moduletypeexport[this.module.type]:moduletypeexport[0",{"_index":1735,"title":{},"body":{"classes/ExportModule.html":{}}}],["moduletypelink",{"_index":1440,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"miscellaneous/enumerations.html":{}}}],["moduletypetheater",{"_index":1425,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"miscellaneous/enumerations.html":{}}}],["moduletypetheater[moduletype2[value.type",{"_index":3141,"title":{},"body":{"classes/PerseDataForTheaterComposer.html":{}}}],["moduleuuid",{"_index":684,"title":{},"body":{"classes/BlueprintFileDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/NameMappingDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TheaterDTO.html":{},"classes/TheatreStatusDTO.html":{}}}],["modulevisualizer/mvdata",{"_index":3045,"title":{},"body":{"injectables/ParseService.html":{}}}],["moduli",{"_index":196,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"modules.html":{},"overview.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["modulo",{"_index":413,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"classes/ConstraintsMSD.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"classes/FlavorApplication.html":{},"components/HomeComponent.html":{},"classes/HostNode.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModuleApplication.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstance.html":{},"classes/ModuleSimpleData.html":{},"interfaces/ModuleTopology.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkNode.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SimpleModuleApplication.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"classes/TheaterApplication.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"components/VisualizerComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["modulo/teatro",{"_index":2016,"title":{},"body":{"components/HomeComponent.html":{}}}],["momento",{"_index":803,"title":{},"body":{"components/ComposerComponent.html":{},"components/HomeComponent.html":{}}}],["more",{"_index":3900,"title":{},"body":{"index.html":{}}}],["mostra",{"_index":2458,"title":{},"body":{"injectables/ModalService.html":{}}}],["mostrare",{"_index":1154,"title":{},"body":{"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"components/HomeComponent.html":{},"components/NavbarElementComponent.html":{},"components/UnderbarComponent.html":{}}}],["mostrata",{"_index":3469,"title":{},"body":{"components/TabnavComponent.html":{}}}],["motivo",{"_index":1449,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["mounted",{"_index":966,"title":{},"body":{"components/ControlTemplate.html":{},"classes/_Control.html":{}}}],["mouseevent",{"_index":3867,"title":{},"body":{"index.html":{}}}],["moz",{"_index":2142,"title":{},"body":{"components/HomeComponent.html":{}}}],["msdvm",{"_index":1680,"title":{},"body":{"classes/ExportModule.html":{}}}],["msdvm.ports[++index",{"_index":1696,"title":{},"body":{"classes/ExportModule.html":{}}}],["msdvm.ports[index].network",{"_index":1719,"title":{},"body":{"classes/ExportModule.html":{}}}],["msdvm.ports[index].subnets.push",{"_index":1710,"title":{},"body":{"classes/ExportModule.html":{}}}],["multi",{"_index":315,"title":{},"body":{"modules/AppModule.html":{}}}],["multi)selection",{"_index":1074,"title":{},"body":{"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{}}}],["multiple",{"_index":1035,"title":{},"body":{"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{}}}],["multiple_mode",{"_index":930,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["multiselect",{"_index":1044,"title":{},"body":{"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{}}}],["mynodecomponent",{"_index":3245,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["n",{"_index":1761,"title":{},"body":{"classes/ExportModule.html":{},"components/HomeComponent.html":{}}}],["name",{"_index":148,"title":{},"body":{"components/AppComponent.html":{},"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"classes/BlueprintFileDTO.html":{},"classes/BorderNetworkDTO.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/DeployInstanceDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"classes/FlavorApplication.html":{},"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"classes/HostModuleDTO.html":{},"classes/HostNode.html":{},"classes/HostPortModuleDTO.html":{},"components/HowToUseComponent.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"components/ModalComponent.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"interfaces/ModuleTopology.html":{},"classes/NameMappingDTO.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"classes/NetOSRouterDTO.html":{},"components/NetworkComponent.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkDTO.html":{},"classes/NetworkNode.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/NodeTopologyElement.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/SourceExport.html":{},"classes/StatisticItemDTO.html":{},"components/SubnetComponent.html":{},"classes/SubnetDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"components/TabnavComponent.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/TheaterSimpleData.html":{},"interfaces/TheaterTopology.html":{},"classes/TheatreStatusDTO.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/TypesCatalogueDTO.html":{},"components/UnderbarComponent.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{},"components/VisualizerComponent.html":{},"miscellaneous/functions.html":{},"index.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["name:string",{"_index":545,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["name:string]:moduleinstancedto|theaterinstancedto",{"_index":685,"title":{},"body":{"classes/BlueprintFileDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/NameMappingDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TheaterDTO.html":{},"classes/TheatreStatusDTO.html":{}}}],["name_mapping",{"_index":692,"title":{},"body":{"classes/BlueprintFileDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/NameMappingDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TheaterDTO.html":{},"classes/TheatreStatusDTO.html":{}}}],["namealias",{"_index":1936,"title":{},"body":{"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{}}}],["namemappingdto",{"_index":686,"title":{"classes/NameMappingDTO.html":{}},"body":{"classes/BlueprintFileDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/NameMappingDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TheaterDTO.html":{},"classes/TheatreStatusDTO.html":{}}}],["nav",{"_index":2636,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar",{"_index":48,"title":{},"body":{"classes/Aoption.html":{},"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"classes/NavbarElement.html":{},"components/NavbarElementComponent.html":{},"classes/NavbarItem.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["navbar'},{'name",{"_index":172,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["navbar.component.html",{"_index":2625,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.component.sass",{"_index":2624,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbarcomonent",{"_index":2630,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbarcomponent",{"_index":33,"title":{"components/NavbarComponent.html":{}},"body":{"classes/Aoption.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"classes/NavbarElement.html":{},"components/NavbarElementComponent.html":{},"classes/NavbarItem.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"overview.html":{}}}],["navbarelement",{"_index":35,"title":{"classes/NavbarElement.html":{}},"body":{"classes/Aoption.html":{},"components/NavbarComponent.html":{},"classes/NavbarElement.html":{},"classes/NavbarItem.html":{}}}],["navbarelementcomponent",{"_index":173,"title":{"components/NavbarElementComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"overview.html":{}}}],["navbaritem",{"_index":42,"title":{"classes/NavbarItem.html":{}},"body":{"classes/Aoption.html":{},"classes/NavbarElement.html":{},"classes/NavbarItem.html":{}}}],["navbartype",{"_index":2643,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navigate",{"_index":3873,"title":{},"body":{"index.html":{}}}],["nbsp",{"_index":3674,"title":{},"body":{"components/UnderbarComponent.html":{}}}],["nbsp;infra",{"_index":2663,"title":{},"body":{"components/NavbarElementComponent.html":{}}}],["necessari",{"_index":2268,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["negli",{"_index":1545,"title":{},"body":{"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{}}}],["nei",{"_index":1669,"title":{},"body":{"classes/ExportModule.html":{}}}],["nel",{"_index":802,"title":{},"body":{"components/ComposerComponent.html":{},"components/DataInputV2Component.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"components/HomeComponent.html":{},"classes/ModalButton.html":{},"classes/ModalItem.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"miscellaneous/enumerations.html":{}}}],["nell'appcomponent",{"_index":2424,"title":{},"body":{"injectables/ModalService.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{}}}],["nell'applicazione",{"_index":1769,"title":{},"body":{"injectables/ExportService.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["nell'export",{"_index":416,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["nell'offcanvas",{"_index":2749,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["nella",{"_index":409,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"components/HomeComponent.html":{},"injectables/ModalService.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"miscellaneous/functions.html":{}}}],["nelle",{"_index":1996,"title":{},"body":{"components/HomeComponent.html":{}}}],["nello",{"_index":562,"title":{},"body":{"classes/AreaExport.html":{},"components/ComposerComponent.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/SourceExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["nessun",{"_index":54,"title":{},"body":{"classes/Aoption.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"injectables/AttachmentsService.html":{},"injectables/AuthGuard.html":{},"classes/BlueprintFileDTO.html":{},"classes/BorderNetworkDTO.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"components/ControlTemplate.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputReturnedV2.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/DeployInstanceDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"classes/FlavorApplication.html":{},"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"injectables/FlavorService.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"classes/HostModuleDTO.html":{},"classes/HostNode.html":{},"classes/HostPortModuleDTO.html":{},"components/HowToUseComponent.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModalButton.html":{},"components/ModalComponent.html":{},"classes/ModalItem.html":{},"injectables/ModalService.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"injectables/ModuleService.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"interfaces/ModuleTopology.html":{},"classes/NameMappingDTO.html":{},"components/NavbarComponent.html":{},"classes/NavbarElement.html":{},"components/NavbarElementComponent.html":{},"classes/NavbarItem.html":{},"classes/NetOSRouterDTO.html":{},"components/NetworkComponent.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkDTO.html":{},"classes/NetworkNode.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/NodeTopologyElement.html":{},"components/OffcanvasComponent.html":{},"classes/PageableDTO.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SelectOption.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/SingleDataInputReturned.html":{},"classes/SortDTO.html":{},"classes/SourceExport.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"classes/StatisticItemDTO.html":{},"injectables/StorageService.html":{},"components/SubnetComponent.html":{},"classes/SubnetDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"components/TabnavComponent.html":{},"classes/TabnavElement.html":{},"classes/TabnavItem.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"injectables/TheaterService.html":{},"classes/TheaterSimpleData.html":{},"interfaces/TheaterTopology.html":{},"classes/TheatreStatusDTO.html":{},"injectables/TokenService.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/TypesCatalogueDTO.html":{},"components/UnderbarComponent.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{},"routes.html":{}}}],["net",{"_index":1700,"title":{},"body":{"classes/ExportModule.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["netosrouterdto",{"_index":710,"title":{"classes/NetOSRouterDTO.html":{}},"body":{"classes/BorderNetworkDTO.html":{},"classes/NetOSRouterDTO.html":{},"classes/NetworkDTO.html":{},"classes/SubnetDTO.html":{}}}],["network",{"_index":531,"title":{},"body":{"classes/AreaDTO.html":{},"classes/BorderNetworkDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EmptyNodeInfo.html":{},"classes/ExportModule.html":{},"classes/GenericParameterDTO.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"classes/NetOSRouterDTO.html":{},"components/NetworkComponent.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkDTO.html":{},"classes/NetworkNode.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteNetworkInfo.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/SubnetDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["network.component",{"_index":2712,"title":{},"body":{"classes/NetworkNode.html":{},"classes/ReteNetworkInfo.html":{}}}],["network.component.html",{"_index":2690,"title":{},"body":{"components/NetworkComponent.html":{}}}],["network.component.sass",{"_index":2689,"title":{},"body":{"components/NetworkComponent.html":{}}}],["network.inputs",{"_index":1754,"title":{},"body":{"classes/ExportModule.html":{}}}],["network.inputs[key",{"_index":1756,"title":{},"body":{"classes/ExportModule.html":{}}}],["network/networknode",{"_index":1564,"title":{},"body":{"classes/EmptyNodeInfo.html":{}}}],["network_constraints",{"_index":901,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/ExportModule.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["network_name",{"_index":2993,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["network_number",{"_index":394,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/ReteConnection.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["networkcomponent",{"_index":175,"title":{"components/NetworkComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"classes/NetworkNode.html":{},"components/OffcanvasComponent.html":{},"classes/ReteNetworkInfo.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"overview.html":{}}}],["networkconnectedtosubnet",{"_index":1716,"title":{},"body":{"classes/ExportModule.html":{}}}],["networkconnectedtosubnet.data.name",{"_index":1718,"title":{},"body":{"classes/ExportModule.html":{}}}],["networkconstraints",{"_index":906,"title":{"classes/NetworkConstraints.html":{}},"body":{"classes/ConstraintsMSD.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["networkdto",{"_index":469,"title":{"classes/NetworkDTO.html":{}},"body":{"classes/AreaDTO.html":{},"classes/BorderNetworkDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/HostModuleDTO.html":{},"classes/HostPortModuleDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/NetOSRouterDTO.html":{},"classes/NetworkDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/SubnetDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["networkicon",{"_index":2319,"title":{},"body":{"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"miscellaneous/enumerations.html":{}}}],["networkicon=networkicon",{"_index":2334,"title":{},"body":{"components/MirroringModuleInstanceComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["networkinputport",{"_index":1755,"title":{},"body":{"classes/ExportModule.html":{}}}],["networkinputport.connections.foreach(c",{"_index":1757,"title":{},"body":{"classes/ExportModule.html":{}}}],["networknode",{"_index":1563,"title":{"classes/NetworkNode.html":{}},"body":{"classes/EmptyNodeInfo.html":{},"classes/NetworkNode.html":{},"classes/ReteNetworkInfo.html":{},"miscellaneous/functions.html":{}}}],["networks",{"_index":2221,"title":{},"body":{"classes/HostModuleDTO.html":{},"classes/HostPortModuleDTO.html":{}}}],["networksimpledata",{"_index":917,"title":{"classes/NetworkSimpleData.html":{}},"body":{"classes/ConstraintsMSD.html":{},"classes/ExportModule.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["networktypeexport",{"_index":908,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/ExportModule.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"miscellaneous/enumerations.html":{}}}],["networktypeexport.network",{"_index":1732,"title":{},"body":{"classes/ExportModule.html":{}}}],["new",{"_index":310,"title":{},"body":{"modules/AppModule.html":{},"injectables/AttachmentsService.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"injectables/FlavorService.html":{},"components/HomeComponent.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"injectables/ModuleService.html":{},"components/NavbarComponent.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"injectables/TheaterService.html":{},"injectables/TokenService.html":{},"components/UnderbarComponent.html":{},"index.html":{}}}],["new_value",{"_index":1144,"title":{},"body":{"classes/DataInputReturnedV2.html":{},"components/DataInputV2Component.html":{}}}],["newmodule",{"_index":2964,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["ng",{"_index":3871,"title":{},"body":{"index.html":{}}}],["ngafterviewinit",{"_index":2626,"title":{},"body":{"components/NavbarComponent.html":{}}}],["ngclass",{"_index":264,"title":{},"body":{"modules/AppModule.html":{}}}],["ngdobootstrap",{"_index":223,"title":{},"body":{"modules/AppModule.html":{}}}],["ngdobootstrap(appref",{"_index":224,"title":{},"body":{"modules/AppModule.html":{}}}],["ngform",{"_index":299,"title":{},"body":{"modules/AppModule.html":{}}}],["ngmodule",{"_index":235,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngoninit",{"_index":744,"title":{},"body":{"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DocsComponent.html":{},"components/HowToUseComponent.html":{},"components/TabnavComponent.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{}}}],["ngstyle",{"_index":265,"title":{},"body":{"modules/AppModule.html":{}}}],["ngx",{"_index":275,"title":{},"body":{"modules/AppModule.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"dependencies.html":{}}}],["ngxpopper",{"_index":205,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["ngxspinnermodule",{"_index":274,"title":{},"body":{"modules/AppModule.html":{}}}],["ngxspinnerservice",{"_index":3372,"title":{},"body":{"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{}}}],["ngxtypeaheadmodule",{"_index":276,"title":{},"body":{"modules/AppModule.html":{}}}],["nlinked",{"_index":2962,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["nn",{"_index":2980,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["node",{"_index":1549,"title":{},"body":{"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/ExportModule.html":{},"components/HostComponent.html":{},"classes/HostNode.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"components/NetworkComponent.html":{},"classes/NetworkNode.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"components/SubnetComponent.html":{},"classes/SubnetNode.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["node.data",{"_index":2286,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["node.data.area",{"_index":2337,"title":{},"body":{"components/MirroringModuleInstanceComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["node.data.cidr",{"_index":3424,"title":{},"body":{"components/SubnetComponent.html":{}}}],["node.data.cpu",{"_index":2174,"title":{},"body":{"components/HostComponent.html":{}}}],["node.data.disk",{"_index":2173,"title":{},"body":{"components/HostComponent.html":{}}}],["node.data.externalinterfacename",{"_index":2698,"title":{},"body":{"components/NetworkComponent.html":{}}}],["node.data.externalinterfacetype",{"_index":2699,"title":{},"body":{"components/NetworkComponent.html":{}}}],["node.data.host_number",{"_index":2341,"title":{},"body":{"components/MirroringModuleInstanceComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["node.data.isdhcp",{"_index":3425,"title":{},"body":{"components/SubnetComponent.html":{}}}],["node.data.isdhcp?\"true\":\"false",{"_index":3427,"title":{},"body":{"components/SubnetComponent.html":{}}}],["node.data.name",{"_index":1681,"title":{},"body":{"classes/ExportModule.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["node.data.network_number",{"_index":2343,"title":{},"body":{"components/MirroringModuleInstanceComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["node.data.os",{"_index":2169,"title":{},"body":{"components/HostComponent.html":{}}}],["node.data.output",{"_index":1688,"title":{},"body":{"classes/ExportModule.html":{}}}],["node.data.ram",{"_index":2171,"title":{},"body":{"components/HostComponent.html":{}}}],["node.data.subnet_number",{"_index":2342,"title":{},"body":{"components/MirroringModuleInstanceComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["node.data.version",{"_index":2338,"title":{},"body":{"components/MirroringModuleInstanceComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["node.data['input",{"_index":2287,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["node.data['output",{"_index":2288,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["node.name",{"_index":2983,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["node.outputs",{"_index":1695,"title":{},"body":{"classes/ExportModule.html":{}}}],["node.outputs[portname",{"_index":1698,"title":{},"body":{"classes/ExportModule.html":{}}}],["node.ports.foreach",{"_index":2987,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["node_modules",{"_index":2927,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["node_tempates",{"_index":1654,"title":{},"body":{"classes/ExportModule.html":{}}}],["node_template",{"_index":1626,"title":{},"body":{"classes/ExportModule.html":{},"classes/ExportTheater.html":{}}}],["node_template_name",{"_index":690,"title":{},"body":{"classes/BlueprintFileDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/NameMappingDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TheaterDTO.html":{},"classes/TheatreStatusDTO.html":{}}}],["node_templates",{"_index":567,"title":{},"body":{"classes/AreaExport.html":{},"classes/BlueprintFileDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/DeployInstanceDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleSimpleData.html":{},"classes/NameMappingDTO.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/SourceExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagsExport.html":{},"classes/TheaterDTO.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{},"classes/TheatreStatusDTO.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["nodecomponent",{"_index":2144,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["nodecomponents",{"_index":1541,"title":{},"body":{"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{}}}],["nodedata",{"_index":1613,"title":{},"body":{"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["nodeeditor",{"_index":973,"title":{},"body":{"components/ControlTemplate.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/_Control.html":{}}}],["nodename",{"_index":532,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["nodeport",{"_index":1697,"title":{},"body":{"classes/ExportModule.html":{}}}],["nodeport.connections.foreach(c",{"_index":1704,"title":{},"body":{"classes/ExportModule.html":{}}}],["nodeporttype",{"_index":1369,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"miscellaneous/enumerations.html":{}}}],["nodes",{"_index":3256,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["nodes.ts",{"_index":1553,"title":{},"body":{"classes/EmptyNodeInfo.html":{},"miscellaneous/enumerations.html":{}}}],["nodes.ts:32",{"_index":1558,"title":{},"body":{"classes/EmptyNodeInfo.html":{}}}],["nodes.ts:33",{"_index":1560,"title":{},"body":{"classes/EmptyNodeInfo.html":{}}}],["nodes.ts:34",{"_index":1559,"title":{},"body":{"classes/EmptyNodeInfo.html":{}}}],["nodes/export",{"_index":1552,"title":{},"body":{"classes/EmptyNodeInfo.html":{},"miscellaneous/enumerations.html":{}}}],["nodes/host/host.component",{"_index":255,"title":{},"body":{"modules/AppModule.html":{},"classes/HostNode.html":{},"classes/ReteHostInfo.html":{}}}],["nodes/host/host.component.ts",{"_index":2143,"title":{},"body":{"components/HostComponent.html":{}}}],["nodes/host/host.component.ts:17",{"_index":2160,"title":{},"body":{"components/HostComponent.html":{}}}],["nodes/host/host.component.ts:18",{"_index":2159,"title":{},"body":{"components/HostComponent.html":{}}}],["nodes/host/host.component.ts:19",{"_index":2158,"title":{},"body":{"components/HostComponent.html":{}}}],["nodes/host/host.component.ts:20",{"_index":2157,"title":{},"body":{"components/HostComponent.html":{}}}],["nodes/host/host.component.ts:21",{"_index":2155,"title":{},"body":{"components/HostComponent.html":{}}}],["nodes/host/host.component.ts:29",{"_index":2156,"title":{},"body":{"components/HostComponent.html":{}}}],["nodes/host/hostnode",{"_index":365,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["nodes/host/hostnode.ts",{"_index":2222,"title":{},"body":{"classes/HostNode.html":{},"classes/ReteHostInfo.html":{},"miscellaneous/functions.html":{}}}],["nodes/host/hostnode.ts:124",{"_index":2264,"title":{},"body":{"classes/HostNode.html":{}}}],["nodes/host/hostnode.ts:132",{"_index":2243,"title":{},"body":{"classes/HostNode.html":{}}}],["nodes/host/hostnode.ts:140",{"_index":2248,"title":{},"body":{"classes/HostNode.html":{}}}],["nodes/host/hostnode.ts:15",{"_index":3182,"title":{},"body":{"classes/ReteHostInfo.html":{}}}],["nodes/host/hostnode.ts:16",{"_index":3181,"title":{},"body":{"classes/ReteHostInfo.html":{}}}],["nodes/host/hostnode.ts:17",{"_index":3179,"title":{},"body":{"classes/ReteHostInfo.html":{}}}],["nodes/host/hostnode.ts:18",{"_index":3180,"title":{},"body":{"classes/ReteHostInfo.html":{}}}],["nodes/host/hostnode.ts:19",{"_index":3183,"title":{},"body":{"classes/ReteHostInfo.html":{}}}],["nodes/host/hostnode.ts:49",{"_index":2230,"title":{},"body":{"classes/HostNode.html":{}}}],["nodes/host/hostnode.ts:67",{"_index":2233,"title":{},"body":{"classes/HostNode.html":{}}}],["nodes/host/hostnode.ts:80",{"_index":2246,"title":{},"body":{"classes/HostNode.html":{}}}],["nodes/host/hostnode.ts:94",{"_index":2251,"title":{},"body":{"classes/HostNode.html":{}}}],["nodes/network/network.component",{"_index":257,"title":{},"body":{"modules/AppModule.html":{}}}],["nodes/network/network.component.ts",{"_index":2688,"title":{},"body":{"components/NetworkComponent.html":{}}}],["nodes/network/network.component.ts:16",{"_index":2696,"title":{},"body":{"components/NetworkComponent.html":{}}}],["nodes/network/network.component.ts:17",{"_index":2695,"title":{},"body":{"components/NetworkComponent.html":{}}}],["nodes/network/network.component.ts:18",{"_index":2694,"title":{},"body":{"components/NetworkComponent.html":{}}}],["nodes/network/network.component.ts:19",{"_index":2693,"title":{},"body":{"components/NetworkComponent.html":{}}}],["nodes/network/network.component.ts:20",{"_index":2691,"title":{},"body":{"components/NetworkComponent.html":{}}}],["nodes/network/network.component.ts:29",{"_index":2692,"title":{},"body":{"components/NetworkComponent.html":{}}}],["nodes/network/networknode",{"_index":367,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["nodes/network/networknode.ts",{"_index":2704,"title":{},"body":{"classes/NetworkNode.html":{},"classes/ReteNetworkInfo.html":{},"miscellaneous/functions.html":{}}}],["nodes/network/networknode.ts:119",{"_index":2711,"title":{},"body":{"classes/NetworkNode.html":{}}}],["nodes/network/networknode.ts:127",{"_index":2707,"title":{},"body":{"classes/NetworkNode.html":{}}}],["nodes/network/networknode.ts:135",{"_index":2709,"title":{},"body":{"classes/NetworkNode.html":{}}}],["nodes/network/networknode.ts:16",{"_index":3296,"title":{},"body":{"classes/ReteNetworkInfo.html":{}}}],["nodes/network/networknode.ts:17",{"_index":3297,"title":{},"body":{"classes/ReteNetworkInfo.html":{}}}],["nodes/network/networknode.ts:45",{"_index":2705,"title":{},"body":{"classes/NetworkNode.html":{}}}],["nodes/network/networknode.ts:63",{"_index":2706,"title":{},"body":{"classes/NetworkNode.html":{}}}],["nodes/network/networknode.ts:75",{"_index":2708,"title":{},"body":{"classes/NetworkNode.html":{}}}],["nodes/network/networknode.ts:88",{"_index":2710,"title":{},"body":{"classes/NetworkNode.html":{}}}],["nodes/rete",{"_index":2272,"title":{},"body":{"classes/HostNode.html":{},"classes/ReteHostInfo.html":{}}}],["nodes/subnet/subnet.component",{"_index":256,"title":{},"body":{"modules/AppModule.html":{}}}],["nodes/subnet/subnet.component.ts",{"_index":3414,"title":{},"body":{"components/SubnetComponent.html":{}}}],["nodes/subnet/subnet.component.ts:16",{"_index":3422,"title":{},"body":{"components/SubnetComponent.html":{}}}],["nodes/subnet/subnet.component.ts:17",{"_index":3421,"title":{},"body":{"components/SubnetComponent.html":{}}}],["nodes/subnet/subnet.component.ts:18",{"_index":3420,"title":{},"body":{"components/SubnetComponent.html":{}}}],["nodes/subnet/subnet.component.ts:19",{"_index":3419,"title":{},"body":{"components/SubnetComponent.html":{}}}],["nodes/subnet/subnet.component.ts:20",{"_index":3417,"title":{},"body":{"components/SubnetComponent.html":{}}}],["nodes/subnet/subnet.component.ts:28",{"_index":3418,"title":{},"body":{"components/SubnetComponent.html":{}}}],["nodes/subnet/subnetnode",{"_index":369,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["nodes/subnet/subnetnode.ts",{"_index":3299,"title":{},"body":{"classes/ReteSubnetInfo.html":{},"classes/SubnetNode.html":{},"miscellaneous/functions.html":{}}}],["nodes/subnet/subnetnode.ts:119",{"_index":3447,"title":{},"body":{"classes/SubnetNode.html":{}}}],["nodes/subnet/subnetnode.ts:127",{"_index":3443,"title":{},"body":{"classes/SubnetNode.html":{}}}],["nodes/subnet/subnetnode.ts:135",{"_index":3445,"title":{},"body":{"classes/SubnetNode.html":{}}}],["nodes/subnet/subnetnode.ts:15",{"_index":3300,"title":{},"body":{"classes/ReteSubnetInfo.html":{}}}],["nodes/subnet/subnetnode.ts:16",{"_index":3303,"title":{},"body":{"classes/ReteSubnetInfo.html":{}}}],["nodes/subnet/subnetnode.ts:17",{"_index":3301,"title":{},"body":{"classes/ReteSubnetInfo.html":{}}}],["nodes/subnet/subnetnode.ts:46",{"_index":3441,"title":{},"body":{"classes/SubnetNode.html":{}}}],["nodes/subnet/subnetnode.ts:64",{"_index":3442,"title":{},"body":{"classes/SubnetNode.html":{}}}],["nodes/subnet/subnetnode.ts:76",{"_index":3444,"title":{},"body":{"classes/SubnetNode.html":{}}}],["nodes/subnet/subnetnode.ts:89",{"_index":3446,"title":{},"body":{"classes/SubnetNode.html":{}}}],["nodesdata",{"_index":1641,"title":{},"body":{"classes/ExportModule.html":{}}}],["nodeselected",{"_index":3210,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["nodeservice",{"_index":2145,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["nodesimpledata",{"_index":915,"title":{"classes/NodeSimpleData.html":{}},"body":{"classes/ConstraintsMSD.html":{},"classes/ExportModule.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["nodesimpledata.relationships.push",{"_index":1691,"title":{},"body":{"classes/ExportModule.html":{}}}],["nodetopologyelement",{"_index":396,"title":{"classes/NodeTopologyElement.html":{}},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["nodetype",{"_index":2149,"title":{},"body":{"components/HostComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{}}}],["nodetype.host",{"_index":2168,"title":{},"body":{"components/HostComponent.html":{}}}],["nodetype.network",{"_index":2697,"title":{},"body":{"components/NetworkComponent.html":{}}}],["nodetype.subnet",{"_index":3423,"title":{},"body":{"components/SubnetComponent.html":{}}}],["nodetypeexport",{"_index":909,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/ExportModule.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"miscellaneous/enumerations.html":{}}}],["nodetypeexport.host",{"_index":1684,"title":{},"body":{"classes/ExportModule.html":{}}}],["nodi",{"_index":425,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"components/ControlTemplate.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/ExportModule.html":{},"classes/FlavorApplication.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NetworkNode.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/SubnetNode.html":{},"classes/TheaterApplication.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/_Control.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["nodi/moduli",{"_index":979,"title":{},"body":{"components/ControlTemplate.html":{},"classes/_Control.html":{}}}],["nodo",{"_index":1397,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["nome",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AttachmentsService.html":{},"injectables/AuthGuard.html":{},"components/ComposerComponent.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"injectables/FlavorService.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"classes/HostNode.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"injectables/ModuleService.html":{},"components/NavbarComponent.html":{},"components/NetworkComponent.html":{},"classes/NetworkNode.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"injectables/SpinnerService.html":{},"injectables/StorageService.html":{},"components/SubnetComponent.html":{},"classes/SubnetNode.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"injectables/TheaterService.html":{},"injectables/TokenService.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{},"miscellaneous/functions.html":{}}}],["nomemosulo.module.json",{"_index":1804,"title":{},"body":{"injectables/ExportService.html":{}}}],["nometeatro.theater.json",{"_index":1807,"title":{},"body":{"injectables/ExportService.html":{}}}],["non",{"_index":323,"title":{},"body":{"modules/AppModule.html":{},"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"classes/FlavorApplication.html":{},"components/HomeComponent.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"injectables/ModalService.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"components/NavbarComponent.html":{},"classes/NetworkNode.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SimpleModuleApplication.html":{},"classes/SubnetNode.html":{},"classes/TheaterApplication.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"modules.html":{}}}],["none",{"_index":624,"title":{},"body":{"injectables/AttachmentsService.html":{},"components/DataInputV2Component.html":{},"components/DocsComponent.html":{},"injectables/ExportService.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["normal",{"_index":1275,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["normalizzazione",{"_index":2906,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["note",{"_index":2133,"title":{},"body":{"components/HomeComponent.html":{}}}],["notifica",{"_index":1249,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["nowrap",{"_index":1347,"title":{},"body":{"components/DataItemComponent.html":{}}}],["nt",{"_index":1655,"title":{},"body":{"classes/ExportModule.html":{},"classes/ExportTheater.html":{}}}],["null",{"_index":707,"title":{},"body":{"classes/BorderNetworkDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"injectables/ModalService.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetOSRouterDTO.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkDTO.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SubnetDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["number",{"_index":357,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"injectables/AttachmentsService.html":{},"classes/BlueprintFileDTO.html":{},"classes/BorderNetworkDTO.html":{},"interfaces/CommonModule.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"components/ControlTemplate.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/DeployInstanceDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"classes/FlavorApplication.html":{},"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"injectables/FlavorService.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"classes/HostModuleDTO.html":{},"classes/HostNode.html":{},"classes/HostPortModuleDTO.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"injectables/ModuleService.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"interfaces/ModuleTopology.html":{},"classes/NameMappingDTO.html":{},"classes/NetOSRouterDTO.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkDTO.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/NodeTopologyElement.html":{},"classes/PageableDTO.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SelectOption.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/SingleDataInputReturned.html":{},"classes/SortDTO.html":{},"classes/SourceExport.html":{},"classes/StatisticItemDTO.html":{},"classes/SubnetDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"injectables/TheaterService.html":{},"classes/TheaterSimpleData.html":{},"interfaces/TheaterTopology.html":{},"classes/TheatreStatusDTO.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/TypesCatalogueDTO.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["numberofelements",{"_index":478,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["number|string",{"_index":1961,"title":{},"body":{"injectables/FlavorService.html":{}}}],["nuovo",{"_index":2238,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["nvm",{"_index":3859,"title":{},"body":{"index.html":{}}}],["o",{"_index":780,"title":{},"body":{"components/ComposerComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"components/HomeComponent.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"injectables/ParseService.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"components/TabnavComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"components/VisualizerComponent.html":{}}}],["o.length",{"_index":2291,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["object.assign",{"_index":1660,"title":{},"body":{"classes/ExportModule.html":{},"classes/ExportTheater.html":{}}}],["object.entries(module_content.properties.consumer_interfaces_link).map(([key",{"_index":2971,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["object.entries(modules).map(async",{"_index":2943,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["object.entries(modulesapplication).map(async",{"_index":2937,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["object.entries(modulesinfo).map(([key",{"_index":2976,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["object.entries(rowtheater.blueprintfile.node_templates).map(([key",{"_index":2917,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["object.entries(theater.blueprintfile.node_templates).map(([key",{"_index":2968,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["object.entries(theater.blueprintfile.node_templates).map(async",{"_index":2950,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["object.keys(node.data).length",{"_index":2283,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["objectdata",{"_index":1790,"title":{},"body":{"injectables/ExportService.html":{}}}],["observable",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"injectables/ModalService.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{}}}],["observe",{"_index":3641,"title":{},"body":{"injectables/TokenService.html":{}}}],["occourence",{"_index":2977,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["occourence.get(network_name",{"_index":3004,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["occourence.get(subnet_name",{"_index":2995,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["occourence.set(network_name",{"_index":3008,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["occourence.set(subnet_name",{"_index":3000,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["occpa",{"_index":958,"title":{},"body":{"components/ControlTemplate.html":{},"classes/_Control.html":{}}}],["occupa",{"_index":748,"title":{},"body":{"components/ComposerComponent.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForTheaterComposer.html":{},"injectables/StorageService.html":{},"injectables/TokenService.html":{},"components/VisualizerComponent.html":{}}}],["occurred",{"_index":880,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["octagonal",{"_index":3788,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["offcanvas",{"_index":2727,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["offcanvas'},{'name",{"_index":177,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["offcanvas.component.html",{"_index":2738,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["offcanvas.component.sass",{"_index":2737,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["offcanvascomponent",{"_index":176,"title":{"components/OffcanvasComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"overview.html":{}}}],["offcavanvascomponent",{"_index":2743,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["offset",{"_index":2792,"title":{},"body":{"classes/PageableDTO.html":{},"classes/SortDTO.html":{}}}],["oggetto",{"_index":43,"title":{},"body":{"classes/Aoption.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"classes/NavbarElement.html":{},"classes/NavbarItem.html":{},"classes/ParseDataForTheaterVisualizer.html":{}}}],["ogni",{"_index":2856,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["oh",{"_index":884,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["ol",{"_index":2290,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["old",{"_index":2472,"title":{},"body":{"injectables/ModalService.html":{}}}],["old_value",{"_index":1145,"title":{},"body":{"classes/DataInputReturnedV2.html":{},"components/DataInputV2Component.html":{}}}],["onbuttonpressed",{"_index":2378,"title":{},"body":{"components/ModalComponent.html":{}}}],["onchange",{"_index":1172,"title":{},"body":{"components/DataInputV2Component.html":{},"classes/_Control.html":{}}}],["onchange(val",{"_index":990,"title":{},"body":{"components/ControlTemplate.html":{},"classes/_Control.html":{}}}],["one",{"_index":1349,"title":{},"body":{"components/DataItemComponent.html":{}}}],["onfileselected",{"_index":1893,"title":{},"body":{"injectables/FileService.html":{},"components/HomeComponent.html":{}}}],["onfileselected(event",{"_index":1901,"title":{},"body":{"injectables/FileService.html":{},"components/HomeComponent.html":{}}}],["oninit",{"_index":732,"title":{},"body":{"components/ComposerComponent.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DocsComponent.html":{},"components/HomeComponent.html":{},"components/HowToUseComponent.html":{},"components/TabnavComponent.html":{},"components/VisualizerComponent.html":{}}}],["onlyresize",{"_index":1306,"title":{},"body":{"components/DataItemComponent.html":{}}}],["onremove",{"_index":1296,"title":{},"body":{"components/DataItemComponent.html":{}}}],["onreset",{"_index":1984,"title":{},"body":{"components/HomeComponent.html":{}}}],["onreset(input",{"_index":2002,"title":{},"body":{"components/HomeComponent.html":{}}}],["onupload",{"_index":1985,"title":{},"body":{"components/HomeComponent.html":{}}}],["op",{"_index":1342,"title":{},"body":{"components/DataItemComponent.html":{}}}],["opacity",{"_index":2782,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["openstack_config",{"_index":943,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/ExportModule.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["operation",{"_index":2466,"title":{},"body":{"injectables/ModalService.html":{}}}],["operativo",{"_index":1373,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"miscellaneous/enumerations.html":{}}}],["operazione",{"_index":1108,"title":{},"body":{"components/DataInputComponent.html":{},"components/HomeComponent.html":{}}}],["operazioni",{"_index":402,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"components/DataInputV2Component.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/FlavorApplication.html":{},"components/HomeComponent.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"injectables/ModalService.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NetworkNode.html":{},"classes/NodeTopologyElement.html":{},"components/OffcanvasComponent.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"classes/SubnetNode.html":{},"classes/TheaterApplication.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"miscellaneous/enumerations.html":{}}}],["opportune",{"_index":1997,"title":{},"body":{"components/HomeComponent.html":{}}}],["oppure",{"_index":1105,"title":{},"body":{"components/DataInputComponent.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["opt",{"_index":2648,"title":{},"body":{"components/NavbarComponent.html":{},"components/OffcanvasComponent.html":{}}}],["opt.attr_val",{"_index":2650,"title":{},"body":{"components/NavbarComponent.html":{}}}],["opt.text",{"_index":1131,"title":{},"body":{"components/DataInputComponent.html":{}}}],["option",{"_index":1045,"title":{},"body":{"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{},"injectables/TokenService.html":{}}}],["opzionale",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AreaApplication.html":{},"injectables/AttachmentsService.html":{},"injectables/AuthGuard.html":{},"components/ComposerComponent.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/DeployInstanceDTO.html":{},"components/DocsComponent.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"injectables/FlavorService.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"classes/HostNode.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"components/ModalComponent.html":{},"classes/ModalItem.html":{},"injectables/ModalService.html":{},"classes/ModuleApplication.html":{},"classes/ModuleDTO.html":{},"injectables/ModuleService.html":{},"components/NavbarComponent.html":{},"classes/NavbarElement.html":{},"classes/NavbarItem.html":{},"components/NetworkComponent.html":{},"classes/NetworkNode.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SelectOption.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"injectables/SpinnerService.html":{},"injectables/StorageService.html":{},"components/SubnetComponent.html":{},"classes/SubnetNode.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"injectables/TheaterService.html":{},"injectables/TokenService.html":{},"interfaces/TopologyList.html":{},"components/UnderbarComponent.html":{},"classes/UnderbarItem.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{},"miscellaneous/functions.html":{}}}],["opzioni",{"_index":10,"title":{},"body":{"classes/Aoption.html":{},"components/HomeComponent.html":{},"classes/NavbarElement.html":{},"classes/NavbarItem.html":{}}}],["ora",{"_index":1686,"title":{},"body":{"classes/ExportModule.html":{}}}],["orchestrator",{"_index":2085,"title":{},"body":{"components/HomeComponent.html":{}}}],["organizzare",{"_index":2877,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["organizzata",{"_index":2839,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["os",{"_index":2170,"title":{},"body":{"components/HostComponent.html":{},"classes/HostNode.html":{},"classes/ReteHostInfo.html":{}}}],["ottimizzare",{"_index":1589,"title":{},"body":{"classes/ExportModule.html":{}}}],["out",{"_index":1690,"title":{},"body":{"classes/ExportModule.html":{},"index.html":{}}}],["output",{"_index":526,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/ExportModule.html":{},"classes/GenericParameterDTO.html":{},"components/HostComponent.html":{},"classes/HostNode.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"components/ModalComponent.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"components/NavbarComponent.html":{},"components/NetworkComponent.html":{},"classes/NetworkNode.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"components/SubnetComponent.html":{},"classes/SubnetNode.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/TypesCatalogueDTO.html":{},"components/UnderbarComponent.html":{},"miscellaneous/enumerations.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["output.name",{"_index":2182,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["output=\"output",{"_index":1371,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["outputdata",{"_index":1642,"title":{},"body":{"classes/ExportModule.html":{}}}],["outputs",{"_index":921,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/HostNode.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkNode.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["outside",{"_index":2135,"title":{},"body":{"components/HomeComponent.html":{}}}],["overflow",{"_index":138,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/DataItemComponent.html":{},"components/OffcanvasComponent.html":{},"components/TabnavComponent.html":{},"components/VisualizerComponent.html":{}}}],["overview",{"_index":3906,"title":{"overview.html":{}},"body":{}}],["p",{"_index":2339,"title":{},"body":{"components/MirroringModuleInstanceComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["p,h4,h5",{"_index":2788,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["package",{"_index":3729,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padding",{"_index":1001,"title":{},"body":{"components/ControlTemplate.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["page",{"_index":2608,"title":{},"body":{"injectables/ModuleService.html":{}}}],["pageable",{"_index":472,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["pageabledto",{"_index":466,"title":{"classes/PageableDTO.html":{}},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/PageableDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/SortDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["paged",{"_index":2793,"title":{},"body":{"classes/PageableDTO.html":{},"classes/SortDTO.html":{}}}],["pageindex",{"_index":2597,"title":{},"body":{"injectables/ModuleService.html":{}}}],["pagenumber",{"_index":2794,"title":{},"body":{"classes/PageableDTO.html":{},"classes/SortDTO.html":{}}}],["pages/docs/docs.component",{"_index":306,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["pages/elements/navbar",{"_index":286,"title":{},"body":{"modules/AppModule.html":{}}}],["pages/home/home.component",{"_index":239,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["pages/how",{"_index":240,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["pagesize",{"_index":2795,"title":{},"body":{"classes/PageableDTO.html":{},"classes/SortDTO.html":{}}}],["pagina",{"_index":1460,"title":{},"body":{"components/DocsComponent.html":{},"components/HomeComponent.html":{}}}],["pagine",{"_index":757,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["panel",{"_index":2177,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["param",{"_index":831,"title":{},"body":{"components/ComposerComponent.html":{},"components/DataInputComponent.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"components/NavbarComponent.html":{},"classes/NetworkNode.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"classes/SubnetNode.html":{},"components/TabnavComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"injectables/TokenService.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["parameters",{"_index":795,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["parametri",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AttachmentsService.html":{},"injectables/AuthGuard.html":{},"components/ComposerComponent.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"injectables/FlavorService.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"classes/HostNode.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"injectables/ModuleService.html":{},"components/NavbarComponent.html":{},"components/NetworkComponent.html":{},"classes/NetworkNode.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"injectables/SpinnerService.html":{},"injectables/StorageService.html":{},"components/SubnetComponent.html":{},"classes/SubnetNode.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"injectables/TheaterService.html":{},"injectables/TokenService.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{},"miscellaneous/functions.html":{}}}],["parametro",{"_index":30,"title":{},"body":{"classes/Aoption.html":{},"classes/NavbarElement.html":{},"classes/NavbarItem.html":{}}}],["parentid",{"_index":483,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["pareserizzato",{"_index":2885,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["parsecommonelement",{"_index":2897,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["parsed",{"_index":1606,"title":{},"body":{"classes/ExportModule.html":{},"classes/ExportTheater.html":{}}}],["parsedatafortheatervisualizer",{"_index":2805,"title":{"classes/ParseDataForTheaterVisualizer.html":{}},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{}}}],["parsedatafortheatervisualizer(this.theaterservice",{"_index":3051,"title":{},"body":{"injectables/ParseService.html":{}}}],["parsedmodule",{"_index":3104,"title":{},"body":{"classes/PerseDataForModuleVisualizer.html":{}}}],["parseflavor",{"_index":3058,"title":{},"body":{"classes/PerseDataForModuleComposer.html":{}}}],["parseflavor(flavordto",{"_index":3061,"title":{},"body":{"classes/PerseDataForModuleComposer.html":{}}}],["parseflavorformodulecomposer",{"_index":3023,"title":{},"body":{"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{}}}],["parsemainmodule",{"_index":3078,"title":{},"body":{"classes/PerseDataForModuleVisualizer.html":{}}}],["parsemainmodule(id",{"_index":3095,"title":{},"body":{"classes/PerseDataForModuleVisualizer.html":{}}}],["parsemoduleformodulevisualizer",{"_index":3024,"title":{},"body":{"injectables/ParseService.html":{},"classes/PerseDataForModuleVisualizer.html":{}}}],["parsemoduleformodulevisualizer(id",{"_index":3030,"title":{},"body":{"injectables/ParseService.html":{},"classes/PerseDataForModuleVisualizer.html":{}}}],["parsemodulefortheatercomposer",{"_index":3025,"title":{},"body":{"injectables/ParseService.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["parsemoduleinstance",{"_index":2818,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["parsemoduleinstance(theater",{"_index":2867,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["parsemodulelist",{"_index":3114,"title":{},"body":{"classes/PerseDataForTheaterComposer.html":{}}}],["parsemodulesfromtheater",{"_index":2819,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["parsemodulesfromtheater(theateruuid",{"_index":2874,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["parser",{"_index":3713,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["parserizza",{"_index":2843,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["parserizzare",{"_index":1905,"title":{},"body":{"injectables/FileService.html":{},"classes/PerseDataForModuleVisualizer.html":{}}}],["parserizzati",{"_index":2838,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["parserizzato",{"_index":1898,"title":{},"body":{"injectables/FileService.html":{},"classes/PerseDataForModuleVisualizer.html":{}}}],["parseservice",{"_index":207,"title":{"injectables/ParseService.html":{}},"body":{"modules/AppModule.html":{},"components/ComposerComponent.html":{},"injectables/ParseService.html":{},"components/VisualizerComponent.html":{},"overview.html":{}}}],["parsetheater",{"_index":2820,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["parsetheater(id",{"_index":2879,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["parsetheaterfortheatervisualizer",{"_index":2821,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{}}}],["parsetheaterfortheatervisualizer(id",{"_index":2882,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{}}}],["parsing",{"_index":1593,"title":{},"body":{"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["parte",{"_index":1590,"title":{},"body":{"classes/ExportModule.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["partendo",{"_index":1611,"title":{},"body":{"classes/ExportModule.html":{}}}],["particolare",{"_index":1212,"title":{},"body":{"components/DataInputV2Component.html":{},"components/HomeComponent.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["passaggio",{"_index":2012,"title":{},"body":{"components/HomeComponent.html":{}}}],["passare",{"_index":1235,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["passata",{"_index":2632,"title":{},"body":{"components/NavbarComponent.html":{}}}],["passati",{"_index":730,"title":{},"body":{"components/ComposerComponent.html":{},"components/NavbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["passato",{"_index":28,"title":{},"body":{"classes/Aoption.html":{},"components/ComposerComponent.html":{},"classes/DataInputElement.html":{},"components/DataInputV2Component.html":{},"classes/ModalButton.html":{},"classes/ModalItem.html":{},"classes/NavbarElement.html":{},"classes/NavbarItem.html":{}}}],["path",{"_index":338,"title":{},"body":{"modules/AppRoutingModule.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"dependencies.html":{}}}],["pencil",{"_index":3804,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["per",{"_index":11,"title":{},"body":{"classes/Aoption.html":{},"components/AppComponent.html":{},"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaExport.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"components/ControlTemplate.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"components/DocsComponent.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/ExportModule.html":{},"injectables/FileService.html":{},"classes/FlavorApplication.html":{},"components/HomeComponent.html":{},"classes/HostNode.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModalButton.html":{},"components/ModalComponent.html":{},"classes/ModalItem.html":{},"injectables/ModalService.html":{},"classes/ModuleApplication.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleSimpleData.html":{},"interfaces/ModuleTopology.html":{},"classes/NavbarElement.html":{},"components/NavbarElementComponent.html":{},"classes/NavbarItem.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkNode.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/NodeTopologyElement.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SelectOption.html":{},"classes/SimpleModuleApplication.html":{},"classes/SingleDataInputReturned.html":{},"classes/SourceExport.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"components/TabnavComponent.html":{},"classes/TagsExport.html":{},"classes/TheaterApplication.html":{},"classes/TheaterExport.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/TheaterSimpleData.html":{},"interfaces/TheaterTopology.html":{},"injectables/TokenService.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["perch",{"_index":415,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["permette",{"_index":1292,"title":{},"body":{"components/DataItemComponent.html":{}}}],["permettono",{"_index":2888,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["persedataformodulecomposer",{"_index":3028,"title":{"classes/PerseDataForModuleComposer.html":{}},"body":{"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{}}}],["persedataformodulecomposer(this.flavorservice).parseflavorformodulecomposer",{"_index":3056,"title":{},"body":{"injectables/ParseService.html":{}}}],["persedataformodulevisualizer",{"_index":3032,"title":{"classes/PerseDataForModuleVisualizer.html":{}},"body":{"injectables/ParseService.html":{},"classes/PerseDataForModuleVisualizer.html":{}}}],["persedataformodulevisualizer(this.moduleservice).parsemoduleformodulevisualizer(id",{"_index":3055,"title":{},"body":{"injectables/ParseService.html":{}}}],["persedatafortheatercomposer",{"_index":3036,"title":{"classes/PerseDataForTheaterComposer.html":{}},"body":{"injectables/ParseService.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["persedatafortheatercomposer(this.moduleservice).parsemodulefortheatercomposer",{"_index":3053,"title":{},"body":{"injectables/ParseService.html":{}}}],["pi",{"_index":2163,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["picker",{"_index":308,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["pin",{"_index":3795,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["place",{"_index":1159,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["placeholder",{"_index":1033,"title":{},"body":{"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["platform",{"_index":500,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["plugin",{"_index":246,"title":{},"body":{"modules/AppModule.html":{},"components/ControlTemplate.html":{},"components/HostComponent.html":{},"classes/HostNode.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"components/NetworkComponent.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"components/SubnetComponent.html":{},"classes/SubnetNode.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/_Control.html":{},"dependencies.html":{},"index.html":{}}}],["plus",{"_index":3798,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["poi",{"_index":1248,"title":{},"body":{"components/DataInputV2Component.html":{},"classes/ExportModule.html":{},"injectables/ModalService.html":{}}}],["pointer",{"_index":1272,"title":{},"body":{"components/DataInputV2Component.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["popper",{"_index":278,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["popper.js",{"_index":3755,"title":{},"body":{"dependencies.html":{}}}],["popperjs/core",{"_index":3737,"title":{},"body":{"dependencies.html":{}}}],["port",{"_index":938,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/ExportModule.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"miscellaneous/enumerations.html":{}}}],["port.name",{"_index":2989,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["port.subnets.foreach",{"_index":2990,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["port_dst",{"_index":439,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["port_name",{"_index":2988,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["port_src",{"_index":438,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["porta",{"_index":1368,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"miscellaneous/enumerations.html":{}}}],["portare",{"_index":1355,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["porte",{"_index":1617,"title":{},"body":{"classes/ExportModule.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["portin",{"_index":3786,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["portname",{"_index":1694,"title":{},"body":{"classes/ExportModule.html":{}}}],["portout",{"_index":3789,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["ports",{"_index":936,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/ExportModule.html":{},"classes/HostModuleDTO.html":{},"classes/HostPortModuleDTO.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["ports[portname",{"_index":1720,"title":{},"body":{"classes/ExportModule.html":{}}}],["portsimpledata",{"_index":916,"title":{"classes/PortSimpleData.html":{}},"body":{"classes/ConstraintsMSD.html":{},"classes/ExportModule.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["portsimpledata.relationships.push",{"_index":1707,"title":{},"body":{"classes/ExportModule.html":{}}}],["porttypeexport",{"_index":910,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/ExportModule.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"miscellaneous/enumerations.html":{}}}],["porttypeexport.port",{"_index":1699,"title":{},"body":{"classes/ExportModule.html":{}}}],["position",{"_index":2188,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["posizione",{"_index":2752,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["posizioni",{"_index":2732,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["possesso",{"_index":2254,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["possibile",{"_index":1157,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["possibilit",{"_index":1312,"title":{},"body":{"components/DataItemComponent.html":{},"injectables/ModalService.html":{},"components/OffcanvasComponent.html":{}}}],["possono",{"_index":1600,"title":{},"body":{"classes/ExportModule.html":{},"classes/ExportTheater.html":{}}}],["posto",{"_index":2761,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["poter",{"_index":764,"title":{},"body":{"components/ComposerComponent.html":{},"injectables/ExportService.html":{},"injectables/ModalService.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"components/VisualizerComponent.html":{}}}],["poterli",{"_index":3124,"title":{},"body":{"classes/PerseDataForTheaterComposer.html":{}}}],["potr",{"_index":1970,"title":{},"body":{"components/HomeComponent.html":{}}}],["predefinito",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"classes/InterfaceConstraints.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/ModalItem.html":{},"injectables/ModalService.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"injectables/ParseService.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"injectables/SpinnerService.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/VisualizerComponent.html":{}}}],["predilige",{"_index":1184,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["predispone",{"_index":1207,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["preferisce",{"_index":2915,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["prende",{"_index":433,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"classes/FlavorApplication.html":{},"components/HomeComponent.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["prendere",{"_index":422,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"components/VisualizerComponent.html":{}}}],["present",{"_index":668,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["presenta",{"_index":805,"title":{},"body":{"components/ComposerComponent.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["presente",{"_index":2747,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["preso",{"_index":807,"title":{},"body":{"components/ComposerComponent.html":{}}}],["prettamente",{"_index":407,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["pretty",{"_index":605,"title":{},"body":{"injectables/AttachmentsService.html":{},"injectables/ExportService.html":{},"dependencies.html":{}}}],["prevede",{"_index":1476,"title":{},"body":{"components/DocsComponent.html":{},"injectables/ExportService.html":{}}}],["prevenire",{"_index":117,"title":{},"body":{"components/AppComponent.html":{}}}],["previsto",{"_index":418,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["prima",{"_index":788,"title":{},"body":{"components/ComposerComponent.html":{},"components/DataInputV2Component.html":{},"classes/ExportModule.html":{},"components/TabnavComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"miscellaneous/functions.html":{}}}],["primary",{"_index":2361,"title":{},"body":{"classes/ModalButton.html":{},"classes/ModalItem.html":{},"injectables/ModalService.html":{}}}],["principale",{"_index":2423,"title":{},"body":{"injectables/ModalService.html":{}}}],["private",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"injectables/AttachmentsService.html":{},"components/ComposerComponent.html":{},"components/DocsComponent.html":{},"injectables/FlavorService.html":{},"components/HomeComponent.html":{},"injectables/ModuleService.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"injectables/StorageService.html":{},"injectables/TheaterService.html":{},"injectables/TokenService.html":{},"components/VisualizerComponent.html":{}}}],["probabile",{"_index":2956,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["problem",{"_index":879,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["procedere",{"_index":3656,"title":{},"body":{"components/UnderbarComponent.html":{}}}],["proceed",{"_index":661,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["processare",{"_index":1547,"title":{},"body":{"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{}}}],["processato",{"_index":1087,"title":{},"body":{"components/DataInputComponent.html":{}}}],["procura",{"_index":3097,"title":{},"body":{"classes/PerseDataForModuleVisualizer.html":{}}}],["prod",{"_index":3886,"title":{},"body":{"index.html":{}}}],["produce",{"_index":2872,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["producendo",{"_index":1287,"title":{},"body":{"components/DataItemComponent.html":{}}}],["producer",{"_index":1367,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"miscellaneous/enumerations.html":{}}}],["production",{"_index":3888,"title":{},"body":{"index.html":{}}}],["project",{"_index":3857,"title":{},"body":{"index.html":{}}}],["promise",{"_index":642,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/FileService.html":{},"injectables/FlavorService.html":{},"injectables/ModuleService.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"injectables/TheaterService.html":{},"miscellaneous/functions.html":{}}}],["promise((resolve",{"_index":1911,"title":{},"body":{"injectables/FileService.html":{},"injectables/FlavorService.html":{},"injectables/ModuleService.html":{},"injectables/TheaterService.html":{}}}],["promise.all",{"_index":2942,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["properties",{"_index":451,"title":{"properties.html":{}},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"interfaces/CommonModule.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"classes/FlavorApplication.html":{},"classes/GenericParameterDTO.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"interfaces/ModuleTopology.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteConnection.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/SourceExport.html":{},"classes/StatisticItemDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterApplication.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheaterSimpleData.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/TypesCatalogueDTO.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["propertiesmisd",{"_index":572,"title":{"classes/PropertiesMISD.html":{}},"body":{"classes/AreaExport.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/ExportTheater.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesTSD.html":{},"classes/SourceExport.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{}}}],["propertiesmsd",{"_index":922,"title":{"classes/PropertiesMSD.html":{}},"body":{"classes/ConstraintsMSD.html":{},"classes/ExportModule.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["propertiesnsd",{"_index":942,"title":{"classes/PropertiesNSD.html":{}},"body":{"classes/ConstraintsMSD.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["propertiesssd",{"_index":946,"title":{"classes/PropertiesSSD.html":{}},"body":{"classes/ConstraintsMSD.html":{},"classes/ExportModule.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["propertiestsd",{"_index":570,"title":{"classes/PropertiesTSD.html":{}},"body":{"classes/AreaExport.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesTSD.html":{},"classes/SourceExport.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{}}}],["propriet",{"_index":15,"title":{},"body":{"classes/Aoption.html":{},"components/AppComponent.html":{},"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"classes/BlueprintFileDTO.html":{},"classes/BorderNetworkDTO.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputReturnedV2.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/DeployInstanceDTO.html":{},"components/DocsComponent.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"classes/FlavorApplication.html":{},"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"classes/HostModuleDTO.html":{},"classes/HostNode.html":{},"classes/HostPortModuleDTO.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModalButton.html":{},"components/ModalComponent.html":{},"classes/ModalItem.html":{},"injectables/ModalService.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"interfaces/ModuleTopology.html":{},"classes/NameMappingDTO.html":{},"classes/NavbarElement.html":{},"classes/NavbarItem.html":{},"classes/NetOSRouterDTO.html":{},"components/NetworkComponent.html":{},"classes/NetworkDTO.html":{},"classes/NetworkNode.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/NodeTopologyElement.html":{},"components/OffcanvasComponent.html":{},"classes/PageableDTO.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SelectOption.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/SingleDataInputReturned.html":{},"classes/SortDTO.html":{},"classes/SourceExport.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"classes/StatisticItemDTO.html":{},"injectables/StorageService.html":{},"components/SubnetComponent.html":{},"classes/SubnetDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"components/TabnavComponent.html":{},"classes/TabnavElement.html":{},"classes/TabnavItem.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/TheaterSimpleData.html":{},"interfaces/TheaterTopology.html":{},"classes/TheatreStatusDTO.html":{},"injectables/TokenService.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/TypesCatalogueDTO.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{},"miscellaneous/enumerations.html":{},"properties.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["props",{"_index":981,"title":{},"body":{"components/ControlTemplate.html":{},"classes/_Control.html":{}}}],["protected",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"components/ComposerComponent.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/VisualizerComponent.html":{}}}],["protractor",{"_index":3897,"title":{},"body":{"index.html":{}}}],["proveniente",{"_index":827,"title":{},"body":{"components/ComposerComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"components/VisualizerComponent.html":{}}}],["provenienti",{"_index":3018,"title":{},"body":{"injectables/ParseService.html":{}}}],["provide",{"_index":313,"title":{},"body":{"modules/AppModule.html":{}}}],["providedin",{"_index":606,"title":{},"body":{"injectables/AttachmentsService.html":{},"injectables/AuthGuard.html":{},"injectables/ExportService.html":{},"injectables/FileService.html":{},"injectables/FlavorService.html":{},"injectables/ModalService.html":{},"injectables/ModuleService.html":{},"injectables/ParseService.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"injectables/StorageService.html":{},"injectables/TheaterService.html":{},"injectables/TokenService.html":{}}}],["provider",{"_index":236,"title":{},"body":{"modules/AppModule.html":{}}}],["providerinitkeycloak",{"_index":311,"title":{},"body":{"modules/AppModule.html":{}}}],["providers",{"_index":216,"title":{},"body":{"modules/AppModule.html":{},"classes/ConstraintsMSD.html":{},"classes/ExportModule.html":{},"components/HostComponent.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"components/NetworkComponent.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"components/SubnetComponent.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["provvede",{"_index":3129,"title":{},"body":{"classes/PerseDataForTheaterComposer.html":{}}}],["provveder",{"_index":1191,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["ps",{"_index":404,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["pu",{"_index":1183,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["public",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"injectables/ModalService.html":{},"classes/ReteTheaterComposerSettings.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{}}}],["pulsante",{"_index":1313,"title":{},"body":{"components/DataItemComponent.html":{},"classes/ModalButton.html":{},"components/ModalComponent.html":{},"classes/ModalItem.html":{}}}],["pulsanti",{"_index":2387,"title":{},"body":{"components/ModalComponent.html":{}}}],["qs",{"_index":3757,"title":{},"body":{"dependencies.html":{}}}],["qualche",{"_index":1448,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["quando",{"_index":1096,"title":{},"body":{"components/DataInputComponent.html":{},"components/HomeComponent.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"components/OffcanvasComponent.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"components/TabnavComponent.html":{}}}],["quasi",{"_index":2428,"title":{},"body":{"injectables/ModalService.html":{}}}],["quasta",{"_index":2255,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["quattro",{"_index":2754,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["quei",{"_index":2887,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["quella",{"_index":429,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["quello",{"_index":2913,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["questa",{"_index":405,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"components/DataInputV2Component.html":{},"classes/FlavorApplication.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NetworkNode.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteConnection.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SimpleModuleApplication.html":{},"classes/SubnetNode.html":{},"classes/TheaterApplication.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["questi",{"_index":1605,"title":{},"body":{"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"injectables/ModalService.html":{}}}],["questo",{"_index":1295,"title":{},"body":{"components/DataItemComponent.html":{},"injectables/ModalService.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{}}}],["qui",{"_index":1450,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["radius",{"_index":998,"title":{},"body":{"components/ControlTemplate.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["raggiungibile",{"_index":3379,"title":{},"body":{"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{}}}],["ram",{"_index":1925,"title":{},"body":{"classes/FlavorApplication.html":{},"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"components/HostComponent.html":{},"classes/HostNode.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/ReteHostInfo.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{}}}],["range",{"_index":2082,"title":{},"body":{"components/HomeComponent.html":{}}}],["rappresenta",{"_index":8,"title":{},"body":{"classes/Aoption.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"classes/NavbarElement.html":{},"classes/NavbarItem.html":{},"classes/NetworkNode.html":{},"components/OffcanvasComponent.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"components/TabnavComponent.html":{},"classes/TabnavElement.html":{},"classes/TabnavItem.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["rappresentazione",{"_index":1422,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"miscellaneous/enumerations.html":{}}}],["rappresente",{"_index":2745,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["rc.1",{"_index":3764,"title":{},"body":{"dependencies.html":{}}}],["rc.2",{"_index":3761,"title":{},"body":{"dependencies.html":{}}}],["rc2",{"_index":3767,"title":{},"body":{"dependencies.html":{}}}],["reactiveformsmodule",{"_index":300,"title":{},"body":{"modules/AppModule.html":{}}}],["read",{"_index":1922,"title":{},"body":{"injectables/FileService.html":{}}}],["readme",{"_index":3901,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":643,"title":{},"body":{"injectables/AuthGuard.html":{},"components/ControlTemplate.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/_Control.html":{},"dependencies.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["readonlyplugin",{"_index":3294,"title":{},"body":{"classes/ReteModuleVisualizerSettings.html":{}}}],["recognized",{"_index":1667,"title":{},"body":{"classes/ExportModule.html":{}}}],["redirecturi",{"_index":653,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["redirezionamento",{"_index":2011,"title":{},"body":{"components/HomeComponent.html":{}}}],["redirezione",{"_index":756,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["redo",{"_index":3254,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"index.html":{}}}],["reduce",{"_index":1303,"title":{},"body":{"components/DataItemComponent.html":{},"components/OffcanvasComponent.html":{}}}],["reject",{"_index":1912,"title":{},"body":{"injectables/FileService.html":{},"injectables/FlavorService.html":{},"injectables/ModuleService.html":{},"injectables/TheaterService.html":{}}}],["reject(\"the",{"_index":1915,"title":{},"body":{"injectables/FileService.html":{}}}],["reject(\"unable",{"_index":1921,"title":{},"body":{"injectables/FileService.html":{}}}],["reject(e",{"_index":1919,"title":{},"body":{"injectables/FileService.html":{}}}],["reject(error",{"_index":1960,"title":{},"body":{"injectables/FlavorService.html":{},"injectables/ModuleService.html":{},"injectables/TheaterService.html":{}}}],["relation",{"_index":1685,"title":{},"body":{"classes/ExportModule.html":{}}}],["relationships",{"_index":939,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/ExportModule.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["relationshipsexport",{"_index":940,"title":{"classes/RelationshipsExport.html":{}},"body":{"classes/ConstraintsMSD.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["relationshipstypeexport",{"_index":911,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/ExportModule.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"miscellaneous/enumerations.html":{}}}],["relationshipstypeexport.connect_port",{"_index":1692,"title":{},"body":{"classes/ExportModule.html":{}}}],["relationshipstypeexport.contained_in",{"_index":1717,"title":{},"body":{"classes/ExportModule.html":{}}}],["relationshipstypeexport.depends_on",{"_index":1708,"title":{},"body":{"classes/ExportModule.html":{}}}],["relativa",{"_index":411,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["relative",{"_index":2189,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["relazioni",{"_index":1639,"title":{},"body":{"classes/ExportModule.html":{}}}],["relevant",{"_index":2180,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["reload",{"_index":3876,"title":{},"body":{"index.html":{}}}],["remote_interface",{"_index":536,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/ExportTheater.html":{},"classes/GenericParameterDTO.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["remote_interface:string",{"_index":579,"title":{},"body":{"classes/AreaExport.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesTSD.html":{},"classes/SourceExport.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{}}}],["remove",{"_index":1304,"title":{},"body":{"components/DataItemComponent.html":{}}}],["rename(component",{"_index":3263,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["rende",{"_index":3378,"title":{},"body":{"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{}}}],["render",{"_index":245,"title":{},"body":{"modules/AppModule.html":{},"components/ControlTemplate.html":{},"components/HostComponent.html":{},"classes/HostNode.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"components/NetworkComponent.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"components/SubnetComponent.html":{},"classes/SubnetNode.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/_Control.html":{},"dependencies.html":{}}}],["rendering",{"_index":2726,"title":{},"body":{"components/OffcanvasComponent.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["renderizza",{"_index":3291,"title":{},"body":{"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["renderizzare",{"_index":1064,"title":{},"body":{"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{}}}],["repeat",{"_index":2108,"title":{},"body":{"components/HomeComponent.html":{}}}],["reperibili",{"_index":1628,"title":{},"body":{"classes/ExportModule.html":{},"classes/ExportTheater.html":{}}}],["reperimento",{"_index":762,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["reperire",{"_index":1477,"title":{},"body":{"components/DocsComponent.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["reperiti",{"_index":800,"title":{},"body":{"components/ComposerComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"miscellaneous/enumerations.html":{}}}],["reperito",{"_index":1481,"title":{},"body":{"components/DocsComponent.html":{},"classes/ExportModule.html":{}}}],["required",{"_index":657,"title":{},"body":{"injectables/AuthGuard.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"components/HomeComponent.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{}}}],["requiredroles",{"_index":658,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["requiredroles.every((role",{"_index":669,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["requiredroles.length",{"_index":666,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["res",{"_index":1958,"title":{},"body":{"injectables/FlavorService.html":{},"injectables/ModuleService.html":{},"injectables/TheaterService.html":{}}}],["reset",{"_index":211,"title":{},"body":{"modules/AppModule.html":{},"components/HomeComponent.html":{},"overview.html":{}}}],["resize",{"_index":3792,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["resolve",{"_index":3601,"title":{},"body":{"injectables/TheaterService.html":{}}}],["resolve(json.parse(filereader.result",{"_index":1918,"title":{},"body":{"injectables/FileService.html":{}}}],["resolve(res",{"_index":1959,"title":{},"body":{"injectables/FlavorService.html":{},"injectables/ModuleService.html":{},"injectables/TheaterService.html":{}}}],["resource_id",{"_index":945,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["responsetype",{"_index":612,"title":{},"body":{"injectables/AttachmentsService.html":{},"components/DocsComponent.html":{}}}],["resposnse",{"_index":2473,"title":{},"body":{"injectables/ModalService.html":{}}}],["restituire",{"_index":2889,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["restituisce",{"_index":430,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"miscellaneous/enumerations.html":{}}}],["restituiscono",{"_index":1518,"title":{},"body":{"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{}}}],["restituzione",{"_index":1424,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"miscellaneous/enumerations.html":{}}}],["rete",{"_index":179,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/FlavorApplication.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"classes/HostNode.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"components/ModalComponent.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"classes/NetworkNode.html":{},"classes/NodeTopologyElement.html":{},"components/OffcanvasComponent.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SimpleModuleApplication.html":{},"components/SubnetComponent.html":{},"classes/SubnetNode.html":{},"components/TabnavComponent.html":{},"classes/TheaterApplication.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{}}}],["rete/types/core/data",{"_index":1643,"title":{},"body":{"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["retebasic",{"_index":2274,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["retebasicmoduleinfo",{"_index":2275,"title":{"classes/reteBasicModuleInfo.html":{}},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["retebasicmoduleinfo:15",{"_index":3188,"title":{},"body":{"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{}}}],["retebasicmoduleinfo:20",{"_index":3190,"title":{},"body":{"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{}}}],["retebasicmoduleinfo:21",{"_index":3193,"title":{},"body":{"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{}}}],["retebasicmoduleinfo:22",{"_index":3191,"title":{},"body":{"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{}}}],["retebasicmoduleinfo:23",{"_index":3189,"title":{},"body":{"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{}}}],["retebasicmoduleinfo:24",{"_index":3192,"title":{},"body":{"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{}}}],["retebasicmoduleinfo:25",{"_index":3194,"title":{},"body":{"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{}}}],["retebasicnodeinfo",{"_index":2273,"title":{"classes/reteBasicNodeInfo.html":{}},"body":{"classes/HostNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/SubnetNode.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["retebasicnodeinfo:10",{"_index":3186,"title":{},"body":{"classes/ReteHostInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{}}}],["retebasicnodeinfo:15",{"_index":3298,"title":{},"body":{"classes/ReteNetworkInfo.html":{}}}],["retebasicnodeinfo:18",{"_index":3302,"title":{},"body":{"classes/ReteSubnetInfo.html":{}}}],["retebasicnodeinfo:20",{"_index":3184,"title":{},"body":{"classes/ReteHostInfo.html":{}}}],["retebasicnodeinfo:8",{"_index":3185,"title":{},"body":{"classes/ReteHostInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{}}}],["retebasicnodeinfo:9",{"_index":3187,"title":{},"body":{"classes/ReteHostInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{}}}],["reteconnection",{"_index":437,"title":{"classes/ReteConnection.html":{}},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["retedisplaymoduledatamc",{"_index":3826,"title":{},"body":{"miscellaneous/functions.html":{}}}],["retedisplaymoduledatamc(module",{"_index":3848,"title":{},"body":{"miscellaneous/functions.html":{}}}],["retedisplaymoduledatamv",{"_index":3828,"title":{},"body":{"miscellaneous/functions.html":{}}}],["retedisplaymoduledatamv(module",{"_index":3849,"title":{},"body":{"miscellaneous/functions.html":{}}}],["retedisplaymoduledatatc",{"_index":3829,"title":{},"body":{"miscellaneous/functions.html":{}}}],["retedisplaymoduledatatc(module",{"_index":3850,"title":{},"body":{"miscellaneous/functions.html":{}}}],["retedisplaymoduledatatv",{"_index":3830,"title":{},"body":{"miscellaneous/functions.html":{}}}],["retedisplaymoduledatatv(module",{"_index":3851,"title":{},"body":{"miscellaneous/functions.html":{}}}],["retedisplaymoduleinstancetc",{"_index":3831,"title":{},"body":{"miscellaneous/functions.html":{}}}],["retedisplaymoduleinstancetc(node",{"_index":3852,"title":{},"body":{"miscellaneous/functions.html":{}}}],["retedisplaynodedatamv",{"_index":3832,"title":{},"body":{"miscellaneous/functions.html":{}}}],["retedisplaynodedatamv(node",{"_index":3853,"title":{},"body":{"miscellaneous/functions.html":{}}}],["retedisplaytheaterdatatc",{"_index":3833,"title":{},"body":{"miscellaneous/functions.html":{}}}],["retedisplaytheaterdatatc(theater",{"_index":3854,"title":{},"body":{"miscellaneous/functions.html":{}}}],["retedisplaytheaterdatatv",{"_index":3834,"title":{},"body":{"miscellaneous/functions.html":{}}}],["retedisplaytheaterdatatv(theater",{"_index":3855,"title":{},"body":{"miscellaneous/functions.html":{}}}],["retehostinfo",{"_index":363,"title":{"classes/ReteHostInfo.html":{}},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/EmptyNodeInfo.html":{},"classes/FlavorApplication.html":{},"classes/HostNode.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"miscellaneous/functions.html":{}}}],["retejs",{"_index":962,"title":{},"body":{"components/ControlTemplate.html":{},"classes/_Control.html":{}}}],["retemirroringmoduleinstanceinfo",{"_index":370,"title":{"classes/ReteMirroringModuleInstanceInfo.html":{}},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/EmptyModuleInfo.html":{},"classes/FlavorApplication.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"miscellaneous/functions.html":{}}}],["retemodule",{"_index":243,"title":{},"body":{"modules/AppModule.html":{}}}],["retemodulecomposer",{"_index":771,"title":{},"body":{"components/ComposerComponent.html":{},"classes/ReteModuleComposerSettings.html":{},"components/VisualizerComponent.html":{}}}],["retemodulecomposercomponent",{"_index":178,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"overview.html":{}}}],["retemodulecomposersettings",{"_index":3201,"title":{"classes/ReteModuleComposerSettings.html":{}},"body":{"classes/ReteModuleComposerSettings.html":{}}}],["retemodulenodeinfo",{"_index":3920,"title":{},"body":{"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["retemodulevisualizer",{"_index":3282,"title":{},"body":{"classes/ReteModuleVisualizerSettings.html":{}}}],["retemodulevisualizercomponent",{"_index":180,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"overview.html":{}}}],["retemodulevisualizersettings",{"_index":3280,"title":{"classes/ReteModuleVisualizerSettings.html":{}},"body":{"classes/ReteModuleVisualizerSettings.html":{}}}],["retenetworkinfo",{"_index":366,"title":{"classes/ReteNetworkInfo.html":{}},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/EmptyNodeInfo.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NetworkNode.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteConnection.html":{},"classes/ReteNetworkInfo.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"miscellaneous/functions.html":{}}}],["retesubnetinfo",{"_index":368,"title":{"classes/ReteSubnetInfo.html":{}},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/EmptyNodeInfo.html":{},"classes/FlavorApplication.html":{},"classes/HostNode.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NetworkNode.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/SimpleModuleApplication.html":{},"classes/SubnetNode.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"miscellaneous/functions.html":{}}}],["retetheatercomposer",{"_index":774,"title":{},"body":{"components/ComposerComponent.html":{},"classes/ReteTheaterComposerSettings.html":{},"components/VisualizerComponent.html":{}}}],["retetheatercomposercomponent",{"_index":182,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"overview.html":{}}}],["retetheatercomposersettings",{"_index":3306,"title":{"classes/ReteTheaterComposerSettings.html":{}},"body":{"classes/ReteTheaterComposerSettings.html":{}}}],["retetheaterinternalservicemoduleinstanceinfo",{"_index":372,"title":{"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{}},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/EmptyModuleInfo.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"miscellaneous/functions.html":{}}}],["retetheatermoduleinstanceinfo",{"_index":374,"title":{"classes/ReteTheaterModuleInstanceInfo.html":{}},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/EmptyModuleInfo.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"classes/TheaterModuleInstanceNode.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"miscellaneous/functions.html":{}}}],["retetheatervisualizer",{"_index":3324,"title":{},"body":{"classes/ReteTheaterVisualizerSettings.html":{}}}],["retetheatervisualizercomponent",{"_index":183,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"overview.html":{}}}],["retetheatervisualizersettings",{"_index":3322,"title":{"classes/ReteTheaterVisualizerSettings.html":{}},"body":{"classes/ReteTheaterVisualizerSettings.html":{}}}],["return",{"_index":629,"title":{},"body":{"injectables/AttachmentsService.html":{},"injectables/AuthGuard.html":{},"components/ComposerComponent.html":{},"components/DataInputV2Component.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"injectables/FlavorService.html":{},"components/HomeComponent.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"injectables/ModuleService.html":{},"classes/NetworkNode.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"injectables/StorageService.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"injectables/TheaterService.html":{},"injectables/TokenService.html":{},"components/UnderbarComponent.html":{}}}],["returnoutput",{"_index":1081,"title":{},"body":{"components/DataInputComponent.html":{}}}],["returnoutput(val",{"_index":1102,"title":{},"body":{"components/DataInputComponent.html":{}}}],["returns",{"_index":228,"title":{},"body":{"modules/AppModule.html":{},"injectables/AttachmentsService.html":{},"injectables/AuthGuard.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"injectables/FlavorService.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"classes/HostNode.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"injectables/ModuleService.html":{},"components/NavbarComponent.html":{},"components/NetworkComponent.html":{},"classes/NetworkNode.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"injectables/StorageService.html":{},"components/SubnetComponent.html":{},"classes/SubnetNode.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"injectables/TheaterService.html":{},"injectables/TokenService.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{},"miscellaneous/functions.html":{}}}],["revealed",{"_index":2178,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["rgb(41",{"_index":2665,"title":{},"body":{"components/NavbarElementComponent.html":{}}}],["rgba(0,0,0,.53)!important",{"_index":2776,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["ricavato",{"_index":3712,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["ricevere",{"_index":2436,"title":{},"body":{"injectables/ModalService.html":{}}}],["richiama",{"_index":778,"title":{},"body":{"components/ComposerComponent.html":{},"classes/ExportModule.html":{},"components/HomeComponent.html":{},"components/VisualizerComponent.html":{}}}],["richiamata",{"_index":776,"title":{},"body":{"components/ComposerComponent.html":{},"components/DataInputV2Component.html":{},"components/DocsComponent.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"components/NavbarComponent.html":{},"classes/NetworkNode.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SubnetNode.html":{},"components/TabnavComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"components/VisualizerComponent.html":{}}}],["richiamta",{"_index":2265,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["riconoscimento",{"_index":1196,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["riferimento",{"_index":1538,"title":{},"body":{"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"miscellaneous/enumerations.html":{}}}],["righe",{"_index":3266,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["right",{"_index":1331,"title":{},"body":{"components/DataItemComponent.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"miscellaneous/enumerations.html":{}}}],["riguarda",{"_index":3207,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["rimpocciolisci",{"_index":212,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["rimuove",{"_index":2925,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["riporato",{"_index":2914,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["rispettivamente",{"_index":1484,"title":{},"body":{"components/DocsComponent.html":{}}}],["rispettive",{"_index":750,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["risultato",{"_index":55,"title":{},"body":{"classes/Aoption.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"injectables/AttachmentsService.html":{},"injectables/AuthGuard.html":{},"classes/BlueprintFileDTO.html":{},"classes/BorderNetworkDTO.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"components/ControlTemplate.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputReturnedV2.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/DeployInstanceDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"classes/FlavorApplication.html":{},"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"injectables/FlavorService.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"classes/HostModuleDTO.html":{},"classes/HostNode.html":{},"classes/HostPortModuleDTO.html":{},"components/HowToUseComponent.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModalButton.html":{},"components/ModalComponent.html":{},"classes/ModalItem.html":{},"injectables/ModalService.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"injectables/ModuleService.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"interfaces/ModuleTopology.html":{},"classes/NameMappingDTO.html":{},"components/NavbarComponent.html":{},"classes/NavbarElement.html":{},"components/NavbarElementComponent.html":{},"classes/NavbarItem.html":{},"classes/NetOSRouterDTO.html":{},"components/NetworkComponent.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkDTO.html":{},"classes/NetworkNode.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/NodeTopologyElement.html":{},"components/OffcanvasComponent.html":{},"classes/PageableDTO.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SelectOption.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/SingleDataInputReturned.html":{},"classes/SortDTO.html":{},"classes/SourceExport.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"classes/StatisticItemDTO.html":{},"injectables/StorageService.html":{},"components/SubnetComponent.html":{},"classes/SubnetDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"components/TabnavComponent.html":{},"classes/TabnavElement.html":{},"classes/TabnavItem.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"injectables/TheaterService.html":{},"classes/TheaterSimpleData.html":{},"interfaces/TheaterTopology.html":{},"classes/TheatreStatusDTO.html":{},"injectables/TokenService.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/TypesCatalogueDTO.html":{},"components/UnderbarComponent.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{},"routes.html":{}}}],["ritorna",{"_index":1229,"title":{},"body":{"components/DataInputV2Component.html":{},"injectables/ModalService.html":{},"components/NavbarComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"injectables/StorageService.html":{},"injectables/TokenService.html":{},"components/UnderbarComponent.html":{},"miscellaneous/functions.html":{}}}],["ritornare",{"_index":1897,"title":{},"body":{"injectables/FileService.html":{},"injectables/TokenService.html":{}}}],["ritornata",{"_index":1090,"title":{},"body":{"components/DataInputComponent.html":{}}}],["ritornato",{"_index":1220,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["ritorno",{"_index":1046,"title":{},"body":{"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputReturnedV2.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"components/HomeComponent.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModalButton.html":{},"classes/ModalItem.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{},"miscellaneous/functions.html":{}}}],["roles",{"_index":656,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["root",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"injectables/AttachmentsService.html":{},"injectables/AuthGuard.html":{},"injectables/ExportService.html":{},"injectables/FileService.html":{},"injectables/FlavorService.html":{},"injectables/ModalService.html":{},"injectables/ModuleService.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"injectables/StorageService.html":{},"injectables/TheaterService.html":{},"injectables/TokenService.html":{}}}],["root'},{'name",{"_index":149,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["rotate",{"_index":2668,"title":{},"body":{"components/NavbarElementComponent.html":{}}}],["rotatez(0",{"_index":2675,"title":{},"body":{"components/NavbarElementComponent.html":{}}}],["rotatez(180deg",{"_index":2677,"title":{},"body":{"components/NavbarElementComponent.html":{}}}],["rotatez(360deg",{"_index":2678,"title":{},"body":{"components/NavbarElementComponent.html":{}}}],["round",{"_index":2109,"title":{},"body":{"components/HomeComponent.html":{}}}],["rounded",{"_index":1351,"title":{},"body":{"components/DataItemComponent.html":{}}}],["route",{"_index":641,"title":{},"body":{"injectables/AuthGuard.html":{},"components/ComposerComponent.html":{},"components/HomeComponent.html":{},"components/VisualizerComponent.html":{}}}],["route.data.roles",{"_index":659,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["router",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"classes/BorderNetworkDTO.html":{},"components/ComposerComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"components/HomeComponent.html":{},"classes/NetOSRouterDTO.html":{},"classes/NetworkDTO.html":{},"classes/SubnetDTO.html":{},"components/VisualizerComponent.html":{}}}],["routermodule",{"_index":333,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":344,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":639,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["routes",{"_index":334,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"routes.html":{}}}],["routesguard",{"_index":337,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routessimple",{"_index":343,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routing",{"_index":1998,"title":{},"body":{"components/HomeComponent.html":{}}}],["routing.module",{"_index":238,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":332,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["rowmodules",{"_index":2930,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["rowtheater",{"_index":2828,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["rowtheater.blueprintfile.node_templates[rowtheater.name",{"_index":2916,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["rowtheater.name",{"_index":2920,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["rox.content",{"_index":1510,"title":{},"body":{"components/DocsComponent.html":{}}}],["rox.footer",{"_index":1511,"title":{},"body":{"components/DocsComponent.html":{}}}],["rox.header",{"_index":1504,"title":{},"body":{"components/DocsComponent.html":{}}}],["rpt",{"_index":2105,"title":{},"body":{"components/HomeComponent.html":{}}}],["run",{"_index":3870,"title":{},"body":{"index.html":{}}}],["running",{"_index":3889,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"injectables/ModalService.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"components/VisualizerComponent.html":{},"dependencies.html":{}}}],["salva",{"_index":1630,"title":{},"body":{"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"components/HomeComponent.html":{},"injectables/TokenService.html":{}}}],["salvare",{"_index":3406,"title":{},"body":{"injectables/StorageService.html":{},"injectables/TokenService.html":{}}}],["salvataggio",{"_index":1211,"title":{},"body":{"components/DataInputV2Component.html":{},"injectables/FileService.html":{}}}],["salvato",{"_index":3621,"title":{},"body":{"injectables/TokenService.html":{}}}],["sanitized",{"_index":1480,"title":{},"body":{"components/DocsComponent.html":{}}}],["sanitizer",{"_index":1474,"title":{},"body":{"components/DocsComponent.html":{}}}],["sarebbe",{"_index":1803,"title":{},"body":{"injectables/ExportService.html":{}}}],["save",{"_index":1082,"title":{},"body":{"components/DataInputComponent.html":{}}}],["scaffolding",{"_index":3878,"title":{},"body":{"index.html":{}}}],["scale",{"_index":2669,"title":{},"body":{"components/NavbarElementComponent.html":{}}}],["scale(0.5",{"_index":2676,"title":{},"body":{"components/NavbarElementComponent.html":{}}}],["scale(1",{"_index":2674,"title":{},"body":{"components/NavbarElementComponent.html":{}}}],["scale(1.5",{"_index":2131,"title":{},"body":{"components/HomeComponent.html":{}}}],["scaleextent",{"_index":3268,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["scaricabile",{"_index":1768,"title":{},"body":{"injectables/ExportService.html":{}}}],["scaricare",{"_index":1801,"title":{},"body":{"injectables/ExportService.html":{}}}],["sceglie",{"_index":2454,"title":{},"body":{"injectables/ModalService.html":{}}}],["scegliere",{"_index":1971,"title":{},"body":{"components/HomeComponent.html":{}}}],["scelta",{"_index":1193,"title":{},"body":{"components/DataInputV2Component.html":{},"components/HomeComponent.html":{},"injectables/ModalService.html":{}}}],["scelto",{"_index":781,"title":{},"body":{"components/ComposerComponent.html":{},"components/DataInputV2Component.html":{},"components/HomeComponent.html":{},"components/VisualizerComponent.html":{}}}],["schemas",{"_index":220,"title":{},"body":{"modules/AppModule.html":{}}}],["schermate",{"_index":2659,"title":{},"body":{"components/NavbarElementComponent.html":{}}}],["scopo",{"_index":722,"title":{},"body":{"components/ComposerComponent.html":{},"components/DataInputV2Component.html":{},"components/DocsComponent.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"classes/NetworkNode.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"injectables/TokenService.html":{},"components/VisualizerComponent.html":{},"miscellaneous/functions.html":{}}}],["screen",{"_index":2730,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["scrolling",{"_index":119,"title":{},"body":{"components/AppComponent.html":{}}}],["se",{"_index":322,"title":{},"body":{"modules/AppModule.html":{},"components/ComposerComponent.html":{},"components/DataInputV2Component.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"components/HomeComponent.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"components/TabnavComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"components/VisualizerComponent.html":{}}}],["searchbar",{"_index":3250,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["secondary",{"_index":2362,"title":{},"body":{"classes/ModalButton.html":{},"classes/ModalItem.html":{},"injectables/ModalService.html":{}}}],["secondo",{"_index":2432,"title":{},"body":{"injectables/ModalService.html":{}}}],["see",{"_index":770,"title":{},"body":{"components/ComposerComponent.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputReturnedV2.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"components/DocsComponent.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"components/HomeComponent.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModalButton.html":{},"components/ModalComponent.html":{},"classes/ModalItem.html":{},"components/NavbarComponent.html":{},"classes/NetworkNode.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"classes/SubnetNode.html":{},"components/TabnavComponent.html":{},"classes/TabnavElement.html":{},"classes/TabnavItem.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"components/UnderbarComponent.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{},"components/VisualizerComponent.html":{},"miscellaneous/enumerations.html":{}}}],["segno",{"_index":3001,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["segue",{"_index":3086,"title":{},"body":{"classes/PerseDataForModuleVisualizer.html":{}}}],["seguito",{"_index":2881,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["select",{"_index":2091,"title":{},"body":{"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["select_item",{"_index":2627,"title":{},"body":{"components/NavbarComponent.html":{}}}],["select_item(val",{"_index":2641,"title":{},"body":{"components/NavbarComponent.html":{}}}],["selectable",{"_index":1132,"title":{},"body":{"components/DataInputComponent.html":{}}}],["selected",{"_index":1916,"title":{},"body":{"injectables/FileService.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["selected_number",{"_index":1036,"title":{},"body":{"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{}}}],["selectedfile",{"_index":1891,"title":{},"body":{"injectables/FileService.html":{}}}],["selection",{"_index":1026,"title":{},"body":{"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{}}}],["selectoption",{"_index":1037,"title":{"classes/SelectOption.html":{}},"body":{"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{}}}],["selector",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["seleziona",{"_index":2000,"title":{},"body":{"components/HomeComponent.html":{},"components/TabnavComponent.html":{},"components/UnderbarComponent.html":{}}}],["selezionata",{"_index":2019,"title":{},"body":{"components/HomeComponent.html":{},"components/TabnavComponent.html":{}}}],["selezionato",{"_index":2637,"title":{},"body":{"components/NavbarComponent.html":{}}}],["selezionatp",{"_index":3661,"title":{},"body":{"components/UnderbarComponent.html":{}}}],["selezioni",{"_index":1043,"title":{},"body":{"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{}}}],["semplicemente",{"_index":1601,"title":{},"body":{"classes/ExportModule.html":{},"classes/ExportTheater.html":{}}}],["senza",{"_index":2279,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"miscellaneous/functions.html":{}}}],["separator",{"_index":3678,"title":{},"body":{"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{}}}],["sequence",{"_index":537,"title":{},"body":{"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/ExportTheater.html":{},"classes/GenericParameterDTO.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesTSD.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/SourceExport.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/TheaterSimpleData.html":{},"classes/TypesCatalogueDTO.html":{},"classes/reteBasicModuleInfo.html":{}}}],["serivizio",{"_index":3375,"title":{},"body":{"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{}}}],["serve",{"_index":1180,"title":{},"body":{"components/DataInputV2Component.html":{},"classes/ExportModule.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/TokenService.html":{},"index.html":{}}}],["server",{"_index":1413,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"injectables/TokenService.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["service",{"_index":1410,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"injectables/StorageService.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"miscellaneous/enumerations.html":{}}}],["services/api/module.service",{"_index":282,"title":{},"body":{"modules/AppModule.html":{}}}],["services/api/theater.service",{"_index":283,"title":{},"body":{"modules/AppModule.html":{}}}],["services/application/modal/modal.service",{"_index":108,"title":{},"body":{"components/AppComponent.html":{}}}],["services/application/parse/parse.service",{"_index":297,"title":{},"body":{"modules/AppModule.html":{}}}],["services/application/spinner/spinner.service",{"_index":109,"title":{},"body":{"components/AppComponent.html":{}}}],["services/token/token.service",{"_index":281,"title":{},"body":{"modules/AppModule.html":{}}}],["servita",{"_index":1464,"title":{},"body":{"components/DocsComponent.html":{}}}],["servizio",{"_index":1764,"title":{},"body":{"injectables/ExportService.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"injectables/ModalService.html":{},"injectables/ParseService.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"injectables/TokenService.html":{}}}],["set",{"_index":1204,"title":{},"body":{"components/DataInputV2Component.html":{},"components/ModalComponent.html":{},"components/OffcanvasComponent.html":{},"injectables/StorageService.html":{}}}],["setconfirmationmodal",{"_index":2440,"title":{},"body":{"injectables/ModalService.html":{}}}],["setconfirmationmodal(text_content",{"_index":2445,"title":{},"body":{"injectables/ModalService.html":{}}}],["setdata(data",{"_index":3410,"title":{},"body":{"injectables/StorageService.html":{}}}],["setheaders",{"_index":3615,"title":{},"body":{"injectables/TokenService.html":{}}}],["setheaders(val",{"_index":3625,"title":{},"body":{"injectables/TokenService.html":{}}}],["sethttpgetoption",{"_index":3616,"title":{},"body":{"injectables/TokenService.html":{}}}],["sethttpgetoption(val",{"_index":3627,"title":{},"body":{"injectables/TokenService.html":{}}}],["setresponse",{"_index":2441,"title":{},"body":{"injectables/ModalService.html":{}}}],["setresponse(val",{"_index":2448,"title":{},"body":{"injectables/ModalService.html":{}}}],["setshow(val",{"_index":2400,"title":{},"body":{"components/ModalComponent.html":{},"components/OffcanvasComponent.html":{}}}],["setspinner",{"_index":3392,"title":{},"body":{"injectables/SpinnerService.html":{}}}],["setspinner(show",{"_index":3388,"title":{},"body":{"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{}}}],["setta",{"_index":2394,"title":{},"body":{"components/ModalComponent.html":{},"injectables/ModalService.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"components/TabnavComponent.html":{},"injectables/TokenService.html":{}}}],["settaggi",{"_index":3205,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["settaggio",{"_index":3374,"title":{},"body":{"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"miscellaneous/functions.html":{}}}],["settare",{"_index":2451,"title":{},"body":{"injectables/ModalService.html":{},"injectables/StorageService.html":{},"injectables/TokenService.html":{}}}],["settings/controls/control.ts",{"_index":957,"title":{},"body":{"components/ControlTemplate.html":{},"classes/_Control.html":{}}}],["settings/controls/control.ts:15",{"_index":971,"title":{},"body":{"components/ControlTemplate.html":{}}}],["settings/controls/control.ts:16",{"_index":970,"title":{},"body":{"components/ControlTemplate.html":{}}}],["settings/controls/control.ts:17",{"_index":968,"title":{},"body":{"components/ControlTemplate.html":{}}}],["settings/controls/control.ts:18",{"_index":969,"title":{},"body":{"components/ControlTemplate.html":{}}}],["settings/controls/control.ts:20",{"_index":972,"title":{},"body":{"components/ControlTemplate.html":{}}}],["settings/controls/control.ts:31",{"_index":3725,"title":{},"body":{"classes/_Control.html":{}}}],["settings/controls/control.ts:32",{"_index":3724,"title":{},"body":{"classes/_Control.html":{}}}],["settings/controls/control.ts:34",{"_index":3726,"title":{},"body":{"classes/_Control.html":{}}}],["settings/controls/control.ts:50",{"_index":3727,"title":{},"body":{"classes/_Control.html":{}}}],["settings/controls/control.ts:55",{"_index":3728,"title":{},"body":{"classes/_Control.html":{}}}],["settings/models/retemodeltype",{"_index":2162,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["settings/nodes/rete",{"_index":254,"title":{},"body":{"modules/AppModule.html":{},"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/FlavorApplication.html":{},"components/HostComponent.html":{},"classes/HostNode.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"components/NetworkComponent.html":{},"classes/NetworkNode.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SimpleModuleApplication.html":{},"components/SubnetComponent.html":{},"classes/SubnetNode.html":{},"classes/TheaterApplication.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["settings/nodes/retebasic.ts",{"_index":3911,"title":{},"body":{"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["settings/nodes/retebasic.ts:10",{"_index":3922,"title":{},"body":{"classes/reteBasicNodeInfo.html":{}}}],["settings/nodes/retebasic.ts:11",{"_index":3924,"title":{},"body":{"classes/reteBasicNodeInfo.html":{}}}],["settings/nodes/retebasic.ts:20",{"_index":3913,"title":{},"body":{"classes/reteBasicModuleInfo.html":{}}}],["settings/nodes/retebasic.ts:21",{"_index":3916,"title":{},"body":{"classes/reteBasicModuleInfo.html":{}}}],["settings/nodes/retebasic.ts:22",{"_index":3914,"title":{},"body":{"classes/reteBasicModuleInfo.html":{}}}],["settings/nodes/retebasic.ts:23",{"_index":3912,"title":{},"body":{"classes/reteBasicModuleInfo.html":{}}}],["settings/nodes/retebasic.ts:24",{"_index":3915,"title":{},"body":{"classes/reteBasicModuleInfo.html":{}}}],["settings/nodes/retebasic.ts:25",{"_index":3917,"title":{},"body":{"classes/reteBasicModuleInfo.html":{}}}],["settings/nodes/retebasic.ts:26",{"_index":3918,"title":{},"body":{"classes/reteBasicModuleInfo.html":{}}}],["settings/nodes/retebasic.ts:8",{"_index":3921,"title":{},"body":{"classes/reteBasicNodeInfo.html":{}}}],["settings/nodes/retebasic.ts:9",{"_index":3923,"title":{},"body":{"classes/reteBasicNodeInfo.html":{}}}],["settings/retemodulecomposersettings.ts",{"_index":3203,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{}}}],["settings/retemodulecomposersettings.ts:20",{"_index":3216,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{}}}],["settings/retemodulecomposersettings.ts:21",{"_index":3217,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{}}}],["settings/retemodulecomposersettings.ts:22",{"_index":3215,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{}}}],["settings/retemodulecomposersettings.ts:23",{"_index":3218,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{}}}],["settings/retemodulecomposersettings.ts:24",{"_index":3214,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{}}}],["settings/retemodulecomposersettings.ts:43",{"_index":3219,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{}}}],["settings/retemodulevisualizersettings.ts",{"_index":3281,"title":{},"body":{"classes/ReteModuleVisualizerSettings.html":{}}}],["settings/retemodulevisualizersettings.ts:107",{"_index":3290,"title":{},"body":{"classes/ReteModuleVisualizerSettings.html":{}}}],["settings/retemodulevisualizersettings.ts:21",{"_index":3286,"title":{},"body":{"classes/ReteModuleVisualizerSettings.html":{}}}],["settings/retemodulevisualizersettings.ts:22",{"_index":3287,"title":{},"body":{"classes/ReteModuleVisualizerSettings.html":{}}}],["settings/retemodulevisualizersettings.ts:23",{"_index":3285,"title":{},"body":{"classes/ReteModuleVisualizerSettings.html":{}}}],["settings/retemodulevisualizersettings.ts:24",{"_index":3288,"title":{},"body":{"classes/ReteModuleVisualizerSettings.html":{}}}],["settings/retemodulevisualizersettings.ts:25",{"_index":3284,"title":{},"body":{"classes/ReteModuleVisualizerSettings.html":{}}}],["settings/retemodulevisualizersettings.ts:44",{"_index":3289,"title":{},"body":{"classes/ReteModuleVisualizerSettings.html":{}}}],["settings/retetheatercomposersettings.ts",{"_index":3307,"title":{},"body":{"classes/ReteTheaterComposerSettings.html":{}}}],["settings/retetheatercomposersettings.ts:17",{"_index":3310,"title":{},"body":{"classes/ReteTheaterComposerSettings.html":{}}}],["settings/retetheatercomposersettings.ts:18",{"_index":3311,"title":{},"body":{"classes/ReteTheaterComposerSettings.html":{}}}],["settings/retetheatercomposersettings.ts:19",{"_index":3309,"title":{},"body":{"classes/ReteTheaterComposerSettings.html":{}}}],["settings/retetheatercomposersettings.ts:20",{"_index":3312,"title":{},"body":{"classes/ReteTheaterComposerSettings.html":{}}}],["settings/retetheatercomposersettings.ts:21",{"_index":3308,"title":{},"body":{"classes/ReteTheaterComposerSettings.html":{}}}],["settings/retetheatercomposersettings.ts:42",{"_index":3313,"title":{},"body":{"classes/ReteTheaterComposerSettings.html":{}}}],["settings/retetheatervisualizersettings.ts",{"_index":3323,"title":{},"body":{"classes/ReteTheaterVisualizerSettings.html":{}}}],["settings/retetheatervisualizersettings.ts:108",{"_index":3331,"title":{},"body":{"classes/ReteTheaterVisualizerSettings.html":{}}}],["settings/retetheatervisualizersettings.ts:18",{"_index":3327,"title":{},"body":{"classes/ReteTheaterVisualizerSettings.html":{}}}],["settings/retetheatervisualizersettings.ts:19",{"_index":3328,"title":{},"body":{"classes/ReteTheaterVisualizerSettings.html":{}}}],["settings/retetheatervisualizersettings.ts:20",{"_index":3326,"title":{},"body":{"classes/ReteTheaterVisualizerSettings.html":{}}}],["settings/retetheatervisualizersettings.ts:21",{"_index":3329,"title":{},"body":{"classes/ReteTheaterVisualizerSettings.html":{}}}],["settings/retetheatervisualizersettings.ts:22",{"_index":3325,"title":{},"body":{"classes/ReteTheaterVisualizerSettings.html":{}}}],["settings/retetheatervisualizersettings.ts:42",{"_index":3330,"title":{},"body":{"classes/ReteTheaterVisualizerSettings.html":{}}}],["settings/settings/displaydata.ts",{"_index":3847,"title":{},"body":{"miscellaneous/functions.html":{}}}],["settings/settings/editor",{"_index":3202,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["settings/style/styleiconconfig",{"_index":2161,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["settings/style/styleiconconfig.ts",{"_index":3785,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["settoken",{"_index":3617,"title":{},"body":{"injectables/TokenService.html":{}}}],["settoken(val",{"_index":3629,"title":{},"body":{"injectables/TokenService.html":{}}}],["setvalue",{"_index":3722,"title":{},"body":{"classes/_Control.html":{}}}],["setvalue(val",{"_index":993,"title":{},"body":{"components/ControlTemplate.html":{},"components/DataInputV2Component.html":{},"classes/_Control.html":{}}}],["shadow",{"_index":2138,"title":{},"body":{"components/HomeComponent.html":{},"components/OffcanvasComponent.html":{}}}],["show",{"_index":2377,"title":{},"body":{"components/ModalComponent.html":{},"injectables/ModalService.html":{},"components/OffcanvasComponent.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{}}}],["show(val",{"_index":2402,"title":{},"body":{"components/ModalComponent.html":{},"components/OffcanvasComponent.html":{}}}],["show/hide",{"_index":2039,"title":{},"body":{"components/HomeComponent.html":{},"injectables/ModalService.html":{}}}],["showchange",{"_index":2379,"title":{},"body":{"components/ModalComponent.html":{},"components/OffcanvasComponent.html":{}}}],["showconfirmationmodal",{"_index":2442,"title":{},"body":{"injectables/ModalService.html":{}}}],["showconfirmationmodal(text_content",{"_index":2456,"title":{},"body":{"injectables/ModalService.html":{}}}],["showcontextmenu",{"_index":3866,"title":{},"body":{"index.html":{}}}],["showfooter",{"_index":2320,"title":{},"body":{"components/MirroringModuleInstanceComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["showhidesocket",{"_index":2153,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["showinputoutlet",{"_index":2150,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["showmodal",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"components/ModalComponent.html":{}}}],["showoutputoutlet",{"_index":2151,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["showports",{"_index":2152,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["showspinner",{"_index":76,"title":{},"body":{"components/AppComponent.html":{}}}],["shrink",{"_index":1508,"title":{},"body":{"components/DocsComponent.html":{}}}],["si",{"_index":747,"title":{},"body":{"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputV2Component.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"injectables/ModalService.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"injectables/StorageService.html":{},"components/TabnavComponent.html":{},"injectables/TokenService.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{}}}],["siano",{"_index":3467,"title":{},"body":{"components/TabnavComponent.html":{},"components/UnderbarComponent.html":{}}}],["side",{"_index":1350,"title":{},"body":{"components/DataItemComponent.html":{},"components/OffcanvasComponent.html":{}}}],["simple",{"_index":3293,"title":{},"body":{"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["simpleareadto",{"_index":386,"title":{"classes/SimpleAreaDTO.html":{}},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"interfaces/CommonModule.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/FlavorApplication.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterApplication.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/TypesCatalogueDTO.html":{}}}],["simpleareadto:144",{"_index":457,"title":{},"body":{"classes/AreaColorDTO.html":{}}}],["simpleareadto:145",{"_index":458,"title":{},"body":{"classes/AreaColorDTO.html":{}}}],["simplemoduleapplication",{"_index":436,"title":{"classes/SimpleModuleApplication.html":{}},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"miscellaneous/functions.html":{}}}],["simplemoduledto",{"_index":382,"title":{"classes/SimpleModuleDTO.html":{}},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"interfaces/CommonModule.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/FlavorApplication.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"injectables/ModuleService.html":{},"classes/ModuleStatusDTO.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteConnection.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterApplication.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"injectables/TheaterService.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/TypesCatalogueDTO.html":{}}}],["simplemoduledto:76",{"_index":2508,"title":{},"body":{"classes/ModuleApplication.html":{},"classes/ModuleDTO.html":{},"classes/SimpleModuleApplication.html":{}}}],["simplemoduledto:77",{"_index":2509,"title":{},"body":{"classes/ModuleApplication.html":{},"classes/ModuleDTO.html":{},"classes/SimpleModuleApplication.html":{}}}],["simplemoduledto:78",{"_index":2510,"title":{},"body":{"classes/ModuleApplication.html":{},"classes/ModuleDTO.html":{},"classes/SimpleModuleApplication.html":{}}}],["simplemoduledto:79",{"_index":2511,"title":{},"body":{"classes/ModuleApplication.html":{},"classes/ModuleDTO.html":{},"classes/SimpleModuleApplication.html":{}}}],["simplemoduledto:80",{"_index":2512,"title":{},"body":{"classes/ModuleApplication.html":{},"classes/ModuleDTO.html":{},"classes/SimpleModuleApplication.html":{}}}],["simplemoduledto:81",{"_index":2513,"title":{},"body":{"classes/ModuleApplication.html":{},"classes/ModuleDTO.html":{},"classes/SimpleModuleApplication.html":{}}}],["simplemoduledto:82",{"_index":2514,"title":{},"body":{"classes/ModuleApplication.html":{},"classes/ModuleDTO.html":{},"classes/SimpleModuleApplication.html":{}}}],["simplemoduledto:83",{"_index":2515,"title":{},"body":{"classes/ModuleApplication.html":{},"classes/ModuleDTO.html":{},"classes/SimpleModuleApplication.html":{}}}],["simplemoduledto:84",{"_index":2516,"title":{},"body":{"classes/ModuleApplication.html":{},"classes/ModuleDTO.html":{},"classes/SimpleModuleApplication.html":{}}}],["simplemoduledto:85",{"_index":2517,"title":{},"body":{"classes/ModuleApplication.html":{},"classes/ModuleDTO.html":{},"classes/SimpleModuleApplication.html":{}}}],["simplemoduledto:86",{"_index":2518,"title":{},"body":{"classes/ModuleApplication.html":{},"classes/ModuleDTO.html":{},"classes/SimpleModuleApplication.html":{}}}],["simplemoduledto:87",{"_index":2519,"title":{},"body":{"classes/ModuleApplication.html":{},"classes/ModuleDTO.html":{},"classes/SimpleModuleApplication.html":{}}}],["simplemoduledto:88",{"_index":2520,"title":{},"body":{"classes/ModuleApplication.html":{},"classes/ModuleDTO.html":{},"classes/SimpleModuleApplication.html":{}}}],["simplemoduledto:89",{"_index":2521,"title":{},"body":{"classes/ModuleApplication.html":{},"classes/ModuleDTO.html":{},"classes/SimpleModuleApplication.html":{}}}],["simplemoduledto:90",{"_index":2522,"title":{},"body":{"classes/ModuleApplication.html":{},"classes/ModuleDTO.html":{},"classes/SimpleModuleApplication.html":{}}}],["simplemoduleroot",{"_index":3839,"title":{},"body":{"miscellaneous/functions.html":{}}}],["singledatainputreturned",{"_index":1049,"title":{"classes/SingleDataInputReturned.html":{}},"body":{"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{}}}],["singlenetwork",{"_index":1731,"title":{},"body":{"classes/ExportModule.html":{}}}],["singlenetwork[network.data.name",{"_index":1733,"title":{},"body":{"classes/ExportModule.html":{}}}],["singlenode",{"_index":1683,"title":{},"body":{"classes/ExportModule.html":{}}}],["singlenode[node.data.name",{"_index":1693,"title":{},"body":{"classes/ExportModule.html":{}}}],["singlesubnet",{"_index":1722,"title":{},"body":{"classes/ExportModule.html":{}}}],["singlesubnet[subnet.data.name",{"_index":1730,"title":{},"body":{"classes/ExportModule.html":{}}}],["singola",{"_index":3481,"title":{},"body":{"classes/TabnavElement.html":{},"classes/TabnavItem.html":{}}}],["singoli",{"_index":424,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"components/NavbarComponent.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["singolo",{"_index":46,"title":{},"body":{"classes/Aoption.html":{},"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NavbarElement.html":{},"classes/NavbarItem.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/SelectOption.html":{},"classes/SimpleModuleApplication.html":{},"classes/SingleDataInputReturned.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{}}}],["sinistra",{"_index":2734,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["sinonimi",{"_index":1400,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["sinonimo",{"_index":1543,"title":{},"body":{"classes/EmptyModuleInfo.html":{}}}],["sistma",{"_index":1372,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"miscellaneous/enumerations.html":{}}}],["situate",{"_index":2926,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["situato",{"_index":3377,"title":{},"body":{"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{}}}],["sixsteen",{"_index":1387,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"miscellaneous/enumerations.html":{}}}],["size",{"_index":476,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"components/ControlTemplate.html":{},"components/DataInputV2Component.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TypesCatalogueDTO.html":{}}}],["size/2",{"_index":2212,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["sizing",{"_index":1012,"title":{},"body":{"components/ControlTemplate.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["small",{"_index":1276,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["smr",{"_index":2951,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["smr.name",{"_index":2963,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["sn",{"_index":2979,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["snap",{"_index":3267,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["socket",{"_index":2207,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["sockets/socket",{"_index":2270,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["solamente",{"_index":1634,"title":{},"body":{"classes/ExportModule.html":{}}}],["solid",{"_index":1005,"title":{},"body":{"components/ControlTemplate.html":{},"components/DataItemComponent.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["solo",{"_index":1687,"title":{},"body":{"classes/ExportModule.html":{}}}],["sommario",{"_index":3907,"title":{},"body":{"overview.html":{}}}],["sono",{"_index":844,"title":{},"body":{"components/ComposerComponent.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"components/OffcanvasComponent.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["sopra",{"_index":2736,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["sort",{"_index":477,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/PageableDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/SortDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["sortdto",{"_index":467,"title":{"classes/SortDTO.html":{}},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/PageableDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/SortDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["sorted",{"_index":2803,"title":{},"body":{"classes/PageableDTO.html":{},"classes/SortDTO.html":{}}}],["sotto",{"_index":2735,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["sottoforma",{"_index":1767,"title":{},"body":{"injectables/ExportService.html":{},"injectables/FileService.html":{},"classes/ParseDataForTheaterVisualizer.html":{}}}],["sottoposta",{"_index":3650,"title":{},"body":{"components/UnderbarComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/Aoption.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"injectables/AttachmentsService.html":{},"injectables/AuthGuard.html":{},"classes/BlueprintFileDTO.html":{},"classes/BorderNetworkDTO.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"components/ControlTemplate.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputReturnedV2.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/DeployInstanceDTO.html":{},"components/DocsComponent.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"classes/FlavorApplication.html":{},"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"injectables/FlavorService.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"classes/HostModuleDTO.html":{},"classes/HostNode.html":{},"classes/HostPortModuleDTO.html":{},"components/HowToUseComponent.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModalButton.html":{},"components/ModalComponent.html":{},"classes/ModalItem.html":{},"injectables/ModalService.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"injectables/ModuleService.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"interfaces/ModuleTopology.html":{},"classes/NameMappingDTO.html":{},"components/NavbarComponent.html":{},"classes/NavbarElement.html":{},"components/NavbarElementComponent.html":{},"classes/NavbarItem.html":{},"classes/NetOSRouterDTO.html":{},"components/NetworkComponent.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkDTO.html":{},"classes/NetworkNode.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/NodeTopologyElement.html":{},"components/OffcanvasComponent.html":{},"classes/PageableDTO.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SelectOption.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/SingleDataInputReturned.html":{},"classes/SortDTO.html":{},"classes/SourceExport.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"classes/StatisticItemDTO.html":{},"injectables/StorageService.html":{},"components/SubnetComponent.html":{},"classes/SubnetDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"components/TabnavComponent.html":{},"classes/TabnavElement.html":{},"classes/TabnavItem.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"injectables/TheaterService.html":{},"classes/TheaterSimpleData.html":{},"interfaces/TheaterTopology.html":{},"classes/TheatreStatusDTO.html":{},"injectables/TokenService.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/TypesCatalogueDTO.html":{},"components/UnderbarComponent.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{},"index.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["sourceexport",{"_index":574,"title":{"classes/SourceExport.html":{}},"body":{"classes/AreaExport.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesTSD.html":{},"classes/SourceExport.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{}}}],["sources",{"_index":573,"title":{},"body":{"classes/AreaExport.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/ExportTheater.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesTSD.html":{},"classes/SourceExport.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{}}}],["space",{"_index":1346,"title":{},"body":{"components/DataItemComponent.html":{}}}],["specifiche",{"_index":1255,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["spinner",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ComposerComponent.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"components/VisualizerComponent.html":{},"dependencies.html":{}}}],["spinnerdata",{"_index":3368,"title":{"classes/SpinnerData.html":{}},"body":{"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{}}}],["spinnerservice",{"_index":78,"title":{"injectables/SpinnerService.html":{}},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"components/VisualizerComponent.html":{}}}],["spinnerservice.getspinner",{"_index":124,"title":{},"body":{"components/AppComponent.html":{}}}],["square",{"_index":1327,"title":{},"body":{"components/DataItemComponent.html":{},"components/OffcanvasComponent.html":{}}}],["src/.../app.init.ts",{"_index":3825,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../apptype.ts",{"_index":3781,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../displaydata.ts",{"_index":3827,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../export",{"_index":3783,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../hostnode.ts",{"_index":3819,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../mirroringmoduleinstancenode.ts",{"_index":3821,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../networknode.ts",{"_index":3820,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../parsecommonelement.ts",{"_index":3818,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../styleiconconfig.ts",{"_index":3782,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../subnetnode.ts",{"_index":3824,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../theaterinternalservicemoduleinstancenode.ts",{"_index":3822,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../theatermoduleinstancenode.ts",{"_index":3823,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../typeexport.ts",{"_index":3784,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/app",{"_index":331,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":63,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:17",{"_index":104,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:20",{"_index":100,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:21",{"_index":98,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:22",{"_index":102,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:25",{"_index":92,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:26",{"_index":87,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:29",{"_index":93,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:30",{"_index":101,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":213,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/app.module.ts:156",{"_index":226,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/components/data",{"_index":1014,"title":{},"body":{"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputReturnedV2.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{}}}],["src/app/components/modal/modal.component.ts",{"_index":2369,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/components/modal/modal.component.ts:20",{"_index":2382,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/components/modal/modal.component.ts:26",{"_index":2396,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/components/modal/modal.component.ts:33",{"_index":2384,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/components/modal/modal.component.ts:37",{"_index":2399,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/components/modal/modal.component.ts:40",{"_index":2388,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/components/modal/modal.component.ts:46",{"_index":2380,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/components/modal/modal.component.ts:58",{"_index":2393,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/components/modal/modal.component.ts:66",{"_index":2395,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/components/modal/modal.component.ts:75",{"_index":2390,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/components/modal/modaltype",{"_index":2047,"title":{},"body":{"components/HomeComponent.html":{},"injectables/ModalService.html":{}}}],["src/app/components/modal/modaltype.ts",{"_index":2356,"title":{},"body":{"classes/ModalButton.html":{},"classes/ModalItem.html":{}}}],["src/app/components/modal/modaltype.ts:10",{"_index":2415,"title":{},"body":{"classes/ModalItem.html":{}}}],["src/app/components/modal/modaltype.ts:11",{"_index":2414,"title":{},"body":{"classes/ModalItem.html":{}}}],["src/app/components/modal/modaltype.ts:12",{"_index":2413,"title":{},"body":{"classes/ModalItem.html":{}}}],["src/app/components/modal/modaltype.ts:20",{"_index":2359,"title":{},"body":{"classes/ModalButton.html":{}}}],["src/app/components/modal/modaltype.ts:21",{"_index":2360,"title":{},"body":{"classes/ModalButton.html":{}}}],["src/app/components/modal/modaltype.ts:22",{"_index":2365,"title":{},"body":{"classes/ModalButton.html":{}}}],["src/app/components/modal/modaltype.ts:8",{"_index":2417,"title":{},"body":{"classes/ModalItem.html":{}}}],["src/app/components/modal/modaltype.ts:9",{"_index":2416,"title":{},"body":{"classes/ModalItem.html":{}}}],["src/app/components/navbar/navbar.component.ts",{"_index":2621,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:19",{"_index":2631,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:23",{"_index":2635,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:27",{"_index":2629,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:39",{"_index":2638,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:57",{"_index":2642,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbartype.ts",{"_index":6,"title":{},"body":{"classes/Aoption.html":{},"classes/NavbarElement.html":{},"classes/NavbarItem.html":{}}}],["src/app/components/navbar/navbartype.ts:10",{"_index":2653,"title":{},"body":{"classes/NavbarElement.html":{}}}],["src/app/components/navbar/navbartype.ts:17",{"_index":2681,"title":{},"body":{"classes/NavbarItem.html":{}}}],["src/app/components/navbar/navbartype.ts:18",{"_index":2683,"title":{},"body":{"classes/NavbarItem.html":{}}}],["src/app/components/navbar/navbartype.ts:19",{"_index":2680,"title":{},"body":{"classes/NavbarItem.html":{}}}],["src/app/components/navbar/navbartype.ts:20",{"_index":2682,"title":{},"body":{"classes/NavbarItem.html":{}}}],["src/app/components/navbar/navbartype.ts:27",{"_index":22,"title":{},"body":{"classes/Aoption.html":{}}}],["src/app/components/navbar/navbartype.ts:28",{"_index":23,"title":{},"body":{"classes/Aoption.html":{}}}],["src/app/components/navbar/navbartype.ts:7",{"_index":2655,"title":{},"body":{"classes/NavbarElement.html":{}}}],["src/app/components/navbar/navbartype.ts:8",{"_index":2656,"title":{},"body":{"classes/NavbarElement.html":{}}}],["src/app/components/navbar/navbartype.ts:9",{"_index":2654,"title":{},"body":{"classes/NavbarElement.html":{}}}],["src/app/components/offcanvas/offcanvas.component.ts",{"_index":2725,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["src/app/components/offcanvas/offcanvas.component.ts:100",{"_index":2764,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["src/app/components/offcanvas/offcanvas.component.ts:19",{"_index":2766,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["src/app/components/offcanvas/offcanvas.component.ts:25",{"_index":2757,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["src/app/components/offcanvas/offcanvas.component.ts:29",{"_index":2770,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["src/app/components/offcanvas/offcanvas.component.ts:32",{"_index":2762,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["src/app/components/offcanvas/offcanvas.component.ts:38",{"_index":2758,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["src/app/components/offcanvas/offcanvas.component.ts:43",{"_index":2744,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["src/app/components/offcanvas/offcanvas.component.ts:48",{"_index":2759,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["src/app/components/offcanvas/offcanvas.component.ts:54",{"_index":2748,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["src/app/components/offcanvas/offcanvas.component.ts:64",{"_index":2751,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["src/app/components/offcanvas/offcanvas.component.ts:71",{"_index":2750,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["src/app/components/offcanvas/offcanvas.component.ts:74",{"_index":2769,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["src/app/components/offcanvas/offcanvas.component.ts:75",{"_index":2768,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["src/app/components/offcanvas/offcanvas.component.ts:76",{"_index":2742,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["src/app/components/offcanvas/offcanvas.component.ts:91",{"_index":2763,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["src/app/components/tabnav/tabnav.component.ts",{"_index":3451,"title":{},"body":{"components/TabnavComponent.html":{}}}],["src/app/components/tabnav/tabnav.component.ts:18",{"_index":3463,"title":{},"body":{"components/TabnavComponent.html":{}}}],["src/app/components/tabnav/tabnav.component.ts:23",{"_index":3459,"title":{},"body":{"components/TabnavComponent.html":{}}}],["src/app/components/tabnav/tabnav.component.ts:28",{"_index":3461,"title":{},"body":{"components/TabnavComponent.html":{}}}],["src/app/components/tabnav/tabnav.component.ts:34",{"_index":3470,"title":{},"body":{"components/TabnavComponent.html":{}}}],["src/app/components/tabnav/tabnav.component.ts:40",{"_index":3458,"title":{},"body":{"components/TabnavComponent.html":{}}}],["src/app/components/tabnav/tabnav.component.ts:53",{"_index":3466,"title":{},"body":{"components/TabnavComponent.html":{}}}],["src/app/components/tabnav/tabnav.component.ts:63",{"_index":3465,"title":{},"body":{"components/TabnavComponent.html":{}}}],["src/app/components/tabnav/tabnavtype.ts",{"_index":3478,"title":{},"body":{"classes/TabnavElement.html":{},"classes/TabnavItem.html":{}}}],["src/app/components/tabnav/tabnavtype.ts:16",{"_index":3482,"title":{},"body":{"classes/TabnavItem.html":{}}}],["src/app/components/tabnav/tabnavtype.ts:17",{"_index":3484,"title":{},"body":{"classes/TabnavItem.html":{}}}],["src/app/components/tabnav/tabnavtype.ts:18",{"_index":3483,"title":{},"body":{"classes/TabnavItem.html":{}}}],["src/app/components/tabnav/tabnavtype.ts:8",{"_index":3480,"title":{},"body":{"classes/TabnavElement.html":{}}}],["src/app/components/underbar/underbar.component.ts",{"_index":3648,"title":{},"body":{"components/UnderbarComponent.html":{}}}],["src/app/components/underbar/underbar.component.ts:19",{"_index":3659,"title":{},"body":{"components/UnderbarComponent.html":{}}}],["src/app/components/underbar/underbar.component.ts:23",{"_index":3655,"title":{},"body":{"components/UnderbarComponent.html":{}}}],["src/app/components/underbar/underbar.component.ts:54",{"_index":3664,"title":{},"body":{"components/UnderbarComponent.html":{}}}],["src/app/components/underbar/underbartype.ts",{"_index":3675,"title":{},"body":{"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{}}}],["src/app/components/underbar/underbartype.ts:16",{"_index":3682,"title":{},"body":{"classes/UnderbarItem.html":{}}}],["src/app/components/underbar/underbartype.ts:17",{"_index":3684,"title":{},"body":{"classes/UnderbarItem.html":{}}}],["src/app/components/underbar/underbartype.ts:18",{"_index":3681,"title":{},"body":{"classes/UnderbarItem.html":{}}}],["src/app/components/underbar/underbartype.ts:22",{"_index":3683,"title":{},"body":{"classes/UnderbarItem.html":{}}}],["src/app/components/underbar/underbartype.ts:7",{"_index":3676,"title":{},"body":{"classes/UnderbarElement.html":{}}}],["src/app/composer",{"_index":719,"title":{},"body":{"components/ComposerComponent.html":{}}}],["src/app/models/apptype",{"_index":820,"title":{},"body":{"components/ComposerComponent.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"classes/HostNode.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"components/NetworkComponent.html":{},"classes/NetworkNode.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"components/SubnetComponent.html":{},"classes/SubnetNode.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"components/VisualizerComponent.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["src/app/models/apptype.ts",{"_index":1354,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/models/apptype.ts:58",{"_index":1453,"title":{},"body":{"classes/DataRouteVisualizer.html":{}}}],["src/app/models/apptype.ts:59",{"_index":1454,"title":{},"body":{"classes/DataRouteVisualizer.html":{}}}],["src/app/models/apptype.ts:65",{"_index":1359,"title":{},"body":{"classes/DataRouteComposer.html":{}}}],["src/app/models/apptype.ts:66",{"_index":1358,"title":{},"body":{"classes/DataRouteComposer.html":{}}}],["src/app/models/apptype.ts:67",{"_index":1357,"title":{},"body":{"classes/DataRouteComposer.html":{}}}],["src/app/models/apptype.ts:68",{"_index":1360,"title":{},"body":{"classes/DataRouteComposer.html":{}}}],["src/app/pages/docs/docs.component.ts",{"_index":1459,"title":{},"body":{"components/DocsComponent.html":{}}}],["src/app/pages/docs/docs.component.ts:20",{"_index":1479,"title":{},"body":{"components/DocsComponent.html":{}}}],["src/app/pages/docs/docs.component.ts:25",{"_index":1472,"title":{},"body":{"components/DocsComponent.html":{}}}],["src/app/pages/docs/docs.component.ts:42",{"_index":1475,"title":{},"body":{"components/DocsComponent.html":{}}}],["src/app/pages/elements/navbar",{"_index":2657,"title":{},"body":{"components/NavbarElementComponent.html":{}}}],["src/app/pages/home/home.component.ts",{"_index":1966,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:108",{"_index":2032,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:134",{"_index":2035,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:154",{"_index":2038,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:158",{"_index":2026,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:167",{"_index":2030,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:173",{"_index":1987,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:197",{"_index":1989,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:225",{"_index":1992,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:246",{"_index":2008,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:289",{"_index":1999,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:30",{"_index":2036,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:306",{"_index":2004,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:315",{"_index":2003,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:35",{"_index":2041,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:40",{"_index":2029,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:45",{"_index":2013,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:53",{"_index":2024,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:63",{"_index":2021,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:68",{"_index":2045,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:73",{"_index":2040,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:78",{"_index":2042,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:88",{"_index":2018,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:93",{"_index":2043,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:98",{"_index":2034,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/how",{"_index":2296,"title":{},"body":{"components/HowToUseComponent.html":{}}}],["src/app/rete",{"_index":364,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"components/ControlTemplate.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/FlavorApplication.html":{},"components/HostComponent.html":{},"classes/HostNode.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"components/NetworkComponent.html":{},"classes/NetworkNode.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SimpleModuleApplication.html":{},"components/SubnetComponent.html":{},"classes/SubnetNode.html":{},"classes/TheaterApplication.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/_Control.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["src/app/services/api/attachments.service.ts",{"_index":583,"title":{},"body":{"injectables/AttachmentsService.html":{}}}],["src/app/services/api/attachments.service.ts:11",{"_index":589,"title":{},"body":{"injectables/AttachmentsService.html":{}}}],["src/app/services/api/attachments.service.ts:15",{"_index":593,"title":{},"body":{"injectables/AttachmentsService.html":{}}}],["src/app/services/api/attachments.service.ts:37",{"_index":597,"title":{},"body":{"injectables/AttachmentsService.html":{}}}],["src/app/services/api/flavor.service.ts",{"_index":1947,"title":{},"body":{"injectables/FlavorService.html":{}}}],["src/app/services/api/flavor.service.ts:10",{"_index":1950,"title":{},"body":{"injectables/FlavorService.html":{}}}],["src/app/services/api/flavor.service.ts:14",{"_index":1951,"title":{},"body":{"injectables/FlavorService.html":{}}}],["src/app/services/api/flavor.service.ts:40",{"_index":1953,"title":{},"body":{"injectables/FlavorService.html":{}}}],["src/app/services/api/module.service.ts",{"_index":2587,"title":{},"body":{"injectables/ModuleService.html":{}}}],["src/app/services/api/module.service.ts:108",{"_index":2596,"title":{},"body":{"injectables/ModuleService.html":{}}}],["src/app/services/api/module.service.ts:11",{"_index":2593,"title":{},"body":{"injectables/ModuleService.html":{}}}],["src/app/services/api/module.service.ts:15",{"_index":2599,"title":{},"body":{"injectables/ModuleService.html":{}}}],["src/app/services/api/module.service.ts:41",{"_index":2594,"title":{},"body":{"injectables/ModuleService.html":{}}}],["src/app/services/api/module.service.ts:56",{"_index":2601,"title":{},"body":{"injectables/ModuleService.html":{}}}],["src/app/services/api/module.service.ts:82",{"_index":2604,"title":{},"body":{"injectables/ModuleService.html":{}}}],["src/app/services/api/theater.service.ts",{"_index":3592,"title":{},"body":{"injectables/TheaterService.html":{}}}],["src/app/services/api/theater.service.ts:11",{"_index":3595,"title":{},"body":{"injectables/TheaterService.html":{}}}],["src/app/services/api/theater.service.ts:15",{"_index":3597,"title":{},"body":{"injectables/TheaterService.html":{}}}],["src/app/services/api/theater.service.ts:43",{"_index":3599,"title":{},"body":{"injectables/TheaterService.html":{}}}],["src/app/services/application/export/export.service.ts",{"_index":1763,"title":{},"body":{"injectables/ExportService.html":{}}}],["src/app/services/application/export/export.service.ts:107",{"_index":1791,"title":{},"body":{"injectables/ExportService.html":{}}}],["src/app/services/application/export/export.service.ts:26",{"_index":1806,"title":{},"body":{"injectables/ExportService.html":{}}}],["src/app/services/application/export/export.service.ts:32",{"_index":1777,"title":{},"body":{"injectables/ExportService.html":{}}}],["src/app/services/application/export/export.service.ts:43",{"_index":1782,"title":{},"body":{"injectables/ExportService.html":{}}}],["src/app/services/application/export/export.service.ts:54",{"_index":1779,"title":{},"body":{"injectables/ExportService.html":{}}}],["src/app/services/application/export/export.service.ts:66",{"_index":1787,"title":{},"body":{"injectables/ExportService.html":{}}}],["src/app/services/application/export/export.service.ts:77",{"_index":1785,"title":{},"body":{"injectables/ExportService.html":{}}}],["src/app/services/application/export/export.service.ts:86",{"_index":1796,"title":{},"body":{"injectables/ExportService.html":{}}}],["src/app/services/application/export/exportmodule.ts",{"_index":1570,"title":{},"body":{"classes/ExportModule.html":{}}}],["src/app/services/application/export/exportmodule.ts:17",{"_index":1587,"title":{},"body":{"classes/ExportModule.html":{}}}],["src/app/services/application/export/exportmodule.ts:180",{"_index":1636,"title":{},"body":{"classes/ExportModule.html":{}}}],["src/app/services/application/export/exportmodule.ts:217",{"_index":1633,"title":{},"body":{"classes/ExportModule.html":{}}}],["src/app/services/application/export/exportmodule.ts:22",{"_index":1583,"title":{},"body":{"classes/ExportModule.html":{}}}],["src/app/services/application/export/exportmodule.ts:241",{"_index":1624,"title":{},"body":{"classes/ExportModule.html":{}}}],["src/app/services/application/export/exportmodule.ts:28",{"_index":1582,"title":{},"body":{"classes/ExportModule.html":{}}}],["src/app/services/application/export/exportmodule.ts:316",{"_index":1608,"title":{},"body":{"classes/ExportModule.html":{}}}],["src/app/services/application/export/exportmodule.ts:50",{"_index":1592,"title":{},"body":{"classes/ExportModule.html":{}}}],["src/app/services/application/export/exportmodule.ts:92",{"_index":1615,"title":{},"body":{"classes/ExportModule.html":{}}}],["src/app/services/application/export/exporttheater.ts",{"_index":1828,"title":{},"body":{"classes/ExportTheater.html":{}}}],["src/app/services/application/export/exporttheater.ts:101",{"_index":1846,"title":{},"body":{"classes/ExportTheater.html":{}}}],["src/app/services/application/export/exporttheater.ts:14",{"_index":1834,"title":{},"body":{"classes/ExportTheater.html":{}}}],["src/app/services/application/export/exporttheater.ts:19",{"_index":1833,"title":{},"body":{"classes/ExportTheater.html":{}}}],["src/app/services/application/export/exporttheater.ts:37",{"_index":1835,"title":{},"body":{"classes/ExportTheater.html":{}}}],["src/app/services/application/export/exporttheater.ts:62",{"_index":1837,"title":{},"body":{"classes/ExportTheater.html":{}}}],["src/app/services/application/file/file.service",{"_index":2048,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/services/application/file/file.service.ts",{"_index":1886,"title":{},"body":{"injectables/FileService.html":{}}}],["src/app/services/application/file/file.service.ts:15",{"_index":1894,"title":{},"body":{"injectables/FileService.html":{}}}],["src/app/services/application/file/file.service.ts:25",{"_index":1902,"title":{},"body":{"injectables/FileService.html":{}}}],["src/app/services/application/file/file.service.ts:51",{"_index":1895,"title":{},"body":{"injectables/FileService.html":{}}}],["src/app/services/application/modal/modal.service.ts",{"_index":2418,"title":{},"body":{"injectables/ModalService.html":{}}}],["src/app/services/application/modal/modal.service.ts:106",{"_index":2457,"title":{},"body":{"injectables/ModalService.html":{}}}],["src/app/services/application/modal/modal.service.ts:44",{"_index":2461,"title":{},"body":{"injectables/ModalService.html":{}}}],["src/app/services/application/modal/modal.service.ts:50",{"_index":2463,"title":{},"body":{"injectables/ModalService.html":{}}}],["src/app/services/application/modal/modal.service.ts:56",{"_index":2443,"title":{},"body":{"injectables/ModalService.html":{}}}],["src/app/services/application/modal/modal.service.ts:66",{"_index":2444,"title":{},"body":{"injectables/ModalService.html":{}}}],["src/app/services/application/modal/modal.service.ts:74",{"_index":2446,"title":{},"body":{"injectables/ModalService.html":{}}}],["src/app/services/application/modal/modal.service.ts:86",{"_index":2449,"title":{},"body":{"injectables/ModalService.html":{}}}],["src/app/services/application/parse/parse.service",{"_index":821,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["src/app/services/application/parse/parse.service.ts",{"_index":3016,"title":{},"body":{"injectables/ParseService.html":{}}}],["src/app/services/application/parse/parse.service.ts:113",{"_index":3027,"title":{},"body":{"injectables/ParseService.html":{}}}],["src/app/services/application/parse/parse.service.ts:27",{"_index":3026,"title":{},"body":{"injectables/ParseService.html":{}}}],["src/app/services/application/parse/parse.service.ts:63",{"_index":3038,"title":{},"body":{"injectables/ParseService.html":{}}}],["src/app/services/application/parse/parse.service.ts:79",{"_index":3034,"title":{},"body":{"injectables/ParseService.html":{}}}],["src/app/services/application/parse/parse.service.ts:96",{"_index":3031,"title":{},"body":{"injectables/ParseService.html":{}}}],["src/app/services/application/parse/parsecommonelement.ts",{"_index":3835,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/services/application/parse/parsedatafortheatervisualizer.ts",{"_index":2806,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["src/app/services/application/parse/parsedatafortheatervisualizer.ts:112",{"_index":2825,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["src/app/services/application/parse/parsedatafortheatervisualizer.ts:135",{"_index":2830,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["src/app/services/application/parse/parsedatafortheatervisualizer.ts:156",{"_index":2875,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["src/app/services/application/parse/parsedatafortheatervisualizer.ts:174",{"_index":2837,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["src/app/services/application/parse/parsedatafortheatervisualizer.ts:18",{"_index":2823,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["src/app/services/application/parse/parsedatafortheatervisualizer.ts:193",{"_index":2841,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["src/app/services/application/parse/parsedatafortheatervisualizer.ts:219",{"_index":2850,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["src/app/services/application/parse/parsedatafortheatervisualizer.ts:244",{"_index":2847,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["src/app/services/application/parse/parsedatafortheatervisualizer.ts:269",{"_index":2868,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["src/app/services/application/parse/parsedatafortheatervisualizer.ts:299",{"_index":2835,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["src/app/services/application/parse/parsedatafortheatervisualizer.ts:331",{"_index":2852,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["src/app/services/application/parse/parsedatafortheatervisualizer.ts:44",{"_index":2883,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["src/app/services/application/parse/parsedatafortheatervisualizer.ts:75",{"_index":2880,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["src/app/services/application/parse/parsedatafortheatervisualizer.ts:91",{"_index":2865,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["src/app/services/application/parse/persedataformodulecomposer.ts",{"_index":3057,"title":{},"body":{"classes/PerseDataForModuleComposer.html":{}}}],["src/app/services/application/parse/persedataformodulecomposer.ts:27",{"_index":3063,"title":{},"body":{"classes/PerseDataForModuleComposer.html":{}}}],["src/app/services/application/parse/persedataformodulecomposer.ts:41",{"_index":3062,"title":{},"body":{"classes/PerseDataForModuleComposer.html":{}}}],["src/app/services/application/parse/persedataformodulecomposer.ts:9",{"_index":3060,"title":{},"body":{"classes/PerseDataForModuleComposer.html":{}}}],["src/app/services/application/parse/persedataformodulevisualizer.ts",{"_index":3073,"title":{},"body":{"classes/PerseDataForModuleVisualizer.html":{}}}],["src/app/services/application/parse/persedataformodulevisualizer.ts:115",{"_index":3085,"title":{},"body":{"classes/PerseDataForModuleVisualizer.html":{}}}],["src/app/services/application/parse/persedataformodulevisualizer.ts:136",{"_index":3091,"title":{},"body":{"classes/PerseDataForModuleVisualizer.html":{}}}],["src/app/services/application/parse/persedataformodulevisualizer.ts:16",{"_index":3080,"title":{},"body":{"classes/PerseDataForModuleVisualizer.html":{}}}],["src/app/services/application/parse/persedataformodulevisualizer.ts:35",{"_index":3101,"title":{},"body":{"classes/PerseDataForModuleVisualizer.html":{}}}],["src/app/services/application/parse/persedataformodulevisualizer.ts:54",{"_index":3096,"title":{},"body":{"classes/PerseDataForModuleVisualizer.html":{}}}],["src/app/services/application/parse/persedataformodulevisualizer.ts:71",{"_index":3082,"title":{},"body":{"classes/PerseDataForModuleVisualizer.html":{}}}],["src/app/services/application/parse/persedataformodulevisualizer.ts:96",{"_index":3089,"title":{},"body":{"classes/PerseDataForModuleVisualizer.html":{}}}],["src/app/services/application/parse/persedatafortheatercomposer.ts",{"_index":3112,"title":{},"body":{"classes/PerseDataForTheaterComposer.html":{}}}],["src/app/services/application/parse/persedatafortheatercomposer.ts:114",{"_index":3120,"title":{},"body":{"classes/PerseDataForTheaterComposer.html":{}}}],["src/app/services/application/parse/persedatafortheatercomposer.ts:138",{"_index":3119,"title":{},"body":{"classes/PerseDataForTheaterComposer.html":{}}}],["src/app/services/application/parse/persedatafortheatercomposer.ts:164",{"_index":3122,"title":{},"body":{"classes/PerseDataForTheaterComposer.html":{}}}],["src/app/services/application/parse/persedatafortheatercomposer.ts:18",{"_index":3115,"title":{},"body":{"classes/PerseDataForTheaterComposer.html":{}}}],["src/app/services/application/parse/persedatafortheatercomposer.ts:240",{"_index":3126,"title":{},"body":{"classes/PerseDataForTheaterComposer.html":{}}}],["src/app/services/application/parse/persedatafortheatercomposer.ts:36",{"_index":3128,"title":{},"body":{"classes/PerseDataForTheaterComposer.html":{}}}],["src/app/services/application/parse/persedatafortheatercomposer.ts:53",{"_index":3131,"title":{},"body":{"classes/PerseDataForTheaterComposer.html":{}}}],["src/app/services/application/parse/persedatafortheatercomposer.ts:70",{"_index":3116,"title":{},"body":{"classes/PerseDataForTheaterComposer.html":{}}}],["src/app/services/application/parse/persedatafortheatercomposer.ts:89",{"_index":3118,"title":{},"body":{"classes/PerseDataForTheaterComposer.html":{}}}],["src/app/services/application/spinner/spinner.service",{"_index":822,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["src/app/services/application/spinner/spinner.service.ts",{"_index":3369,"title":{},"body":{"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{}}}],["src/app/services/application/spinner/spinner.service.ts:10",{"_index":3370,"title":{},"body":{"classes/SpinnerData.html":{}}}],["src/app/services/application/spinner/spinner.service.ts:11",{"_index":3371,"title":{},"body":{"classes/SpinnerData.html":{}}}],["src/app/services/application/spinner/spinner.service.ts:28",{"_index":3394,"title":{},"body":{"injectables/SpinnerService.html":{}}}],["src/app/services/application/spinner/spinner.service.ts:43",{"_index":3395,"title":{},"body":{"injectables/SpinnerService.html":{}}}],["src/app/services/application/spinner/spinner.service.ts:52",{"_index":3396,"title":{},"body":{"injectables/SpinnerService.html":{}}}],["src/app/services/application/storage/storage.service",{"_index":823,"title":{},"body":{"components/ComposerComponent.html":{},"components/HomeComponent.html":{}}}],["src/app/services/application/storage/storage.service.ts",{"_index":3400,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/services/application/storage/storage.service.ts:14",{"_index":3405,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/services/application/storage/storage.service.ts:19",{"_index":3411,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/services/application/storage/storage.service.ts:25",{"_index":3408,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/services/application/storage/storage.service.ts:27",{"_index":3404,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/services/modelsapplication/applicationmodels",{"_index":824,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["src/app/services/modelsapplication/applicationmodels.ts",{"_index":346,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["src/app/services/modelsapplication/applicationmodels.ts:100",{"_index":3493,"title":{},"body":{"classes/TheaterApplication.html":{}}}],["src/app/services/modelsapplication/applicationmodels.ts:104",{"_index":352,"title":{},"body":{"classes/AreaApplication.html":{}}}],["src/app/services/modelsapplication/applicationmodels.ts:107",{"_index":456,"title":{},"body":{"classes/AreaColorDTO.html":{}}}],["src/app/services/modelsapplication/applicationmodels.ts:112",{"_index":1926,"title":{},"body":{"classes/FlavorApplication.html":{}}}],["src/app/services/modelsapplication/applicationmodels.ts:28",{"_index":2489,"title":{},"body":{"classes/ModuleApplication.html":{}}}],["src/app/services/modelsapplication/applicationmodels.ts:29",{"_index":2490,"title":{},"body":{"classes/ModuleApplication.html":{}}}],["src/app/services/modelsapplication/applicationmodels.ts:30",{"_index":2488,"title":{},"body":{"classes/ModuleApplication.html":{}}}],["src/app/services/modelsapplication/applicationmodels.ts:31",{"_index":2487,"title":{},"body":{"classes/ModuleApplication.html":{}}}],["src/app/services/modelsapplication/applicationmodels.ts:32",{"_index":2492,"title":{},"body":{"classes/ModuleApplication.html":{}}}],["src/app/services/modelsapplication/applicationmodels.ts:33",{"_index":2491,"title":{},"body":{"classes/ModuleApplication.html":{}}}],["src/app/services/modelsapplication/applicationmodels.ts:34",{"_index":2493,"title":{},"body":{"classes/ModuleApplication.html":{}}}],["src/app/services/modelsapplication/applicationmodels.ts:42",{"_index":3339,"title":{},"body":{"classes/SimpleModuleApplication.html":{}}}],["src/app/services/modelsapplication/applicationmodels.ts:43",{"_index":3338,"title":{},"body":{"classes/SimpleModuleApplication.html":{}}}],["src/app/services/modelsapplication/applicationmodels.ts:44",{"_index":3337,"title":{},"body":{"classes/SimpleModuleApplication.html":{}}}],["src/app/services/modelsapplication/applicationmodels.ts:45",{"_index":3341,"title":{},"body":{"classes/SimpleModuleApplication.html":{}}}],["src/app/services/modelsapplication/applicationmodels.ts:46",{"_index":3340,"title":{},"body":{"classes/SimpleModuleApplication.html":{}}}],["src/app/services/modelsapplication/applicationmodels.ts:47",{"_index":3342,"title":{},"body":{"classes/SimpleModuleApplication.html":{}}}],["src/app/services/modelsapplication/applicationmodels.ts:52",{"_index":3175,"title":{},"body":{"classes/ReteConnection.html":{}}}],["src/app/services/modelsapplication/applicationmodels.ts:53",{"_index":3177,"title":{},"body":{"classes/ReteConnection.html":{}}}],["src/app/services/modelsapplication/applicationmodels.ts:54",{"_index":3178,"title":{},"body":{"classes/ReteConnection.html":{}}}],["src/app/services/modelsapplication/applicationmodels.ts:55",{"_index":3176,"title":{},"body":{"classes/ReteConnection.html":{}}}],["src/app/services/modelsapplication/applicationmodels.ts:63",{"_index":3643,"title":{},"body":{"classes/TopologyElement.html":{}}}],["src/app/services/modelsapplication/applicationmodels.ts:64",{"_index":3642,"title":{},"body":{"classes/TopologyElement.html":{}}}],["src/app/services/modelsapplication/applicationmodels.ts:70",{"_index":2724,"title":{},"body":{"classes/NodeTopologyElement.html":{}}}],["src/app/services/modelsapplication/applicationmodels.ts:71",{"_index":2723,"title":{},"body":{"classes/NodeTopologyElement.html":{}}}],["src/app/services/modelsapplication/applicationmodels.ts:81",{"_index":2552,"title":{},"body":{"classes/ModuleInstance.html":{}}}],["src/app/services/modelsapplication/applicationmodels.ts:82",{"_index":2553,"title":{},"body":{"classes/ModuleInstance.html":{}}}],["src/app/services/modelsapplication/applicationmodels.ts:84",{"_index":2551,"title":{},"body":{"classes/ModuleInstance.html":{}}}],["src/app/services/modelsapplication/applicationmodels.ts:96",{"_index":3491,"title":{},"body":{"classes/TheaterApplication.html":{}}}],["src/app/services/modelsapplication/applicationmodels.ts:97",{"_index":3490,"title":{},"body":{"classes/TheaterApplication.html":{}}}],["src/app/services/modelsapplication/applicationmodels.ts:99",{"_index":3492,"title":{},"body":{"classes/TheaterApplication.html":{}}}],["src/app/services/modelsdto/elementdto.ts",{"_index":2791,"title":{},"body":{"classes/PageableDTO.html":{},"classes/SortDTO.html":{}}}],["src/app/services/modelsdto/elementdto.ts:10",{"_index":2798,"title":{},"body":{"classes/PageableDTO.html":{}}}],["src/app/services/modelsdto/elementdto.ts:11",{"_index":2801,"title":{},"body":{"classes/PageableDTO.html":{}}}],["src/app/services/modelsdto/elementdto.ts:12",{"_index":2802,"title":{},"body":{"classes/PageableDTO.html":{}}}],["src/app/services/modelsdto/elementdto.ts:2",{"_index":3362,"title":{},"body":{"classes/SortDTO.html":{}}}],["src/app/services/modelsdto/elementdto.ts:3",{"_index":3363,"title":{},"body":{"classes/SortDTO.html":{}}}],["src/app/services/modelsdto/elementdto.ts:4",{"_index":3364,"title":{},"body":{"classes/SortDTO.html":{}}}],["src/app/services/modelsdto/elementdto.ts:7",{"_index":2797,"title":{},"body":{"classes/PageableDTO.html":{}}}],["src/app/services/modelsdto/elementdto.ts:8",{"_index":2799,"title":{},"body":{"classes/PageableDTO.html":{}}}],["src/app/services/modelsdto/elementdto.ts:9",{"_index":2800,"title":{},"body":{"classes/PageableDTO.html":{}}}],["src/app/services/modelsdto/falvordto.ts",{"_index":1930,"title":{},"body":{"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{}}}],["src/app/services/modelsdto/falvordto.ts:10",{"_index":3692,"title":{},"body":{"classes/VirtualizationEnvironmentTypeDTO.html":{}}}],["src/app/services/modelsdto/falvordto.ts:11",{"_index":3693,"title":{},"body":{"classes/VirtualizationEnvironmentTypeDTO.html":{}}}],["src/app/services/modelsdto/falvordto.ts:12",{"_index":3694,"title":{},"body":{"classes/VirtualizationEnvironmentTypeDTO.html":{}}}],["src/app/services/modelsdto/falvordto.ts:13",{"_index":3695,"title":{},"body":{"classes/VirtualizationEnvironmentTypeDTO.html":{}}}],["src/app/services/modelsdto/falvordto.ts:14",{"_index":3696,"title":{},"body":{"classes/VirtualizationEnvironmentTypeDTO.html":{}}}],["src/app/services/modelsdto/falvordto.ts:18",{"_index":1943,"title":{},"body":{"classes/FlavorDTO.html":{}}}],["src/app/services/modelsdto/falvordto.ts:19",{"_index":1941,"title":{},"body":{"classes/FlavorDTO.html":{}}}],["src/app/services/modelsdto/falvordto.ts:2",{"_index":1931,"title":{},"body":{"classes/FlavorBasicInfo.html":{}}}],["src/app/services/modelsdto/falvordto.ts:20",{"_index":1942,"title":{},"body":{"classes/FlavorDTO.html":{}}}],["src/app/services/modelsdto/falvordto.ts:21",{"_index":1944,"title":{},"body":{"classes/FlavorDTO.html":{}}}],["src/app/services/modelsdto/falvordto.ts:22",{"_index":1945,"title":{},"body":{"classes/FlavorDTO.html":{}}}],["src/app/services/modelsdto/falvordto.ts:3",{"_index":1932,"title":{},"body":{"classes/FlavorBasicInfo.html":{}}}],["src/app/services/modelsdto/falvordto.ts:4",{"_index":1933,"title":{},"body":{"classes/FlavorBasicInfo.html":{}}}],["src/app/services/modelsdto/falvordto.ts:8",{"_index":3690,"title":{},"body":{"classes/VirtualizationEnvironmentTypeDTO.html":{}}}],["src/app/services/modelsdto/falvordto.ts:9",{"_index":3691,"title":{},"body":{"classes/VirtualizationEnvironmentTypeDTO.html":{}}}],["src/app/services/modelsdto/hostdto.ts",{"_index":2213,"title":{},"body":{"classes/HostModuleDTO.html":{},"classes/HostPortModuleDTO.html":{}}}],["src/app/services/modelsdto/hostdto.ts:11",{"_index":2215,"title":{},"body":{"classes/HostModuleDTO.html":{}}}],["src/app/services/modelsdto/hostdto.ts:12",{"_index":2216,"title":{},"body":{"classes/HostModuleDTO.html":{}}}],["src/app/services/modelsdto/hostdto.ts:13",{"_index":2217,"title":{},"body":{"classes/HostModuleDTO.html":{}}}],["src/app/services/modelsdto/hostdto.ts:14",{"_index":2219,"title":{},"body":{"classes/HostModuleDTO.html":{}}}],["src/app/services/modelsdto/hostdto.ts:15",{"_index":2220,"title":{},"body":{"classes/HostModuleDTO.html":{}}}],["src/app/services/modelsdto/hostdto.ts:4",{"_index":2292,"title":{},"body":{"classes/HostPortModuleDTO.html":{}}}],["src/app/services/modelsdto/hostdto.ts:5",{"_index":2293,"title":{},"body":{"classes/HostPortModuleDTO.html":{}}}],["src/app/services/modelsdto/hostdto.ts:6",{"_index":2294,"title":{},"body":{"classes/HostPortModuleDTO.html":{}}}],["src/app/services/modelsdto/hostdto.ts:7",{"_index":2295,"title":{},"body":{"classes/HostPortModuleDTO.html":{}}}],["src/app/services/modelsdto/moduledto",{"_index":3919,"title":{},"body":{"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["src/app/services/modelsdto/moduledto.ts",{"_index":459,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:10",{"_index":2576,"title":{},"body":{"classes/ModuleListDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:100",{"_index":2537,"title":{},"body":{"classes/ModuleDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:101",{"_index":2538,"title":{},"body":{"classes/ModuleDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:102",{"_index":2539,"title":{},"body":{"classes/ModuleDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:103",{"_index":2541,"title":{},"body":{"classes/ModuleDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:104",{"_index":2540,"title":{},"body":{"classes/ModuleDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:105",{"_index":2542,"title":{},"body":{"classes/ModuleDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:106",{"_index":2543,"title":{},"body":{"classes/ModuleDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:11",{"_index":2575,"title":{},"body":{"classes/ModuleListDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:110",{"_index":2580,"title":{},"body":{"classes/ModuleNetworkInterfaceDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:111",{"_index":2581,"title":{},"body":{"classes/ModuleNetworkInterfaceDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:112",{"_index":2582,"title":{},"body":{"classes/ModuleNetworkInterfaceDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:113",{"_index":2583,"title":{},"body":{"classes/ModuleNetworkInterfaceDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:114",{"_index":2584,"title":{},"body":{"classes/ModuleNetworkInterfaceDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:115",{"_index":2585,"title":{},"body":{"classes/ModuleNetworkInterfaceDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:116",{"_index":2586,"title":{},"body":{"classes/ModuleNetworkInterfaceDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:12",{"_index":2573,"title":{},"body":{"classes/ModuleListDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:120",{"_index":950,"title":{},"body":{"classes/ConsumerInterfaceLinkDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:121",{"_index":951,"title":{},"body":{"classes/ConsumerInterfaceLinkDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:122",{"_index":952,"title":{},"body":{"classes/ConsumerInterfaceLinkDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:126",{"_index":2558,"title":{},"body":{"classes/ModuleInstancePropertiesDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:127",{"_index":2560,"title":{},"body":{"classes/ModuleInstancePropertiesDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:128",{"_index":2561,"title":{},"body":{"classes/ModuleInstancePropertiesDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:129",{"_index":2563,"title":{},"body":{"classes/ModuleInstancePropertiesDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:13",{"_index":2570,"title":{},"body":{"classes/ModuleListDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:130",{"_index":2562,"title":{},"body":{"classes/ModuleInstancePropertiesDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:131",{"_index":2559,"title":{},"body":{"classes/ModuleInstancePropertiesDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:135",{"_index":462,"title":{},"body":{"classes/AreaDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:136",{"_index":465,"title":{},"body":{"classes/AreaDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:137",{"_index":463,"title":{},"body":{"classes/AreaDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:138",{"_index":461,"title":{},"body":{"classes/AreaDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:139",{"_index":464,"title":{},"body":{"classes/AreaDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:14",{"_index":2574,"title":{},"body":{"classes/ModuleListDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:140",{"_index":460,"title":{},"body":{"classes/AreaDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:144",{"_index":3335,"title":{},"body":{"classes/SimpleAreaDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:145",{"_index":3336,"title":{},"body":{"classes/SimpleAreaDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:148",{"_index":3543,"title":{},"body":{"classes/TheaterInstancePropertiesDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:149",{"_index":3544,"title":{},"body":{"classes/TheaterInstancePropertiesDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:15",{"_index":2571,"title":{},"body":{"classes/ModuleListDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:150",{"_index":3540,"title":{},"body":{"classes/TheaterInstancePropertiesDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:151",{"_index":3541,"title":{},"body":{"classes/TheaterInstancePropertiesDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:152",{"_index":3545,"title":{},"body":{"classes/TheaterInstancePropertiesDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:153",{"_index":3542,"title":{},"body":{"classes/TheaterInstancePropertiesDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:156",{"_index":3488,"title":{},"body":{"classes/TagTIP.html":{}}}],["src/app/services/modelsdto/moduledto.ts:159",{"_index":1512,"title":{},"body":{"classes/ElementIntoTheaterDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:16",{"_index":2568,"title":{},"body":{"classes/ModuleListDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:160",{"_index":1513,"title":{},"body":{"classes/ElementIntoTheaterDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:163",{"_index":2556,"title":{},"body":{"classes/ModuleInstanceDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:164",{"_index":2557,"title":{},"body":{"classes/ModuleInstanceDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:167",{"_index":3538,"title":{},"body":{"classes/TheaterInstanceDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:168",{"_index":3539,"title":{},"body":{"classes/TheaterInstanceDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:17",{"_index":2567,"title":{},"body":{"classes/ModuleListDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:22",{"_index":3644,"title":{},"body":{"classes/TypesCatalogueDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:23",{"_index":3645,"title":{},"body":{"classes/TypesCatalogueDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:24",{"_index":3646,"title":{},"body":{"classes/TypesCatalogueDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:25",{"_index":3647,"title":{},"body":{"classes/TypesCatalogueDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:29",{"_index":2523,"title":{},"body":{"classes/ModuleClassificationDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:30",{"_index":2524,"title":{},"body":{"classes/ModuleClassificationDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:31",{"_index":2525,"title":{},"body":{"classes/ModuleClassificationDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:32",{"_index":2526,"title":{},"body":{"classes/ModuleClassificationDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:33",{"_index":2527,"title":{},"body":{"classes/ModuleClassificationDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:34",{"_index":2528,"title":{},"body":{"classes/ModuleClassificationDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:35",{"_index":2529,"title":{},"body":{"classes/ModuleClassificationDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:39",{"_index":1965,"title":{},"body":{"classes/GenericParameterDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:40",{"_index":1963,"title":{},"body":{"classes/GenericParameterDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:41",{"_index":1964,"title":{},"body":{"classes/GenericParameterDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:45",{"_index":886,"title":{},"body":{"classes/ConfigurationTemplateDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:46",{"_index":892,"title":{},"body":{"classes/ConfigurationTemplateDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:47",{"_index":895,"title":{},"body":{"classes/ConfigurationTemplateDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:48",{"_index":890,"title":{},"body":{"classes/ConfigurationTemplateDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:49",{"_index":888,"title":{},"body":{"classes/ConfigurationTemplateDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:50",{"_index":891,"title":{},"body":{"classes/ConfigurationTemplateDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:51",{"_index":893,"title":{},"body":{"classes/ConfigurationTemplateDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:52",{"_index":889,"title":{},"body":{"classes/ConfigurationTemplateDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:53",{"_index":887,"title":{},"body":{"classes/ConfigurationTemplateDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:54",{"_index":896,"title":{},"body":{"classes/ConfigurationTemplateDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:55",{"_index":894,"title":{},"body":{"classes/ConfigurationTemplateDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:59",{"_index":2577,"title":{},"body":{"classes/ModuleModeDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:60",{"_index":2578,"title":{},"body":{"classes/ModuleModeDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:61",{"_index":2579,"title":{},"body":{"classes/ModuleModeDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:65",{"_index":2614,"title":{},"body":{"classes/ModuleStatusDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:66",{"_index":2615,"title":{},"body":{"classes/ModuleStatusDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:67",{"_index":2616,"title":{},"body":{"classes/ModuleStatusDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:7",{"_index":2566,"title":{},"body":{"classes/ModuleListDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:70",{"_index":3397,"title":{},"body":{"classes/StatisticItemDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:71",{"_index":3399,"title":{},"body":{"classes/StatisticItemDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:72",{"_index":3398,"title":{},"body":{"classes/StatisticItemDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:76",{"_index":3343,"title":{},"body":{"classes/SimpleModuleDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:77",{"_index":3344,"title":{},"body":{"classes/SimpleModuleDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:78",{"_index":3345,"title":{},"body":{"classes/SimpleModuleDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:79",{"_index":3346,"title":{},"body":{"classes/SimpleModuleDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:8",{"_index":2572,"title":{},"body":{"classes/ModuleListDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:80",{"_index":3347,"title":{},"body":{"classes/SimpleModuleDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:81",{"_index":3348,"title":{},"body":{"classes/SimpleModuleDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:82",{"_index":3349,"title":{},"body":{"classes/SimpleModuleDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:83",{"_index":3350,"title":{},"body":{"classes/SimpleModuleDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:84",{"_index":3351,"title":{},"body":{"classes/SimpleModuleDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:85",{"_index":3352,"title":{},"body":{"classes/SimpleModuleDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:86",{"_index":3353,"title":{},"body":{"classes/SimpleModuleDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:87",{"_index":3354,"title":{},"body":{"classes/SimpleModuleDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:88",{"_index":3355,"title":{},"body":{"classes/SimpleModuleDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:89",{"_index":3356,"title":{},"body":{"classes/SimpleModuleDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:9",{"_index":2569,"title":{},"body":{"classes/ModuleListDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:90",{"_index":3357,"title":{},"body":{"classes/SimpleModuleDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:93",{"_index":2530,"title":{},"body":{"classes/ModuleDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:94",{"_index":2531,"title":{},"body":{"classes/ModuleDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:95",{"_index":2532,"title":{},"body":{"classes/ModuleDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:96",{"_index":2533,"title":{},"body":{"classes/ModuleDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:97",{"_index":2534,"title":{},"body":{"classes/ModuleDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:98",{"_index":2535,"title":{},"body":{"classes/ModuleDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:99",{"_index":2536,"title":{},"body":{"classes/ModuleDTO.html":{}}}],["src/app/services/modelsdto/networkdto.ts",{"_index":702,"title":{},"body":{"classes/BorderNetworkDTO.html":{},"classes/NetOSRouterDTO.html":{},"classes/NetworkDTO.html":{},"classes/SubnetDTO.html":{}}}],["src/app/services/modelsdto/networkdto.ts:10",{"_index":708,"title":{},"body":{"classes/BorderNetworkDTO.html":{}}}],["src/app/services/modelsdto/networkdto.ts:11",{"_index":709,"title":{},"body":{"classes/BorderNetworkDTO.html":{}}}],["src/app/services/modelsdto/networkdto.ts:15",{"_index":2684,"title":{},"body":{"classes/NetOSRouterDTO.html":{}}}],["src/app/services/modelsdto/networkdto.ts:16",{"_index":2685,"title":{},"body":{"classes/NetOSRouterDTO.html":{}}}],["src/app/services/modelsdto/networkdto.ts:17",{"_index":2686,"title":{},"body":{"classes/NetOSRouterDTO.html":{}}}],["src/app/services/modelsdto/networkdto.ts:18",{"_index":2687,"title":{},"body":{"classes/NetOSRouterDTO.html":{}}}],["src/app/services/modelsdto/networkdto.ts:2",{"_index":2701,"title":{},"body":{"classes/NetworkDTO.html":{}}}],["src/app/services/modelsdto/networkdto.ts:22",{"_index":3428,"title":{},"body":{"classes/SubnetDTO.html":{}}}],["src/app/services/modelsdto/networkdto.ts:23",{"_index":3429,"title":{},"body":{"classes/SubnetDTO.html":{}}}],["src/app/services/modelsdto/networkdto.ts:24",{"_index":3430,"title":{},"body":{"classes/SubnetDTO.html":{}}}],["src/app/services/modelsdto/networkdto.ts:25",{"_index":3431,"title":{},"body":{"classes/SubnetDTO.html":{}}}],["src/app/services/modelsdto/networkdto.ts:26",{"_index":3432,"title":{},"body":{"classes/SubnetDTO.html":{}}}],["src/app/services/modelsdto/networkdto.ts:27",{"_index":3433,"title":{},"body":{"classes/SubnetDTO.html":{}}}],["src/app/services/modelsdto/networkdto.ts:28",{"_index":3434,"title":{},"body":{"classes/SubnetDTO.html":{}}}],["src/app/services/modelsdto/networkdto.ts:29",{"_index":3435,"title":{},"body":{"classes/SubnetDTO.html":{}}}],["src/app/services/modelsdto/networkdto.ts:3",{"_index":2702,"title":{},"body":{"classes/NetworkDTO.html":{}}}],["src/app/services/modelsdto/networkdto.ts:30",{"_index":3436,"title":{},"body":{"classes/SubnetDTO.html":{}}}],["src/app/services/modelsdto/networkdto.ts:31",{"_index":3437,"title":{},"body":{"classes/SubnetDTO.html":{}}}],["src/app/services/modelsdto/networkdto.ts:32",{"_index":3438,"title":{},"body":{"classes/SubnetDTO.html":{}}}],["src/app/services/modelsdto/networkdto.ts:33",{"_index":3439,"title":{},"body":{"classes/SubnetDTO.html":{}}}],["src/app/services/modelsdto/networkdto.ts:4",{"_index":2703,"title":{},"body":{"classes/NetworkDTO.html":{}}}],["src/app/services/modelsdto/networkdto.ts:8",{"_index":705,"title":{},"body":{"classes/BorderNetworkDTO.html":{}}}],["src/app/services/modelsdto/networkdto.ts:9",{"_index":706,"title":{},"body":{"classes/BorderNetworkDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts",{"_index":672,"title":{},"body":{"classes/BlueprintFileDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/NameMappingDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TheaterDTO.html":{},"classes/TheatreStatusDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts:10",{"_index":3605,"title":{},"body":{"classes/TheatreStatusDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts:11",{"_index":3606,"title":{},"body":{"classes/TheatreStatusDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts:12",{"_index":3607,"title":{},"body":{"classes/TheatreStatusDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts:16",{"_index":1455,"title":{},"body":{"classes/DeployInstanceDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts:17",{"_index":1456,"title":{},"body":{"classes/DeployInstanceDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts:18",{"_index":1457,"title":{},"body":{"classes/DeployInstanceDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts:19",{"_index":1458,"title":{},"body":{"classes/DeployInstanceDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts:23",{"_index":673,"title":{},"body":{"classes/BlueprintFileDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts:24",{"_index":674,"title":{},"body":{"classes/BlueprintFileDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts:25",{"_index":676,"title":{},"body":{"classes/BlueprintFileDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts:26",{"_index":677,"title":{},"body":{"classes/BlueprintFileDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts:30",{"_index":2617,"title":{},"body":{"classes/NameMappingDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts:31",{"_index":2618,"title":{},"body":{"classes/NameMappingDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts:32",{"_index":2619,"title":{},"body":{"classes/NameMappingDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts:33",{"_index":2620,"title":{},"body":{"classes/NameMappingDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts:36",{"_index":1568,"title":{},"body":{"classes/EntityNameMappingFileDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts:39",{"_index":3514,"title":{},"body":{"classes/TheaterDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts:4",{"_index":3485,"title":{},"body":{"classes/TagCatalogueDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts:40",{"_index":3515,"title":{},"body":{"classes/TheaterDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts:41",{"_index":3516,"title":{},"body":{"classes/TheaterDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts:42",{"_index":3517,"title":{},"body":{"classes/TheaterDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts:43",{"_index":3518,"title":{},"body":{"classes/TheaterDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts:44",{"_index":3519,"title":{},"body":{"classes/TheaterDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts:45",{"_index":3520,"title":{},"body":{"classes/TheaterDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts:46",{"_index":3521,"title":{},"body":{"classes/TheaterDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts:47",{"_index":3522,"title":{},"body":{"classes/TheaterDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts:48",{"_index":3523,"title":{},"body":{"classes/TheaterDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts:49",{"_index":3524,"title":{},"body":{"classes/TheaterDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts:5",{"_index":3486,"title":{},"body":{"classes/TagCatalogueDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts:50",{"_index":3525,"title":{},"body":{"classes/TheaterDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts:51",{"_index":3526,"title":{},"body":{"classes/TheaterDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts:52",{"_index":3527,"title":{},"body":{"classes/TheaterDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts:53",{"_index":3528,"title":{},"body":{"classes/TheaterDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts:54",{"_index":3529,"title":{},"body":{"classes/TheaterDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts:55",{"_index":3530,"title":{},"body":{"classes/TheaterDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts:56",{"_index":3531,"title":{},"body":{"classes/TheaterDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts:57",{"_index":3532,"title":{},"body":{"classes/TheaterDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts:58",{"_index":3533,"title":{},"body":{"classes/TheaterDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts:6",{"_index":3487,"title":{},"body":{"classes/TagCatalogueDTO.html":{}}}],["src/app/services/modelsexport/moduleexport.ts",{"_index":898,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:10",{"_index":2545,"title":{},"body":{"classes/ModuleExport.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:100",{"_index":3160,"title":{},"body":{"classes/PropertiesNSD.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:101",{"_index":3162,"title":{},"body":{"classes/PropertiesNSD.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:102",{"_index":3161,"title":{},"body":{"classes/PropertiesNSD.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:107",{"_index":3450,"title":{},"body":{"classes/SubnetSimpleData.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:108",{"_index":3449,"title":{},"body":{"classes/SubnetSimpleData.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:109",{"_index":3448,"title":{},"body":{"classes/SubnetSimpleData.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:11",{"_index":2547,"title":{},"body":{"classes/ModuleExport.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:112",{"_index":3165,"title":{},"body":{"classes/PropertiesSSD.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:118",{"_index":3163,"title":{},"body":{"classes/PropertiesSSD.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:119",{"_index":3166,"title":{},"body":{"classes/PropertiesSSD.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:12",{"_index":2548,"title":{},"body":{"classes/ModuleExport.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:120",{"_index":3164,"title":{},"body":{"classes/PropertiesSSD.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:13",{"_index":2546,"title":{},"body":{"classes/ModuleExport.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:14",{"_index":2544,"title":{},"body":{"classes/ModuleExport.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:15",{"_index":2549,"title":{},"body":{"classes/ModuleExport.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:20",{"_index":2613,"title":{},"body":{"classes/ModuleSimpleData.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:21",{"_index":2612,"title":{},"body":{"classes/ModuleSimpleData.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:24",{"_index":3157,"title":{},"body":{"classes/PropertiesMSD.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:25",{"_index":3155,"title":{},"body":{"classes/PropertiesMSD.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:26",{"_index":3158,"title":{},"body":{"classes/PropertiesMSD.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:27",{"_index":3154,"title":{},"body":{"classes/PropertiesMSD.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:28",{"_index":3156,"title":{},"body":{"classes/PropertiesMSD.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:32",{"_index":3159,"title":{},"body":{"classes/PropertiesMSD.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:35",{"_index":903,"title":{},"body":{"classes/ConstraintsMSD.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:36",{"_index":905,"title":{},"body":{"classes/ConstraintsMSD.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:37",{"_index":907,"title":{},"body":{"classes/ConstraintsMSD.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:40",{"_index":2303,"title":{},"body":{"classes/InterfaceConstraints.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:41",{"_index":2305,"title":{},"body":{"classes/InterfaceConstraints.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:42",{"_index":2304,"title":{},"body":{"classes/InterfaceConstraints.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:43",{"_index":2302,"title":{},"body":{"classes/InterfaceConstraints.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:44",{"_index":2306,"title":{},"body":{"classes/InterfaceConstraints.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:52",{"_index":2311,"title":{},"body":{"classes/InterfaceNetworksProvider.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:53",{"_index":2312,"title":{},"body":{"classes/InterfaceNetworksProvider.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:54",{"_index":2314,"title":{},"body":{"classes/InterfaceNetworksProvider.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:55",{"_index":2313,"title":{},"body":{"classes/InterfaceNetworksProvider.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:58",{"_index":2307,"title":{},"body":{"classes/InterfaceNetworksConsumer.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:59",{"_index":2308,"title":{},"body":{"classes/InterfaceNetworksConsumer.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:60",{"_index":2310,"title":{},"body":{"classes/InterfaceNetworksConsumer.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:61",{"_index":2309,"title":{},"body":{"classes/InterfaceNetworksConsumer.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:65",{"_index":3686,"title":{},"body":{"classes/VirtualMachine.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:66",{"_index":3685,"title":{},"body":{"classes/VirtualMachine.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:69",{"_index":3688,"title":{},"body":{"classes/VirtualMachinePorts.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:70",{"_index":3687,"title":{},"body":{"classes/VirtualMachinePorts.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:71",{"_index":3689,"title":{},"body":{"classes/VirtualMachinePorts.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:75",{"_index":3440,"title":{},"body":{"classes/SubnetExport.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:79",{"_index":2722,"title":{},"body":{"classes/NodeSimpleData.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:80",{"_index":2720,"title":{},"body":{"classes/NodeSimpleData.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:81",{"_index":2719,"title":{},"body":{"classes/NodeSimpleData.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:82",{"_index":2721,"title":{},"body":{"classes/NodeSimpleData.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:86",{"_index":3174,"title":{},"body":{"classes/RelationshipsExport.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:87",{"_index":3173,"title":{},"body":{"classes/RelationshipsExport.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:9",{"_index":2550,"title":{},"body":{"classes/ModuleExport.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:91",{"_index":3147,"title":{},"body":{"classes/PortSimpleData.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:92",{"_index":3146,"title":{},"body":{"classes/PortSimpleData.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:96",{"_index":2718,"title":{},"body":{"classes/NetworkSimpleData.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:97",{"_index":2717,"title":{},"body":{"classes/NetworkSimpleData.html":{}}}],["src/app/services/modelsexport/theaterexport.ts",{"_index":548,"title":{},"body":{"classes/AreaExport.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesTSD.html":{},"classes/SourceExport.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{}}}],["src/app/services/modelsexport/theaterexport.ts:10",{"_index":3535,"title":{},"body":{"classes/TheaterExport.html":{}}}],["src/app/services/modelsexport/theaterexport.ts:11",{"_index":3536,"title":{},"body":{"classes/TheaterExport.html":{}}}],["src/app/services/modelsexport/theaterexport.ts:15",{"_index":3604,"title":{},"body":{"classes/TheaterSimpleData.html":{}}}],["src/app/services/modelsexport/theaterexport.ts:16",{"_index":3603,"title":{},"body":{"classes/TheaterSimpleData.html":{}}}],["src/app/services/modelsexport/theaterexport.ts:19",{"_index":3172,"title":{},"body":{"classes/PropertiesTSD.html":{}}}],["src/app/services/modelsexport/theaterexport.ts:20",{"_index":3169,"title":{},"body":{"classes/PropertiesTSD.html":{}}}],["src/app/services/modelsexport/theaterexport.ts:21",{"_index":3170,"title":{},"body":{"classes/PropertiesTSD.html":{}}}],["src/app/services/modelsexport/theaterexport.ts:22",{"_index":3168,"title":{},"body":{"classes/PropertiesTSD.html":{}}}],["src/app/services/modelsexport/theaterexport.ts:23",{"_index":3171,"title":{},"body":{"classes/PropertiesTSD.html":{}}}],["src/app/services/modelsexport/theaterexport.ts:24",{"_index":3167,"title":{},"body":{"classes/PropertiesTSD.html":{}}}],["src/app/services/modelsexport/theaterexport.ts:27",{"_index":3489,"title":{},"body":{"classes/TagsExport.html":{}}}],["src/app/services/modelsexport/theaterexport.ts:30",{"_index":549,"title":{},"body":{"classes/AreaExport.html":{}}}],["src/app/services/modelsexport/theaterexport.ts:31",{"_index":550,"title":{},"body":{"classes/AreaExport.html":{}}}],["src/app/services/modelsexport/theaterexport.ts:35",{"_index":2565,"title":{},"body":{"classes/ModuleInstanceSimpleData.html":{}}}],["src/app/services/modelsexport/theaterexport.ts:36",{"_index":2564,"title":{},"body":{"classes/ModuleInstanceSimpleData.html":{}}}],["src/app/services/modelsexport/theaterexport.ts:39",{"_index":3150,"title":{},"body":{"classes/PropertiesMISD.html":{}}}],["src/app/services/modelsexport/theaterexport.ts:40",{"_index":3153,"title":{},"body":{"classes/PropertiesMISD.html":{}}}],["src/app/services/modelsexport/theaterexport.ts:41",{"_index":3148,"title":{},"body":{"classes/PropertiesMISD.html":{}}}],["src/app/services/modelsexport/theaterexport.ts:42",{"_index":3151,"title":{},"body":{"classes/PropertiesMISD.html":{}}}],["src/app/services/modelsexport/theaterexport.ts:43",{"_index":3152,"title":{},"body":{"classes/PropertiesMISD.html":{}}}],["src/app/services/modelsexport/theaterexport.ts:44",{"_index":3149,"title":{},"body":{"classes/PropertiesMISD.html":{}}}],["src/app/services/modelsexport/theaterexport.ts:47",{"_index":3367,"title":{},"body":{"classes/SourceExport.html":{}}}],["src/app/services/modelsexport/theaterexport.ts:48",{"_index":3365,"title":{},"body":{"classes/SourceExport.html":{}}}],["src/app/services/modelsexport/theaterexport.ts:49",{"_index":3366,"title":{},"body":{"classes/SourceExport.html":{}}}],["src/app/services/modelsexport/theaterexport.ts:52",{"_index":954,"title":{},"body":{"classes/ConsumerInterfaceLinkExport.html":{}}}],["src/app/services/modelsexport/theaterexport.ts:53",{"_index":955,"title":{},"body":{"classes/ConsumerInterfaceLinkExport.html":{}}}],["src/app/services/modelsexport/theaterexport.ts:54",{"_index":956,"title":{},"body":{"classes/ConsumerInterfaceLinkExport.html":{}}}],["src/app/services/modelsexport/theaterexport.ts:8",{"_index":3537,"title":{},"body":{"classes/TheaterExport.html":{}}}],["src/app/services/modelsexport/theaterexport.ts:9",{"_index":3534,"title":{},"body":{"classes/TheaterExport.html":{}}}],["src/app/services/modelsexport/typeexport.ts",{"_index":3805,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/services/token/token.service.ts",{"_index":3608,"title":{},"body":{"injectables/TokenService.html":{}}}],["src/app/services/token/token.service.ts:16",{"_index":3634,"title":{},"body":{"injectables/TokenService.html":{}}}],["src/app/services/token/token.service.ts:20",{"_index":3631,"title":{},"body":{"injectables/TokenService.html":{}}}],["src/app/services/token/token.service.ts:24",{"_index":3618,"title":{},"body":{"injectables/TokenService.html":{}}}],["src/app/services/token/token.service.ts:32",{"_index":3630,"title":{},"body":{"injectables/TokenService.html":{}}}],["src/app/services/token/token.service.ts:46",{"_index":3624,"title":{},"body":{"injectables/TokenService.html":{}}}],["src/app/services/token/token.service.ts:54",{"_index":3626,"title":{},"body":{"injectables/TokenService.html":{}}}],["src/app/services/token/token.service.ts:60",{"_index":3619,"title":{},"body":{"injectables/TokenService.html":{}}}],["src/app/services/token/token.service.ts:67",{"_index":3628,"title":{},"body":{"injectables/TokenService.html":{}}}],["src/app/services/token/token.service.ts:74",{"_index":3622,"title":{},"body":{"injectables/TokenService.html":{}}}],["src/app/utility/app.guard.ts",{"_index":632,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["src/app/utility/app.guard.ts:12",{"_index":635,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["src/app/utility/app.guard.ts:20",{"_index":640,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["src/app/utility/app.init.ts",{"_index":3845,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/visualizer",{"_index":3697,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["src/environments/environment",{"_index":305,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AttachmentsService.html":{},"injectables/FlavorService.html":{},"injectables/ModuleService.html":{},"injectables/ParseService.html":{},"injectables/TheaterService.html":{}}}],["ss",{"_index":3383,"title":{},"body":{"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{}}}],["sta",{"_index":1188,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["standard",{"_index":563,"title":{},"body":{"classes/AreaExport.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/SourceExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["standrard",{"_index":1783,"title":{},"body":{"injectables/ExportService.html":{}}}],["start",{"_index":2201,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["startapplication",{"_index":1986,"title":{},"body":{"components/HomeComponent.html":{}}}],["started",{"_index":3856,"title":{"index.html":{}},"body":{}}],["stata",{"_index":1994,"title":{},"body":{"components/HomeComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["state",{"_index":638,"title":{},"body":{"injectables/AuthGuard.html":{},"components/HomeComponent.html":{}}}],["state.url",{"_index":655,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["stati",{"_index":1674,"title":{},"body":{"classes/ExportModule.html":{}}}],["static",{"_index":1557,"title":{},"body":{"classes/EmptyNodeInfo.html":{}}}],["staticvalue",{"_index":1374,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"miscellaneous/enumerations.html":{}}}],["staticvalue.subnetoutput",{"_index":3011,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["statisticitemdto",{"_index":505,"title":{"classes/StatisticItemDTO.html":{}},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["statistics",{"_index":528,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["stato",{"_index":786,"title":{},"body":{"components/ComposerComponent.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"components/NavbarComponent.html":{},"components/OffcanvasComponent.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"components/VisualizerComponent.html":{}}}],["status",{"_index":516,"title":{},"body":{"classes/AreaDTO.html":{},"classes/BlueprintFileDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/NameMappingDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheatreStatusDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["stessi",{"_index":3132,"title":{},"body":{"classes/PerseDataForTheaterComposer.html":{}}}],["stesso",{"_index":3380,"title":{},"body":{"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{}}}],["storage",{"_index":845,"title":{},"body":{"components/ComposerComponent.html":{}}}],["storageservice",{"_index":745,"title":{"injectables/StorageService.html":{}},"body":{"components/ComposerComponent.html":{},"components/HomeComponent.html":{},"injectables/StorageService.html":{}}}],["storaging",{"_index":3401,"title":{},"body":{"injectables/StorageService.html":{}}}],["stored",{"_index":3883,"title":{},"body":{"index.html":{}}}],["string",{"_index":20,"title":{},"body":{"classes/Aoption.html":{},"components/AppComponent.html":{},"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"injectables/AttachmentsService.html":{},"classes/BlueprintFileDTO.html":{},"classes/BorderNetworkDTO.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"components/ControlTemplate.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputReturnedV2.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/DeployInstanceDTO.html":{},"components/DocsComponent.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"classes/FlavorApplication.html":{},"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"injectables/FlavorService.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"classes/HostModuleDTO.html":{},"classes/HostNode.html":{},"classes/HostPortModuleDTO.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModalButton.html":{},"classes/ModalItem.html":{},"injectables/ModalService.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"injectables/ModuleService.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"interfaces/ModuleTopology.html":{},"classes/NameMappingDTO.html":{},"components/NavbarComponent.html":{},"classes/NavbarElement.html":{},"classes/NavbarItem.html":{},"classes/NetOSRouterDTO.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkDTO.html":{},"classes/NetworkNode.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/NodeTopologyElement.html":{},"components/OffcanvasComponent.html":{},"classes/PageableDTO.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SelectOption.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/SingleDataInputReturned.html":{},"classes/SortDTO.html":{},"classes/SourceExport.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"classes/StatisticItemDTO.html":{},"classes/SubnetDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"components/TabnavComponent.html":{},"classes/TabnavElement.html":{},"classes/TabnavItem.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"injectables/TheaterService.html":{},"classes/TheaterSimpleData.html":{},"interfaces/TheaterTopology.html":{},"classes/TheatreStatusDTO.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/TypesCatalogueDTO.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{},"miscellaneous/functions.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["stringify",{"_index":602,"title":{},"body":{"injectables/AttachmentsService.html":{},"injectables/ExportService.html":{}}}],["string|number",{"_index":630,"title":{},"body":{"injectables/AttachmentsService.html":{}}}],["structural_parameters",{"_index":495,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["struttura",{"_index":406,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/FlavorApplication.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NetworkNode.html":{},"classes/NodeTopologyElement.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SimpleModuleApplication.html":{},"classes/SubnetNode.html":{},"classes/TheaterApplication.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"miscellaneous/functions.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["strutturare",{"_index":3093,"title":{},"body":{"classes/PerseDataForModuleVisualizer.html":{}}}],["style",{"_index":1274,"title":{},"body":{"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/NetworkComponent.html":{}}}],["styles",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["styleurls",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{}}}],["su",{"_index":1185,"title":{},"body":{"components/DataInputV2Component.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"classes/PerseDataForModuleVisualizer.html":{}}}],["sua",{"_index":1421,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"miscellaneous/enumerations.html":{}}}],["sub",{"_index":1701,"title":{},"body":{"classes/ExportModule.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["subject",{"_index":3373,"title":{},"body":{"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{}}}],["subjecttype",{"_index":818,"title":{},"body":{"components/ComposerComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"injectables/ExportService.html":{},"components/HomeComponent.html":{},"components/VisualizerComponent.html":{},"miscellaneous/enumerations.html":{}}}],["subjecttype.module",{"_index":811,"title":{},"body":{"components/ComposerComponent.html":{},"components/HomeComponent.html":{},"components/VisualizerComponent.html":{}}}],["subjecttype.module.tolowercase",{"_index":1797,"title":{},"body":{"injectables/ExportService.html":{}}}],["subjecttype.theater",{"_index":816,"title":{},"body":{"components/ComposerComponent.html":{},"components/HomeComponent.html":{},"components/VisualizerComponent.html":{}}}],["subjecttype.theater.tolowercase",{"_index":1805,"title":{},"body":{"injectables/ExportService.html":{}}}],["submit",{"_index":1054,"title":{},"body":{"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{}}}],["submitted",{"_index":1052,"title":{},"body":{"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{}}}],["subnet",{"_index":704,"title":{},"body":{"classes/BorderNetworkDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/EmptyNodeInfo.html":{},"classes/ExportModule.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetOSRouterDTO.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkDTO.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteSubnetInfo.html":{},"classes/SubnetDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["subnet.component",{"_index":3304,"title":{},"body":{"classes/ReteSubnetInfo.html":{},"classes/SubnetNode.html":{}}}],["subnet.component.html",{"_index":3416,"title":{},"body":{"components/SubnetComponent.html":{}}}],["subnet.component.sass",{"_index":3415,"title":{},"body":{"components/SubnetComponent.html":{}}}],["subnet.data.cidr",{"_index":1725,"title":{},"body":{"classes/ExportModule.html":{}}}],["subnet.data.isdhcp",{"_index":1726,"title":{},"body":{"classes/ExportModule.html":{}}}],["subnet.data.name",{"_index":1759,"title":{},"body":{"classes/ExportModule.html":{}}}],["subnet.data.output",{"_index":1728,"title":{},"body":{"classes/ExportModule.html":{}}}],["subnet.data.version",{"_index":1724,"title":{},"body":{"classes/ExportModule.html":{}}}],["subnet.name",{"_index":2992,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["subnet.network.name",{"_index":2994,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["subnet/subnetnode",{"_index":1566,"title":{},"body":{"classes/EmptyNodeInfo.html":{}}}],["subnet_name",{"_index":2991,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["subnet_number",{"_index":393,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/ReteConnection.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["subnetcomponent",{"_index":184,"title":{"components/SubnetComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"classes/ReteSubnetInfo.html":{},"components/SubnetComponent.html":{},"classes/SubnetNode.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"overview.html":{}}}],["subnetdto",{"_index":712,"title":{"classes/SubnetDTO.html":{}},"body":{"classes/BorderNetworkDTO.html":{},"classes/HostModuleDTO.html":{},"classes/HostPortModuleDTO.html":{},"classes/NetOSRouterDTO.html":{},"classes/NetworkDTO.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/SubnetDTO.html":{},"miscellaneous/functions.html":{}}}],["subnetexport",{"_index":934,"title":{"classes/SubnetExport.html":{}},"body":{"classes/ConstraintsMSD.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["subneticon",{"_index":2321,"title":{},"body":{"components/MirroringModuleInstanceComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"miscellaneous/enumerations.html":{}}}],["subneticon=subneticon",{"_index":2333,"title":{},"body":{"components/MirroringModuleInstanceComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["subnetlinkedtoport",{"_index":1705,"title":{},"body":{"classes/ExportModule.html":{}}}],["subnetlinkedtoport.data.name",{"_index":1709,"title":{},"body":{"classes/ExportModule.html":{}}}],["subnetlinkedtoport.outputs",{"_index":1711,"title":{},"body":{"classes/ExportModule.html":{}}}],["subnetlinkedtoport.outputs[key",{"_index":1713,"title":{},"body":{"classes/ExportModule.html":{}}}],["subnetnode",{"_index":1565,"title":{"classes/SubnetNode.html":{}},"body":{"classes/EmptyNodeInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/SubnetNode.html":{},"miscellaneous/functions.html":{}}}],["subnetoutput",{"_index":1375,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"miscellaneous/enumerations.html":{}}}],["subnetport",{"_index":1712,"title":{},"body":{"classes/ExportModule.html":{}}}],["subnetport.connections.foreach(c",{"_index":1715,"title":{},"body":{"classes/ExportModule.html":{}}}],["subnets",{"_index":933,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/ExportModule.html":{},"classes/HostModuleDTO.html":{},"classes/HostPortModuleDTO.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["subnetsimpledata",{"_index":918,"title":{"classes/SubnetSimpleData.html":{}},"body":{"classes/ConstraintsMSD.html":{},"classes/ExportModule.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["subnetsimpledata.relationships.push",{"_index":1729,"title":{},"body":{"classes/ExportModule.html":{}}}],["subnettypeexport",{"_index":912,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/ExportModule.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"miscellaneous/enumerations.html":{}}}],["subnettypeexport.subnet",{"_index":1723,"title":{},"body":{"classes/ExportModule.html":{}}}],["subscribe",{"_index":876,"title":{},"body":{"components/ComposerComponent.html":{},"injectables/ModalService.html":{}}}],["subscribe(data",{"_index":1492,"title":{},"body":{"components/DocsComponent.html":{}}}],["subscribe(el",{"_index":870,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["success",{"_index":2364,"title":{},"body":{"classes/ModalButton.html":{},"classes/ModalItem.html":{}}}],["suddivisione",{"_index":3452,"title":{},"body":{"components/TabnavComponent.html":{}}}],["sugli",{"_index":3121,"title":{},"body":{"classes/PerseDataForTheaterComposer.html":{}}}],["sui",{"_index":3099,"title":{},"body":{"classes/PerseDataForModuleVisualizer.html":{}}}],["sul",{"_index":1323,"title":{},"body":{"components/DataItemComponent.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["sulle",{"_index":1620,"title":{},"body":{"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["suo",{"_index":2253,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["suoi",{"_index":1291,"title":{},"body":{"components/DataItemComponent.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["super(enummoduletype.mirroringmoduleinstance",{"_index":2354,"title":{},"body":{"classes/MirroringModuleInstanceNode.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{}}}],["super(enummoduletype.theaterinternalservicemoduleinstance",{"_index":3317,"title":{},"body":{"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{}}}],["super(enummoduletype.theatermoduleinstance",{"_index":3321,"title":{},"body":{"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["super(enumnodetype.host",{"_index":2280,"title":{},"body":{"classes/HostNode.html":{},"classes/ReteHostInfo.html":{}}}],["super(enumnodetype.network",{"_index":2716,"title":{},"body":{"classes/NetworkNode.html":{},"classes/ReteNetworkInfo.html":{}}}],["super(enumnodetype.subnet",{"_index":3305,"title":{},"body":{"classes/ReteSubnetInfo.html":{},"classes/SubnetNode.html":{}}}],["super(key",{"_index":985,"title":{},"body":{"components/ControlTemplate.html":{},"classes/_Control.html":{}}}],["super(router",{"_index":644,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["super(service",{"_index":2165,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["support",{"_index":2049,"title":{},"body":{"components/HomeComponent.html":{}}}],["supporta",{"_index":2728,"title":{},"body":{"components/OffcanvasComponent.html":{},"modules.html":{}}}],["supportmachineid",{"_index":1937,"title":{},"body":{"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{}}}],["supporto",{"_index":1588,"title":{},"body":{"classes/ExportModule.html":{},"components/HomeComponent.html":{}}}],["supproted",{"_index":1917,"title":{},"body":{"injectables/FileService.html":{}}}],["sure",{"_index":2077,"title":{},"body":{"components/HomeComponent.html":{}}}],["svg",{"_index":3903,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":1232,"title":{},"body":{"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{}}}],["switchare",{"_index":724,"title":{},"body":{"components/ComposerComponent.html":{}}}],["sx",{"_index":2756,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["sysman.creo.nodes.automaticsystem",{"_index":1431,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"miscellaneous/enumerations.html":{}}}],["sysman.creo.nodes.border",{"_index":1432,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"miscellaneous/enumerations.html":{}}}],["sysman.creo.nodes.externalvirtualmachine",{"_index":1430,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"miscellaneous/enumerations.html":{}}}],["sysman.creo.nodes.mirroringmoduleinstance",{"_index":1427,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"miscellaneous/enumerations.html":{}}}],["sysman.creo.nodes.theater",{"_index":700,"title":{},"body":{"classes/BlueprintFileDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/NameMappingDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TheaterDTO.html":{},"classes/TheatreStatusDTO.html":{},"miscellaneous/enumerations.html":{}}}],["sysman.creo.nodes.theaterinternalservicemoduleinstance",{"_index":1428,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"miscellaneous/enumerations.html":{}}}],["sysman.creo.nodes.theatermoduleinstance",{"_index":1426,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"miscellaneous/enumerations.html":{}}}],["sysman.creo.nodes.theatremoduleinstance",{"_index":1435,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["sysman.creo.nodes.virtualservermoduleinstance",{"_index":1429,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"miscellaneous/enumerations.html":{}}}],["system",{"_index":882,"title":{},"body":{"components/ComposerComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"components/HomeComponent.html":{},"components/VisualizerComponent.html":{},"miscellaneous/enumerations.html":{}}}],["system/composer/composer.component",{"_index":262,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["system/composer/composer.component.ts",{"_index":720,"title":{},"body":{"components/ComposerComponent.html":{}}}],["system/composer/composer.component.ts:118",{"_index":775,"title":{},"body":{"components/ComposerComponent.html":{}}}],["system/composer/composer.component.ts:140",{"_index":758,"title":{},"body":{"components/ComposerComponent.html":{}}}],["system/composer/composer.component.ts:170",{"_index":772,"title":{},"body":{"components/ComposerComponent.html":{}}}],["system/composer/composer.component.ts:198",{"_index":752,"title":{},"body":{"components/ComposerComponent.html":{}}}],["system/composer/composer.component.ts:25",{"_index":794,"title":{},"body":{"components/ComposerComponent.html":{}}}],["system/composer/composer.component.ts:27",{"_index":815,"title":{},"body":{"components/ComposerComponent.html":{}}}],["system/composer/composer.component.ts:28",{"_index":796,"title":{},"body":{"components/ComposerComponent.html":{}}}],["system/composer/composer.component.ts:29",{"_index":790,"title":{},"body":{"components/ComposerComponent.html":{}}}],["system/composer/composer.component.ts:30",{"_index":819,"title":{},"body":{"components/ComposerComponent.html":{}}}],["system/composer/composer.component.ts:32",{"_index":812,"title":{},"body":{"components/ComposerComponent.html":{}}}],["system/composer/composer.component.ts:33",{"_index":817,"title":{},"body":{"components/ComposerComponent.html":{}}}],["system/composer/composer.component.ts:40",{"_index":808,"title":{},"body":{"components/ComposerComponent.html":{}}}],["system/composer/composer.component.ts:47",{"_index":783,"title":{},"body":{"components/ComposerComponent.html":{}}}],["system/composer/composer.component.ts:54",{"_index":797,"title":{},"body":{"components/ComposerComponent.html":{}}}],["system/composer/composer.component.ts:61",{"_index":813,"title":{},"body":{"components/ComposerComponent.html":{}}}],["system/composer/composer.component.ts:67",{"_index":801,"title":{},"body":{"components/ComposerComponent.html":{}}}],["system/composer/composer.component.ts:74",{"_index":746,"title":{},"body":{"components/ComposerComponent.html":{}}}],["system/rete",{"_index":248,"title":{},"body":{"modules/AppModule.html":{}}}],["system/visualizer/visualizer.component",{"_index":261,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["system/visualizer/visualizer.component.ts",{"_index":3698,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["system/visualizer/visualizer.component.ts:110",{"_index":3703,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["system/visualizer/visualizer.component.ts:135",{"_index":3705,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["system/visualizer/visualizer.component.ts:156",{"_index":3702,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["system/visualizer/visualizer.component.ts:23",{"_index":3708,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["system/visualizer/visualizer.component.ts:25",{"_index":3710,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["system/visualizer/visualizer.component.ts:26",{"_index":3716,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["system/visualizer/visualizer.component.ts:29",{"_index":3714,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["system/visualizer/visualizer.component.ts:30",{"_index":3715,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["system/visualizer/visualizer.component.ts:38",{"_index":3709,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["system/visualizer/visualizer.component.ts:45",{"_index":3707,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["system/visualizer/visualizer.component.ts:52",{"_index":3711,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["system/visualizer/visualizer.component.ts:59",{"_index":3701,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["system/visualizer/visualizer.component.ts:90",{"_index":3706,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["t",{"_index":865,"title":{},"body":{"components/ComposerComponent.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["t.name",{"_index":1883,"title":{},"body":{"classes/ExportTheater.html":{}}}],["tab",{"_index":2777,"title":{},"body":{"components/OffcanvasComponent.html":{},"components/TabnavComponent.html":{},"classes/TabnavElement.html":{},"classes/TabnavItem.html":{}}}],["tabnav",{"_index":3453,"title":{},"body":{"components/TabnavComponent.html":{}}}],["tabnav'},{'name",{"_index":186,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["tabnav.component.html",{"_index":3455,"title":{},"body":{"components/TabnavComponent.html":{}}}],["tabnav.component.sass",{"_index":3454,"title":{},"body":{"components/TabnavComponent.html":{}}}],["tabnavcomponent",{"_index":185,"title":{"components/TabnavComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"classes/TabnavElement.html":{},"classes/TabnavItem.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"overview.html":{}}}],["tabnavelement",{"_index":3460,"title":{"classes/TabnavElement.html":{}},"body":{"components/TabnavComponent.html":{},"classes/TabnavElement.html":{},"classes/TabnavItem.html":{}}}],["tabnavitem",{"_index":3479,"title":{"classes/TabnavItem.html":{}},"body":{"classes/TabnavElement.html":{},"classes/TabnavItem.html":{}}}],["tabnavtype",{"_index":3471,"title":{},"body":{"components/TabnavComponent.html":{}}}],["tag",{"_index":13,"title":{},"body":{"classes/Aoption.html":{},"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"classes/GenericParameterDTO.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"classes/NavbarElement.html":{},"classes/NavbarItem.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/SourceExport.html":{},"classes/StatisticItemDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheaterSimpleData.html":{},"classes/TypesCatalogueDTO.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["tagcataloguedto",{"_index":678,"title":{"classes/TagCatalogueDTO.html":{}},"body":{"classes/BlueprintFileDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/NameMappingDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheatreStatusDTO.html":{}}}],["tags",{"_index":529,"title":{},"body":{"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"classes/BlueprintFileDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/DeployInstanceDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/ExportTheater.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/NameMappingDTO.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesTSD.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/SourceExport.html":{},"classes/StatisticItemDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheaterSimpleData.html":{},"classes/TheatreStatusDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["tagsexport",{"_index":571,"title":{"classes/TagsExport.html":{}},"body":{"classes/AreaExport.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesTSD.html":{},"classes/SourceExport.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{}}}],["tagtip",{"_index":539,"title":{"classes/TagTIP.html":{}},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["take(2",{"_index":2434,"title":{},"body":{"injectables/ModalService.html":{}}}],["tale",{"_index":1969,"title":{},"body":{"components/HomeComponent.html":{}}}],["target",{"_index":941,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/ExportModule.html":{},"components/HostComponent.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"components/NetworkComponent.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"components/SubnetComponent.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["tasto",{"_index":1324,"title":{},"body":{"components/DataItemComponent.html":{}}}],["te",{"_index":1848,"title":{},"body":{"classes/ExportTheater.html":{}}}],["te.description",{"_index":1850,"title":{},"body":{"classes/ExportTheater.html":{}}}],["te.imports",{"_index":1852,"title":{},"body":{"classes/ExportTheater.html":{}}}],["te.node_templates",{"_index":1856,"title":{},"body":{"classes/ExportTheater.html":{}}}],["te.tosca_definitions_version",{"_index":1849,"title":{},"body":{"classes/ExportTheater.html":{}}}],["teatre",{"_index":1452,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["teatri",{"_index":432,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["teatro",{"_index":435,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaExport.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"classes/FlavorApplication.html":{},"components/HomeComponent.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceSimpleData.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesTSD.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/SourceExport.html":{},"classes/TagsExport.html":{},"classes/TheaterApplication.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"components/VisualizerComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["template",{"_index":52,"title":{},"body":{"classes/Aoption.html":{},"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/ModalButton.html":{},"components/ModalComponent.html":{},"classes/ModalItem.html":{},"components/NavbarComponent.html":{},"classes/NavbarElement.html":{},"components/NavbarElementComponent.html":{},"classes/NavbarItem.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"classes/TabnavElement.html":{},"classes/TabnavItem.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{},"components/VisualizerComponent.html":{}}}],["template_title",{"_index":36,"title":{},"body":{"classes/Aoption.html":{},"classes/NavbarElement.html":{},"classes/NavbarItem.html":{}}}],["templateref",{"_index":25,"title":{},"body":{"classes/Aoption.html":{},"components/HomeComponent.html":{},"classes/ModalButton.html":{},"classes/ModalItem.html":{},"classes/NavbarElement.html":{},"classes/NavbarItem.html":{},"components/OffcanvasComponent.html":{},"classes/TabnavElement.html":{},"classes/TabnavItem.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{}}}],["templates",{"_index":1670,"title":{},"body":{"classes/ExportModule.html":{}}}],["templateurl",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{}}}],["termini",{"_index":1419,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"miscellaneous/enumerations.html":{}}}],["test",{"_index":3892,"title":{},"body":{"index.html":{}}}],["tests",{"_index":3891,"title":{},"body":{"index.html":{}}}],["testuale",{"_index":1394,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"miscellaneous/enumerations.html":{}}}],["text",{"_index":50,"title":{},"body":{"classes/Aoption.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/ModalButton.html":{},"classes/ModalItem.html":{},"injectables/ModalService.html":{},"classes/NavbarElement.html":{},"classes/NavbarItem.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"classes/TabnavElement.html":{},"classes/TabnavItem.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["text/html",{"_index":1490,"title":{},"body":{"components/DocsComponent.html":{}}}],["text_content",{"_index":2367,"title":{},"body":{"classes/ModalButton.html":{},"classes/ModalItem.html":{},"injectables/ModalService.html":{}}}],["textarea",{"_index":1025,"title":{},"body":{"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"components/HomeComponent.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{},"miscellaneous/enumerations.html":{}}}],["textspinner",{"_index":79,"title":{},"body":{"components/AppComponent.html":{}}}],["theater",{"_index":39,"title":{},"body":{"classes/Aoption.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/ElementIntoTheaterDTO.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"classes/FlavorApplication.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"interfaces/ModuleTopology.html":{},"components/NavbarComponent.html":{},"classes/NavbarElement.html":{},"components/NavbarElementComponent.html":{},"classes/NavbarItem.html":{},"components/NetworkComponent.html":{},"classes/NodeTopologyElement.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/ReteConnection.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"classes/TagTIP.html":{},"classes/TheaterApplication.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/TypesCatalogueDTO.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["theater.service",{"_index":601,"title":{},"body":{"injectables/AttachmentsService.html":{}}}],["theater.topology",{"_index":2904,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["theater_id",{"_index":598,"title":{},"body":{"injectables/AttachmentsService.html":{},"injectables/TheaterService.html":{}}}],["theater_uuid",{"_index":2602,"title":{},"body":{"injectables/ModuleService.html":{},"injectables/TheaterService.html":{}}}],["theaterapplication",{"_index":450,"title":{"classes/TheaterApplication.html":{}},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"components/VisualizerComponent.html":{},"miscellaneous/functions.html":{}}}],["theatercomposer",{"_index":773,"title":{},"body":{"components/ComposerComponent.html":{}}}],["theaterdesigner/tddata",{"_index":3047,"title":{},"body":{"injectables/ParseService.html":{}}}],["theaterdto",{"_index":360,"title":{"classes/TheaterDTO.html":{}},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"classes/BlueprintFileDTO.html":{},"interfaces/CommonModule.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/FlavorApplication.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"interfaces/ModuleTopology.html":{},"classes/NameMappingDTO.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/ReteConnection.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"injectables/TheaterService.html":{},"interfaces/TheaterTopology.html":{},"classes/TheatreStatusDTO.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/TypesCatalogueDTO.html":{}}}],["theaterdto:39",{"_index":3494,"title":{},"body":{"classes/TheaterApplication.html":{}}}],["theaterdto:40",{"_index":3495,"title":{},"body":{"classes/TheaterApplication.html":{}}}],["theaterdto:41",{"_index":3496,"title":{},"body":{"classes/TheaterApplication.html":{}}}],["theaterdto:42",{"_index":3497,"title":{},"body":{"classes/TheaterApplication.html":{}}}],["theaterdto:43",{"_index":3498,"title":{},"body":{"classes/TheaterApplication.html":{}}}],["theaterdto:44",{"_index":3499,"title":{},"body":{"classes/TheaterApplication.html":{}}}],["theaterdto:45",{"_index":3500,"title":{},"body":{"classes/TheaterApplication.html":{}}}],["theaterdto:46",{"_index":3501,"title":{},"body":{"classes/TheaterApplication.html":{}}}],["theaterdto:47",{"_index":3502,"title":{},"body":{"classes/TheaterApplication.html":{}}}],["theaterdto:48",{"_index":3503,"title":{},"body":{"classes/TheaterApplication.html":{}}}],["theaterdto:49",{"_index":3504,"title":{},"body":{"classes/TheaterApplication.html":{}}}],["theaterdto:50",{"_index":3505,"title":{},"body":{"classes/TheaterApplication.html":{}}}],["theaterdto:51",{"_index":3506,"title":{},"body":{"classes/TheaterApplication.html":{}}}],["theaterdto:52",{"_index":3507,"title":{},"body":{"classes/TheaterApplication.html":{}}}],["theaterdto:53",{"_index":3508,"title":{},"body":{"classes/TheaterApplication.html":{}}}],["theaterdto:54",{"_index":3509,"title":{},"body":{"classes/TheaterApplication.html":{}}}],["theaterdto:55",{"_index":3510,"title":{},"body":{"classes/TheaterApplication.html":{}}}],["theaterdto:56",{"_index":3511,"title":{},"body":{"classes/TheaterApplication.html":{}}}],["theaterdto:57",{"_index":3512,"title":{},"body":{"classes/TheaterApplication.html":{}}}],["theaterdto:58",{"_index":3513,"title":{},"body":{"classes/TheaterApplication.html":{}}}],["theaterexport",{"_index":565,"title":{"classes/TheaterExport.html":{}},"body":{"classes/AreaExport.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesTSD.html":{},"classes/SourceExport.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{}}}],["theaterinstancedto",{"_index":546,"title":{"classes/TheaterInstanceDTO.html":{}},"body":{"classes/AreaDTO.html":{},"classes/BlueprintFileDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/NameMappingDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterDTO.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheatreStatusDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["theaterinstancepropertiesdto",{"_index":383,"title":{"classes/TheaterInstancePropertiesDTO.html":{}},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"interfaces/CommonModule.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/FlavorApplication.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/ReteConnection.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterApplication.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/TypesCatalogueDTO.html":{}}}],["theaterinternalservicemoduleinstance",{"_index":1402,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/EmptyModuleInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"miscellaneous/enumerations.html":{}}}],["theaterinternalservicemoduleinstance.component",{"_index":3316,"title":{},"body":{"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{}}}],["theaterinternalservicemoduleinstance.component.html",{"_index":3548,"title":{},"body":{"components/TheaterInternalServiceModuleInstanceComponent.html":{}}}],["theaterinternalservicemoduleinstance.component.sass",{"_index":3547,"title":{},"body":{"components/TheaterInternalServiceModuleInstanceComponent.html":{}}}],["theaterinternalservicemoduleinstance/theaterinternalservicemoduleinstancenode",{"_index":1533,"title":{},"body":{"classes/EmptyModuleInfo.html":{}}}],["theaterinternalservicemoduleinstance_icon",{"_index":3559,"title":{},"body":{"components/TheaterInternalServiceModuleInstanceComponent.html":{},"miscellaneous/enumerations.html":{}}}],["theaterinternalservicemoduleinstancecomponent",{"_index":187,"title":{"components/TheaterInternalServiceModuleInstanceComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"overview.html":{}}}],["theaterinternalservicemoduleinstanceicon",{"_index":3549,"title":{},"body":{"components/TheaterInternalServiceModuleInstanceComponent.html":{}}}],["theaterinternalservicemoduleinstancenode",{"_index":1532,"title":{"classes/TheaterInternalServiceModuleInstanceNode.html":{}},"body":{"classes/EmptyModuleInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"miscellaneous/functions.html":{}}}],["theatermoduleinstance",{"_index":1399,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/EmptyModuleInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/TheaterModuleInstanceNode.html":{},"miscellaneous/enumerations.html":{}}}],["theatermoduleinstance.component",{"_index":3320,"title":{},"body":{"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["theatermoduleinstance.component.html",{"_index":3571,"title":{},"body":{"components/TheaterModuleInstanceComponent.html":{}}}],["theatermoduleinstance.component.sass",{"_index":3570,"title":{},"body":{"components/TheaterModuleInstanceComponent.html":{}}}],["theatermoduleinstance/theatermoduleinstancenode",{"_index":1535,"title":{},"body":{"classes/EmptyModuleInfo.html":{}}}],["theatermoduleinstance_icon",{"_index":3582,"title":{},"body":{"components/TheaterModuleInstanceComponent.html":{},"miscellaneous/enumerations.html":{}}}],["theatermoduleinstancecomponent",{"_index":188,"title":{"components/TheaterModuleInstanceComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"overview.html":{}}}],["theatermoduleinstanceicon",{"_index":3572,"title":{},"body":{"components/TheaterModuleInstanceComponent.html":{}}}],["theatermoduleinstancenode",{"_index":1534,"title":{"classes/TheaterModuleInstanceNode.html":{}},"body":{"classes/EmptyModuleInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/TheaterModuleInstanceNode.html":{},"miscellaneous/functions.html":{}}}],["theaterproperties",{"_index":2910,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["theaterservice",{"_index":208,"title":{"injectables/TheaterService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AttachmentsService.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"injectables/TheaterService.html":{},"overview.html":{}}}],["theatersimpledata",{"_index":568,"title":{"classes/TheaterSimpleData.html":{}},"body":{"classes/AreaExport.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/ExportTheater.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesTSD.html":{},"classes/SourceExport.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{}}}],["theatersimpledata.properties.areas.push",{"_index":1878,"title":{},"body":{"classes/ExportTheater.html":{}}}],["theatersimpledata.properties.tags.push",{"_index":1882,"title":{},"body":{"classes/ExportTheater.html":{}}}],["theatertopology",{"_index":449,"title":{"interfaces/TheaterTopology.html":{}},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["theatertype",{"_index":699,"title":{},"body":{"classes/BlueprintFileDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"injectables/ExportService.html":{},"classes/NameMappingDTO.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/TagCatalogueDTO.html":{},"classes/TheaterDTO.html":{},"classes/TheatreStatusDTO.html":{}}}],["theatertype=\".\"+subjecttype.theater.tolowercase",{"_index":1810,"title":{},"body":{"injectables/ExportService.html":{}}}],["theatertypeexport",{"_index":553,"title":{},"body":{"classes/AreaExport.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/ExportTheater.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesTSD.html":{},"classes/SourceExport.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{},"miscellaneous/enumerations.html":{}}}],["theatertypeexport.theater",{"_index":1874,"title":{},"body":{"classes/ExportTheater.html":{}}}],["theateruuid",{"_index":2878,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["theatervisualizer",{"_index":3704,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["theatervisualizer/tvdata",{"_index":3044,"title":{},"body":{"injectables/ParseService.html":{}}}],["theatre",{"_index":1446,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"miscellaneous/enumerations.html":{}}}],["theatremoduleinstance",{"_index":1401,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/EmptyModuleInfo.html":{}}}],["theatrestatusdto",{"_index":679,"title":{"classes/TheatreStatusDTO.html":{}},"body":{"classes/BlueprintFileDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/NameMappingDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheatreStatusDTO.html":{}}}],["then((v",{"_index":2071,"title":{},"body":{"components/HomeComponent.html":{}}}],["this._data",{"_index":3413,"title":{},"body":{"injectables/StorageService.html":{}}}],["this._show",{"_index":2404,"title":{},"body":{"components/ModalComponent.html":{},"components/OffcanvasComponent.html":{}}}],["this._value",{"_index":1247,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["this.active",{"_index":872,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["this.active(this.element.element[0].id",{"_index":3474,"title":{},"body":{"components/TabnavComponent.html":{}}}],["this.activetab",{"_index":3475,"title":{},"body":{"components/TabnavComponent.html":{}}}],["this.authenticated",{"_index":650,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["this.author",{"_index":838,"title":{},"body":{"components/ComposerComponent.html":{},"components/HomeComponent.html":{}}}],["this.branch",{"_index":2051,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.cdr.detectchanges",{"_index":131,"title":{},"body":{"components/AppComponent.html":{},"components/DataInputComponent.html":{},"components/DataItemComponent.html":{},"components/OffcanvasComponent.html":{},"components/TabnavComponent.html":{}}}],["this.compodoc_index_html",{"_index":1493,"title":{},"body":{"components/DocsComponent.html":{}}}],["this.component",{"_index":986,"title":{},"body":{"components/ControlTemplate.html":{},"classes/_Control.html":{}}}],["this.components",{"_index":3241,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["this.container",{"_index":3239,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["this.createnewnode(node",{"_index":2284,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["this.data",{"_index":848,"title":{},"body":{"components/ComposerComponent.html":{}}}],["this.data.component",{"_index":2282,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["this.data.render",{"_index":2281,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["this.data.topology.elements",{"_index":866,"title":{},"body":{"components/ComposerComponent.html":{}}}],["this.data_input_template",{"_index":2056,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.dataeditor",{"_index":1647,"title":{},"body":{"classes/ExportModule.html":{},"classes/ExportTheater.html":{}}}],["this.dataeditor.nodes",{"_index":1656,"title":{},"body":{"classes/ExportModule.html":{},"classes/ExportTheater.html":{}}}],["this.dataeditor.nodes[c.node",{"_index":1706,"title":{},"body":{"classes/ExportModule.html":{},"classes/ExportTheater.html":{}}}],["this.dataeditor.nodes[key",{"_index":1657,"title":{},"body":{"classes/ExportModule.html":{},"classes/ExportTheater.html":{}}}],["this.dataform",{"_index":1112,"title":{},"body":{"components/DataInputComponent.html":{}}}],["this.dataform.addcontrol(e.id",{"_index":1115,"title":{},"body":{"components/DataInputComponent.html":{}}}],["this.datafromrouter",{"_index":832,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["this.datafromrouter.author",{"_index":839,"title":{},"body":{"components/ComposerComponent.html":{}}}],["this.datafromrouter.description",{"_index":837,"title":{},"body":{"components/ComposerComponent.html":{}}}],["this.datafromrouter.id",{"_index":3717,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.datafromrouter.name",{"_index":835,"title":{},"body":{"components/ComposerComponent.html":{}}}],["this.datafromrouter.type",{"_index":841,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["this.datainputelement",{"_index":1258,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["this.datainputelement.element",{"_index":1256,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["this.datamodal",{"_index":2055,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.datasubmitted.emit(val",{"_index":1128,"title":{},"body":{"components/DataInputComponent.html":{}}}],["this.description",{"_index":836,"title":{},"body":{"components/ComposerComponent.html":{},"components/HomeComponent.html":{}}}],["this.directchange",{"_index":1242,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["this.editor",{"_index":3240,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["this.editor.nodes",{"_index":3258,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["this.editor.tojson",{"_index":3260,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["this.editor.trigger(\"redo",{"_index":3255,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["this.editor.trigger(\"undo",{"_index":3253,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["this.editor.use(angularrenderplugin",{"_index":3244,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["this.editor.use(areaplugin",{"_index":3265,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["this.editor.use(autoarrangeplugin",{"_index":3274,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["this.editor.use(connectionplugin",{"_index":3243,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["this.editor.use(contextmenuplugin",{"_index":3249,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["this.editor.use(historyplugin",{"_index":3247,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["this.editor.use(minimapplugin",{"_index":3246,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["this.element",{"_index":3667,"title":{},"body":{"components/UnderbarComponent.html":{}}}],["this.element.element.foreach",{"_index":1118,"title":{},"body":{"components/DataInputComponent.html":{},"components/NavbarComponent.html":{}}}],["this.element.element.foreach(e",{"_index":1113,"title":{},"body":{"components/DataInputComponent.html":{}}}],["this.element.element.length",{"_index":3473,"title":{},"body":{"components/TabnavComponent.html":{}}}],["this.element.foreach",{"_index":3668,"title":{},"body":{"components/UnderbarComponent.html":{}}}],["this.emitter.trigger('process",{"_index":992,"title":{},"body":{"components/ControlTemplate.html":{},"classes/_Control.html":{}}}],["this.engine",{"_index":3242,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["this.exporttojson(module.name+this.moduletype",{"_index":1815,"title":{},"body":{"injectables/ExportService.html":{}}}],["this.exporttojson(theater.name+this.theatertype",{"_index":1819,"title":{},"body":{"injectables/ExportService.html":{}}}],["this.exporttoyaml(module.name",{"_index":1814,"title":{},"body":{"injectables/ExportService.html":{}}}],["this.exporttoyaml(theater.name",{"_index":1818,"title":{},"body":{"injectables/ExportService.html":{}}}],["this.filejson",{"_index":2072,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.fileloaded",{"_index":2073,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.fileservice.onfileselected(event",{"_index":2070,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.findnode(i.network.name",{"_index":1753,"title":{},"body":{"classes/ExportModule.html":{}}}],["this.fixtheatername(rowtheater",{"_index":2909,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["this.flavor",{"_index":871,"title":{},"body":{"components/ComposerComponent.html":{}}}],["this.flavorservice.getallflavor",{"_index":3064,"title":{},"body":{"classes/PerseDataForModuleComposer.html":{}}}],["this.formelementcomposer",{"_index":2053,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.formelementmodal",{"_index":2052,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.formelementvisualizer",{"_index":2054,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.formtype",{"_index":1257,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["this.get_and_remove_theater_properties_from_blueprint(rowtheater",{"_index":2911,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["this.getcheckbox",{"_index":1260,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["this.gethostexport(element",{"_index":1661,"title":{},"body":{"classes/ExportModule.html":{}}}],["this.getmainmoduledetails(module",{"_index":3105,"title":{},"body":{"classes/PerseDataForModuleVisualizer.html":{}}}],["this.getmainmoduleinterfaces(module",{"_index":3108,"title":{},"body":{"classes/PerseDataForModuleVisualizer.html":{}}}],["this.getmainmodulenodes(module",{"_index":3107,"title":{},"body":{"classes/PerseDataForModuleVisualizer.html":{}}}],["this.getmainmoduletopology(parsedmodule",{"_index":3106,"title":{},"body":{"classes/PerseDataForModuleVisualizer.html":{}}}],["this.getmodal",{"_index":2486,"title":{},"body":{"injectables/ModalService.html":{}}}],["this.getmoduleconnection(theater",{"_index":2905,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["this.getmoduledict(rowmodules",{"_index":2932,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["this.getmoduleexport",{"_index":1678,"title":{},"body":{"classes/ExportModule.html":{}}}],["this.getmoduleinstanceexport(element",{"_index":1854,"title":{},"body":{"classes/ExportTheater.html":{}}}],["this.getmodulesdetails(modules",{"_index":2936,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["this.getmodulesinterfaces(modules",{"_index":2941,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["this.getmodulesnodes(modules",{"_index":2940,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["this.getmodulestopology(modules",{"_index":2933,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["this.getnetworkexport(element",{"_index":1665,"title":{},"body":{"classes/ExportModule.html":{}}}],["this.getselection",{"_index":1262,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["this.getsubnetexport(element",{"_index":1663,"title":{},"body":{"classes/ExportModule.html":{}}}],["this.gettext",{"_index":1259,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["this.gettheaterexport",{"_index":1855,"title":{},"body":{"classes/ExportTheater.html":{}}}],["this.hasfile",{"_index":847,"title":{},"body":{"components/ComposerComponent.html":{}}}],["this.hasmultipletag",{"_index":3472,"title":{},"body":{"components/TabnavComponent.html":{}}}],["this.hasproblem",{"_index":853,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["this.headers",{"_index":3636,"title":{},"body":{"injectables/TokenService.html":{}}}],["this.http.get",{"_index":1955,"title":{},"body":{"injectables/FlavorService.html":{},"injectables/ModuleService.html":{},"injectables/TheaterService.html":{}}}],["this.http.get('assets/documentation/index.html",{"_index":1491,"title":{},"body":{"components/DocsComponent.html":{}}}],["this.http.get(link",{"_index":611,"title":{},"body":{"injectables/AttachmentsService.html":{}}}],["this.httpgetoption",{"_index":3640,"title":{},"body":{"injectables/TokenService.html":{}}}],["this.id",{"_index":2063,"title":{},"body":{"components/HomeComponent.html":{},"components/VisualizerComponent.html":{}}}],["this.idforchanges",{"_index":1245,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["this.initemptymoduleinstance(modules",{"_index":3135,"title":{},"body":{"classes/PerseDataForTheaterComposer.html":{}}}],["this.initmodule",{"_index":855,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["this.inittheater",{"_index":857,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["this.inittheaterafterfetch(rowtheater",{"_index":2908,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["this.isfull",{"_index":1335,"title":{},"body":{"components/DataItemComponent.html":{},"components/OffcanvasComponent.html":{}}}],["this.ismodalactive",{"_index":2061,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.itemselected.emit(event",{"_index":3673,"title":{},"body":{"components/UnderbarComponent.html":{}}}],["this.itemselected.emit(val",{"_index":2651,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.keycloak.login",{"_index":652,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["this.mocked",{"_index":3049,"title":{},"body":{"injectables/ParseService.html":{}}}],["this.modal.modaldata.asobservable().subscribe(v",{"_index":132,"title":{},"body":{"components/AppComponent.html":{}}}],["this.modal.show.asobservable().subscribe(v",{"_index":135,"title":{},"body":{"components/AppComponent.html":{}}}],["this.modaldata",{"_index":133,"title":{},"body":{"components/AppComponent.html":{}}}],["this.modaldata.next(modalitem",{"_index":2475,"title":{},"body":{"injectables/ModalService.html":{}}}],["this.module",{"_index":854,"title":{},"body":{"components/ComposerComponent.html":{},"classes/ExportModule.html":{},"components/VisualizerComponent.html":{}}}],["this.module.description",{"_index":1651,"title":{},"body":{"classes/ExportModule.html":{}}}],["this.module.imports",{"_index":1653,"title":{},"body":{"classes/ExportModule.html":{}}}],["this.module.interfaces.foreach(i",{"_index":1742,"title":{},"body":{"classes/ExportModule.html":{}}}],["this.module.version",{"_index":1737,"title":{},"body":{"classes/ExportModule.html":{}}}],["this.modulesdict",{"_index":877,"title":{},"body":{"components/ComposerComponent.html":{}}}],["this.moduleservice).parsetheaterfortheatervisualizer(id",{"_index":3052,"title":{},"body":{"injectables/ParseService.html":{}}}],["this.moduleservice.getallmodules",{"_index":3136,"title":{},"body":{"classes/PerseDataForTheaterComposer.html":{}}}],["this.moduleservice.getmodulebyid(id",{"_index":3103,"title":{},"body":{"classes/PerseDataForModuleVisualizer.html":{}}}],["this.moduleservice.getmodulehostbytheateruuid(module.uuid",{"_index":3110,"title":{},"body":{"classes/PerseDataForModuleVisualizer.html":{}}}],["this.moduleservice.getmodulehostbytheateruuid(simplemoduledto.uuid",{"_index":2947,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["this.moduleservice.getmoduleinterfacesbymoduleid(module.id",{"_index":3111,"title":{},"body":{"classes/PerseDataForModuleVisualizer.html":{}}}],["this.moduleservice.getmoduleinterfacesbymoduleid(simplemoduledto.id",{"_index":2949,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["this.mounted",{"_index":975,"title":{},"body":{"components/ControlTemplate.html":{},"classes/_Control.html":{}}}],["this.name",{"_index":834,"title":{},"body":{"components/ComposerComponent.html":{},"components/HomeComponent.html":{}}}],["this.onbuttonpressed.emit(val",{"_index":2407,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.onchange(v",{"_index":988,"title":{},"body":{"components/ControlTemplate.html":{},"classes/_Control.html":{}}}],["this.onchange.emit",{"_index":1244,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["this.onremove.emit(null",{"_index":1336,"title":{},"body":{"components/DataItemComponent.html":{}}}],["this.parseflavor(flavordto",{"_index":3065,"title":{},"body":{"classes/PerseDataForModuleComposer.html":{}}}],["this.parsemainmodule(id",{"_index":3102,"title":{},"body":{"classes/PerseDataForModuleVisualizer.html":{}}}],["this.parsemoduleinstance(theater",{"_index":2903,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["this.parsemodulelist",{"_index":3134,"title":{},"body":{"classes/PerseDataForTheaterComposer.html":{}}}],["this.parsemodulesfromtheater(theater.uuid",{"_index":2899,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["this.parseservice.parseflavorformodulecomposer",{"_index":869,"title":{},"body":{"components/ComposerComponent.html":{}}}],["this.parseservice.parsemoduleformodulevisualizer(this.id",{"_index":3718,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.parseservice.parsemodulefortheatercomposer",{"_index":875,"title":{},"body":{"components/ComposerComponent.html":{}}}],["this.parseservice.parsetheaterfortheatervisualizer(this.id",{"_index":3720,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.parsetheater(id",{"_index":2898,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["this.props",{"_index":987,"title":{},"body":{"components/ControlTemplate.html":{},"classes/_Control.html":{}}}],["this.props.value",{"_index":994,"title":{},"body":{"components/ControlTemplate.html":{},"classes/_Control.html":{}}}],["this.putdata(this.key",{"_index":996,"title":{},"body":{"components/ControlTemplate.html":{},"classes/_Control.html":{}}}],["this.required",{"_index":1266,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["this.returnoutput(event",{"_index":1127,"title":{},"body":{"components/DataInputComponent.html":{}}}],["this.roles.includes(role",{"_index":670,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["this.router.getcurrentnavigation().extras.state",{"_index":833,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["this.router.navigate(['/home",{"_index":878,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["this.router.navigatebyurl",{"_index":2069,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.sanitizer.bypasssecuritytrusthtml(data",{"_index":1494,"title":{},"body":{"components/DocsComponent.html":{}}}],["this.selectedfile",{"_index":1906,"title":{},"body":{"injectables/FileService.html":{}}}],["this.selectoption",{"_index":1261,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["this.selectoption.findindex((el",{"_index":1268,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["this.setconfirmationmodal",{"_index":2468,"title":{},"body":{"injectables/ModalService.html":{}}}],["this.setconfirmationmodal(text_content",{"_index":2485,"title":{},"body":{"injectables/ModalService.html":{}}}],["this.setspinner(false",{"_index":3384,"title":{},"body":{"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{}}}],["this.setvalue(+(this.getdata(key",{"_index":989,"title":{},"body":{"components/ControlTemplate.html":{},"classes/_Control.html":{}}}],["this.setvalue(val",{"_index":991,"title":{},"body":{"components/ControlTemplate.html":{},"classes/_Control.html":{}}}],["this.show",{"_index":2772,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["this.show.next(false",{"_index":2484,"title":{},"body":{"injectables/ModalService.html":{}}}],["this.show.next(true",{"_index":2476,"title":{},"body":{"injectables/ModalService.html":{}}}],["this.show=false",{"_index":2405,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.show=true",{"_index":2406,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.showchange.emit(val",{"_index":2403,"title":{},"body":{"components/ModalComponent.html":{},"components/OffcanvasComponent.html":{}}}],["this.showmodal",{"_index":136,"title":{},"body":{"components/AppComponent.html":{}}}],["this.showports",{"_index":2166,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["this.showspinner",{"_index":127,"title":{},"body":{"components/AppComponent.html":{}}}],["this.spinner",{"_index":123,"title":{},"body":{"components/AppComponent.html":{}}}],["this.spinner.subscribe",{"_index":125,"title":{},"body":{"components/AppComponent.html":{}}}],["this.spinnerdata.asobservable",{"_index":3387,"title":{},"body":{"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{}}}],["this.spinnerdata.next",{"_index":3389,"title":{},"body":{"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{}}}],["this.spinnerservice.setspinner(false",{"_index":868,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["this.spinnerservice.setspinner(true",{"_index":858,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["this.ss.hide",{"_index":3391,"title":{},"body":{"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{}}}],["this.ss.show",{"_index":3390,"title":{},"body":{"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{}}}],["this.startapplication",{"_index":2068,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.storageservice.data",{"_index":846,"title":{},"body":{"components/ComposerComponent.html":{},"components/HomeComponent.html":{}}}],["this.textspinner",{"_index":129,"title":{},"body":{"components/AppComponent.html":{}}}],["this.theater",{"_index":856,"title":{},"body":{"components/ComposerComponent.html":{},"classes/ExportTheater.html":{},"components/VisualizerComponent.html":{}}}],["this.theater.author",{"_index":1876,"title":{},"body":{"classes/ExportTheater.html":{}}}],["this.theater.blueprintfile.imports",{"_index":1853,"title":{},"body":{"classes/ExportTheater.html":{}}}],["this.theater.description",{"_index":1851,"title":{},"body":{"classes/ExportTheater.html":{}}}],["this.theater.properties.areas.foreach(a",{"_index":1877,"title":{},"body":{"classes/ExportTheater.html":{}}}],["this.theater.tags.foreach(t",{"_index":1881,"title":{},"body":{"classes/ExportTheater.html":{}}}],["this.theater.version",{"_index":1875,"title":{},"body":{"classes/ExportTheater.html":{}}}],["this.theaterservice.gettheaterinfobyid(id",{"_index":2907,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["this.theaterservice.gettheatermodulesbyuuid(theateruuid",{"_index":2931,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["this.title",{"_index":1246,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["this.token",{"_index":3635,"title":{},"body":{"injectables/TokenService.html":{}}}],["this.tokenservice.gethttpgetoption",{"_index":1956,"title":{},"body":{"injectables/FlavorService.html":{},"injectables/ModuleService.html":{},"injectables/TheaterService.html":{}}}],["this.type",{"_index":840,"title":{},"body":{"components/ComposerComponent.html":{},"components/HomeComponent.html":{},"components/VisualizerComponent.html":{}}}],["this.type.tolowercase",{"_index":2079,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.valorizenode(node",{"_index":2285,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["this.value",{"_index":1265,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["this.value.asobservable",{"_index":2469,"title":{},"body":{"injectables/ModalService.html":{}}}],["this.value.next(false",{"_index":2481,"title":{},"body":{"injectables/ModalService.html":{}}}],["this.value.next(null",{"_index":2470,"title":{},"body":{"injectables/ModalService.html":{}}}],["this.value.next(true",{"_index":2479,"title":{},"body":{"injectables/ModalService.html":{}}}],["this.valuechange.emit(val",{"_index":1243,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["this.virtualmachines",{"_index":1677,"title":{},"body":{"classes/ExportModule.html":{}}}],["this.virtualmachines.push(msdvm",{"_index":1721,"title":{},"body":{"classes/ExportModule.html":{}}}],["ti",{"_index":1873,"title":{},"body":{"classes/ExportTheater.html":{}}}],["ti[this.theater.name",{"_index":1884,"title":{},"body":{"classes/ExportTheater.html":{}}}],["times",{"_index":2409,"title":{},"body":{"components/ModalComponent.html":{}}}],["tipi",{"_index":830,"title":{},"body":{"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"components/HomeComponent.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/_Control.html":{},"miscellaneous/enumerations.html":{}}}],["tipo",{"_index":18,"title":{},"body":{"classes/Aoption.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"injectables/AttachmentsService.html":{},"injectables/AuthGuard.html":{},"classes/BlueprintFileDTO.html":{},"classes/BorderNetworkDTO.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"components/ControlTemplate.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputReturnedV2.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/DeployInstanceDTO.html":{},"components/DocsComponent.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"classes/FlavorApplication.html":{},"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"injectables/FlavorService.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"classes/HostModuleDTO.html":{},"classes/HostNode.html":{},"classes/HostPortModuleDTO.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModalButton.html":{},"components/ModalComponent.html":{},"classes/ModalItem.html":{},"injectables/ModalService.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"injectables/ModuleService.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"interfaces/ModuleTopology.html":{},"classes/NameMappingDTO.html":{},"components/NavbarComponent.html":{},"classes/NavbarElement.html":{},"classes/NavbarItem.html":{},"classes/NetOSRouterDTO.html":{},"components/NetworkComponent.html":{},"classes/NetworkDTO.html":{},"classes/NetworkNode.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/NodeTopologyElement.html":{},"components/OffcanvasComponent.html":{},"classes/PageableDTO.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SelectOption.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/SingleDataInputReturned.html":{},"classes/SortDTO.html":{},"classes/SourceExport.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"classes/StatisticItemDTO.html":{},"injectables/StorageService.html":{},"components/SubnetComponent.html":{},"classes/SubnetDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"components/TabnavComponent.html":{},"classes/TabnavElement.html":{},"classes/TabnavItem.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"injectables/TheaterService.html":{},"classes/TheaterSimpleData.html":{},"interfaces/TheaterTopology.html":{},"classes/TheatreStatusDTO.html":{},"injectables/TokenService.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/TypesCatalogueDTO.html":{},"components/UnderbarComponent.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["title",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/ModalButton.html":{},"classes/ModalItem.html":{},"injectables/ModalService.html":{},"components/NavbarComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["title,.output",{"_index":2202,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["title_template",{"_index":2741,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["titolo",{"_index":1202,"title":{},"body":{"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/NavbarComponent.html":{},"components/OffcanvasComponent.html":{},"components/TabnavComponent.html":{}}}],["todo",{"_index":1405,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/EmptyModuleInfo.html":{}}}],["toggle",{"_index":1039,"title":{},"body":{"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{}}}],["token",{"_index":3611,"title":{},"body":{"injectables/TokenService.html":{}}}],["token/token.service",{"_index":600,"title":{},"body":{"injectables/AttachmentsService.html":{},"injectables/FlavorService.html":{},"injectables/ModuleService.html":{},"injectables/TheaterService.html":{}}}],["tokenservice",{"_index":209,"title":{"injectables/TokenService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AttachmentsService.html":{},"injectables/FlavorService.html":{},"injectables/ModuleService.html":{},"injectables/TheaterService.html":{},"injectables/TokenService.html":{},"overview.html":{}}}],["toker",{"_index":3609,"title":{},"body":{"injectables/TokenService.html":{}}}],["tooltiptext",{"_index":3680,"title":{},"body":{"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{}}}],["toopeniconclass",{"_index":1301,"title":{},"body":{"components/DataItemComponent.html":{},"components/OffcanvasComponent.html":{}}}],["top",{"_index":1348,"title":{},"body":{"components/DataItemComponent.html":{},"components/OffcanvasComponent.html":{}}}],["topologia",{"_index":2855,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["topologie",{"_index":3100,"title":{},"body":{"classes/PerseDataForModuleVisualizer.html":{}}}],["topology",{"_index":395,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["topologyelement",{"_index":441,"title":{"classes/TopologyElement.html":{}},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["topologylist",{"_index":440,"title":{"interfaces/TopologyList.html":{}},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["topromise",{"_index":1957,"title":{},"body":{"injectables/FlavorService.html":{},"injectables/ModuleService.html":{},"injectables/TheaterService.html":{}}}],["toreduceiconclass",{"_index":1302,"title":{},"body":{"components/DataItemComponent.html":{},"components/OffcanvasComponent.html":{}}}],["tosca",{"_index":564,"title":{},"body":{"classes/AreaExport.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/SourceExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["tosca_definitions_version",{"_index":566,"title":{},"body":{"classes/AreaExport.html":{},"classes/BlueprintFileDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/DeployInstanceDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleSimpleData.html":{},"classes/NameMappingDTO.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/SourceExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagsExport.html":{},"classes/TheaterDTO.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{},"classes/TheatreStatusDTO.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["toscadefinitiontype",{"_index":554,"title":{},"body":{"classes/AreaExport.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/SourceExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"miscellaneous/enumerations.html":{}}}],["toscadefinitiontype.cloudify",{"_index":1649,"title":{},"body":{"classes/ExportModule.html":{},"classes/ExportTheater.html":{}}}],["tosee",{"_index":697,"title":{},"body":{"classes/BlueprintFileDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/NameMappingDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TheaterDTO.html":{},"classes/TheatreStatusDTO.html":{}}}],["totalelements",{"_index":475,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["totalpages",{"_index":474,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["tra",{"_index":3138,"title":{},"body":{"classes/PerseDataForTheaterComposer.html":{}}}],["transform",{"_index":2127,"title":{},"body":{"components/HomeComponent.html":{},"components/NavbarElementComponent.html":{}}}],["transition",{"_index":2126,"title":{},"body":{"components/HomeComponent.html":{},"components/NavbarElementComponent.html":{}}}],["translateextent",{"_index":3271,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["trattando",{"_index":1189,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["tratti",{"_index":1356,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["tree",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["trigger",{"_index":2181,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["trova",{"_index":2425,"title":{},"body":{"injectables/ModalService.html":{}}}],["trovare",{"_index":1610,"title":{},"body":{"classes/ExportModule.html":{}}}],["true",{"_index":316,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthGuard.html":{},"components/ComposerComponent.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NetworkComponent.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{},"components/VisualizerComponent.html":{}}}],["try",{"_index":864,"title":{},"body":{"components/ComposerComponent.html":{},"injectables/FileService.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["tslib",{"_index":3775,"title":{},"body":{"dependencies.html":{}}}],["tuo",{"_index":3902,"title":{},"body":{"modules.html":{}}}],["tutte",{"_index":759,"title":{},"body":{"components/ComposerComponent.html":{},"injectables/ModalService.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"components/VisualizerComponent.html":{}}}],["tutti",{"_index":431,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/ExportModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"components/UnderbarComponent.html":{}}}],["two",{"_index":1353,"title":{},"body":{"components/DataItemComponent.html":{}}}],["type",{"_index":37,"title":{},"body":{"classes/Aoption.html":{},"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"injectables/AttachmentsService.html":{},"classes/BlueprintFileDTO.html":{},"classes/BorderNetworkDTO.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"components/ControlTemplate.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"components/DocsComponent.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"classes/FlavorDTO.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"classes/HostNode.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModalButton.html":{},"components/ModalComponent.html":{},"classes/ModalItem.html":{},"injectables/ModalService.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"classes/NavbarElement.html":{},"classes/NavbarItem.html":{},"classes/NetOSRouterDTO.html":{},"components/NetworkComponent.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkNode.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/NodeTopologyElement.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SelectOption.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/SingleDataInputReturned.html":{},"classes/SourceExport.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"classes/StatisticItemDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"components/TabnavComponent.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/TheaterSimpleData.html":{},"interfaces/TheaterTopology.html":{},"injectables/TokenService.html":{},"classes/TopologyElement.html":{},"classes/TypesCatalogueDTO.html":{},"components/UnderbarComponent.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{},"miscellaneous/functions.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["typeahead",{"_index":277,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["typeexport",{"_index":555,"title":{},"body":{"classes/AreaExport.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/SourceExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["typescataloguedto",{"_index":481,"title":{"classes/TypesCatalogueDTO.html":{}},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["ubuntu",{"_index":1379,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"miscellaneous/enumerations.html":{}}}],["un",{"_index":45,"title":{},"body":{"classes/Aoption.html":{},"components/ComposerComponent.html":{},"components/DataInputV2Component.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"components/DocsComponent.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"components/HomeComponent.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"injectables/ModalService.html":{},"components/NavbarComponent.html":{},"classes/NavbarElement.html":{},"classes/NavbarItem.html":{},"classes/NetworkNode.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"injectables/TokenService.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["una",{"_index":755,"title":{},"body":{"components/ComposerComponent.html":{},"components/DataItemComponent.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SubnetNode.html":{},"components/TabnavComponent.html":{},"classes/TabnavElement.html":{},"classes/TabnavItem.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"miscellaneous/functions.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["unauthenticated",{"_index":649,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["undefined",{"_index":849,"title":{},"body":{"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"classes/ExportModule.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"classes/NetworkNode.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteNetworkInfo.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/_Control.html":{}}}],["underbar",{"_index":3649,"title":{},"body":{"components/UnderbarComponent.html":{}}}],["underbar'},{'name",{"_index":190,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["underbar.component.html",{"_index":3653,"title":{},"body":{"components/UnderbarComponent.html":{}}}],["underbar.component.sass",{"_index":3652,"title":{},"body":{"components/UnderbarComponent.html":{}}}],["underbarcomponent",{"_index":189,"title":{"components/UnderbarComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{},"components/VisualizerComponent.html":{},"overview.html":{}}}],["underbarelement",{"_index":3658,"title":{"classes/UnderbarElement.html":{}},"body":{"components/UnderbarComponent.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{}}}],["underbaritem",{"_index":3663,"title":{"classes/UnderbarItem.html":{}},"body":{"components/UnderbarComponent.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{}}}],["underbartype",{"_index":3665,"title":{},"body":{"components/UnderbarComponent.html":{}}}],["underline",{"_index":1281,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["undo",{"_index":3252,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"index.html":{}}}],["unit",{"_index":3890,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":595,"title":{},"body":{"injectables/AttachmentsService.html":{},"components/ControlTemplate.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"injectables/ModuleService.html":{},"injectables/ParseService.html":{},"injectables/TheaterService.html":{},"injectables/TokenService.html":{},"classes/_Control.html":{}}}],["uno",{"_index":1321,"title":{},"body":{"components/DataItemComponent.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["unpaged",{"_index":2796,"title":{},"body":{"classes/PageableDTO.html":{},"classes/SortDTO.html":{}}}],["unselected",{"_index":2778,"title":{},"body":{"components/OffcanvasComponent.html":{},"components/TabnavComponent.html":{}}}],["unsorted",{"_index":2804,"title":{},"body":{"classes/PageableDTO.html":{},"classes/SortDTO.html":{}}}],["update/install",{"_index":3861,"title":{},"body":{"index.html":{}}}],["updated",{"_index":506,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["updatetime",{"_index":1168,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["upload",{"_index":2092,"title":{},"body":{"components/HomeComponent.html":{}}}],["url",{"_index":618,"title":{},"body":{"injectables/AttachmentsService.html":{},"components/ComposerComponent.html":{},"injectables/ExportService.html":{},"components/VisualizerComponent.html":{}}}],["url(/../assets/images/bg",{"_index":2102,"title":{},"body":{"components/HomeComponent.html":{}}}],["usare",{"_index":3127,"title":{},"body":{"classes/PerseDataForTheaterComposer.html":{}}}],["usata",{"_index":1063,"title":{},"body":{"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/ExportModule.html":{},"components/ModalComponent.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{},"miscellaneous/functions.html":{}}}],["usato",{"_index":1042,"title":{},"body":{"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/ModalButton.html":{},"classes/ModalItem.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{}}}],["uscita",{"_index":1619,"title":{},"body":{"classes/ExportModule.html":{}}}],["use",{"_index":340,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/HowToUseComponent.html":{},"components/NavbarElementComponent.html":{},"index.html":{}}}],["use'},{'name",{"_index":168,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["use.component",{"_index":242,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["use.component.css",{"_index":2298,"title":{},"body":{"components/HowToUseComponent.html":{}}}],["use.component.html",{"_index":2299,"title":{},"body":{"components/HowToUseComponent.html":{}}}],["use.component.ts",{"_index":2297,"title":{},"body":{"components/HowToUseComponent.html":{}}}],["use.component.ts:12",{"_index":2301,"title":{},"body":{"components/HowToUseComponent.html":{}}}],["use.component.ts:8",{"_index":2300,"title":{},"body":{"components/HowToUseComponent.html":{}}}],["use/how",{"_index":241,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/HowToUseComponent.html":{}}}],["use_external_resource",{"_index":944,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/ExportModule.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["usefactory",{"_index":314,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":646,"title":{},"body":{"injectables/AuthGuard.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["usevalue",{"_index":318,"title":{},"body":{"modules/AppModule.html":{}}}],["utf",{"_index":1910,"title":{},"body":{"injectables/FileService.html":{}}}],["utility/app.guard",{"_index":336,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["utility/app.init",{"_index":271,"title":{},"body":{"modules/AppModule.html":{}}}],["utilizzare",{"_index":976,"title":{},"body":{"components/ControlTemplate.html":{},"injectables/ExportService.html":{},"classes/_Control.html":{},"miscellaneous/enumerations.html":{}}}],["utilizzata",{"_index":408,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaExport.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/FlavorApplication.html":{},"components/HomeComponent.html":{},"classes/HostNode.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/MirroringModuleInstanceNode.html":{},"injectables/ModalService.html":{},"classes/ModuleApplication.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleSimpleData.html":{},"interfaces/ModuleTopology.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkNode.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/NodeTopologyElement.html":{},"components/OffcanvasComponent.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SimpleModuleApplication.html":{},"classes/SourceExport.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"components/TabnavComponent.html":{},"classes/TagsExport.html":{},"classes/TheaterApplication.html":{},"classes/TheaterExport.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/TheaterSimpleData.html":{},"interfaces/TheaterTopology.html":{},"injectables/TokenService.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"miscellaneous/functions.html":{}}}],["utilizzati",{"_index":401,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["utilizzato",{"_index":1536,"title":{},"body":{"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/TabnavElement.html":{},"classes/TabnavItem.html":{},"miscellaneous/enumerations.html":{}}}],["uuid",{"_index":351,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaDTO.html":{},"classes/BlueprintFileDTO.html":{},"classes/BorderNetworkDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/HostModuleDTO.html":{},"classes/HostPortModuleDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/NameMappingDTO.html":{},"classes/NetOSRouterDTO.html":{},"classes/NetworkDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/SubnetDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheatreStatusDTO.html":{},"classes/TypesCatalogueDTO.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{}}}],["v",{"_index":134,"title":{},"body":{"components/AppComponent.html":{},"components/ControlTemplate.html":{},"components/HomeComponent.html":{},"classes/_Control.html":{}}}],["v2",{"_index":1160,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["v2'},{'name",{"_index":158,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["v2.component",{"_index":295,"title":{},"body":{"modules/AppModule.html":{}}}],["v2.component.html",{"_index":1162,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["v2.component.sass",{"_index":1161,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["v2.component.ts",{"_index":1153,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["v2.component.ts:107",{"_index":1228,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["v2.component.ts:123",{"_index":1227,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["v2.component.ts:136",{"_index":1226,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["v2.component.ts:152",{"_index":1225,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["v2.component.ts:169",{"_index":1231,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["v2.component.ts:181",{"_index":1223,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["v2.component.ts:21",{"_index":1233,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["v2.component.ts:30",{"_index":1203,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["v2.component.ts:37",{"_index":1238,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["v2.component.ts:40",{"_index":1221,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["v2.component.ts:46",{"_index":1218,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["v2.component.ts:54",{"_index":1194,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["v2.component.ts:62",{"_index":1178,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["v2.component.ts:68",{"_index":1200,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["v2.component.ts:78",{"_index":1186,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["v2.component.ts:81",{"_index":1199,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["v2.component.ts:82",{"_index":1176,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["v2.component.ts:83",{"_index":1198,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["v2.component.ts:89",{"_index":1236,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["v2.component.ts:94",{"_index":1175,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["v2/data",{"_index":294,"title":{},"body":{"modules/AppModule.html":{},"components/DataInputV2Component.html":{}}}],["v2/datainputtypev2.ts",{"_index":1141,"title":{},"body":{"classes/DataInputReturnedV2.html":{}}}],["v2/datainputtypev2.ts:6",{"_index":1146,"title":{},"body":{"classes/DataInputReturnedV2.html":{}}}],["v2/datainputtypev2.ts:7",{"_index":1148,"title":{},"body":{"classes/DataInputReturnedV2.html":{}}}],["v2/datainputtypev2.ts:8",{"_index":1147,"title":{},"body":{"classes/DataInputReturnedV2.html":{}}}],["va",{"_index":2240,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"injectables/ModalService.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["val",{"_index":995,"title":{},"body":{"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/HomeComponent.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"components/NavbarComponent.html":{},"components/OffcanvasComponent.html":{},"components/TabnavComponent.html":{},"injectables/TokenService.html":{},"classes/_Control.html":{}}}],["val.checked",{"_index":1124,"title":{},"body":{"components/DataInputComponent.html":{}}}],["val.element[\"id\"].value",{"_index":2064,"title":{},"body":{"components/HomeComponent.html":{}}}],["val.element['author'].value",{"_index":2067,"title":{},"body":{"components/HomeComponent.html":{}}}],["val.element['description'].value",{"_index":2066,"title":{},"body":{"components/HomeComponent.html":{}}}],["val.element['name'].value",{"_index":2065,"title":{},"body":{"components/HomeComponent.html":{}}}],["val.isvalid",{"_index":2062,"title":{},"body":{"components/HomeComponent.html":{}}}],["val.value",{"_index":1125,"title":{},"body":{"components/DataInputComponent.html":{}}}],["validata",{"_index":1995,"title":{},"body":{"components/HomeComponent.html":{}}}],["validators",{"_index":1110,"title":{},"body":{"components/DataInputComponent.html":{}}}],["validators.required",{"_index":1116,"title":{},"body":{"components/DataInputComponent.html":{}}}],["valore",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"classes/InterfaceConstraints.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"classes/ModalItem.html":{},"injectables/ModalService.html":{},"components/NavbarComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"injectables/ParseService.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"injectables/SpinnerService.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/VisualizerComponent.html":{}}}],["valori",{"_index":826,"title":{},"body":{"components/ComposerComponent.html":{},"components/DataInputV2Component.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"injectables/ModalService.html":{},"classes/PerseDataForTheaterComposer.html":{},"components/VisualizerComponent.html":{},"miscellaneous/enumerations.html":{}}}],["valorizenode",{"_index":2228,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["valorizenode(node",{"_index":2250,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["valorizza",{"_index":1627,"title":{},"body":{"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"components/HomeComponent.html":{}}}],["valorizzando",{"_index":1840,"title":{},"body":{"classes/ExportTheater.html":{}}}],["valorizzare",{"_index":749,"title":{},"body":{"components/ComposerComponent.html":{},"components/NavbarComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"components/VisualizerComponent.html":{}}}],["valorizzata",{"_index":799,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["valorizzati",{"_index":2010,"title":{},"body":{"components/HomeComponent.html":{}}}],["valorizzato",{"_index":2241,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["valorizzazione",{"_index":2252,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["value",{"_index":484,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"components/ControlTemplate.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"injectables/ModalService.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SelectOption.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/SingleDataInputReturned.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{},"classes/_Control.html":{}}}],["value(val",{"_index":1241,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["value.local_interface",{"_index":2973,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["value.module_instance",{"_index":2974,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["value.remote_interface",{"_index":2975,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["valuechange",{"_index":1173,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["values",{"_index":1117,"title":{},"body":{"components/DataInputComponent.html":{}}}],["values[el.id",{"_index":1122,"title":{},"body":{"components/DataInputComponent.html":{}}}],["var",{"_index":145,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"injectables/ExportService.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"classes/HostNode.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"classes/NetworkNode.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"components/SubnetComponent.html":{},"classes/SubnetNode.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["vari",{"_index":978,"title":{},"body":{"components/ControlTemplate.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/_Control.html":{}}}],["variabile",{"_index":784,"title":{},"body":{"components/ComposerComponent.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"components/NavbarComponent.html":{},"components/OffcanvasComponent.html":{},"injectables/ParseService.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"injectables/StorageService.html":{},"components/TabnavComponent.html":{},"injectables/TokenService.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["variabili",{"_index":751,"title":{},"body":{"components/ComposerComponent.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataItemComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"components/HomeComponent.html":{},"components/OffcanvasComponent.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{},"components/VisualizerComponent.html":{},"miscellaneous/enumerations.html":{}}}],["varibile",{"_index":1179,"title":{},"body":{"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{}}}],["varibili",{"_index":1254,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["varie",{"_index":1844,"title":{},"body":{"classes/ExportTheater.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["vars",{"_index":2184,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["vedere",{"_index":862,"title":{},"body":{"components/ComposerComponent.html":{}}}],["veloce",{"_index":2164,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["verificato",{"_index":809,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["version",{"_index":499,"title":{},"body":{"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"classes/BlueprintFileDTO.html":{},"classes/BorderNetworkDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/DeployInstanceDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"classes/GenericParameterDTO.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"classes/NameMappingDTO.html":{},"classes/NetOSRouterDTO.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkDTO.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/SourceExport.html":{},"classes/StatisticItemDTO.html":{},"components/SubnetComponent.html":{},"classes/SubnetDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/TheaterSimpleData.html":{},"classes/TheatreStatusDTO.html":{},"classes/TypesCatalogueDTO.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"index.html":{},"properties.html":{},"classes/reteBasicModuleInfo.html":{}}}],["versione",{"_index":1382,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["verso",{"_index":2421,"title":{},"body":{"injectables/ModalService.html":{}}}],["vertical",{"_index":2203,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["via",{"_index":3894,"title":{},"body":{"index.html":{}}}],["viene",{"_index":798,"title":{},"body":{"components/ComposerComponent.html":{},"components/DataInputComponent.html":{},"injectables/FileService.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"components/VisualizerComponent.html":{},"miscellaneous/functions.html":{}}}],["viewchild",{"_index":2046,"title":{},"body":{"components/HomeComponent.html":{}}}],["viewchild('data_input_template",{"_index":2023,"title":{},"body":{"components/HomeComponent.html":{}}}],["viewport",{"_index":2136,"title":{},"body":{"components/HomeComponent.html":{}}}],["virtual",{"_index":1412,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/ExportModule.html":{},"miscellaneous/enumerations.html":{}}}],["virtual_machine",{"_index":935,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/ExportModule.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["virtual_machines",{"_index":928,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/ExportModule.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["virtual_server",{"_index":1442,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"miscellaneous/enumerations.html":{}}}],["virtualizationenvironmenttype",{"_index":1940,"title":{},"body":{"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{}}}],["virtualizationenvironmenttypedto",{"_index":1934,"title":{"classes/VirtualizationEnvironmentTypeDTO.html":{}},"body":{"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{}}}],["virtualmachine",{"_index":929,"title":{"classes/VirtualMachine.html":{}},"body":{"classes/ConstraintsMSD.html":{},"classes/ExportModule.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["virtualmachineports",{"_index":937,"title":{"classes/VirtualMachinePorts.html":{}},"body":{"classes/ConstraintsMSD.html":{},"classes/ExportModule.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["virtualmachines",{"_index":1574,"title":{},"body":{"classes/ExportModule.html":{}}}],["virtualservermoduleinstance",{"_index":1404,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/EmptyModuleInfo.html":{},"miscellaneous/enumerations.html":{}}}],["visibile",{"_index":2639,"title":{},"body":{"components/NavbarComponent.html":{}}}],["visibilit",{"_index":1482,"title":{},"body":{"components/DocsComponent.html":{}}}],["visibility",{"_index":2784,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["visible",{"_index":1487,"title":{},"body":{"components/DocsComponent.html":{},"components/OffcanvasComponent.html":{}}}],["vista",{"_index":1288,"title":{},"body":{"components/DataItemComponent.html":{}}}],["visual",{"_index":2084,"title":{},"body":{"components/HomeComponent.html":{}}}],["visualization/constructor",{"_index":2083,"title":{},"body":{"components/HomeComponent.html":{}}}],["visualize",{"_index":2089,"title":{},"body":{"components/HomeComponent.html":{}}}],["visualizer",{"_index":247,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"components/HomeComponent.html":{},"components/VisualizerComponent.html":{},"miscellaneous/enumerations.html":{}}}],["visualizer'},{'name",{"_index":181,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["visualizer.component",{"_index":250,"title":{},"body":{"modules/AppModule.html":{}}}],["visualizer.component.html",{"_index":3700,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["visualizer.component.sass",{"_index":3699,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["visualizer/rete",{"_index":249,"title":{},"body":{"modules/AppModule.html":{}}}],["visualizercomponent",{"_index":191,"title":{"components/VisualizerComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"overview.html":{}}}],["visualizing",{"_index":2239,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["visualizzare",{"_index":789,"title":{},"body":{"components/ComposerComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/OffcanvasComponent.html":{},"components/VisualizerComponent.html":{},"miscellaneous/functions.html":{}}}],["visualizzazione",{"_index":1389,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"components/HomeComponent.html":{},"components/ModalComponent.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleVisualizer.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"miscellaneous/functions.html":{}}}],["voglia",{"_index":1251,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["void",{"_index":229,"title":{},"body":{"modules/AppModule.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"injectables/ExportService.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"classes/HostNode.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"components/NavbarComponent.html":{},"components/NetworkComponent.html":{},"classes/NetworkNode.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"injectables/SpinnerService.html":{},"injectables/StorageService.html":{},"components/SubnetComponent.html":{},"classes/SubnetNode.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"injectables/TokenService.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{},"index.html":{}}}],["volta",{"_index":1904,"title":{},"body":{"injectables/FileService.html":{},"components/HomeComponent.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["vue",{"_index":3235,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["vue/dist/vue.esm",{"_index":3236,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["vuole",{"_index":1253,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["vuota",{"_index":1519,"title":{},"body":{"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["webkit",{"_index":2137,"title":{},"body":{"components/HomeComponent.html":{},"components/NavbarElementComponent.html":{}}}],["weight",{"_index":2122,"title":{},"body":{"components/HomeComponent.html":{},"components/OffcanvasComponent.html":{},"components/TabnavComponent.html":{}}}],["white",{"_index":1000,"title":{},"body":{"components/ControlTemplate.html":{},"components/DataItemComponent.html":{},"components/OffcanvasComponent.html":{},"components/TabnavComponent.html":{}}}],["wide",{"_index":3802,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["width",{"_index":1009,"title":{},"body":{"components/ControlTemplate.html":{},"components/DocsComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["wifi",{"_index":3793,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["window",{"_index":160,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["window.location.origin",{"_index":654,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["window.open(url",{"_index":620,"title":{},"body":{"injectables/AttachmentsService.html":{}}}],["window.url.createobjecturl(blob",{"_index":619,"title":{},"body":{"injectables/AttachmentsService.html":{},"injectables/ExportService.html":{}}}],["window.url.revokeobjecturl(url",{"_index":627,"title":{},"body":{"injectables/AttachmentsService.html":{},"injectables/ExportService.html":{}}}],["word",{"_index":1338,"title":{},"body":{"components/DataItemComponent.html":{},"components/TabnavComponent.html":{}}}],["worker",{"_index":2229,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["worker(node",{"_index":2260,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["workerinputs",{"_index":2262,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["workeroutputs",{"_index":2263,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["wrapper",{"_index":2780,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["x",{"_index":610,"title":{},"body":{"injectables/AttachmentsService.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"injectables/ModuleService.html":{},"classes/NetworkNode.html":{},"components/OffcanvasComponent.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["x.jpg",{"_index":2114,"title":{},"body":{"components/HomeComponent.html":{}}}],["x.subscribe",{"_index":614,"title":{},"body":{"injectables/AttachmentsService.html":{}}}],["x[\"instance",{"_index":3144,"title":{},"body":{"classes/PerseDataForTheaterComposer.html":{}}}],["x[key",{"_index":3145,"title":{},"body":{"classes/PerseDataForTheaterComposer.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["xy.png",{"_index":2106,"title":{},"body":{"components/HomeComponent.html":{}}}],["y",{"_index":3278,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["yaml",{"_index":417,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"injectables/AttachmentsService.html":{},"interfaces/CommonModule.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"dependencies.html":{}}}],["yamlstringfy",{"_index":603,"title":{},"body":{"injectables/AttachmentsService.html":{},"injectables/ExportService.html":{}}}],["yamlstringfy(objectdata",{"_index":1820,"title":{},"body":{"injectables/ExportService.html":{}}}],["yes",{"_index":2467,"title":{},"body":{"injectables/ModalService.html":{}}}],["z",{"_index":2209,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["z.push(value",{"_index":3261,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["zone.js",{"_index":3777,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":2125,"title":{},"body":{"components/HomeComponent.html":{}}}],["zoom:hover",{"_index":2130,"title":{},"body":{"components/HomeComponent.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/Aoption.html":{"url":"classes/Aoption.html","title":"class - Aoption","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  Aoption\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/navbar/navbarType.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Rappresenta le opzioni per il tag \n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                attr_key\n                            \n                            \n                                attr_val\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        attr_key\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/navbar/navbarType.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        attr_val\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/navbar/navbarType.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { TemplateRef } from \"@angular/core\";\n\n/**\n * Elemento passato come parametro alla componente NavbarComponent\n */\nexport class NavbarElement {\n    template_title?: TemplateRef;\n    type: \"module\" | \"theater\";\n    logo_img?: any;\n    element: NavbarItem[];\n}\n\n/**\n * Oggetto che rappresenta un singolo elemento della Navbar\n */\nexport class NavbarItem{\n    id: string;\n    text: string;\n    a_option?: Aoption[];\n    template?: TemplateRef;\n}\n\n/**\n * Rappresenta le opzioni per il tag \n */\nexport class Aoption {\n    attr_key: string;\n    attr_val: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Componenti\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadati\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                modalData\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                showmodal\n                            \n                            \n                                showspinner\n                            \n                            \n                                spinner\n                            \n                            \n                                    Public\n                                spinnerService\n                            \n                            \n                                textspinner\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Costruttore\n        \n            \n                \n                    \nconstructor(router: Router, spinnerService: SpinnerService, cdr: ChangeDetectorRef, modal: ModalService)\n                    \n                \n                        \n                            \n                                Definito in src/app/app.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parametri :\n                                    \n                                        \n                                            \n                                                Nome\n                                                    Tipo\n                                                Opzionale\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        spinnerService\n                                                  \n                                                        \n                                                                        SpinnerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modal\n                                                  \n                                                        \n                                                                        ModalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        modalData\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ModalItem\n\n                    \n                \n                    \n                        \n                                Definito in src/app/app.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         Router\n\n                    \n                \n                    \n                        \n                                Definito in src/app/app.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showmodal\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                    \n                        \n                                Definito in src/app/app.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showspinner\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                \n                    \n                        Valore predefinito : false\n                    \n                \n                    \n                        \n                                Definito in src/app/app.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        spinner\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     Observable\n\n                    \n                \n                    \n                        \n                                Definito in src/app/app.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        spinnerService\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         SpinnerService\n\n                    \n                \n                    \n                        \n                                Definito in src/app/app.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        textspinner\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                \n                    \n                        Valore predefinito : \"\"\n                    \n                \n                    \n                        \n                                Definito in src/app/app.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                \n                    \n                        Valore predefinito : 'InfraCreate'\n                    \n                \n                    \n                        \n                                Definito in src/app/app.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectorRef, Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { ModalItem } from './components/modal/modalType';\nimport { ModalService } from './services/application/modal/modal.service';\nimport { SpinnerService } from './services/application/spinner/spinner.service';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.sass']\n})\nexport class AppComponent {\n\n  // general\n  title = 'InfraCreate';\n\n  // global spinner\n  spinner: Observable;\n  showspinner: boolean = false;\n  textspinner: string = \"\";\n\n  //global modal\n  modalData: ModalItem;\n  showmodal: boolean;\n\n  constructor(\n    public router: Router,\n    public spinnerService: SpinnerService,\n    private cdr: ChangeDetectorRef,\n    protected modal: ModalService\n  ) {\n\n    document.body.style.overflow = 'hidden'; // per prevenire lo scrolling\n    document.body.style.background = '#0f131a'; // per background\n\n    this.spinner = spinnerService.getSpinner();\n    this.spinner.subscribe(\n      el => {\n        this.showspinner = el.show;\n        this.textspinner = el.text;\n        this.cdr.detectChanges();\n      }\n    )\n\n    this.modal.modalData.asObservable().subscribe(v => this.modalData = v);\n    this.modal.show.asObservable().subscribe(v => this.showmodal = v);\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n    {{textspinner}}...\n \n\n\n\n\n\n    \n\n    \n                \n                    ./app.component.sass\n                \n                body\n    overflow: hidden\n    background-color: '#0f131a' !important\n    \n\n    \n        \n        \n            \n                Legenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento html con direttive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{textspinner}}... '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ComposerComponent', 'selector': 'app-composer'},{'name': 'ControlTemplate', 'selector': ''},{'name': 'DataInputComponent', 'selector': 'app-data-input'},{'name': 'DataInputV2Component', 'selector': 'app-data-input-v2'},{'name': 'DataItemComponent', 'selector': 'app-window-item'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HostComponent', 'selector': ''},{'name': 'HowToUseComponent', 'selector': 'app-how-to-use'},{'name': 'MirroringModuleInstanceComponent', 'selector': ''},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavbarElementComponent', 'selector': 'app-navbar-element'},{'name': 'NetworkComponent', 'selector': ''},{'name': 'OffcanvasComponent', 'selector': 'app-offcanvas'},{'name': 'ReteModuleComposerComponent', 'selector': 'app-rete-module-composer'},{'name': 'ReteModuleVisualizerComponent', 'selector': 'app-rete-module-visualizer'},{'name': 'ReteTheaterComposerComponent', 'selector': 'app-rete-theater-composer'},{'name': 'ReteTheaterVisualizerComponent', 'selector': 'app-rete-theater-visualizer'},{'name': 'SubnetComponent', 'selector': ''},{'name': 'TabnavComponent', 'selector': 'app-tabnav'},{'name': 'TheaterInternalServiceModuleInstanceComponent', 'selector': ''},{'name': 'TheaterModuleInstanceComponent', 'selector': ''},{'name': 'UnderbarComponent', 'selector': 'app-underbar'},{'name': 'VisualizerComponent', 'selector': 'app-displayer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Moduli\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_exports\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nComposerComponent\n\nComposerComponent\n\nAppModule -->\n\nComposerComponent->AppModule\n\n\n\nAppModule -->\n\nComposerComponent->AppModule\n\n\n\n\n\nDataInputComponent\n\nDataInputComponent\n\nAppModule -->\n\nDataInputComponent->AppModule\n\n\n\n\n\nDataInputV2Component\n\nDataInputV2Component\n\nAppModule -->\n\nDataInputV2Component->AppModule\n\n\n\n\n\nDataItemComponent\n\nDataItemComponent\n\nAppModule -->\n\nDataItemComponent->AppModule\n\n\n\n\n\nDocsComponent\n\nDocsComponent\n\nAppModule -->\n\nDocsComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nHostComponent\n\nHostComponent\n\nAppModule -->\n\nHostComponent->AppModule\n\n\n\n\n\nHowToUseComponent\n\nHowToUseComponent\n\nAppModule -->\n\nHowToUseComponent->AppModule\n\n\n\n\n\nMirroringModuleInstanceComponent\n\nMirroringModuleInstanceComponent\n\nAppModule -->\n\nMirroringModuleInstanceComponent->AppModule\n\n\n\n\n\nModalComponent\n\nModalComponent\n\nAppModule -->\n\nModalComponent->AppModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nAppModule -->\n\nNavbarComponent->AppModule\n\n\n\n\n\nNavbarElementComponent\n\nNavbarElementComponent\n\nAppModule -->\n\nNavbarElementComponent->AppModule\n\n\n\n\n\nNetworkComponent\n\nNetworkComponent\n\nAppModule -->\n\nNetworkComponent->AppModule\n\n\n\n\n\nOffcanvasComponent\n\nOffcanvasComponent\n\nAppModule -->\n\nOffcanvasComponent->AppModule\n\n\n\n\n\nReteModuleComposerComponent\n\nReteModuleComposerComponent\n\nAppModule -->\n\nReteModuleComposerComponent->AppModule\n\n\n\n\n\nReteModuleVisualizerComponent\n\nReteModuleVisualizerComponent\n\nAppModule -->\n\nReteModuleVisualizerComponent->AppModule\n\n\n\n\n\nReteTheaterComposerComponent\n\nReteTheaterComposerComponent\n\nAppModule -->\n\nReteTheaterComposerComponent->AppModule\n\n\n\n\n\nReteTheaterVisualizerComponent\n\nReteTheaterVisualizerComponent\n\nAppModule -->\n\nReteTheaterVisualizerComponent->AppModule\n\n\n\n\n\nSubnetComponent\n\nSubnetComponent\n\nAppModule -->\n\nSubnetComponent->AppModule\n\n\n\n\n\nTabnavComponent\n\nTabnavComponent\n\nAppModule -->\n\nTabnavComponent->AppModule\n\n\n\n\n\nTheaterInternalServiceModuleInstanceComponent\n\nTheaterInternalServiceModuleInstanceComponent\n\nAppModule -->\n\nTheaterInternalServiceModuleInstanceComponent->AppModule\n\n\n\n\n\nTheaterModuleInstanceComponent\n\nTheaterModuleInstanceComponent\n\nAppModule -->\n\nTheaterModuleInstanceComponent->AppModule\n\n\n\n\n\nUnderbarComponent\n\nUnderbarComponent\n\nAppModule -->\n\nUnderbarComponent->AppModule\n\n\n\n\n\nVisualizerComponent\n\nVisualizerComponent\n\nAppModule -->\n\nVisualizerComponent->AppModule\n\n\n\nAppModule -->\n\nVisualizerComponent->AppModule\n\n\n\n\n\nDataInputComponent \n\nDataInputComponent \n\nDataInputComponent  -->\n\nAppModule->DataInputComponent \n\n\n\n\n\nNavbarComponent \n\nNavbarComponent \n\nNavbarComponent  -->\n\nAppModule->NavbarComponent \n\n\n\n\n\nNavbarElementComponent \n\nNavbarElementComponent \n\nNavbarElementComponent  -->\n\nAppModule->NavbarElementComponent \n\n\n\n\n\nOffcanvasComponent \n\nOffcanvasComponent \n\nOffcanvasComponent  -->\n\nAppModule->OffcanvasComponent \n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nNgxPopper\n\nNgxPopper\n\nAppModule -->\n\nNgxPopper->AppModule\n\n\n\n\n\nModuleService\n\nModuleService\n\nAppModule -->\n\nModuleService->AppModule\n\n\n\n\n\nParseService\n\nParseService\n\nAppModule -->\n\nParseService->AppModule\n\n\n\n\n\nTheaterService\n\nTheaterService\n\nAppModule -->\n\nTheaterService->AppModule\n\n\n\n\n\nTokenService\n\nTokenService\n\nAppModule -->\n\nTokenService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Ingrandisci\n        Reset\n        Rimpocciolisci\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Dichiarazioni\n                    \n                        \n                            AppComponent\n                        \n                        \n                            AppComponent\n                        \n                        \n                            ComposerComponent\n                        \n                        \n                            ComposerComponent\n                        \n                        \n                            DataInputComponent\n                        \n                        \n                            DataInputV2Component\n                        \n                        \n                            DataItemComponent\n                        \n                        \n                            DocsComponent\n                        \n                        \n                            HomeComponent\n                        \n                        \n                            HostComponent\n                        \n                        \n                            HowToUseComponent\n                        \n                        \n                            MirroringModuleInstanceComponent\n                        \n                        \n                            ModalComponent\n                        \n                        \n                            NavbarComponent\n                        \n                        \n                            NavbarElementComponent\n                        \n                        \n                            NetworkComponent\n                        \n                        \n                            OffcanvasComponent\n                        \n                        \n                            ReteModuleComposerComponent\n                        \n                        \n                            ReteModuleVisualizerComponent\n                        \n                        \n                            ReteTheaterComposerComponent\n                        \n                        \n                            ReteTheaterVisualizerComponent\n                        \n                        \n                            SubnetComponent\n                        \n                        \n                            TabnavComponent\n                        \n                        \n                            TheaterInternalServiceModuleInstanceComponent\n                        \n                        \n                            TheaterModuleInstanceComponent\n                        \n                        \n                            UnderbarComponent\n                        \n                        \n                            VisualizerComponent\n                        \n                        \n                            VisualizerComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            HostComponent\n                        \n                        \n                            MirroringModuleInstanceComponent\n                        \n                        \n                            NetworkComponent\n                        \n                        \n                            SubnetComponent\n                        \n                        \n                            TheaterInternalServiceModuleInstanceComponent\n                        \n                        \n                            TheaterModuleInstanceComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ModuleService\n                        \n                        \n                            ParseService\n                        \n                        \n                            TheaterService\n                        \n                        \n                            TokenService\n                        \n                    \n                \n                \n                    Importa\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            NgxPopper\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DataInputComponent\n                        \n                        \n                            NavbarComponent\n                        \n                        \n                            NavbarElementComponent\n                        \n                        \n                            OffcanvasComponent\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Schemas\n                    \n                        \n                            CUSTOM_ELEMENTS_SCHEMA\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        ngDoBootstrap\n                        \n                    \n                \n            \n            \n                \nngDoBootstrap(appRef: ApplicationRef)\n                \n            \n\n\n            \n                \n                    Definito in src/app/app.module.ts:156\n                \n            \n\n\n            \n                \n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    appRef\n                                    \n                                                ApplicationRef\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { ApplicationRef, APP_INITIALIZER, CUSTOM_ELEMENTS_SCHEMA, DoBootstrap, NgModule, Provider } from '@angular/core';\n\nimport { AppComponent } from './app.component';\n\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { HomeComponent } from './pages/home/home.component';\nimport { HowToUseComponent } from './pages/how-to-use/how-to-use.component';\n\nimport { ReteModule } from 'rete-angular-render-plugin';\n\nimport { ReteTheaterVisualizerComponent } from './visualizer-system/rete-theater-visualizer/rete-theater-visualizer.component';\nimport { ReteModuleVisualizerComponent } from './visualizer-system/rete-module-visualizer/rete-module-visualizer.component';\n\nimport { ReteModuleComposerComponent } from './composer-system/rete-module-composer/rete-module-composer.component';\nimport { ReteTheaterComposerComponent } from './composer-system/rete-theater-composer/rete-theater-composer.component';\n\n\nimport { HostComponent } from './rete-settings/nodes/rete-nodes/host/host.component';\nimport { SubnetComponent } from './rete-settings/nodes/rete-nodes/subnet/subnet.component';\nimport { NetworkComponent } from './rete-settings/nodes/rete-nodes/network/network.component';\nimport { MirroringModuleInstanceComponent } from './rete-settings/nodes/rete-modules/mirroringModuleInstance/mirroringModuleInstance.component';\nimport { TheaterInternalServiceModuleInstanceComponent } from './rete-settings/nodes/rete-modules/theaterInternalServiceModuleInstance/theaterInternalServiceModuleInstance.component';\nimport { TheaterModuleInstanceComponent } from './rete-settings/nodes/rete-modules/theaterModuleInstance/theaterModuleInstance.component';\n\nimport { VisualizerComponent } from './visualizer-system/visualizer/visualizer.component';\nimport { ComposerComponent } from './composer-system/composer/composer.component';\n\nimport { CommonModule, NgClass, NgStyle } from '@angular/common';\n\nimport { KeycloakAngularModule, KeycloakService } from 'keycloak-angular';\nimport { initializeKeycloak } from './utility/app.init';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { NgxSpinnerModule } from 'ngx-spinner';\nimport { NgxTypeaheadModule } from \"ngx-typeahead\";\nimport { NgxPopper } from 'angular-popper';\n\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { TokenService } from './services/token/token.service';\nimport { ModuleService } from './services/api/module.service';\nimport { TheaterService } from './services/api/theater.service';\n\nimport { OffcanvasComponent } from './components/offcanvas/offcanvas.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\n\nimport { NavbarElementComponent } from './pages/elements/navbar-element/navbar-element.component';\nimport { DataInputComponent } from './components/data-input/data-input.component';\nimport { ModalComponent } from './components/modal/modal.component';\nimport { UnderbarComponent } from './components/underbar/underbar.component';\nimport { DataInputV2Component } from './components/data-input-v2/data-input-v2.component';\nimport { TabnavComponent } from './components/tabnav/tabnav.component';\nimport { ParseService } from './services/application/parse/parse.service';\nimport { FormsModule, NgForm, ReactiveFormsModule } from '@angular/forms';\nimport { DataItemComponent } from './components/data-item/data-item.component';\nimport { environment } from 'src/environments/environment';\nimport { DocsComponent } from './pages/docs/docs.component';\n// import { ColorPickerModule } from 'ngx-color-picker';\n\nconst keycloakService = new KeycloakService();\nlet providerInitKeycloak: Provider = (!environment.mocked)\n  ? {\n    provide: APP_INITIALIZER,\n    useFactory: initializeKeycloak,\n    multi: true,\n    deps: [KeycloakService],\n    // provide: KeycloakService,\n    // useValue: keycloakService,\n  }\n  : [];\n\n\n@NgModule({\n  declarations: [\n\n    AppComponent,\n\n    VisualizerComponent,\n    ComposerComponent,\n\n    ReteTheaterVisualizerComponent,\n    ReteModuleVisualizerComponent,\n    ReteModuleComposerComponent,\n    ReteTheaterComposerComponent,\n\n    HostComponent,\n    SubnetComponent,\n    NetworkComponent,\n    MirroringModuleInstanceComponent,\n    TheaterInternalServiceModuleInstanceComponent,\n    TheaterModuleInstanceComponent,\n\n    AppComponent,\n    HomeComponent,\n    HowToUseComponent,\n    NavbarElementComponent,\n\n    VisualizerComponent,\n    ComposerComponent,\n    OffcanvasComponent,\n    NavbarComponent,\n    DataInputComponent,\n    ModalComponent,\n    UnderbarComponent,\n    DataInputV2Component,\n    TabnavComponent,\n    DataItemComponent,\n    DocsComponent\n  ],\n  imports: [\n    BrowserModule,\n\n    AppRoutingModule,\n\n    ReteModule,\n\n    NgxPopper,\n\n    CommonModule,\n\n    KeycloakAngularModule,\n\n    HttpClientModule,\n\n    NgxSpinnerModule,\n    NgxTypeaheadModule,\n\n    BrowserAnimationsModule,\n\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [\n    providerInitKeycloak,\n    TokenService,\n    ModuleService,\n    TheaterService,\n    ParseService\n  ],\n  exports: [OffcanvasComponent, NavbarComponent, NavbarElementComponent, DataInputComponent],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\n  bootstrap: [AppComponent],\n  entryComponents: [\n    MirroringModuleInstanceComponent,\n    TheaterInternalServiceModuleInstanceComponent,\n    TheaterModuleInstanceComponent,\n    SubnetComponent,\n    NetworkComponent,\n    HostComponent\n  ]\n})\n\nexport class AppModule implements DoBootstrap {\n  ngDoBootstrap(appRef: ApplicationRef) {\n    if (!environment.mocked) { // se non è mockato\n      keycloakService\n        .init()\n        .then(() => {\n          appRef.bootstrap(AppComponent);\n        })\n        .catch((error) =>\n          console.error('[ngDoBootstrap] init Keycloak failed', error)\n        );\n    }\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Moduli\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomeComponent } from './pages/home/home.component';\nimport { HowToUseComponent } from './pages/how-to-use/how-to-use.component';\nimport { VisualizerComponent } from './visualizer-system/visualizer/visualizer.component';\nimport { ComposerComponent } from './composer-system/composer/composer.component';\nimport { AuthGuard } from './utility/app.guard';\nimport { environment } from 'src/environments/environment';\nimport { DocsComponent } from './pages/docs/docs.component';\n\nconst routesGuard: Routes = [\n  {\n    path: \"\",\n    component: HomeComponent,\n  },\n  {\n    path: \"home\",\n    component: HomeComponent,\n  },\n  {\n    path: \"how-to-use\",\n    component: HowToUseComponent,\n  },\n  {\n    path: \"documentation\",\n    component: DocsComponent,\n  },\n  {\n    path: \"visualizer\",\n    component: VisualizerComponent,\n    canActivate: [AuthGuard]\n  },\n  {\n    path: \"composer\",\n    component: ComposerComponent,\n    canActivate: [AuthGuard]\n\n  },\n  {\n    path: \"**\",\n    component: HomeComponent,\n  },\n];\n\nconst routesSimple: Routes = [\n  {\n    path: \"\",\n    component: HomeComponent,\n  },\n  {\n    path: \"home\",\n    component: HomeComponent,\n  },\n  {\n    path: \"how-to-use\",\n    component: HowToUseComponent,\n  },\n  {\n    path: \"documentation\",\n    component: DocsComponent,\n  },\n  {\n    path: \"visualizer\",\n    component: VisualizerComponent,\n  },\n  {\n    path: \"composer\",\n    component: ComposerComponent,\n  },\n  {\n    path: \"**\",\n    component: HomeComponent,\n  },\n];\n\nlet ROUTES: Routes = environment.mocked ? routesSimple : routesGuard;\n\n@NgModule({\n  imports: [RouterModule.forRoot(ROUTES)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/AreaApplication.html":{"url":"classes/AreaApplication.html","title":"class - AreaApplication","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  AreaApplication\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsApplication/applicationModels.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AreaDTO\n            \n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                    Opzionale\n                                color\n                            \n                            \n                                deleted\n                            \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                theater\n                            \n                            \n                                uuid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        color\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsApplication/applicationModels.ts:104\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleted\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     boolean | string\n\n                    \n                \n                        \n                            \n                                ereditato da         AreaDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         AreaDTO:140\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         AreaDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         AreaDTO:138\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                        \n                            \n                                ereditato da         AreaDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         AreaDTO:135\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         AreaDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         AreaDTO:137\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        theater\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         TheaterDTO\n\n                    \n                \n                        \n                            \n                                ereditato da         AreaDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         AreaDTO:139\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uuid\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         AreaDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         AreaDTO:136\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ReteHostInfo } from \"src/app/rete-settings/nodes/rete-nodes/host/hostNode\";\nimport { ReteNetworkInfo } from \"src/app/rete-settings/nodes/rete-nodes/network/networkNode\";\nimport { ReteSubnetInfo } from \"src/app/rete-settings/nodes/rete-nodes/subnet/subnetNode\";\nimport { ReteMirroringModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/mirroringModuleInstance/mirroringModuleInstanceNode\";\nimport { ReteTheaterInternalServiceModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/theaterInternalServiceModuleInstance/theaterInternalServiceModuleInstanceNode\";\nimport { ReteTheaterModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/theaterModuleInstance/theaterModuleInstanceNode\";\nimport { FlavorBasicInfo } from \"../modelsDTO/falvorDTO\";\nimport { HostModuleDTO } from \"../modelsDTO/hostDTO\";\nimport { ModuleNetworkInterfaceDTO, ModuleInstancePropertiesDTO, SimpleModuleDTO, TheaterInstancePropertiesDTO, ModuleInstanceDTO, ModuleDTO, SimpleAreaDTO, AreaDTO } from \"../modelsDTO/moduleDTO\";\nimport { TheaterDTO } from \"../modelsDTO/theaterDTO\";\n\n\nexport interface CommonModule {\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n}\n\n\n/**\n * Classe contenente gli attributi utilizzati per le operazioni che coinvolgono i moduli.\n * ps. Questa struttura è prettamente utilizzata nella chiamata relativa al singolo modulo.\n */\nexport class ModuleApplication extends ModuleDTO implements CommonModule {\n    imports: string[] // perchè nell'export yaml è previsto\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n}\n// PER IMPLEMENTAZIONI FUTURE, PER COERENZA, PRENDERE DIRETTAMENTE I SINGOLI NODI DALLA CHIAMATA ESCLUSIVA E NON DA QUELLA CHE RESTITUISCE TUTTI I TEATRI\n/**\n * Classe contenente gli attributi utilizzati per le operazioni che coinvolgono i moduli.\n * ps. Questa struttura è prettamente utilizzata nella chiamata che prende tutti i moduli del teatro.\n */\nexport class SimpleModuleApplication extends SimpleModuleDTO implements CommonModule {\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n}\n\n\nexport class ReteConnection {\n    from: string;\n    port_src: string;\n    to: string;\n    port_dst: string;\n}\n\nexport interface TopologyList {\n    rete: any;\n    topology?: TopologyElement\n}\nexport class TopologyElement {\n    elements: { [name: string]: any };\n    connection: ReteConnection[]\n}\n\n// apptype module topology\n\nexport class NodeTopologyElement implements TopologyElement {\n    elements: { [hostName: string]: ReteHostInfo | ReteSubnetInfo | ReteNetworkInfo };\n    connection: ReteConnection[]\n}\n\nexport interface ModuleTopology extends TopologyList {\n    rete: ReteMirroringModuleInstanceInfo | ReteTheaterInternalServiceModuleInstanceInfo | ReteTheaterModuleInstanceInfo\n    topology: NodeTopologyElement;\n}\n\nexport class ModuleInstance extends ModuleInstanceDTO implements ModuleTopology {\n    // moduleTopology data\n    rete: ReteTheaterModuleInstanceInfo | ReteTheaterInternalServiceModuleInstanceInfo | ReteMirroringModuleInstanceInfo;\n    topology: NodeTopologyElement;\n    // other data\n    moduleInfo: SimpleModuleApplication\n}\n\n// apptype theater theater\n\nexport interface TheaterTopology extends TopologyElement {\n    elements: { [hostName: string]: ModuleInstance };\n    connection: ReteConnection[];\n}\n\nexport class TheaterApplication extends TheaterDTO implements TheaterTopology {\n    // theaterTopology data\n    elements: { [hostName: string]: ModuleInstance; };\n    connection: ReteConnection[];\n    // other data\n    properties: TheaterInstancePropertiesDTO;\n    topology: TheaterTopology;\n}\n\nexport class AreaApplication extends AreaDTO {\n    color?: string;\n}\nexport class AreaColorDTO extends SimpleAreaDTO {\n    color: string;\n}\n\n\nexport class FlavorApplication extends FlavorBasicInfo {\n    flavorName: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/AreaColorDTO.html":{"url":"classes/AreaColorDTO.html","title":"class - AreaColorDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  AreaColorDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsApplication/applicationModels.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        SimpleAreaDTO\n            \n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                area\n                            \n                            \n                                description\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        color\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsApplication/applicationModels.ts:107\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        area\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleAreaDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleAreaDTO:144\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleAreaDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleAreaDTO:145\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ReteHostInfo } from \"src/app/rete-settings/nodes/rete-nodes/host/hostNode\";\nimport { ReteNetworkInfo } from \"src/app/rete-settings/nodes/rete-nodes/network/networkNode\";\nimport { ReteSubnetInfo } from \"src/app/rete-settings/nodes/rete-nodes/subnet/subnetNode\";\nimport { ReteMirroringModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/mirroringModuleInstance/mirroringModuleInstanceNode\";\nimport { ReteTheaterInternalServiceModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/theaterInternalServiceModuleInstance/theaterInternalServiceModuleInstanceNode\";\nimport { ReteTheaterModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/theaterModuleInstance/theaterModuleInstanceNode\";\nimport { FlavorBasicInfo } from \"../modelsDTO/falvorDTO\";\nimport { HostModuleDTO } from \"../modelsDTO/hostDTO\";\nimport { ModuleNetworkInterfaceDTO, ModuleInstancePropertiesDTO, SimpleModuleDTO, TheaterInstancePropertiesDTO, ModuleInstanceDTO, ModuleDTO, SimpleAreaDTO, AreaDTO } from \"../modelsDTO/moduleDTO\";\nimport { TheaterDTO } from \"../modelsDTO/theaterDTO\";\n\n\nexport interface CommonModule {\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n}\n\n\n/**\n * Classe contenente gli attributi utilizzati per le operazioni che coinvolgono i moduli.\n * ps. Questa struttura è prettamente utilizzata nella chiamata relativa al singolo modulo.\n */\nexport class ModuleApplication extends ModuleDTO implements CommonModule {\n    imports: string[] // perchè nell'export yaml è previsto\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n}\n// PER IMPLEMENTAZIONI FUTURE, PER COERENZA, PRENDERE DIRETTAMENTE I SINGOLI NODI DALLA CHIAMATA ESCLUSIVA E NON DA QUELLA CHE RESTITUISCE TUTTI I TEATRI\n/**\n * Classe contenente gli attributi utilizzati per le operazioni che coinvolgono i moduli.\n * ps. Questa struttura è prettamente utilizzata nella chiamata che prende tutti i moduli del teatro.\n */\nexport class SimpleModuleApplication extends SimpleModuleDTO implements CommonModule {\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n}\n\n\nexport class ReteConnection {\n    from: string;\n    port_src: string;\n    to: string;\n    port_dst: string;\n}\n\nexport interface TopologyList {\n    rete: any;\n    topology?: TopologyElement\n}\nexport class TopologyElement {\n    elements: { [name: string]: any };\n    connection: ReteConnection[]\n}\n\n// apptype module topology\n\nexport class NodeTopologyElement implements TopologyElement {\n    elements: { [hostName: string]: ReteHostInfo | ReteSubnetInfo | ReteNetworkInfo };\n    connection: ReteConnection[]\n}\n\nexport interface ModuleTopology extends TopologyList {\n    rete: ReteMirroringModuleInstanceInfo | ReteTheaterInternalServiceModuleInstanceInfo | ReteTheaterModuleInstanceInfo\n    topology: NodeTopologyElement;\n}\n\nexport class ModuleInstance extends ModuleInstanceDTO implements ModuleTopology {\n    // moduleTopology data\n    rete: ReteTheaterModuleInstanceInfo | ReteTheaterInternalServiceModuleInstanceInfo | ReteMirroringModuleInstanceInfo;\n    topology: NodeTopologyElement;\n    // other data\n    moduleInfo: SimpleModuleApplication\n}\n\n// apptype theater theater\n\nexport interface TheaterTopology extends TopologyElement {\n    elements: { [hostName: string]: ModuleInstance };\n    connection: ReteConnection[];\n}\n\nexport class TheaterApplication extends TheaterDTO implements TheaterTopology {\n    // theaterTopology data\n    elements: { [hostName: string]: ModuleInstance; };\n    connection: ReteConnection[];\n    // other data\n    properties: TheaterInstancePropertiesDTO;\n    topology: TheaterTopology;\n}\n\nexport class AreaApplication extends AreaDTO {\n    color?: string;\n}\nexport class AreaColorDTO extends SimpleAreaDTO {\n    color: string;\n}\n\n\nexport class FlavorApplication extends FlavorBasicInfo {\n    flavorName: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/AreaDTO.html":{"url":"classes/AreaDTO.html","title":"class - AreaDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  AreaDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsDTO/moduleDTO.ts\n        \n\n\n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                deleted\n                            \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                theater\n                            \n                            \n                                uuid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        deleted\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     boolean | string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:140\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:138\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:135\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:137\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        theater\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         TheaterDTO\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:139\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uuid\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:136\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PageableDTO, SortDTO } from './elementDTO';\nimport { NetworkDTO } from './networkDTO';\nimport { TheaterDTO } from './theaterDTO';\n\n\nexport class ModuleListDTO {\n    content: SimpleModuleDTO[]\n    pageable: PageableDTO\n    last: boolean\n    totalPages: string | number\n    totalElements: string | number\n    size: string | number\n    number: string | number\n    sort: SortDTO\n    numberOfElements: string | number\n    first: boolean\n    empty: boolean\n}\n\n\nexport class TypesCatalogueDTO {\n    group: string\n    id: string | number\n    parentId: {}\n    value: string\n}\n\nexport class ModuleClassificationDTO {\n    blueprintType: string\n    category: string\n    expectedInstanceType: string\n    id: string | number\n    mcClass: string\n    type: string\n    uuid: string\n}\n\nexport class GenericParameterDTO {\n    type: string\n    default: string\n    description: string\n}\n\nexport class ConfigurationTemplateDTO {\n    anchor_parameters: { [name: string]: GenericParameterDTO | string }\n    instance_parameters: { [name: string]: GenericParameterDTO }\n    structural_parameters: { [name: string]: GenericParameterDTO }\n    fixed_parameters: { [name: string]: GenericParameterDTO }\n    control_parameters: { [name: string]: GenericParameterDTO }\n    infrastructure_parameters: { [name: string]: GenericParameterDTO }\n    module: string\n    description: string\n    category: string\n    version: string | number\n    platform: string\n}\n\nexport class ModuleModeDTO {\n    code: string\n    id: string | number\n    name: string\n}\n\nexport class ModuleStatusDTO {\n    descriptionCode: string\n    id: string | number\n    name: string\n}\nexport class StatisticItemDTO {\n    error: string | number\n    updated: string | number\n    inserted: string | number\n}\n\nexport class SimpleModuleDTO {\n    createdBy: string\n    createdDate: string\n    description: string\n    id: string | number\n    isLocked: boolean\n    lastModifiedBy: string\n    lastModifiedDate: string\n    lockAcquiredTimestamp: string\n    lockLastUserAcquiring: string\n    lockReleasedTimestamp: string\n    name: string\n    status: ModuleStatusDTO\n    type?: string | any\n    uuid: string\n    version: string | number\n}\nexport class ModuleDTO extends SimpleModuleDTO {\n    attachments: string[]\n    author: string\n    capabilities: { [name: string]: string }\n    catalog1: TypesCatalogueDTO\n    catalog2: TypesCatalogueDTO\n    catalog3: TypesCatalogueDTO\n    classification: ModuleClassificationDTO\n    configurationTemplate: ConfigurationTemplateDTO\n    detailProperties: {}\n    input: { [name: string]: string }\n    output: { [name: string]: string }\n    mode: ModuleModeDTO\n    statistics: { [name: string]: StatisticItemDTO | string | number }\n    tags: []\n}\n\nexport class ModuleNetworkInterfaceDTO {\n    id: string | number\n    label: string\n    module: ModuleDTO\n    network: NetworkDTO\n    nodeName: string\n    type: string\n    uuid: string\n}\n\nexport class ConsumerInterfaceLinkDTO {\n    local_interface: string\n    module_instance: string\n    remote_interface: string\n}\n\nexport class ModuleInstancePropertiesDTO {\n    area: string\n    description: string\n    module: string\n    version: string | number\n    sequence: string | number\n    consumer_interfaces_link: ConsumerInterfaceLinkDTO[]\n}\n\nexport class AreaDTO {\n    id: string | number;\n    uuid: string;\n    name: string;\n    description: string;\n    theater: TheaterDTO;\n    deleted: boolean | string;\n}\n\nexport class SimpleAreaDTO {\n    area: string\n    description: string\n}\nexport class TheaterInstancePropertiesDTO {\n    mode: string\n    tags: TagTIP[]\n    areas: SimpleAreaDTO[]\n    author: string\n    version: string | number\n    description: string\n}\nexport class TagTIP{\n    tag: string\n}\nexport class ElementIntoTheaterDTO {  // goes into map in blueprint [name:string]: Module...\n    properties: ModuleInstancePropertiesDTO | TheaterInstancePropertiesDTO\n    type: string\n}\nexport class ModuleInstanceDTO {\n    properties: ModuleInstancePropertiesDTO\n    type: string\n}\nexport class TheaterInstanceDTO {\n    properties: TheaterInstancePropertiesDTO\n    type: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/AreaExport.html":{"url":"classes/AreaExport.html","title":"class - AreaExport","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  AreaExport\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsExport/theaterExport.ts\n        \n\n\n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                area\n                            \n                            \n                                description\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        area\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/theaterExport.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/theaterExport.ts:31\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ModeTypeExport, ModuleTypeExport, TheaterTypeExport, ToscaDefinitionType } from \"./TypeExport\"\n\n/**\n * Classe utilizzata per l'export. \n * Contiene le informazioni generali per il teatro che devono esserci nello standard Tosca.\n */\nexport class TheaterExport {\n    tosca_definitions_version: ToscaDefinitionType\n    description: string\n    imports: string[]\n    node_templates: { [name: string]: TheaterSimpleData | ModuleInstanceSimpleData }\n}\n\nexport class TheaterSimpleData {\n    type: TheaterTypeExport\n    properties: PropertiesTSD\n}\nexport class PropertiesTSD {\n    version: string | number\n    description: string\n    mode: ModeTypeExport\n    author: string\n    tags: TagsExport[]\n    areas: AreaExport[]\n}\nexport class TagsExport {\n    tag: string\n}\nexport class AreaExport {\n    area: string\n    description: string\n}\n\nexport class ModuleInstanceSimpleData {\n    type: ModuleTypeExport\n    properties: PropertiesMISD\n}\nexport class PropertiesMISD{\n    module: string\n    version: string | number\n    area: string\n    sequence: number\n    sources?: SourceExport[]\n    consumer_interface_link: ConsumerInterfaceLinkExport[]\n}\nexport class SourceExport{\n    module_instance: string\n    host:string\n    interfaces: string[]\n}\nexport class ConsumerInterfaceLinkExport{\n    local_interface: string\n    module_interface:string\n    remote_interface:string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"injectables/AttachmentsService.html":{"url":"injectables/AttachmentsService.html","title":"injectable - AttachmentsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AttachmentsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/api/attachments.service.ts\n        \n\n\n\n\n\n            \n    Indice\n    \n        \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getModuleAttachment\n                            \n                            \n                                    Async\n                                getTheaterAttachment\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Costruttore\n        \n            \n                \n                    \nconstructor(http: HttpClient, tokenService: TokenService, theaterService: TheaterService)\n                    \n                \n                        \n                            \n                                Definito in src/app/services/api/attachments.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parametri :\n                                    \n                                        \n                                            \n                                                Nome\n                                                    Tipo\n                                                Opzionale\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tokenService\n                                                  \n                                                        \n                                                                        TokenService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        theaterService\n                                                  \n                                                        \n                                                                        TheaterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getModuleAttachment\n                        \n                    \n                \n            \n            \n                \n                    \n                    getModuleAttachment(module_id: string | number, attachments_uuid: string | number)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/api/attachments.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    module_id\n                                    \n                                            string | number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    attachments_uuid\n                                    \n                                            string | number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getTheaterAttachment\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTheaterAttachment(theater_id: string | number)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/api/attachments.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    theater_id\n                                    \n                                            string | number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { TokenService } from '../token/token.service';\nimport { TheaterService } from './theater.service';\nimport { stringify as YAMLstringfy } from \"json-to-pretty-yaml\"\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AttachmentsService {\n\n  constructor(private http: HttpClient, private tokenService: TokenService, private theaterService: TheaterService) { }\n\n  async getModuleAttachment(module_id: string | number, attachments_uuid: string | number) {\n    let link: string = environment.getModuleAttachment(module_id, attachments_uuid);\n    let x = this.http.get(link, { responseType: 'arraybuffer' });\n    x.subscribe(\n      data => {\n        const blob = new Blob([data], {\n          type: 'application/zip'\n        });\n        const url = window.URL.createObjectURL(blob);\n        // window.open(url);\n        const a = document.createElement('a');\n        document.body.appendChild(a);\n        a.classList.add('d-none');\n        a.href = url;\n        a.click();\n        window.URL.revokeObjectURL(url);\n        a.remove();\n      }\n    )\n    return x;\n  }\n\n  async getTheaterAttachment(theater_id: string|number){\n    let link: string = environment.getTheaterAttachment(theater_id);\n    let x = this.http.get(link, { responseType: 'arraybuffer' });\n    x.subscribe(\n      data => {\n        const blob = new Blob([data], {\n          type: 'application/zip'\n        });\n        const url = window.URL.createObjectURL(blob);\n        // window.open(url);\n        const a = document.createElement('a');\n        document.body.appendChild(a);\n        a.classList.add('d-none');\n        a.href = url;\n        a.click();\n        window.URL.revokeObjectURL(url);\n        a.remove();\n      }\n    )\n    return x;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"injectables/AuthGuard.html":{"url":"injectables/AuthGuard.html","title":"injectable - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/utility/app.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        KeycloakAuthGuard\n            \n\n\n            \n    Indice\n    \n        \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                isAccessAllowed\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Costruttore\n        \n            \n                \n                    \nconstructor(router: Router, keycloak: KeycloakService)\n                    \n                \n                        \n                            \n                                Definito in src/app/utility/app.guard.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parametri :\n                                    \n                                        \n                                            \n                                                Nome\n                                                    Tipo\n                                                Opzionale\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        keycloak\n                                                  \n                                                        \n                                                                    KeycloakService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        isAccessAllowed\n                        \n                    \n                \n            \n            \n                \n                    \n                    isAccessAllowed(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Definito in src/app/utility/app.guard.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n    ActivatedRouteSnapshot,\n    Router,\n    RouterStateSnapshot,\n} from '@angular/router';\nimport { KeycloakAuthGuard, KeycloakService } from 'keycloak-angular';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AuthGuard extends KeycloakAuthGuard {\n    constructor(\n        protected readonly router: Router,\n        protected readonly keycloak: KeycloakService\n    ) {\n        super(router, keycloak);\n    }\n\n    public async isAccessAllowed(\n        route: ActivatedRouteSnapshot,\n        state: RouterStateSnapshot\n    ): Promise {\n        // Force the user to log in if currently unauthenticated.\n        if (!this.authenticated) {\n            await this.keycloak.login({\n                redirectUri: window.location.origin + state.url,\n            });\n        }\n\n        // Get the roles required from the route.\n        const requiredRoles = route.data.roles;\n\n        // Allow the user to to proceed if no additional roles are required to access the route.\n        if (!(requiredRoles instanceof Array) || requiredRoles.length === 0) {\n            return true;\n        }\n\n        // Allow the user to proceed if all the required roles are present.\n        return requiredRoles.every((role) => this.roles.includes(role));\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/BlueprintFileDTO.html":{"url":"classes/BlueprintFileDTO.html","title":"class - BlueprintFileDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  BlueprintFileDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsDTO/theaterDTO.ts\n        \n\n\n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                imports\n                            \n                            \n                                node_templates\n                            \n                            \n                                tosca_definitions_version\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/theaterDTO.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        imports\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/theaterDTO.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        node_templates\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     literal type\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/theaterDTO.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tosca_definitions_version\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/theaterDTO.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ElementIntoTheaterDTO, ModuleInstanceDTO, TheaterInstanceDTO } from \"./moduleDTO\"\n\nexport class TagCatalogueDTO {\n    description: string\n    id: string | number\n    name: string\n}\n\nexport class TheatreStatusDTO {\n    code: string\n    id: string | number\n    name: string\n}\n\nexport class DeployInstanceDTO {\n    moduleInstanceConfigurationUUID?: string\n    moduleInstanceName: string\n    moduleInstanceUUID: string\n    moduleUUID: string\n}\n\nexport class BlueprintFileDTO {\n    description: string\n    imports: string[]\n    node_templates: {[name:string]:ModuleInstanceDTO|TheaterInstanceDTO}\n    tosca_definitions_version: string\n}\n\nexport class NameMappingDTO {\n    display_name: string\n    module_instance_name: string\n    module_name: string\n    node_template_name: string\n}\nexport class EntityNameMappingFileDTO {\n    name_mapping: NameMappingDTO[]\n}\nexport class TheaterDTO {\n    author: string\n    blueprintFile: BlueprintFileDTO\n    blueprintUUID: string | number\n    createdBy: string\n    createdDate: string\n    deploymentSequence: {[index:string]:DeployInstanceDTO} //tosee\n    description: string\n    entityNameMappingFile: EntityNameMappingFileDTO\n    id: string | number\n    isLocked: boolean\n    lastModifiedBy: string\n    lastModifiedDate: string\n    lockAcquiredTimestamp: string\n    lockLastUserAcquiring: string\n    lockReleasedTimestamp: string\n    name: string\n    status: TheatreStatusDTO\n    tags: TagCatalogueDTO[]\n    uuid: string\n    version: string\n}\n\nexport const TheaterType: string = \"sysman.creo.nodes.Theater\";\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/BorderNetworkDTO.html":{"url":"classes/BorderNetworkDTO.html","title":"class - BorderNetworkDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  BorderNetworkDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsDTO/networkDTO.ts\n        \n\n\n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                bnName\n                            \n                            \n                                id\n                            \n                            \n                                subnet\n                            \n                            \n                                uuid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        bnName\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/networkDTO.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/networkDTO.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subnet\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     literal type | null\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/networkDTO.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uuid\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/networkDTO.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class NetworkDTO {\n    id: string | number\n    name: string\n    uuid: string\n}\n\nexport class BorderNetworkDTO {\n    bnName: string\n    id: string | number\n    subnet: {} | null\n    uuid: string | number\n}\n\nexport class NetOSRouterDTO {\n    borderNetwork: BorderNetworkDTO\n    id: string | number\n    subnet: {} | null\n    uuid: string | number\n}\n\nexport class SubnetDTO {\n    allocationPool: string\n    borderNetwork: BorderNetworkDTO\n    cidr: string\n    dns: string\n    gateway: string\n    id: string | number\n    isDhcp: boolean\n    name: string\n    network: NetworkDTO\n    router: NetOSRouterDTO\n    uuid: string\n    version: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"interfaces/CommonModule.html":{"url":"interfaces/CommonModule.html","title":"interface - CommonModule","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfacce\n  \n  CommonModule\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsApplication/applicationModels.ts\n        \n\n\n\n\n        \n            Indice\n            \n                \n                    \n                        \n                            Proprietà\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            host_number\n                                        \n                                \n                                \n                                        \n                                            hosts\n                                        \n                                \n                                \n                                        \n                                            interfaces\n                                        \n                                \n                                \n                                        \n                                            network_number\n                                        \n                                \n                                \n                                        \n                                            subnet_number\n                                        \n                                \n                                \n                                        \n                                            topology\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Proprietà\n                    \n                        \n                                \n                                    \n                                        \n                                        host_number\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        host_number:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hosts\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hosts:     HostModuleDTO[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :     HostModuleDTO[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        interfaces\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        interfaces:         ModuleNetworkInterfaceDTO[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         ModuleNetworkInterfaceDTO[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        network_number\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        network_number:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subnet_number\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subnet_number:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        topology\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        topology:         NodeTopologyElement\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         NodeTopologyElement\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ReteHostInfo } from \"src/app/rete-settings/nodes/rete-nodes/host/hostNode\";\nimport { ReteNetworkInfo } from \"src/app/rete-settings/nodes/rete-nodes/network/networkNode\";\nimport { ReteSubnetInfo } from \"src/app/rete-settings/nodes/rete-nodes/subnet/subnetNode\";\nimport { ReteMirroringModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/mirroringModuleInstance/mirroringModuleInstanceNode\";\nimport { ReteTheaterInternalServiceModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/theaterInternalServiceModuleInstance/theaterInternalServiceModuleInstanceNode\";\nimport { ReteTheaterModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/theaterModuleInstance/theaterModuleInstanceNode\";\nimport { FlavorBasicInfo } from \"../modelsDTO/falvorDTO\";\nimport { HostModuleDTO } from \"../modelsDTO/hostDTO\";\nimport { ModuleNetworkInterfaceDTO, ModuleInstancePropertiesDTO, SimpleModuleDTO, TheaterInstancePropertiesDTO, ModuleInstanceDTO, ModuleDTO, SimpleAreaDTO, AreaDTO } from \"../modelsDTO/moduleDTO\";\nimport { TheaterDTO } from \"../modelsDTO/theaterDTO\";\n\n\nexport interface CommonModule {\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n}\n\n\n/**\n * Classe contenente gli attributi utilizzati per le operazioni che coinvolgono i moduli.\n * ps. Questa struttura è prettamente utilizzata nella chiamata relativa al singolo modulo.\n */\nexport class ModuleApplication extends ModuleDTO implements CommonModule {\n    imports: string[] // perchè nell'export yaml è previsto\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n}\n// PER IMPLEMENTAZIONI FUTURE, PER COERENZA, PRENDERE DIRETTAMENTE I SINGOLI NODI DALLA CHIAMATA ESCLUSIVA E NON DA QUELLA CHE RESTITUISCE TUTTI I TEATRI\n/**\n * Classe contenente gli attributi utilizzati per le operazioni che coinvolgono i moduli.\n * ps. Questa struttura è prettamente utilizzata nella chiamata che prende tutti i moduli del teatro.\n */\nexport class SimpleModuleApplication extends SimpleModuleDTO implements CommonModule {\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n}\n\n\nexport class ReteConnection {\n    from: string;\n    port_src: string;\n    to: string;\n    port_dst: string;\n}\n\nexport interface TopologyList {\n    rete: any;\n    topology?: TopologyElement\n}\nexport class TopologyElement {\n    elements: { [name: string]: any };\n    connection: ReteConnection[]\n}\n\n// apptype module topology\n\nexport class NodeTopologyElement implements TopologyElement {\n    elements: { [hostName: string]: ReteHostInfo | ReteSubnetInfo | ReteNetworkInfo };\n    connection: ReteConnection[]\n}\n\nexport interface ModuleTopology extends TopologyList {\n    rete: ReteMirroringModuleInstanceInfo | ReteTheaterInternalServiceModuleInstanceInfo | ReteTheaterModuleInstanceInfo\n    topology: NodeTopologyElement;\n}\n\nexport class ModuleInstance extends ModuleInstanceDTO implements ModuleTopology {\n    // moduleTopology data\n    rete: ReteTheaterModuleInstanceInfo | ReteTheaterInternalServiceModuleInstanceInfo | ReteMirroringModuleInstanceInfo;\n    topology: NodeTopologyElement;\n    // other data\n    moduleInfo: SimpleModuleApplication\n}\n\n// apptype theater theater\n\nexport interface TheaterTopology extends TopologyElement {\n    elements: { [hostName: string]: ModuleInstance };\n    connection: ReteConnection[];\n}\n\nexport class TheaterApplication extends TheaterDTO implements TheaterTopology {\n    // theaterTopology data\n    elements: { [hostName: string]: ModuleInstance; };\n    connection: ReteConnection[];\n    // other data\n    properties: TheaterInstancePropertiesDTO;\n    topology: TheaterTopology;\n}\n\nexport class AreaApplication extends AreaDTO {\n    color?: string;\n}\nexport class AreaColorDTO extends SimpleAreaDTO {\n    color: string;\n}\n\n\nexport class FlavorApplication extends FlavorBasicInfo {\n    flavorName: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"components/ComposerComponent.html":{"url":"components/ComposerComponent.html","title":"component - ComposerComponent","body":"\n                   \n\n\n\n\n\n  Componenti\n  \n  ComposerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/composer-system/composer/composer.component.ts\n\n\n\n    \n        Descrizione\n    \n    \n        Componente che ha come scopo di switchare l'ambiente di costruzione moduli e teatri in base ai dati passati.\n\n    \n\n\n    \n        Implementa\n    \n    \n                    OnInit\n    \n\n\n\n    Metadati\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-composer\n            \n\n            \n                styleUrls\n                ./composer.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./composer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                active\n                            \n                            \n                                    Protected\n                                author\n                            \n                            \n                                    Protected\n                                data\n                            \n                            \n                                    Protected\n                                dataFromRouter\n                            \n                            \n                                    Protected\n                                description\n                            \n                            \n                                    Protected\n                                flavor\n                            \n                            \n                                    Protected\n                                hasFile\n                            \n                            \n                                    Protected\n                                hasproblem\n                            \n                            \n                                    Protected\n                                MODULE\n                            \n                            \n                                    Protected\n                                modulesDict\n                            \n                            \n                                    Protected\n                                name\n                            \n                            \n                                    Protected\n                                THEATER\n                            \n                            \n                                    Protected\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                gohome\n                            \n                            \n                                    Async\n                                initMODULE\n                            \n                            \n                                    Async\n                                initTHEATER\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Costruttore\n        \n            \n                \n                    \nconstructor(router: Router, parseService: ParseService, spinnerService: SpinnerService, storageService: StorageService)\n                    \n                \n                        \n                            \n                                Definito in src/app/composer-system/composer/composer.component.ts:74\n                            \n                        \n\n                \n                    \n                            Costruttore di ComposerComponent.\nSi occupa di prendere i dati di route url e valorizzare le rispettive variabili.\n\n                            \n                                    Parametri :\n                                    \n                                        \n                                            \n                                                Nome\n                                                    Tipo\n                                                Opzionale\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parseService\n                                                  \n                                                        \n                                                                        ParseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        spinnerService\n                                                  \n                                                        \n                                                                        SpinnerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        gohome\n                        \n                    \n                \n            \n            \n                \n                    \n                    gohome()\n                \n            \n\n\n            \n                \n                    Definito in src/app/composer-system/composer/composer.component.ts:198\n                \n            \n\n\n            \n                \n                    Funzione che esegue una redirezione alla pagine home\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        initMODULE\n                        \n                    \n                \n            \n            \n                \n                    \n                    initMODULE()\n                \n            \n\n\n            \n                \n                    Definito in src/app/composer-system/composer/composer.component.ts:140\n                \n            \n\n\n            \n                \n                    Funzione che esegue tutte le funzioni di inizializzazione, reperimento e filtraggio dati da poter essere passati alla componente di ModuleComposer.\nEsegue anche le attività di spinner-loading.\nSee {ReteModuleComposer}\nSee {SpinnerService}\nSee {parseService}\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        initTHEATER\n                        \n                    \n                \n            \n            \n                \n                    \n                    initTHEATER()\n                \n            \n\n\n            \n                \n                    Definito in src/app/composer-system/composer/composer.component.ts:170\n                \n            \n\n\n            \n                \n                    Funzione che esegue tutte le funzioni di inizializzazione, reperimento e filtraggio dati da poter essere passati alla componente di TheaterComposer.\nEsegue anche le attività di spinner-loading.\nSee {ReteTheaterComposer}\nSee {SpinnerService}\nSee {parseService}\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Definito in src/app/composer-system/composer/composer.component.ts:118\n                \n            \n\n\n            \n                \n                    Funzione richiamata all'inizializzazione della componente ComposerComponent.\nRichiama le funzioni adeguate in base al tipo di componente Modulo o Teatro scelto per il design.\nSee {initMODULE}\nSee {initTHEATER}\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        active\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                \n                    \n                        Valore predefinito : false\n                    \n                \n                    \n                        \n                                Definito in src/app/composer-system/composer/composer.component.ts:47\n                        \n                    \n\n            \n                \n                    Variabile che indica lo stato di reperimento dei dati prima di visualizzare le componenti di costruzione\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        author\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/composer-system/composer/composer.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     TheaterApplication | ModuleApplication\n\n                    \n                \n                    \n                        \n                                Definito in src/app/composer-system/composer/composer.component.ts:74\n                        \n                    \n\n            \n                \n                    Variabile che memorizza il teatro o il modulo importato da un file\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        dataFromRouter\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         DataRouteComposer\n\n                    \n                \n                    \n                        \n                                Definito in src/app/composer-system/composer/composer.component.ts:25\n                        \n                    \n\n            \n                \n                    Variabile che ha come scopo prendere i dati passati come url-parameters\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/composer-system/composer/composer.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        flavor\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         FlavorApplication[]\n\n                    \n                \n                \n                    \n                        Valore predefinito : []\n                    \n                \n                    \n                        \n                                Definito in src/app/composer-system/composer/composer.component.ts:54\n                        \n                    \n\n            \n                \n                    Variabile che viene valorizzata con i flavor reperiti per poter essere utilizzata dalla componente di costruzione del moduli\nSee {ReteModuleComposer}\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        hasFile\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                \n                    \n                        Valore predefinito : false\n                    \n                \n                    \n                        \n                                Definito in src/app/composer-system/composer/composer.component.ts:67\n                        \n                    \n\n            \n                \n                    Variabile che viene valorizzata nel momento in cui si presenta il caso di design da un file preso in input\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        hasproblem\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                \n                    \n                        Valore predefinito : false\n                    \n                \n                    \n                        \n                                Definito in src/app/composer-system/composer/composer.component.ts:40\n                        \n                    \n\n            \n                \n                    Variabile che viene valorizzata a true se si è verificato un errore.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        MODULE\n                        \n                    \n                \n            \n                \n                    \n                        Valore predefinito : SubjectType.MODULE\n                    \n                \n                    \n                        \n                                Definito in src/app/composer-system/composer/composer.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        modulesDict\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     literal type\n\n                    \n                \n                    \n                        \n                                Definito in src/app/composer-system/composer/composer.component.ts:61\n                        \n                    \n\n            \n                \n                    Variabile che viene valorizzata come dizionario di moduli utilizzata dalla componente di costruzione del teatro.\nSee {ReteTheaterComposer}\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/composer-system/composer/composer.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        THEATER\n                        \n                    \n                \n            \n                \n                    \n                        Valore predefinito : SubjectType.THEATER\n                    \n                \n                    \n                        \n                                Definito in src/app/composer-system/composer/composer.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         SubjectType\n\n                    \n                \n                    \n                        \n                                Definito in src/app/composer-system/composer/composer.component.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { from } from 'rxjs';\nimport { DataRouteComposer, SubjectType } from 'src/app/models/appType';\nimport { ParseService } from 'src/app/services/application/parse/parse.service';\nimport { SpinnerService } from 'src/app/services/application/spinner/spinner.service';\nimport { StorageService } from 'src/app/services/application/storage/storage.service';\nimport { FlavorApplication, ModuleApplication, ModuleInstance, TheaterApplication } from 'src/app/services/modelsApplication/applicationModels';\n\n\n/**\n * Componente che ha come scopo di switchare l'ambiente di costruzione moduli e teatri in base ai dati passati.\n */\n@Component({\n  selector: 'app-composer',\n  templateUrl: './composer.component.html',\n  styleUrls: ['./composer.component.sass']\n})\nexport class ComposerComponent implements OnInit {\n\n  /**\n   * Variabile che ha come scopo prendere i dati passati come url-parameters\n   * @type {DataRouteComposer} \n   */\n  protected dataFromRouter: DataRouteComposer;\n  // variabili istanziate come valori proveniente dalla dataFormRouter\n  protected name: string;\n  protected description: string;\n  protected author: string;\n  protected type: SubjectType;\n  // variabili che indicano i tipi - moduli e teatro\n  protected MODULE = SubjectType.MODULE;\n  protected THEATER = SubjectType.THEATER;\n\n  /**\n   * Variabile che viene valorizzata a true se si è verificato un errore.\n   * @type {boolean}\n   * @default false\n   */\n  protected hasproblem: boolean = false;\n\n  /**\n   * Variabile che indica lo stato di reperimento dei dati prima di visualizzare le componenti di costruzione\n   * @type  {boolean}\n   * @default false\n   */\n  protected active: boolean = false;\n\n  /**\n   * Variabile che viene valorizzata con i flavor reperiti per poter essere utilizzata dalla componente di costruzione del moduli\n   * @type {FlavorApplication}\n   * @see {ReteModuleComposer}\n   */\n  protected flavor: FlavorApplication[] = [];\n\n  /**\n   * Variabile che viene valorizzata come dizionario di moduli utilizzata dalla componente di costruzione del teatro.\n   * @type { [name: string]: ModuleInstance }\n   * @see {ReteTheaterComposer}\n   */\n  protected modulesDict: { [name: string]: ModuleInstance };\n\n  /**\n   * Variabile che viene valorizzata nel momento in cui si presenta il caso di design da un file preso in input\n   * @type {boolean} \n   */\n  protected hasFile: boolean = false;\n\n  /**\n   * Variabile che memorizza il teatro o il modulo importato da un file\n   * @type {TheaterApplication}\n   * @type {ModuleApplication}\n   */\n  protected data: TheaterApplication | ModuleApplication;\n\n\n  /**\n   * Costruttore di ComposerComponent.\n   * Si occupa di prendere i dati di route url e valorizzare le rispettive variabili.\n   * @param router \n   * @param parseService \n   * @param spinnerService \n   * @param storageService \n   */\n  constructor(\n    private router: Router,\n    private parseService: ParseService,\n    private spinnerService: SpinnerService,\n    private storageService: StorageService\n  ) {\n\n    this.dataFromRouter = this.router.getCurrentNavigation().extras.state as DataRouteComposer\n    if (this.dataFromRouter) {\n      this.name = this.dataFromRouter.name as string;\n      this.description = this.dataFromRouter.description as string;\n      this.author = this.dataFromRouter.author as string;\n      this.type = this.dataFromRouter.type as SubjectType;\n    }\n    // se non è stato inizializzato il nome e ci sono dati nello storage\n    if (!this.name && this.storageService.data) {\n      this.hasFile = true;\n      this.data = this.storageService.data;\n      this.storageService.data = undefined; // consumo l'elemento\n    }\n    \n    if(!this.name && !this.data){\n      this.hasproblem = true;\n    }\n\n  }\n\n  /**\n   * Funzione richiamata all'inizializzazione della componente ComposerComponent.\n   * Richiama le funzioni adeguate in base al tipo di componente Modulo o Teatro scelto per il design.\n   * @see {initMODULE}\n   * @see {initTHEATER}\n   */\n  ngOnInit() {\n\n    if (this.type === this.MODULE) {\n      this.initMODULE();\n    }\n    else if (this.type === this.THEATER) {\n      this.initTHEATER();\n    }\n    else {\n      this.hasproblem = true;\n    }\n\n  }\n\n\n  /**\n   * Funzione che esegue tutte le funzioni di inizializzazione, reperimento e filtraggio dati da poter essere passati alla componente di ModuleComposer.\n   * Esegue anche le attività di spinner-loading.\n   * @see {ReteModuleComposer}\n   * @see {SpinnerService}\n   * @see {parseService}\n   */\n  async initMODULE() {\n    this.spinnerService.setSpinner(true, \"Loading canvas element\");\n    if (this.hasFile) {\n      this.data = this.data as ModuleApplication;\n      // controllo un campo per vedere se è stato passato correttamente il file in json->ModuleApplication\n      try {\n        let t = this.data.topology.elements;\n      } catch {\n        this.hasproblem = true;\n        this.spinnerService.setSpinner(false);\n        return;\n      }\n    }\n    from(\n      this.parseService.parseFlavorForModuleComposer()\n    )\n      .subscribe(el => {\n        this.flavor = el\n        this.spinnerService.setSpinner(false);\n        this.active = true;\n      });\n  }\n\n  /**\n   * Funzione che esegue tutte le funzioni di inizializzazione, reperimento e filtraggio dati da poter essere passati alla componente di TheaterComposer.\n   * Esegue anche le attività di spinner-loading.\n   * @see {ReteTheaterComposer}\n   * @see {SpinnerService}\n   * @see {parseService}\n   */\n  async initTHEATER() {\n    this.spinnerService.setSpinner(true, \"Getting Theater modules\")\n    if (this.hasFile) {\n      this.data = this.data as TheaterApplication;\n      // controllo un campo per vedere se è stato passato correttamente il file in json->TheaterApplication\n      try {\n        let t = this.data.topology.elements;\n      } catch {\n        this.spinnerService.setSpinner(false);\n        this.hasproblem = true;\n        return;\n      }\n    }\n    from(\n      this.parseService.parseModuleForTheaterComposer()\n    )\n      .subscribe(\n        el => {\n          this.modulesDict = el;\n          this.spinnerService.setSpinner(false);\n          this.active = true;\n        }\n      )\n  }\n\n  /**\n   * Funzione che esegue una redirezione alla pagine home\n   */\n  public gohome() {\n    this.router.navigate(['/home']);\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n\n\n\n\n    \n        \n            \n                \n                 A Problem occurred when loading designer system \n            \n            \n                \n                     Go home \n            \n        \n    \n\n    \n\n    \n                \n                    ./composer.component.sass\n                \n                .oh-imp\n    overflow: hidden !important\n    \n\n    \n        \n        \n            \n                Legenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento html con direttive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                         A Problem occurred when loading designer system                                                              Go home                         '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ComposerComponent', 'selector': 'app-composer'},{'name': 'ControlTemplate', 'selector': ''},{'name': 'DataInputComponent', 'selector': 'app-data-input'},{'name': 'DataInputV2Component', 'selector': 'app-data-input-v2'},{'name': 'DataItemComponent', 'selector': 'app-window-item'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HostComponent', 'selector': ''},{'name': 'HowToUseComponent', 'selector': 'app-how-to-use'},{'name': 'MirroringModuleInstanceComponent', 'selector': ''},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavbarElementComponent', 'selector': 'app-navbar-element'},{'name': 'NetworkComponent', 'selector': ''},{'name': 'OffcanvasComponent', 'selector': 'app-offcanvas'},{'name': 'ReteModuleComposerComponent', 'selector': 'app-rete-module-composer'},{'name': 'ReteModuleVisualizerComponent', 'selector': 'app-rete-module-visualizer'},{'name': 'ReteTheaterComposerComponent', 'selector': 'app-rete-theater-composer'},{'name': 'ReteTheaterVisualizerComponent', 'selector': 'app-rete-theater-visualizer'},{'name': 'SubnetComponent', 'selector': ''},{'name': 'TabnavComponent', 'selector': 'app-tabnav'},{'name': 'TheaterInternalServiceModuleInstanceComponent', 'selector': ''},{'name': 'TheaterModuleInstanceComponent', 'selector': ''},{'name': 'UnderbarComponent', 'selector': 'app-underbar'},{'name': 'VisualizerComponent', 'selector': 'app-displayer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ComposerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/ConfigurationTemplateDTO.html":{"url":"classes/ConfigurationTemplateDTO.html","title":"class - ConfigurationTemplateDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  ConfigurationTemplateDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsDTO/moduleDTO.ts\n        \n\n\n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                anchor_parameters\n                            \n                            \n                                category\n                            \n                            \n                                control_parameters\n                            \n                            \n                                description\n                            \n                            \n                                fixed_parameters\n                            \n                            \n                                infrastructure_parameters\n                            \n                            \n                                instance_parameters\n                            \n                            \n                                module\n                            \n                            \n                                platform\n                            \n                            \n                                structural_parameters\n                            \n                            \n                                version\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        anchor_parameters\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     literal type\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        control_parameters\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     literal type\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fixed_parameters\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     literal type\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        infrastructure_parameters\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     literal type\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        instance_parameters\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     literal type\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        platform\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        structural_parameters\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     literal type\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:54\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PageableDTO, SortDTO } from './elementDTO';\nimport { NetworkDTO } from './networkDTO';\nimport { TheaterDTO } from './theaterDTO';\n\n\nexport class ModuleListDTO {\n    content: SimpleModuleDTO[]\n    pageable: PageableDTO\n    last: boolean\n    totalPages: string | number\n    totalElements: string | number\n    size: string | number\n    number: string | number\n    sort: SortDTO\n    numberOfElements: string | number\n    first: boolean\n    empty: boolean\n}\n\n\nexport class TypesCatalogueDTO {\n    group: string\n    id: string | number\n    parentId: {}\n    value: string\n}\n\nexport class ModuleClassificationDTO {\n    blueprintType: string\n    category: string\n    expectedInstanceType: string\n    id: string | number\n    mcClass: string\n    type: string\n    uuid: string\n}\n\nexport class GenericParameterDTO {\n    type: string\n    default: string\n    description: string\n}\n\nexport class ConfigurationTemplateDTO {\n    anchor_parameters: { [name: string]: GenericParameterDTO | string }\n    instance_parameters: { [name: string]: GenericParameterDTO }\n    structural_parameters: { [name: string]: GenericParameterDTO }\n    fixed_parameters: { [name: string]: GenericParameterDTO }\n    control_parameters: { [name: string]: GenericParameterDTO }\n    infrastructure_parameters: { [name: string]: GenericParameterDTO }\n    module: string\n    description: string\n    category: string\n    version: string | number\n    platform: string\n}\n\nexport class ModuleModeDTO {\n    code: string\n    id: string | number\n    name: string\n}\n\nexport class ModuleStatusDTO {\n    descriptionCode: string\n    id: string | number\n    name: string\n}\nexport class StatisticItemDTO {\n    error: string | number\n    updated: string | number\n    inserted: string | number\n}\n\nexport class SimpleModuleDTO {\n    createdBy: string\n    createdDate: string\n    description: string\n    id: string | number\n    isLocked: boolean\n    lastModifiedBy: string\n    lastModifiedDate: string\n    lockAcquiredTimestamp: string\n    lockLastUserAcquiring: string\n    lockReleasedTimestamp: string\n    name: string\n    status: ModuleStatusDTO\n    type?: string | any\n    uuid: string\n    version: string | number\n}\nexport class ModuleDTO extends SimpleModuleDTO {\n    attachments: string[]\n    author: string\n    capabilities: { [name: string]: string }\n    catalog1: TypesCatalogueDTO\n    catalog2: TypesCatalogueDTO\n    catalog3: TypesCatalogueDTO\n    classification: ModuleClassificationDTO\n    configurationTemplate: ConfigurationTemplateDTO\n    detailProperties: {}\n    input: { [name: string]: string }\n    output: { [name: string]: string }\n    mode: ModuleModeDTO\n    statistics: { [name: string]: StatisticItemDTO | string | number }\n    tags: []\n}\n\nexport class ModuleNetworkInterfaceDTO {\n    id: string | number\n    label: string\n    module: ModuleDTO\n    network: NetworkDTO\n    nodeName: string\n    type: string\n    uuid: string\n}\n\nexport class ConsumerInterfaceLinkDTO {\n    local_interface: string\n    module_instance: string\n    remote_interface: string\n}\n\nexport class ModuleInstancePropertiesDTO {\n    area: string\n    description: string\n    module: string\n    version: string | number\n    sequence: string | number\n    consumer_interfaces_link: ConsumerInterfaceLinkDTO[]\n}\n\nexport class AreaDTO {\n    id: string | number;\n    uuid: string;\n    name: string;\n    description: string;\n    theater: TheaterDTO;\n    deleted: boolean | string;\n}\n\nexport class SimpleAreaDTO {\n    area: string\n    description: string\n}\nexport class TheaterInstancePropertiesDTO {\n    mode: string\n    tags: TagTIP[]\n    areas: SimpleAreaDTO[]\n    author: string\n    version: string | number\n    description: string\n}\nexport class TagTIP{\n    tag: string\n}\nexport class ElementIntoTheaterDTO {  // goes into map in blueprint [name:string]: Module...\n    properties: ModuleInstancePropertiesDTO | TheaterInstancePropertiesDTO\n    type: string\n}\nexport class ModuleInstanceDTO {\n    properties: ModuleInstancePropertiesDTO\n    type: string\n}\nexport class TheaterInstanceDTO {\n    properties: TheaterInstancePropertiesDTO\n    type: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/ConstraintsMSD.html":{"url":"classes/ConstraintsMSD.html","title":"class - ConstraintsMSD","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  ConstraintsMSD\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsExport/moduleExport.ts\n        \n\n\n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                interface_constraints\n                            \n                            \n                                module_constraints\n                            \n                            \n                                network_constraints\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        interface_constraints\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         InterfaceConstraints[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        module_constraints\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ModuleConstraints[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        network_constraints\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         NetworkConstraints[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:37\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ModeTypeExport, ModuleTypeExport, NetworkTypeExport, NodeTypeExport, PortTypeExport, RelationshipsTypeExport, SubnetTypeExport, ToscaDefinitionType } from \"./TypeExport\"\n\n\n/**\n * Classe utilizzata per l'export. \n * Contiene le informazioni generali per il modulo che devono esserci nello standard Tosca.\n */\nexport class ModuleExport {\n    tosca_definitions_version: ToscaDefinitionType\n    description: string\n    imports: string[]\n    node_templates: { [name: string]: ModuleSimpleData | NodeSimpleData | PortSimpleData | NetworkSimpleData | SubnetSimpleData }\n    dsl_definition: any | null; //future\n    capabilites: any | null //future\n    outputs: any | null //future\n}\n\n\nexport class ModuleSimpleData {\n    type: ModuleTypeExport\n    properties: PropertiesMSD\n}\nexport class PropertiesMSD {\n    mode: ModeTypeExport\n    description: string\n    version: string | number\n    constraints: ConstraintsMSD\n    interface_networks: {\n        providers: InterfaceNetworksProvider[]\n        consumers: InterfaceNetworksConsumer[]\n    }\n    virtual_machines: VirtualMachine[]\n}\nexport class ConstraintsMSD {\n    interface_constraints: InterfaceConstraints[]\n    module_constraints: ModuleConstraints[]\n    network_constraints: NetworkConstraints[]\n}\nexport class InterfaceConstraints {\n    local_interface: string\n    multiple_mode: boolean = false //future\n    module_name: string\n    compatibility: string = \"1.0\" // future\n    remote_interface: string\n}\nexport class ModuleConstraints {\n}\nexport class NetworkConstraints {\n}\n\nexport class InterfaceNetworksProvider {\n    interface: string\n    network: string\n    tag: string\n    subnets: SubnetExport[]\n}\nexport class InterfaceNetworksConsumer {\n    interface: string\n    network: string\n    tag: string\n    subnets: SubnetExport[]\n}\n\nexport class VirtualMachine {\n    virtual_machine: string\n    ports: VirtualMachinePorts[]\n}\nexport class VirtualMachinePorts {\n    port: string\n    network: string\n    subnets: SubnetExport[]\n}\n\nexport class SubnetExport {\n    subnet: string;\n}\n\nexport class NodeSimpleData {\n    type: NodeTypeExport\n    properties: any | null // future\n    interfaces: any | null // future\n    relationships: RelationshipsExport[]\n}\n\nexport class RelationshipsExport {\n    type: RelationshipsTypeExport\n    target: string\n}\n\nexport class PortSimpleData {\n    type: PortTypeExport\n    relationships: RelationshipsExport[]\n}\n\nexport class NetworkSimpleData {\n    type: NetworkTypeExport\n    properties: PropertiesNSD\n}\nexport class PropertiesNSD {\n    openstack_config?: any | null // future\n    use_external_resource?: boolean | null // future\n    resource_id?: any | null // future\n}\n\n\nexport class SubnetSimpleData {\n    type: SubnetTypeExport\n    relationships: RelationshipsExport[]\n    properties: PropertiesSSD\n}\nexport class PropertiesSSD {\n    subnet?: {\n        ip_version: string | number\n        cidr: string\n        enable_dhcp: boolean\n        gateway_ip?: any | null // future\n    }\n    openstack_config?: any | null // future\n    use_external_resource?: boolean | null // future\n    resource_id?: any | null // future\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/ConsumerInterfaceLinkDTO.html":{"url":"classes/ConsumerInterfaceLinkDTO.html","title":"class - ConsumerInterfaceLinkDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  ConsumerInterfaceLinkDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsDTO/moduleDTO.ts\n        \n\n\n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                local_interface\n                            \n                            \n                                module_instance\n                            \n                            \n                                remote_interface\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        local_interface\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:120\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        module_instance\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:121\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remote_interface\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:122\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PageableDTO, SortDTO } from './elementDTO';\nimport { NetworkDTO } from './networkDTO';\nimport { TheaterDTO } from './theaterDTO';\n\n\nexport class ModuleListDTO {\n    content: SimpleModuleDTO[]\n    pageable: PageableDTO\n    last: boolean\n    totalPages: string | number\n    totalElements: string | number\n    size: string | number\n    number: string | number\n    sort: SortDTO\n    numberOfElements: string | number\n    first: boolean\n    empty: boolean\n}\n\n\nexport class TypesCatalogueDTO {\n    group: string\n    id: string | number\n    parentId: {}\n    value: string\n}\n\nexport class ModuleClassificationDTO {\n    blueprintType: string\n    category: string\n    expectedInstanceType: string\n    id: string | number\n    mcClass: string\n    type: string\n    uuid: string\n}\n\nexport class GenericParameterDTO {\n    type: string\n    default: string\n    description: string\n}\n\nexport class ConfigurationTemplateDTO {\n    anchor_parameters: { [name: string]: GenericParameterDTO | string }\n    instance_parameters: { [name: string]: GenericParameterDTO }\n    structural_parameters: { [name: string]: GenericParameterDTO }\n    fixed_parameters: { [name: string]: GenericParameterDTO }\n    control_parameters: { [name: string]: GenericParameterDTO }\n    infrastructure_parameters: { [name: string]: GenericParameterDTO }\n    module: string\n    description: string\n    category: string\n    version: string | number\n    platform: string\n}\n\nexport class ModuleModeDTO {\n    code: string\n    id: string | number\n    name: string\n}\n\nexport class ModuleStatusDTO {\n    descriptionCode: string\n    id: string | number\n    name: string\n}\nexport class StatisticItemDTO {\n    error: string | number\n    updated: string | number\n    inserted: string | number\n}\n\nexport class SimpleModuleDTO {\n    createdBy: string\n    createdDate: string\n    description: string\n    id: string | number\n    isLocked: boolean\n    lastModifiedBy: string\n    lastModifiedDate: string\n    lockAcquiredTimestamp: string\n    lockLastUserAcquiring: string\n    lockReleasedTimestamp: string\n    name: string\n    status: ModuleStatusDTO\n    type?: string | any\n    uuid: string\n    version: string | number\n}\nexport class ModuleDTO extends SimpleModuleDTO {\n    attachments: string[]\n    author: string\n    capabilities: { [name: string]: string }\n    catalog1: TypesCatalogueDTO\n    catalog2: TypesCatalogueDTO\n    catalog3: TypesCatalogueDTO\n    classification: ModuleClassificationDTO\n    configurationTemplate: ConfigurationTemplateDTO\n    detailProperties: {}\n    input: { [name: string]: string }\n    output: { [name: string]: string }\n    mode: ModuleModeDTO\n    statistics: { [name: string]: StatisticItemDTO | string | number }\n    tags: []\n}\n\nexport class ModuleNetworkInterfaceDTO {\n    id: string | number\n    label: string\n    module: ModuleDTO\n    network: NetworkDTO\n    nodeName: string\n    type: string\n    uuid: string\n}\n\nexport class ConsumerInterfaceLinkDTO {\n    local_interface: string\n    module_instance: string\n    remote_interface: string\n}\n\nexport class ModuleInstancePropertiesDTO {\n    area: string\n    description: string\n    module: string\n    version: string | number\n    sequence: string | number\n    consumer_interfaces_link: ConsumerInterfaceLinkDTO[]\n}\n\nexport class AreaDTO {\n    id: string | number;\n    uuid: string;\n    name: string;\n    description: string;\n    theater: TheaterDTO;\n    deleted: boolean | string;\n}\n\nexport class SimpleAreaDTO {\n    area: string\n    description: string\n}\nexport class TheaterInstancePropertiesDTO {\n    mode: string\n    tags: TagTIP[]\n    areas: SimpleAreaDTO[]\n    author: string\n    version: string | number\n    description: string\n}\nexport class TagTIP{\n    tag: string\n}\nexport class ElementIntoTheaterDTO {  // goes into map in blueprint [name:string]: Module...\n    properties: ModuleInstancePropertiesDTO | TheaterInstancePropertiesDTO\n    type: string\n}\nexport class ModuleInstanceDTO {\n    properties: ModuleInstancePropertiesDTO\n    type: string\n}\nexport class TheaterInstanceDTO {\n    properties: TheaterInstancePropertiesDTO\n    type: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/ConsumerInterfaceLinkExport.html":{"url":"classes/ConsumerInterfaceLinkExport.html","title":"class - ConsumerInterfaceLinkExport","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  ConsumerInterfaceLinkExport\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsExport/theaterExport.ts\n        \n\n\n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                local_interface\n                            \n                            \n                                module_interface\n                            \n                            \n                                remote_interface\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        local_interface\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/theaterExport.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        module_interface\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/theaterExport.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remote_interface\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/theaterExport.ts:54\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ModeTypeExport, ModuleTypeExport, TheaterTypeExport, ToscaDefinitionType } from \"./TypeExport\"\n\n/**\n * Classe utilizzata per l'export. \n * Contiene le informazioni generali per il teatro che devono esserci nello standard Tosca.\n */\nexport class TheaterExport {\n    tosca_definitions_version: ToscaDefinitionType\n    description: string\n    imports: string[]\n    node_templates: { [name: string]: TheaterSimpleData | ModuleInstanceSimpleData }\n}\n\nexport class TheaterSimpleData {\n    type: TheaterTypeExport\n    properties: PropertiesTSD\n}\nexport class PropertiesTSD {\n    version: string | number\n    description: string\n    mode: ModeTypeExport\n    author: string\n    tags: TagsExport[]\n    areas: AreaExport[]\n}\nexport class TagsExport {\n    tag: string\n}\nexport class AreaExport {\n    area: string\n    description: string\n}\n\nexport class ModuleInstanceSimpleData {\n    type: ModuleTypeExport\n    properties: PropertiesMISD\n}\nexport class PropertiesMISD{\n    module: string\n    version: string | number\n    area: string\n    sequence: number\n    sources?: SourceExport[]\n    consumer_interface_link: ConsumerInterfaceLinkExport[]\n}\nexport class SourceExport{\n    module_instance: string\n    host:string\n    interfaces: string[]\n}\nexport class ConsumerInterfaceLinkExport{\n    local_interface: string\n    module_interface:string\n    remote_interface:string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"components/ControlTemplate.html":{"url":"components/ControlTemplate.html","title":"component - ControlTemplate","body":"\n                   \n\n\n\n\n\n  Componenti\n  \n  ControlTemplate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/rete-settings/controls/control.ts\n\n\n\n    \n        Descrizione\n    \n    \n        Componente che si occpa del control per i nodi la libreria retejs\n\n    \n\n\n\n\n\n    Metadati\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                styleUrls\n                ./control.css\n            \n\n\n\n            \n                templateUrl\n                ./control.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Indice\n    \n        \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Input\n                    \n                \n                \n                    \n                        \n                            \n                                change\n                            \n                            \n                                mounted\n                            \n                            \n                                readonly\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Input\n        \n            \n                \n                    \n                        \n                        change\n                    \n                \n                \n                    \n                        Tipo :         Function\n\n                    \n                \n                        \n                            \n                                    Definito in src/app/rete-settings/controls/control.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mounted\n                    \n                \n                \n                    \n                        Tipo :         Function\n\n                    \n                \n                        \n                            \n                                    Definito in src/app/rete-settings/controls/control.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        readonly\n                    \n                \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                        \n                            \n                                    Definito in src/app/rete-settings/controls/control.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Tipo :         number\n\n                    \n                \n                        \n                            \n                                    Definito in src/app/rete-settings/controls/control.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/controls/control.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Type } from '@angular/core';\nimport { Control, NodeEditor } from 'rete';\nimport { AngularControl } from 'rete-angular-render-plugin';\n\n\n/**\n * Componente che si occpa del control per i nodi la libreria retejs\n */\n@Component({\n  templateUrl: './control.html',\n  styleUrls:  ['./control.css'],\n})\nexport class ControlTemplate {\n\n  @Input() value!: number;\n  @Input() readonly!: boolean;\n  @Input() change!: Function;\n  @Input() mounted!: Function;\n\n  ngOnInit() {\n    this.mounted();\n  }\n}\n\n\n/**\n * Elemento indica il control da utilizzare dai vari tipi di nodi/moduli \n */\nexport class _Control extends Control implements AngularControl {\n  \n  component: Type\n  props: { [key: string]: unknown }\n\n  constructor(public emitter: NodeEditor, public key: string, readonly = false) {\n    \n    super(key);\n\n    this.component = ControlTemplate;\n    this.props = {\n      readonly,\n      change: (v: undefined) => this.onChange(v),\n      value: 0,\n      mounted: () => {\n        this.setValue(+(this.getData(key) as any) || 0)\n      },\n  };\n    \n  }\n\n  onChange(val: number) {\n    this.setValue(val);\n    this.emitter.trigger('process');\n  }\n\n  setValue(val: number) {\n    this.props.value = +val;\n    this.putData(this.key, this.props.value)\n  }\n\n}\n\n    \n\n    \n        \n    \n\n    \n                \n                    ./control.css\n                \n                input {\n    border-radius: 30px;\n    background-color: white;\n    padding: 2px 6px;\n    border: 1px solid #999;\n    font-size: 110%;\n    width: 140px;\n    box-sizing: border-box;\n  }\n    \n\n    \n        \n        \n            \n                Legenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento html con direttive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ComposerComponent', 'selector': 'app-composer'},{'name': 'ControlTemplate', 'selector': ''},{'name': 'DataInputComponent', 'selector': 'app-data-input'},{'name': 'DataInputV2Component', 'selector': 'app-data-input-v2'},{'name': 'DataItemComponent', 'selector': 'app-window-item'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HostComponent', 'selector': ''},{'name': 'HowToUseComponent', 'selector': 'app-how-to-use'},{'name': 'MirroringModuleInstanceComponent', 'selector': ''},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavbarElementComponent', 'selector': 'app-navbar-element'},{'name': 'NetworkComponent', 'selector': ''},{'name': 'OffcanvasComponent', 'selector': 'app-offcanvas'},{'name': 'ReteModuleComposerComponent', 'selector': 'app-rete-module-composer'},{'name': 'ReteModuleVisualizerComponent', 'selector': 'app-rete-module-visualizer'},{'name': 'ReteTheaterComposerComponent', 'selector': 'app-rete-theater-composer'},{'name': 'ReteTheaterVisualizerComponent', 'selector': 'app-rete-theater-visualizer'},{'name': 'SubnetComponent', 'selector': ''},{'name': 'TabnavComponent', 'selector': 'app-tabnav'},{'name': 'TheaterInternalServiceModuleInstanceComponent', 'selector': ''},{'name': 'TheaterModuleInstanceComponent', 'selector': ''},{'name': 'UnderbarComponent', 'selector': 'app-underbar'},{'name': 'VisualizerComponent', 'selector': 'app-displayer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ControlTemplate'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/DataInput.html":{"url":"classes/DataInput.html","title":"class - DataInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  DataInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/data-input/dataInputType.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Tipo di dato Input contenente variabili generali.\nSee {DataInputComponet}\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                    Opzionale\n                                data_appended\n                            \n                            \n                                    Opzionale\n                                data_prepended\n                            \n                            \n                                id\n                            \n                            \n                                required\n                            \n                            \n                                    Opzionale\n                                text\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        data_appended\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/data-input/dataInputType.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        data_prepended\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/data-input/dataInputType.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/data-input/dataInputType.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        required\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/data-input/dataInputType.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        text\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/data-input/dataInputType.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     \"textarea\" | \"text\" | \"selection\" | \"checkbox\"\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/data-input/dataInputType.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class DataInputElement{\n    element: Array;\n}\n\n/**\n * Tipo di dato Input contenente variabili generali.\n * @see {DataInputComponet}\n */\nexport class DataInput{\n    id: string;\n    text?: string;\n    type: \"textarea\" | \"text\" | \"selection\" | \"checkbox\";\n    data_prepended?: string;\n    data_appended?: string;\n    required: boolean;\n}\n/**\n * Tipo input text base/area.\n * Estende DataInput.\n  * @see {DataInputComponet}\n */\nexport class DataInputText extends DataInput{\n    placeholder?: string;\n}\n/**\n * Tipo input selection.\n * Estende DataInput.\n  * @see {DataInputComponet}\n */\nexport class DataInputSelection extends DataInput{\n    multiple?: boolean;\n    selected_number: number;\n    selection: SelectOption[];\n}\n/**\n * Tipo input check (toggle).\n * Estende DataInput.\n * @see {DataInputComponet}\n */\nexport class DataInputCheck  extends DataInput{\n    checked?: boolean;\n}\n\n/**\n * Tipo usato per le selezioni (multiselect option).\n  * @see {DataInputComponet}\n */\nexport class SelectOption{\n    value: string;\n    text: string;\n    other?: any;\n}\n\n/**\n * Tipo di ritorno della componente DataInputReturned.\n  * @see {DataInputComponet}\n */\nexport class DataInputReturned{\n    element: { [key:string]: SingleDataInputReturned};\n    isValid: boolean;\n    exitStatus?: 'submitted' | 'cancel' | 'error';\n}\n/**\n * Singolo elemento dato in ritorno al submit.\n  * @see {DataInputComponet}\n */\nexport class SingleDataInputReturned{\n    id: string;\n    text: string;\n    type: string;\n    value: any;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/DataInputCheck.html":{"url":"classes/DataInputCheck.html","title":"class - DataInputCheck","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  DataInputCheck\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/data-input/dataInputType.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Tipo input check (toggle).\nEstende DataInput.\nSee {DataInputComponet}\n\n            \n\n            \n                Extends\n            \n            \n                        DataInput\n            \n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                    Opzionale\n                                checked\n                            \n                            \n                                    Opzionale\n                                data_appended\n                            \n                            \n                                    Opzionale\n                                data_prepended\n                            \n                            \n                                id\n                            \n                            \n                                required\n                            \n                            \n                                    Opzionale\n                                text\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        checked\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/data-input/dataInputType.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        data_appended\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         DataInput\n\n                            \n                        \n                    \n                        \n                                Definito in         DataInput:18\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        data_prepended\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         DataInput\n\n                            \n                        \n                    \n                        \n                                Definito in         DataInput:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         DataInput\n\n                            \n                        \n                    \n                        \n                                Definito in         DataInput:14\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        required\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                        \n                            \n                                ereditato da         DataInput\n\n                            \n                        \n                    \n                        \n                                Definito in         DataInput:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        text\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         DataInput\n\n                            \n                        \n                    \n                        \n                                Definito in         DataInput:15\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     \"textarea\" | \"text\" | \"selection\" | \"checkbox\"\n\n                    \n                \n                        \n                            \n                                ereditato da         DataInput\n\n                            \n                        \n                    \n                        \n                                Definito in         DataInput:16\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class DataInputElement{\n    element: Array;\n}\n\n/**\n * Tipo di dato Input contenente variabili generali.\n * @see {DataInputComponet}\n */\nexport class DataInput{\n    id: string;\n    text?: string;\n    type: \"textarea\" | \"text\" | \"selection\" | \"checkbox\";\n    data_prepended?: string;\n    data_appended?: string;\n    required: boolean;\n}\n/**\n * Tipo input text base/area.\n * Estende DataInput.\n  * @see {DataInputComponet}\n */\nexport class DataInputText extends DataInput{\n    placeholder?: string;\n}\n/**\n * Tipo input selection.\n * Estende DataInput.\n  * @see {DataInputComponet}\n */\nexport class DataInputSelection extends DataInput{\n    multiple?: boolean;\n    selected_number: number;\n    selection: SelectOption[];\n}\n/**\n * Tipo input check (toggle).\n * Estende DataInput.\n * @see {DataInputComponet}\n */\nexport class DataInputCheck  extends DataInput{\n    checked?: boolean;\n}\n\n/**\n * Tipo usato per le selezioni (multiselect option).\n  * @see {DataInputComponet}\n */\nexport class SelectOption{\n    value: string;\n    text: string;\n    other?: any;\n}\n\n/**\n * Tipo di ritorno della componente DataInputReturned.\n  * @see {DataInputComponet}\n */\nexport class DataInputReturned{\n    element: { [key:string]: SingleDataInputReturned};\n    isValid: boolean;\n    exitStatus?: 'submitted' | 'cancel' | 'error';\n}\n/**\n * Singolo elemento dato in ritorno al submit.\n  * @see {DataInputComponet}\n */\nexport class SingleDataInputReturned{\n    id: string;\n    text: string;\n    type: string;\n    value: any;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"components/DataInputComponent.html":{"url":"components/DataInputComponent.html","title":"component - DataInputComponent","body":"\n                   \n\n\n\n\n\n  Componenti\n  \n  DataInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/data-input/data-input.component.ts\n\n\n\n    \n        Descrizione\n    \n    \n        Componente usata per renderizzare e gestire in modo automatico diversi elementi di input attraverso form.\nAttualmente disponibili sono: text, textarea, (multi)selection e checkbox.\n\n    \n\n\n    \n        Implementa\n    \n    \n                    OnInit\n    \n\n\n\n    Metadati\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-data-input\n            \n\n            \n                styleUrls\n                ./data-input.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./data-input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                dataForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                exit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                returnOutput\n                            \n                            \n                                save\n                            \n                        \n                    \n                \n\n                \n                    \n                        Input\n                    \n                \n                \n                    \n                        \n                            \n                                element\n                            \n                        \n                    \n                \n\n                \n                    \n                        Output\n                    \n                \n                \n                    \n                        \n                            \n                                dataSubmitted\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Costruttore\n        \n            \n                \n                    \nconstructor(cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Definito in src/app/components/data-input/data-input.component.ts:33\n                            \n                        \n\n                \n                    \n                            Costruttore di DataInputComponent.\n\n                            \n                                    Parametri :\n                                    \n                                        \n                                            \n                                                Nome\n                                                    Tipo\n                                                Opzionale\n                                            \n                                        \n                                        \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Input\n        \n            \n                \n                    \n                        \n                        element\n                    \n                \n                \n                    \n                        Tipo :         DataInputElement\n\n                    \n                \n                        \n                            \n                                    Definito in src/app/components/data-input/data-input.component.ts:21\n                            \n                        \n                \n                    \n                        Variabile dato in input per essere processato.\n\n                    \n                \n            \n        \n\n    \n    Output\n        \n            \n                \n                    \n                        \n                        dataSubmitted\n                    \n                \n                \n                    \n                        Tipo :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Definito in src/app/components/data-input/data-input.component.ts:27\n                            \n                        \n                \n                    \n                        Variabile ritornata in output.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        exit\n                        \n                    \n                \n            \n            \n                \nexit()\n                \n            \n\n\n            \n                \n                    Definito in src/app/components/data-input/data-input.component.ts:85\n                \n            \n\n\n            \n                \n                    Funzione usata per annullare l'operazione di convalida di risultato.\nSee {returnOutput}\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Definito in src/app/components/data-input/data-input.component.ts:48\n                \n            \n\n\n            \n                \n                    Funzione chiamata quando la componente viene inizializzata.\nEsegue controlli e inizializzazioni dei Form element e Form control.\nSee {dataForm}\nSee {FormGroup}\nSee {FormControl}\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        returnOutput\n                        \n                    \n                \n            \n            \n                \nreturnOutput(val: DataInputReturned)\n                \n            \n\n\n            \n                \n                    Definito in src/app/components/data-input/data-input.component.ts:99\n                \n            \n\n\n            \n                \n                    Funzione usata per emettere il valore processato dalla exit() oppure dalla save().\nSee {dataSubmitted}\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                DataInputReturned\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        save\n                        \n                    \n                \n            \n            \n                \nsave()\n                \n            \n\n\n            \n                \n                    Definito in src/app/components/data-input/data-input.component.ts:62\n                \n            \n\n\n            \n                \n                    Funzione usata per elaborare gli elementi della form.\nSee {returnOutput}\nSee {SingleDataInputReturned}\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        dataForm\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         FormGroup\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/data-input/data-input.component.ts:33\n                        \n                    \n\n            \n                \n                    Variabile usata per le operazione form.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output, OnInit, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { DataInputElement, DataInputReturned, SingleDataInputReturned } from './dataInputType';\n\n/**\n * Componente usata per renderizzare e gestire in modo automatico diversi elementi di input attraverso form.\n * Attualmente disponibili sono: text, textarea, (multi)selection e checkbox.  \n */\n@Component({\n  selector: 'app-data-input',\n  templateUrl: './data-input.component.html',\n  styleUrls: ['./data-input.component.sass'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DataInputComponent implements OnInit {\n\n  /**\n   * Variabile dato in input per essere processato.\n   * @type {DataInputElement}\n   */\n  @Input() element: DataInputElement;\n  \n  /**\n   * Variabile ritornata in output.\n   * @type {EventEmitter}\n   */\n  @Output() dataSubmitted = new EventEmitter();\n\n  /**\n   * Variabile usata per le operazione form.\n   * @type {FormGroup}\n   */\n  protected dataForm: FormGroup;\n\n  /**\n   * Costruttore di DataInputComponent.\n   */\n  constructor(private cdr: ChangeDetectorRef) {\n  }\n\n  /**\n   * Funzione chiamata quando la componente viene inizializzata.\n   * Esegue controlli e inizializzazioni dei Form element e Form control.\n   * @see {dataForm}\n   * @see {FormGroup}\n   * @see {FormControl}\n   */\n  ngOnInit(): void {\n    this.dataForm = new FormGroup({});\n    this.element.element.forEach(e => {\n      e.required\n        ? this.dataForm.addControl(e.id, new FormControl('', Validators.required))\n        : this.dataForm.addControl(e.id, new FormControl())\n    })\n  }\n\n  /**\n   * Funzione usata per elaborare gli elementi della form.\n   * @see {returnOutput}\n   * @see {SingleDataInputReturned}\n   */\n  save() {\n    let values: { [key: string]: SingleDataInputReturned } = {};\n    this.element.element.forEach(\n      (el) => {\n        let val: HTMLInputElement = document.getElementById(el.id) as HTMLInputElement;\n        if (el.type === 'checkbox')\n          values[el.id] = { id: el.id, text: el.text, type: el.type, value: val.checked };\n        else\n          values[el.id] = { id: el.id, text: el.text, type: el.type, value: val ? val.value : undefined };\n      }\n    )\n    let event: DataInputReturned = {\n      element: values,\n      isValid: true,\n      exitStatus: 'submitted'\n    }\n    this.returnOutput(event);\n  }\n\n  /**\n   * Funzione usata per annullare l'operazione di convalida di risultato.\n   * @see {returnOutput}\n   */\n  exit() {\n    let event: DataInputReturned = {\n      element: {},\n      isValid: false,\n      exitStatus: 'cancel'\n    }\n    this.returnOutput(event);\n  }\n\n  /**\n   * Funzione usata per emettere il valore processato dalla exit() oppure dalla save().\n   * @param val \n   * @see {dataSubmitted}\n   */\n  returnOutput(val: DataInputReturned) {\n    this.dataSubmitted.emit(val);\n    this.cdr.detectChanges();\n  }\n\n\n}\n\n    \n\n    \n        \n    \n        \n            \n                 - {{item.text}} \n            \n            \n                \n                \n                     {{item.data_prepended}} \n                \n                \n                \n                \n                    \n                \n                \n                \n                    \n                \n                \n                \n                    \n                        \n                            {{opt.text}}\n                        \n                    \n                     No selectable list found \n                \n                \n                \n                    \n                        \n                        {{item.text}}\n                    \n                \n                \n                \n                     {{item.data_appended}} \n                \n            \n        \n        \n            \n                Save\n            \n            \n                Cancel\n            \n        \n    \n\n    \n\n    \n                \n                    ./data-input.component.sass\n                \n                \n    \n\n    \n        \n        \n            \n                Legenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento html con direttive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                         - {{item.text}}                                                                              {{item.data_prepended}}                                                                                                                                                                                                                                                                                 {{opt.text}}                                                                 No selectable list found                                                                                                                     {{item.text}}                                                                                         {{item.data_appended}}                                                                         Save                                        Cancel                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ComposerComponent', 'selector': 'app-composer'},{'name': 'ControlTemplate', 'selector': ''},{'name': 'DataInputComponent', 'selector': 'app-data-input'},{'name': 'DataInputV2Component', 'selector': 'app-data-input-v2'},{'name': 'DataItemComponent', 'selector': 'app-window-item'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HostComponent', 'selector': ''},{'name': 'HowToUseComponent', 'selector': 'app-how-to-use'},{'name': 'MirroringModuleInstanceComponent', 'selector': ''},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavbarElementComponent', 'selector': 'app-navbar-element'},{'name': 'NetworkComponent', 'selector': ''},{'name': 'OffcanvasComponent', 'selector': 'app-offcanvas'},{'name': 'ReteModuleComposerComponent', 'selector': 'app-rete-module-composer'},{'name': 'ReteModuleVisualizerComponent', 'selector': 'app-rete-module-visualizer'},{'name': 'ReteTheaterComposerComponent', 'selector': 'app-rete-theater-composer'},{'name': 'ReteTheaterVisualizerComponent', 'selector': 'app-rete-theater-visualizer'},{'name': 'SubnetComponent', 'selector': ''},{'name': 'TabnavComponent', 'selector': 'app-tabnav'},{'name': 'TheaterInternalServiceModuleInstanceComponent', 'selector': ''},{'name': 'TheaterModuleInstanceComponent', 'selector': ''},{'name': 'UnderbarComponent', 'selector': 'app-underbar'},{'name': 'VisualizerComponent', 'selector': 'app-displayer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DataInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/DataInputElement.html":{"url":"classes/DataInputElement.html","title":"class - DataInputElement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  DataInputElement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/data-input/dataInputType.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Tipo di dato passato alla componente DataInput\nSee {DataInputComponet}\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                element\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        element\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     Array\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/data-input/dataInputType.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class DataInputElement{\n    element: Array;\n}\n\n/**\n * Tipo di dato Input contenente variabili generali.\n * @see {DataInputComponet}\n */\nexport class DataInput{\n    id: string;\n    text?: string;\n    type: \"textarea\" | \"text\" | \"selection\" | \"checkbox\";\n    data_prepended?: string;\n    data_appended?: string;\n    required: boolean;\n}\n/**\n * Tipo input text base/area.\n * Estende DataInput.\n  * @see {DataInputComponet}\n */\nexport class DataInputText extends DataInput{\n    placeholder?: string;\n}\n/**\n * Tipo input selection.\n * Estende DataInput.\n  * @see {DataInputComponet}\n */\nexport class DataInputSelection extends DataInput{\n    multiple?: boolean;\n    selected_number: number;\n    selection: SelectOption[];\n}\n/**\n * Tipo input check (toggle).\n * Estende DataInput.\n * @see {DataInputComponet}\n */\nexport class DataInputCheck  extends DataInput{\n    checked?: boolean;\n}\n\n/**\n * Tipo usato per le selezioni (multiselect option).\n  * @see {DataInputComponet}\n */\nexport class SelectOption{\n    value: string;\n    text: string;\n    other?: any;\n}\n\n/**\n * Tipo di ritorno della componente DataInputReturned.\n  * @see {DataInputComponet}\n */\nexport class DataInputReturned{\n    element: { [key:string]: SingleDataInputReturned};\n    isValid: boolean;\n    exitStatus?: 'submitted' | 'cancel' | 'error';\n}\n/**\n * Singolo elemento dato in ritorno al submit.\n  * @see {DataInputComponet}\n */\nexport class SingleDataInputReturned{\n    id: string;\n    text: string;\n    type: string;\n    value: any;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/DataInputReturned.html":{"url":"classes/DataInputReturned.html","title":"class - DataInputReturned","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  DataInputReturned\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/data-input/dataInputType.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Tipo di ritorno della componente DataInputReturned.\nSee {DataInputComponet}\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                element\n                            \n                            \n                                    Opzionale\n                                exitStatus\n                            \n                            \n                                isValid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        element\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     literal type\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/data-input/dataInputType.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        exitStatus\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     \"submitted\" | \"cancel\" | \"error\"\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/data-input/dataInputType.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isValid\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/data-input/dataInputType.ts:64\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class DataInputElement{\n    element: Array;\n}\n\n/**\n * Tipo di dato Input contenente variabili generali.\n * @see {DataInputComponet}\n */\nexport class DataInput{\n    id: string;\n    text?: string;\n    type: \"textarea\" | \"text\" | \"selection\" | \"checkbox\";\n    data_prepended?: string;\n    data_appended?: string;\n    required: boolean;\n}\n/**\n * Tipo input text base/area.\n * Estende DataInput.\n  * @see {DataInputComponet}\n */\nexport class DataInputText extends DataInput{\n    placeholder?: string;\n}\n/**\n * Tipo input selection.\n * Estende DataInput.\n  * @see {DataInputComponet}\n */\nexport class DataInputSelection extends DataInput{\n    multiple?: boolean;\n    selected_number: number;\n    selection: SelectOption[];\n}\n/**\n * Tipo input check (toggle).\n * Estende DataInput.\n * @see {DataInputComponet}\n */\nexport class DataInputCheck  extends DataInput{\n    checked?: boolean;\n}\n\n/**\n * Tipo usato per le selezioni (multiselect option).\n  * @see {DataInputComponet}\n */\nexport class SelectOption{\n    value: string;\n    text: string;\n    other?: any;\n}\n\n/**\n * Tipo di ritorno della componente DataInputReturned.\n  * @see {DataInputComponet}\n */\nexport class DataInputReturned{\n    element: { [key:string]: SingleDataInputReturned};\n    isValid: boolean;\n    exitStatus?: 'submitted' | 'cancel' | 'error';\n}\n/**\n * Singolo elemento dato in ritorno al submit.\n  * @see {DataInputComponet}\n */\nexport class SingleDataInputReturned{\n    id: string;\n    text: string;\n    type: string;\n    value: any;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/DataInputReturnedV2.html":{"url":"classes/DataInputReturnedV2.html","title":"class - DataInputReturnedV2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  DataInputReturnedV2\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/data-input-v2/dataInputTypeV2.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Tipo di ritorno della componente DataInputV2\nSee {DataInputV2Componet}\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                key\n                            \n                            \n                                new_value\n                            \n                            \n                                old_value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/data-input-v2/dataInputTypeV2.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        new_value\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         any\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/data-input-v2/dataInputTypeV2.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        old_value\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         any\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/data-input-v2/dataInputTypeV2.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class DataInputReturnedV2{\n    key: string;\n    old_value: any;\n    new_value: any;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/DataInputSelection.html":{"url":"classes/DataInputSelection.html","title":"class - DataInputSelection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  DataInputSelection\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/data-input/dataInputType.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Tipo input selection.\nEstende DataInput.\nSee {DataInputComponet}\n\n            \n\n            \n                Extends\n            \n            \n                        DataInput\n            \n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                    Opzionale\n                                multiple\n                            \n                            \n                                selected_number\n                            \n                            \n                                selection\n                            \n                            \n                                    Opzionale\n                                data_appended\n                            \n                            \n                                    Opzionale\n                                data_prepended\n                            \n                            \n                                id\n                            \n                            \n                                required\n                            \n                            \n                                    Opzionale\n                                text\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        multiple\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/data-input/dataInputType.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selected_number\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/data-input/dataInputType.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selection\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         SelectOption[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/data-input/dataInputType.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        data_appended\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         DataInput\n\n                            \n                        \n                    \n                        \n                                Definito in         DataInput:18\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        data_prepended\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         DataInput\n\n                            \n                        \n                    \n                        \n                                Definito in         DataInput:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         DataInput\n\n                            \n                        \n                    \n                        \n                                Definito in         DataInput:14\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        required\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                        \n                            \n                                ereditato da         DataInput\n\n                            \n                        \n                    \n                        \n                                Definito in         DataInput:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        text\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         DataInput\n\n                            \n                        \n                    \n                        \n                                Definito in         DataInput:15\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     \"textarea\" | \"text\" | \"selection\" | \"checkbox\"\n\n                    \n                \n                        \n                            \n                                ereditato da         DataInput\n\n                            \n                        \n                    \n                        \n                                Definito in         DataInput:16\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class DataInputElement{\n    element: Array;\n}\n\n/**\n * Tipo di dato Input contenente variabili generali.\n * @see {DataInputComponet}\n */\nexport class DataInput{\n    id: string;\n    text?: string;\n    type: \"textarea\" | \"text\" | \"selection\" | \"checkbox\";\n    data_prepended?: string;\n    data_appended?: string;\n    required: boolean;\n}\n/**\n * Tipo input text base/area.\n * Estende DataInput.\n  * @see {DataInputComponet}\n */\nexport class DataInputText extends DataInput{\n    placeholder?: string;\n}\n/**\n * Tipo input selection.\n * Estende DataInput.\n  * @see {DataInputComponet}\n */\nexport class DataInputSelection extends DataInput{\n    multiple?: boolean;\n    selected_number: number;\n    selection: SelectOption[];\n}\n/**\n * Tipo input check (toggle).\n * Estende DataInput.\n * @see {DataInputComponet}\n */\nexport class DataInputCheck  extends DataInput{\n    checked?: boolean;\n}\n\n/**\n * Tipo usato per le selezioni (multiselect option).\n  * @see {DataInputComponet}\n */\nexport class SelectOption{\n    value: string;\n    text: string;\n    other?: any;\n}\n\n/**\n * Tipo di ritorno della componente DataInputReturned.\n  * @see {DataInputComponet}\n */\nexport class DataInputReturned{\n    element: { [key:string]: SingleDataInputReturned};\n    isValid: boolean;\n    exitStatus?: 'submitted' | 'cancel' | 'error';\n}\n/**\n * Singolo elemento dato in ritorno al submit.\n  * @see {DataInputComponet}\n */\nexport class SingleDataInputReturned{\n    id: string;\n    text: string;\n    type: string;\n    value: any;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/DataInputText.html":{"url":"classes/DataInputText.html","title":"class - DataInputText","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  DataInputText\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/data-input/dataInputType.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Tipo input text base/area.\nEstende DataInput.\nSee {DataInputComponet}\n\n            \n\n            \n                Extends\n            \n            \n                        DataInput\n            \n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                    Opzionale\n                                placeholder\n                            \n                            \n                                    Opzionale\n                                data_appended\n                            \n                            \n                                    Opzionale\n                                data_prepended\n                            \n                            \n                                id\n                            \n                            \n                                required\n                            \n                            \n                                    Opzionale\n                                text\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        placeholder\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/data-input/dataInputType.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        data_appended\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         DataInput\n\n                            \n                        \n                    \n                        \n                                Definito in         DataInput:18\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        data_prepended\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         DataInput\n\n                            \n                        \n                    \n                        \n                                Definito in         DataInput:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         DataInput\n\n                            \n                        \n                    \n                        \n                                Definito in         DataInput:14\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        required\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                        \n                            \n                                ereditato da         DataInput\n\n                            \n                        \n                    \n                        \n                                Definito in         DataInput:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        text\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         DataInput\n\n                            \n                        \n                    \n                        \n                                Definito in         DataInput:15\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     \"textarea\" | \"text\" | \"selection\" | \"checkbox\"\n\n                    \n                \n                        \n                            \n                                ereditato da         DataInput\n\n                            \n                        \n                    \n                        \n                                Definito in         DataInput:16\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class DataInputElement{\n    element: Array;\n}\n\n/**\n * Tipo di dato Input contenente variabili generali.\n * @see {DataInputComponet}\n */\nexport class DataInput{\n    id: string;\n    text?: string;\n    type: \"textarea\" | \"text\" | \"selection\" | \"checkbox\";\n    data_prepended?: string;\n    data_appended?: string;\n    required: boolean;\n}\n/**\n * Tipo input text base/area.\n * Estende DataInput.\n  * @see {DataInputComponet}\n */\nexport class DataInputText extends DataInput{\n    placeholder?: string;\n}\n/**\n * Tipo input selection.\n * Estende DataInput.\n  * @see {DataInputComponet}\n */\nexport class DataInputSelection extends DataInput{\n    multiple?: boolean;\n    selected_number: number;\n    selection: SelectOption[];\n}\n/**\n * Tipo input check (toggle).\n * Estende DataInput.\n * @see {DataInputComponet}\n */\nexport class DataInputCheck  extends DataInput{\n    checked?: boolean;\n}\n\n/**\n * Tipo usato per le selezioni (multiselect option).\n  * @see {DataInputComponet}\n */\nexport class SelectOption{\n    value: string;\n    text: string;\n    other?: any;\n}\n\n/**\n * Tipo di ritorno della componente DataInputReturned.\n  * @see {DataInputComponet}\n */\nexport class DataInputReturned{\n    element: { [key:string]: SingleDataInputReturned};\n    isValid: boolean;\n    exitStatus?: 'submitted' | 'cancel' | 'error';\n}\n/**\n * Singolo elemento dato in ritorno al submit.\n  * @see {DataInputComponet}\n */\nexport class SingleDataInputReturned{\n    id: string;\n    text: string;\n    type: string;\n    value: any;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"components/DataInputV2Component.html":{"url":"components/DataInputV2Component.html","title":"component - DataInputV2Component","body":"\n                   \n\n\n\n\n\n  Componenti\n  \n  DataInputV2Component\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/data-input-v2/data-input-v2.component.ts\n\n\n\n    \n        Descrizione\n    \n    \n        Componente usata per mostrare il valore di un determinato elemento.\nAttraverso un click, è possibile visualizzare un form di modifica in place.\nI form attualmente disponibili sono: text, textarea, (multi)selection e checkbox.\n\n    \n\n\n    \n        Implementa\n    \n    \n                    OnInit\n    \n\n\n\n    Metadati\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-data-input-v2\n            \n\n            \n                styleUrls\n                ./data-input-v2.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./data-input-v2.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _value\n                            \n                            \n                                    Protected\n                                dataInputElement\n                            \n                            \n                                    Protected\n                                isUpdateTime\n                            \n                        \n                    \n                \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                dataInputReturned\n                            \n                            \n                                getCheckbox\n                            \n                            \n                                getSelection\n                            \n                            \n                                getText\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                updateTime\n                            \n                        \n                    \n                \n\n                \n                    \n                        Input\n                    \n                \n                \n                    \n                        \n                            \n                                checked\n                            \n                            \n                                directChange\n                            \n                            \n                                formType\n                            \n                            \n                                idForChanges\n                            \n                            \n                                required\n                            \n                            \n                                selectOption\n                            \n                            \n                                title\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Output\n                    \n                \n                \n                    \n                        \n                            \n                                onChange\n                            \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessori\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Costruttore\n        \n            \n                \n                    \nconstructor(cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Definito in src/app/components/data-input-v2/data-input-v2.component.ts:94\n                            \n                        \n\n                \n                    \n                            Costruttore di DataInputV2Component.\n\n                            \n                                    Parametri :\n                                    \n                                        \n                                            \n                                                Nome\n                                                    Tipo\n                                                Opzionale\n                                            \n                                        \n                                        \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Input\n        \n            \n                \n                    \n                        \n                        checked\n                    \n                \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                        \n                            \n                                    Definito in src/app/components/data-input-v2/data-input-v2.component.ts:82\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        directChange\n                    \n                \n                \n                    \n                        Tipo :     \"function\" | \"direct\"\n\n                    \n                \n                        \n                            \n                                    Definito in src/app/components/data-input-v2/data-input-v2.component.ts:62\n                            \n                        \n                \n                    \n                        Varibile (opzionale) data in input che serve per il comportamento della componente.\nEssa può essere:\nLa funzione di base predilige un comportamento su \"direct\".\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        formType\n                    \n                \n                \n                    \n                        Tipo :     \"textarea\" | \"text\" | \"selection\" | \"checkbox\"\n\n                    \n                \n                        \n                            \n                                    Definito in src/app/components/data-input-v2/data-input-v2.component.ts:78\n                            \n                        \n                \n                    \n                        Variabile data in input che serve per capire che tipo di elemento sta trattando.\nNel caso di modifiche si provvederà a renderizzare la giusta scelta.\nEssa può essere:\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        idForChanges\n                    \n                \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                    Definito in src/app/components/data-input-v2/data-input-v2.component.ts:54\n                            \n                        \n                \n                    \n                        Varibile (opzionale) data in input per assegnare un \"riconoscimento\" all'elemento di ritorno.\nSee {DataInputReturnedV2} per il campo \"key\".\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                        \n                            \n                                    Definito in src/app/components/data-input-v2/data-input-v2.component.ts:83\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selectOption\n                    \n                \n                \n                    \n                        Tipo :         SelectOption[]\n\n                    \n                \n                        \n                            \n                                    Definito in src/app/components/data-input-v2/data-input-v2.component.ts:81\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                    Definito in src/app/components/data-input-v2/data-input-v2.component.ts:68\n                            \n                        \n                \n                    \n                        Variabile data in input che serve per dare un titolo all'elemento\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Tipo :         any\n\n                    \n                \n                        \n                            \n                                    Definito in src/app/components/data-input-v2/data-input-v2.component.ts:30\n                            \n                        \n                \n                    \n                        Variabile (set) in input che rappresenta il valore attuale dell'elemento passato.\nQuesta variabile predispone di determinate operazioni prima di eseguire l'effettivo salvataggio del valore.\nIn particolare controlla se emettere o meno il cambiamento della variabile in modo diretto o indiretto\nSee {directChange}\nSee {_value}\n\n                    \n                \n            \n        \n\n    \n    Output\n        \n            \n                \n                    \n                        \n                        onChange\n                    \n                \n                \n                    \n                        Tipo :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Definito in src/app/components/data-input-v2/data-input-v2.component.ts:46\n                            \n                        \n                \n                    \n                        Attributo ritornato in output.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Tipo :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Definito in src/app/components/data-input-v2/data-input-v2.component.ts:40\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        dataInputReturned\n                        \n                    \n                \n            \n            \n                \ndataInputReturned(val: DataInputReturned)\n                \n            \n\n\n            \n                \n                    Definito in src/app/components/data-input-v2/data-input-v2.component.ts:181\n                \n            \n\n\n            \n                \n                    Funzione usata per emettere il valore di ritorno dal form.\nSee {dataInputElement}\nSee {updateTime}\nSee {onChange}\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                DataInputReturned\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCheckbox\n                        \n                    \n                \n            \n            \n                \ngetCheckbox()\n                \n            \n\n\n            \n                \n                    Definito in src/app/components/data-input-v2/data-input-v2.component.ts:152\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         DataInputElement\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSelection\n                        \n                    \n                \n            \n            \n                \ngetSelection()\n                \n            \n\n\n            \n                \n                    Definito in src/app/components/data-input-v2/data-input-v2.component.ts:136\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         DataInputElement\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getText\n                        \n                    \n                \n            \n            \n                \ngetText()\n                \n            \n\n\n            \n                \n                    Definito in src/app/components/data-input-v2/data-input-v2.component.ts:123\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         DataInputElement\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Definito in src/app/components/data-input-v2/data-input-v2.component.ts:107\n                \n            \n\n\n            \n                \n                    Funzione richiamata all'inizializzazione della componente e ritorna il form adeguato scelto.\nSee {getSelection}\nSee {getCheckbox}\nSee {getText}\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateTime\n                        \n                    \n                \n            \n            \n                \nupdateTime()\n                \n            \n\n\n            \n                \n                    Definito in src/app/components/data-input-v2/data-input-v2.component.ts:169\n                \n            \n\n\n            \n                \n                    Funzione che ha come scopo lo switch della variabile di modifica.\nSee {isUpdateTime}\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _value\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         any\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/data-input-v2/data-input-v2.component.ts:21\n                        \n                    \n\n            \n                \n                    Variabile di appoggio per value\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        dataInputElement\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         DataInputElement\n\n                    \n                \n                \n                    \n                        Valore predefinito : new DataInputElement()\n                    \n                \n                    \n                        \n                                Definito in src/app/components/data-input-v2/data-input-v2.component.ts:94\n                        \n                    \n\n            \n                \n                    Variabile usata per passare i valori alla componente @see {DataInputComponent}.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        isUpdateTime\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                \n                    \n                        Valore predefinito : false\n                    \n                \n                    \n                        \n                                Definito in src/app/components/data-input-v2/data-input-v2.component.ts:89\n                        \n                    \n\n            \n                \n                    Variabile usata per eseguire la modifica del valore.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessori\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Definito in src/app/components/data-input-v2/data-input-v2.component.ts:37\n                                \n                            \n\n                \n                    \n                        setvalue(val: any)\n                    \n                \n                            \n                                \n                                    Definito in src/app/components/data-input-v2/data-input-v2.component.ts:30\n                                \n                            \n                    \n                        \n                                Variabile (set) in input che rappresenta il valore attuale dell'elemento passato.\nQuesta variabile predispone di determinate operazioni prima di eseguire l'effettivo salvataggio del valore.\nIn particolare controlla se emettere o meno il cambiamento della variabile in modo diretto o indiretto\nSee {directChange}\nSee {_value}\n\n\n                                \n                                        Parametri :\n                                        \n                                            \n                                                \n                                                    Nome\n                                                        Tipo\n                                                    Opzionale\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                            any\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { DataInputElement, DataInputReturned, SelectOption, SingleDataInputReturned } from '../data-input/dataInputType';\nimport { DataInputReturnedV2 } from './dataInputTypeV2';\n\n/**\n * Componente usata per mostrare il valore di un determinato elemento. \n * Attraverso un click, è possibile visualizzare un form di modifica in place.\n * I form attualmente disponibili sono: text, textarea, (multi)selection e checkbox. \n */\n@Component({\n  selector: 'app-data-input-v2',\n  templateUrl: './data-input-v2.component.html',\n  styleUrls: ['./data-input-v2.component.sass'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DataInputV2Component implements OnInit {\n\n  /**\n   * Variabile di appoggio per value\n   */\n  protected _value: any;\n  /**\n   * Variabile (set) in input che rappresenta il valore attuale dell'elemento passato.\n   * Questa variabile predispone di determinate operazioni prima di eseguire l'effettivo salvataggio del valore.\n   * In particolare controlla se emettere o meno il cambiamento della variabile in modo diretto o indiretto\n   * @see {directChange}\n   * @see {_value}\n   */\n  @Input()\n  set value(val: any) {\n    if (!this.directChange || this.directChange === \"direct\") {\n      this.valueChange.emit(val);\n      this.onChange.emit({ key: this.idForChanges ? this.idForChanges : this.title, old_value: this._value, new_value: val }); // poi notifica aggiornamento\n    }\n    this._value = val;\n  }\n  get value() {\n    return this._value;\n  }\n  @Output() valueChange: EventEmitter = new EventEmitter();\n  \n  /**\n   * Attributo ritornato in output.\n   * @type {EventEmitter}\n   */\n  @Output() onChange: EventEmitter = new EventEmitter();\n\n\n  /**\n   * Varibile (opzionale) data in input per assegnare un \"riconoscimento\" all'elemento di ritorno.\n   * @see {DataInputReturnedV2} per il campo \"key\".\n   * @type {string}\n   */\n  @Input() idForChanges?: string;\n  /**\n   * Varibile (opzionale) data in input che serve per il comportamento della componente.\n   * Essa può essere: \n   * @type {\"function\"} : nel caso si voglia aggiornare il valore passato in input alla funzione.\n   * @type {\"direct\"} : nel caso si vuole aggiornare direttamente il valore.\n   * La funzione di base predilige un comportamento su \"direct\".\n   */\n  @Input() directChange?: \"function\" | \"direct\";\n\n  /**\n   * Variabile data in input che serve per dare un titolo all'elemento\n   * @type {string}\n   */\n  @Input() title: string;\n  /**\n   * Variabile data in input che serve per capire che tipo di elemento sta trattando.\n   * Nel caso di modifiche si provvederà a renderizzare la giusta scelta. \n   * Essa può essere:\n   * @type {\"text\"} : nel caso si voglia un input text base.\n   * @type {\"textarea\"} : nel caso si voglia un input text-area.\n   * @type {\"selection\"} : nel caso si voglia un input selection.\n   * @type {\"checkbox\"} : nel caso si voglia un input checkbox.\n   */\n  @Input() formType: \"textarea\" | \"text\" | \"selection\" | \"checkbox\";\n\n  // varibili specifiche dei form.\n  @Input() selectOption?: SelectOption[];\n  @Input() checked?: boolean;\n  @Input() required?: boolean;\n\n  /**\n   * Variabile usata per eseguire la modifica del valore.\n   * @type {boolean}\n   */\n  protected isUpdateTime: boolean = false;\n  /**\n   * Variabile usata per passare i valori alla componente @see {DataInputComponent}.\n   * @type {DataInputElement}\n   */\n  protected dataInputElement: DataInputElement = new DataInputElement();;\n\n  /**\n   * Costruttore di DataInputV2Component.\n   */\n  constructor(private cdr: ChangeDetectorRef) { }\n\n  /**\n   * Funzione richiamata all'inizializzazione della componente e ritorna il form adeguato scelto.\n   * @see {getSelection}\n   * @see {getCheckbox}\n   * @see {getText}\n   */\n  ngOnInit(): void {\n    this.dataInputElement.element = [];\n    if (this.formType === 'text' || this.formType === 'textarea') {\n      this.dataInputElement = this.getText();\n    }\n    else if (this.formType === 'checkbox') {\n      this.dataInputElement = this.getCheckbox();\n    }\n    else if (this.formType === 'selection' && this.selectOption) {\n      this.dataInputElement = this.getSelection();\n    }\n    else {\n      console.error(\"PROBLEMA CON TIPO O DATO PASSATO\");\n    }\n  }\n\n  getText(): DataInputElement {\n    let dataInputElement: DataInputElement = new DataInputElement;\n    dataInputElement.element = [\n      {\n        id: this.idForChanges ? this.idForChanges : this.title,\n        placeholder: this.value ? this.value as string : '',\n        type: this.formType,\n        required: this.required ? true : false\n      }\n    ];\n    return dataInputElement;\n  }\n\n  getSelection(): DataInputElement {\n    let index_selected = this.selectOption.findIndex((el) => el.value === this.value || el.text === this.value)\n    index_selected = (index_selected \n    \n\n    \n        \n    {{title}}:\n    \n         {{value}} \n        click to change\n    \n    \n        \n        \n        \n        \n    \n\n\n    \n\n    \n                \n                    ./data-input-v2.component.sass\n                \n                .btn-text-link\n    cursor: pointer\n    text-decoration: none\n    font-style: normal\n    font-size: small\n    margin-bottom: 0!important\n.btn-text-link:hover\n    text-decoration: underline\n    font-style: italic\n\n.title-element\n    margin: 0\n    font-style: italic\n    font-size: small\n\n    \n\n    \n        \n        \n            \n                Legenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento html con direttive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{title}}:             {{value}}         click to change                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ComposerComponent', 'selector': 'app-composer'},{'name': 'ControlTemplate', 'selector': ''},{'name': 'DataInputComponent', 'selector': 'app-data-input'},{'name': 'DataInputV2Component', 'selector': 'app-data-input-v2'},{'name': 'DataItemComponent', 'selector': 'app-window-item'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HostComponent', 'selector': ''},{'name': 'HowToUseComponent', 'selector': 'app-how-to-use'},{'name': 'MirroringModuleInstanceComponent', 'selector': ''},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavbarElementComponent', 'selector': 'app-navbar-element'},{'name': 'NetworkComponent', 'selector': ''},{'name': 'OffcanvasComponent', 'selector': 'app-offcanvas'},{'name': 'ReteModuleComposerComponent', 'selector': 'app-rete-module-composer'},{'name': 'ReteModuleVisualizerComponent', 'selector': 'app-rete-module-visualizer'},{'name': 'ReteTheaterComposerComponent', 'selector': 'app-rete-theater-composer'},{'name': 'ReteTheaterVisualizerComponent', 'selector': 'app-rete-theater-visualizer'},{'name': 'SubnetComponent', 'selector': ''},{'name': 'TabnavComponent', 'selector': 'app-tabnav'},{'name': 'TheaterInternalServiceModuleInstanceComponent', 'selector': ''},{'name': 'TheaterModuleInstanceComponent', 'selector': ''},{'name': 'UnderbarComponent', 'selector': 'app-underbar'},{'name': 'VisualizerComponent', 'selector': 'app-displayer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DataInputV2Component'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"components/DataItemComponent.html":{"url":"components/DataItemComponent.html","title":"component - DataItemComponent","body":"\n                   \n\n\n\n\n\n  Componenti\n  \n  DataItemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/data-item/data-item.component.ts\n\n\n\n    \n        Descrizione\n    \n    \n        Componente usata per mostrare, tipo accordion, determinati livelli.\nProducendo una vista \"astratta\" dell'oggetto e i suoi elementi.\nPermette di eseguire il collapse.\nPermette di mostrare la cancellazione. Gestire correttamente questo caso.\nSee {onRemove}\n\n    \n\n\n\n\n\n    Metadati\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-window-item\n            \n\n            \n                styleUrls\n                ./data-item.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./data-item.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                closeIconClass\n                            \n                            \n                                    Protected\n                                toOpenIconClass\n                            \n                            \n                                    Protected\n                                toReduceIconClass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                reduce\n                            \n                            \n                                remove\n                            \n                        \n                    \n                \n\n                \n                    \n                        Input\n                    \n                \n                \n                    \n                        \n                            \n                                isfull\n                            \n                            \n                                onlyResize\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Output\n                    \n                \n                \n                    \n                        \n                            \n                                onRemove\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Costruttore\n        \n            \n                \n                    \nconstructor(cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Definito in src/app/components/data-item/data-item.component.ts:42\n                            \n                        \n\n                \n                    \n                            Costruttore componente DataItemComponent.\n\n                            \n                                    Parametri :\n                                    \n                                        \n                                            \n                                                Nome\n                                                    Tipo\n                                                Opzionale\n                                            \n                                        \n                                        \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Input\n        \n            \n                \n                    \n                        \n                        isfull\n                    \n                \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                \n                    \n                        Valore predefinito : false\n                    \n                \n                        \n                            \n                                    Definito in src/app/components/data-item/data-item.component.ts:26\n                            \n                        \n                \n                    \n                        Varibile in input che rappresenta lo stato \"aperto\" o \"chiuso\" della componente\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        onlyResize\n                    \n                \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                \n                    \n                        Valore predefinito : false\n                    \n                \n                        \n                            \n                                    Definito in src/app/components/data-item/data-item.component.ts:31\n                            \n                        \n                \n                    \n                        Variabile di input che permette o meno la possibilità di visualizzare il pulsante di elimina.\nSee {remove}\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                    Definito in src/app/components/data-item/data-item.component.ts:21\n                            \n                        \n                \n                    \n                        Varibile di input che rappresenta il titolo della componente\n\n                    \n                \n            \n        \n\n    \n    Output\n        \n            \n                \n                    \n                        \n                        onRemove\n                    \n                \n                \n                    \n                        Tipo :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Definito in src/app/components/data-item/data-item.component.ts:37\n                            \n                        \n                \n                    \n                        Variabile di output che emette l'evento di eliminazione elemento.\nSee {remove}\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        reduce\n                        \n                    \n                \n            \n            \n                \nreduce()\n                \n            \n\n\n            \n                \n                    Definito in src/app/components/data-item/data-item.component.ts:54\n                \n            \n\n\n            \n                \n                    Funzione che esegue uno switch di valore della variabile che rappresenta il collapse dell'elemento.\nSee {isfull}\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove()\n                \n            \n\n\n            \n                \n                    Definito in src/app/components/data-item/data-item.component.ts:63\n                \n            \n\n\n            \n                \n                    Funzione che emette l'evento di click sul tasto di cancellazione.\nSee {onRemove}\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        closeIconClass\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                \n                    \n                        Valore predefinito : \"bi bi-x-lg\"\n                    \n                \n                    \n                        \n                                Definito in src/app/components/data-item/data-item.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        toOpenIconClass\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                \n                    \n                        Valore predefinito : \"bi bi-square\"\n                    \n                \n                    \n                        \n                                Definito in src/app/components/data-item/data-item.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        toReduceIconClass\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                \n                    \n                        Valore predefinito : \"bi bi-box-arrow-in-down-right\"\n                    \n                \n                    \n                        \n                                Definito in src/app/components/data-item/data-item.component.ts:40\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, Input, Output } from '@angular/core';\n\n/**\n * Componente usata per mostrare, tipo accordion, determinati livelli.\n * Producendo una vista \"astratta\" dell'oggetto e i suoi elementi.\n * Permette di eseguire il collapse.\n * Permette di mostrare la cancellazione. Gestire correttamente questo caso.\n * @see {onRemove}\n */\n@Component({\n  selector: 'app-window-item',\n  templateUrl: './data-item.component.html',\n  styleUrls: ['./data-item.component.sass'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DataItemComponent{\n  /**\n   * Varibile di input che rappresenta il titolo della componente\n   * @type {string}\n   */\n  @Input() title?: string;\n  /**\n   * Varibile in input che rappresenta lo stato \"aperto\" o \"chiuso\" della componente\n   * @type {boolean}\n   */\n  @Input() isfull?: boolean = false;\n  /**\n   * Variabile di input che permette o meno la possibilità di visualizzare il pulsante di elimina.\n   * @see {remove}\n   */\n  @Input() onlyResize?: boolean = false;\n\n  /**\n   * Variabile di output che emette l'evento di eliminazione elemento.\n   * @see {remove}\n   */\n  @Output() onRemove: EventEmitter = new EventEmitter();\n\n  // variabili classi icona -> bootstrap-icon\n  protected toReduceIconClass: string = \"bi bi-box-arrow-in-down-right\";\n  protected toOpenIconClass: string = \"bi bi-square\";\n  protected closeIconClass: string = \"bi bi-x-lg\";\n\n  /**\n   * Costruttore componente DataItemComponent.\n   * @param cdr \n   */\n  constructor(private cdr: ChangeDetectorRef) { }\n\n  /**\n   * Funzione che esegue uno switch di valore della variabile che rappresenta il collapse dell'elemento.\n   * @see {isfull} \n  */\n  reduce() {\n    this.isfull = !this.isfull;\n    this.cdr.detectChanges();\n  }\n  \n  /**\n   * Funzione che emette l'evento di click sul tasto di cancellazione.\n   * @see {onRemove} \n   */\n  remove(){\n    this.onRemove.emit(null);\n    this.cdr.detectChanges();\n  }\n\n\n}\n\n\n    \n\n    \n        \n    \n        \n            {{title}}\n        \n        \n            \n                  \n                 \n                \n            \n            \n                \n                    \n                \n            \n        \n    \n    \n        \n        \n    \n\n    \n\n    \n                \n                    ./data-item.component.sass\n                \n                .div-data-item\n    word-break: break-all\n    border-color: #626a71\n    border-radius: 1em\n    border-style: solid\n    margin: 1em\n\n.op-bar\n    padding: 1px!important\n\n.text-break\n    text-overflow: ellipsis\n    white-space: nowrap\n    overflow: hidden\n\n.content-div\n    padding-top: 0!important\n    padding: 1em\n\n.one-side-rounded\n    border-top-right-radius: 0.9em\n\n.two-side-rounded\n     border-top-right-radius: 0.9em\n     border-bottom-right-radius: 0.9em\n\n    \n    \n\n    \n        \n        \n            \n                Legenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento html con direttive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        {{title}}                                                                                                                                                                                                           '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ComposerComponent', 'selector': 'app-composer'},{'name': 'ControlTemplate', 'selector': ''},{'name': 'DataInputComponent', 'selector': 'app-data-input'},{'name': 'DataInputV2Component', 'selector': 'app-data-input-v2'},{'name': 'DataItemComponent', 'selector': 'app-window-item'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HostComponent', 'selector': ''},{'name': 'HowToUseComponent', 'selector': 'app-how-to-use'},{'name': 'MirroringModuleInstanceComponent', 'selector': ''},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavbarElementComponent', 'selector': 'app-navbar-element'},{'name': 'NetworkComponent', 'selector': ''},{'name': 'OffcanvasComponent', 'selector': 'app-offcanvas'},{'name': 'ReteModuleComposerComponent', 'selector': 'app-rete-module-composer'},{'name': 'ReteModuleVisualizerComponent', 'selector': 'app-rete-module-visualizer'},{'name': 'ReteTheaterComposerComponent', 'selector': 'app-rete-theater-composer'},{'name': 'ReteTheaterVisualizerComponent', 'selector': 'app-rete-theater-visualizer'},{'name': 'SubnetComponent', 'selector': ''},{'name': 'TabnavComponent', 'selector': 'app-tabnav'},{'name': 'TheaterInternalServiceModuleInstanceComponent', 'selector': ''},{'name': 'TheaterModuleInstanceComponent', 'selector': ''},{'name': 'UnderbarComponent', 'selector': 'app-underbar'},{'name': 'VisualizerComponent', 'selector': 'app-displayer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DataItemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/DataRouteComposer.html":{"url":"classes/DataRouteComposer.html","title":"class - DataRouteComposer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  DataRouteComposer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/appType.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Elemento che contiene le variabili da portare al router nel caso si tratti della costruzione.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                author\n                            \n                            \n                                description\n                            \n                            \n                                name\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        author\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/models/appType.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/models/appType.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/models/appType.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         SubjectType\n\n                    \n                \n                    \n                        \n                                Definito in src/app/models/appType.ts:68\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export enum SubjectType {\n    MODULE = \"Module\",\n    THEATER  = \"Theater\"\n}\n\n/**\n * Enum per eseguire le operazioni in base al tipo\n */\nexport enum ComposerVisualizerType {\n    COMPOSER = \"Composer\",\n    VISUALIZER  = \"Visualizer\"\n}\n\n/**\n * Enum per indicare il tipo di interfaccia\n */\nexport enum InterfacePortType {\n    CONSUMER = \"CONSUMER\",\n    PRODUCER = \"PRODUCER\"\n}\n\n/**\n * Enum per indicare il tipo di porta\n */\nexport enum NodePortType{\n    INPUT=\"input\",\n    OUTPUT=\"output\"\n}\n\n/**\n * Enum per indicare il tipo di sistma operativo\n */\nexport enum StaticValue{\n    SubnetOutput = \"Link\",\n    hostOS1 = \"Linux\",\n    hostOS2 = \"Ubuntu\",\n    hostOS3 = \"CentOS\",\n}\n\n/**\n * Enum per indicare la versione dell'ip\n */\nexport enum IpVersionType {\n    FOUR = \"4\",\n    SIXSTEEN = \"16\"\n}\n\n\n//// Router data\n\n/**\n * Elemento che contiene le variabili da portare al router nel caso si tratti della visualizzazione.\n */\nexport class DataRouteVisualizer{\n    id: number;\n    type: SubjectType;\n}\n/**\n * Elemento che contiene le variabili da portare al router nel caso si tratti della costruzione.\n */\nexport class DataRouteComposer{\n    name: string;\n    description: string;\n    author: string;\n    type: SubjectType;\n}\n\n\n/**\n * Enum per indicare i tipi di nodi nel modulo.\n */\nexport enum EnumNodeType {\n    Host = \"Host\",\n    Subnet = \"Subnet\",\n    Network = \"Network\",\n}\n/**\n * Enum per l'indicazione testuale descrittiva dei tipi di nodi nel modulo.\n */\nexport enum EnumNodeTypeDescription {\n    Host = \"Nodo Host\",\n    Subnet = \"Nodo Subnet\",\n    Network = \"Nodo Network\",\n}\n\n/**\n * Enum per indicare i tipi di moduli nel teatro.\n */\nexport enum EnumModuleType {\n    TheaterModuleInstance = \"TheaterModuleInstance\", // SINONIMI -> TheatreModuleInstance = \"TheatreModuleInstance\",\n    TheaterInternalServiceModuleInstance = \"TheaterInternalServiceModuleInstance\",\n    MirroringModuleInstance = \"MirroringModuleInstance\",\n    VirtualServerModuleInstance = \"VirtualServerModuleInstance\", //TODO\n    ExternalVirtualMachine = \"ExternalVirtualMachine\", //TODO\n    AutomaticSystem = \"AutomaticSystem\", //TODO\n    Border = \"Border\", //TODO\n}\n/**\n * Enum per l'indicazione testuale descrittiva dei tipi di modulo nel teatro.\n */\nexport enum EnumModuleTypeDescription {\n    TheaterModuleInstance = \"Module\", // SINONIMI -> TheatreModuleInstance = \"Module\",\n    TheaterInternalServiceModuleInstance = \"Internal Service\",\n    MirroringModuleInstance = \"Mirroring Module\",\n    VirtualServerModuleInstance = \"Virtual Server\", // TODO\n    ExternalVirtualMachine = \"External Virtual Machine\", // TODO\n    AutomaticSystem = \"Automatic System\", //TODO\n    Border = \"Border\", //TODO\n}\n\n\n// MODULES PROPERTIES\n\n\n/**\n * Enum che restituisce delle proprietà, espresse in termini di variabili indicatrici dei moduli.\n * Indica il tipo di un modulo e la sua rappresentazione. (api-restituzione moduli da teatro)\n */\n export enum ModuleTypeTheater {\n    TheaterModuleInstance = \"sysman.creo.nodes.TheaterModuleInstance\",\n    MirroringModuleInstance = \"sysman.creo.nodes.MirroringModuleInstance\",\n    TheaterInternalServiceModuleInstance = \"sysman.creo.nodes.TheaterInternalServiceModuleInstance\",\n    VirtualServerModuleInstance = \"sysman.creo.nodes.VirtualServerModuleInstance\", //TODO\n    ExternalVirtualMachine = \"sysman.creo.nodes.ExternalVirtualMachine\", //TODO\n    AutomaticSystem = \"sysman.creo.nodes.AutomaticSystem\", //TODO\n    Border = \"sysman.creo.nodes.Border\", //TODO\n}\n/**\n * Rappresentazione inversa di @see {ModuleTypeTheater}\n */\n export enum ModuleType1 {\n    \"sysman.creo.nodes.TheaterModuleInstance\" = \"TheaterModuleInstance\", // SINONIMI -> \"sysman.creo.nodes.TheatreModuleInstance\" = \"TheaterModuleInstance\",\n    \"sysman.creo.nodes.MirroringModuleInstance\" = \"MirroringModuleInstance\",\n    \"sysman.creo.nodes.TheaterInternalServiceModuleInstance\" = \"TheaterInternalServiceModuleInstance\",\n    \"sysman.creo.nodes.VirtualServerModuleInstance\" = \"VirtualServerModuleInstance\", //TODO\n    \"sysman.creo.nodes.ExternalVirtualMachine\" = \"ExternalVirtualMachine\", //TODO\n    \"sysman.creo.nodes.AutomaticSystem\" = \"AutomaticSystem\", //TODO\n    \"sysman.creo.nodes.Border\" = \"Border\", //TODO\n}\n\n\n/**\n * Enum che restituisce delle proprietà, espresse in termini di variabili indicatrici dei moduli.\n * Indica il tipo di un modulo e la sua altra indicazione in altri tipi di dati reperiti. (api-restituzione moduli da chiamata apposita)\n */\nexport enum ModuleTypeLink {\n    TheaterModuleInstance = \"THEATER\",\n    MirroringModuleInstance = \"MIRRORING\",\n    TheaterInternalServiceModuleInstance = \"INTERNAL_THEATRE_SERVICE\",\n    VirtualServerModuleInstance = \"VIRTUAL_SERVER\", // TODO\n    ExternalVirtualMachine = \"EXTERNAL_VIRTUAL_MACHINE\", // TODO\n    AutomaticSystem = \"AUTOMATIC_SYSTEM\", //TODO\n    Border = \"BORDER\", //TODO\n}\n/**\n * Rappresentazione inversa di @see {ModuleTypeLink}\n */\nexport enum ModuleType2 {\n    \"THEATRE\" = \"TheaterModuleInstance\", //Attenzione, per qualche motivo qui la corretta è teatRE. SINONIMI -> \"THEATRE\" = \"TheaterModuleInstance\",\n    \"MIRRORING\" = \"MirroringModuleInstance\",\n    \"INTERNAL_THEATRE_SERVICE\" = \"TheaterInternalServiceModuleInstance\",\n    \"VIRTUAL_SERVER\" = \"VirtualServerModuleInstance\", // TODO\n    \"EXTERNAL_VIRTUAL_MACHINE\" = \"ExternalVirtualMachine\", // TODO\n    \"AUTOMATIC_SYSTEM\" = \"AutomaticSystem\", // TODO\n    \"BORDER\" = \"Border\", // TODO\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/DataRouteVisualizer.html":{"url":"classes/DataRouteVisualizer.html","title":"class - DataRouteVisualizer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  DataRouteVisualizer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/appType.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Elemento che contiene le variabili da portare al router nel caso si tratti della visualizzazione.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/models/appType.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         SubjectType\n\n                    \n                \n                    \n                        \n                                Definito in src/app/models/appType.ts:59\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export enum SubjectType {\n    MODULE = \"Module\",\n    THEATER  = \"Theater\"\n}\n\n/**\n * Enum per eseguire le operazioni in base al tipo\n */\nexport enum ComposerVisualizerType {\n    COMPOSER = \"Composer\",\n    VISUALIZER  = \"Visualizer\"\n}\n\n/**\n * Enum per indicare il tipo di interfaccia\n */\nexport enum InterfacePortType {\n    CONSUMER = \"CONSUMER\",\n    PRODUCER = \"PRODUCER\"\n}\n\n/**\n * Enum per indicare il tipo di porta\n */\nexport enum NodePortType{\n    INPUT=\"input\",\n    OUTPUT=\"output\"\n}\n\n/**\n * Enum per indicare il tipo di sistma operativo\n */\nexport enum StaticValue{\n    SubnetOutput = \"Link\",\n    hostOS1 = \"Linux\",\n    hostOS2 = \"Ubuntu\",\n    hostOS3 = \"CentOS\",\n}\n\n/**\n * Enum per indicare la versione dell'ip\n */\nexport enum IpVersionType {\n    FOUR = \"4\",\n    SIXSTEEN = \"16\"\n}\n\n\n//// Router data\n\n/**\n * Elemento che contiene le variabili da portare al router nel caso si tratti della visualizzazione.\n */\nexport class DataRouteVisualizer{\n    id: number;\n    type: SubjectType;\n}\n/**\n * Elemento che contiene le variabili da portare al router nel caso si tratti della costruzione.\n */\nexport class DataRouteComposer{\n    name: string;\n    description: string;\n    author: string;\n    type: SubjectType;\n}\n\n\n/**\n * Enum per indicare i tipi di nodi nel modulo.\n */\nexport enum EnumNodeType {\n    Host = \"Host\",\n    Subnet = \"Subnet\",\n    Network = \"Network\",\n}\n/**\n * Enum per l'indicazione testuale descrittiva dei tipi di nodi nel modulo.\n */\nexport enum EnumNodeTypeDescription {\n    Host = \"Nodo Host\",\n    Subnet = \"Nodo Subnet\",\n    Network = \"Nodo Network\",\n}\n\n/**\n * Enum per indicare i tipi di moduli nel teatro.\n */\nexport enum EnumModuleType {\n    TheaterModuleInstance = \"TheaterModuleInstance\", // SINONIMI -> TheatreModuleInstance = \"TheatreModuleInstance\",\n    TheaterInternalServiceModuleInstance = \"TheaterInternalServiceModuleInstance\",\n    MirroringModuleInstance = \"MirroringModuleInstance\",\n    VirtualServerModuleInstance = \"VirtualServerModuleInstance\", //TODO\n    ExternalVirtualMachine = \"ExternalVirtualMachine\", //TODO\n    AutomaticSystem = \"AutomaticSystem\", //TODO\n    Border = \"Border\", //TODO\n}\n/**\n * Enum per l'indicazione testuale descrittiva dei tipi di modulo nel teatro.\n */\nexport enum EnumModuleTypeDescription {\n    TheaterModuleInstance = \"Module\", // SINONIMI -> TheatreModuleInstance = \"Module\",\n    TheaterInternalServiceModuleInstance = \"Internal Service\",\n    MirroringModuleInstance = \"Mirroring Module\",\n    VirtualServerModuleInstance = \"Virtual Server\", // TODO\n    ExternalVirtualMachine = \"External Virtual Machine\", // TODO\n    AutomaticSystem = \"Automatic System\", //TODO\n    Border = \"Border\", //TODO\n}\n\n\n// MODULES PROPERTIES\n\n\n/**\n * Enum che restituisce delle proprietà, espresse in termini di variabili indicatrici dei moduli.\n * Indica il tipo di un modulo e la sua rappresentazione. (api-restituzione moduli da teatro)\n */\n export enum ModuleTypeTheater {\n    TheaterModuleInstance = \"sysman.creo.nodes.TheaterModuleInstance\",\n    MirroringModuleInstance = \"sysman.creo.nodes.MirroringModuleInstance\",\n    TheaterInternalServiceModuleInstance = \"sysman.creo.nodes.TheaterInternalServiceModuleInstance\",\n    VirtualServerModuleInstance = \"sysman.creo.nodes.VirtualServerModuleInstance\", //TODO\n    ExternalVirtualMachine = \"sysman.creo.nodes.ExternalVirtualMachine\", //TODO\n    AutomaticSystem = \"sysman.creo.nodes.AutomaticSystem\", //TODO\n    Border = \"sysman.creo.nodes.Border\", //TODO\n}\n/**\n * Rappresentazione inversa di @see {ModuleTypeTheater}\n */\n export enum ModuleType1 {\n    \"sysman.creo.nodes.TheaterModuleInstance\" = \"TheaterModuleInstance\", // SINONIMI -> \"sysman.creo.nodes.TheatreModuleInstance\" = \"TheaterModuleInstance\",\n    \"sysman.creo.nodes.MirroringModuleInstance\" = \"MirroringModuleInstance\",\n    \"sysman.creo.nodes.TheaterInternalServiceModuleInstance\" = \"TheaterInternalServiceModuleInstance\",\n    \"sysman.creo.nodes.VirtualServerModuleInstance\" = \"VirtualServerModuleInstance\", //TODO\n    \"sysman.creo.nodes.ExternalVirtualMachine\" = \"ExternalVirtualMachine\", //TODO\n    \"sysman.creo.nodes.AutomaticSystem\" = \"AutomaticSystem\", //TODO\n    \"sysman.creo.nodes.Border\" = \"Border\", //TODO\n}\n\n\n/**\n * Enum che restituisce delle proprietà, espresse in termini di variabili indicatrici dei moduli.\n * Indica il tipo di un modulo e la sua altra indicazione in altri tipi di dati reperiti. (api-restituzione moduli da chiamata apposita)\n */\nexport enum ModuleTypeLink {\n    TheaterModuleInstance = \"THEATER\",\n    MirroringModuleInstance = \"MIRRORING\",\n    TheaterInternalServiceModuleInstance = \"INTERNAL_THEATRE_SERVICE\",\n    VirtualServerModuleInstance = \"VIRTUAL_SERVER\", // TODO\n    ExternalVirtualMachine = \"EXTERNAL_VIRTUAL_MACHINE\", // TODO\n    AutomaticSystem = \"AUTOMATIC_SYSTEM\", //TODO\n    Border = \"BORDER\", //TODO\n}\n/**\n * Rappresentazione inversa di @see {ModuleTypeLink}\n */\nexport enum ModuleType2 {\n    \"THEATRE\" = \"TheaterModuleInstance\", //Attenzione, per qualche motivo qui la corretta è teatRE. SINONIMI -> \"THEATRE\" = \"TheaterModuleInstance\",\n    \"MIRRORING\" = \"MirroringModuleInstance\",\n    \"INTERNAL_THEATRE_SERVICE\" = \"TheaterInternalServiceModuleInstance\",\n    \"VIRTUAL_SERVER\" = \"VirtualServerModuleInstance\", // TODO\n    \"EXTERNAL_VIRTUAL_MACHINE\" = \"ExternalVirtualMachine\", // TODO\n    \"AUTOMATIC_SYSTEM\" = \"AutomaticSystem\", // TODO\n    \"BORDER\" = \"Border\", // TODO\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/DeployInstanceDTO.html":{"url":"classes/DeployInstanceDTO.html","title":"class - DeployInstanceDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  DeployInstanceDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsDTO/theaterDTO.ts\n        \n\n\n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                    Opzionale\n                                moduleInstanceConfigurationUUID\n                            \n                            \n                                moduleInstanceName\n                            \n                            \n                                moduleInstanceUUID\n                            \n                            \n                                moduleUUID\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        moduleInstanceConfigurationUUID\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/theaterDTO.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        moduleInstanceName\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/theaterDTO.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        moduleInstanceUUID\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/theaterDTO.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        moduleUUID\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/theaterDTO.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ElementIntoTheaterDTO, ModuleInstanceDTO, TheaterInstanceDTO } from \"./moduleDTO\"\n\nexport class TagCatalogueDTO {\n    description: string\n    id: string | number\n    name: string\n}\n\nexport class TheatreStatusDTO {\n    code: string\n    id: string | number\n    name: string\n}\n\nexport class DeployInstanceDTO {\n    moduleInstanceConfigurationUUID?: string\n    moduleInstanceName: string\n    moduleInstanceUUID: string\n    moduleUUID: string\n}\n\nexport class BlueprintFileDTO {\n    description: string\n    imports: string[]\n    node_templates: {[name:string]:ModuleInstanceDTO|TheaterInstanceDTO}\n    tosca_definitions_version: string\n}\n\nexport class NameMappingDTO {\n    display_name: string\n    module_instance_name: string\n    module_name: string\n    node_template_name: string\n}\nexport class EntityNameMappingFileDTO {\n    name_mapping: NameMappingDTO[]\n}\nexport class TheaterDTO {\n    author: string\n    blueprintFile: BlueprintFileDTO\n    blueprintUUID: string | number\n    createdBy: string\n    createdDate: string\n    deploymentSequence: {[index:string]:DeployInstanceDTO} //tosee\n    description: string\n    entityNameMappingFile: EntityNameMappingFileDTO\n    id: string | number\n    isLocked: boolean\n    lastModifiedBy: string\n    lastModifiedDate: string\n    lockAcquiredTimestamp: string\n    lockLastUserAcquiring: string\n    lockReleasedTimestamp: string\n    name: string\n    status: TheatreStatusDTO\n    tags: TagCatalogueDTO[]\n    uuid: string\n    version: string\n}\n\nexport const TheaterType: string = \"sysman.creo.nodes.Theater\";\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"components/DocsComponent.html":{"url":"components/DocsComponent.html","title":"component - DocsComponent","body":"\n                   \n\n\n\n\n\n  Componenti\n  \n  DocsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/docs/docs.component.ts\n\n\n\n    \n        Descrizione\n    \n    \n        Componente (pagina) che ha lo scopo di mostrare la documentazione generata da compodoc.\n\nServita come html in un .\n\n\n    \n\n\n    \n        Implementa\n    \n    \n                    OnInit\n    \n\n\n\n    Metadati\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-docs\n            \n\n            \n                styleUrls\n                ./docs.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./docs.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                compodoc_index_html\n                            \n                            \n                                    Protected\n                                IFRAMEvisibility\n                            \n                        \n                    \n                \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Costruttore\n        \n            \n                \n                    \nconstructor(sanitizer: DomSanitizer, http: HttpClient)\n                    \n                \n                        \n                            \n                                Definito in src/app/pages/docs/docs.component.ts:25\n                            \n                        \n\n                \n                    \n                            Costruttore componete DocsComponent\n\n                            \n                                    Parametri :\n                                    \n                                        \n                                            \n                                                Nome\n                                                    Tipo\n                                                Opzionale\n                                            \n                                        \n                                        \n                                                \n                                                        sanitizer\n                                                  \n                                                        \n                                                                        DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Definito in src/app/pages/docs/docs.component.ts:42\n                \n            \n\n\n            \n                \n                    Funzione richiamata all'inizializzazione della componente.\nPrevede di eseguire la chiamata per reperire l'html della documentazione.\nSee {compodoc_index_html}\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        compodoc_index_html\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         any\n\n                    \n                \n                    \n                        \n                                Definito in src/app/pages/docs/docs.component.ts:20\n                        \n                    \n\n            \n                \n                    Variabile che indica l'html (sanitized) reperito dalla documentazione.\nSee {DomSanitizer}\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        IFRAMEvisibility\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                \n                    \n                        Valore predefinito : 'none'\n                    \n                \n                    \n                        \n                                Definito in src/app/pages/docs/docs.component.ts:25\n                        \n                    \n\n            \n                \n                    Variabile che indica la visibilit o meno dell' rispettivamente: \"none\" \"block\".\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { DomSanitizer} from '@angular/platform-browser';\n\n/**\n * Componente (pagina) che ha lo scopo di mostrare la documentazione generata da compodoc.\n * - Servita come html in un .\n */\n@Component({\n  selector: 'app-docs',\n  templateUrl: './docs.component.html',\n  styleUrls: ['./docs.component.sass']\n})\nexport class DocsComponent implements OnInit {\n\n  /**\n   * Variabile che indica l'html (sanitized) reperito dalla documentazione.\n   * @see {DomSanitizer}\n   */\n  protected compodoc_index_html: any;\n  /**\n   * Variabile che indica la visibilit o meno dell' rispettivamente: \"none\" \"block\".\n   * @type {string} -> \"none\" | \"visible\".\n  */\n  protected IFRAMEvisibility: string = 'none';\n\n  /**\n   * Costruttore componete DocsComponent\n   * @param sanitizer \n   * @param http \n   */\n  constructor(\n    private sanitizer: DomSanitizer,\n    private http: HttpClient\n  ) {}\n\n  /**\n   * Funzione richiamata all'inizializzazione della componente.\n   * Prevede di eseguire la chiamata per reperire l'html della documentazione.\n   * @see {compodoc_index_html}\n   */\n  ngOnInit(): void {\n    const headers = new HttpHeaders().set('Content-Type', 'text/html');\n    this.http.get('assets/documentation/index.html', {headers, responseType: 'text'})\n    .subscribe(data => {\n      this.compodoc_index_html = this.sanitizer.bypassSecurityTrustHtml(data as string);\n    })\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n    \n    \n        \n             \n                \n                    \n                    Error: Embedded data could not be displayed.\n                 -->\n        \n    \n    \n    \n\n    \n\n    \n                \n                    ./docs.component.sass\n                \n                iframe\n    width: 100%\n    height: 100%\n\n.box\n    display: flex\n    flex-flow: column\n    height: 100%\n    width: 100%\n\n.box .rox.header\n    flex: 0 1 auto\n//   flex-grow: 0,\n//   flex-shrink: 1,\n//   flex-basis: auto\n\n.box .rox.content\n    flex: 1 1 auto\n\n.box .rox.footer\n    flex: 0 1 1px\n\n    \n\n    \n        \n        \n            \n                Legenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento html con direttive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                 Error: Embedded data could not be displayed.                 -->                    "},"classes/ElementIntoTheaterDTO.html":{"url":"classes/ElementIntoTheaterDTO.html","title":"class - ElementIntoTheaterDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  ElementIntoTheaterDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsDTO/moduleDTO.ts\n        \n\n\n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                properties\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        properties\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     ModuleInstancePropertiesDTO | TheaterInstancePropertiesDTO\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:159\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:160\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PageableDTO, SortDTO } from './elementDTO';\nimport { NetworkDTO } from './networkDTO';\nimport { TheaterDTO } from './theaterDTO';\n\n\nexport class ModuleListDTO {\n    content: SimpleModuleDTO[]\n    pageable: PageableDTO\n    last: boolean\n    totalPages: string | number\n    totalElements: string | number\n    size: string | number\n    number: string | number\n    sort: SortDTO\n    numberOfElements: string | number\n    first: boolean\n    empty: boolean\n}\n\n\nexport class TypesCatalogueDTO {\n    group: string\n    id: string | number\n    parentId: {}\n    value: string\n}\n\nexport class ModuleClassificationDTO {\n    blueprintType: string\n    category: string\n    expectedInstanceType: string\n    id: string | number\n    mcClass: string\n    type: string\n    uuid: string\n}\n\nexport class GenericParameterDTO {\n    type: string\n    default: string\n    description: string\n}\n\nexport class ConfigurationTemplateDTO {\n    anchor_parameters: { [name: string]: GenericParameterDTO | string }\n    instance_parameters: { [name: string]: GenericParameterDTO }\n    structural_parameters: { [name: string]: GenericParameterDTO }\n    fixed_parameters: { [name: string]: GenericParameterDTO }\n    control_parameters: { [name: string]: GenericParameterDTO }\n    infrastructure_parameters: { [name: string]: GenericParameterDTO }\n    module: string\n    description: string\n    category: string\n    version: string | number\n    platform: string\n}\n\nexport class ModuleModeDTO {\n    code: string\n    id: string | number\n    name: string\n}\n\nexport class ModuleStatusDTO {\n    descriptionCode: string\n    id: string | number\n    name: string\n}\nexport class StatisticItemDTO {\n    error: string | number\n    updated: string | number\n    inserted: string | number\n}\n\nexport class SimpleModuleDTO {\n    createdBy: string\n    createdDate: string\n    description: string\n    id: string | number\n    isLocked: boolean\n    lastModifiedBy: string\n    lastModifiedDate: string\n    lockAcquiredTimestamp: string\n    lockLastUserAcquiring: string\n    lockReleasedTimestamp: string\n    name: string\n    status: ModuleStatusDTO\n    type?: string | any\n    uuid: string\n    version: string | number\n}\nexport class ModuleDTO extends SimpleModuleDTO {\n    attachments: string[]\n    author: string\n    capabilities: { [name: string]: string }\n    catalog1: TypesCatalogueDTO\n    catalog2: TypesCatalogueDTO\n    catalog3: TypesCatalogueDTO\n    classification: ModuleClassificationDTO\n    configurationTemplate: ConfigurationTemplateDTO\n    detailProperties: {}\n    input: { [name: string]: string }\n    output: { [name: string]: string }\n    mode: ModuleModeDTO\n    statistics: { [name: string]: StatisticItemDTO | string | number }\n    tags: []\n}\n\nexport class ModuleNetworkInterfaceDTO {\n    id: string | number\n    label: string\n    module: ModuleDTO\n    network: NetworkDTO\n    nodeName: string\n    type: string\n    uuid: string\n}\n\nexport class ConsumerInterfaceLinkDTO {\n    local_interface: string\n    module_instance: string\n    remote_interface: string\n}\n\nexport class ModuleInstancePropertiesDTO {\n    area: string\n    description: string\n    module: string\n    version: string | number\n    sequence: string | number\n    consumer_interfaces_link: ConsumerInterfaceLinkDTO[]\n}\n\nexport class AreaDTO {\n    id: string | number;\n    uuid: string;\n    name: string;\n    description: string;\n    theater: TheaterDTO;\n    deleted: boolean | string;\n}\n\nexport class SimpleAreaDTO {\n    area: string\n    description: string\n}\nexport class TheaterInstancePropertiesDTO {\n    mode: string\n    tags: TagTIP[]\n    areas: SimpleAreaDTO[]\n    author: string\n    version: string | number\n    description: string\n}\nexport class TagTIP{\n    tag: string\n}\nexport class ElementIntoTheaterDTO {  // goes into map in blueprint [name:string]: Module...\n    properties: ModuleInstancePropertiesDTO | TheaterInstancePropertiesDTO\n    type: string\n}\nexport class ModuleInstanceDTO {\n    properties: ModuleInstancePropertiesDTO\n    type: string\n}\nexport class TheaterInstanceDTO {\n    properties: TheaterInstancePropertiesDTO\n    type: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/EmptyModuleInfo.html":{"url":"classes/EmptyModuleInfo.html","title":"class - EmptyModuleInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  EmptyModuleInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/rete-settings/nodes/rete-modules/export-rete-modules.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Elemento che assegna le variabili a funzioni che restituiscono una struttura inizializzata vuota dei singoli nodi.\nSee {getEmptyReteMirroringModuleInstanceInfo}\nSee {getEmptyReteTheaterModuleInstanceInfo}\nSee {getEmptyReteTheaterInternalServiceModuleInstanceInfo}\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                AutomaticSystem\n                            \n                            \n                                Border\n                            \n                            \n                                ExternalVirtualMachine\n                            \n                            \n                                MirroringModuleInstance\n                            \n                            \n                                TheaterInternalServiceModuleInstance\n                            \n                            \n                                TheaterModuleInstance\n                            \n                            \n                                VirtualServerModuleInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        AutomaticSystem\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ReteMirroringModuleInstanceInfo\n\n                    \n                \n                \n                    \n                        Valore predefinito : getEmptyReteMirroringModuleInstanceInfo()\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-modules/export-rete-modules.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Border\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ReteMirroringModuleInstanceInfo\n\n                    \n                \n                \n                    \n                        Valore predefinito : getEmptyReteMirroringModuleInstanceInfo()\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-modules/export-rete-modules.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ExternalVirtualMachine\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ReteMirroringModuleInstanceInfo\n\n                    \n                \n                \n                    \n                        Valore predefinito : getEmptyReteMirroringModuleInstanceInfo()\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-modules/export-rete-modules.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MirroringModuleInstance\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ReteMirroringModuleInstanceInfo\n\n                    \n                \n                \n                    \n                        Valore predefinito : getEmptyReteMirroringModuleInstanceInfo()\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-modules/export-rete-modules.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TheaterInternalServiceModuleInstance\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ReteTheaterInternalServiceModuleInstanceInfo\n\n                    \n                \n                \n                    \n                        Valore predefinito : getEmptyReteTheaterInternalServiceModuleInstanceInfo()\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-modules/export-rete-modules.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TheaterModuleInstance\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ReteTheaterModuleInstanceInfo\n\n                    \n                \n                \n                    \n                        Valore predefinito : getEmptyReteTheaterModuleInstanceInfo()\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-modules/export-rete-modules.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        VirtualServerModuleInstance\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ReteMirroringModuleInstanceInfo\n\n                    \n                \n                \n                    \n                        Valore predefinito : getEmptyReteMirroringModuleInstanceInfo()\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-modules/export-rete-modules.ts:41\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { getEmptyReteMirroringModuleInstanceInfo, MirroringModuleInstanceNode, ReteMirroringModuleInstanceInfo } from \"./mirroringModuleInstance/mirroringModuleInstanceNode\";\nimport { getEmptyReteTheaterInternalServiceModuleInstanceInfo, ReteTheaterInternalServiceModuleInstanceInfo, TheaterInternalServiceModuleInstanceNode } from \"./theaterInternalServiceModuleInstance/theaterInternalServiceModuleInstanceNode\";\nimport { getEmptyReteTheaterModuleInstanceInfo, ReteTheaterModuleInstanceInfo, TheaterModuleInstanceNode } from \"./theaterModuleInstance/theaterModuleInstanceNode\";\n\n/**\n * Enum utilizzato per indicare l'indice di riferimento degli array contenenti le informazioni.\n * @see {NodeComponents}\n */\nexport enum IndexModuleComponent {\n    TheaterModuleInstance = 0, //SINONIMO -> TheatreModuleInstance = 0, \n    MirroringModuleInstance = 1,\n    TheaterInternalServiceModuleInstance = 2,\n    VirtualServerModuleInstance = 1, //todo\n    ExternalVirtualMachine = 1, //todo\n    AutomaticSystem = 1, //todo\n    Border = 1 //todo\n}\n\n\n/**\n * Array utilizzato per assegnare i valori al component negli editor. \n * Usato per processare e creare i vari nodi (rete-node).\n */\nexport const ModuleComponents = [\n    new TheaterModuleInstanceNode(),\n    new MirroringModuleInstanceNode(),\n    new TheaterInternalServiceModuleInstanceNode()\n];\n\n\n/**\n * Elemento che assegna le variabili a funzioni che restituiscono una struttura inizializzata vuota dei singoli nodi.\n * @see {getEmptyReteMirroringModuleInstanceInfo}\n * @see {getEmptyReteTheaterModuleInstanceInfo}\n * @see {getEmptyReteTheaterInternalServiceModuleInstanceInfo}\n */\nexport class EmptyModuleInfo {\n    TheaterModuleInstance: ReteTheaterModuleInstanceInfo = getEmptyReteTheaterModuleInstanceInfo()\n    TheaterInternalServiceModuleInstance: ReteTheaterInternalServiceModuleInstanceInfo = getEmptyReteTheaterInternalServiceModuleInstanceInfo()\n    MirroringModuleInstance: ReteMirroringModuleInstanceInfo = getEmptyReteMirroringModuleInstanceInfo()\n    VirtualServerModuleInstance: ReteMirroringModuleInstanceInfo = getEmptyReteMirroringModuleInstanceInfo() // todo\n    ExternalVirtualMachine: ReteMirroringModuleInstanceInfo = getEmptyReteMirroringModuleInstanceInfo() // todo\n    AutomaticSystem: ReteMirroringModuleInstanceInfo = getEmptyReteMirroringModuleInstanceInfo() // todo\n    Border: ReteMirroringModuleInstanceInfo = getEmptyReteMirroringModuleInstanceInfo() // todo\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/EmptyNodeInfo.html":{"url":"classes/EmptyNodeInfo.html","title":"class - EmptyNodeInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  EmptyNodeInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/rete-settings/nodes/rete-nodes/export-rete-nodes.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Elemento che assegna le variabili a funzioni che restituiscono una struttura inizializzata vuota dei singoli nodi.\nSee {getEmptyHostInfo}\nSee {getEmptySubnetInfo}\nSee {getEmptyNetworkInfo}\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                Host\n                            \n                            \n                                    Static\n                                Network\n                            \n                            \n                                    Static\n                                Subnet\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        Host\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ReteHostInfo\n\n                    \n                \n                \n                    \n                        Valore predefinito : getEmptyHostInfo()\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-nodes/export-rete-nodes.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        Network\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ReteNetworkInfo\n\n                    \n                \n                \n                    \n                        Valore predefinito : getEmptyNetworkInfo()\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-nodes/export-rete-nodes.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        Subnet\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ReteSubnetInfo\n\n                    \n                \n                \n                    \n                        Valore predefinito : getEmptySubnetInfo()\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-nodes/export-rete-nodes.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { getEmptyHostInfo, HostNode, ReteHostInfo } from \"./host/hostNode\";\nimport { getEmptyNetworkInfo, NetworkNode, ReteNetworkInfo } from \"./network/networkNode\";\nimport { getEmptySubnetInfo, ReteSubnetInfo, SubnetNode } from \"./subnet/subnetNode\";\n\n/**\n * Enum utilizzato per indicare l'indice di riferimento degli array contenenti le informazioni.\n * @see {NodeComponents}\n */\nexport enum IndexNodeComponent {\n    Host = 0,\n    Subnet = 1,\n    Network = 2\n}\n\n/**\n * Array utilizzato per assegnare i valori al component negli editor. \n * Usato per processare e creare i vari nodi (rete-node).\n */\nexport const NodeComponents = [\n    new HostNode(),\n    new SubnetNode(),\n    new NetworkNode()\n];\n\n/**\n * Elemento che assegna le variabili a funzioni che restituiscono una struttura inizializzata vuota dei singoli nodi.\n * @see {getEmptyHostInfo}\n * @see {getEmptySubnetInfo}\n * @see {getEmptyNetworkInfo}\n */\nexport class EmptyNodeInfo {\n    static Host: ReteHostInfo = getEmptyHostInfo();\n    static Subnet: ReteSubnetInfo = getEmptySubnetInfo();\n    static Network: ReteNetworkInfo = getEmptyNetworkInfo();\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/EntityNameMappingFileDTO.html":{"url":"classes/EntityNameMappingFileDTO.html","title":"class - EntityNameMappingFileDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  EntityNameMappingFileDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsDTO/theaterDTO.ts\n        \n\n\n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                name_mapping\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        name_mapping\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         NameMappingDTO[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/theaterDTO.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ElementIntoTheaterDTO, ModuleInstanceDTO, TheaterInstanceDTO } from \"./moduleDTO\"\n\nexport class TagCatalogueDTO {\n    description: string\n    id: string | number\n    name: string\n}\n\nexport class TheatreStatusDTO {\n    code: string\n    id: string | number\n    name: string\n}\n\nexport class DeployInstanceDTO {\n    moduleInstanceConfigurationUUID?: string\n    moduleInstanceName: string\n    moduleInstanceUUID: string\n    moduleUUID: string\n}\n\nexport class BlueprintFileDTO {\n    description: string\n    imports: string[]\n    node_templates: {[name:string]:ModuleInstanceDTO|TheaterInstanceDTO}\n    tosca_definitions_version: string\n}\n\nexport class NameMappingDTO {\n    display_name: string\n    module_instance_name: string\n    module_name: string\n    node_template_name: string\n}\nexport class EntityNameMappingFileDTO {\n    name_mapping: NameMappingDTO[]\n}\nexport class TheaterDTO {\n    author: string\n    blueprintFile: BlueprintFileDTO\n    blueprintUUID: string | number\n    createdBy: string\n    createdDate: string\n    deploymentSequence: {[index:string]:DeployInstanceDTO} //tosee\n    description: string\n    entityNameMappingFile: EntityNameMappingFileDTO\n    id: string | number\n    isLocked: boolean\n    lastModifiedBy: string\n    lastModifiedDate: string\n    lockAcquiredTimestamp: string\n    lockLastUserAcquiring: string\n    lockReleasedTimestamp: string\n    name: string\n    status: TheatreStatusDTO\n    tags: TagCatalogueDTO[]\n    uuid: string\n    version: string\n}\n\nexport const TheaterType: string = \"sysman.creo.nodes.Theater\";\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/ExportModule.html":{"url":"classes/ExportModule.html","title":"class - ExportModule","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  ExportModule\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/application/export/exportModule.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che ha lo scopo di convertire il modulo nel formato YAML (standard TOSCA).\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                dataEditor\n                            \n                            \n                                    Protected\n                                module\n                            \n                            \n                                    Protected\n                                virtualMachines\n                            \n                        \n                    \n                \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                convertModule\n                            \n                            \n                                findNode\n                            \n                            \n                                getHostExport\n                            \n                            \n                                getModuleExport\n                            \n                            \n                                getNetworkExport\n                            \n                            \n                                getSubnetExport\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Costruttore\n        \n            \n                \n                    \nconstructor(module: ModuleApplication, dataEditor: Data)\n                    \n                \n                        \n                            \n                                Definito in src/app/services/application/export/exportModule.ts:28\n                            \n                        \n\n                \n                    \n                            Costruttore classe ExportModule\n\n                            \n                                    Parametri :\n                                    \n                                        \n                                            \n                                                Nome\n                                                    Tipo\n                                                Opzionale\n                                            \n                                        \n                                        \n                                                \n                                                        module\n                                                  \n                                                        \n                                                                        ModuleApplication\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dataEditor\n                                                  \n                                                        \n                                                                        Data\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        dataEditor\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         Data\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/application/export/exportModule.ts:22\n                        \n                    \n\n            \n                \n                    Variabile che ha lo scopo di memorizzare i dati dell'editor fornito al costruttore.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ModuleApplication\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/application/export/exportModule.ts:17\n                        \n                    \n\n            \n                \n                    Variabile che ha lo scopo di memorizzare il modulo fornito al costruttore.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        virtualMachines\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         VirtualMachine[]\n\n                    \n                \n                \n                    \n                        Valore predefinito : []\n                    \n                \n                    \n                        \n                                Definito in src/app/services/application/export/exportModule.ts:28\n                        \n                    \n\n            \n                \n                    Variabile di supporto.\nUsata per ottimizzare la parte di inserimento delle virtual machine nel ModuleSimpleData.\nSee {getHostExport}\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        convertModule\n                        \n                    \n                \n            \n            \n                \nconvertModule()\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/export/exportModule.ts:50\n                \n            \n\n\n            \n                \n                    Funzione che si occupa del parsing del modulo in formato adattabile all'export dello YAML.\n\nInizia assegnando i valori alle variabili che possono essere semplicemente dedotte dal modulo fornito nel costruttore.\nPrende i dati forniti dell'editor e itera su questi: in base al tipo richiama la funzione che restituisce il nodo parsed come oggetto YAML.\nSee {ModuleExport}\nSee {getHostExport}\nSee {getSubnetExport}\nSee {getNetworkExport}\n\n\n\n                    \n                    \n                    \n                        Returns :         ModuleExport\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findNode\n                        \n                    \n                \n            \n            \n                \nfindNode(name: string)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/export/exportModule.ts:316\n                \n            \n\n\n            \n                \n                    Funzone che serve per trovare il nodo partendo dal nome all'interno dei dati del canvas.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     NodeData\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHostExport\n                        \n                    \n                \n            \n            \n                \ngetHostExport(node: NodeData)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/export/exportModule.ts:92\n                \n            \n\n\n            \n                \n                    Funzione di parsing dell'host e delle porte.\n\nControlla le porte di output per le connessioni in uscita.\nItera sulle connessioni (porte i/o) e controlla le connessioni depends_on (subnet) e contained_in (network)\nSee {virtualMachines}\n\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                            NodeData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getModuleExport\n                        \n                    \n                \n            \n            \n                \ngetModuleExport()\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/export/exportModule.ts:241\n                \n            \n\n\n            \n                \n                    Funzione di parsing del modulo. Creazione dell'elemento modulo nel node_template.\n\nValorizza i dati che sono direttamente reperibili dalle informazioni del Modulo.\nSalva le virtual_machine @see {virtualMachines}\nInserimento delle interfacce consumer/provisor del modulo.\n\n\n\n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        : ModuleSimpleData }\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNetworkExport\n                        \n                    \n                \n            \n            \n                \ngetNetworkExport(network: NodeData)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/export/exportModule.ts:217\n                \n            \n\n\n            \n                \n                    Funzione di parsing del network.\n\nValorizza solamente i dati che sono direttamente reperibili dalle informazioni del nodo.\n\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    network\n                                    \n                                            NodeData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSubnetExport\n                        \n                    \n                \n            \n            \n                \ngetSubnetExport(subnet: NodeData)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/export/exportModule.ts:180\n                \n            \n\n\n            \n                \n                    Funzione di parsing della subnet.\n\nValorizza i dati che sono direttamente reperibili dalle informazioni del nodo.\nControlla le porte di output (connesisoni) che si collegano con la network per le relazioni contained_in.\n\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    subnet\n                                    \n                                            NodeData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Data, InputData, NodeData, NodesData, OutputData } from \"rete/types/core/data\";\nimport { EnumNodeType, InterfacePortType } from \"src/app/models/appType\";\nimport { ModuleApplication } from \"../../modelsApplication/applicationModels\";\nimport { ModuleExport, ModuleSimpleData, NetworkSimpleData, NodeSimpleData, PortSimpleData, PropertiesMSD, PropertiesSSD, SubnetSimpleData, VirtualMachine, VirtualMachinePorts } from \"../../modelsExport/moduleExport\";\nimport { ModeTypeExport, ModuleTypeExport, NetworkTypeExport, NodeTypeExport, PortTypeExport, RelationshipsTypeExport, SubnetTypeExport, ToscaDefinitionType } from \"../../modelsExport/TypeExport\";\n\n\n/**\n * Classe che ha lo scopo di convertire il modulo nel formato YAML (standard TOSCA).\n */\nexport class ExportModule {\n\n    /**\n     * Variabile che ha lo scopo di memorizzare il modulo fornito al costruttore.\n     * @type {ModuleApplication}\n     */\n    protected module: ModuleApplication\n    /**\n     * Variabile che ha lo scopo di memorizzare i dati dell'editor fornito al costruttore.\n     * @type {Data}\n     */\n    protected dataEditor: Data\n    /**\n     * Variabile di supporto.\n     * Usata per ottimizzare la parte di inserimento delle virtual machine nel ModuleSimpleData. \n     * @see {getHostExport}\n     */\n    protected virtualMachines: VirtualMachine[] = []; \n\n    /**\n     * Costruttore classe ExportModule\n     * @param module \n     * @param dataEditor \n     */\n    constructor(module: ModuleApplication, dataEditor: Data) {\n        this.module = module;\n        this.dataEditor = dataEditor;\n    }\n\n    /**\n     * Funzione che si occupa del parsing del modulo in formato adattabile all'export dello YAML.\n     * 1) Inizia assegnando i valori alle variabili che possono essere semplicemente dedotte dal modulo fornito nel costruttore.\n     * 2) Prende i dati forniti dell'editor e itera su questi: in base al tipo richiama la funzione che restituisce il nodo parsed come oggetto YAML.\n     * @return {ModuleExport}\n     * @see {ModuleExport} \n     * @see {getHostExport}\n     * @see {getSubnetExport}\n     * @see {getNetworkExport}\n     */\n    convertModule(): ModuleExport {\n        let me: ModuleExport = new ModuleExport();\n        me.tosca_definitions_version = ToscaDefinitionType.cloudify;\n        me.description = this.module.description;\n        me.imports = this.module.imports;\n        // node_Tempates\n        let nt: { [name: string]: ModuleSimpleData | NodeSimpleData | PortSimpleData | NetworkSimpleData | SubnetSimpleData } = {};\n        // inizia a prendere i nodi del modulo\n        for (let key in this.dataEditor.nodes) {\n            let element: NodeData = this.dataEditor.nodes[key];\n            if (element.data.type === EnumNodeType.Host) {\n                nt = Object.assign({}, nt, this.getHostExport(element));\n            }\n            else if (element.data.type === EnumNodeType.Subnet) {\n                nt = { ...nt, ...this.getSubnetExport(element) }\n            }\n            else if (element.data.type === EnumNodeType.Network) {\n                nt = { ...nt, ...this.getNetworkExport(element) }\n            }\n            else {\n                console.warn(\"Module type not recognized\");\n                continue;\n            }\n        }\n        // inserimento del modulo nei templates // deve essere fatto dopo che tutti i moduli sono stati completati -> guardare this.virtualMachines\n        nt = { ...nt, ...this.getModuleExport() }\n\n        me.node_templates = nt;\n\n        return me;\n    }\n\n\n\n    /**\n     * Funzione di parsing dell'host e delle porte.\n     * 1) Controlla le porte di output per le connessioni in uscita.\n     * 2) Itera sulle connessioni (porte i/o) e controlla le connessioni depends_on (subnet) e contained_in (network)\n     * @param node \n     * @return { { [name: string]: NodeSimpleData | PortSimpleData }}\n     * @see {virtualMachines}\n     */\n    getHostExport(node: NodeData): { [name: string]: NodeSimpleData | PortSimpleData } {\n\n        //serve al ModuleSimpleData\n        let MSDvm: VirtualMachine = { \n            virtual_machine: node.data.name as unknown as string, \n            ports: [] \n        };\n        let index: number = -1;\n\n        // get node\n        let singleNode: { [name: string]: NodeSimpleData } = {}\n        let nodeSimpleData: NodeSimpleData = {\n            type: NodeTypeExport.Host,\n            properties: undefined,\n            interfaces: undefined,\n            relationships: []\n        };\n        // node relation -> port # per ora solo le connessioni con le porte\n        (node.data.Output as []).forEach(\n            (out) => {\n                nodeSimpleData.relationships.push(\n                    { type: RelationshipsTypeExport.connect_port, target: out }\n                )\n            }\n        )\n        singleNode[node.data.name as unknown as string] = nodeSimpleData;\n\n\n\n        // get node ports\n        let ports: { [name: string]: PortSimpleData } = {};\n        for (let portName in node.outputs) {\n\n            MSDvm.ports[++index] = {\n                port: portName,\n                network: \"\",\n                subnets: [],\n            };\n\n            let nodePort: OutputData = node.outputs[portName];\n            let portSimpleData: PortSimpleData = {\n                type: PortTypeExport.Port,\n                relationships: []\n            }\n            // port relation -> net & sub # controllo ambo contained_in (net) e dependes_on (sub)\n            nodePort.connections.forEach(c => {\n                // prima depends_on\n                let subnetLinkedToPort: NodeData = this.dataEditor.nodes[c.node];\n                portSimpleData.relationships.push(\n                    { type: RelationshipsTypeExport.depends_on, target: subnetLinkedToPort.data.name as unknown as string }\n                );\n                MSDvm.ports[index].subnets.push({ subnet: subnetLinkedToPort.data.name as unknown as string });\n                // poi contained_in\n                for (let key in subnetLinkedToPort.outputs) {\n                    let subnetPort: OutputData = subnetLinkedToPort.outputs[key];\n                    // controllo network connesso alla sub.\n                    subnetPort.connections.forEach(c => {\n                        let networkConnectedToSubnet: NodeData = this.dataEditor.nodes[c.node];\n                        portSimpleData.relationships.push(\n                            { type: RelationshipsTypeExport.contained_in, target: networkConnectedToSubnet.data.name as unknown as string }\n                        );\n                        MSDvm.ports[index].network = networkConnectedToSubnet.data.name as unknown as string;\n                    })\n                }\n\n            })\n\n            ports[portName] = portSimpleData;\n        }\n\n        let out: { [name: string]: NodeSimpleData | PortSimpleData } = {};\n        out = Object.assign({}, singleNode, ports);\n\n\n        this.virtualMachines.push(MSDvm);\n\n        return out;\n    }\n\n\n\n    /**\n     * Funzione di parsing della subnet.\n     * 1) Valorizza i dati che sono direttamente reperibili dalle informazioni del nodo.\n     * 2) Controlla le porte di output (connesisoni) che si collegano con la network per le relazioni contained_in.\n     * @param subnet \n     * @returns {{ [name: string]: SubnetSimpleData }}\n     */\n    getSubnetExport(subnet: NodeData): { [name: string]: SubnetSimpleData } {\n        // get subnet\n        let singleSubnet: { [name: string]: SubnetSimpleData } = {}\n        let subnetSimpleData: SubnetSimpleData = {\n            type: SubnetTypeExport.Subnet,\n            relationships: [],\n            properties: {\n                openstack_config: null,\n                use_external_resource: false,\n                subnet: {\n                    ip_version: subnet.data.version as unknown as number,\n                    cidr: subnet.data.cidr as unknown as string,\n                    enable_dhcp: subnet.data.isDhcp as unknown as boolean,\n                    gateway_ip: null\n                }\n            }\n        };\n        // subnet relation -> network (only contained in)\n        (subnet.data.Output as []).forEach(\n            (out) => {\n                subnetSimpleData.relationships.push(\n                    { type: RelationshipsTypeExport.contained_in, target: out }\n                )\n            }\n        )\n        singleSubnet[subnet.data.name as unknown as string] = subnetSimpleData;\n\n        return singleSubnet;\n    }\n\n\n    /**\n     * Funzione di parsing del network.\n     * 1) Valorizza solamente i dati che sono direttamente reperibili dalle informazioni del nodo.\n     * @param subnet \n     * @returns {{ [name: string]: NetworkSimpleData }}\n     */\n    getNetworkExport(network: NodeData): { [name: string]: NetworkSimpleData } {\n        // get subnet\n        let singleNetwork: { [name: string]: NetworkSimpleData } = {}\n        let networkSimpleData: NetworkSimpleData = {\n            type: NetworkTypeExport.Network,\n            properties: {\n                openstack_config: null,\n                use_external_resource: false,\n            }\n        };\n\n        singleNetwork[network.data.name as unknown as string] = networkSimpleData;\n\n        return singleNetwork;\n    }\n\n\n    /**\n     * Funzione di parsing del modulo. Creazione dell'elemento modulo nel node_template.\n     * 1) Valorizza i dati che sono direttamente reperibili dalle informazioni del Modulo.\n     * 2) Salva le virtual_machine @see {virtualMachines}\n     * 3) Inserimento delle interfacce consumer/provisor del modulo.\n     * @returns { [name: string]: ModuleSimpleData }\n     */\n    getModuleExport(): { [name: string]: ModuleSimpleData } {\n        let moduleExport: { [name: string]: ModuleSimpleData } = {}\n        let moduleSimpleData: ModuleSimpleData = {\n            type: ModuleTypeExport[this.module.type]?ModuleTypeExport[this.module.type]:ModuleTypeExport[0],\n            properties: {\n                mode: ModeTypeExport.managed,\n                description: this.module.description,\n                version: this.module.version as number,\n                constraints: {\n                    interface_constraints: [],\n                    module_constraints: [],\n                    network_constraints: []\n                },\n                interface_networks: {\n                    providers: [],\n                    consumers: []\n                },\n                virtual_machines: this.virtualMachines ? this.virtualMachines : null, // per il come si è reperito -> guardare this.virtualMachines\n            }\n        };\n\n        // inserisco interfacce consumer/privisor\n        let index: number = null;\n        let indexC: number = -1;\n        let indexP: number = -1;\n        let type: string = null;\n        this.module.interfaces.forEach(i => {\n            if (i.type === InterfacePortType.CONSUMER) {\n                type = \"consumers\";\n                index = ++indexC;\n            }\n            else if (i.type === InterfacePortType.PRODUCER) {\n                type = \"providers\"\n                index = ++indexP;\n            }\n            else {\n                type = null;\n                console.warn(\"type not recognized\")\n                index = null;\n                return;\n            };\n            moduleSimpleData.properties.interface_networks[type].push(\n                {\n                    interface: i.nodeName,\n                    tag: i.nodeName,\n                    network: i.network.name,\n                    subnets: []\n                }\n            )\n            // prende le network + subnet ad esso connesse (se sono connesse)\n            let network: NodeData = this.findNode(i.network.name);\n            if (network) {\n                for (let key in network.inputs) {\n                    let networkInputPort: InputData = network.inputs[key];\n                    networkInputPort.connections.forEach(c => {\n                        let subnet: NodeData = this.dataEditor.nodes[c.node];\n                        moduleSimpleData.properties.interface_networks[type][index].subnets.push(\n                            { subnet: subnet.data.name as unknown as string }\n                        )\n                    })\n                }\n            }\n            index++;\n        })\n\n        moduleExport[this.module.name] = moduleSimpleData;\n\n        return moduleExport;\n    }\n\n    /**\n     * Funzone che serve per trovare il nodo partendo dal nome all'interno dei dati del canvas.\n     * @param name \n     * @returns {NodeData}\n     */\n    findNode(name: string): NodeData {\n        let n: NodeData = undefined\n        for (let key in this.dataEditor.nodes) {\n            let node: NodeData = this.dataEditor.nodes[key];\n            if ((node.data.name as unknown as string) === name) {\n                n = node;\n                break;\n            }\n        }\n        return n\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"injectables/ExportService.html":{"url":"injectables/ExportService.html","title":"injectable - ExportService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ExportService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/application/export/export.service.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Servizio di eport del canvas/editor sottoforma di file (scaricabile)\n\nPrevede l'export del teatro e modulo sottoforma di JSON (da poter utilizzare nell'applicazione).\nPrevede l'export del teatro e modulo sottoforma di YAML (standard tosca).\n\n\n            \n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                moduleType\n                            \n                            \n                                    Protected\n                                theaterType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                exportModuleToJSON\n                            \n                            \n                                exportModuleToYAML\n                            \n                            \n                                exportTheaterToJSON\n                            \n                            \n                                exportTheaterToYAML\n                            \n                            \n                                exportToJson\n                            \n                            \n                                exportToYaml\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Costruttore\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Definito in src/app/services/application/export/export.service.ts:32\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        exportModuleToJSON\n                        \n                    \n                \n            \n            \n                \nexportModuleToJSON(module: ModuleApplication, editor: Data)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/export/export.service.ts:54\n                \n            \n\n\n            \n                \n                    Funzione che esegue l'export di un modulo nel formato JSON (application).\nSee {exportToJson}\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    module\n                                    \n                                                ModuleApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    editor\n                                    \n                                                Data\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        exportModuleToYAML\n                        \n                    \n                \n            \n            \n                \nexportModuleToYAML(module: ModuleApplication, editor: Data)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/export/export.service.ts:43\n                \n            \n\n\n            \n                \n                    Funzione che esegue l'export di un modulo nel formato YAML standrard tosca.\nSee {ExportModule}\nSee {exportToYaml}\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    module\n                                    \n                                                ModuleApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    editor\n                                    \n                                                Data\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        exportTheaterToJSON\n                        \n                    \n                \n            \n            \n                \nexportTheaterToJSON(theater: TheaterApplication, editor: Data)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/export/export.service.ts:77\n                \n            \n\n\n            \n                \n                    Funzione che esegue l'export di un teatro nel formato JSON (application).\nSee {exportToJson}\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    theater\n                                    \n                                                TheaterApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    editor\n                                    \n                                                Data\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        exportTheaterToYAML\n                        \n                    \n                \n            \n            \n                \nexportTheaterToYAML(theater: TheaterApplication, editor: Data)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/export/export.service.ts:66\n                \n            \n\n\n            \n                \n                    Funzione che esegue l'export di un teatro nel formato YAML standrard tosca.\nSee {exportTheater}\nSee {exportToYaml}\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    theater\n                                    \n                                                TheaterApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    editor\n                                    \n                                                Data\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        exportToJson\n                        \n                    \n                \n            \n            \n                \nexportToJson(fn: string, objectData: any)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/export/export.service.ts:107\n                \n            \n\n\n            \n                \n                    Funzione che si occupa del download effettivo in un formato json.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    objectData\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        exportToYaml\n                        \n                    \n                \n            \n            \n                \nexportToYaml(fn: string, objectData: any)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/export/export.service.ts:86\n                \n            \n\n\n            \n                \n                    Funzione che si occupa del download effettivo in un formato yaml.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    objectData\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moduleType\n                        \n                    \n                \n            \n                \n                    \n                        Valore predefinito : \".\"+SubjectType.MODULE.toLowerCase()\n                    \n                \n                    \n                        \n                                Definito in src/app/services/application/export/export.service.ts:32\n                        \n                    \n\n            \n                \n                    Variabile che indica l'estensione aggiuntiva al nome e tipo del file\nSe si dovesse scaricare l'application (json) di un modulo, essa sarebbe: nomeMosulo.module.json\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        theaterType\n                        \n                    \n                \n            \n                \n                    \n                        Valore predefinito : \".\"+SubjectType.THEATER.toLowerCase()\n                    \n                \n                    \n                        \n                                Definito in src/app/services/application/export/export.service.ts:26\n                        \n                    \n\n            \n                \n                    Variabile che indica l'estensione aggiuntiva al nome e tipo del file\nSe si dovesse scaricare l'application (json) di un teatro, essa sarebbe: nomeTeatro.theater.json\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Data } from 'rete/types/core/data';\nimport { ModuleApplication, TheaterApplication } from '../../modelsApplication/applicationModels';\nimport { ModuleExport } from '../../modelsExport/moduleExport';\nimport { ExportModule } from './exportModule';\nimport { ExportTheater } from './exportTheater';\nimport { stringify as YAMLstringfy } from \"json-to-pretty-yaml\"\nimport { TheaterExport } from '../../modelsExport/theaterExport';\nimport { SubjectType } from 'src/app/models/appType';\n\n/**\n * Servizio di eport del canvas/editor sottoforma di file (scaricabile)\n * - Prevede l'export del teatro e modulo sottoforma di JSON (da poter utilizzare nell'applicazione).\n * - Prevede l'export del teatro e modulo sottoforma di YAML (standard tosca).\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ExportService {\n\n  /**\n   * Variabile che indica l'estensione aggiuntiva al nome e tipo del file\n   * @example \n   * Se si dovesse scaricare l'application (json) di un teatro, essa sarebbe: nomeTeatro.theater.json \n   */\n  protected theaterType=\".\"+SubjectType.THEATER.toLowerCase();\n    /**\n   * Variabile che indica l'estensione aggiuntiva al nome e tipo del file\n   * @example \n   * Se si dovesse scaricare l'application (json) di un modulo, essa sarebbe: nomeMosulo.module.json \n   */\n  protected moduleType=\".\"+SubjectType.MODULE.toLowerCase();\n\n  constructor() { }\n\n  /**\n   * Funzione che esegue l'export di un modulo nel formato YAML standrard tosca.\n   * @param module \n   * @param editor \n   * @see {ExportModule}\n   * @see {exportToYaml}\n   */\n  exportModuleToYAML(module: ModuleApplication, editor: Data) {\n    let data: ModuleExport = new ExportModule(module, editor).convertModule();\n    return this.exportToYaml(module.name, data);\n  }\n\n  /**\n   * Funzione che esegue l'export di un modulo nel formato JSON (application).\n   * @param module \n   * @param editor \n   * @see {exportToJson} \n   */\n  exportModuleToJSON(module: ModuleApplication, editor: Data) {\n    return this.exportToJson(module.name+this.moduleType, module);\n  }\n\n\n  /**\n   * Funzione che esegue l'export di un teatro nel formato YAML standrard tosca.\n   * @param module \n   * @param editor \n   * @see {exportTheater}\n   * @see {exportToYaml}\n   */\n  exportTheaterToYAML(theater: TheaterApplication, editor: Data) {\n    let data: TheaterExport = new ExportTheater(theater, editor).convertTheater();\n    return this.exportToYaml(theater.name, data);\n  }\n\n  /**\n   * Funzione che esegue l'export di un teatro nel formato JSON (application).\n   * @param module \n   * @param editor \n   * @see {exportToJson} \n   */\n  exportTheaterToJSON(theater: TheaterApplication, editor: Data) {\n    return this.exportToJson(theater.name+this.theaterType, theater);\n  }\n\n  /**\n   * Funzione che si occupa del download effettivo in un formato yaml.\n   * @param fn \n   * @param objectData \n   */\n  exportToYaml(fn: string, objectData: any) {\n    const data = YAMLstringfy(objectData);\n    let filename = fn + \".yaml\";\n    let contentType = \"application/json;charset=utf-8;\";\n    var blob = new Blob([decodeURIComponent(encodeURI(data))], { type: contentType });\n    const url = window.URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    document.body.appendChild(a);\n    a.classList.add('d-none');\n    a.href = url;\n    a.download = filename;\n    a.click();\n    window.URL.revokeObjectURL(url);\n    a.remove();\n  }\n\n  /**\n   * Funzione che si occupa del download effettivo in un formato json.\n   * @param fn \n   * @param objectData \n   */\n  exportToJson(fn: string, objectData: any) {\n    const data = JSON.stringify(objectData);\n    let filename = fn + \".json\";\n    let contentType = \"application/json;charset=utf-8;\";\n    var blob = new Blob([decodeURIComponent(encodeURI(data))], { type: contentType });\n    const url = window.URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    document.body.appendChild(a);\n    a.classList.add('d-none');\n    a.href = url;\n    a.download = filename;\n    a.click();\n    window.URL.revokeObjectURL(url);\n    a.remove();\n  }\n\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/ExportTheater.html":{"url":"classes/ExportTheater.html","title":"class - ExportTheater","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  ExportTheater\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/application/export/exportTheater.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che ha lo scopo di convertire il teatro nel formato YAML (standard TOSCA).\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                dataEditor\n                            \n                            \n                                theater\n                            \n                        \n                    \n                \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                convertTheater\n                            \n                            \n                                getModuleInstanceExport\n                            \n                            \n                                getTheaterExport\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Costruttore\n        \n            \n                \n                    \nconstructor(theater: TheaterApplication, dataEditor: Data)\n                    \n                \n                        \n                            \n                                Definito in src/app/services/application/export/exportTheater.ts:19\n                            \n                        \n\n                \n                    \n                            Costruttore classe ExportTheater\n\n                            \n                                    Parametri :\n                                    \n                                        \n                                            \n                                                Nome\n                                                    Tipo\n                                                Opzionale\n                                            \n                                        \n                                        \n                                                \n                                                        theater\n                                                  \n                                                        \n                                                                        TheaterApplication\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dataEditor\n                                                  \n                                                        \n                                                                        Data\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        dataEditor\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         Data\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/application/export/exportTheater.ts:19\n                        \n                    \n\n            \n                \n                    Variabile che ha lo scopo di memorizzare i dati dell'editor fornito al costruttore.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        theater\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         TheaterApplication\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/application/export/exportTheater.ts:14\n                        \n                    \n\n            \n                \n                    Variabile che ha lo scopo di memorizzare il teatro fornito al costruttore.\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        convertTheater\n                        \n                    \n                \n            \n            \n                \nconvertTheater()\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/export/exportTheater.ts:37\n                \n            \n\n\n            \n                \n                    Funzione che si occupa del parsing del modulo in formato adattabile all'export dello YAML.\n\nInizia assegnando i valori alle variabili che possono essere semplicemente dedotte dal teatro fornito nel costruttore.\nPrende i dati forniti dell'editor e itera su questi - restituisce il modulo parsed come oggetto YAML.\n\n\n\n                    \n                    \n                    \n                        Returns :         TheaterExport\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getModuleInstanceExport\n                        \n                    \n                \n            \n            \n                \ngetModuleInstanceExport(module: NodeData)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/export/exportTheater.ts:62\n                \n            \n\n\n            \n                \n                    Funzione che prende in input un nodo-modulo e lo converte in un oggetto adattabile allo YAML (TOSCA).\n\nInizia valorizzando i dati immediatamente disponibile dalle info del nodo.\nItera sulle connessioni in ingresso del nodo e salva le varie associazioni.\n\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    module\n                                    \n                                            NodeData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTheaterExport\n                        \n                    \n                \n            \n            \n                \ngetTheaterExport()\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/export/exportTheater.ts:101\n                \n            \n\n\n            \n                \n                    Funzione di parsing del teatro. Creazione dell'elemento teatro nel node_template.\n\nValorizza i dati che sono direttamente reperibili dalle informazioni del Modulo.\nSalva le informazioni delle aree e dei tag.\n\n\n\n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        : TheaterSimpleData }\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Data, InputData, NodeData } from \"rete/types/core/data\";\nimport { TheaterApplication } from \"../../modelsApplication/applicationModels\";\nimport { ModuleInstanceSimpleData, PropertiesMISD, TheaterExport, TheaterSimpleData } from \"../../modelsExport/theaterExport\";\nimport { ModeTypeExport, ModuleTypeExport, TheaterTypeExport, ToscaDefinitionType } from \"../../modelsExport/TypeExport\";\n\n/**\n * Classe che ha lo scopo di convertire il teatro nel formato YAML (standard TOSCA).\n */\nexport class ExportTheater {\n    /**\n     * Variabile che ha lo scopo di memorizzare il teatro fornito al costruttore.\n     * @type {TheaterApplication}\n     */\n    theater: TheaterApplication\n    /**\n     * Variabile che ha lo scopo di memorizzare i dati dell'editor fornito al costruttore.\n     * @type {Data}\n     */\n    dataEditor: Data\n\n    /**\n     * Costruttore classe ExportTheater\n     * @param theater \n     * @param dataEditor \n     */\n    constructor(theater: TheaterApplication, dataEditor: Data) {\n        this.theater = theater;\n        this.dataEditor = dataEditor;\n    }\n\n    /**\n     * Funzione che si occupa del parsing del modulo in formato adattabile all'export dello YAML.\n     * 1) Inizia assegnando i valori alle variabili che possono essere semplicemente dedotte dal teatro fornito nel costruttore.\n     * 2) Prende i dati forniti dell'editor e itera su questi - restituisce il modulo parsed come oggetto YAML.\n     * @returns {TheaterExport}\n     */\n    convertTheater(): TheaterExport {\n        let te: TheaterExport = new TheaterExport();\n        te.tosca_definitions_version = ToscaDefinitionType.cloudify\n        te.description = this.theater.description;\n        te.imports = this.theater.blueprintFile.imports;\n        let nt: { [name: string]: TheaterSimpleData | ModuleInstanceSimpleData } = {}\n        // inizia a prendere i moduli del teatro\n        for (let key in this.dataEditor.nodes) {\n            let element: NodeData = this.dataEditor.nodes[key];\n            nt = Object.assign({}, nt, this.getModuleInstanceExport(element));\n        }\n        nt = { ...nt, ...this.getTheaterExport() }\n        te.node_templates = nt;\n        return te;\n    }\n\n\n\n    /**\n     * Funzione che prende in input un nodo-modulo e lo converte in un oggetto adattabile allo YAML (TOSCA).\n     * 1) Inizia valorizzando i dati immediatamente disponibile dalle info del nodo.\n     * 2) Itera sulle connessioni in ingresso del nodo e salva le varie associazioni.\n     * @param module \n     * @returns  {{ [name: string]: ModuleInstanceSimpleData }}\n     */\n    getModuleInstanceExport(module: NodeData): { [name: string]: ModuleInstanceSimpleData } {\n        let mi: { [name: string]: ModuleInstanceSimpleData } = {};\n        let moduleInstanceSimpleData: ModuleInstanceSimpleData = {\n            type: ModuleTypeExport[module.data.type as unknown as string] ? ModuleTypeExport[module.data.type as unknown as string] : ModuleTypeExport[0],\n            properties: {\n                module: module.data.module as unknown as string,\n                version: module.data.version as unknown as string,\n                area: module.data.area as unknown as string,\n                sequence: module.data.sequence as unknown as number,\n                consumer_interface_link: [],\n                sources: null,\n            }\n        }\n\n        for (let key in module.inputs) {\n            let consumerIF: InputData = module.inputs[key];\n            consumerIF.connections.forEach(c => {\n                let moduleConnected: NodeData = this.dataEditor.nodes[c.node];\n                moduleInstanceSimpleData.properties.consumer_interface_link.push(\n                    {\n                        local_interface: key,\n                        module_interface: moduleConnected.data.name as unknown as string,\n                        remote_interface: c.output\n                    }\n                )\n            })\n        }\n\n        mi[module.data.name as unknown as string] = moduleInstanceSimpleData;\n        return mi;\n    }\n\n\n    /**\n     * Funzione di parsing del teatro. Creazione dell'elemento teatro nel node_template.\n     * 1) Valorizza i dati che sono direttamente reperibili dalle informazioni del Modulo.\n     * 3) Salva le informazioni delle aree e dei tag.\n     * @returns { [name: string]: TheaterSimpleData }\n     */\n    getTheaterExport(): { [name: string]: TheaterSimpleData } {\n        let ti: { [name: string]: TheaterSimpleData } = {};\n        let theaterSimpleData: TheaterSimpleData = {\n            type: TheaterTypeExport.Theater,\n            properties: {\n                version: this.theater.version,\n                description: this.theater.version,\n                mode: ModeTypeExport.managed,\n                author: this.theater.author,\n                areas: [],\n                tags: [],\n            }\n        }\n\n        this.theater.properties.areas.forEach(a => {\n            theaterSimpleData.properties.areas.push(\n                { area: a.area, description: a.description }\n            )\n        });\n\n        this.theater.tags.forEach(t => {\n            theaterSimpleData.properties.tags.push(\n                { tag: t.name }\n            )\n        });\n\n        ti[this.theater.name] = theaterSimpleData;\n        return ti\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"injectables/FileService.html":{"url":"injectables/FileService.html","title":"injectable - FileService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FileService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/application/file/file.service.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Servizio di gestione di importing file da locale all'app.\n\n            \n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                selectedFile\n                            \n                        \n                    \n                \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                getFile\n                            \n                            \n                                    Async\n                                onFileSelected\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Costruttore\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Definito in src/app/services/application/file/file.service.ts:15\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        getFile\n                        \n                    \n                \n            \n            \n                \ngetFile()\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/file/file.service.ts:51\n                \n            \n\n\n            \n                \n                    Funzione cha come scopo ritornare il file (sottoforma di oggetto parserizzato) captato dall'input.\n\n\n                    \n                    \n                    \n                        Returns :     File\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onFileSelected\n                        \n                    \n                \n            \n            \n                \n                    \n                    onFileSelected(event: any)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/file/file.service.ts:25\n                \n            \n\n\n            \n                \n                    Funzione che viene richiamata per gestire l'evento dell'input una volta captato il file.\nSi occupa anche di parserizzare il file sottoforma di oggetto (json).\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        selectedFile\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     File\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/application/file/file.service.ts:15\n                        \n                    \n\n            \n                \n                    Variabile che ha come scopo il salvataggio di informazioni del file.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n * Servizio di gestione di importing file da locale all'app.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class FileService {\n\n  /**\n   * Variabile che ha come scopo il salvataggio di informazioni del file.\n   * @type {File}\n   */\n  protected selectedFile: File;\n\n  constructor() { }\n\n  /**\n   * Funzione che viene richiamata per gestire l'evento dell'input una volta captato il file.\n   * Si occupa anche di parserizzare il file sottoforma di oggetto (json).\n   * @param event \n   * @return {Promise}\n   */\n  async onFileSelected(event: any): Promise {\n    this.selectedFile = event.target.files[0];\n    const fileReader = new FileReader();\n    fileReader.readAsText(this.selectedFile, \"UTF-8\");\n    return new Promise((resolve, reject) => {\n      fileReader.onload = async () => {\n        try {\n          if(this.selectedFile.type!==\"application/json\")\n            reject(\"The file selected is not supproted.\")\n          resolve(JSON.parse(fileReader.result as string));\n        }\n        catch (e) {\n          reject(e);\n        }\n      }\n      fileReader.onerror = (error) => {\n        reject(\"Unable to read file.\");\n      }\n    }\n    )\n  }\n\n  /**\n   * Funzione cha come scopo ritornare il file (sottoforma di oggetto parserizzato) captato dall'input.\n   * @returns \n   */\n  getFile(): File{\n    return this.selectedFile;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/FlavorApplication.html":{"url":"classes/FlavorApplication.html","title":"class - FlavorApplication","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  FlavorApplication\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsApplication/applicationModels.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        FlavorBasicInfo\n            \n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                flavorName\n                            \n                            \n                                cpu\n                            \n                            \n                                disk\n                            \n                            \n                                ram\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        flavorName\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsApplication/applicationModels.ts:112\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cpu\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     number | string\n\n                    \n                \n                        \n                            \n                                ereditato da         FlavorBasicInfo\n\n                            \n                        \n                    \n                        \n                                Definito in         FlavorBasicInfo:2\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        disk\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     number | string\n\n                    \n                \n                        \n                            \n                                ereditato da         FlavorBasicInfo\n\n                            \n                        \n                    \n                        \n                                Definito in         FlavorBasicInfo:3\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ram\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     number | string\n\n                    \n                \n                        \n                            \n                                ereditato da         FlavorBasicInfo\n\n                            \n                        \n                    \n                        \n                                Definito in         FlavorBasicInfo:4\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ReteHostInfo } from \"src/app/rete-settings/nodes/rete-nodes/host/hostNode\";\nimport { ReteNetworkInfo } from \"src/app/rete-settings/nodes/rete-nodes/network/networkNode\";\nimport { ReteSubnetInfo } from \"src/app/rete-settings/nodes/rete-nodes/subnet/subnetNode\";\nimport { ReteMirroringModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/mirroringModuleInstance/mirroringModuleInstanceNode\";\nimport { ReteTheaterInternalServiceModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/theaterInternalServiceModuleInstance/theaterInternalServiceModuleInstanceNode\";\nimport { ReteTheaterModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/theaterModuleInstance/theaterModuleInstanceNode\";\nimport { FlavorBasicInfo } from \"../modelsDTO/falvorDTO\";\nimport { HostModuleDTO } from \"../modelsDTO/hostDTO\";\nimport { ModuleNetworkInterfaceDTO, ModuleInstancePropertiesDTO, SimpleModuleDTO, TheaterInstancePropertiesDTO, ModuleInstanceDTO, ModuleDTO, SimpleAreaDTO, AreaDTO } from \"../modelsDTO/moduleDTO\";\nimport { TheaterDTO } from \"../modelsDTO/theaterDTO\";\n\n\nexport interface CommonModule {\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n}\n\n\n/**\n * Classe contenente gli attributi utilizzati per le operazioni che coinvolgono i moduli.\n * ps. Questa struttura è prettamente utilizzata nella chiamata relativa al singolo modulo.\n */\nexport class ModuleApplication extends ModuleDTO implements CommonModule {\n    imports: string[] // perchè nell'export yaml è previsto\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n}\n// PER IMPLEMENTAZIONI FUTURE, PER COERENZA, PRENDERE DIRETTAMENTE I SINGOLI NODI DALLA CHIAMATA ESCLUSIVA E NON DA QUELLA CHE RESTITUISCE TUTTI I TEATRI\n/**\n * Classe contenente gli attributi utilizzati per le operazioni che coinvolgono i moduli.\n * ps. Questa struttura è prettamente utilizzata nella chiamata che prende tutti i moduli del teatro.\n */\nexport class SimpleModuleApplication extends SimpleModuleDTO implements CommonModule {\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n}\n\n\nexport class ReteConnection {\n    from: string;\n    port_src: string;\n    to: string;\n    port_dst: string;\n}\n\nexport interface TopologyList {\n    rete: any;\n    topology?: TopologyElement\n}\nexport class TopologyElement {\n    elements: { [name: string]: any };\n    connection: ReteConnection[]\n}\n\n// apptype module topology\n\nexport class NodeTopologyElement implements TopologyElement {\n    elements: { [hostName: string]: ReteHostInfo | ReteSubnetInfo | ReteNetworkInfo };\n    connection: ReteConnection[]\n}\n\nexport interface ModuleTopology extends TopologyList {\n    rete: ReteMirroringModuleInstanceInfo | ReteTheaterInternalServiceModuleInstanceInfo | ReteTheaterModuleInstanceInfo\n    topology: NodeTopologyElement;\n}\n\nexport class ModuleInstance extends ModuleInstanceDTO implements ModuleTopology {\n    // moduleTopology data\n    rete: ReteTheaterModuleInstanceInfo | ReteTheaterInternalServiceModuleInstanceInfo | ReteMirroringModuleInstanceInfo;\n    topology: NodeTopologyElement;\n    // other data\n    moduleInfo: SimpleModuleApplication\n}\n\n// apptype theater theater\n\nexport interface TheaterTopology extends TopologyElement {\n    elements: { [hostName: string]: ModuleInstance };\n    connection: ReteConnection[];\n}\n\nexport class TheaterApplication extends TheaterDTO implements TheaterTopology {\n    // theaterTopology data\n    elements: { [hostName: string]: ModuleInstance; };\n    connection: ReteConnection[];\n    // other data\n    properties: TheaterInstancePropertiesDTO;\n    topology: TheaterTopology;\n}\n\nexport class AreaApplication extends AreaDTO {\n    color?: string;\n}\nexport class AreaColorDTO extends SimpleAreaDTO {\n    color: string;\n}\n\n\nexport class FlavorApplication extends FlavorBasicInfo {\n    flavorName: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/FlavorBasicInfo.html":{"url":"classes/FlavorBasicInfo.html","title":"class - FlavorBasicInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  FlavorBasicInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsDTO/falvorDTO.ts\n        \n\n\n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                cpu\n                            \n                            \n                                disk\n                            \n                            \n                                ram\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        cpu\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     number | string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/falvorDTO.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        disk\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     number | string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/falvorDTO.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ram\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     number | string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/falvorDTO.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class FlavorBasicInfo {\n    cpu: number | string;\n    disk: number | string;\n    ram: number | string;\n}\n\nexport class VirtualizationEnvironmentTypeDTO {\n    description: string\n    id: number\n    isEnabled: true\n    name: string\n    nameAlias: string\n    supportMachineId: number\n    uuid: string\n}\n\nexport class FlavorDTO extends FlavorBasicInfo {\n    name: string;\n    detailJson: {};\n    id: number | string;\n    uuid: string;\n    virtualizationEnvironmentType: VirtualizationEnvironmentTypeDTO;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/FlavorDTO.html":{"url":"classes/FlavorDTO.html","title":"class - FlavorDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  FlavorDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsDTO/falvorDTO.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        FlavorBasicInfo\n            \n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                detailJson\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                uuid\n                            \n                            \n                                virtualizationEnvironmentType\n                            \n                            \n                                cpu\n                            \n                            \n                                disk\n                            \n                            \n                                ram\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        detailJson\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     literal type\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/falvorDTO.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     number | string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/falvorDTO.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/falvorDTO.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uuid\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/falvorDTO.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        virtualizationEnvironmentType\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         VirtualizationEnvironmentTypeDTO\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/falvorDTO.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cpu\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     number | string\n\n                    \n                \n                        \n                            \n                                ereditato da         FlavorBasicInfo\n\n                            \n                        \n                    \n                        \n                                Definito in         FlavorBasicInfo:2\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        disk\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     number | string\n\n                    \n                \n                        \n                            \n                                ereditato da         FlavorBasicInfo\n\n                            \n                        \n                    \n                        \n                                Definito in         FlavorBasicInfo:3\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ram\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     number | string\n\n                    \n                \n                        \n                            \n                                ereditato da         FlavorBasicInfo\n\n                            \n                        \n                    \n                        \n                                Definito in         FlavorBasicInfo:4\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class FlavorBasicInfo {\n    cpu: number | string;\n    disk: number | string;\n    ram: number | string;\n}\n\nexport class VirtualizationEnvironmentTypeDTO {\n    description: string\n    id: number\n    isEnabled: true\n    name: string\n    nameAlias: string\n    supportMachineId: number\n    uuid: string\n}\n\nexport class FlavorDTO extends FlavorBasicInfo {\n    name: string;\n    detailJson: {};\n    id: number | string;\n    uuid: string;\n    virtualizationEnvironmentType: VirtualizationEnvironmentTypeDTO;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"injectables/FlavorService.html":{"url":"injectables/FlavorService.html","title":"injectable - FlavorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FlavorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/api/flavor.service.ts\n        \n\n\n\n\n\n            \n    Indice\n    \n        \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getAllFlavor\n                            \n                            \n                                    Async\n                                getFlavorByID\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Costruttore\n        \n            \n                \n                    \nconstructor(http: HttpClient, tokenService: TokenService)\n                    \n                \n                        \n                            \n                                Definito in src/app/services/api/flavor.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parametri :\n                                    \n                                        \n                                            \n                                                Nome\n                                                    Tipo\n                                                Opzionale\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tokenService\n                                                  \n                                                        \n                                                                        TokenService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllFlavor\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllFlavor()\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/api/flavor.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getFlavorByID\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFlavorByID(id: number | string)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/api/flavor.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            number | string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { FlavorDTO } from '../modelsDTO/falvorDTO';\nimport { TokenService } from '../token/token.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FlavorService {\n\n  constructor(private http: HttpClient, private tokenService: TokenService) { }\n\n  async getAllFlavor(): Promise {\n\n    let link: string = environment.getAllFlavor;\n\n    const promise = await new Promise((resolve, reject) => {\n      this.http.get\n        (\n          link,\n          this.tokenService.getHttpgetOption()\n        )\n        .toPromise()\n        .then(\n          (res: FlavorDTO[]) => {\n            resolve(res);\n          }\n        )\n        .catch(\n          error => {\n            reject(error);\n          }\n        );\n    }\n    );\n    return promise;\n  }\n  \n  async getFlavorByID(id: number|string): Promise {\n\n    let link: string = environment.getAllFlavor+'/'+id;\n\n    const promise = await new Promise((resolve, reject) => {\n      this.http.get\n        (\n          link,\n          this.tokenService.getHttpgetOption()\n        )\n        .toPromise()\n        .then(\n          (res: FlavorDTO) => {\n            resolve(res);\n          }\n        )\n        .catch(\n          error => {\n            reject(error);\n          }\n        );\n    }\n    );\n    return promise;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/GenericParameterDTO.html":{"url":"classes/GenericParameterDTO.html","title":"class - GenericParameterDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  GenericParameterDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsDTO/moduleDTO.ts\n        \n\n\n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                default\n                            \n                            \n                                description\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        default\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:39\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PageableDTO, SortDTO } from './elementDTO';\nimport { NetworkDTO } from './networkDTO';\nimport { TheaterDTO } from './theaterDTO';\n\n\nexport class ModuleListDTO {\n    content: SimpleModuleDTO[]\n    pageable: PageableDTO\n    last: boolean\n    totalPages: string | number\n    totalElements: string | number\n    size: string | number\n    number: string | number\n    sort: SortDTO\n    numberOfElements: string | number\n    first: boolean\n    empty: boolean\n}\n\n\nexport class TypesCatalogueDTO {\n    group: string\n    id: string | number\n    parentId: {}\n    value: string\n}\n\nexport class ModuleClassificationDTO {\n    blueprintType: string\n    category: string\n    expectedInstanceType: string\n    id: string | number\n    mcClass: string\n    type: string\n    uuid: string\n}\n\nexport class GenericParameterDTO {\n    type: string\n    default: string\n    description: string\n}\n\nexport class ConfigurationTemplateDTO {\n    anchor_parameters: { [name: string]: GenericParameterDTO | string }\n    instance_parameters: { [name: string]: GenericParameterDTO }\n    structural_parameters: { [name: string]: GenericParameterDTO }\n    fixed_parameters: { [name: string]: GenericParameterDTO }\n    control_parameters: { [name: string]: GenericParameterDTO }\n    infrastructure_parameters: { [name: string]: GenericParameterDTO }\n    module: string\n    description: string\n    category: string\n    version: string | number\n    platform: string\n}\n\nexport class ModuleModeDTO {\n    code: string\n    id: string | number\n    name: string\n}\n\nexport class ModuleStatusDTO {\n    descriptionCode: string\n    id: string | number\n    name: string\n}\nexport class StatisticItemDTO {\n    error: string | number\n    updated: string | number\n    inserted: string | number\n}\n\nexport class SimpleModuleDTO {\n    createdBy: string\n    createdDate: string\n    description: string\n    id: string | number\n    isLocked: boolean\n    lastModifiedBy: string\n    lastModifiedDate: string\n    lockAcquiredTimestamp: string\n    lockLastUserAcquiring: string\n    lockReleasedTimestamp: string\n    name: string\n    status: ModuleStatusDTO\n    type?: string | any\n    uuid: string\n    version: string | number\n}\nexport class ModuleDTO extends SimpleModuleDTO {\n    attachments: string[]\n    author: string\n    capabilities: { [name: string]: string }\n    catalog1: TypesCatalogueDTO\n    catalog2: TypesCatalogueDTO\n    catalog3: TypesCatalogueDTO\n    classification: ModuleClassificationDTO\n    configurationTemplate: ConfigurationTemplateDTO\n    detailProperties: {}\n    input: { [name: string]: string }\n    output: { [name: string]: string }\n    mode: ModuleModeDTO\n    statistics: { [name: string]: StatisticItemDTO | string | number }\n    tags: []\n}\n\nexport class ModuleNetworkInterfaceDTO {\n    id: string | number\n    label: string\n    module: ModuleDTO\n    network: NetworkDTO\n    nodeName: string\n    type: string\n    uuid: string\n}\n\nexport class ConsumerInterfaceLinkDTO {\n    local_interface: string\n    module_instance: string\n    remote_interface: string\n}\n\nexport class ModuleInstancePropertiesDTO {\n    area: string\n    description: string\n    module: string\n    version: string | number\n    sequence: string | number\n    consumer_interfaces_link: ConsumerInterfaceLinkDTO[]\n}\n\nexport class AreaDTO {\n    id: string | number;\n    uuid: string;\n    name: string;\n    description: string;\n    theater: TheaterDTO;\n    deleted: boolean | string;\n}\n\nexport class SimpleAreaDTO {\n    area: string\n    description: string\n}\nexport class TheaterInstancePropertiesDTO {\n    mode: string\n    tags: TagTIP[]\n    areas: SimpleAreaDTO[]\n    author: string\n    version: string | number\n    description: string\n}\nexport class TagTIP{\n    tag: string\n}\nexport class ElementIntoTheaterDTO {  // goes into map in blueprint [name:string]: Module...\n    properties: ModuleInstancePropertiesDTO | TheaterInstancePropertiesDTO\n    type: string\n}\nexport class ModuleInstanceDTO {\n    properties: ModuleInstancePropertiesDTO\n    type: string\n}\nexport class TheaterInstanceDTO {\n    properties: TheaterInstancePropertiesDTO\n    type: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Componenti\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/home/home.component.ts\n\n\n\n    \n        Descrizione\n    \n    \n        Componente (pagina) che ha lo scopo di mostrare all'utente una landing tale per cui potrà scegliere di:\n\nCreare un teatro.\nCreare un modulo.\nVisualizzare un teatro.\nVisualizzare un modulo.\n\n\n    \n\n\n\n\n\n    Metadati\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                ./home.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                author\n                            \n                            \n                                    Protected\n                                branch\n                            \n                            \n                                    Protected\n                                COMPOSER\n                            \n                            \n                                    Opzionale\n                                data_input_template\n                            \n                            \n                                    Protected\n                                dataModal\n                            \n                            \n                                    Protected\n                                description\n                            \n                            \n                                    Protected\n                                fileJSON\n                            \n                            \n                                    Protected\n                                fileLoaded\n                            \n                            \n                                    Protected\n                                formElementComposer\n                            \n                            \n                                    Protected\n                                formElementModal\n                            \n                            \n                                    Protected\n                                formElementVisualizer\n                            \n                            \n                                    Protected\n                                id\n                            \n                            \n                                    Protected\n                                isModalActive\n                            \n                            \n                                    Protected\n                                Module\n                            \n                            \n                                    Protected\n                                name\n                            \n                            \n                                    Protected\n                                Theater\n                            \n                            \n                                    Protected\n                                type\n                            \n                            \n                                    Protected\n                                VISUALIZER\n                            \n                        \n                    \n                \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                buttonClick\n                            \n                            \n                                dataInputReturned\n                            \n                            \n                                    Async\n                                onFileSelected\n                            \n                            \n                                onReset\n                            \n                            \n                                onUpload\n                            \n                            \n                                startapplication\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Costruttore\n        \n            \n                \n                    \nconstructor(router: Router, fileService: FileService, storageService: StorageService)\n                    \n                \n                        \n                            \n                                Definito in src/app/pages/home/home.component.ts:173\n                            \n                        \n\n                \n                    \n                            Costruttore componente HomeComponent\n\n                            \n                                    Parametri :\n                                    \n                                        \n                                            \n                                                Nome\n                                                    Tipo\n                                                Opzionale\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fileService\n                                                  \n                                                        \n                                                                        FileService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        buttonClick\n                        \n                    \n                \n            \n            \n                \nbuttonClick(branch: ComposerVisualizerType, type: SubjectType)\n                \n            \n\n\n            \n                \n                    Definito in src/app/pages/home/home.component.ts:197\n                \n            \n\n\n            \n                \n                    Funzione richiamata al momento del click su una scelta.\nValorizza il branch (designer/visualize) e tipo (module/theater) scelto.\nSee {dataModal}\nSee {branch}\nSee {type}\nSee {isModalActive}\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    branch\n                                    \n                                                ComposerVisualizerType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    type\n                                    \n                                                SubjectType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataInputReturned\n                        \n                    \n                \n            \n            \n                \ndataInputReturned(val: DataInputReturned)\n                \n            \n\n\n            \n                \n                    Definito in src/app/pages/home/home.component.ts:225\n                \n            \n\n\n            \n                \n                    Funzione richiamata non appena la form è stata validata.\n\nSalva i dati di ritorno nelle opportune variabili.\nEsegue le operazioni per il routing degli elementi.\nSee {startapplication}\n\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                DataInputReturned\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onFileSelected\n                        \n                    \n                \n            \n            \n                \n                    \n                    onFileSelected(event: any)\n                \n            \n\n\n            \n                \n                    Definito in src/app/pages/home/home.component.ts:289\n                \n            \n\n\n            \n                \n                    Funzione richiamata quando si seleziona il file.\nRichiama il servizio di gestione dell'upload file e prende il risultato.\nSee {fileService}\nSee {fileJSON}\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onReset\n                        \n                    \n                \n            \n            \n                \nonReset(input)\n                \n            \n\n\n            \n                \n                    Definito in src/app/pages/home/home.component.ts:315\n                \n            \n\n\n            \n                \n                    Funzione richiamata quando si esegue un reset dei dati del file dato in input.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    input\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onUpload\n                        \n                    \n                \n            \n            \n                \nonUpload()\n                \n            \n\n\n            \n                \n                    Definito in src/app/pages/home/home.component.ts:306\n                \n            \n\n\n            \n                \n                    Funzione richiamata dopo aver aggiunto il file.\nSe corretto, esegue la funzione di route dell'elemento scelto.\nSee {startapplication}\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startapplication\n                        \n                    \n                \n            \n            \n                \nstartapplication()\n                \n            \n\n\n            \n                \n                    Definito in src/app/pages/home/home.component.ts:246\n                \n            \n\n\n            \n                \n                    Funzione richiamata non appena i hanno i dati valorizzati.\nSi occupa del redirezionamento per il branch scelto con passaggio di variabili nella route.\nSee {router}\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        author\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/pages/home/home.component.ts:45\n                        \n                    \n\n            \n                \n                    Variabile di supporto che conterrà l'autore il nome del modulo/teatro da costruire\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        branch\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ComposerVisualizerType\n\n                    \n                \n                    \n                        \n                                Definito in src/app/pages/home/home.component.ts:88\n                        \n                    \n\n            \n                \n                    Variabile che indica il tipo di operazione selezionata al momento\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        COMPOSER\n                        \n                    \n                \n            \n                \n                    \n                        Valore predefinito : ComposerVisualizerType.COMPOSER\n                    \n                \n                    \n                        \n                                Definito in src/app/pages/home/home.component.ts:63\n                        \n                    \n\n            \n                \n                    Variabile di supporto che indica il composer\nSee {ComposerVisualizerType}\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        data_input_template\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     TemplateRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('data_input_template')\n                        \n                    \n                \n                    \n                        \n                                Definito in src/app/pages/home/home.component.ts:53\n                        \n                    \n\n            \n                \n                    Variabile che indica l'elemento del DOM.\nIn particolare contiene le informmazioni del form da visualizzare per la creazione / visualizzazione.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        dataModal\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ModalItem\n\n                    \n                \n                    \n                        \n                                Definito in src/app/pages/home/home.component.ts:158\n                        \n                    \n\n            \n                \n                    Variabile che contiene l'isieme delle opzioni per la modale.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/pages/home/home.component.ts:40\n                        \n                    \n\n            \n                \n                    Variabile di supporto che conterrà la descrizione del modulo/teatro da costruire\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        fileJSON\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         any\n\n                    \n                \n                \n                    \n                        Valore predefinito : undefined\n                    \n                \n                    \n                        \n                                Definito in src/app/pages/home/home.component.ts:167\n                        \n                    \n\n            \n                \n                    Variabile che contiene i dati del file dato in input.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        fileLoaded\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                \n                    \n                        Valore predefinito : false\n                    \n                \n                    \n                        \n                                Definito in src/app/pages/home/home.component.ts:173\n                        \n                    \n\n            \n                \n                    Variabile che indica se e quando il file è stato caricato (correttamente).\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        formElementComposer\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         DataInputElement\n\n                    \n                \n                \n                    \n                        Valore predefinito : {\n    element: [\n      {\n        id: \"author\",\n        text: \"Author\",\n        type: \"text\",\n        required: true\n      },\n      {\n        id: \"name\",\n        text: \"Name\",\n        type: \"text\",\n        required: true\n      },\n      {\n        id: \"description\",\n        text: \"Description\",\n        type: \"textarea\",\n        required: true\n      },\n    ]\n  }\n                    \n                \n                    \n                        \n                                Definito in src/app/pages/home/home.component.ts:108\n                        \n                    \n\n            \n                \n                    Variabile che indica i tipi di input che devono esserci nel form al momento dell'inserimento della creazione di un modulo/teatro.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        formElementModal\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         DataInputElement\n\n                    \n                \n                    \n                        \n                                Definito in src/app/pages/home/home.component.ts:98\n                        \n                    \n\n            \n                \n                    Variabile che indica il tipo di form da visualizzare, una volta scelto.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        formElementVisualizer\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         DataInputElement\n\n                    \n                \n                \n                    \n                        Valore predefinito : {\n    element: [\n      {\n        id: \"id\",\n        text: \"Id\",\n        type: \"text\",\n        required: true,\n      },\n    ]\n  }\n                    \n                \n                    \n                        \n                                Definito in src/app/pages/home/home.component.ts:134\n                        \n                    \n\n            \n                \n                    Variabile che indica i tipi di input che devono esserci nel form al momento dell'inserimento della visualizzazione di un modulo/teatro.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/pages/home/home.component.ts:30\n                        \n                    \n\n            \n                \n                    Variabile di supporto che conterrà l'id del modulo/teatro da visualizzare\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        isModalActive\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                \n                    \n                        Valore predefinito : false\n                    \n                \n                    \n                        \n                                Definito in src/app/pages/home/home.component.ts:154\n                        \n                    \n\n            \n                \n                    Variabile utilizzata per lo stato show/hide della modal.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        Module\n                        \n                    \n                \n            \n                \n                    \n                        Valore predefinito : SubjectType.MODULE\n                    \n                \n                    \n                        \n                                Definito in src/app/pages/home/home.component.ts:73\n                        \n                    \n\n            \n                \n                    Variabile di supporto che indica il modulo\nSee {SubjectType}\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/pages/home/home.component.ts:35\n                        \n                    \n\n            \n                \n                    Variabile di supporto che conterrà il nome del modulo/teatro da costruire\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        Theater\n                        \n                    \n                \n            \n                \n                    \n                        Valore predefinito : SubjectType.THEATER\n                    \n                \n                    \n                        \n                                Definito in src/app/pages/home/home.component.ts:78\n                        \n                    \n\n            \n                \n                    Variabile di supporto che indica il teatro\nSee {SubjectType}\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         SubjectType\n\n                    \n                \n                    \n                        \n                                Definito in src/app/pages/home/home.component.ts:93\n                        \n                    \n\n            \n                \n                    Variabile che indica il tipo di elemento selezionata al momento\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        VISUALIZER\n                        \n                    \n                \n            \n                \n                    \n                        Valore predefinito : ComposerVisualizerType.VISUALIZER\n                    \n                \n                    \n                        \n                                Definito in src/app/pages/home/home.component.ts:68\n                        \n                    \n\n            \n                \n                    Variabile di supporto che indica il visualizer\nSee {ComposerVisualizerType}\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { DataInputElement, DataInputReturned } from 'src/app/components/data-input/dataInputType';\nimport { ModalItem } from 'src/app/components/modal/modalType';\nimport { SubjectType, ComposerVisualizerType, DataRouteComposer, DataRouteVisualizer } from 'src/app/models/appType';\nimport { FileService } from 'src/app/services/application/file/file.service';\nimport { StorageService } from 'src/app/services/application/storage/storage.service';\n\n/**\n * Componente (pagina) che ha lo scopo di mostrare all'utente una landing tale per cui potrà scegliere di:\n * - Creare un teatro.\n * - Creare un modulo.\n * - Visualizzare un teatro.\n * - Visualizzare un modulo.\n */\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.sass']\n})\nexport class HomeComponent {\n\n\n  // support var\n\n  /**\n   * Variabile di supporto che conterrà l'id del modulo/teatro da visualizzare\n   * @type {number}\n   */\n  protected id: number;\n  /**\n   * Variabile di supporto che conterrà il nome del modulo/teatro da costruire\n   * @type {string}\n   */\n  protected name: string;\n  /**\n   * Variabile di supporto che conterrà la descrizione del modulo/teatro da costruire\n   * @type {string}\n   */\n  protected description: string;\n  /**\n   * Variabile di supporto che conterrà l'autore il nome del modulo/teatro da costruire\n   * @type {string}\n   */\n  protected author: string;\n\n\n  /**\n   * Variabile che indica l'elemento del DOM.\n   * In particolare contiene le informmazioni del form da visualizzare per la creazione / visualizzazione.\n   * @type {TemplateRef}\n   */\n  @ViewChild('data_input_template') data_input_template?: TemplateRef;\n\n\n\n  //support var\n\n  /**\n   * Variabile di supporto che indica il composer \n   * @see {ComposerVisualizerType}\n   */\n  protected COMPOSER = ComposerVisualizerType.COMPOSER;\n  /**\n   * Variabile di supporto che indica il visualizer \n   * @see {ComposerVisualizerType}\n   */\n  protected VISUALIZER = ComposerVisualizerType.VISUALIZER;\n  /**\n    * Variabile di supporto che indica il modulo \n    * @see {SubjectType}\n    */\n  protected Module = SubjectType.MODULE;\n  /**\n    * Variabile di supporto che indica il teatro \n    * @see {SubjectType}\n    */\n  protected Theater = SubjectType.THEATER;\n\n\n\n  // state var\n\n  /**\n   * Variabile che indica il tipo di operazione selezionata al momento\n   * @type {ComposerVisualizerType}\n   */\n  protected branch: ComposerVisualizerType;\n    /**\n   * Variabile che indica il tipo di elemento selezionata al momento\n   * @type {SubjectType}\n   */\n  protected type: SubjectType;\n  /**\n   * Variabile che indica il tipo di form da visualizzare, una volta scelto.\n   * @type {DataInputElement} \n   */\n  protected formElementModal: DataInputElement;\n\n\n\n  // input conf\n\n  /**\n   * Variabile che indica i tipi di input che devono esserci nel form al momento dell'inserimento della creazione di un modulo/teatro.\n   * @type {DataInputElement}\n   */\n  protected formElementComposer: DataInputElement = {\n    element: [\n      {\n        id: \"author\",\n        text: \"Author\",\n        type: \"text\",\n        required: true\n      },\n      {\n        id: \"name\",\n        text: \"Name\",\n        type: \"text\",\n        required: true\n      },\n      {\n        id: \"description\",\n        text: \"Description\",\n        type: \"textarea\",\n        required: true\n      },\n    ]\n  };\n    /**\n   * Variabile che indica i tipi di input che devono esserci nel form al momento dell'inserimento della visualizzazione di un modulo/teatro.\n   * @type {DataInputElement}\n   */\n  protected formElementVisualizer: DataInputElement = {\n    element: [\n      {\n        id: \"id\",\n        text: \"Id\",\n        type: \"text\",\n        required: true,\n      },\n    ]\n  };\n\n\n\n  // modal conf\n\n  /**\n   * Variabile utilizzata per lo stato show/hide della modal.\n   * @type {boolean}\n   * @default {false}\n   */\n  protected isModalActive: boolean = false;\n  /**\n   * Variabile che contiene l'isieme delle opzioni per la modale.\n   */\n  protected dataModal: ModalItem;\n\n\n\n  // file var\n\n  /**\n   * Variabile che contiene i dati del file dato in input.\n   */\n  protected fileJSON: any = undefined;\n  /**\n   * Variabile che indica se e quando il file è stato caricato (correttamente).\n   * @type {boolean}\n   * @default {false}\n   */\n  protected fileLoaded: boolean = false;\n\n\n\n  /**\n   * Costruttore componente HomeComponent\n   * @param router \n   * @param fileService \n   * @param storageService \n   */\n  constructor(private router: Router, private fileService: FileService, private storageService: StorageService) {\n  }\n\n\n  /**\n   * Funzione richiamata al momento del click su una scelta.\n   * Valorizza il branch (designer/visualize) e tipo (module/theater) scelto.\n   * @param branch \n   * @param type \n   * @see {dataModal}\n   * @see {branch}\n   * @see {type}\n   * @see {isModalActive}\n   */\n  buttonClick(branch: ComposerVisualizerType, type: SubjectType): void {\n    this.branch = branch;\n    this.type = type;\n    let title: string = type + \" \" + branch;\n    if (branch === ComposerVisualizerType.COMPOSER) {\n      this.formElementModal = this.formElementComposer\n    }\n    else {\n      this.formElementModal = this.formElementVisualizer\n    }\n    this.dataModal = {\n      title: title,\n      template: this.data_input_template,\n      buttons: [],\n      backgroundColor: \"#0000005e\",\n      //f9fafb24\n    };\n    this.isModalActive = true;\n  }\n\n\n  /**\n   * Funzione richiamata non appena la form è stata validata.\n   * - Salva i dati di ritorno nelle opportune variabili.\n   * - Esegue le operazioni per il routing degli elementi.\n   * @param val \n   * @see {startapplication}\n   */\n  dataInputReturned(val: DataInputReturned) {\n    this.isModalActive = false;\n    if (!val || !val.isValid) return;\n    if (this.branch === ComposerVisualizerType.VISUALIZER) {\n      this.id = val.element[\"id\"].value\n    }\n    if (this.branch === ComposerVisualizerType.COMPOSER) {\n      this.name = val.element['name'].value;\n      this.description = val.element['description'].value;\n      this.author = val.element['author'].value;\n    }\n    this.startapplication();\n  }\n\n\n\n  /**\n   * Funzione richiamata non appena i hanno i dati valorizzati. \n   * Si occupa del redirezionamento per il branch scelto con passaggio di variabili nella route.\n   * @see {router}\n   */\n  startapplication() {\n    var state: DataRouteComposer | DataRouteVisualizer;\n    if (this.branch === ComposerVisualizerType.VISUALIZER) {\n      var id = this.id;\n      state = {\n        id: id as number,\n        type: this.type\n      };\n      this.router.navigateByUrl(\n        '/visualizer',\n        {\n          state\n        }\n      );\n    }\n    else if (this.branch === ComposerVisualizerType.COMPOSER) {\n      var name = this.name;\n      var description = this.description;\n      var author = this.author;\n      state = {\n        name: name as string,\n        description: description as string,\n        author: author as string,\n        type: this.type\n      };\n      this.router.navigateByUrl(\n        '/composer',\n        {\n          state\n        }\n      );\n    }\n  }\n\n\n\n  /**\n   * Funzione richiamata quando si seleziona il file.\n   * Richiama il servizio di gestione dell'upload file e prende il risultato.\n   * @param event \n   * @see {fileService}\n   * @see {fileJSON}\n   */\n  async onFileSelected(event: any) {\n    await this.fileService.onFileSelected(event)\n      .then((v) => {\n        this.fileJSON = v; this.fileLoaded = true;\n      })\n      .catch((e) => {\n        alert(e + \"\\n Make sure it ends with \\\" .\" + this.type.toLowerCase() + \".json \\\"\")\n      })\n  }\n\n\n\n  /**\n   * Funzione richiamata dopo aver aggiunto il file. \n   * Se corretto, esegue la funzione di route dell'elemento scelto.\n   * @see {startapplication}\n   */\n  onUpload() {\n    this.storageService.data = this.fileJSON;\n    this.startapplication();\n  }\n\n  /**\n   * Funzione richiamata quando si esegue un reset dei dati del file dato in input.\n   * @param input \n   */\n  onReset(input) {\n    input.value = \"\"\n    this.fileLoaded = false;\n    this.fileJSON = undefined;\n  }\n\n}\n\n    \n\n    \n        \n    \n\n    \n        \n            \n                 Cyber Range Theater and Module Visualization/Constructor \n            \n            \n                 Visual design orchestrator for infrastructured system \n            \n            \n\n                \n                    \n                         Designer \n                    \n                    \n                        \n                            Create Theater\n                        \n                        \n                            Create Module\n                        \n                    \n                \n\n                \n                    \n                         CyberRange\n                    \n                    \n                        \n                            Visualize Theater\n                        \n                        \n                            Visualize Module\n                        \n                    \n                \n\n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n        \n            \n                \n                    {{branch===COMPOSER?\"Create new \":\"Visualize \"}}{{type}}\n                \n            \n            \n                \n                    \n                    \n                \n            \n        \n        \n            \n                \n                    Design {{type}} from file\n                \n            \n            \n                \n                    \n                    Select File\n                    Upload\n                    Cancel\n                \n            \n        \n    \n\n    \n\n    \n                \n                    ./home.component.sass\n                \n                .component-div\n    display: flex\n    justify-content: center\n    height: 100%\n\n.bg-component\n    // background-image: linear-gradient(rgba(15, 19, 26, 0.7), #0f131a), url(/../assets/images/bg-images/bg-img-rpt-xy.png)\n    // background-size: contain\n    // background-repeat: round\n    // background-blend-mode: hard-light\n    // height: 100%\n    background-image: linear-gradient(rgba(15, 19, 26, 0.7), #0f131a), url(/../assets/images/bg-images/node-x.jpg)\n    background-size: cover\n    background-repeat: repeat-x\n    background-blend-mode: color-burn\n    height: 100%\n\n.box-color-1\n    margin: 1em\n    padding: 1em\n    border-width: 1em\n    border-radius: 1em\n    background-color: #dc3545\n\n.box-color-2\n    margin: 1em\n    padding: 1em\n    border-width: 1em\n    border-radius: 1em\n    background-color: #0d6fd0\n\n.font-size-05\n    font-size: calc(0.5rem + 2.7vw)\n    font-weight: 1.2em\n    color: #fff\n\n.zoom\n    transition: transform 0.2s // Animation\n.zoom:hover\n    transform: scale(1.5) // (150% zoom - Note: if the zoom is too large, it will go outside of the viewport)\n    -webkit-box-shadow: 0px 0px 39px 0px #000000\n    -moz-box-shadow: 0px 0px 39px 0px #000000\n    -o-box-shadow: 0px 0px 39px 0px #000000\n    box-shadow: 0px 0px 39px 0px #000000\n\n    \n\n    \n        \n        \n            \n                Legenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento html con direttive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                             Cyber Range Theater and Module Visualization/Constructor                                          Visual design orchestrator for infrastructured system                                                                                      Designer                                                                                             Create Theater                                                                            Create Module                                                                                                                         CyberRange                                                                                            Visualize Theater                                                                            Visualize Module                                                                                                                                                {{branch===COMPOSER?\"Create new \":\"Visualize \"}}{{type}}                                                                                                                                                                                            Design {{type}} from file                                                                                                Select File                    Upload                    Cancel                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ComposerComponent', 'selector': 'app-composer'},{'name': 'ControlTemplate', 'selector': ''},{'name': 'DataInputComponent', 'selector': 'app-data-input'},{'name': 'DataInputV2Component', 'selector': 'app-data-input-v2'},{'name': 'DataItemComponent', 'selector': 'app-window-item'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HostComponent', 'selector': ''},{'name': 'HowToUseComponent', 'selector': 'app-how-to-use'},{'name': 'MirroringModuleInstanceComponent', 'selector': ''},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavbarElementComponent', 'selector': 'app-navbar-element'},{'name': 'NetworkComponent', 'selector': ''},{'name': 'OffcanvasComponent', 'selector': 'app-offcanvas'},{'name': 'ReteModuleComposerComponent', 'selector': 'app-rete-module-composer'},{'name': 'ReteModuleVisualizerComponent', 'selector': 'app-rete-module-visualizer'},{'name': 'ReteTheaterComposerComponent', 'selector': 'app-rete-theater-composer'},{'name': 'ReteTheaterVisualizerComponent', 'selector': 'app-rete-theater-visualizer'},{'name': 'SubnetComponent', 'selector': ''},{'name': 'TabnavComponent', 'selector': 'app-tabnav'},{'name': 'TheaterInternalServiceModuleInstanceComponent', 'selector': ''},{'name': 'TheaterModuleInstanceComponent', 'selector': ''},{'name': 'UnderbarComponent', 'selector': 'app-underbar'},{'name': 'VisualizerComponent', 'selector': 'app-displayer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"components/HostComponent.html":{"url":"components/HostComponent.html","title":"component - HostComponent","body":"\n                   \n\n\n\n\n\n  Componenti\n  \n  HostComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/rete-settings/nodes/rete-nodes/host/host.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n            NodeComponent\n    \n\n\n\n\n    Metadati\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            NodeService\n                \n            \n\n\n\n            \n                styleUrls\n                ./host.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./host.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                HostIcon\n                            \n                            \n                                NodeType\n                            \n                            \n                                showInputOutlet\n                            \n                            \n                                showOutputOutlet\n                            \n                            \n                                showPorts\n                            \n                        \n                    \n                \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                showhidesocket\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Costruttore\n        \n            \n                \n                    \nconstructor(service: NodeService, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Definito in src/app/rete-settings/nodes/rete-nodes/host/host.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parametri :\n                                    \n                                        \n                                            \n                                                Nome\n                                                    Tipo\n                                                Opzionale\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                    NodeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        showhidesocket\n                        \n                    \n                \n            \n            \n                \nshowhidesocket()\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-nodes/host/host.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        HostIcon\n                        \n                    \n                \n            \n                \n                    \n                        Valore predefinito : HostIcon\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-nodes/host/host.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        NodeType\n                        \n                    \n                \n            \n                \n                    \n                        Valore predefinito : EnumNodeType\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-nodes/host/host.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showInputOutlet\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                \n                    \n                        Valore predefinito : false\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-nodes/host/host.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showOutputOutlet\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                \n                    \n                        Valore predefinito : true\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-nodes/host/host.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showPorts\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                \n                    \n                        Valore predefinito : true\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-nodes/host/host.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, ChangeDetectorRef, ChangeDetectionStrategy } from '@angular/core';\nimport { NodeComponent, NodeService } from 'rete-angular-render-plugin';\nimport { EnumNodeType } from 'src/app/models/appType';\nimport { HostIcon } from 'src/app/rete-settings/style/styleIconConfig';\n// import { EnumNodeType } from 'src/app/rete-settings/models/reteModelType';\n\n\n@Component({\n  templateUrl: './host.component.html',\n  styleUrls: ['./host.component.sass',],\n  providers: [NodeService],\n  changeDetection: ChangeDetectionStrategy.OnPush, // render più veloce.\n})\n\nexport class HostComponent extends NodeComponent {\n\n  showPorts: boolean = true;\n  showOutputOutlet: boolean = true;\n  showInputOutlet: boolean = false;\n  NodeType = EnumNodeType;\n  HostIcon = HostIcon;\n  \n  constructor(\n    protected service: NodeService,\n    protected cdr: ChangeDetectorRef) {\n    super(service, cdr);\n  }\n\n  showhidesocket() {\n    this.showPorts = !this.showPorts;\n  }\n  \n}\n\n    \n\n    \n        \n\n  \n    \n      \n        \n          {{ node.data.name === \"\" || node.data.name === undefined ? \"Assign name\" : node.data.name }}\n        \n      \n      \n        \n          \n          \n        \n      \n    \n   -->\n\n\n  \n  \n    \n      \n        \n          \n            \n              \n                 \n              \n              \n                \n                  {{\n                  (node.data.name && node.data.name!=='')\n                  ?node.data.name\n                  :NodeType.HOST\n                  }}\n                \n                \n                  {{\n                  (node.data.os && node.data.os!=='')\n                  ?\"os: \"+node.data.os\n                  :''\n                  }}\n                \n                \n                  \n                    {{\n                    (node.data.ram && node.data.ram!=='')\n                    ?\"ram (MB): \"+node.data.ram\n                    :''\n                    }}\n                  \n                  \n                    {{\n                    (node.data.disk && node.data.disk!=='')\n                    ?\"disk (MB): \"+node.data.disk\n                    :''\n                    }}\n                  \n                  \n                    {{\n                    (node.data.cpu && node.data.cpu!=='')\n                    ?\"cpu (#): \"+node.data.cpu\n                    :''\n                    }}\n                  \n                \n              \n            \n          \n        \n      \n    \n  \n\n\n  \n    \n      Button with data-bs-target\n    \n  \n  \n    \n      Some placeholder content for the collapse component. This panel is hidden by default but revealed when the user\n      activates the relevant trigger.\n    \n   -->\n\n\n  \n\n    \n    \n      \n        {{output.name}}\n        \n          \n          \n        \n      \n    \n\n\n     -->\n\n    \n    \n      \n        \n          \n          \n          \n        \n        {{input.name}}\n        \n      \n    \n\n  \n\n    \n\n    \n                \n                    ./host.component.sass\n                \n                @import \"../vars\"\n\n.node\n  background: $node-color\n  border: 2px solid #f124\n  border-radius: 10px\n  cursor: pointer\n  min-width: $node-width\n  height: auto\n  padding-bottom: 6px\n  box-sizing: content-box\n  position: relative\n  user-select: none\n  &:hover\n    background: lighten($node-color,4%)\n  &.selected\n    background: $node-color-selected\n    border-color: #ff0000\n  .title\n    color: $text-color\n    font-family: $font-fam\n    font-size: 18px\n    padding: 8px\n  .output\n    text-align: right\n    display: flex\n    justify-content: flex-end\n  .input\n    text-align: left\n    display: flex\n    justify-content: flex-start\n  .input-title,.output-title\n    vertical-align: middle\n    color: $text-color\n    display: inline-block\n    font-family: $font-fam\n    font-size: 14px\n    margin: $socket-margin\n    line-height: $socket-size\n    &[hidden]\n      display: none\n  .input-control\n    z-index: 1\n    width: calc(100% - #{$socket-size + 2*$socket-margin})\n    vertical-align: middle\n    display: inline-block\n  .control\n    padding: $socket-margin $socket-size/2 + $socket-margin\n\n    \n\n    \n        \n        \n            \n                Legenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento html con direttive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              {{ node.data.name === \"\" || node.data.name === undefined ? \"Assign name\" : node.data.name }}                                                                     -->                                                                                                                                         {{                  (node.data.name && node.data.name!==\\'\\')                  ?node.data.name                  :NodeType.HOST                  }}                                                  {{                  (node.data.os && node.data.os!==\\'\\')                  ?\"os: \"+node.data.os                  :\\'\\'                  }}                                                                      {{                    (node.data.ram && node.data.ram!==\\'\\')                    ?\"ram (MB): \"+node.data.ram                    :\\'\\'                    }}                                                        {{                    (node.data.disk && node.data.disk!==\\'\\')                    ?\"disk (MB): \"+node.data.disk                    :\\'\\'                    }}                                                        {{                    (node.data.cpu && node.data.cpu!==\\'\\')                    ?\"cpu (#): \"+node.data.cpu                    :\\'\\'                    }}                                                                                                      Button with data-bs-target                  Some placeholder content for the collapse component. This panel is hidden by default but revealed when the user      activates the relevant trigger.       -->                        {{output.name}}                                                   -->                                                                    {{input.name}}                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ComposerComponent', 'selector': 'app-composer'},{'name': 'ControlTemplate', 'selector': ''},{'name': 'DataInputComponent', 'selector': 'app-data-input'},{'name': 'DataInputV2Component', 'selector': 'app-data-input-v2'},{'name': 'DataItemComponent', 'selector': 'app-window-item'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HostComponent', 'selector': ''},{'name': 'HowToUseComponent', 'selector': 'app-how-to-use'},{'name': 'MirroringModuleInstanceComponent', 'selector': ''},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavbarElementComponent', 'selector': 'app-navbar-element'},{'name': 'NetworkComponent', 'selector': ''},{'name': 'OffcanvasComponent', 'selector': 'app-offcanvas'},{'name': 'ReteModuleComposerComponent', 'selector': 'app-rete-module-composer'},{'name': 'ReteModuleVisualizerComponent', 'selector': 'app-rete-module-visualizer'},{'name': 'ReteTheaterComposerComponent', 'selector': 'app-rete-theater-composer'},{'name': 'ReteTheaterVisualizerComponent', 'selector': 'app-rete-theater-visualizer'},{'name': 'SubnetComponent', 'selector': ''},{'name': 'TabnavComponent', 'selector': 'app-tabnav'},{'name': 'TheaterInternalServiceModuleInstanceComponent', 'selector': ''},{'name': 'TheaterModuleInstanceComponent', 'selector': ''},{'name': 'UnderbarComponent', 'selector': 'app-underbar'},{'name': 'VisualizerComponent', 'selector': 'app-displayer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HostComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/HostModuleDTO.html":{"url":"classes/HostModuleDTO.html","title":"class - HostModuleDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  HostModuleDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsDTO/hostDTO.ts\n        \n\n\n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                hasQuery\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                ports\n                            \n                            \n                                uuid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        hasQuery\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/hostDTO.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/hostDTO.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/hostDTO.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ports\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     HostPortModuleDTO[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/hostDTO.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uuid\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/hostDTO.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { NetworkDTO, SubnetDTO } from \"./networkDTO\"\n\nexport class HostPortModuleDTO {\n    id: string | number\n    name: string\n    networks: NetworkDTO[]\n    subnets: SubnetDTO[]\n}\n\nexport class HostModuleDTO {\n    hasQuery: boolean\n    id: string | number\n    name: string\n    ports: HostPortModuleDTO[]\n    uuid: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/HostNode.html":{"url":"classes/HostNode.html","title":"class - HostNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  HostNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/rete-settings/nodes/rete-nodes/host/hostNode.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che rappresenta il nodo (rete-node) Host all'interno del canvas/editor di rete.\n\n            \n\n            \n                Extends\n            \n            \n                        Component\n            \n\n            \n                Implementa\n            \n            \n                        AngularComponent\n            \n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                builder\n                            \n                            \n                                created\n                            \n                            \n                                createNewNode\n                            \n                            \n                                destroyed\n                            \n                            \n                                valorizeNode\n                            \n                            \n                                worker\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Costruttore\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Definito in src/app/rete-settings/nodes/rete-nodes/host/hostNode.ts:49\n                            \n                        \n\n                \n                    \n                            Costruttore di HostNode\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     AngularComponentData\n\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-nodes/host/hostNode.ts:49\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        builder\n                        \n                    \n                \n            \n            \n                \n                    \n                    builder(node: Node)\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-nodes/host/hostNode.ts:67\n                \n            \n\n\n            \n                \n                    Funzione richiamata in fase di costruzione del nodo (rete-node).\nControlla se bisogna instanziare il nodo oppure crearne uno nuovo:\n\nIn fase di design, il nodo non ha dati, per cui bisogna crearne uno nuovo.\nIn fase di visualizing, il nodo presenta dei dati, per cui va valorizzato il nodo.\n\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        created\n                        \n                    \n                \n            \n            \n                \ncreated(node: Node)\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-nodes/host/hostNode.ts:132\n                \n            \n\n\n            \n                \n                    Funzione richiamata una volta in nodo creato.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createNewNode\n                        \n                    \n                \n            \n            \n                \ncreateNewNode(node: Node)\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-nodes/host/hostNode.ts:80\n                \n            \n\n\n            \n                \n                    Funzione che ha come scopo creare un nodo (rete-node).\nIn particolare gli assegna una struttura vuota.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destroyed\n                        \n                    \n                \n            \n            \n                \ndestroyed(node: Node)\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-nodes/host/hostNode.ts:140\n                \n            \n\n\n            \n                \n                    Funzione richiamata una volta in nodo cancellato.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        valorizeNode\n                        \n                    \n                \n            \n            \n                \nvalorizeNode(node: Node)\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-nodes/host/hostNode.ts:94\n                \n            \n\n\n            \n                \n                    Funzione che ha come scopo la valorizzazione del nodo (rete-node) con i dati in suo possesso.\nIn quasta fase avviene anche la fase iniziale di instanziamento delle porte input/output.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        worker\n                        \n                    \n                \n            \n            \n                \nworker(node: NodeData, inputs: WorkerInputs, outputs: WorkerOutputs)\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-nodes/host/hostNode.ts:124\n                \n            \n\n\n            \n                \n                    Funzione richiamta per eseguire operazioni che conivolgono computazioni dei nodi.\nNon sono necessari in questa versione.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                            NodeData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    inputs\n                                    \n                                            WorkerInputs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    outputs\n                                    \n                                            WorkerOutputs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Component, Input, Output, Node } from 'rete';\nimport { _Socket } from '../../../sockets/socket';\nimport { _Control } from '../../../controls/control';\nimport { AngularComponent, AngularComponentData } from 'rete-angular-render-plugin';\nimport { HostComponent } from '../../../nodes/rete-nodes/host/host.component'\nimport { NodeData, WorkerInputs, WorkerOutputs } from 'rete/types/core/data';\nimport {  reteBasicNodeInfo } from '../../reteBasic';\nimport { EnumNodeType } from 'src/app/models/appType';\n\n/**\n * Classe utilizzata per indicare il tipo di modulo HostNode.\n * @see {reteBasicModuleInfo}\n */\nexport class ReteHostInfo extends reteBasicNodeInfo {\n  os: string;\n  flavorName: string;\n  cpu: number | string;\n  disk: number | string;\n  ram: number | string;\n  type: EnumNodeType.Host\n}\n\n/**\n * Funzione dichiarata in HostNode. \n * Essa ha lo scopo di generare una struttura dati empty.\n * Viene utilizzata in per instanziare un nodo del tipo di ritorno indicato senza dati.\n * @returns {ReteSubnetInfo}\n */\nexport function getEmptyHostInfo(): ReteHostInfo {\n  let x: ReteHostInfo = {\n    os: \"\",\n    Input: [],\n    Output: [],\n    name: \"\",\n    type: EnumNodeType.Host,\n    cpu: '',\n    disk: '',\n    ram: '',\n    flavorName: ''\n  };\n  return x;\n}\n\n/**\n * Classe che rappresenta il nodo (rete-node) Host all'interno del canvas/editor di rete.\n */\nexport class HostNode extends Component implements AngularComponent {\n\n  data: AngularComponentData;\n\n    /**\n   * Costruttore di HostNode\n   */\n  constructor() {\n    super(EnumNodeType.Host);\n    this.data.render = 'angular';\n    this.data.component = HostComponent;\n  }\n\n  /**\n   * Funzione richiamata in fase di costruzione del nodo (rete-node).\n   * Controlla se bisogna instanziare il nodo oppure crearne uno nuovo:\n   * - In fase di design, il nodo non ha dati, per cui bisogna crearne uno nuovo.\n   * - In fase di visualizing, il nodo presenta dei dati, per cui va valorizzato il nodo.\n   * @param node \n   */\n  async builder(node: Node) {\n    if (Object.keys(node.data).length === 0)\n      this.createNewNode(node)\n    else\n      this.valorizeNode(node)\n  }\n\n\n  /**\n   * Funzione che ha come scopo creare un nodo (rete-node).\n   * In particolare gli assegna una struttura vuota.\n   * @param node \n   */\n  createNewNode(node: Node) {\n    let t = getEmptyHostInfo()\n    node.data = {\n      ...node.data,\n      ...t\n    }\n  }\n\n\n  /**\n   * Funzione che ha come scopo la valorizzazione del nodo (rete-node) con i dati in suo possesso.\n   * In quasta fase avviene anche la fase iniziale di instanziamento delle porte input/output.\n   * @param node \n   */\n  valorizeNode(node: Node) {\n    var i: any = node.data['Input'];\n    var o: any = node.data['Output'];\n    var il = i.length;\n    var ol = o.length;\n\n    for (let index = 0; index \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/HostPortModuleDTO.html":{"url":"classes/HostPortModuleDTO.html","title":"class - HostPortModuleDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  HostPortModuleDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsDTO/hostDTO.ts\n        \n\n\n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                networks\n                            \n                            \n                                subnets\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/hostDTO.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/hostDTO.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        networks\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         NetworkDTO[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/hostDTO.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subnets\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         SubnetDTO[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/hostDTO.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { NetworkDTO, SubnetDTO } from \"./networkDTO\"\n\nexport class HostPortModuleDTO {\n    id: string | number\n    name: string\n    networks: NetworkDTO[]\n    subnets: SubnetDTO[]\n}\n\nexport class HostModuleDTO {\n    hasQuery: boolean\n    id: string | number\n    name: string\n    ports: HostPortModuleDTO[]\n    uuid: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"components/HowToUseComponent.html":{"url":"components/HowToUseComponent.html","title":"component - HowToUseComponent","body":"\n                   \n\n\n\n\n\n  Componenti\n  \n  HowToUseComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/how-to-use/how-to-use.component.ts\n\n\n\n\n\n    \n        Implementa\n    \n    \n                    OnInit\n    \n\n\n\n    Metadati\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-how-to-use\n            \n\n            \n                styleUrls\n                ./how-to-use.component.css\n            \n\n\n\n            \n                templateUrl\n                ./how-to-use.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Indice\n    \n        \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Costruttore\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Definito in src/app/pages/how-to-use/how-to-use.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Definito in src/app/pages/how-to-use/how-to-use.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-how-to-use',\n  templateUrl: './how-to-use.component.html',\n  styleUrls: ['./how-to-use.component.css']\n})\nexport class HowToUseComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n\n\n    \n\n    \n                \n                    ./how-to-use.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento html con direttive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ComposerComponent', 'selector': 'app-composer'},{'name': 'ControlTemplate', 'selector': ''},{'name': 'DataInputComponent', 'selector': 'app-data-input'},{'name': 'DataInputV2Component', 'selector': 'app-data-input-v2'},{'name': 'DataItemComponent', 'selector': 'app-window-item'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HostComponent', 'selector': ''},{'name': 'HowToUseComponent', 'selector': 'app-how-to-use'},{'name': 'MirroringModuleInstanceComponent', 'selector': ''},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavbarElementComponent', 'selector': 'app-navbar-element'},{'name': 'NetworkComponent', 'selector': ''},{'name': 'OffcanvasComponent', 'selector': 'app-offcanvas'},{'name': 'ReteModuleComposerComponent', 'selector': 'app-rete-module-composer'},{'name': 'ReteModuleVisualizerComponent', 'selector': 'app-rete-module-visualizer'},{'name': 'ReteTheaterComposerComponent', 'selector': 'app-rete-theater-composer'},{'name': 'ReteTheaterVisualizerComponent', 'selector': 'app-rete-theater-visualizer'},{'name': 'SubnetComponent', 'selector': ''},{'name': 'TabnavComponent', 'selector': 'app-tabnav'},{'name': 'TheaterInternalServiceModuleInstanceComponent', 'selector': ''},{'name': 'TheaterModuleInstanceComponent', 'selector': ''},{'name': 'UnderbarComponent', 'selector': 'app-underbar'},{'name': 'VisualizerComponent', 'selector': 'app-displayer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HowToUseComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/InterfaceConstraints.html":{"url":"classes/InterfaceConstraints.html","title":"class - InterfaceConstraints","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  InterfaceConstraints\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsExport/moduleExport.ts\n        \n\n\n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                compatibility\n                            \n                            \n                                local_interface\n                            \n                            \n                                module_name\n                            \n                            \n                                multiple_mode\n                            \n                            \n                                remote_interface\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        compatibility\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                \n                    \n                        Valore predefinito : \"1.0\"\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        local_interface\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        module_name\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        multiple_mode\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                \n                    \n                        Valore predefinito : false\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remote_interface\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:44\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ModeTypeExport, ModuleTypeExport, NetworkTypeExport, NodeTypeExport, PortTypeExport, RelationshipsTypeExport, SubnetTypeExport, ToscaDefinitionType } from \"./TypeExport\"\n\n\n/**\n * Classe utilizzata per l'export. \n * Contiene le informazioni generali per il modulo che devono esserci nello standard Tosca.\n */\nexport class ModuleExport {\n    tosca_definitions_version: ToscaDefinitionType\n    description: string\n    imports: string[]\n    node_templates: { [name: string]: ModuleSimpleData | NodeSimpleData | PortSimpleData | NetworkSimpleData | SubnetSimpleData }\n    dsl_definition: any | null; //future\n    capabilites: any | null //future\n    outputs: any | null //future\n}\n\n\nexport class ModuleSimpleData {\n    type: ModuleTypeExport\n    properties: PropertiesMSD\n}\nexport class PropertiesMSD {\n    mode: ModeTypeExport\n    description: string\n    version: string | number\n    constraints: ConstraintsMSD\n    interface_networks: {\n        providers: InterfaceNetworksProvider[]\n        consumers: InterfaceNetworksConsumer[]\n    }\n    virtual_machines: VirtualMachine[]\n}\nexport class ConstraintsMSD {\n    interface_constraints: InterfaceConstraints[]\n    module_constraints: ModuleConstraints[]\n    network_constraints: NetworkConstraints[]\n}\nexport class InterfaceConstraints {\n    local_interface: string\n    multiple_mode: boolean = false //future\n    module_name: string\n    compatibility: string = \"1.0\" // future\n    remote_interface: string\n}\nexport class ModuleConstraints {\n}\nexport class NetworkConstraints {\n}\n\nexport class InterfaceNetworksProvider {\n    interface: string\n    network: string\n    tag: string\n    subnets: SubnetExport[]\n}\nexport class InterfaceNetworksConsumer {\n    interface: string\n    network: string\n    tag: string\n    subnets: SubnetExport[]\n}\n\nexport class VirtualMachine {\n    virtual_machine: string\n    ports: VirtualMachinePorts[]\n}\nexport class VirtualMachinePorts {\n    port: string\n    network: string\n    subnets: SubnetExport[]\n}\n\nexport class SubnetExport {\n    subnet: string;\n}\n\nexport class NodeSimpleData {\n    type: NodeTypeExport\n    properties: any | null // future\n    interfaces: any | null // future\n    relationships: RelationshipsExport[]\n}\n\nexport class RelationshipsExport {\n    type: RelationshipsTypeExport\n    target: string\n}\n\nexport class PortSimpleData {\n    type: PortTypeExport\n    relationships: RelationshipsExport[]\n}\n\nexport class NetworkSimpleData {\n    type: NetworkTypeExport\n    properties: PropertiesNSD\n}\nexport class PropertiesNSD {\n    openstack_config?: any | null // future\n    use_external_resource?: boolean | null // future\n    resource_id?: any | null // future\n}\n\n\nexport class SubnetSimpleData {\n    type: SubnetTypeExport\n    relationships: RelationshipsExport[]\n    properties: PropertiesSSD\n}\nexport class PropertiesSSD {\n    subnet?: {\n        ip_version: string | number\n        cidr: string\n        enable_dhcp: boolean\n        gateway_ip?: any | null // future\n    }\n    openstack_config?: any | null // future\n    use_external_resource?: boolean | null // future\n    resource_id?: any | null // future\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/InterfaceNetworksConsumer.html":{"url":"classes/InterfaceNetworksConsumer.html","title":"class - InterfaceNetworksConsumer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  InterfaceNetworksConsumer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsExport/moduleExport.ts\n        \n\n\n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                interface\n                            \n                            \n                                network\n                            \n                            \n                                subnets\n                            \n                            \n                                tag\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        interface\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        network\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subnets\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         SubnetExport[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tag\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:60\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ModeTypeExport, ModuleTypeExport, NetworkTypeExport, NodeTypeExport, PortTypeExport, RelationshipsTypeExport, SubnetTypeExport, ToscaDefinitionType } from \"./TypeExport\"\n\n\n/**\n * Classe utilizzata per l'export. \n * Contiene le informazioni generali per il modulo che devono esserci nello standard Tosca.\n */\nexport class ModuleExport {\n    tosca_definitions_version: ToscaDefinitionType\n    description: string\n    imports: string[]\n    node_templates: { [name: string]: ModuleSimpleData | NodeSimpleData | PortSimpleData | NetworkSimpleData | SubnetSimpleData }\n    dsl_definition: any | null; //future\n    capabilites: any | null //future\n    outputs: any | null //future\n}\n\n\nexport class ModuleSimpleData {\n    type: ModuleTypeExport\n    properties: PropertiesMSD\n}\nexport class PropertiesMSD {\n    mode: ModeTypeExport\n    description: string\n    version: string | number\n    constraints: ConstraintsMSD\n    interface_networks: {\n        providers: InterfaceNetworksProvider[]\n        consumers: InterfaceNetworksConsumer[]\n    }\n    virtual_machines: VirtualMachine[]\n}\nexport class ConstraintsMSD {\n    interface_constraints: InterfaceConstraints[]\n    module_constraints: ModuleConstraints[]\n    network_constraints: NetworkConstraints[]\n}\nexport class InterfaceConstraints {\n    local_interface: string\n    multiple_mode: boolean = false //future\n    module_name: string\n    compatibility: string = \"1.0\" // future\n    remote_interface: string\n}\nexport class ModuleConstraints {\n}\nexport class NetworkConstraints {\n}\n\nexport class InterfaceNetworksProvider {\n    interface: string\n    network: string\n    tag: string\n    subnets: SubnetExport[]\n}\nexport class InterfaceNetworksConsumer {\n    interface: string\n    network: string\n    tag: string\n    subnets: SubnetExport[]\n}\n\nexport class VirtualMachine {\n    virtual_machine: string\n    ports: VirtualMachinePorts[]\n}\nexport class VirtualMachinePorts {\n    port: string\n    network: string\n    subnets: SubnetExport[]\n}\n\nexport class SubnetExport {\n    subnet: string;\n}\n\nexport class NodeSimpleData {\n    type: NodeTypeExport\n    properties: any | null // future\n    interfaces: any | null // future\n    relationships: RelationshipsExport[]\n}\n\nexport class RelationshipsExport {\n    type: RelationshipsTypeExport\n    target: string\n}\n\nexport class PortSimpleData {\n    type: PortTypeExport\n    relationships: RelationshipsExport[]\n}\n\nexport class NetworkSimpleData {\n    type: NetworkTypeExport\n    properties: PropertiesNSD\n}\nexport class PropertiesNSD {\n    openstack_config?: any | null // future\n    use_external_resource?: boolean | null // future\n    resource_id?: any | null // future\n}\n\n\nexport class SubnetSimpleData {\n    type: SubnetTypeExport\n    relationships: RelationshipsExport[]\n    properties: PropertiesSSD\n}\nexport class PropertiesSSD {\n    subnet?: {\n        ip_version: string | number\n        cidr: string\n        enable_dhcp: boolean\n        gateway_ip?: any | null // future\n    }\n    openstack_config?: any | null // future\n    use_external_resource?: boolean | null // future\n    resource_id?: any | null // future\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/InterfaceNetworksProvider.html":{"url":"classes/InterfaceNetworksProvider.html","title":"class - InterfaceNetworksProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  InterfaceNetworksProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsExport/moduleExport.ts\n        \n\n\n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                interface\n                            \n                            \n                                network\n                            \n                            \n                                subnets\n                            \n                            \n                                tag\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        interface\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        network\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subnets\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         SubnetExport[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tag\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:54\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ModeTypeExport, ModuleTypeExport, NetworkTypeExport, NodeTypeExport, PortTypeExport, RelationshipsTypeExport, SubnetTypeExport, ToscaDefinitionType } from \"./TypeExport\"\n\n\n/**\n * Classe utilizzata per l'export. \n * Contiene le informazioni generali per il modulo che devono esserci nello standard Tosca.\n */\nexport class ModuleExport {\n    tosca_definitions_version: ToscaDefinitionType\n    description: string\n    imports: string[]\n    node_templates: { [name: string]: ModuleSimpleData | NodeSimpleData | PortSimpleData | NetworkSimpleData | SubnetSimpleData }\n    dsl_definition: any | null; //future\n    capabilites: any | null //future\n    outputs: any | null //future\n}\n\n\nexport class ModuleSimpleData {\n    type: ModuleTypeExport\n    properties: PropertiesMSD\n}\nexport class PropertiesMSD {\n    mode: ModeTypeExport\n    description: string\n    version: string | number\n    constraints: ConstraintsMSD\n    interface_networks: {\n        providers: InterfaceNetworksProvider[]\n        consumers: InterfaceNetworksConsumer[]\n    }\n    virtual_machines: VirtualMachine[]\n}\nexport class ConstraintsMSD {\n    interface_constraints: InterfaceConstraints[]\n    module_constraints: ModuleConstraints[]\n    network_constraints: NetworkConstraints[]\n}\nexport class InterfaceConstraints {\n    local_interface: string\n    multiple_mode: boolean = false //future\n    module_name: string\n    compatibility: string = \"1.0\" // future\n    remote_interface: string\n}\nexport class ModuleConstraints {\n}\nexport class NetworkConstraints {\n}\n\nexport class InterfaceNetworksProvider {\n    interface: string\n    network: string\n    tag: string\n    subnets: SubnetExport[]\n}\nexport class InterfaceNetworksConsumer {\n    interface: string\n    network: string\n    tag: string\n    subnets: SubnetExport[]\n}\n\nexport class VirtualMachine {\n    virtual_machine: string\n    ports: VirtualMachinePorts[]\n}\nexport class VirtualMachinePorts {\n    port: string\n    network: string\n    subnets: SubnetExport[]\n}\n\nexport class SubnetExport {\n    subnet: string;\n}\n\nexport class NodeSimpleData {\n    type: NodeTypeExport\n    properties: any | null // future\n    interfaces: any | null // future\n    relationships: RelationshipsExport[]\n}\n\nexport class RelationshipsExport {\n    type: RelationshipsTypeExport\n    target: string\n}\n\nexport class PortSimpleData {\n    type: PortTypeExport\n    relationships: RelationshipsExport[]\n}\n\nexport class NetworkSimpleData {\n    type: NetworkTypeExport\n    properties: PropertiesNSD\n}\nexport class PropertiesNSD {\n    openstack_config?: any | null // future\n    use_external_resource?: boolean | null // future\n    resource_id?: any | null // future\n}\n\n\nexport class SubnetSimpleData {\n    type: SubnetTypeExport\n    relationships: RelationshipsExport[]\n    properties: PropertiesSSD\n}\nexport class PropertiesSSD {\n    subnet?: {\n        ip_version: string | number\n        cidr: string\n        enable_dhcp: boolean\n        gateway_ip?: any | null // future\n    }\n    openstack_config?: any | null // future\n    use_external_resource?: boolean | null // future\n    resource_id?: any | null // future\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"components/MirroringModuleInstanceComponent.html":{"url":"components/MirroringModuleInstanceComponent.html","title":"component - MirroringModuleInstanceComponent","body":"\n                   \n\n\n\n\n\n  Componenti\n  \n  MirroringModuleInstanceComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/rete-settings/nodes/rete-modules/mirroringModuleInstance/mirroringModuleInstance.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n            NodeComponent\n    \n\n\n\n\n    Metadati\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            NodeService\n                \n            \n\n\n\n            \n                styleUrls\n                ./mirroringModuleInstance.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./mirroringModuleInstance.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                HostIcon\n                            \n                            \n                                MirroringModuleInstanceIcon\n                            \n                            \n                                ModuleType\n                            \n                            \n                                NetworkIcon\n                            \n                            \n                                showFooter\n                            \n                            \n                                showInputOutlet\n                            \n                            \n                                showOutputOutlet\n                            \n                            \n                                showPorts\n                            \n                            \n                                SubnetIcon\n                            \n                        \n                    \n                \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                showhidesocket\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Costruttore\n        \n            \n                \n                    \nconstructor(service: NodeService, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Definito in src/app/rete-settings/nodes/rete-modules/mirroringModuleInstance/mirroringModuleInstance.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parametri :\n                                    \n                                        \n                                            \n                                                Nome\n                                                    Tipo\n                                                Opzionale\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                    NodeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        showhidesocket\n                        \n                    \n                \n            \n            \n                \nshowhidesocket()\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-modules/mirroringModuleInstance/mirroringModuleInstance.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        HostIcon\n                        \n                    \n                \n            \n                \n                    \n                        Valore predefinito : HostIcon\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-modules/mirroringModuleInstance/mirroringModuleInstance.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MirroringModuleInstanceIcon\n                        \n                    \n                \n            \n                \n                    \n                        Valore predefinito : MirroringModuleInstance_ICON\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-modules/mirroringModuleInstance/mirroringModuleInstance.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ModuleType\n                        \n                    \n                \n            \n                \n                    \n                        Valore predefinito : EnumModuleType\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-modules/mirroringModuleInstance/mirroringModuleInstance.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        NetworkIcon\n                        \n                    \n                \n            \n                \n                    \n                        Valore predefinito : NetworkIcon\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-modules/mirroringModuleInstance/mirroringModuleInstance.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showFooter\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                \n                    \n                        Valore predefinito : true\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-modules/mirroringModuleInstance/mirroringModuleInstance.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showInputOutlet\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                \n                    \n                        Valore predefinito : true\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-modules/mirroringModuleInstance/mirroringModuleInstance.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showOutputOutlet\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                \n                    \n                        Valore predefinito : true\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-modules/mirroringModuleInstance/mirroringModuleInstance.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showPorts\n                        \n                    \n                \n            \n                \n                    \n                        Valore predefinito : true\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-modules/mirroringModuleInstance/mirroringModuleInstance.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SubnetIcon\n                        \n                    \n                \n            \n                \n                    \n                        Valore predefinito : SubnetIcon\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-modules/mirroringModuleInstance/mirroringModuleInstance.component.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, ChangeDetectorRef, ChangeDetectionStrategy } from '@angular/core';\nimport { NodeComponent, NodeService } from 'rete-angular-render-plugin';\nimport { EnumModuleType } from 'src/app/models/appType';\nimport { MirroringModuleInstance_ICON, SubnetIcon, NetworkIcon, HostIcon } from 'src/app/rete-settings/style/styleIconConfig';\n// import { EnumModuleType } from 'src/app/rete-settings/models/reteModelType';\n\n\n@Component({\n  templateUrl: './mirroringModuleInstance.component.html',\n  styleUrls: ['./mirroringModuleInstance.component.sass',],\n  providers: [NodeService],\n  changeDetection: ChangeDetectionStrategy.OnPush, // render più veloce.\n})\n\nexport class MirroringModuleInstanceComponent extends NodeComponent {\n\n  showPorts = true;\n  showOutputOutlet: boolean = true;\n  showInputOutlet: boolean = true;\n  showFooter: boolean = true;\n  \n  MirroringModuleInstanceIcon = MirroringModuleInstance_ICON;\n  ModuleType = EnumModuleType;\n  SubnetIcon=SubnetIcon;\n  NetworkIcon=NetworkIcon;\n  HostIcon=HostIcon;\n\n  constructor(\n    protected service: NodeService,\n    protected cdr: ChangeDetectorRef) {\n    super(service, cdr);\n  }\n\n  showhidesocket() {\n    this.showPorts = !this.showPorts;    \n  }\n  \n}\n\n    \n\n    \n        \n\n  \n    \n      \n        \n          {{ node.data.name === \"\" || node.data.name === undefined ? \"Assign name\" : node.data.name }}\n        \n      \n      \n        \n          \n          \n        \n      \n    \n   -->\n\n\n  \n  \n    \n      \n        \n          \n            \n              \n                 \n              \n              \n                \n                  {{\n                  (node.data.name && node.data.name!=='')\n                  ?node.data.name\n                  :ModuleType.MirroringModuleInstance\n                  }}\n                \n                \n                  {{\n                  (node.data.area && node.data.area!=='')\n                  ?\"area: \"+node.data.area\n                  :''\n                  }}\n                \n                \n                  {{\n                  (node.data.version && node.data.version!=='')\n                  ?\"version: \"+node.data.version\n                  :''\n                  }}\n                \n              \n            \n          \n        \n      \n    \n  \n\n\n  \n    \n      Button with data-bs-target\n    \n  \n  \n    \n      Some placeholder content for the collapse component. This panel is hidden by default but revealed when the user\n      activates the relevant trigger.\n    \n   -->\n\n\n  \n\n    \n    \n      \n        {{output.name}}\n        \n          \n          P\n          \n        \n      \n    \n\n\n     -->\n\n    \n    \n      \n        \n          \n          \n          C\n          \n        \n        {{input.name}}\n        \n      \n    \n\n  \n\n\n\n  \n  \n    \n\n      \n        \n        {{\n        node.data.host_number\n        ?node.data.host_number\n        :0\n        }}\n      \n\n      \n        \n        {{\n        node.data.subnet_number\n        ?node.data.subnet_number\n        :0\n        }}\n      \n\n      \n        \n        {{\n        node.data.network_number\n        ?node.data.network_number\n        :0\n        }}\n      \n\n    \n  \n\n\n\n    \n\n    \n                \n                    ./mirroringModuleInstance.component.sass\n                \n                @import \"../vars\"\n\n.node\n  background: $node-color\n  border: 2px solid #f124\n  border-radius: 10px\n  cursor: pointer\n  min-width: $node-width\n  height: auto\n  padding-bottom: 6px\n  box-sizing: content-box\n  position: relative\n  user-select: none\n  &:hover\n    background: lighten($node-color,4%)\n  &.selected\n    background: $node-color-selected\n    border-color: #ff0000\n  .title\n    color: $text-color\n    font-family: $font-fam\n    font-size: 18px\n    padding: 8px\n  .output\n    text-align: right\n    display: flex\n    justify-content: flex-end\n  .input\n    text-align: left\n    display: flex\n    justify-content: flex-start\n  .input-title,.output-title\n    vertical-align: middle\n    color: $text-color\n    display: inline-block\n    font-family: $font-fam\n    font-size: 14px\n    margin: $socket-margin\n    line-height: $socket-size\n    &[hidden]\n      display: none\n  .input-control\n    z-index: 1\n    width: calc(100% - #{$socket-size + 2*$socket-margin})\n    vertical-align: middle\n    display: inline-block\n  .control\n    padding: $socket-margin $socket-size/2 + $socket-margin\n\n    \n\n    \n        \n        \n            \n                Legenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento html con direttive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              {{ node.data.name === \"\" || node.data.name === undefined ? \"Assign name\" : node.data.name }}                                                                     -->                                                                                                                                         {{                  (node.data.name && node.data.name!==\\'\\')                  ?node.data.name                  :ModuleType.MirroringModuleInstance                  }}                                                  {{                  (node.data.area && node.data.area!==\\'\\')                  ?\"area: \"+node.data.area                  :\\'\\'                  }}                                                  {{                  (node.data.version && node.data.version!==\\'\\')                  ?\"version: \"+node.data.version                  :\\'\\'                  }}                                                                                    Button with data-bs-target                  Some placeholder content for the collapse component. This panel is hidden by default but revealed when the user      activates the relevant trigger.       -->                        {{output.name}}                            P                                 -->                                                    C                          {{input.name}}                                                  {{        node.data.host_number        ?node.data.host_number        :0        }}                            {{        node.data.subnet_number        ?node.data.subnet_number        :0        }}                            {{        node.data.network_number        ?node.data.network_number        :0        }}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ComposerComponent', 'selector': 'app-composer'},{'name': 'ControlTemplate', 'selector': ''},{'name': 'DataInputComponent', 'selector': 'app-data-input'},{'name': 'DataInputV2Component', 'selector': 'app-data-input-v2'},{'name': 'DataItemComponent', 'selector': 'app-window-item'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HostComponent', 'selector': ''},{'name': 'HowToUseComponent', 'selector': 'app-how-to-use'},{'name': 'MirroringModuleInstanceComponent', 'selector': ''},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavbarElementComponent', 'selector': 'app-navbar-element'},{'name': 'NetworkComponent', 'selector': ''},{'name': 'OffcanvasComponent', 'selector': 'app-offcanvas'},{'name': 'ReteModuleComposerComponent', 'selector': 'app-rete-module-composer'},{'name': 'ReteModuleVisualizerComponent', 'selector': 'app-rete-module-visualizer'},{'name': 'ReteTheaterComposerComponent', 'selector': 'app-rete-theater-composer'},{'name': 'ReteTheaterVisualizerComponent', 'selector': 'app-rete-theater-visualizer'},{'name': 'SubnetComponent', 'selector': ''},{'name': 'TabnavComponent', 'selector': 'app-tabnav'},{'name': 'TheaterInternalServiceModuleInstanceComponent', 'selector': ''},{'name': 'TheaterModuleInstanceComponent', 'selector': ''},{'name': 'UnderbarComponent', 'selector': 'app-underbar'},{'name': 'VisualizerComponent', 'selector': 'app-displayer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MirroringModuleInstanceComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/MirroringModuleInstanceNode.html":{"url":"classes/MirroringModuleInstanceNode.html","title":"class - MirroringModuleInstanceNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  MirroringModuleInstanceNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/rete-settings/nodes/rete-modules/mirroringModuleInstance/mirroringModuleInstanceNode.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che rappresenta il modulo (rete-node) MirroringModuleInstance all'interno del canvas/editor di rete.\n\n            \n\n            \n                Extends\n            \n            \n                        Component\n            \n\n            \n                Implementa\n            \n            \n                        AngularComponent\n            \n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                builder\n                            \n                            \n                                created\n                            \n                            \n                                createNewNode\n                            \n                            \n                                destroyed\n                            \n                            \n                                valorizeNode\n                            \n                            \n                                worker\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Costruttore\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Definito in src/app/rete-settings/nodes/rete-modules/mirroringModuleInstance/mirroringModuleInstanceNode.ts:49\n                            \n                        \n\n                \n                    \n                            Costruttore di MirroringModuleInstanceNode\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     AngularComponentData\n\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-modules/mirroringModuleInstance/mirroringModuleInstanceNode.ts:49\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        builder\n                        \n                    \n                \n            \n            \n                \n                    \n                    builder(node: Node)\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-modules/mirroringModuleInstance/mirroringModuleInstanceNode.ts:67\n                \n            \n\n\n            \n                \n                    Funzione richiamata in fase di costruzione del nodo (rete-node).\nControlla se bisogna instanziare il nodo oppure crearne uno nuovo:\n\nIn fase di design, il nodo non ha dati, per cui bisogna crearne uno nuovo.\nIn fase di visualizing, il nodo presenta dei dati, per cui va valorizzato il nodo.\n\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        created\n                        \n                    \n                \n            \n            \n                \ncreated(node: Node)\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-modules/mirroringModuleInstance/mirroringModuleInstanceNode.ts:130\n                \n            \n\n\n            \n                \n                    Funzione richiamata una volta in nodo creato.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createNewNode\n                        \n                    \n                \n            \n            \n                \ncreateNewNode(node: Node)\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-modules/mirroringModuleInstance/mirroringModuleInstanceNode.ts:79\n                \n            \n\n\n            \n                \n                    Funzione che ha come scopo creare un nodo (rete-node).\nIn particolare gli assegna una struttura vuota.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destroyed\n                        \n                    \n                \n            \n            \n                \ndestroyed(node: Node)\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-modules/mirroringModuleInstance/mirroringModuleInstanceNode.ts:138\n                \n            \n\n\n            \n                \n                    Funzione richiamata una volta in nodo cancellato.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        valorizeNode\n                        \n                    \n                \n            \n            \n                \nvalorizeNode(node: Node)\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-modules/mirroringModuleInstance/mirroringModuleInstanceNode.ts:92\n                \n            \n\n\n            \n                \n                    Funzione che ha come scopo la valorizzazione del nodo (rete-node) con i dati in suo possesso.\nIn quasta fase avviene anche la fase iniziale di instanziamento delle porte input/output.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        worker\n                        \n                    \n                \n            \n            \n                \nworker(node: NodeData, inputs: WorkerInputs, outputs: WorkerOutputs)\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-modules/mirroringModuleInstance/mirroringModuleInstanceNode.ts:122\n                \n            \n\n\n            \n                \n                    Funzione richiamta per eseguire operazioni che conivolgono computazioni dei nodi.\nNon sono necessari in questa versione.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                            NodeData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    inputs\n                                    \n                                            WorkerInputs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    outputs\n                                    \n                                            WorkerOutputs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Component, Input, Output, Node } from 'rete';\nimport { _Socket } from '../../../sockets/socket';\nimport { _Control } from '../../../controls/control';\nimport { AngularComponent, AngularComponentData } from 'rete-angular-render-plugin';\nimport { NodeData, WorkerInputs, WorkerOutputs } from 'rete/types/core/data';\nimport { MirroringModuleInstanceComponent } from './mirroringModuleInstance.component';\nimport { reteBasicModuleInfo } from '../../reteBasic';\nimport { EnumModuleType } from 'src/app/models/appType';\n\n/**\n * Classe utilizzata per indicare il tipo di modulo MirroringModuleInstanceNode.\n * @see {reteBasicModuleInfo}\n */\nexport class ReteMirroringModuleInstanceInfo extends reteBasicModuleInfo {\n  type: EnumModuleType.MirroringModuleInstance;\n}\n\n/**\n * Funzione dichiarata in MirroringModuleInstanceNode. \n * Essa ha lo scopo di generare una struttura dati empty.\n * Viene utilizzata in per instanziare un nodo del tipo di ritorno indicato senza dati.\n * @returns {ReteMirroringModuleInstanceInfo}\n */\nexport function getEmptyReteMirroringModuleInstanceInfo(): ReteMirroringModuleInstanceInfo {\n  let x: ReteMirroringModuleInstanceInfo = {\n    Input: [],\n    Output: [],\n    description: \"\",\n    name: \"\",\n    type: EnumModuleType.MirroringModuleInstance,\n    area: \"\",\n    host_number: 0,\n    network_number: 0,\n    subnet_number: 0,\n    module: '',\n    version: '',\n    sequence: '',\n    consumer_interfaces_link: []\n  };\n  return x;\n}\n\n\n/**\n * Classe che rappresenta il modulo (rete-node) MirroringModuleInstance all'interno del canvas/editor di rete.\n */\nexport class MirroringModuleInstanceNode extends Component implements AngularComponent {\n\n  data: AngularComponentData;\n\n  /**\n   * Costruttore di MirroringModuleInstanceNode\n   */\n  constructor() {\n    super(EnumModuleType.MirroringModuleInstance);\n    this.data.render = 'angular';\n    this.data.component = MirroringModuleInstanceComponent;\n  }\n\n  /**\n   * Funzione richiamata in fase di costruzione del nodo (rete-node).\n   * Controlla se bisogna instanziare il nodo oppure crearne uno nuovo:\n   * - In fase di design, il nodo non ha dati, per cui bisogna crearne uno nuovo.\n   * - In fase di visualizing, il nodo presenta dei dati, per cui va valorizzato il nodo.\n   * @param node \n   */\n  async builder(node: Node) {\n    if (Object.keys(node.data).length === 0)\n      this.createNewNode(node)\n    else\n      this.valorizeNode(node)\n  }\n\n  /**\n   * Funzione che ha come scopo creare un nodo (rete-node).\n   * In particolare gli assegna una struttura vuota.\n   * @param node \n   */\n  createNewNode(node: Node) {\n    let t = getEmptyReteMirroringModuleInstanceInfo()\n    node.data = {\n      ...node.data,\n      ...t\n    }\n  }\n\n  /**\n   * Funzione che ha come scopo la valorizzazione del nodo (rete-node) con i dati in suo possesso.\n   * In quasta fase avviene anche la fase iniziale di instanziamento delle porte input/output.\n   * @param node \n   */\n  valorizeNode(node: Node) {\n    var i: any = node.data['Input'];\n    var o: any = node.data['Output'];\n    var il = i.length;\n    var ol = o.length;\n\n    for (let index = 0; index \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/ModalButton.html":{"url":"classes/ModalButton.html","title":"class - ModalButton","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  ModalButton\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/modal/modalType.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Elemento che indica il tipo di pulsante nel modal.\nEsso è usato anche come di ritorno dell'evento \"button-clicked\".\nSee {ModalComponent}\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                text\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/modal/modalType.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        text\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/modal/modalType.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     \"primary\" | \"secondary\" | \"danger\" | \"success\"\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/modal/modalType.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { TemplateRef } from \"@angular/core\";\n\n/**\n * Tipo di dato passato alla componente ModalComponent per l'elaborazione.\n *  @see {ModalComponent}\n */\nexport class ModalItem {\n    title: string;\n    text_content?: string;\n    template?: TemplateRef;\n    buttons: ModalButton[];\n    backgroundColor?: string = \"ffffff5e\";\n}\n/**\n * Elemento che indica il tipo di pulsante nel modal.\n * Esso è usato anche come di ritorno dell'evento \"button-clicked\".\n * @see {ModalComponent}\n */\nexport class ModalButton {\n    id: string;\n    text: string;\n    type: \"primary\" | \"secondary\" | \"danger\" | \"success\";\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"components/ModalComponent.html":{"url":"components/ModalComponent.html","title":"component - ModalComponent","body":"\n                   \n\n\n\n\n\n  Componenti\n  \n  ModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/modal/modal.component.ts\n\n\n\n    \n        Descrizione\n    \n    \n        Componente che ha come scopo la visualizzazione di una modale a contenuto generico.\n\n    \n\n\n\n\n\n    Metadati\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-modal\n            \n\n            \n                styleUrls\n                ./modal.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./modal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _show\n                            \n                        \n                    \n                \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                clickButton\n                            \n                            \n                                closemodal\n                            \n                            \n                                showModal\n                            \n                        \n                    \n                \n\n                \n                    \n                        Input\n                    \n                \n                \n                    \n                        \n                            \n                                element\n                            \n                            \n                                show\n                            \n                        \n                    \n                \n\n                \n                    \n                        Output\n                    \n                \n                \n                    \n                        \n                            \n                                onButtonPressed\n                            \n                            \n                                showChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessori\n                        \n                    \n                    \n                        \n                            \n                                \n                                    show\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Costruttore\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Definito in src/app/components/modal/modal.component.ts:46\n                            \n                        \n\n                \n                    \n                            Costrutture componente ModalComponent.\n\n                    \n                \n            \n        \n\n\n    \n    Input\n        \n            \n                \n                    \n                        \n                        element\n                    \n                \n                \n                    \n                        Tipo :         ModalItem\n\n                    \n                \n                        \n                            \n                                    Definito in src/app/components/modal/modal.component.ts:20\n                            \n                        \n                \n                    \n                        Variabile in input usata per la configurazione della modale.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        show\n                    \n                \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                        \n                            \n                                    Definito in src/app/components/modal/modal.component.ts:33\n                            \n                        \n                \n                    \n                        Variabile (set) input che rappresenta lo stato dell'hide-or-show della modale\nQuando esegue l'update del valore show. Lo emette anche in output.\nSee {_show}\n\n                    \n                \n            \n        \n\n    \n    Output\n        \n            \n                \n                    \n                        \n                        onButtonPressed\n                    \n                \n                \n                    \n                        Tipo :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Definito in src/app/components/modal/modal.component.ts:46\n                            \n                        \n                \n                    \n                        Variabile (emitter) di output che rappresenta l'evento di click dei pulsanti.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        showChange\n                    \n                \n                \n                    \n                        Tipo :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Definito in src/app/components/modal/modal.component.ts:40\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        clickButton\n                        \n                    \n                \n            \n            \n                \nclickButton(val: ModalButton)\n                \n            \n\n\n            \n                \n                    Definito in src/app/components/modal/modal.component.ts:75\n                \n            \n\n\n            \n                \n                    Funzione che capta l'evento di pulsante cliccato e lo emette in output.\nSee {onButtonPressed}\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                ModalButton\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        closemodal\n                        \n                    \n                \n            \n            \n                \nclosemodal()\n                \n            \n\n\n            \n                \n                    Definito in src/app/components/modal/modal.component.ts:58\n                \n            \n\n\n            \n                \n                    Funzione che setta la variabile show a false\nSee {show}\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showModal\n                        \n                    \n                \n            \n            \n                \nshowModal()\n                \n            \n\n\n            \n                \n                    Definito in src/app/components/modal/modal.component.ts:66\n                \n            \n\n\n            \n                \n                    Funzione che setta la variabile show a true\nSee {show}\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _show\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/modal/modal.component.ts:26\n                        \n                    \n\n            \n                \n                    Variabile di appoggio per l'hide-or-show della modale\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessori\n    \n        \n            \n                \n                    \n                        \n                        show\n                    \n                \n\n                \n                    \n                        getshow()\n                    \n                \n                            \n                                \n                                    Definito in src/app/components/modal/modal.component.ts:37\n                                \n                            \n\n                \n                    \n                        setshow(val: boolean)\n                    \n                \n                            \n                                \n                                    Definito in src/app/components/modal/modal.component.ts:33\n                                \n                            \n                    \n                        \n                                Variabile (set) input che rappresenta lo stato dell'hide-or-show della modale\nQuando esegue l'update del valore show. Lo emette anche in output.\nSee {_show}\n\n\n                                \n                                        Parametri :\n                                        \n                                            \n                                                \n                                                    Nome\n                                                        Tipo\n                                                    Opzionale\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, EventEmitter, Input } from '@angular/core';\nimport { Output } from '@angular/core';\nimport { ModalButton, ModalItem } from './modalType';\n\n\n/**\n * Componente che ha come scopo la visualizzazione di una modale a contenuto generico.\n */\n@Component({\n  selector: 'app-modal',\n  templateUrl: './modal.component.html',\n  styleUrls: ['./modal.component.sass']\n})\nexport class ModalComponent {\n\n  /**\n   * Variabile in input usata per la configurazione della modale.\n   * @type {ModalItem}\n   */\n  @Input() element: ModalItem;\n\n  /**\n   * Variabile di appoggio per l'hide-or-show della modale\n   * @type {boolean}\n   */\n  protected _show: boolean;  \n  /**\n   * Variabile (set) input che rappresenta lo stato dell'hide-or-show della modale\n   * Quando esegue l'update del valore show. Lo emette anche in output.\n   * @see {_show}\n   */\n  @Input()\n  set show(val: boolean) {\n    this.showChange.emit(val);\n    this._show = val;\n  }\n  get show() {\n    return this._show;\n  }\n  @Output() showChange: EventEmitter = new EventEmitter();\n\n  /**\n   * Variabile (emitter) di output che rappresenta l'evento di click dei pulsanti.\n   * @type {EventEmitter}\n   */\n  @Output() onButtonPressed: EventEmitter = new EventEmitter();\n\n  /**\n   * Costrutture componente ModalComponent.\n   */\n  constructor() {\n  }\n\n  /**\n   * Funzione che setta la variabile show a false\n   * @see {show}\n   */\n  closemodal(){\n    this.show=false;\n  }\n\n  /**\n   * Funzione che setta la variabile show a true\n   * @see {show}\n   */\n  showModal(){\n    this.show=true;\n  }\n\n  /**\n   * Funzione che capta l'evento di pulsante cliccato e lo emette in output.\n   * @param val \n   * @see {onButtonPressed}\n   */\n  clickButton( val: ModalButton){\n    this.onButtonPressed.emit(val);\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n            \n                \n                    {{element.title}}\n                \n                \n                    \n                        &times;\n                    \n                \n            \n            \n                 {{element.text_content}} \n                \n                \n            \n            0\" class=\"modal-footer\">\n                \n                    \n                        {{item.text}}\n                    \n                \n            \n        \n    \n\n    \n\n    \n                \n                    ./modal.component.sass\n                \n                \n    \n\n    \n        \n        \n            \n                Legenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento html con direttive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                            {{element.title}}                                                                            ×                                                                             {{element.text_content}}                                                         0\" class=\"modal-footer\">                                                            {{item.text}}                                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ComposerComponent', 'selector': 'app-composer'},{'name': 'ControlTemplate', 'selector': ''},{'name': 'DataInputComponent', 'selector': 'app-data-input'},{'name': 'DataInputV2Component', 'selector': 'app-data-input-v2'},{'name': 'DataItemComponent', 'selector': 'app-window-item'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HostComponent', 'selector': ''},{'name': 'HowToUseComponent', 'selector': 'app-how-to-use'},{'name': 'MirroringModuleInstanceComponent', 'selector': ''},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavbarElementComponent', 'selector': 'app-navbar-element'},{'name': 'NetworkComponent', 'selector': ''},{'name': 'OffcanvasComponent', 'selector': 'app-offcanvas'},{'name': 'ReteModuleComposerComponent', 'selector': 'app-rete-module-composer'},{'name': 'ReteModuleVisualizerComponent', 'selector': 'app-rete-module-visualizer'},{'name': 'ReteTheaterComposerComponent', 'selector': 'app-rete-theater-composer'},{'name': 'ReteTheaterVisualizerComponent', 'selector': 'app-rete-theater-visualizer'},{'name': 'SubnetComponent', 'selector': ''},{'name': 'TabnavComponent', 'selector': 'app-tabnav'},{'name': 'TheaterInternalServiceModuleInstanceComponent', 'selector': ''},{'name': 'TheaterModuleInstanceComponent', 'selector': ''},{'name': 'UnderbarComponent', 'selector': 'app-underbar'},{'name': 'VisualizerComponent', 'selector': 'app-displayer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/ModalItem.html":{"url":"classes/ModalItem.html","title":"class - ModalItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  ModalItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/modal/modalType.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Tipo di dato passato alla componente ModalComponent per l'elaborazione.\n @see {ModalComponent}\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                    Opzionale\n                                backgroundColor\n                            \n                            \n                                buttons\n                            \n                            \n                                    Opzionale\n                                template\n                            \n                            \n                                    Opzionale\n                                text_content\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        backgroundColor\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                \n                    \n                        Valore predefinito : \"ffffff5e\"\n                    \n                \n                    \n                        \n                                Definito in src/app/components/modal/modalType.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buttons\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ModalButton[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/modal/modalType.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        template\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     TemplateRef\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/modal/modalType.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        text_content\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/modal/modalType.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/modal/modalType.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { TemplateRef } from \"@angular/core\";\n\n/**\n * Tipo di dato passato alla componente ModalComponent per l'elaborazione.\n *  @see {ModalComponent}\n */\nexport class ModalItem {\n    title: string;\n    text_content?: string;\n    template?: TemplateRef;\n    buttons: ModalButton[];\n    backgroundColor?: string = \"ffffff5e\";\n}\n/**\n * Elemento che indica il tipo di pulsante nel modal.\n * Esso è usato anche come di ritorno dell'evento \"button-clicked\".\n * @see {ModalComponent}\n */\nexport class ModalButton {\n    id: string;\n    text: string;\n    type: \"primary\" | \"secondary\" | \"danger\" | \"success\";\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"injectables/ModalService.html":{"url":"injectables/ModalService.html","title":"injectable - ModalService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ModalService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/application/modal/modal.service.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Servizio di gestione modale.\nQuesto servizio è direttamente collegato con le generiche componenti verso l'AppComponent (principale).\nNell'AppComponent si trova una modale.\nIl che comporta la possibilità, attraverso questo servizio di poter essere attivata da tutte le componenti.\nUtilizzata quasi esclusivamente per delle conferma/cancellazione delle operazioni.\nAttenzione. Nella fase di show e scelta, essa ritorna 2 valori: Un valore null (da non considerare) e il secondo valore, la scelta dell'utente.\nPer cui va utilizzata, nella subscribe, take(2). Per fare in modo di ricevere questi due valori e poi eseguire l'unsibscribe\n\n            \n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                modalData\n                            \n                            \n                                    Public\n                                show\n                            \n                            \n                                    Public\n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                getModal\n                            \n                            \n                                setConfirmationModal\n                            \n                            \n                                setResponse\n                            \n                            \n                                showConfirmationModal\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Costruttore\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Definito in src/app/services/application/modal/modal.service.ts:56\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        getModal\n                        \n                    \n                \n            \n            \n                \ngetModal()\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/modal/modal.service.ts:66\n                \n            \n\n\n            \n                \n                    Funzione che ritorna lo stato della modale show/hide.\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setConfirmationModal\n                        \n                    \n                \n            \n            \n                \nsetConfirmationModal(text_content: string)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/modal/modal.service.ts:74\n                \n            \n\n\n            \n                \n                    Funzione che setta la modale in un determinato stato con un determinato messaggio.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    text_content\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setResponse\n                        \n                    \n                \n            \n            \n                \nsetResponse(val: ModalButton)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/modal/modal.service.ts:86\n                \n            \n\n\n            \n                \n                    Funzione che consente di settare il valore (conferma/non conferma) della modale.\nQuando si sceglie, in automatico avviene la chiusura.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                ModalButton\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showConfirmationModal\n                        \n                    \n                \n            \n            \n                \nshowConfirmationModal(text_content: string)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/modal/modal.service.ts:106\n                \n            \n\n\n            \n                \n                    Funzione che setta lo stato della modale. E la mostra.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    text_content\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        modalData\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Valore predefinito : new BehaviorSubject(modalItem)\n                    \n                \n                    \n                        \n                                Definito in src/app/services/application/modal/modal.service.ts:44\n                        \n                    \n\n            \n                \n                    Variabile che memorizza i dati della modale.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        show\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Valore predefinito : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Definito in src/app/services/application/modal/modal.service.ts:50\n                        \n                    \n\n            \n                \n                    Variabile che indica lo stato della modale hide/show.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Valore predefinito : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Definito in src/app/services/application/modal/modal.service.ts:56\n                        \n                    \n\n            \n                \n                    Variabile che indica lo stato della modale hide/show.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { ModalButton, ModalItem } from 'src/app/components/modal/modalType';\n\n\n\nlet modalItem: ModalItem = {\n  title: 'Confirm operation',\n  buttons: [\n    {\n      id: \"yes\",\n      text: \"Yes\",\n      type: \"primary\",\n    },\n    {\n      id: \"no\",\n      text: \"No\",\n      type: \"secondary\",\n    }\n  ],\n  backgroundColor: \"#0000005e\",\n  text_content: \"\"\n};\n\n\n/**\n * Servizio di gestione modale.\n * Questo servizio è direttamente collegato con le generiche componenti verso l'AppComponent (principale).\n * Nell'AppComponent si trova una modale.\n * Il che comporta la possibilità, attraverso questo servizio di poter essere attivata da tutte le componenti.\n * Utilizzata quasi esclusivamente per delle conferma/cancellazione delle operazioni.\n * Attenzione. Nella fase di show e scelta, essa ritorna 2 valori: Un valore null (da non considerare) e il secondo valore, la scelta dell'utente.\n * Per cui va utilizzata, nella subscribe, take(2). Per fare in modo di ricevere questi due valori e poi eseguire l'unsibscribe\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ModalService {\n\n  /**\n   * Variabile che memorizza i dati della modale.\n   * @type {BehaviorSubject}\n   */\n  public modalData: BehaviorSubject = new BehaviorSubject(modalItem);\n  /**\n   * Variabile che indica lo stato della modale hide/show.\n   * @type {BehaviorSubject}\n   * @default {false}\n   */\n  public show: BehaviorSubject = new BehaviorSubject(false);\n  /**\n   * Variabile che indica lo stato della modale hide/show.\n   * @type {BehaviorSubject}\n   * @default {false}\n   */\n  public value: BehaviorSubject = new BehaviorSubject(false);\n\n  constructor() {\n    // this.setConfirmationModal(\"\");\n  }\n\n  /**\n   * Funzione che ritorna lo stato della modale show/hide.\n   * @returns {Observable}\n   */\n  getModal(): Observable {\n    return this.value.asObservable();\n  }\n\n  /**\n   * Funzione che setta la modale in un determinato stato con un determinato messaggio.\n   * @param text_content \n   */\n  setConfirmationModal(text_content: string) {\n    this.value.next(null); //clear old resposnse first\n    modalItem.text_content = text_content;\n    this.modalData.next(modalItem);\n    this.show.next(true);\n  }\n\n  /**\n   * Funzione che consente di settare il valore (conferma/non conferma) della modale.\n   * Quando si sceglie, in automatico avviene la chiusura.\n   * @param val \n   */\n  setResponse(val: ModalButton){\n    if(!val) return \n    if(val.id===\"yes\"){\n      this.value.next(true);\n    }\n    else if(val.id===\"no\"){\n      this.value.next(false);\n    }\n    else{\n      console.warn(\"only yes-no available\");\n    }\n    this.show.next(false);\n  }\n\n\n  /**\n   * Funzione che setta lo stato della modale. E la mostra.\n   * @param text_content \n   * @returns {Observable}\n   */\n  showConfirmationModal(text_content: string): Observable{\n    if (!text_content) return; \n    this.setConfirmationModal(text_content);\n    return this.getModal();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/ModuleApplication.html":{"url":"classes/ModuleApplication.html","title":"class - ModuleApplication","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  ModuleApplication\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsApplication/applicationModels.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe contenente gli attributi utilizzati per le operazioni che coinvolgono i moduli.\nps. Questa struttura è prettamente utilizzata nella chiamata relativa al singolo modulo.\n\n            \n\n            \n                Extends\n            \n            \n                        ModuleDTO\n            \n\n            \n                Implementa\n            \n            \n                            CommonModule\n            \n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                host_number\n                            \n                            \n                                hosts\n                            \n                            \n                                imports\n                            \n                            \n                                interfaces\n                            \n                            \n                                network_number\n                            \n                            \n                                subnet_number\n                            \n                            \n                                topology\n                            \n                            \n                                attachments\n                            \n                            \n                                author\n                            \n                            \n                                capabilities\n                            \n                            \n                                catalog1\n                            \n                            \n                                catalog2\n                            \n                            \n                                catalog3\n                            \n                            \n                                classification\n                            \n                            \n                                configurationTemplate\n                            \n                            \n                                detailProperties\n                            \n                            \n                                input\n                            \n                            \n                                mode\n                            \n                            \n                                output\n                            \n                            \n                                statistics\n                            \n                            \n                                tags\n                            \n                            \n                                createdBy\n                            \n                            \n                                createdDate\n                            \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                isLocked\n                            \n                            \n                                lastModifiedBy\n                            \n                            \n                                lastModifiedDate\n                            \n                            \n                                lockAcquiredTimestamp\n                            \n                            \n                                lockLastUserAcquiring\n                            \n                            \n                                lockReleasedTimestamp\n                            \n                            \n                                name\n                            \n                            \n                                status\n                            \n                            \n                                    Opzionale\n                                type\n                            \n                            \n                                uuid\n                            \n                            \n                                version\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        host_number\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsApplication/applicationModels.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hosts\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     HostModuleDTO[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsApplication/applicationModels.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        imports\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsApplication/applicationModels.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        interfaces\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ModuleNetworkInterfaceDTO[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsApplication/applicationModels.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        network_number\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsApplication/applicationModels.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subnet_number\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsApplication/applicationModels.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        topology\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         NodeTopologyElement\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsApplication/applicationModels.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        attachments\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string[]\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleDTO:93\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        author\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleDTO:94\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        capabilities\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     literal type\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleDTO:95\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        catalog1\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         TypesCatalogueDTO\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleDTO:96\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        catalog2\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         TypesCatalogueDTO\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleDTO:97\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        catalog3\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         TypesCatalogueDTO\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleDTO:98\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        classification\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ModuleClassificationDTO\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleDTO:99\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        configurationTemplate\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ConfigurationTemplateDTO\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleDTO:100\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        detailProperties\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     literal type\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleDTO:101\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        input\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     literal type\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleDTO:102\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ModuleModeDTO\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleDTO:104\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        output\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     literal type\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleDTO:103\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        statistics\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     literal type\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleDTO:105\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tags\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     []\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleDTO:106\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:76\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdDate\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:77\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:78\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:79\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLocked\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:80\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastModifiedBy\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:81\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastModifiedDate\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:82\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lockAcquiredTimestamp\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:83\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lockLastUserAcquiring\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:84\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lockReleasedTimestamp\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:85\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:86\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ModuleStatusDTO\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:87\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | any\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:88\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uuid\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:89\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:90\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ReteHostInfo } from \"src/app/rete-settings/nodes/rete-nodes/host/hostNode\";\nimport { ReteNetworkInfo } from \"src/app/rete-settings/nodes/rete-nodes/network/networkNode\";\nimport { ReteSubnetInfo } from \"src/app/rete-settings/nodes/rete-nodes/subnet/subnetNode\";\nimport { ReteMirroringModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/mirroringModuleInstance/mirroringModuleInstanceNode\";\nimport { ReteTheaterInternalServiceModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/theaterInternalServiceModuleInstance/theaterInternalServiceModuleInstanceNode\";\nimport { ReteTheaterModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/theaterModuleInstance/theaterModuleInstanceNode\";\nimport { FlavorBasicInfo } from \"../modelsDTO/falvorDTO\";\nimport { HostModuleDTO } from \"../modelsDTO/hostDTO\";\nimport { ModuleNetworkInterfaceDTO, ModuleInstancePropertiesDTO, SimpleModuleDTO, TheaterInstancePropertiesDTO, ModuleInstanceDTO, ModuleDTO, SimpleAreaDTO, AreaDTO } from \"../modelsDTO/moduleDTO\";\nimport { TheaterDTO } from \"../modelsDTO/theaterDTO\";\n\n\nexport interface CommonModule {\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n}\n\n\n/**\n * Classe contenente gli attributi utilizzati per le operazioni che coinvolgono i moduli.\n * ps. Questa struttura è prettamente utilizzata nella chiamata relativa al singolo modulo.\n */\nexport class ModuleApplication extends ModuleDTO implements CommonModule {\n    imports: string[] // perchè nell'export yaml è previsto\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n}\n// PER IMPLEMENTAZIONI FUTURE, PER COERENZA, PRENDERE DIRETTAMENTE I SINGOLI NODI DALLA CHIAMATA ESCLUSIVA E NON DA QUELLA CHE RESTITUISCE TUTTI I TEATRI\n/**\n * Classe contenente gli attributi utilizzati per le operazioni che coinvolgono i moduli.\n * ps. Questa struttura è prettamente utilizzata nella chiamata che prende tutti i moduli del teatro.\n */\nexport class SimpleModuleApplication extends SimpleModuleDTO implements CommonModule {\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n}\n\n\nexport class ReteConnection {\n    from: string;\n    port_src: string;\n    to: string;\n    port_dst: string;\n}\n\nexport interface TopologyList {\n    rete: any;\n    topology?: TopologyElement\n}\nexport class TopologyElement {\n    elements: { [name: string]: any };\n    connection: ReteConnection[]\n}\n\n// apptype module topology\n\nexport class NodeTopologyElement implements TopologyElement {\n    elements: { [hostName: string]: ReteHostInfo | ReteSubnetInfo | ReteNetworkInfo };\n    connection: ReteConnection[]\n}\n\nexport interface ModuleTopology extends TopologyList {\n    rete: ReteMirroringModuleInstanceInfo | ReteTheaterInternalServiceModuleInstanceInfo | ReteTheaterModuleInstanceInfo\n    topology: NodeTopologyElement;\n}\n\nexport class ModuleInstance extends ModuleInstanceDTO implements ModuleTopology {\n    // moduleTopology data\n    rete: ReteTheaterModuleInstanceInfo | ReteTheaterInternalServiceModuleInstanceInfo | ReteMirroringModuleInstanceInfo;\n    topology: NodeTopologyElement;\n    // other data\n    moduleInfo: SimpleModuleApplication\n}\n\n// apptype theater theater\n\nexport interface TheaterTopology extends TopologyElement {\n    elements: { [hostName: string]: ModuleInstance };\n    connection: ReteConnection[];\n}\n\nexport class TheaterApplication extends TheaterDTO implements TheaterTopology {\n    // theaterTopology data\n    elements: { [hostName: string]: ModuleInstance; };\n    connection: ReteConnection[];\n    // other data\n    properties: TheaterInstancePropertiesDTO;\n    topology: TheaterTopology;\n}\n\nexport class AreaApplication extends AreaDTO {\n    color?: string;\n}\nexport class AreaColorDTO extends SimpleAreaDTO {\n    color: string;\n}\n\n\nexport class FlavorApplication extends FlavorBasicInfo {\n    flavorName: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/ModuleClassificationDTO.html":{"url":"classes/ModuleClassificationDTO.html","title":"class - ModuleClassificationDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  ModuleClassificationDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsDTO/moduleDTO.ts\n        \n\n\n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                blueprintType\n                            \n                            \n                                category\n                            \n                            \n                                expectedInstanceType\n                            \n                            \n                                id\n                            \n                            \n                                mcClass\n                            \n                            \n                                type\n                            \n                            \n                                uuid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        blueprintType\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        expectedInstanceType\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mcClass\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uuid\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:35\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PageableDTO, SortDTO } from './elementDTO';\nimport { NetworkDTO } from './networkDTO';\nimport { TheaterDTO } from './theaterDTO';\n\n\nexport class ModuleListDTO {\n    content: SimpleModuleDTO[]\n    pageable: PageableDTO\n    last: boolean\n    totalPages: string | number\n    totalElements: string | number\n    size: string | number\n    number: string | number\n    sort: SortDTO\n    numberOfElements: string | number\n    first: boolean\n    empty: boolean\n}\n\n\nexport class TypesCatalogueDTO {\n    group: string\n    id: string | number\n    parentId: {}\n    value: string\n}\n\nexport class ModuleClassificationDTO {\n    blueprintType: string\n    category: string\n    expectedInstanceType: string\n    id: string | number\n    mcClass: string\n    type: string\n    uuid: string\n}\n\nexport class GenericParameterDTO {\n    type: string\n    default: string\n    description: string\n}\n\nexport class ConfigurationTemplateDTO {\n    anchor_parameters: { [name: string]: GenericParameterDTO | string }\n    instance_parameters: { [name: string]: GenericParameterDTO }\n    structural_parameters: { [name: string]: GenericParameterDTO }\n    fixed_parameters: { [name: string]: GenericParameterDTO }\n    control_parameters: { [name: string]: GenericParameterDTO }\n    infrastructure_parameters: { [name: string]: GenericParameterDTO }\n    module: string\n    description: string\n    category: string\n    version: string | number\n    platform: string\n}\n\nexport class ModuleModeDTO {\n    code: string\n    id: string | number\n    name: string\n}\n\nexport class ModuleStatusDTO {\n    descriptionCode: string\n    id: string | number\n    name: string\n}\nexport class StatisticItemDTO {\n    error: string | number\n    updated: string | number\n    inserted: string | number\n}\n\nexport class SimpleModuleDTO {\n    createdBy: string\n    createdDate: string\n    description: string\n    id: string | number\n    isLocked: boolean\n    lastModifiedBy: string\n    lastModifiedDate: string\n    lockAcquiredTimestamp: string\n    lockLastUserAcquiring: string\n    lockReleasedTimestamp: string\n    name: string\n    status: ModuleStatusDTO\n    type?: string | any\n    uuid: string\n    version: string | number\n}\nexport class ModuleDTO extends SimpleModuleDTO {\n    attachments: string[]\n    author: string\n    capabilities: { [name: string]: string }\n    catalog1: TypesCatalogueDTO\n    catalog2: TypesCatalogueDTO\n    catalog3: TypesCatalogueDTO\n    classification: ModuleClassificationDTO\n    configurationTemplate: ConfigurationTemplateDTO\n    detailProperties: {}\n    input: { [name: string]: string }\n    output: { [name: string]: string }\n    mode: ModuleModeDTO\n    statistics: { [name: string]: StatisticItemDTO | string | number }\n    tags: []\n}\n\nexport class ModuleNetworkInterfaceDTO {\n    id: string | number\n    label: string\n    module: ModuleDTO\n    network: NetworkDTO\n    nodeName: string\n    type: string\n    uuid: string\n}\n\nexport class ConsumerInterfaceLinkDTO {\n    local_interface: string\n    module_instance: string\n    remote_interface: string\n}\n\nexport class ModuleInstancePropertiesDTO {\n    area: string\n    description: string\n    module: string\n    version: string | number\n    sequence: string | number\n    consumer_interfaces_link: ConsumerInterfaceLinkDTO[]\n}\n\nexport class AreaDTO {\n    id: string | number;\n    uuid: string;\n    name: string;\n    description: string;\n    theater: TheaterDTO;\n    deleted: boolean | string;\n}\n\nexport class SimpleAreaDTO {\n    area: string\n    description: string\n}\nexport class TheaterInstancePropertiesDTO {\n    mode: string\n    tags: TagTIP[]\n    areas: SimpleAreaDTO[]\n    author: string\n    version: string | number\n    description: string\n}\nexport class TagTIP{\n    tag: string\n}\nexport class ElementIntoTheaterDTO {  // goes into map in blueprint [name:string]: Module...\n    properties: ModuleInstancePropertiesDTO | TheaterInstancePropertiesDTO\n    type: string\n}\nexport class ModuleInstanceDTO {\n    properties: ModuleInstancePropertiesDTO\n    type: string\n}\nexport class TheaterInstanceDTO {\n    properties: TheaterInstancePropertiesDTO\n    type: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/ModuleConstraints.html":{"url":"classes/ModuleConstraints.html","title":"class - ModuleConstraints","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  ModuleConstraints\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsExport/moduleExport.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ModeTypeExport, ModuleTypeExport, NetworkTypeExport, NodeTypeExport, PortTypeExport, RelationshipsTypeExport, SubnetTypeExport, ToscaDefinitionType } from \"./TypeExport\"\n\n\n/**\n * Classe utilizzata per l'export. \n * Contiene le informazioni generali per il modulo che devono esserci nello standard Tosca.\n */\nexport class ModuleExport {\n    tosca_definitions_version: ToscaDefinitionType\n    description: string\n    imports: string[]\n    node_templates: { [name: string]: ModuleSimpleData | NodeSimpleData | PortSimpleData | NetworkSimpleData | SubnetSimpleData }\n    dsl_definition: any | null; //future\n    capabilites: any | null //future\n    outputs: any | null //future\n}\n\n\nexport class ModuleSimpleData {\n    type: ModuleTypeExport\n    properties: PropertiesMSD\n}\nexport class PropertiesMSD {\n    mode: ModeTypeExport\n    description: string\n    version: string | number\n    constraints: ConstraintsMSD\n    interface_networks: {\n        providers: InterfaceNetworksProvider[]\n        consumers: InterfaceNetworksConsumer[]\n    }\n    virtual_machines: VirtualMachine[]\n}\nexport class ConstraintsMSD {\n    interface_constraints: InterfaceConstraints[]\n    module_constraints: ModuleConstraints[]\n    network_constraints: NetworkConstraints[]\n}\nexport class InterfaceConstraints {\n    local_interface: string\n    multiple_mode: boolean = false //future\n    module_name: string\n    compatibility: string = \"1.0\" // future\n    remote_interface: string\n}\nexport class ModuleConstraints {\n}\nexport class NetworkConstraints {\n}\n\nexport class InterfaceNetworksProvider {\n    interface: string\n    network: string\n    tag: string\n    subnets: SubnetExport[]\n}\nexport class InterfaceNetworksConsumer {\n    interface: string\n    network: string\n    tag: string\n    subnets: SubnetExport[]\n}\n\nexport class VirtualMachine {\n    virtual_machine: string\n    ports: VirtualMachinePorts[]\n}\nexport class VirtualMachinePorts {\n    port: string\n    network: string\n    subnets: SubnetExport[]\n}\n\nexport class SubnetExport {\n    subnet: string;\n}\n\nexport class NodeSimpleData {\n    type: NodeTypeExport\n    properties: any | null // future\n    interfaces: any | null // future\n    relationships: RelationshipsExport[]\n}\n\nexport class RelationshipsExport {\n    type: RelationshipsTypeExport\n    target: string\n}\n\nexport class PortSimpleData {\n    type: PortTypeExport\n    relationships: RelationshipsExport[]\n}\n\nexport class NetworkSimpleData {\n    type: NetworkTypeExport\n    properties: PropertiesNSD\n}\nexport class PropertiesNSD {\n    openstack_config?: any | null // future\n    use_external_resource?: boolean | null // future\n    resource_id?: any | null // future\n}\n\n\nexport class SubnetSimpleData {\n    type: SubnetTypeExport\n    relationships: RelationshipsExport[]\n    properties: PropertiesSSD\n}\nexport class PropertiesSSD {\n    subnet?: {\n        ip_version: string | number\n        cidr: string\n        enable_dhcp: boolean\n        gateway_ip?: any | null // future\n    }\n    openstack_config?: any | null // future\n    use_external_resource?: boolean | null // future\n    resource_id?: any | null // future\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/ModuleDTO.html":{"url":"classes/ModuleDTO.html","title":"class - ModuleDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  ModuleDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsDTO/moduleDTO.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        SimpleModuleDTO\n            \n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                attachments\n                            \n                            \n                                author\n                            \n                            \n                                capabilities\n                            \n                            \n                                catalog1\n                            \n                            \n                                catalog2\n                            \n                            \n                                catalog3\n                            \n                            \n                                classification\n                            \n                            \n                                configurationTemplate\n                            \n                            \n                                detailProperties\n                            \n                            \n                                input\n                            \n                            \n                                mode\n                            \n                            \n                                output\n                            \n                            \n                                statistics\n                            \n                            \n                                tags\n                            \n                            \n                                createdBy\n                            \n                            \n                                createdDate\n                            \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                isLocked\n                            \n                            \n                                lastModifiedBy\n                            \n                            \n                                lastModifiedDate\n                            \n                            \n                                lockAcquiredTimestamp\n                            \n                            \n                                lockLastUserAcquiring\n                            \n                            \n                                lockReleasedTimestamp\n                            \n                            \n                                name\n                            \n                            \n                                status\n                            \n                            \n                                    Opzionale\n                                type\n                            \n                            \n                                uuid\n                            \n                            \n                                version\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        attachments\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:93\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        author\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:94\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        capabilities\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     literal type\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:95\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        catalog1\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         TypesCatalogueDTO\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:96\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        catalog2\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         TypesCatalogueDTO\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:97\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        catalog3\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         TypesCatalogueDTO\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:98\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        classification\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ModuleClassificationDTO\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:99\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        configurationTemplate\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ConfigurationTemplateDTO\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:100\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        detailProperties\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     literal type\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:101\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        input\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     literal type\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:102\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ModuleModeDTO\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:104\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        output\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     literal type\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:103\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        statistics\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     literal type\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:105\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tags\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     []\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:106\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:76\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdDate\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:77\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:78\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:79\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLocked\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:80\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastModifiedBy\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:81\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastModifiedDate\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:82\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lockAcquiredTimestamp\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:83\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lockLastUserAcquiring\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:84\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lockReleasedTimestamp\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:85\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:86\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ModuleStatusDTO\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:87\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | any\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:88\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uuid\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:89\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:90\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PageableDTO, SortDTO } from './elementDTO';\nimport { NetworkDTO } from './networkDTO';\nimport { TheaterDTO } from './theaterDTO';\n\n\nexport class ModuleListDTO {\n    content: SimpleModuleDTO[]\n    pageable: PageableDTO\n    last: boolean\n    totalPages: string | number\n    totalElements: string | number\n    size: string | number\n    number: string | number\n    sort: SortDTO\n    numberOfElements: string | number\n    first: boolean\n    empty: boolean\n}\n\n\nexport class TypesCatalogueDTO {\n    group: string\n    id: string | number\n    parentId: {}\n    value: string\n}\n\nexport class ModuleClassificationDTO {\n    blueprintType: string\n    category: string\n    expectedInstanceType: string\n    id: string | number\n    mcClass: string\n    type: string\n    uuid: string\n}\n\nexport class GenericParameterDTO {\n    type: string\n    default: string\n    description: string\n}\n\nexport class ConfigurationTemplateDTO {\n    anchor_parameters: { [name: string]: GenericParameterDTO | string }\n    instance_parameters: { [name: string]: GenericParameterDTO }\n    structural_parameters: { [name: string]: GenericParameterDTO }\n    fixed_parameters: { [name: string]: GenericParameterDTO }\n    control_parameters: { [name: string]: GenericParameterDTO }\n    infrastructure_parameters: { [name: string]: GenericParameterDTO }\n    module: string\n    description: string\n    category: string\n    version: string | number\n    platform: string\n}\n\nexport class ModuleModeDTO {\n    code: string\n    id: string | number\n    name: string\n}\n\nexport class ModuleStatusDTO {\n    descriptionCode: string\n    id: string | number\n    name: string\n}\nexport class StatisticItemDTO {\n    error: string | number\n    updated: string | number\n    inserted: string | number\n}\n\nexport class SimpleModuleDTO {\n    createdBy: string\n    createdDate: string\n    description: string\n    id: string | number\n    isLocked: boolean\n    lastModifiedBy: string\n    lastModifiedDate: string\n    lockAcquiredTimestamp: string\n    lockLastUserAcquiring: string\n    lockReleasedTimestamp: string\n    name: string\n    status: ModuleStatusDTO\n    type?: string | any\n    uuid: string\n    version: string | number\n}\nexport class ModuleDTO extends SimpleModuleDTO {\n    attachments: string[]\n    author: string\n    capabilities: { [name: string]: string }\n    catalog1: TypesCatalogueDTO\n    catalog2: TypesCatalogueDTO\n    catalog3: TypesCatalogueDTO\n    classification: ModuleClassificationDTO\n    configurationTemplate: ConfigurationTemplateDTO\n    detailProperties: {}\n    input: { [name: string]: string }\n    output: { [name: string]: string }\n    mode: ModuleModeDTO\n    statistics: { [name: string]: StatisticItemDTO | string | number }\n    tags: []\n}\n\nexport class ModuleNetworkInterfaceDTO {\n    id: string | number\n    label: string\n    module: ModuleDTO\n    network: NetworkDTO\n    nodeName: string\n    type: string\n    uuid: string\n}\n\nexport class ConsumerInterfaceLinkDTO {\n    local_interface: string\n    module_instance: string\n    remote_interface: string\n}\n\nexport class ModuleInstancePropertiesDTO {\n    area: string\n    description: string\n    module: string\n    version: string | number\n    sequence: string | number\n    consumer_interfaces_link: ConsumerInterfaceLinkDTO[]\n}\n\nexport class AreaDTO {\n    id: string | number;\n    uuid: string;\n    name: string;\n    description: string;\n    theater: TheaterDTO;\n    deleted: boolean | string;\n}\n\nexport class SimpleAreaDTO {\n    area: string\n    description: string\n}\nexport class TheaterInstancePropertiesDTO {\n    mode: string\n    tags: TagTIP[]\n    areas: SimpleAreaDTO[]\n    author: string\n    version: string | number\n    description: string\n}\nexport class TagTIP{\n    tag: string\n}\nexport class ElementIntoTheaterDTO {  // goes into map in blueprint [name:string]: Module...\n    properties: ModuleInstancePropertiesDTO | TheaterInstancePropertiesDTO\n    type: string\n}\nexport class ModuleInstanceDTO {\n    properties: ModuleInstancePropertiesDTO\n    type: string\n}\nexport class TheaterInstanceDTO {\n    properties: TheaterInstancePropertiesDTO\n    type: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/ModuleExport.html":{"url":"classes/ModuleExport.html","title":"class - ModuleExport","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  ModuleExport\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsExport/moduleExport.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe utilizzata per l'export.\nContiene le informazioni generali per il modulo che devono esserci nello standard Tosca.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                capabilites\n                            \n                            \n                                description\n                            \n                            \n                                dsl_definition\n                            \n                            \n                                imports\n                            \n                            \n                                node_templates\n                            \n                            \n                                outputs\n                            \n                            \n                                tosca_definitions_version\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        capabilites\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     any | null\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dsl_definition\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     any | null\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        imports\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        node_templates\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     literal type\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        outputs\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     any | null\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tosca_definitions_version\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ToscaDefinitionType\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ModeTypeExport, ModuleTypeExport, NetworkTypeExport, NodeTypeExport, PortTypeExport, RelationshipsTypeExport, SubnetTypeExport, ToscaDefinitionType } from \"./TypeExport\"\n\n\n/**\n * Classe utilizzata per l'export. \n * Contiene le informazioni generali per il modulo che devono esserci nello standard Tosca.\n */\nexport class ModuleExport {\n    tosca_definitions_version: ToscaDefinitionType\n    description: string\n    imports: string[]\n    node_templates: { [name: string]: ModuleSimpleData | NodeSimpleData | PortSimpleData | NetworkSimpleData | SubnetSimpleData }\n    dsl_definition: any | null; //future\n    capabilites: any | null //future\n    outputs: any | null //future\n}\n\n\nexport class ModuleSimpleData {\n    type: ModuleTypeExport\n    properties: PropertiesMSD\n}\nexport class PropertiesMSD {\n    mode: ModeTypeExport\n    description: string\n    version: string | number\n    constraints: ConstraintsMSD\n    interface_networks: {\n        providers: InterfaceNetworksProvider[]\n        consumers: InterfaceNetworksConsumer[]\n    }\n    virtual_machines: VirtualMachine[]\n}\nexport class ConstraintsMSD {\n    interface_constraints: InterfaceConstraints[]\n    module_constraints: ModuleConstraints[]\n    network_constraints: NetworkConstraints[]\n}\nexport class InterfaceConstraints {\n    local_interface: string\n    multiple_mode: boolean = false //future\n    module_name: string\n    compatibility: string = \"1.0\" // future\n    remote_interface: string\n}\nexport class ModuleConstraints {\n}\nexport class NetworkConstraints {\n}\n\nexport class InterfaceNetworksProvider {\n    interface: string\n    network: string\n    tag: string\n    subnets: SubnetExport[]\n}\nexport class InterfaceNetworksConsumer {\n    interface: string\n    network: string\n    tag: string\n    subnets: SubnetExport[]\n}\n\nexport class VirtualMachine {\n    virtual_machine: string\n    ports: VirtualMachinePorts[]\n}\nexport class VirtualMachinePorts {\n    port: string\n    network: string\n    subnets: SubnetExport[]\n}\n\nexport class SubnetExport {\n    subnet: string;\n}\n\nexport class NodeSimpleData {\n    type: NodeTypeExport\n    properties: any | null // future\n    interfaces: any | null // future\n    relationships: RelationshipsExport[]\n}\n\nexport class RelationshipsExport {\n    type: RelationshipsTypeExport\n    target: string\n}\n\nexport class PortSimpleData {\n    type: PortTypeExport\n    relationships: RelationshipsExport[]\n}\n\nexport class NetworkSimpleData {\n    type: NetworkTypeExport\n    properties: PropertiesNSD\n}\nexport class PropertiesNSD {\n    openstack_config?: any | null // future\n    use_external_resource?: boolean | null // future\n    resource_id?: any | null // future\n}\n\n\nexport class SubnetSimpleData {\n    type: SubnetTypeExport\n    relationships: RelationshipsExport[]\n    properties: PropertiesSSD\n}\nexport class PropertiesSSD {\n    subnet?: {\n        ip_version: string | number\n        cidr: string\n        enable_dhcp: boolean\n        gateway_ip?: any | null // future\n    }\n    openstack_config?: any | null // future\n    use_external_resource?: boolean | null // future\n    resource_id?: any | null // future\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/ModuleInstance.html":{"url":"classes/ModuleInstance.html","title":"class - ModuleInstance","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  ModuleInstance\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsApplication/applicationModels.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ModuleInstanceDTO\n            \n\n            \n                Implementa\n            \n            \n                            ModuleTopology\n            \n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                moduleInfo\n                            \n                            \n                                rete\n                            \n                            \n                                topology\n                            \n                            \n                                properties\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        moduleInfo\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         SimpleModuleApplication\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsApplication/applicationModels.ts:84\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rete\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     ReteTheaterModuleInstanceInfo | ReteTheaterInternalServiceModuleInstanceInfo | ReteMirroringModuleInstanceInfo\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsApplication/applicationModels.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        topology\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         NodeTopologyElement\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsApplication/applicationModels.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        properties\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ModuleInstancePropertiesDTO\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleInstanceDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleInstanceDTO:163\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleInstanceDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleInstanceDTO:164\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ReteHostInfo } from \"src/app/rete-settings/nodes/rete-nodes/host/hostNode\";\nimport { ReteNetworkInfo } from \"src/app/rete-settings/nodes/rete-nodes/network/networkNode\";\nimport { ReteSubnetInfo } from \"src/app/rete-settings/nodes/rete-nodes/subnet/subnetNode\";\nimport { ReteMirroringModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/mirroringModuleInstance/mirroringModuleInstanceNode\";\nimport { ReteTheaterInternalServiceModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/theaterInternalServiceModuleInstance/theaterInternalServiceModuleInstanceNode\";\nimport { ReteTheaterModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/theaterModuleInstance/theaterModuleInstanceNode\";\nimport { FlavorBasicInfo } from \"../modelsDTO/falvorDTO\";\nimport { HostModuleDTO } from \"../modelsDTO/hostDTO\";\nimport { ModuleNetworkInterfaceDTO, ModuleInstancePropertiesDTO, SimpleModuleDTO, TheaterInstancePropertiesDTO, ModuleInstanceDTO, ModuleDTO, SimpleAreaDTO, AreaDTO } from \"../modelsDTO/moduleDTO\";\nimport { TheaterDTO } from \"../modelsDTO/theaterDTO\";\n\n\nexport interface CommonModule {\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n}\n\n\n/**\n * Classe contenente gli attributi utilizzati per le operazioni che coinvolgono i moduli.\n * ps. Questa struttura è prettamente utilizzata nella chiamata relativa al singolo modulo.\n */\nexport class ModuleApplication extends ModuleDTO implements CommonModule {\n    imports: string[] // perchè nell'export yaml è previsto\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n}\n// PER IMPLEMENTAZIONI FUTURE, PER COERENZA, PRENDERE DIRETTAMENTE I SINGOLI NODI DALLA CHIAMATA ESCLUSIVA E NON DA QUELLA CHE RESTITUISCE TUTTI I TEATRI\n/**\n * Classe contenente gli attributi utilizzati per le operazioni che coinvolgono i moduli.\n * ps. Questa struttura è prettamente utilizzata nella chiamata che prende tutti i moduli del teatro.\n */\nexport class SimpleModuleApplication extends SimpleModuleDTO implements CommonModule {\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n}\n\n\nexport class ReteConnection {\n    from: string;\n    port_src: string;\n    to: string;\n    port_dst: string;\n}\n\nexport interface TopologyList {\n    rete: any;\n    topology?: TopologyElement\n}\nexport class TopologyElement {\n    elements: { [name: string]: any };\n    connection: ReteConnection[]\n}\n\n// apptype module topology\n\nexport class NodeTopologyElement implements TopologyElement {\n    elements: { [hostName: string]: ReteHostInfo | ReteSubnetInfo | ReteNetworkInfo };\n    connection: ReteConnection[]\n}\n\nexport interface ModuleTopology extends TopologyList {\n    rete: ReteMirroringModuleInstanceInfo | ReteTheaterInternalServiceModuleInstanceInfo | ReteTheaterModuleInstanceInfo\n    topology: NodeTopologyElement;\n}\n\nexport class ModuleInstance extends ModuleInstanceDTO implements ModuleTopology {\n    // moduleTopology data\n    rete: ReteTheaterModuleInstanceInfo | ReteTheaterInternalServiceModuleInstanceInfo | ReteMirroringModuleInstanceInfo;\n    topology: NodeTopologyElement;\n    // other data\n    moduleInfo: SimpleModuleApplication\n}\n\n// apptype theater theater\n\nexport interface TheaterTopology extends TopologyElement {\n    elements: { [hostName: string]: ModuleInstance };\n    connection: ReteConnection[];\n}\n\nexport class TheaterApplication extends TheaterDTO implements TheaterTopology {\n    // theaterTopology data\n    elements: { [hostName: string]: ModuleInstance; };\n    connection: ReteConnection[];\n    // other data\n    properties: TheaterInstancePropertiesDTO;\n    topology: TheaterTopology;\n}\n\nexport class AreaApplication extends AreaDTO {\n    color?: string;\n}\nexport class AreaColorDTO extends SimpleAreaDTO {\n    color: string;\n}\n\n\nexport class FlavorApplication extends FlavorBasicInfo {\n    flavorName: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/ModuleInstanceDTO.html":{"url":"classes/ModuleInstanceDTO.html","title":"class - ModuleInstanceDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  ModuleInstanceDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsDTO/moduleDTO.ts\n        \n\n\n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                properties\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        properties\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ModuleInstancePropertiesDTO\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:163\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:164\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PageableDTO, SortDTO } from './elementDTO';\nimport { NetworkDTO } from './networkDTO';\nimport { TheaterDTO } from './theaterDTO';\n\n\nexport class ModuleListDTO {\n    content: SimpleModuleDTO[]\n    pageable: PageableDTO\n    last: boolean\n    totalPages: string | number\n    totalElements: string | number\n    size: string | number\n    number: string | number\n    sort: SortDTO\n    numberOfElements: string | number\n    first: boolean\n    empty: boolean\n}\n\n\nexport class TypesCatalogueDTO {\n    group: string\n    id: string | number\n    parentId: {}\n    value: string\n}\n\nexport class ModuleClassificationDTO {\n    blueprintType: string\n    category: string\n    expectedInstanceType: string\n    id: string | number\n    mcClass: string\n    type: string\n    uuid: string\n}\n\nexport class GenericParameterDTO {\n    type: string\n    default: string\n    description: string\n}\n\nexport class ConfigurationTemplateDTO {\n    anchor_parameters: { [name: string]: GenericParameterDTO | string }\n    instance_parameters: { [name: string]: GenericParameterDTO }\n    structural_parameters: { [name: string]: GenericParameterDTO }\n    fixed_parameters: { [name: string]: GenericParameterDTO }\n    control_parameters: { [name: string]: GenericParameterDTO }\n    infrastructure_parameters: { [name: string]: GenericParameterDTO }\n    module: string\n    description: string\n    category: string\n    version: string | number\n    platform: string\n}\n\nexport class ModuleModeDTO {\n    code: string\n    id: string | number\n    name: string\n}\n\nexport class ModuleStatusDTO {\n    descriptionCode: string\n    id: string | number\n    name: string\n}\nexport class StatisticItemDTO {\n    error: string | number\n    updated: string | number\n    inserted: string | number\n}\n\nexport class SimpleModuleDTO {\n    createdBy: string\n    createdDate: string\n    description: string\n    id: string | number\n    isLocked: boolean\n    lastModifiedBy: string\n    lastModifiedDate: string\n    lockAcquiredTimestamp: string\n    lockLastUserAcquiring: string\n    lockReleasedTimestamp: string\n    name: string\n    status: ModuleStatusDTO\n    type?: string | any\n    uuid: string\n    version: string | number\n}\nexport class ModuleDTO extends SimpleModuleDTO {\n    attachments: string[]\n    author: string\n    capabilities: { [name: string]: string }\n    catalog1: TypesCatalogueDTO\n    catalog2: TypesCatalogueDTO\n    catalog3: TypesCatalogueDTO\n    classification: ModuleClassificationDTO\n    configurationTemplate: ConfigurationTemplateDTO\n    detailProperties: {}\n    input: { [name: string]: string }\n    output: { [name: string]: string }\n    mode: ModuleModeDTO\n    statistics: { [name: string]: StatisticItemDTO | string | number }\n    tags: []\n}\n\nexport class ModuleNetworkInterfaceDTO {\n    id: string | number\n    label: string\n    module: ModuleDTO\n    network: NetworkDTO\n    nodeName: string\n    type: string\n    uuid: string\n}\n\nexport class ConsumerInterfaceLinkDTO {\n    local_interface: string\n    module_instance: string\n    remote_interface: string\n}\n\nexport class ModuleInstancePropertiesDTO {\n    area: string\n    description: string\n    module: string\n    version: string | number\n    sequence: string | number\n    consumer_interfaces_link: ConsumerInterfaceLinkDTO[]\n}\n\nexport class AreaDTO {\n    id: string | number;\n    uuid: string;\n    name: string;\n    description: string;\n    theater: TheaterDTO;\n    deleted: boolean | string;\n}\n\nexport class SimpleAreaDTO {\n    area: string\n    description: string\n}\nexport class TheaterInstancePropertiesDTO {\n    mode: string\n    tags: TagTIP[]\n    areas: SimpleAreaDTO[]\n    author: string\n    version: string | number\n    description: string\n}\nexport class TagTIP{\n    tag: string\n}\nexport class ElementIntoTheaterDTO {  // goes into map in blueprint [name:string]: Module...\n    properties: ModuleInstancePropertiesDTO | TheaterInstancePropertiesDTO\n    type: string\n}\nexport class ModuleInstanceDTO {\n    properties: ModuleInstancePropertiesDTO\n    type: string\n}\nexport class TheaterInstanceDTO {\n    properties: TheaterInstancePropertiesDTO\n    type: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/ModuleInstancePropertiesDTO.html":{"url":"classes/ModuleInstancePropertiesDTO.html","title":"class - ModuleInstancePropertiesDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  ModuleInstancePropertiesDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsDTO/moduleDTO.ts\n        \n\n\n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                area\n                            \n                            \n                                consumer_interfaces_link\n                            \n                            \n                                description\n                            \n                            \n                                module\n                            \n                            \n                                sequence\n                            \n                            \n                                version\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        area\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:126\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        consumer_interfaces_link\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ConsumerInterfaceLinkDTO[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:131\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:127\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:128\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sequence\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:130\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:129\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PageableDTO, SortDTO } from './elementDTO';\nimport { NetworkDTO } from './networkDTO';\nimport { TheaterDTO } from './theaterDTO';\n\n\nexport class ModuleListDTO {\n    content: SimpleModuleDTO[]\n    pageable: PageableDTO\n    last: boolean\n    totalPages: string | number\n    totalElements: string | number\n    size: string | number\n    number: string | number\n    sort: SortDTO\n    numberOfElements: string | number\n    first: boolean\n    empty: boolean\n}\n\n\nexport class TypesCatalogueDTO {\n    group: string\n    id: string | number\n    parentId: {}\n    value: string\n}\n\nexport class ModuleClassificationDTO {\n    blueprintType: string\n    category: string\n    expectedInstanceType: string\n    id: string | number\n    mcClass: string\n    type: string\n    uuid: string\n}\n\nexport class GenericParameterDTO {\n    type: string\n    default: string\n    description: string\n}\n\nexport class ConfigurationTemplateDTO {\n    anchor_parameters: { [name: string]: GenericParameterDTO | string }\n    instance_parameters: { [name: string]: GenericParameterDTO }\n    structural_parameters: { [name: string]: GenericParameterDTO }\n    fixed_parameters: { [name: string]: GenericParameterDTO }\n    control_parameters: { [name: string]: GenericParameterDTO }\n    infrastructure_parameters: { [name: string]: GenericParameterDTO }\n    module: string\n    description: string\n    category: string\n    version: string | number\n    platform: string\n}\n\nexport class ModuleModeDTO {\n    code: string\n    id: string | number\n    name: string\n}\n\nexport class ModuleStatusDTO {\n    descriptionCode: string\n    id: string | number\n    name: string\n}\nexport class StatisticItemDTO {\n    error: string | number\n    updated: string | number\n    inserted: string | number\n}\n\nexport class SimpleModuleDTO {\n    createdBy: string\n    createdDate: string\n    description: string\n    id: string | number\n    isLocked: boolean\n    lastModifiedBy: string\n    lastModifiedDate: string\n    lockAcquiredTimestamp: string\n    lockLastUserAcquiring: string\n    lockReleasedTimestamp: string\n    name: string\n    status: ModuleStatusDTO\n    type?: string | any\n    uuid: string\n    version: string | number\n}\nexport class ModuleDTO extends SimpleModuleDTO {\n    attachments: string[]\n    author: string\n    capabilities: { [name: string]: string }\n    catalog1: TypesCatalogueDTO\n    catalog2: TypesCatalogueDTO\n    catalog3: TypesCatalogueDTO\n    classification: ModuleClassificationDTO\n    configurationTemplate: ConfigurationTemplateDTO\n    detailProperties: {}\n    input: { [name: string]: string }\n    output: { [name: string]: string }\n    mode: ModuleModeDTO\n    statistics: { [name: string]: StatisticItemDTO | string | number }\n    tags: []\n}\n\nexport class ModuleNetworkInterfaceDTO {\n    id: string | number\n    label: string\n    module: ModuleDTO\n    network: NetworkDTO\n    nodeName: string\n    type: string\n    uuid: string\n}\n\nexport class ConsumerInterfaceLinkDTO {\n    local_interface: string\n    module_instance: string\n    remote_interface: string\n}\n\nexport class ModuleInstancePropertiesDTO {\n    area: string\n    description: string\n    module: string\n    version: string | number\n    sequence: string | number\n    consumer_interfaces_link: ConsumerInterfaceLinkDTO[]\n}\n\nexport class AreaDTO {\n    id: string | number;\n    uuid: string;\n    name: string;\n    description: string;\n    theater: TheaterDTO;\n    deleted: boolean | string;\n}\n\nexport class SimpleAreaDTO {\n    area: string\n    description: string\n}\nexport class TheaterInstancePropertiesDTO {\n    mode: string\n    tags: TagTIP[]\n    areas: SimpleAreaDTO[]\n    author: string\n    version: string | number\n    description: string\n}\nexport class TagTIP{\n    tag: string\n}\nexport class ElementIntoTheaterDTO {  // goes into map in blueprint [name:string]: Module...\n    properties: ModuleInstancePropertiesDTO | TheaterInstancePropertiesDTO\n    type: string\n}\nexport class ModuleInstanceDTO {\n    properties: ModuleInstancePropertiesDTO\n    type: string\n}\nexport class TheaterInstanceDTO {\n    properties: TheaterInstancePropertiesDTO\n    type: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/ModuleInstanceSimpleData.html":{"url":"classes/ModuleInstanceSimpleData.html","title":"class - ModuleInstanceSimpleData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  ModuleInstanceSimpleData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsExport/theaterExport.ts\n        \n\n\n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                properties\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        properties\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         PropertiesMISD\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/theaterExport.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ModuleTypeExport\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/theaterExport.ts:35\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ModeTypeExport, ModuleTypeExport, TheaterTypeExport, ToscaDefinitionType } from \"./TypeExport\"\n\n/**\n * Classe utilizzata per l'export. \n * Contiene le informazioni generali per il teatro che devono esserci nello standard Tosca.\n */\nexport class TheaterExport {\n    tosca_definitions_version: ToscaDefinitionType\n    description: string\n    imports: string[]\n    node_templates: { [name: string]: TheaterSimpleData | ModuleInstanceSimpleData }\n}\n\nexport class TheaterSimpleData {\n    type: TheaterTypeExport\n    properties: PropertiesTSD\n}\nexport class PropertiesTSD {\n    version: string | number\n    description: string\n    mode: ModeTypeExport\n    author: string\n    tags: TagsExport[]\n    areas: AreaExport[]\n}\nexport class TagsExport {\n    tag: string\n}\nexport class AreaExport {\n    area: string\n    description: string\n}\n\nexport class ModuleInstanceSimpleData {\n    type: ModuleTypeExport\n    properties: PropertiesMISD\n}\nexport class PropertiesMISD{\n    module: string\n    version: string | number\n    area: string\n    sequence: number\n    sources?: SourceExport[]\n    consumer_interface_link: ConsumerInterfaceLinkExport[]\n}\nexport class SourceExport{\n    module_instance: string\n    host:string\n    interfaces: string[]\n}\nexport class ConsumerInterfaceLinkExport{\n    local_interface: string\n    module_interface:string\n    remote_interface:string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/ModuleListDTO.html":{"url":"classes/ModuleListDTO.html","title":"class - ModuleListDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  ModuleListDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsDTO/moduleDTO.ts\n        \n\n\n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                empty\n                            \n                            \n                                first\n                            \n                            \n                                last\n                            \n                            \n                                number\n                            \n                            \n                                numberOfElements\n                            \n                            \n                                pageable\n                            \n                            \n                                size\n                            \n                            \n                                sort\n                            \n                            \n                                totalElements\n                            \n                            \n                                totalPages\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     SimpleModuleDTO[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        empty\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        first\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        last\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        number\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        numberOfElements\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pageable\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         PageableDTO\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        size\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sort\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         SortDTO\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalElements\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalPages\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PageableDTO, SortDTO } from './elementDTO';\nimport { NetworkDTO } from './networkDTO';\nimport { TheaterDTO } from './theaterDTO';\n\n\nexport class ModuleListDTO {\n    content: SimpleModuleDTO[]\n    pageable: PageableDTO\n    last: boolean\n    totalPages: string | number\n    totalElements: string | number\n    size: string | number\n    number: string | number\n    sort: SortDTO\n    numberOfElements: string | number\n    first: boolean\n    empty: boolean\n}\n\n\nexport class TypesCatalogueDTO {\n    group: string\n    id: string | number\n    parentId: {}\n    value: string\n}\n\nexport class ModuleClassificationDTO {\n    blueprintType: string\n    category: string\n    expectedInstanceType: string\n    id: string | number\n    mcClass: string\n    type: string\n    uuid: string\n}\n\nexport class GenericParameterDTO {\n    type: string\n    default: string\n    description: string\n}\n\nexport class ConfigurationTemplateDTO {\n    anchor_parameters: { [name: string]: GenericParameterDTO | string }\n    instance_parameters: { [name: string]: GenericParameterDTO }\n    structural_parameters: { [name: string]: GenericParameterDTO }\n    fixed_parameters: { [name: string]: GenericParameterDTO }\n    control_parameters: { [name: string]: GenericParameterDTO }\n    infrastructure_parameters: { [name: string]: GenericParameterDTO }\n    module: string\n    description: string\n    category: string\n    version: string | number\n    platform: string\n}\n\nexport class ModuleModeDTO {\n    code: string\n    id: string | number\n    name: string\n}\n\nexport class ModuleStatusDTO {\n    descriptionCode: string\n    id: string | number\n    name: string\n}\nexport class StatisticItemDTO {\n    error: string | number\n    updated: string | number\n    inserted: string | number\n}\n\nexport class SimpleModuleDTO {\n    createdBy: string\n    createdDate: string\n    description: string\n    id: string | number\n    isLocked: boolean\n    lastModifiedBy: string\n    lastModifiedDate: string\n    lockAcquiredTimestamp: string\n    lockLastUserAcquiring: string\n    lockReleasedTimestamp: string\n    name: string\n    status: ModuleStatusDTO\n    type?: string | any\n    uuid: string\n    version: string | number\n}\nexport class ModuleDTO extends SimpleModuleDTO {\n    attachments: string[]\n    author: string\n    capabilities: { [name: string]: string }\n    catalog1: TypesCatalogueDTO\n    catalog2: TypesCatalogueDTO\n    catalog3: TypesCatalogueDTO\n    classification: ModuleClassificationDTO\n    configurationTemplate: ConfigurationTemplateDTO\n    detailProperties: {}\n    input: { [name: string]: string }\n    output: { [name: string]: string }\n    mode: ModuleModeDTO\n    statistics: { [name: string]: StatisticItemDTO | string | number }\n    tags: []\n}\n\nexport class ModuleNetworkInterfaceDTO {\n    id: string | number\n    label: string\n    module: ModuleDTO\n    network: NetworkDTO\n    nodeName: string\n    type: string\n    uuid: string\n}\n\nexport class ConsumerInterfaceLinkDTO {\n    local_interface: string\n    module_instance: string\n    remote_interface: string\n}\n\nexport class ModuleInstancePropertiesDTO {\n    area: string\n    description: string\n    module: string\n    version: string | number\n    sequence: string | number\n    consumer_interfaces_link: ConsumerInterfaceLinkDTO[]\n}\n\nexport class AreaDTO {\n    id: string | number;\n    uuid: string;\n    name: string;\n    description: string;\n    theater: TheaterDTO;\n    deleted: boolean | string;\n}\n\nexport class SimpleAreaDTO {\n    area: string\n    description: string\n}\nexport class TheaterInstancePropertiesDTO {\n    mode: string\n    tags: TagTIP[]\n    areas: SimpleAreaDTO[]\n    author: string\n    version: string | number\n    description: string\n}\nexport class TagTIP{\n    tag: string\n}\nexport class ElementIntoTheaterDTO {  // goes into map in blueprint [name:string]: Module...\n    properties: ModuleInstancePropertiesDTO | TheaterInstancePropertiesDTO\n    type: string\n}\nexport class ModuleInstanceDTO {\n    properties: ModuleInstancePropertiesDTO\n    type: string\n}\nexport class TheaterInstanceDTO {\n    properties: TheaterInstancePropertiesDTO\n    type: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/ModuleModeDTO.html":{"url":"classes/ModuleModeDTO.html","title":"class - ModuleModeDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  ModuleModeDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsDTO/moduleDTO.ts\n        \n\n\n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                code\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:61\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PageableDTO, SortDTO } from './elementDTO';\nimport { NetworkDTO } from './networkDTO';\nimport { TheaterDTO } from './theaterDTO';\n\n\nexport class ModuleListDTO {\n    content: SimpleModuleDTO[]\n    pageable: PageableDTO\n    last: boolean\n    totalPages: string | number\n    totalElements: string | number\n    size: string | number\n    number: string | number\n    sort: SortDTO\n    numberOfElements: string | number\n    first: boolean\n    empty: boolean\n}\n\n\nexport class TypesCatalogueDTO {\n    group: string\n    id: string | number\n    parentId: {}\n    value: string\n}\n\nexport class ModuleClassificationDTO {\n    blueprintType: string\n    category: string\n    expectedInstanceType: string\n    id: string | number\n    mcClass: string\n    type: string\n    uuid: string\n}\n\nexport class GenericParameterDTO {\n    type: string\n    default: string\n    description: string\n}\n\nexport class ConfigurationTemplateDTO {\n    anchor_parameters: { [name: string]: GenericParameterDTO | string }\n    instance_parameters: { [name: string]: GenericParameterDTO }\n    structural_parameters: { [name: string]: GenericParameterDTO }\n    fixed_parameters: { [name: string]: GenericParameterDTO }\n    control_parameters: { [name: string]: GenericParameterDTO }\n    infrastructure_parameters: { [name: string]: GenericParameterDTO }\n    module: string\n    description: string\n    category: string\n    version: string | number\n    platform: string\n}\n\nexport class ModuleModeDTO {\n    code: string\n    id: string | number\n    name: string\n}\n\nexport class ModuleStatusDTO {\n    descriptionCode: string\n    id: string | number\n    name: string\n}\nexport class StatisticItemDTO {\n    error: string | number\n    updated: string | number\n    inserted: string | number\n}\n\nexport class SimpleModuleDTO {\n    createdBy: string\n    createdDate: string\n    description: string\n    id: string | number\n    isLocked: boolean\n    lastModifiedBy: string\n    lastModifiedDate: string\n    lockAcquiredTimestamp: string\n    lockLastUserAcquiring: string\n    lockReleasedTimestamp: string\n    name: string\n    status: ModuleStatusDTO\n    type?: string | any\n    uuid: string\n    version: string | number\n}\nexport class ModuleDTO extends SimpleModuleDTO {\n    attachments: string[]\n    author: string\n    capabilities: { [name: string]: string }\n    catalog1: TypesCatalogueDTO\n    catalog2: TypesCatalogueDTO\n    catalog3: TypesCatalogueDTO\n    classification: ModuleClassificationDTO\n    configurationTemplate: ConfigurationTemplateDTO\n    detailProperties: {}\n    input: { [name: string]: string }\n    output: { [name: string]: string }\n    mode: ModuleModeDTO\n    statistics: { [name: string]: StatisticItemDTO | string | number }\n    tags: []\n}\n\nexport class ModuleNetworkInterfaceDTO {\n    id: string | number\n    label: string\n    module: ModuleDTO\n    network: NetworkDTO\n    nodeName: string\n    type: string\n    uuid: string\n}\n\nexport class ConsumerInterfaceLinkDTO {\n    local_interface: string\n    module_instance: string\n    remote_interface: string\n}\n\nexport class ModuleInstancePropertiesDTO {\n    area: string\n    description: string\n    module: string\n    version: string | number\n    sequence: string | number\n    consumer_interfaces_link: ConsumerInterfaceLinkDTO[]\n}\n\nexport class AreaDTO {\n    id: string | number;\n    uuid: string;\n    name: string;\n    description: string;\n    theater: TheaterDTO;\n    deleted: boolean | string;\n}\n\nexport class SimpleAreaDTO {\n    area: string\n    description: string\n}\nexport class TheaterInstancePropertiesDTO {\n    mode: string\n    tags: TagTIP[]\n    areas: SimpleAreaDTO[]\n    author: string\n    version: string | number\n    description: string\n}\nexport class TagTIP{\n    tag: string\n}\nexport class ElementIntoTheaterDTO {  // goes into map in blueprint [name:string]: Module...\n    properties: ModuleInstancePropertiesDTO | TheaterInstancePropertiesDTO\n    type: string\n}\nexport class ModuleInstanceDTO {\n    properties: ModuleInstancePropertiesDTO\n    type: string\n}\nexport class TheaterInstanceDTO {\n    properties: TheaterInstancePropertiesDTO\n    type: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/ModuleNetworkInterfaceDTO.html":{"url":"classes/ModuleNetworkInterfaceDTO.html","title":"class - ModuleNetworkInterfaceDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  ModuleNetworkInterfaceDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsDTO/moduleDTO.ts\n        \n\n\n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                label\n                            \n                            \n                                module\n                            \n                            \n                                network\n                            \n                            \n                                nodeName\n                            \n                            \n                                type\n                            \n                            \n                                uuid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:110\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        label\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:111\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ModuleDTO\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:112\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        network\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         NetworkDTO\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:113\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nodeName\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:114\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:115\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uuid\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:116\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PageableDTO, SortDTO } from './elementDTO';\nimport { NetworkDTO } from './networkDTO';\nimport { TheaterDTO } from './theaterDTO';\n\n\nexport class ModuleListDTO {\n    content: SimpleModuleDTO[]\n    pageable: PageableDTO\n    last: boolean\n    totalPages: string | number\n    totalElements: string | number\n    size: string | number\n    number: string | number\n    sort: SortDTO\n    numberOfElements: string | number\n    first: boolean\n    empty: boolean\n}\n\n\nexport class TypesCatalogueDTO {\n    group: string\n    id: string | number\n    parentId: {}\n    value: string\n}\n\nexport class ModuleClassificationDTO {\n    blueprintType: string\n    category: string\n    expectedInstanceType: string\n    id: string | number\n    mcClass: string\n    type: string\n    uuid: string\n}\n\nexport class GenericParameterDTO {\n    type: string\n    default: string\n    description: string\n}\n\nexport class ConfigurationTemplateDTO {\n    anchor_parameters: { [name: string]: GenericParameterDTO | string }\n    instance_parameters: { [name: string]: GenericParameterDTO }\n    structural_parameters: { [name: string]: GenericParameterDTO }\n    fixed_parameters: { [name: string]: GenericParameterDTO }\n    control_parameters: { [name: string]: GenericParameterDTO }\n    infrastructure_parameters: { [name: string]: GenericParameterDTO }\n    module: string\n    description: string\n    category: string\n    version: string | number\n    platform: string\n}\n\nexport class ModuleModeDTO {\n    code: string\n    id: string | number\n    name: string\n}\n\nexport class ModuleStatusDTO {\n    descriptionCode: string\n    id: string | number\n    name: string\n}\nexport class StatisticItemDTO {\n    error: string | number\n    updated: string | number\n    inserted: string | number\n}\n\nexport class SimpleModuleDTO {\n    createdBy: string\n    createdDate: string\n    description: string\n    id: string | number\n    isLocked: boolean\n    lastModifiedBy: string\n    lastModifiedDate: string\n    lockAcquiredTimestamp: string\n    lockLastUserAcquiring: string\n    lockReleasedTimestamp: string\n    name: string\n    status: ModuleStatusDTO\n    type?: string | any\n    uuid: string\n    version: string | number\n}\nexport class ModuleDTO extends SimpleModuleDTO {\n    attachments: string[]\n    author: string\n    capabilities: { [name: string]: string }\n    catalog1: TypesCatalogueDTO\n    catalog2: TypesCatalogueDTO\n    catalog3: TypesCatalogueDTO\n    classification: ModuleClassificationDTO\n    configurationTemplate: ConfigurationTemplateDTO\n    detailProperties: {}\n    input: { [name: string]: string }\n    output: { [name: string]: string }\n    mode: ModuleModeDTO\n    statistics: { [name: string]: StatisticItemDTO | string | number }\n    tags: []\n}\n\nexport class ModuleNetworkInterfaceDTO {\n    id: string | number\n    label: string\n    module: ModuleDTO\n    network: NetworkDTO\n    nodeName: string\n    type: string\n    uuid: string\n}\n\nexport class ConsumerInterfaceLinkDTO {\n    local_interface: string\n    module_instance: string\n    remote_interface: string\n}\n\nexport class ModuleInstancePropertiesDTO {\n    area: string\n    description: string\n    module: string\n    version: string | number\n    sequence: string | number\n    consumer_interfaces_link: ConsumerInterfaceLinkDTO[]\n}\n\nexport class AreaDTO {\n    id: string | number;\n    uuid: string;\n    name: string;\n    description: string;\n    theater: TheaterDTO;\n    deleted: boolean | string;\n}\n\nexport class SimpleAreaDTO {\n    area: string\n    description: string\n}\nexport class TheaterInstancePropertiesDTO {\n    mode: string\n    tags: TagTIP[]\n    areas: SimpleAreaDTO[]\n    author: string\n    version: string | number\n    description: string\n}\nexport class TagTIP{\n    tag: string\n}\nexport class ElementIntoTheaterDTO {  // goes into map in blueprint [name:string]: Module...\n    properties: ModuleInstancePropertiesDTO | TheaterInstancePropertiesDTO\n    type: string\n}\nexport class ModuleInstanceDTO {\n    properties: ModuleInstancePropertiesDTO\n    type: string\n}\nexport class TheaterInstanceDTO {\n    properties: TheaterInstancePropertiesDTO\n    type: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"injectables/ModuleService.html":{"url":"injectables/ModuleService.html","title":"injectable - ModuleService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ModuleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/api/module.service.ts\n        \n\n\n\n\n\n            \n    Indice\n    \n        \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getAllModules\n                            \n                            \n                                    Async\n                                getAllModulesPage\n                            \n                            \n                                    Async\n                                getModuleByID\n                            \n                            \n                                    Async\n                                getModuleHostByTheaterUUID\n                            \n                            \n                                    Async\n                                getModuleInterfacesByModuleID\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Costruttore\n        \n            \n                \n                    \nconstructor(http: HttpClient, tokenService: TokenService)\n                    \n                \n                        \n                            \n                                Definito in src/app/services/api/module.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parametri :\n                                    \n                                        \n                                            \n                                                Nome\n                                                    Tipo\n                                                Opzionale\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tokenService\n                                                  \n                                                        \n                                                                        TokenService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllModules\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllModules()\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/api/module.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllModulesPage\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllModulesPage(pageindex: number)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/api/module.service.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    pageindex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getModuleByID\n                        \n                    \n                \n            \n            \n                \n                    \n                    getModuleByID(id: string | number)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/api/module.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            string | number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getModuleHostByTheaterUUID\n                        \n                    \n                \n            \n            \n                \n                    \n                    getModuleHostByTheaterUUID(theater_uuid: number | string)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/api/module.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    theater_uuid\n                                    \n                                            number | string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getModuleInterfacesByModuleID\n                        \n                    \n                \n            \n            \n                \n                    \n                    getModuleInterfacesByModuleID(module_id: number | string)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/api/module.service.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    module_id\n                                    \n                                            number | string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { HostModuleDTO } from '../modelsDTO/hostDTO';\nimport { ModuleDTO, ModuleListDTO, ModuleNetworkInterfaceDTO, SimpleModuleDTO } from '../modelsDTO/moduleDTO';\nimport { TokenService } from '../token/token.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ModuleService {\n\n  constructor(private http: HttpClient, private tokenService: TokenService) { }\n\n  async getModuleByID(id: string | number): Promise {\n\n    let link: string = environment.getAllModules + \"/\" + id;\n\n    const promise = await new Promise((resolve, reject) => {\n      this.http.get\n        (\n          link,\n          this.tokenService.getHttpgetOption()\n        )\n        .toPromise()\n        .then(\n          (res: ModuleDTO) => {\n            resolve(res);\n          }\n        )\n        .catch(\n          error => {\n            reject(error);\n          }\n        );\n    }\n    );\n    return promise;\n  }\n\n  async getAllModules(): Promise {\n    let x: SimpleModuleDTO[] = [];\n    let currentpage = 0, endpage = 1; // at least 1 page \n    while (currentpage  {\n\n    let link: string = environment.getModulesHostsByTheaterUUID + (theater_uuid as unknown as string) + environment.GMHhost;\n\n    const promise = await new Promise((resolve, reject) => {\n      this.http.get\n        (\n          link,\n          this.tokenService.getHttpgetOption()\n        )\n        .toPromise()\n        .then(\n          (res: HostModuleDTO[]) => {\n            resolve(res);\n          }\n        )\n        .catch(\n          error => {\n            reject(error);\n          }\n        );\n    }\n    );\n    return promise;\n  }\n\n  async getModuleInterfacesByModuleID(module_id: number | string): Promise {\n\n    let link: string = environment.getModuleInterfacesByModuleID + (module_id as unknown as string);\n\n    const promise = await new Promise((resolve, reject) => {\n      this.http.get\n        (\n          link,\n          this.tokenService.getHttpgetOption()\n        )\n        .toPromise()\n        .then(\n          (res: ModuleNetworkInterfaceDTO[]) => {\n            resolve(res);\n          }\n        )\n        .catch(\n          error => {\n            reject(error);\n          }\n        );\n    }\n    );\n    return promise;\n  }\n\n  async getAllModulesPage(pageindex: number): Promise {\n\n    let link: string = environment.getAllModules + '?page=' + (pageindex ? pageindex : 0);\n\n    const promise = await new Promise((resolve, reject) => {\n      this.http.get\n        (\n          link,\n          this.tokenService.getHttpgetOption()\n        )\n        .toPromise()\n        .then(\n          (res: ModuleListDTO) => {\n            resolve(res);\n          }\n        )\n        .catch(\n          error => {\n            reject(error);\n          }\n        );\n    }\n    );\n    return promise;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/ModuleSimpleData.html":{"url":"classes/ModuleSimpleData.html","title":"class - ModuleSimpleData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  ModuleSimpleData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsExport/moduleExport.ts\n        \n\n\n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                properties\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        properties\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         PropertiesMSD\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ModuleTypeExport\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ModeTypeExport, ModuleTypeExport, NetworkTypeExport, NodeTypeExport, PortTypeExport, RelationshipsTypeExport, SubnetTypeExport, ToscaDefinitionType } from \"./TypeExport\"\n\n\n/**\n * Classe utilizzata per l'export. \n * Contiene le informazioni generali per il modulo che devono esserci nello standard Tosca.\n */\nexport class ModuleExport {\n    tosca_definitions_version: ToscaDefinitionType\n    description: string\n    imports: string[]\n    node_templates: { [name: string]: ModuleSimpleData | NodeSimpleData | PortSimpleData | NetworkSimpleData | SubnetSimpleData }\n    dsl_definition: any | null; //future\n    capabilites: any | null //future\n    outputs: any | null //future\n}\n\n\nexport class ModuleSimpleData {\n    type: ModuleTypeExport\n    properties: PropertiesMSD\n}\nexport class PropertiesMSD {\n    mode: ModeTypeExport\n    description: string\n    version: string | number\n    constraints: ConstraintsMSD\n    interface_networks: {\n        providers: InterfaceNetworksProvider[]\n        consumers: InterfaceNetworksConsumer[]\n    }\n    virtual_machines: VirtualMachine[]\n}\nexport class ConstraintsMSD {\n    interface_constraints: InterfaceConstraints[]\n    module_constraints: ModuleConstraints[]\n    network_constraints: NetworkConstraints[]\n}\nexport class InterfaceConstraints {\n    local_interface: string\n    multiple_mode: boolean = false //future\n    module_name: string\n    compatibility: string = \"1.0\" // future\n    remote_interface: string\n}\nexport class ModuleConstraints {\n}\nexport class NetworkConstraints {\n}\n\nexport class InterfaceNetworksProvider {\n    interface: string\n    network: string\n    tag: string\n    subnets: SubnetExport[]\n}\nexport class InterfaceNetworksConsumer {\n    interface: string\n    network: string\n    tag: string\n    subnets: SubnetExport[]\n}\n\nexport class VirtualMachine {\n    virtual_machine: string\n    ports: VirtualMachinePorts[]\n}\nexport class VirtualMachinePorts {\n    port: string\n    network: string\n    subnets: SubnetExport[]\n}\n\nexport class SubnetExport {\n    subnet: string;\n}\n\nexport class NodeSimpleData {\n    type: NodeTypeExport\n    properties: any | null // future\n    interfaces: any | null // future\n    relationships: RelationshipsExport[]\n}\n\nexport class RelationshipsExport {\n    type: RelationshipsTypeExport\n    target: string\n}\n\nexport class PortSimpleData {\n    type: PortTypeExport\n    relationships: RelationshipsExport[]\n}\n\nexport class NetworkSimpleData {\n    type: NetworkTypeExport\n    properties: PropertiesNSD\n}\nexport class PropertiesNSD {\n    openstack_config?: any | null // future\n    use_external_resource?: boolean | null // future\n    resource_id?: any | null // future\n}\n\n\nexport class SubnetSimpleData {\n    type: SubnetTypeExport\n    relationships: RelationshipsExport[]\n    properties: PropertiesSSD\n}\nexport class PropertiesSSD {\n    subnet?: {\n        ip_version: string | number\n        cidr: string\n        enable_dhcp: boolean\n        gateway_ip?: any | null // future\n    }\n    openstack_config?: any | null // future\n    use_external_resource?: boolean | null // future\n    resource_id?: any | null // future\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/ModuleStatusDTO.html":{"url":"classes/ModuleStatusDTO.html","title":"class - ModuleStatusDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  ModuleStatusDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsDTO/moduleDTO.ts\n        \n\n\n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                descriptionCode\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        descriptionCode\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:67\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PageableDTO, SortDTO } from './elementDTO';\nimport { NetworkDTO } from './networkDTO';\nimport { TheaterDTO } from './theaterDTO';\n\n\nexport class ModuleListDTO {\n    content: SimpleModuleDTO[]\n    pageable: PageableDTO\n    last: boolean\n    totalPages: string | number\n    totalElements: string | number\n    size: string | number\n    number: string | number\n    sort: SortDTO\n    numberOfElements: string | number\n    first: boolean\n    empty: boolean\n}\n\n\nexport class TypesCatalogueDTO {\n    group: string\n    id: string | number\n    parentId: {}\n    value: string\n}\n\nexport class ModuleClassificationDTO {\n    blueprintType: string\n    category: string\n    expectedInstanceType: string\n    id: string | number\n    mcClass: string\n    type: string\n    uuid: string\n}\n\nexport class GenericParameterDTO {\n    type: string\n    default: string\n    description: string\n}\n\nexport class ConfigurationTemplateDTO {\n    anchor_parameters: { [name: string]: GenericParameterDTO | string }\n    instance_parameters: { [name: string]: GenericParameterDTO }\n    structural_parameters: { [name: string]: GenericParameterDTO }\n    fixed_parameters: { [name: string]: GenericParameterDTO }\n    control_parameters: { [name: string]: GenericParameterDTO }\n    infrastructure_parameters: { [name: string]: GenericParameterDTO }\n    module: string\n    description: string\n    category: string\n    version: string | number\n    platform: string\n}\n\nexport class ModuleModeDTO {\n    code: string\n    id: string | number\n    name: string\n}\n\nexport class ModuleStatusDTO {\n    descriptionCode: string\n    id: string | number\n    name: string\n}\nexport class StatisticItemDTO {\n    error: string | number\n    updated: string | number\n    inserted: string | number\n}\n\nexport class SimpleModuleDTO {\n    createdBy: string\n    createdDate: string\n    description: string\n    id: string | number\n    isLocked: boolean\n    lastModifiedBy: string\n    lastModifiedDate: string\n    lockAcquiredTimestamp: string\n    lockLastUserAcquiring: string\n    lockReleasedTimestamp: string\n    name: string\n    status: ModuleStatusDTO\n    type?: string | any\n    uuid: string\n    version: string | number\n}\nexport class ModuleDTO extends SimpleModuleDTO {\n    attachments: string[]\n    author: string\n    capabilities: { [name: string]: string }\n    catalog1: TypesCatalogueDTO\n    catalog2: TypesCatalogueDTO\n    catalog3: TypesCatalogueDTO\n    classification: ModuleClassificationDTO\n    configurationTemplate: ConfigurationTemplateDTO\n    detailProperties: {}\n    input: { [name: string]: string }\n    output: { [name: string]: string }\n    mode: ModuleModeDTO\n    statistics: { [name: string]: StatisticItemDTO | string | number }\n    tags: []\n}\n\nexport class ModuleNetworkInterfaceDTO {\n    id: string | number\n    label: string\n    module: ModuleDTO\n    network: NetworkDTO\n    nodeName: string\n    type: string\n    uuid: string\n}\n\nexport class ConsumerInterfaceLinkDTO {\n    local_interface: string\n    module_instance: string\n    remote_interface: string\n}\n\nexport class ModuleInstancePropertiesDTO {\n    area: string\n    description: string\n    module: string\n    version: string | number\n    sequence: string | number\n    consumer_interfaces_link: ConsumerInterfaceLinkDTO[]\n}\n\nexport class AreaDTO {\n    id: string | number;\n    uuid: string;\n    name: string;\n    description: string;\n    theater: TheaterDTO;\n    deleted: boolean | string;\n}\n\nexport class SimpleAreaDTO {\n    area: string\n    description: string\n}\nexport class TheaterInstancePropertiesDTO {\n    mode: string\n    tags: TagTIP[]\n    areas: SimpleAreaDTO[]\n    author: string\n    version: string | number\n    description: string\n}\nexport class TagTIP{\n    tag: string\n}\nexport class ElementIntoTheaterDTO {  // goes into map in blueprint [name:string]: Module...\n    properties: ModuleInstancePropertiesDTO | TheaterInstancePropertiesDTO\n    type: string\n}\nexport class ModuleInstanceDTO {\n    properties: ModuleInstancePropertiesDTO\n    type: string\n}\nexport class TheaterInstanceDTO {\n    properties: TheaterInstancePropertiesDTO\n    type: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"interfaces/ModuleTopology.html":{"url":"interfaces/ModuleTopology.html","title":"interface - ModuleTopology","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfacce\n  \n  ModuleTopology\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsApplication/applicationModels.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        TopologyList\n            \n\n        \n            Indice\n            \n                \n                    \n                        \n                            Proprietà\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            rete\n                                        \n                                \n                                \n                                        \n                                            topology\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Proprietà\n                    \n                        \n                                \n                                    \n                                        \n                                        rete\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rete:     ReteMirroringModuleInstanceInfo | ReteTheaterInternalServiceModuleInstanceInfo | ReteTheaterModuleInstanceInfo\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :     ReteMirroringModuleInstanceInfo | ReteTheaterInternalServiceModuleInstanceInfo | ReteTheaterModuleInstanceInfo\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        topology\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        topology:         NodeTopologyElement\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         NodeTopologyElement\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ReteHostInfo } from \"src/app/rete-settings/nodes/rete-nodes/host/hostNode\";\nimport { ReteNetworkInfo } from \"src/app/rete-settings/nodes/rete-nodes/network/networkNode\";\nimport { ReteSubnetInfo } from \"src/app/rete-settings/nodes/rete-nodes/subnet/subnetNode\";\nimport { ReteMirroringModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/mirroringModuleInstance/mirroringModuleInstanceNode\";\nimport { ReteTheaterInternalServiceModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/theaterInternalServiceModuleInstance/theaterInternalServiceModuleInstanceNode\";\nimport { ReteTheaterModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/theaterModuleInstance/theaterModuleInstanceNode\";\nimport { FlavorBasicInfo } from \"../modelsDTO/falvorDTO\";\nimport { HostModuleDTO } from \"../modelsDTO/hostDTO\";\nimport { ModuleNetworkInterfaceDTO, ModuleInstancePropertiesDTO, SimpleModuleDTO, TheaterInstancePropertiesDTO, ModuleInstanceDTO, ModuleDTO, SimpleAreaDTO, AreaDTO } from \"../modelsDTO/moduleDTO\";\nimport { TheaterDTO } from \"../modelsDTO/theaterDTO\";\n\n\nexport interface CommonModule {\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n}\n\n\n/**\n * Classe contenente gli attributi utilizzati per le operazioni che coinvolgono i moduli.\n * ps. Questa struttura è prettamente utilizzata nella chiamata relativa al singolo modulo.\n */\nexport class ModuleApplication extends ModuleDTO implements CommonModule {\n    imports: string[] // perchè nell'export yaml è previsto\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n}\n// PER IMPLEMENTAZIONI FUTURE, PER COERENZA, PRENDERE DIRETTAMENTE I SINGOLI NODI DALLA CHIAMATA ESCLUSIVA E NON DA QUELLA CHE RESTITUISCE TUTTI I TEATRI\n/**\n * Classe contenente gli attributi utilizzati per le operazioni che coinvolgono i moduli.\n * ps. Questa struttura è prettamente utilizzata nella chiamata che prende tutti i moduli del teatro.\n */\nexport class SimpleModuleApplication extends SimpleModuleDTO implements CommonModule {\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n}\n\n\nexport class ReteConnection {\n    from: string;\n    port_src: string;\n    to: string;\n    port_dst: string;\n}\n\nexport interface TopologyList {\n    rete: any;\n    topology?: TopologyElement\n}\nexport class TopologyElement {\n    elements: { [name: string]: any };\n    connection: ReteConnection[]\n}\n\n// apptype module topology\n\nexport class NodeTopologyElement implements TopologyElement {\n    elements: { [hostName: string]: ReteHostInfo | ReteSubnetInfo | ReteNetworkInfo };\n    connection: ReteConnection[]\n}\n\nexport interface ModuleTopology extends TopologyList {\n    rete: ReteMirroringModuleInstanceInfo | ReteTheaterInternalServiceModuleInstanceInfo | ReteTheaterModuleInstanceInfo\n    topology: NodeTopologyElement;\n}\n\nexport class ModuleInstance extends ModuleInstanceDTO implements ModuleTopology {\n    // moduleTopology data\n    rete: ReteTheaterModuleInstanceInfo | ReteTheaterInternalServiceModuleInstanceInfo | ReteMirroringModuleInstanceInfo;\n    topology: NodeTopologyElement;\n    // other data\n    moduleInfo: SimpleModuleApplication\n}\n\n// apptype theater theater\n\nexport interface TheaterTopology extends TopologyElement {\n    elements: { [hostName: string]: ModuleInstance };\n    connection: ReteConnection[];\n}\n\nexport class TheaterApplication extends TheaterDTO implements TheaterTopology {\n    // theaterTopology data\n    elements: { [hostName: string]: ModuleInstance; };\n    connection: ReteConnection[];\n    // other data\n    properties: TheaterInstancePropertiesDTO;\n    topology: TheaterTopology;\n}\n\nexport class AreaApplication extends AreaDTO {\n    color?: string;\n}\nexport class AreaColorDTO extends SimpleAreaDTO {\n    color: string;\n}\n\n\nexport class FlavorApplication extends FlavorBasicInfo {\n    flavorName: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/NameMappingDTO.html":{"url":"classes/NameMappingDTO.html","title":"class - NameMappingDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  NameMappingDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsDTO/theaterDTO.ts\n        \n\n\n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                display_name\n                            \n                            \n                                module_instance_name\n                            \n                            \n                                module_name\n                            \n                            \n                                node_template_name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        display_name\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/theaterDTO.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        module_instance_name\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/theaterDTO.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        module_name\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/theaterDTO.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        node_template_name\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/theaterDTO.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ElementIntoTheaterDTO, ModuleInstanceDTO, TheaterInstanceDTO } from \"./moduleDTO\"\n\nexport class TagCatalogueDTO {\n    description: string\n    id: string | number\n    name: string\n}\n\nexport class TheatreStatusDTO {\n    code: string\n    id: string | number\n    name: string\n}\n\nexport class DeployInstanceDTO {\n    moduleInstanceConfigurationUUID?: string\n    moduleInstanceName: string\n    moduleInstanceUUID: string\n    moduleUUID: string\n}\n\nexport class BlueprintFileDTO {\n    description: string\n    imports: string[]\n    node_templates: {[name:string]:ModuleInstanceDTO|TheaterInstanceDTO}\n    tosca_definitions_version: string\n}\n\nexport class NameMappingDTO {\n    display_name: string\n    module_instance_name: string\n    module_name: string\n    node_template_name: string\n}\nexport class EntityNameMappingFileDTO {\n    name_mapping: NameMappingDTO[]\n}\nexport class TheaterDTO {\n    author: string\n    blueprintFile: BlueprintFileDTO\n    blueprintUUID: string | number\n    createdBy: string\n    createdDate: string\n    deploymentSequence: {[index:string]:DeployInstanceDTO} //tosee\n    description: string\n    entityNameMappingFile: EntityNameMappingFileDTO\n    id: string | number\n    isLocked: boolean\n    lastModifiedBy: string\n    lastModifiedDate: string\n    lockAcquiredTimestamp: string\n    lockLastUserAcquiring: string\n    lockReleasedTimestamp: string\n    name: string\n    status: TheatreStatusDTO\n    tags: TagCatalogueDTO[]\n    uuid: string\n    version: string\n}\n\nexport const TheaterType: string = \"sysman.creo.nodes.Theater\";\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"components/NavbarComponent.html":{"url":"components/NavbarComponent.html","title":"component - NavbarComponent","body":"\n                   \n\n\n\n\n\n  Componenti\n  \n  NavbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/navbar/navbar.component.ts\n\n\n\n    \n        Descrizione\n    \n    \n        Componente che genera una navbar a contenuto variabile.\n\n    \n\n\n    \n        Implementa\n    \n    \n                    AfterViewInit\n    \n\n\n\n    Metadati\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navbar\n            \n\n            \n                styleUrls\n                ./navbar.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./navbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Indice\n    \n        \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                select_item\n                            \n                        \n                    \n                \n\n                \n                    \n                        Input\n                    \n                \n                \n                    \n                        \n                            \n                                element\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Output\n                    \n                \n                \n                    \n                        \n                            \n                                itemSelected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Costruttore\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Definito in src/app/components/navbar/navbar.component.ts:27\n                            \n                        \n\n                \n                    \n                            Costruttore componente NavbarComonent\n\n                    \n                \n            \n        \n\n\n    \n    Input\n        \n            \n                \n                    \n                        \n                        element\n                    \n                \n                \n                    \n                        Tipo :         NavbarElement\n\n                    \n                \n                        \n                            \n                                    Definito in src/app/components/navbar/navbar.component.ts:19\n                            \n                        \n                \n                    \n                        Variabile passata in input che fornisce le caratterisiche della navbar\nSee {NavbarElement}\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                    Definito in src/app/components/navbar/navbar.component.ts:23\n                            \n                        \n                \n                    \n                        Variabile passata in input che rappresenta il titolo della nav\n\n                    \n                \n            \n        \n\n    \n    Output\n        \n            \n                \n                    \n                        \n                        itemSelected\n                    \n                \n                \n                    \n                        Tipo :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Definito in src/app/components/navbar/navbar.component.ts:27\n                            \n                        \n                \n                    \n                        Variabile di output che ritorna l'evento del click di un elemento selezionato.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Definito in src/app/components/navbar/navbar.component.ts:39\n                \n            \n\n\n            \n                \n                    Funzione richiamata non appena la navbar è visibile.\nHa lo scopo di valorizzare gli attrubuti dei singoli elementi passati in input.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        select_item\n                        \n                    \n                \n            \n            \n                \nselect_item(val: NavbarElement)\n                \n            \n\n\n            \n                \n                    Definito in src/app/components/navbar/navbar.component.ts:57\n                \n            \n\n\n            \n                \n                    Funzione che emette il valore di click su elemento appena è stato selezionato.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                NavbarElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { AfterViewInit, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { NavbarElement } from './navbarType';\n\n\n/**\n * Componente che genera una navbar a contenuto variabile.\n */\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.sass']\n})\nexport class NavbarComponent implements AfterViewInit {\n\n  /**\n   * Variabile passata in input che fornisce le caratterisiche della navbar\n   * @see {NavbarElement}\n   */\n  @Input() element: NavbarElement;\n  /**\n   * Variabile passata in input che rappresenta il titolo della nav\n   */\n  @Input() title: string;\n  /**\n   * Variabile di output che ritorna l'evento del click di un elemento selezionato.\n   */\n  @Output() itemSelected = new EventEmitter();\n\n  /**\n   * Costruttore componente NavbarComonent\n   */\n  constructor() {\n  }\n\n  /**\n   * Funzione richiamata non appena la navbar è visibile.\n   * Ha lo scopo di valorizzare gli attrubuti dei singoli elementi passati in input.\n   */\n  ngAfterViewInit(): void {\n    this.element.element.forEach(\n      (el) => {\n        let a_element: HTMLElement = document.getElementById(el.id);\n        if (el.a_option)\n          el.a_option.forEach(\n            (opt) => {\n              a_element.setAttribute(opt.attr_key, opt.attr_val);\n            }\n          );\n      }\n    )\n  }\n\n  /**\n   * Funzione che emette il valore di click su elemento appena è stato selezionato.\n   * @param val \n   */\n  select_item(val: NavbarElement) {\n    this.itemSelected.emit(val);\n  }\n\n}\n\n    \n\n    \n        \n    \n\n        \n        \n             {{title}} {{'-'+' '+element.type}} \n            \n            \n        \n\n        \n        \n            \n        \n\n        \n            \n                \n                    \n                        {{item.text}}\n                    \n                    \n                    \n                \n            \n        \n\n    \n\n    \n\n    \n                \n                    ./navbar.component.sass\n                \n                \n    \n\n    \n        \n        \n            \n                Legenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento html con direttive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                 {{title}} {{\\'-\\'+\\' \\'+element.type}}                                                                                                                                                     {{item.text}}                                                                                                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ComposerComponent', 'selector': 'app-composer'},{'name': 'ControlTemplate', 'selector': ''},{'name': 'DataInputComponent', 'selector': 'app-data-input'},{'name': 'DataInputV2Component', 'selector': 'app-data-input-v2'},{'name': 'DataItemComponent', 'selector': 'app-window-item'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HostComponent', 'selector': ''},{'name': 'HowToUseComponent', 'selector': 'app-how-to-use'},{'name': 'MirroringModuleInstanceComponent', 'selector': ''},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavbarElementComponent', 'selector': 'app-navbar-element'},{'name': 'NetworkComponent', 'selector': ''},{'name': 'OffcanvasComponent', 'selector': 'app-offcanvas'},{'name': 'ReteModuleComposerComponent', 'selector': 'app-rete-module-composer'},{'name': 'ReteModuleVisualizerComponent', 'selector': 'app-rete-module-visualizer'},{'name': 'ReteTheaterComposerComponent', 'selector': 'app-rete-theater-composer'},{'name': 'ReteTheaterVisualizerComponent', 'selector': 'app-rete-theater-visualizer'},{'name': 'SubnetComponent', 'selector': ''},{'name': 'TabnavComponent', 'selector': 'app-tabnav'},{'name': 'TheaterInternalServiceModuleInstanceComponent', 'selector': ''},{'name': 'TheaterModuleInstanceComponent', 'selector': ''},{'name': 'UnderbarComponent', 'selector': 'app-underbar'},{'name': 'VisualizerComponent', 'selector': 'app-displayer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/NavbarElement.html":{"url":"classes/NavbarElement.html","title":"class - NavbarElement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  NavbarElement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/navbar/navbarType.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Elemento passato come parametro alla componente NavbarComponent\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                element\n                            \n                            \n                                    Opzionale\n                                logo_img\n                            \n                            \n                                    Opzionale\n                                template_title\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        element\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         NavbarItem[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/navbar/navbarType.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        logo_img\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         any\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/navbar/navbarType.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        template_title\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     TemplateRef\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/navbar/navbarType.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     \"module\" | \"theater\"\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/navbar/navbarType.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { TemplateRef } from \"@angular/core\";\n\n/**\n * Elemento passato come parametro alla componente NavbarComponent\n */\nexport class NavbarElement {\n    template_title?: TemplateRef;\n    type: \"module\" | \"theater\";\n    logo_img?: any;\n    element: NavbarItem[];\n}\n\n/**\n * Oggetto che rappresenta un singolo elemento della Navbar\n */\nexport class NavbarItem{\n    id: string;\n    text: string;\n    a_option?: Aoption[];\n    template?: TemplateRef;\n}\n\n/**\n * Rappresenta le opzioni per il tag \n */\nexport class Aoption {\n    attr_key: string;\n    attr_val: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"components/NavbarElementComponent.html":{"url":"components/NavbarElementComponent.html","title":"component - NavbarElementComponent","body":"\n                   \n\n\n\n\n\n  Componenti\n  \n  NavbarElementComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/elements/navbar-element/navbar-element.component.ts\n\n\n\n    \n        Descrizione\n    \n    \n        Componente che ha come scopo mostrare una navbar per le schermate della landing.\n\n    \n\n\n\n\n\n    Metadati\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navbar-element\n            \n\n            \n                styleUrls\n                ./navbar-element.component.css\n            \n\n\n\n            \n                templateUrl\n                ./navbar-element.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Costruttore\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Definito in src/app/pages/elements/navbar-element/navbar-element.component.ts:11\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * Componente che ha come scopo mostrare una navbar per le schermate della landing.\n */\n@Component({\n  selector: 'app-navbar-element',\n  templateUrl: './navbar-element.component.html',\n  styleUrls: ['./navbar-element.component.css']\n})\nexport class NavbarElementComponent {\n  constructor() { }\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n      \n        &nbsp;Infra\n        Create\n      \n    \n\n    Navbar -->\n\n    \n    \n      \n    \n\n    \n      \n        \n          Home\n        \n        \n          Documentation\n        \n        \n          How to use\n        \n      \n    \n\n  \n\n    \n\n    \n                \n                    ./navbar-element.component.css\n                \n                .bg-custom {\n    background-color: rgb(41 39 39 / 50%);\n}\n\n\n\n.rotate-scale-down {\n    transition: rotate-scale-down 0.2s\n}\n.rotate-scale-down:hover{\n    -webkit-animation: rotate-scale-down 0.6s linear both;\n    animation: rotate-scale-down 0.6s linear both;\n}\n\n@-webkit-keyframes rotate-scale-down {\n    0% {\n        -webkit-transform: scale(1) rotateZ(0);\n        transform: scale(1) rotateZ(0);\n    }\n\n    50% {\n        -webkit-transform: scale(0.5) rotateZ(180deg);\n        transform: scale(0.5) rotateZ(180deg);\n    }\n\n    100% {\n        -webkit-transform: scale(1) rotateZ(360deg);\n        transform: scale(1) rotateZ(360deg);\n    }\n}\n\n@keyframes rotate-scale-down {\n    0% {\n        -webkit-transform: scale(1) rotateZ(0);\n        transform: scale(1) rotateZ(0);\n    }\n\n    50% {\n        -webkit-transform: scale(0.5) rotateZ(180deg);\n        transform: scale(0.5) rotateZ(180deg);\n    }\n\n    100% {\n        -webkit-transform: scale(1) rotateZ(360deg);\n        transform: scale(1) rotateZ(360deg);\n    }\n}\n    \n\n    \n        \n        \n            \n                Legenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento html con direttive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                               Infra        Create              Navbar -->                                              Home                          Documentation                          How to use                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ComposerComponent', 'selector': 'app-composer'},{'name': 'ControlTemplate', 'selector': ''},{'name': 'DataInputComponent', 'selector': 'app-data-input'},{'name': 'DataInputV2Component', 'selector': 'app-data-input-v2'},{'name': 'DataItemComponent', 'selector': 'app-window-item'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HostComponent', 'selector': ''},{'name': 'HowToUseComponent', 'selector': 'app-how-to-use'},{'name': 'MirroringModuleInstanceComponent', 'selector': ''},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavbarElementComponent', 'selector': 'app-navbar-element'},{'name': 'NetworkComponent', 'selector': ''},{'name': 'OffcanvasComponent', 'selector': 'app-offcanvas'},{'name': 'ReteModuleComposerComponent', 'selector': 'app-rete-module-composer'},{'name': 'ReteModuleVisualizerComponent', 'selector': 'app-rete-module-visualizer'},{'name': 'ReteTheaterComposerComponent', 'selector': 'app-rete-theater-composer'},{'name': 'ReteTheaterVisualizerComponent', 'selector': 'app-rete-theater-visualizer'},{'name': 'SubnetComponent', 'selector': ''},{'name': 'TabnavComponent', 'selector': 'app-tabnav'},{'name': 'TheaterInternalServiceModuleInstanceComponent', 'selector': ''},{'name': 'TheaterModuleInstanceComponent', 'selector': ''},{'name': 'UnderbarComponent', 'selector': 'app-underbar'},{'name': 'VisualizerComponent', 'selector': 'app-displayer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavbarElementComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/NavbarItem.html":{"url":"classes/NavbarItem.html","title":"class - NavbarItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  NavbarItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/navbar/navbarType.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Oggetto che rappresenta un singolo elemento della Navbar\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                    Opzionale\n                                a_option\n                            \n                            \n                                id\n                            \n                            \n                                    Opzionale\n                                template\n                            \n                            \n                                text\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        a_option\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         Aoption[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/navbar/navbarType.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/navbar/navbarType.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        template\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     TemplateRef\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/navbar/navbarType.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        text\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/navbar/navbarType.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { TemplateRef } from \"@angular/core\";\n\n/**\n * Elemento passato come parametro alla componente NavbarComponent\n */\nexport class NavbarElement {\n    template_title?: TemplateRef;\n    type: \"module\" | \"theater\";\n    logo_img?: any;\n    element: NavbarItem[];\n}\n\n/**\n * Oggetto che rappresenta un singolo elemento della Navbar\n */\nexport class NavbarItem{\n    id: string;\n    text: string;\n    a_option?: Aoption[];\n    template?: TemplateRef;\n}\n\n/**\n * Rappresenta le opzioni per il tag \n */\nexport class Aoption {\n    attr_key: string;\n    attr_val: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/NetOSRouterDTO.html":{"url":"classes/NetOSRouterDTO.html","title":"class - NetOSRouterDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  NetOSRouterDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsDTO/networkDTO.ts\n        \n\n\n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                borderNetwork\n                            \n                            \n                                id\n                            \n                            \n                                subnet\n                            \n                            \n                                uuid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        borderNetwork\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         BorderNetworkDTO\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/networkDTO.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/networkDTO.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subnet\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     literal type | null\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/networkDTO.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uuid\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/networkDTO.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class NetworkDTO {\n    id: string | number\n    name: string\n    uuid: string\n}\n\nexport class BorderNetworkDTO {\n    bnName: string\n    id: string | number\n    subnet: {} | null\n    uuid: string | number\n}\n\nexport class NetOSRouterDTO {\n    borderNetwork: BorderNetworkDTO\n    id: string | number\n    subnet: {} | null\n    uuid: string | number\n}\n\nexport class SubnetDTO {\n    allocationPool: string\n    borderNetwork: BorderNetworkDTO\n    cidr: string\n    dns: string\n    gateway: string\n    id: string | number\n    isDhcp: boolean\n    name: string\n    network: NetworkDTO\n    router: NetOSRouterDTO\n    uuid: string\n    version: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"components/NetworkComponent.html":{"url":"components/NetworkComponent.html","title":"component - NetworkComponent","body":"\n                   \n\n\n\n\n\n  Componenti\n  \n  NetworkComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/rete-settings/nodes/rete-nodes/network/network.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n            NodeComponent\n    \n\n\n\n\n    Metadati\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            NodeService\n                \n            \n\n\n\n            \n                styleUrls\n                ./network.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./network.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                NetworkIcon\n                            \n                            \n                                NodeType\n                            \n                            \n                                showInputOutlet\n                            \n                            \n                                showOutputOutlet\n                            \n                            \n                                showPorts\n                            \n                        \n                    \n                \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                showhidesocket\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Costruttore\n        \n            \n                \n                    \nconstructor(service: NodeService, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Definito in src/app/rete-settings/nodes/rete-nodes/network/network.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parametri :\n                                    \n                                        \n                                            \n                                                Nome\n                                                    Tipo\n                                                Opzionale\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                    NodeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        showhidesocket\n                        \n                    \n                \n            \n            \n                \nshowhidesocket()\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-nodes/network/network.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        NetworkIcon\n                        \n                    \n                \n            \n                \n                    \n                        Valore predefinito : NetworkIcon\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-nodes/network/network.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        NodeType\n                        \n                    \n                \n            \n                \n                    \n                        Valore predefinito : EnumNodeType\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-nodes/network/network.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showInputOutlet\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                \n                    \n                        Valore predefinito : true\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-nodes/network/network.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showOutputOutlet\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                \n                    \n                        Valore predefinito : false\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-nodes/network/network.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showPorts\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                \n                    \n                        Valore predefinito : true\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-nodes/network/network.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, ChangeDetectorRef, ChangeDetectionStrategy } from '@angular/core';\nimport { NodeComponent, NodeService } from 'rete-angular-render-plugin';\nimport { EnumNodeType } from 'src/app/models/appType';\nimport { NetworkIcon } from 'src/app/rete-settings/style/styleIconConfig';\n// import { EnumNodeType } from 'src/app/rete-settings/models/reteModelType';\n\n@Component({\n  templateUrl: './network.component.html',\n  styleUrls: ['./network.component.sass',],\n  providers: [NodeService],\n  changeDetection: ChangeDetectionStrategy.OnPush, // render più veloce.\n})\n\nexport class NetworkComponent extends NodeComponent {\n\n  showPorts: boolean = true;\n  showOutputOutlet: boolean = false;\n  showInputOutlet: boolean = true;\n  NetworkIcon = NetworkIcon;\n  NodeType = EnumNodeType;\n\n\n  constructor(\n    protected service: NodeService,\n    protected cdr: ChangeDetectorRef) {\n    super(service, cdr);\n  }\n\n  showhidesocket() {\n    this.showPorts = !this.showPorts;\n  }\n\n}\n\n    \n\n    \n        \n\n\n  \n    \n      \n        \n          {{ node.data.name === \"\" || node.data.name === undefined ? \"Assign name\" : node.data.name }}\n        \n      \n      \n        \n          \n          \n        \n      \n    \n   -->\n\n\n  \n  \n    \n      \n        \n          \n            \n              \n                 \n              \n              \n                \n                  {{\n                  (node.data.name && node.data.name!=='')\n                  ?node.data.name\n                  :NodeType.NETWORK\n                  }}\n                \n                \n                  \n                    {{\n                    (node.data.externalInterfaceName && node.data.externalInterfaceName!=='')\n                    ?\"External interface name: \"+node.data.externalInterfaceName\n                    :''\n                    }}\n                  \n                  \n                    {{\n                    (node.data.externalInterfaceType && node.data.externalInterfaceType!=='')\n                    ?\"type: \"+node.data.externalInterfaceType\n                    :''\n                    }}\n                  \n                \n              \n            \n          \n        \n      \n    \n  \n\n\n  \n    \n      Button with data-bs-target\n    \n  \n  \n    \n      Some placeholder content for the collapse component. This panel is hidden by default but revealed when the user\n      activates the relevant trigger.\n    \n   -->\n\n\n  \n\n       \n       \n        \n          {{output.name}}\n          \n            \n            \n          \n        \n      \n  \n  \n       -->\n  \n      \n      \n        \n          \n            \n            \n            \n          \n          {{input.name}}\n          \n        \n      \n\n  \n    \n\n    \n                \n                    ./network.component.sass\n                \n                @import \"../vars\"\n\n.node\n  background: $node-color\n  border: 2px solid #f124\n  border-radius: 10px\n  cursor: pointer\n  min-width: $node-width\n  height: auto\n  padding-bottom: 6px\n  box-sizing: content-box\n  position: relative\n  user-select: none\n  &:hover\n    background: lighten($node-color,4%)\n  &.selected\n    background: $node-color-selected\n    border-color: #ff0000\n  .title\n    color: $text-color\n    font-family: $font-fam\n    font-size: 18px\n    padding: 8px\n  .output\n    text-align: right\n    display: flex\n    justify-content: flex-end\n  .input\n    text-align: left\n    display: flex\n    justify-content: flex-start\n  .input-title,.output-title\n    vertical-align: middle\n    color: $text-color\n    display: inline-block\n    font-family: $font-fam\n    font-size: 14px\n    margin: $socket-margin\n    line-height: $socket-size\n    &[hidden]\n      display: none\n  .input-control\n    z-index: 1\n    width: calc(100% - #{$socket-size + 2*$socket-margin})\n    vertical-align: middle\n    display: inline-block\n  .control\n    padding: $socket-margin $socket-size/2 + $socket-margin\n\n.external-network-info-div\n  border-style: groove\n  border-radius: 1em\n  padding: 1em\n\n    \n\n    \n        \n        \n            \n                Legenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento html con direttive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              {{ node.data.name === \"\" || node.data.name === undefined ? \"Assign name\" : node.data.name }}                                                                     -->                                                                                                                                         {{                  (node.data.name && node.data.name!==\\'\\')                  ?node.data.name                  :NodeType.NETWORK                  }}                                                                      {{                    (node.data.externalInterfaceName && node.data.externalInterfaceName!==\\'\\')                    ?\"External interface name: \"+node.data.externalInterfaceName                    :\\'\\'                    }}                                                        {{                    (node.data.externalInterfaceType && node.data.externalInterfaceType!==\\'\\')                    ?\"type: \"+node.data.externalInterfaceType                    :\\'\\'                    }}                                                                                                      Button with data-bs-target                  Some placeholder content for the collapse component. This panel is hidden by default but revealed when the user      activates the relevant trigger.       -->                                  {{output.name}}                                                                     -->                                                                                        {{input.name}}                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ComposerComponent', 'selector': 'app-composer'},{'name': 'ControlTemplate', 'selector': ''},{'name': 'DataInputComponent', 'selector': 'app-data-input'},{'name': 'DataInputV2Component', 'selector': 'app-data-input-v2'},{'name': 'DataItemComponent', 'selector': 'app-window-item'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HostComponent', 'selector': ''},{'name': 'HowToUseComponent', 'selector': 'app-how-to-use'},{'name': 'MirroringModuleInstanceComponent', 'selector': ''},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavbarElementComponent', 'selector': 'app-navbar-element'},{'name': 'NetworkComponent', 'selector': ''},{'name': 'OffcanvasComponent', 'selector': 'app-offcanvas'},{'name': 'ReteModuleComposerComponent', 'selector': 'app-rete-module-composer'},{'name': 'ReteModuleVisualizerComponent', 'selector': 'app-rete-module-visualizer'},{'name': 'ReteTheaterComposerComponent', 'selector': 'app-rete-theater-composer'},{'name': 'ReteTheaterVisualizerComponent', 'selector': 'app-rete-theater-visualizer'},{'name': 'SubnetComponent', 'selector': ''},{'name': 'TabnavComponent', 'selector': 'app-tabnav'},{'name': 'TheaterInternalServiceModuleInstanceComponent', 'selector': ''},{'name': 'TheaterModuleInstanceComponent', 'selector': ''},{'name': 'UnderbarComponent', 'selector': 'app-underbar'},{'name': 'VisualizerComponent', 'selector': 'app-displayer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NetworkComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/NetworkConstraints.html":{"url":"classes/NetworkConstraints.html","title":"class - NetworkConstraints","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  NetworkConstraints\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsExport/moduleExport.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ModeTypeExport, ModuleTypeExport, NetworkTypeExport, NodeTypeExport, PortTypeExport, RelationshipsTypeExport, SubnetTypeExport, ToscaDefinitionType } from \"./TypeExport\"\n\n\n/**\n * Classe utilizzata per l'export. \n * Contiene le informazioni generali per il modulo che devono esserci nello standard Tosca.\n */\nexport class ModuleExport {\n    tosca_definitions_version: ToscaDefinitionType\n    description: string\n    imports: string[]\n    node_templates: { [name: string]: ModuleSimpleData | NodeSimpleData | PortSimpleData | NetworkSimpleData | SubnetSimpleData }\n    dsl_definition: any | null; //future\n    capabilites: any | null //future\n    outputs: any | null //future\n}\n\n\nexport class ModuleSimpleData {\n    type: ModuleTypeExport\n    properties: PropertiesMSD\n}\nexport class PropertiesMSD {\n    mode: ModeTypeExport\n    description: string\n    version: string | number\n    constraints: ConstraintsMSD\n    interface_networks: {\n        providers: InterfaceNetworksProvider[]\n        consumers: InterfaceNetworksConsumer[]\n    }\n    virtual_machines: VirtualMachine[]\n}\nexport class ConstraintsMSD {\n    interface_constraints: InterfaceConstraints[]\n    module_constraints: ModuleConstraints[]\n    network_constraints: NetworkConstraints[]\n}\nexport class InterfaceConstraints {\n    local_interface: string\n    multiple_mode: boolean = false //future\n    module_name: string\n    compatibility: string = \"1.0\" // future\n    remote_interface: string\n}\nexport class ModuleConstraints {\n}\nexport class NetworkConstraints {\n}\n\nexport class InterfaceNetworksProvider {\n    interface: string\n    network: string\n    tag: string\n    subnets: SubnetExport[]\n}\nexport class InterfaceNetworksConsumer {\n    interface: string\n    network: string\n    tag: string\n    subnets: SubnetExport[]\n}\n\nexport class VirtualMachine {\n    virtual_machine: string\n    ports: VirtualMachinePorts[]\n}\nexport class VirtualMachinePorts {\n    port: string\n    network: string\n    subnets: SubnetExport[]\n}\n\nexport class SubnetExport {\n    subnet: string;\n}\n\nexport class NodeSimpleData {\n    type: NodeTypeExport\n    properties: any | null // future\n    interfaces: any | null // future\n    relationships: RelationshipsExport[]\n}\n\nexport class RelationshipsExport {\n    type: RelationshipsTypeExport\n    target: string\n}\n\nexport class PortSimpleData {\n    type: PortTypeExport\n    relationships: RelationshipsExport[]\n}\n\nexport class NetworkSimpleData {\n    type: NetworkTypeExport\n    properties: PropertiesNSD\n}\nexport class PropertiesNSD {\n    openstack_config?: any | null // future\n    use_external_resource?: boolean | null // future\n    resource_id?: any | null // future\n}\n\n\nexport class SubnetSimpleData {\n    type: SubnetTypeExport\n    relationships: RelationshipsExport[]\n    properties: PropertiesSSD\n}\nexport class PropertiesSSD {\n    subnet?: {\n        ip_version: string | number\n        cidr: string\n        enable_dhcp: boolean\n        gateway_ip?: any | null // future\n    }\n    openstack_config?: any | null // future\n    use_external_resource?: boolean | null // future\n    resource_id?: any | null // future\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/NetworkDTO.html":{"url":"classes/NetworkDTO.html","title":"class - NetworkDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  NetworkDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsDTO/networkDTO.ts\n        \n\n\n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                uuid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/networkDTO.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/networkDTO.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uuid\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/networkDTO.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class NetworkDTO {\n    id: string | number\n    name: string\n    uuid: string\n}\n\nexport class BorderNetworkDTO {\n    bnName: string\n    id: string | number\n    subnet: {} | null\n    uuid: string | number\n}\n\nexport class NetOSRouterDTO {\n    borderNetwork: BorderNetworkDTO\n    id: string | number\n    subnet: {} | null\n    uuid: string | number\n}\n\nexport class SubnetDTO {\n    allocationPool: string\n    borderNetwork: BorderNetworkDTO\n    cidr: string\n    dns: string\n    gateway: string\n    id: string | number\n    isDhcp: boolean\n    name: string\n    network: NetworkDTO\n    router: NetOSRouterDTO\n    uuid: string\n    version: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/NetworkNode.html":{"url":"classes/NetworkNode.html","title":"class - NetworkNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  NetworkNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/rete-settings/nodes/rete-nodes/network/networkNode.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che rappresenta il nodo (rete-node) Network all'interno del canvas/editor di rete.\n\n            \n\n            \n                Extends\n            \n            \n                        Component\n            \n\n            \n                Implementa\n            \n            \n                        AngularComponent\n            \n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                builder\n                            \n                            \n                                created\n                            \n                            \n                                createNewNode\n                            \n                            \n                                destroyed\n                            \n                            \n                                valorizeNode\n                            \n                            \n                                worker\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Costruttore\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Definito in src/app/rete-settings/nodes/rete-nodes/network/networkNode.ts:45\n                            \n                        \n\n                \n                    \n                            Costruttore di NetworkNode\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     AngularComponentData\n\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-nodes/network/networkNode.ts:45\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        builder\n                        \n                    \n                \n            \n            \n                \n                    \n                    builder(node: Node)\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-nodes/network/networkNode.ts:63\n                \n            \n\n\n            \n                \n                    Funzione richiamata in fase di costruzione del nodo (rete-node).\nControlla se bisogna instanziare il nodo oppure crearne uno nuovo:\n\nIn fase di design, il nodo non ha dati, per cui bisogna crearne uno nuovo.\nIn fase di visualizing, il nodo presenta dei dati, per cui va valorizzato il nodo.\n\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        created\n                        \n                    \n                \n            \n            \n                \ncreated(node)\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-nodes/network/networkNode.ts:127\n                \n            \n\n\n            \n                \n                    Funzione richiamata una volta in nodo creato.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    node\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createNewNode\n                        \n                    \n                \n            \n            \n                \ncreateNewNode(node: Node)\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-nodes/network/networkNode.ts:75\n                \n            \n\n\n            \n                \n                    Funzione che ha come scopo creare un nodo (rete-node).\nIn particolare gli assegna una struttura vuota.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destroyed\n                        \n                    \n                \n            \n            \n                \ndestroyed(node)\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-nodes/network/networkNode.ts:135\n                \n            \n\n\n            \n                \n                    Funzione richiamata una volta in nodo cancellato.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    node\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        valorizeNode\n                        \n                    \n                \n            \n            \n                \nvalorizeNode(node: Node)\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-nodes/network/networkNode.ts:88\n                \n            \n\n\n            \n                \n                    Funzione che ha come scopo la valorizzazione del nodo (rete-node) con i dati in suo possesso.\nIn quasta fase avviene anche la fase iniziale di instanziamento delle porte input/output.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        worker\n                        \n                    \n                \n            \n            \n                \nworker(node: NodeData, inputs: WorkerInputs, outputs: WorkerOutputs)\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-nodes/network/networkNode.ts:119\n                \n            \n\n\n            \n                \n                    Funzione richiamta per eseguire operazioni che conivolgono computazioni dei nodi.\nNon sono necessari in questa versione.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                            NodeData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    inputs\n                                    \n                                            WorkerInputs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    outputs\n                                    \n                                            WorkerOutputs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Component, Input, Output, Node } from 'rete';\nimport { _Socket } from '../../../sockets/socket';\nimport { _Control } from '../../../controls/control';\nimport { AngularComponent, AngularComponentData } from 'rete-angular-render-plugin';\nimport { NetworkComponent } from './network.component';\nimport { NodeData, WorkerInputs, WorkerOutputs } from 'rete/types/core/data';\nimport {  reteBasicNodeInfo } from '../../reteBasic';\nimport { EnumNodeType, InterfacePortType } from 'src/app/models/appType';\n\n/**\n * Classe utilizzata per indicare il tipo di modulo NetworkNode.\n * @see {reteBasicNodeInfo}\n */\nexport class ReteNetworkInfo extends reteBasicNodeInfo {\n  type: EnumNodeType.Network;\n  externalInterfaceName: string;\n  externalInterfaceType: InterfacePortType;\n}\n\n/**\n * Funzione dichiarata in NetworkNode. \n * Essa ha lo scopo di generare una struttura dati empty.\n * Viene utilizzata in per instanziare un nodo del tipo di ritorno indicato senza dati.\n * @returns {ReteSubnetInfo}\n */\nexport function getEmptyNetworkInfo():ReteNetworkInfo {\n  let x: ReteNetworkInfo = {\n    Input: [],\n    Output: [],\n    name: \"\",\n    type: EnumNodeType.Network,\n    externalInterfaceName: '',\n    externalInterfaceType: undefined\n  };\n  return x;\n\n}\n\n\n/**\n * Classe che rappresenta il nodo (rete-node) Network all'interno del canvas/editor di rete.\n */\nexport class NetworkNode extends Component implements AngularComponent {\n\n  data: AngularComponentData;\n\n  /**\n   * Costruttore di NetworkNode\n   */\n  constructor() {\n    super(EnumNodeType.Network);\n    this.data.render = 'angular';\n    this.data.component = NetworkComponent;\n  }\n\n  /**\n   * Funzione richiamata in fase di costruzione del nodo (rete-node).\n   * Controlla se bisogna instanziare il nodo oppure crearne uno nuovo:\n   * - In fase di design, il nodo non ha dati, per cui bisogna crearne uno nuovo.\n   * - In fase di visualizing, il nodo presenta dei dati, per cui va valorizzato il nodo.\n   * @param node \n   */\n  async builder(node: Node) {\n    if (Object.keys(node.data).length === 0)\n      this.createNewNode(node)\n    else\n      this.valorizeNode(node)\n  }\n\n  /**\n   * Funzione che ha come scopo creare un nodo (rete-node).\n   * In particolare gli assegna una struttura vuota.\n   * @param node \n   */\n  createNewNode(node: Node) {\n    let t = getEmptyNetworkInfo()\n    node.data = {\n      ...node.data,\n      ...t\n    }\n  }\n\n  /**\n   * Funzione che ha come scopo la valorizzazione del nodo (rete-node) con i dati in suo possesso.\n   * In quasta fase avviene anche la fase iniziale di instanziamento delle porte input/output.\n   * @param node \n   */\n  valorizeNode(node: Node) {\n    var i: any = node.data['Input'];\n    var o: any = node.data['Output'];\n    var il = i.length;\n    var ol = o.length;\n\n    for (let index = 0; index \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/NetworkSimpleData.html":{"url":"classes/NetworkSimpleData.html","title":"class - NetworkSimpleData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  NetworkSimpleData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsExport/moduleExport.ts\n        \n\n\n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                properties\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        properties\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         PropertiesNSD\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:97\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         NetworkTypeExport\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:96\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ModeTypeExport, ModuleTypeExport, NetworkTypeExport, NodeTypeExport, PortTypeExport, RelationshipsTypeExport, SubnetTypeExport, ToscaDefinitionType } from \"./TypeExport\"\n\n\n/**\n * Classe utilizzata per l'export. \n * Contiene le informazioni generali per il modulo che devono esserci nello standard Tosca.\n */\nexport class ModuleExport {\n    tosca_definitions_version: ToscaDefinitionType\n    description: string\n    imports: string[]\n    node_templates: { [name: string]: ModuleSimpleData | NodeSimpleData | PortSimpleData | NetworkSimpleData | SubnetSimpleData }\n    dsl_definition: any | null; //future\n    capabilites: any | null //future\n    outputs: any | null //future\n}\n\n\nexport class ModuleSimpleData {\n    type: ModuleTypeExport\n    properties: PropertiesMSD\n}\nexport class PropertiesMSD {\n    mode: ModeTypeExport\n    description: string\n    version: string | number\n    constraints: ConstraintsMSD\n    interface_networks: {\n        providers: InterfaceNetworksProvider[]\n        consumers: InterfaceNetworksConsumer[]\n    }\n    virtual_machines: VirtualMachine[]\n}\nexport class ConstraintsMSD {\n    interface_constraints: InterfaceConstraints[]\n    module_constraints: ModuleConstraints[]\n    network_constraints: NetworkConstraints[]\n}\nexport class InterfaceConstraints {\n    local_interface: string\n    multiple_mode: boolean = false //future\n    module_name: string\n    compatibility: string = \"1.0\" // future\n    remote_interface: string\n}\nexport class ModuleConstraints {\n}\nexport class NetworkConstraints {\n}\n\nexport class InterfaceNetworksProvider {\n    interface: string\n    network: string\n    tag: string\n    subnets: SubnetExport[]\n}\nexport class InterfaceNetworksConsumer {\n    interface: string\n    network: string\n    tag: string\n    subnets: SubnetExport[]\n}\n\nexport class VirtualMachine {\n    virtual_machine: string\n    ports: VirtualMachinePorts[]\n}\nexport class VirtualMachinePorts {\n    port: string\n    network: string\n    subnets: SubnetExport[]\n}\n\nexport class SubnetExport {\n    subnet: string;\n}\n\nexport class NodeSimpleData {\n    type: NodeTypeExport\n    properties: any | null // future\n    interfaces: any | null // future\n    relationships: RelationshipsExport[]\n}\n\nexport class RelationshipsExport {\n    type: RelationshipsTypeExport\n    target: string\n}\n\nexport class PortSimpleData {\n    type: PortTypeExport\n    relationships: RelationshipsExport[]\n}\n\nexport class NetworkSimpleData {\n    type: NetworkTypeExport\n    properties: PropertiesNSD\n}\nexport class PropertiesNSD {\n    openstack_config?: any | null // future\n    use_external_resource?: boolean | null // future\n    resource_id?: any | null // future\n}\n\n\nexport class SubnetSimpleData {\n    type: SubnetTypeExport\n    relationships: RelationshipsExport[]\n    properties: PropertiesSSD\n}\nexport class PropertiesSSD {\n    subnet?: {\n        ip_version: string | number\n        cidr: string\n        enable_dhcp: boolean\n        gateway_ip?: any | null // future\n    }\n    openstack_config?: any | null // future\n    use_external_resource?: boolean | null // future\n    resource_id?: any | null // future\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/NodeSimpleData.html":{"url":"classes/NodeSimpleData.html","title":"class - NodeSimpleData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  NodeSimpleData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsExport/moduleExport.ts\n        \n\n\n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                interfaces\n                            \n                            \n                                properties\n                            \n                            \n                                relationships\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        interfaces\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     any | null\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        properties\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     any | null\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        relationships\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         RelationshipsExport[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         NodeTypeExport\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:79\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ModeTypeExport, ModuleTypeExport, NetworkTypeExport, NodeTypeExport, PortTypeExport, RelationshipsTypeExport, SubnetTypeExport, ToscaDefinitionType } from \"./TypeExport\"\n\n\n/**\n * Classe utilizzata per l'export. \n * Contiene le informazioni generali per il modulo che devono esserci nello standard Tosca.\n */\nexport class ModuleExport {\n    tosca_definitions_version: ToscaDefinitionType\n    description: string\n    imports: string[]\n    node_templates: { [name: string]: ModuleSimpleData | NodeSimpleData | PortSimpleData | NetworkSimpleData | SubnetSimpleData }\n    dsl_definition: any | null; //future\n    capabilites: any | null //future\n    outputs: any | null //future\n}\n\n\nexport class ModuleSimpleData {\n    type: ModuleTypeExport\n    properties: PropertiesMSD\n}\nexport class PropertiesMSD {\n    mode: ModeTypeExport\n    description: string\n    version: string | number\n    constraints: ConstraintsMSD\n    interface_networks: {\n        providers: InterfaceNetworksProvider[]\n        consumers: InterfaceNetworksConsumer[]\n    }\n    virtual_machines: VirtualMachine[]\n}\nexport class ConstraintsMSD {\n    interface_constraints: InterfaceConstraints[]\n    module_constraints: ModuleConstraints[]\n    network_constraints: NetworkConstraints[]\n}\nexport class InterfaceConstraints {\n    local_interface: string\n    multiple_mode: boolean = false //future\n    module_name: string\n    compatibility: string = \"1.0\" // future\n    remote_interface: string\n}\nexport class ModuleConstraints {\n}\nexport class NetworkConstraints {\n}\n\nexport class InterfaceNetworksProvider {\n    interface: string\n    network: string\n    tag: string\n    subnets: SubnetExport[]\n}\nexport class InterfaceNetworksConsumer {\n    interface: string\n    network: string\n    tag: string\n    subnets: SubnetExport[]\n}\n\nexport class VirtualMachine {\n    virtual_machine: string\n    ports: VirtualMachinePorts[]\n}\nexport class VirtualMachinePorts {\n    port: string\n    network: string\n    subnets: SubnetExport[]\n}\n\nexport class SubnetExport {\n    subnet: string;\n}\n\nexport class NodeSimpleData {\n    type: NodeTypeExport\n    properties: any | null // future\n    interfaces: any | null // future\n    relationships: RelationshipsExport[]\n}\n\nexport class RelationshipsExport {\n    type: RelationshipsTypeExport\n    target: string\n}\n\nexport class PortSimpleData {\n    type: PortTypeExport\n    relationships: RelationshipsExport[]\n}\n\nexport class NetworkSimpleData {\n    type: NetworkTypeExport\n    properties: PropertiesNSD\n}\nexport class PropertiesNSD {\n    openstack_config?: any | null // future\n    use_external_resource?: boolean | null // future\n    resource_id?: any | null // future\n}\n\n\nexport class SubnetSimpleData {\n    type: SubnetTypeExport\n    relationships: RelationshipsExport[]\n    properties: PropertiesSSD\n}\nexport class PropertiesSSD {\n    subnet?: {\n        ip_version: string | number\n        cidr: string\n        enable_dhcp: boolean\n        gateway_ip?: any | null // future\n    }\n    openstack_config?: any | null // future\n    use_external_resource?: boolean | null // future\n    resource_id?: any | null // future\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/NodeTopologyElement.html":{"url":"classes/NodeTopologyElement.html","title":"class - NodeTopologyElement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  NodeTopologyElement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsApplication/applicationModels.ts\n        \n\n\n\n\n            \n                Implementa\n            \n            \n                            TopologyElement\n            \n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                connection\n                            \n                            \n                                elements\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        connection\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ReteConnection[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsApplication/applicationModels.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        elements\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     literal type\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsApplication/applicationModels.ts:70\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ReteHostInfo } from \"src/app/rete-settings/nodes/rete-nodes/host/hostNode\";\nimport { ReteNetworkInfo } from \"src/app/rete-settings/nodes/rete-nodes/network/networkNode\";\nimport { ReteSubnetInfo } from \"src/app/rete-settings/nodes/rete-nodes/subnet/subnetNode\";\nimport { ReteMirroringModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/mirroringModuleInstance/mirroringModuleInstanceNode\";\nimport { ReteTheaterInternalServiceModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/theaterInternalServiceModuleInstance/theaterInternalServiceModuleInstanceNode\";\nimport { ReteTheaterModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/theaterModuleInstance/theaterModuleInstanceNode\";\nimport { FlavorBasicInfo } from \"../modelsDTO/falvorDTO\";\nimport { HostModuleDTO } from \"../modelsDTO/hostDTO\";\nimport { ModuleNetworkInterfaceDTO, ModuleInstancePropertiesDTO, SimpleModuleDTO, TheaterInstancePropertiesDTO, ModuleInstanceDTO, ModuleDTO, SimpleAreaDTO, AreaDTO } from \"../modelsDTO/moduleDTO\";\nimport { TheaterDTO } from \"../modelsDTO/theaterDTO\";\n\n\nexport interface CommonModule {\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n}\n\n\n/**\n * Classe contenente gli attributi utilizzati per le operazioni che coinvolgono i moduli.\n * ps. Questa struttura è prettamente utilizzata nella chiamata relativa al singolo modulo.\n */\nexport class ModuleApplication extends ModuleDTO implements CommonModule {\n    imports: string[] // perchè nell'export yaml è previsto\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n}\n// PER IMPLEMENTAZIONI FUTURE, PER COERENZA, PRENDERE DIRETTAMENTE I SINGOLI NODI DALLA CHIAMATA ESCLUSIVA E NON DA QUELLA CHE RESTITUISCE TUTTI I TEATRI\n/**\n * Classe contenente gli attributi utilizzati per le operazioni che coinvolgono i moduli.\n * ps. Questa struttura è prettamente utilizzata nella chiamata che prende tutti i moduli del teatro.\n */\nexport class SimpleModuleApplication extends SimpleModuleDTO implements CommonModule {\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n}\n\n\nexport class ReteConnection {\n    from: string;\n    port_src: string;\n    to: string;\n    port_dst: string;\n}\n\nexport interface TopologyList {\n    rete: any;\n    topology?: TopologyElement\n}\nexport class TopologyElement {\n    elements: { [name: string]: any };\n    connection: ReteConnection[]\n}\n\n// apptype module topology\n\nexport class NodeTopologyElement implements TopologyElement {\n    elements: { [hostName: string]: ReteHostInfo | ReteSubnetInfo | ReteNetworkInfo };\n    connection: ReteConnection[]\n}\n\nexport interface ModuleTopology extends TopologyList {\n    rete: ReteMirroringModuleInstanceInfo | ReteTheaterInternalServiceModuleInstanceInfo | ReteTheaterModuleInstanceInfo\n    topology: NodeTopologyElement;\n}\n\nexport class ModuleInstance extends ModuleInstanceDTO implements ModuleTopology {\n    // moduleTopology data\n    rete: ReteTheaterModuleInstanceInfo | ReteTheaterInternalServiceModuleInstanceInfo | ReteMirroringModuleInstanceInfo;\n    topology: NodeTopologyElement;\n    // other data\n    moduleInfo: SimpleModuleApplication\n}\n\n// apptype theater theater\n\nexport interface TheaterTopology extends TopologyElement {\n    elements: { [hostName: string]: ModuleInstance };\n    connection: ReteConnection[];\n}\n\nexport class TheaterApplication extends TheaterDTO implements TheaterTopology {\n    // theaterTopology data\n    elements: { [hostName: string]: ModuleInstance; };\n    connection: ReteConnection[];\n    // other data\n    properties: TheaterInstancePropertiesDTO;\n    topology: TheaterTopology;\n}\n\nexport class AreaApplication extends AreaDTO {\n    color?: string;\n}\nexport class AreaColorDTO extends SimpleAreaDTO {\n    color: string;\n}\n\n\nexport class FlavorApplication extends FlavorBasicInfo {\n    flavorName: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"components/OffcanvasComponent.html":{"url":"components/OffcanvasComponent.html","title":"component - OffcanvasComponent","body":"\n                   \n\n\n\n\n\n  Componenti\n  \n  OffcanvasComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/offcanvas/offcanvas.component.ts\n\n\n\n    \n        Descrizione\n    \n    \n        Componente utilizzata per il rendering degli offcanvas a contenuto generico.\nSupporta operazioni di full-screen e mid-screen con posizioni: destra, sinistra, sotto, sopra\n\n    \n\n\n\n\n\n    Metadati\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-offcanvas\n            \n\n            \n                styleUrls\n                ./offcanvas.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./offcanvas.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _show\n                            \n                            \n                                    Protected\n                                closeIconClass\n                            \n                            \n                                    Protected\n                                toOpenIconClass\n                            \n                            \n                                    Protected\n                                toReduceIconClass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                closeOffcanvas\n                            \n                            \n                                reduce\n                            \n                        \n                    \n                \n\n                \n                    \n                        Input\n                    \n                \n                \n                    \n                        \n                            \n                                alt_title\n                            \n                            \n                                element\n                            \n                            \n                                isfull\n                            \n                            \n                                position\n                            \n                            \n                                show\n                            \n                            \n                                title\n                            \n                            \n                                title_template\n                            \n                        \n                    \n                \n\n                \n                    \n                        Output\n                    \n                \n                \n                    \n                        \n                            \n                                showChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessori\n                        \n                    \n                    \n                        \n                            \n                                \n                                    show\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Costruttore\n        \n            \n                \n                    \nconstructor(cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Definito in src/app/components/offcanvas/offcanvas.component.ts:76\n                            \n                        \n\n                \n                    \n                            Constructor componente OffcavanvasComponent\n\n                            \n                                    Parametri :\n                                    \n                                        \n                                            \n                                                Nome\n                                                    Tipo\n                                                Opzionale\n                                            \n                                        \n                                        \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Input\n        \n            \n                \n                    \n                        \n                        alt_title\n                    \n                \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                    Definito in src/app/components/offcanvas/offcanvas.component.ts:43\n                            \n                        \n                \n                    \n                        Variabile in input che rappresente un titolo alternativo (se presente).\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        element\n                    \n                \n                \n                    \n                        Tipo :     TemplateRef\n\n                    \n                \n                        \n                            \n                                    Definito in src/app/components/offcanvas/offcanvas.component.ts:54\n                            \n                        \n                \n                    \n                        Variabile in input che rappresenta il Blob da visualizzare come contenuto nell'offcanvas\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isfull\n                    \n                \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                \n                    \n                        Valore predefinito : false\n                    \n                \n                        \n                            \n                                    Definito in src/app/components/offcanvas/offcanvas.component.ts:71\n                            \n                        \n                \n                    \n                        Variabile che rappresenta lo stato di visualizzazione full-screen / mid-screen\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        position\n                    \n                \n                \n                    \n                        Tipo :     \"end\" | \"start\" | \"top\" | \"bottom\"\n\n                    \n                \n                        \n                            \n                                    Definito in src/app/components/offcanvas/offcanvas.component.ts:64\n                            \n                        \n                \n                    \n                        Variabile che indica la posizione dell'offcanvas.\nCi sono quattro possibilità:\n @type {\"end\"} dx\n @type {\"start\"} sx\n @type {\"top\"} sopra\n @type {\"bottom\"} sotto\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        show\n                    \n                \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                        \n                            \n                                    Definito in src/app/components/offcanvas/offcanvas.component.ts:25\n                            \n                        \n                \n                    \n                        Variabile (set) input che rappresenta lo stato dell'hide-or-show dell'offcanvas\nQuando esegue l'update del valore show. Lo emette anche in output.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                    Definito in src/app/components/offcanvas/offcanvas.component.ts:38\n                            \n                        \n                \n                    \n                        Variabile in input che rappresenta il titolo.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        title_template\n                    \n                \n                \n                    \n                        Tipo :     TemplateRef\n\n                    \n                \n                        \n                            \n                                    Definito in src/app/components/offcanvas/offcanvas.component.ts:48\n                            \n                        \n                \n                    \n                        Variabile in input, messo, se presente, al posto del titolo.\n\n                    \n                \n            \n        \n\n    \n    Output\n        \n            \n                \n                    \n                        \n                        showChange\n                    \n                \n                \n                    \n                        Tipo :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Definito in src/app/components/offcanvas/offcanvas.component.ts:32\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        closeOffcanvas\n                        \n                    \n                \n            \n            \n                \ncloseOffcanvas()\n                \n            \n\n\n            \n                \n                    Definito in src/app/components/offcanvas/offcanvas.component.ts:91\n                \n            \n\n\n            \n                \n                    Funzione richiamata per la chiusura dell'offcanvas\nSee {show}\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reduce\n                        \n                    \n                \n            \n            \n                \nreduce()\n                \n            \n\n\n            \n                \n                    Definito in src/app/components/offcanvas/offcanvas.component.ts:100\n                \n            \n\n\n            \n                \n                    funzione richiamata per lo stato full/mid-screen dell'offcanvas\nSee {isfull}\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _show\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/offcanvas/offcanvas.component.ts:19\n                        \n                    \n\n            \n                \n                    Variabile di appoggio per lo stato \"hide-or-show\" dell'offcanvas.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        closeIconClass\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                \n                    \n                        Valore predefinito : \"bi bi-x-lg\"\n                    \n                \n                    \n                        \n                                Definito in src/app/components/offcanvas/offcanvas.component.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        toOpenIconClass\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                \n                    \n                        Valore predefinito : \"bi bi-square\"\n                    \n                \n                    \n                        \n                                Definito in src/app/components/offcanvas/offcanvas.component.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        toReduceIconClass\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                \n                    \n                        Valore predefinito : \"bi bi-box-arrow-in-down-right\"\n                    \n                \n                    \n                        \n                                Definito in src/app/components/offcanvas/offcanvas.component.ts:74\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessori\n    \n        \n            \n                \n                    \n                        \n                        show\n                    \n                \n\n                \n                    \n                        getshow()\n                    \n                \n                            \n                                \n                                    Definito in src/app/components/offcanvas/offcanvas.component.ts:29\n                                \n                            \n\n                \n                    \n                        setshow(val: boolean)\n                    \n                \n                            \n                                \n                                    Definito in src/app/components/offcanvas/offcanvas.component.ts:25\n                                \n                            \n                    \n                        \n                                Variabile (set) input che rappresenta lo stato dell'hide-or-show dell'offcanvas\nQuando esegue l'update del valore show. Lo emette anche in output.\n\n\n                                \n                                        Parametri :\n                                        \n                                            \n                                                \n                                                    Nome\n                                                        Tipo\n                                                    Opzionale\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { ChangeDetectorRef, Component, EventEmitter, Input, Output, TemplateRef } from '@angular/core';\n\n\n/**\n * Componente utilizzata per il rendering degli offcanvas a contenuto generico.\n * Supporta operazioni di full-screen e mid-screen con posizioni: destra, sinistra, sotto, sopra \n */\n@Component({\n  selector: 'app-offcanvas',\n  templateUrl: './offcanvas.component.html',\n  styleUrls: ['./offcanvas.component.sass'],\n  // changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class OffcanvasComponent {\n\n  /**\n   * Variabile di appoggio per lo stato \"hide-or-show\" dell'offcanvas.\n   */\n  protected _show: boolean;\n  /**\n   * Variabile (set) input che rappresenta lo stato dell'hide-or-show dell'offcanvas\n   * Quando esegue l'update del valore show. Lo emette anche in output.\n   */\n  @Input()\n  set show(val: boolean) {\n    this.showChange.emit(val);\n    this._show = val;\n  }\n  get show() {\n    return this._show;\n  }\n  @Output() showChange: EventEmitter = new EventEmitter();\n\n  /**\n   * Variabile in input che rappresenta il titolo.\n   * @type {string}\n   */\n  @Input() title: string;\n  /**\n   * Variabile in input che rappresente un titolo alternativo (se presente).\n   * @type {string}\n   */\n  @Input() alt_title?: string;\n  /**\n   * Variabile in input, messo, se presente, al posto del titolo.\n   * @type {TemplateRef}\n   */\n  @Input() title_template?: TemplateRef;\n\n  /**\n   * Variabile in input che rappresenta il Blob da visualizzare come contenuto nell'offcanvas\n   * @type {TemplateRef}\n   */\n  @Input() element: TemplateRef;\n\n  /**\n   * Variabile che indica la posizione dell'offcanvas.\n   * Ci sono quattro possibilità:\n   *  @type {\"end\"} dx\n   *  @type {\"start\"} sx\n   *  @type {\"top\"} sopra\n   *  @type {\"bottom\"} sotto\n   */\n  @Input() position: \"end\" | \"start\" | \"top\" | \"bottom\";\n\n  /**\n   * Variabile che rappresenta lo stato di visualizzazione full-screen / mid-screen\n   * @type {boolean}\n   * @default {false}\n   */\n  @Input() isfull?: boolean = false;\n  \n  // variabili classe icone\n  protected toReduceIconClass: string = \"bi bi-box-arrow-in-down-right\";\n  protected toOpenIconClass: string = \"bi bi-square\";\n  protected closeIconClass: string = \"bi bi-x-lg\";\n\n\n  /**\n   * Constructor componente OffcavanvasComponent\n   * @param cdr \n   */\n  constructor(private cdr: ChangeDetectorRef) {\n  }\n\n\n  /**\n   * Funzione richiamata per la chiusura dell'offcanvas\n   * @see {show}\n   */\n  closeOffcanvas() {\n    this.show = false;\n    this.cdr.detectChanges();\n  }\n\n  /**\n   * funzione richiamata per lo stato full/mid-screen dell'offcanvas\n   * @see {isfull}\n   */\n  reduce() {\n    this.isfull = !this.isfull;\n    this.cdr.detectChanges();\n  }\n\n}\n\n    \n\n    \n        \n\n    \n    \n        \n            {{ title }}\n        \n        \n            {{ alt_title }}\n        \n        \n        \n        \n\n        \n            \n                \n                    \n                \n                 \n                \n            \n        \n    \n\n    \n    \n\n        \n        \n\n    \n\n    \n\n    \n                \n                    ./offcanvas.component.sass\n                \n                $background-color: #2a2f34\n$text-color: white\n$cite-color: #b3b3b3\n$shadow-color: rgba(0,0,0,.53)!important\n\n$text-tab-selected: white\n$text-tab-unselected: #93a1ba\n\n\n.side-wrapper-opt\n    background-color: $background-color\n    /* padding-right: 1.5em */\n\n.my-offcanvas\n    opacity: 99%\n    // min-width: 50%\n    visibility: visible\n    visibility: visible\n    opacity: 99%\n    box-shadow: 0 .5rem 1rem $shadow-color!important\n\n.my-offcanvas-title\n    overflow: hidden\n    text-overflow: ellipsis\n\n.my-offcanvas-body\n    width: 100%\n    height: 100% !important\n    padding: 0\n\np,h4,h5\n    color: $text-color\n\ncite\n    color: $cite-color\n\n.text-tab-selected\n    // font-size: 1.5em\n    color: $text-tab-selected !important\n    font-weight: bold\n\n.text-tab-unselected\n    // fonr-size: 1em\n    color: $text-tab-unselected !important\n    \n\n    \n        \n        \n            \n                Legenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento html con direttive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            {{ title }}                            {{ alt_title }}                                                                                                                                                                                             '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ComposerComponent', 'selector': 'app-composer'},{'name': 'ControlTemplate', 'selector': ''},{'name': 'DataInputComponent', 'selector': 'app-data-input'},{'name': 'DataInputV2Component', 'selector': 'app-data-input-v2'},{'name': 'DataItemComponent', 'selector': 'app-window-item'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HostComponent', 'selector': ''},{'name': 'HowToUseComponent', 'selector': 'app-how-to-use'},{'name': 'MirroringModuleInstanceComponent', 'selector': ''},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavbarElementComponent', 'selector': 'app-navbar-element'},{'name': 'NetworkComponent', 'selector': ''},{'name': 'OffcanvasComponent', 'selector': 'app-offcanvas'},{'name': 'ReteModuleComposerComponent', 'selector': 'app-rete-module-composer'},{'name': 'ReteModuleVisualizerComponent', 'selector': 'app-rete-module-visualizer'},{'name': 'ReteTheaterComposerComponent', 'selector': 'app-rete-theater-composer'},{'name': 'ReteTheaterVisualizerComponent', 'selector': 'app-rete-theater-visualizer'},{'name': 'SubnetComponent', 'selector': ''},{'name': 'TabnavComponent', 'selector': 'app-tabnav'},{'name': 'TheaterInternalServiceModuleInstanceComponent', 'selector': ''},{'name': 'TheaterModuleInstanceComponent', 'selector': ''},{'name': 'UnderbarComponent', 'selector': 'app-underbar'},{'name': 'VisualizerComponent', 'selector': 'app-displayer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OffcanvasComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/PageableDTO.html":{"url":"classes/PageableDTO.html","title":"class - PageableDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  PageableDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsDTO/elementDTO.ts\n        \n\n\n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                offset\n                            \n                            \n                                paged\n                            \n                            \n                                pageNumber\n                            \n                            \n                                pageSize\n                            \n                            \n                                sort\n                            \n                            \n                                unpaged\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        offset\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/elementDTO.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        paged\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/elementDTO.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pageNumber\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/elementDTO.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pageSize\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/elementDTO.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sort\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         SortDTO\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/elementDTO.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unpaged\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/elementDTO.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class SortDTO {\n    empty: boolean\n    sorted: boolean\n    unsorted: boolean\n}\nexport class PageableDTO {\n    offset: string | number\n    pageNumber: string | number\n    pageSize: string | number\n    paged: boolean\n    sort: SortDTO\n    unpaged: boolean\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/ParseDataForTheaterVisualizer.html":{"url":"classes/ParseDataForTheaterVisualizer.html","title":"class - ParseDataForTheaterVisualizer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  ParseDataForTheaterVisualizer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/application/parse/parseDataForTheaterVisualizer.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Elemento che ha lo scopo di eseguire il fetching ed il parsing dei dati per la visualizzazione del teatro.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                fixTheaterName\n                            \n                            \n                                get_and_remove_theater_properties_from_blueprint\n                            \n                            \n                                getModuleConnection\n                            \n                            \n                                    Async\n                                getModuleDict\n                            \n                            \n                                    Async\n                                getModulesDetails\n                            \n                            \n                                    Async\n                                getModulesInterfaces\n                            \n                            \n                                    Async\n                                getModulesNodes\n                            \n                            \n                                getModulesTopology\n                            \n                            \n                                initTheaterAfterFetch\n                            \n                            \n                                parseModuleInstance\n                            \n                            \n                                    Async\n                                parseModulesFromTheater\n                            \n                            \n                                    Async\n                                parseTheater\n                            \n                            \n                                    Async\n                                parseTheaterForTheaterVisualizer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Costruttore\n        \n            \n                \n                    \nconstructor(theaterService: TheaterService, moduleService: ModuleService)\n                    \n                \n                        \n                            \n                                Definito in src/app/services/application/parse/parseDataForTheaterVisualizer.ts:18\n                            \n                        \n\n                \n                    \n                            Costruttore componente.\n\n                            \n                                    Parametri :\n                                    \n                                        \n                                            \n                                                Nome\n                                                    Tipo\n                                                Opzionale\n                                            \n                                        \n                                        \n                                                \n                                                        theaterService\n                                                  \n                                                        \n                                                                        TheaterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        moduleService\n                                                  \n                                                        \n                                                                        ModuleService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        fixTheaterName\n                        \n                    \n                \n            \n            \n                \nfixTheaterName(rowTheater: TheaterDTO)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/parse/parseDataForTheaterVisualizer.ts:112\n                \n            \n\n\n            \n                \n                    Funzione che ha come scopo la fix del nome del teatro nel caso diverga dalla sua rappresentazione nel node_templates.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    rowTheater\n                                    \n                                                TheaterDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get_and_remove_theater_properties_from_blueprint\n                        \n                    \n                \n            \n            \n                \nget_and_remove_theater_properties_from_blueprint(rowTheater: TheaterDTO)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/parse/parseDataForTheaterVisualizer.ts:135\n                \n            \n\n\n            \n                \n                    Funzione che serve ad esportare le proprietà del modulo dalla parte dei node_templates all'oggetto generale.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    rowTheater\n                                    \n                                                TheaterDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TheaterInstancePropertiesDTO\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getModuleConnection\n                        \n                    \n                \n            \n            \n                \ngetModuleConnection(theater: TheaterApplication)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/parse/parseDataForTheaterVisualizer.ts:299\n                \n            \n\n\n            \n                \n                    Funzione che ha lo scopo di valorizzare le connessioni dei moduli\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    theater\n                                    \n                                                TheaterApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ReteConnection[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getModuleDict\n                        \n                    \n                \n            \n            \n                \n                    \n                    getModuleDict(modules: SimpleModuleDTO[])\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/parse/parseDataForTheaterVisualizer.ts:174\n                \n            \n\n\n            \n                \n                    Funzione che prende in input i dati dei moduli del teatro e le ritorna parserizzati e sottoforma organizzata di dizionario.\nSee {getModulesDetails}\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    modules\n                                    \n                                            SimpleModuleDTO[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getModulesDetails\n                        \n                    \n                \n            \n            \n                \n                    \n                    getModulesDetails(modules: SimpleModuleDTO[])\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/parse/parseDataForTheaterVisualizer.ts:193\n                \n            \n\n\n            \n                \n                    Funzione che prende i moduli reperiti dal server e li parserizza e \"arricchisce\" con le informazione dei nodi e interfacce.\nSee {getModulesNodes}\nSee {getModulesInterfaces}\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    modules\n                                    \n                                            SimpleModuleDTO[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getModulesInterfaces\n                        \n                    \n                \n            \n            \n                \n                    \n                    getModulesInterfaces(modules: SimpleModuleDTO[])\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/parse/parseDataForTheaterVisualizer.ts:244\n                \n            \n\n\n            \n                \n                    Funzione che esegue il fetch delle interfacce di un modulo di un teatro.\nSee {moduleService}\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    modules\n                                    \n                                            SimpleModuleDTO[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getModulesNodes\n                        \n                    \n                \n            \n            \n                \n                    \n                    getModulesNodes(modules: SimpleModuleDTO[])\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/parse/parseDataForTheaterVisualizer.ts:219\n                \n            \n\n\n            \n                \n                    Funzione che esegue il fetch degli host di un modulo di un teatro.\nSee {moduleService}\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    modules\n                                    \n                                            SimpleModuleDTO[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getModulesTopology\n                        \n                    \n                \n            \n            \n                \ngetModulesTopology(modulesInfo: literal type)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/parse/parseDataForTheaterVisualizer.ts:331\n                \n            \n\n\n            \n                \n                    Funzione che ha lo scopo di controllare ed inserire la topologia dei nodi di ogni moduli del teatro.\nQuesta funzione inizializza già i nodi da poter essere inseriti nel canvas.\nSee {createHost}\nSee {createSubnet}\nSee {createNetwork}\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    modulesInfo\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initTheaterAfterFetch\n                        \n                    \n                \n            \n            \n                \ninitTheaterAfterFetch(rowTheater: TheaterDTO)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/parse/parseDataForTheaterVisualizer.ts:91\n                \n            \n\n\n            \n                \n                    Funzione che inizializza gli attributi del teatro per l'applicazione.\nSee {fixTheaterName}\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    rowTheater\n                                    \n                                                TheaterDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TheaterApplication\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        parseModuleInstance\n                        \n                    \n                \n            \n            \n                \nparseModuleInstance(theater: TheaterApplication, modules: literal type)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/parse/parseDataForTheaterVisualizer.ts:269\n                \n            \n\n\n            \n                \n                    Funzione che si occupa di collegare le istanze dei moduli del teatro con i dettagli dei singoli moduli (root).\nQuesta funzione produce direttamente i dati del modulo (sottoforma di nodo) da poter essere inserito nel canvas.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    theater\n                                    \n                                                TheaterApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    modules\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        parseModulesFromTheater\n                        \n                    \n                \n            \n            \n                \n                    \n                    parseModulesFromTheater(theaterUUID: string | number)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/parse/parseDataForTheaterVisualizer.ts:156\n                \n            \n\n\n            \n                \n                    Funzione che si occupa di eseguire il fetching dei moduli appartenenti al teatro e le ritorna come dizionario di modulo-oggetto.\nSi occupa anche di organizzare la topologia dei moduli del teatro.\nSee {theaterService}\nSee {getModuleDict}\nSee {getModulesTopology}\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    theaterUUID\n                                    \n                                            string | number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        parseTheater\n                        \n                    \n                \n            \n            \n                \n                    \n                    parseTheater(id: string | number)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/parse/parseDataForTheaterVisualizer.ts:75\n                \n            \n\n\n            \n                \n                    Funzione che ritorna i dati a seguito della fetch con il server.\nSee {theaterService}\nSee {initTheaterAfterFetch}\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            string | number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        parseTheaterForTheaterVisualizer\n                        \n                    \n                \n            \n            \n                \n                    \n                    parseTheaterForTheaterVisualizer(id: string | number)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/parse/parseDataForTheaterVisualizer.ts:44\n                \n            \n\n\n            \n                \n                    Funzione che viene richiamata per fornire il teatro pareserizzato.\nQuesta funzione si avvale di tutte quei metodi che permettono di restituire e fixare un output adatto all'applicazione.\nSee {parseTheater}\nSee {parseModulesFromTheater}\nSee {parseModuleInstance}\nSee {getModuleConnection}\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            string | number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { TheaterService } from '../../api/theater.service';\nimport { ModuleService } from '../../api/module.service';\nimport { TheaterDTO, TheaterType } from '../../modelsDTO/theaterDTO';\nimport { ElementIntoTheaterDTO, ModuleInstanceDTO, ModuleNetworkInterfaceDTO, SimpleModuleDTO, TheaterInstancePropertiesDTO } from '../../modelsDTO/moduleDTO';\nimport { SimpleModuleApplication, ModuleInstance, TheaterApplication, ReteConnection } from '../../modelsApplication/applicationModels';\nimport { HostModuleDTO, HostPortModuleDTO } from '../../modelsDTO/hostDTO';\nimport { SubnetDTO } from '../../modelsDTO/networkDTO';\nimport { ReteHostInfo } from 'src/app/rete-settings/nodes/rete-nodes/host/hostNode';\nimport { ReteNetworkInfo } from 'src/app/rete-settings/nodes/rete-nodes/network/networkNode';\nimport { ReteSubnetInfo } from 'src/app/rete-settings/nodes/rete-nodes/subnet/subnetNode';\nimport { StaticValue } from 'src/app/models/appType';\nimport { createHost, createSubnet, createNetwork, createModuleNode } from './parseCommonElement';\n\n\n/**\n * Elemento che ha lo scopo di eseguire il fetching ed il parsing dei dati per la visualizzazione del teatro.\n */\nexport class ParseDataForTheaterVisualizer {\n\n    /**\n     * Costruttore componente.\n     * @param theaterService \n     * @param moduleService \n     */\n    constructor(\n        private theaterService: TheaterService,\n        private moduleService: ModuleService,\n    ) {\n    }\n\n\n\n\n    /**\n     * Funzione che viene richiamata per fornire il teatro pareserizzato.\n     * Questa funzione si avvale di tutte quei metodi che permettono di restituire e fixare un output adatto all'applicazione.\n     * @param id \n     * @returns {Promise}\n     * @see {parseTheater}\n     * @see {parseModulesFromTheater}\n     * @see {parseModuleInstance}\n     * @see {getModuleConnection}\n     */\n    async parseTheaterForTheaterVisualizer(id: string | number): Promise {\n\n        var theaterDTO: TheaterDTO;\n        var theater: TheaterApplication;\n        [theaterDTO, theater] = await this.parseTheater(id as string);\n\n        var modules: { [name: string]: SimpleModuleApplication } = await this.parseModulesFromTheater(theater.uuid);\n\n        // connect modules to instance-module into theater\n        var moduleInstances: { [name: string]: ModuleInstance }\n            = await this.parseModuleInstance(theater, modules);\n\n        //assign theater topology\n        theater.topology = {\n            elements: moduleInstances,\n            connection: this.getModuleConnection(theater)\n        }\n\n        return theater;\n    }\n\n\n\n\n    /**\n     * Funzione che ritorna i dati a seguito della fetch con il server.\n     * @param id \n     * @returns {Promise}\n     * @see {theaterService}\n     * @see {initTheaterAfterFetch}\n     */\n    async parseTheater(id: string | number): Promise {\n        //normalizzazione & get theater\n        var rowTheater: TheaterDTO = await this.theaterService.getTheaterInfoByID(id);\n        let theater: TheaterApplication = await this.initTheaterAfterFetch(rowTheater);\n        return [rowTheater, theater];\n    }\n\n\n\n\n    /**\n     * Funzione che inizializza gli attributi del teatro per l'applicazione.\n     * @param rowTheater \n     * @returns {TheaterApplication}\n     * @see {fixTheaterName}\n     */\n    initTheaterAfterFetch(rowTheater: TheaterDTO): TheaterApplication {\n        this.fixTheaterName(rowTheater);\n        let theaterProperties: TheaterInstancePropertiesDTO = this.get_and_remove_theater_properties_from_blueprint(rowTheater);\n        let theater: TheaterApplication = {\n            ...rowTheater,\n            properties: theaterProperties,\n            elements: {},\n            connection: [],\n            topology: undefined\n        };\n        return theater;\n    }\n\n\n\n\n\n    /**\n     * Funzione che ha come scopo la fix del nome del teatro nel caso diverga dalla sua rappresentazione nel node_templates.\n     * @param rowTheater \n     */\n    fixTheaterName(rowTheater: TheaterDTO) {\n        // @check controllo incoerenza nome teatro con quello riporato in node_templates -> si preferisce quello proveniente dal blueprint\n        if (!rowTheater.blueprintFile.node_templates[rowTheater.name]) {\n            Object.entries(rowTheater.blueprintFile.node_templates).map(([key, value]) => {\n                let moduleIntoTheater: ElementIntoTheaterDTO = value as ElementIntoTheaterDTO\n                if (moduleIntoTheater.type.toLowerCase().includes(TheaterType.toLowerCase())) {\n                    rowTheater.name = key;\n                    return;\n                }\n            });\n            console.warn(\"Theater name doesn't match\");\n        }\n    }\n\n\n\n\n\n    /**\n     * Funzione che serve ad esportare le proprietà del modulo dalla parte dei node_templates all'oggetto generale.\n     * @param rowTheater \n     * @returns {TheaterInstancePropertiesDTO}\n     */\n    get_and_remove_theater_properties_from_blueprint(rowTheater: TheaterDTO): TheaterInstancePropertiesDTO {\n        // esporta e rimuove le proprietà situate in node_modules\n        let moduleIntoTheater: ElementIntoTheaterDTO = rowTheater.blueprintFile.node_templates[rowTheater.name];\n        let theaterProperties: TheaterInstancePropertiesDTO = moduleIntoTheater.properties as TheaterInstancePropertiesDTO;\n        delete rowTheater.blueprintFile.node_templates[rowTheater.name];\n        return theaterProperties;\n    }\n\n\n\n\n\n    /**\n     * Funzione che si occupa di eseguire il fetching dei moduli appartenenti al teatro e le ritorna come dizionario di modulo-oggetto.\n     * Si occupa anche di organizzare la topologia dei moduli del teatro.\n     * @param theaterUUID \n     * @returns {Promise}\n     * @see {theaterService}\n     * @see {getModuleDict}\n     * @see {getModulesTopology}\n     */\n    async parseModulesFromTheater(theaterUUID: string | number): Promise {\n        //normalizzazione & get modules -> Assign Map\n        let rowModules: SimpleModuleDTO[] = await this.theaterService.getTheaterModulesByUUID(theaterUUID);\n        let modules: { [name: string]: SimpleModuleApplication } = await this.getModuleDict(rowModules);\n        this.getModulesTopology(modules);\n        return modules;\n    }\n\n\n\n\n\n    /**\n     * Funzione che prende in input i dati dei moduli del teatro e le ritorna parserizzati e sottoforma organizzata di dizionario.\n     * @param modules \n     * @returns { Promise}\n     * @see {getModulesDetails}\n     */\n    async getModuleDict(modules: SimpleModuleDTO[]): Promise {\n        let moduleDict: { [name: string]: SimpleModuleApplication } = {};\n        let modulesApplication: SimpleModuleApplication[] = await this.getModulesDetails(modules);\n        Object.entries(modulesApplication).map(async ([key, value]) => {\n            moduleDict[value.name] = value;\n        });\n        return moduleDict;\n    }\n\n\n\n\n    /**\n     * Funzione che prende i moduli reperiti dal server e li parserizza e \"arricchisce\" con le informazione dei nodi e interfacce.\n     * @param modules \n     * @returns {Promise}\n     * @see {getModulesNodes}\n     * @see {getModulesInterfaces}\n     */\n    async getModulesDetails(modules: SimpleModuleDTO[]): Promise {\n        let h: { [key: string]: HostModuleDTO[] } = await this.getModulesNodes(modules);\n        let i: { [key: string]: ModuleNetworkInterfaceDTO[] } = await this.getModulesInterfaces(modules);\n        let moduleInfo: SimpleModuleApplication[] = [];\n        await Promise.all(\n            Object.entries(modules).map(async ([key, value]) => {\n                moduleInfo[key] = {\n                    ...value,\n                    hosts: h[key],\n                    interfaces: i[key],\n                }\n            })\n        )\n        return moduleInfo;\n    }\n\n\n\n\n\n    /**\n     * Funzione che esegue il fetch degli host di un modulo di un teatro.\n     * @param modules \n     * @returns {Promise}\n     * @see {moduleService}\n     */\n    async getModulesNodes(modules: SimpleModuleDTO[]): Promise {\n        let h: { [key: string]: HostModuleDTO[] } = {};\n        await Promise.all(\n            Object.entries(modules).map(async ([key, value]) => {\n                let simpleModuleDTO: SimpleModuleDTO = value as SimpleModuleDTO;\n                try {\n                    h[key] = await this.moduleService.getModuleHostByTheaterUUID(simpleModuleDTO.uuid);\n                } catch (e) {\n                    console.error(e);\n                }\n            })\n        )\n        return h;\n    }\n\n\n\n\n\n    /**\n     * Funzione che esegue il fetch delle interfacce di un modulo di un teatro.\n     * @param modules \n     * @returns {Promise}\n     * @see {moduleService}\n     */\n    async getModulesInterfaces(modules: SimpleModuleDTO[]): Promise {\n        let i: { [key: string]: ModuleNetworkInterfaceDTO[] } = {};\n        await Promise.all(\n            Object.entries(modules).map(async ([key, value]) => {\n                let simpleModuleDTO: SimpleModuleDTO = value as SimpleModuleDTO;\n                try {\n                    i[key] = await this.moduleService.getModuleInterfacesByModuleID(simpleModuleDTO.id);\n                } catch (e) {\n                    console.error(e);\n                }\n            })\n        )\n        return i;\n    }\n\n\n\n\n    /**\n     * Funzione che si occupa di collegare le istanze dei moduli del teatro con i dettagli dei singoli moduli (root).\n     * Questa funzione produce direttamente i dati del modulo (sottoforma di nodo) da poter essere inserito nel canvas.\n     * @param theater \n     * @param modules \n     * @returns {{ [name: string]: ModuleInstance }}\n     */\n    parseModuleInstance(theater: TheaterApplication, modules: { [name: string]: SimpleModuleApplication }): { [name: string]: ModuleInstance } {\n        var elements: { [name: string]: ModuleInstance } = {};\n        Object.entries(theater.blueprintFile.node_templates).map(async ([key, value]) => {\n            let moduleInstanceName: string = key;\n            let moduleInstance: ModuleInstanceDTO = value as ModuleInstanceDTO;\n            let smr = modules[moduleInstance.properties.module]\n            // @check -> if module instance has connection with module root & name is correct\n            if (!smr) {\n                for (let key in modules) {\n                    if (key.toLowerCase().includes(moduleInstance.properties.module.toLowerCase())) {\n                        smr = modules[key]; //modulo più probabile\n                    }\n                }\n                console.warn(\"Root module not exists or invalid.\\n Declared into instance: \", moduleInstance.properties.module, \".\\nLinked to\", smr.name, \"into Root module list\")\n            }\n            let newModule: ModuleInstance = createModuleNode(moduleInstanceName, moduleInstance, smr);\n            elements[moduleInstanceName] = newModule;\n        });\n        return elements;\n    }\n\n\n\n\n\n    /**\n     * Funzione che ha lo scopo di valorizzare le connessioni dei moduli\n     * @param theater \n     * @returns {ReteConnection[]}\n     */\n    getModuleConnection(theater: TheaterApplication): ReteConnection[] {\n        var connections_list: ReteConnection[] = [];\n        Object.entries(theater.blueprintFile.node_templates).map(([key, value]) => {\n            let module_name: string = key;\n            let module_content: ModuleInstanceDTO = value as ModuleInstanceDTO;\n            if (module_content.properties.consumer_interfaces_link) {\n                Object.entries(module_content.properties.consumer_interfaces_link).map(([key, value]) => {\n                    connections_list.push(\n                        {\n                            from: module_name,\n                            port_src: value.local_interface,\n                            to: value.module_instance,\n                            port_dst: value.remote_interface\n                        }\n                    );\n                });\n            }\n        });\n        return connections_list;\n    }\n\n\n\n\n    /**\n     * Funzione che ha lo scopo di controllare ed inserire la topologia dei nodi di ogni moduli del teatro.\n     * Questa funzione inizializza già i nodi da poter essere inseriti nel canvas.\n     * @param modulesInfo \n     * @see {createHost}\n     * @see {createSubnet}\n     * @see {createNetwork}\n     */\n    getModulesTopology(modulesInfo: { [name: string]: SimpleModuleApplication }) {\n        Object.entries(modulesInfo).map(([key, value]) => {\n            let moduleInfo: SimpleModuleApplication = value;\n            var occourence: Map = new Map();\n            var connections_list: ReteConnection[] = [];\n            var elements: { [name: string]: ReteHostInfo | ReteSubnetInfo | ReteNetworkInfo } = {};\n            var hn: number = 0, sn: number = 0, nn: number = 0;\n            moduleInfo.hosts.forEach(\n                (node: HostModuleDTO) => {\n                    let host_name: string = node.name;\n                    elements[host_name] = createHost(host_name, node);\n                    hn++; // counter\n                    node.ports.forEach(\n                        (port: HostPortModuleDTO) => {\n                            let port_name: string = port.name;\n                            port.subnets.forEach(\n                                (subnet: SubnetDTO) => { // controllo subnet & network\n                                    let subnet_name: string = subnet.name;\n                                    let network_name: string = subnet.network.name;\n                                    if (!occourence.get(subnet_name)) { // se non è stata considerata la subnet -> add\n                                        elements[subnet_name] = createSubnet(subnet_name, subnet)\n                                        occourence.set(subnet_name, subnet_name) // segno l'occorrenza\n                                        sn++; // counter\n                                        elements[subnet_name].Output.push(network_name) // add output port to sub\n\n                                        if (!occourence.get(network_name)) { // se non è stata considerata la network -> add\n                                            elements[network_name] = createNetwork(network_name, moduleInfo.interfaces);\n                                            occourence.set(network_name, network_name); // segno l'occorrenza\n                                            nn++; // counter\n                                        }\n                                        elements[network_name].Input.push(subnet_name) // add input port to net\n\n                                        connections_list.push( // add connection sub->net\n                                            {\n                                                from: subnet_name,\n                                                port_src: network_name,\n                                                to: network_name,\n                                                port_dst: subnet_name\n                                            }\n                                        )\n                                    }\n                                    elements[host_name].Output.push(port_name) // add output port to host\n                                    connections_list.push( // add connection host->sub\n                                        {\n                                            from: host_name,\n                                            port_src: port_name,\n                                            to: subnet_name,\n                                            port_dst: StaticValue.SubnetOutput\n                                        }\n                                    )\n                                }\n                            )\n                        }\n                    )\n                }\n            )\n            // assign value to module\n            moduleInfo.topology = {\n                connection: connections_list,\n                elements: elements\n            };\n            moduleInfo.host_number = hn;\n            moduleInfo.subnet_number = sn;\n            moduleInfo.network_number = nn;\n        });\n    }\n\n\n\n\n\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"injectables/ParseService.html":{"url":"injectables/ParseService.html","title":"injectable - ParseService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ParseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/application/parse/parse.service.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Servizio che ha lo scopo di captare i dati provenienti o meno dal server e convertirli in un formato comprensibile all'applacazione e al canvas.\n\n            \n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                    Opzionale\n                                mocked\n                            \n                        \n                    \n                \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                parseFlavorForModuleComposer\n                            \n                            \n                                    Async\n                                parseModuleForModuleVisualizer\n                            \n                            \n                                    Async\n                                parseModuleForTheaterComposer\n                            \n                            \n                                    Async\n                                parseTheaterForTheaterVisualizer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Costruttore\n        \n            \n                \n                    \nconstructor(theaterService: TheaterService, moduleService: ModuleService, flavorService: FlavorService)\n                    \n                \n                        \n                            \n                                Definito in src/app/services/application/parse/parse.service.ts:27\n                            \n                        \n\n                \n                    \n                            Costrutture servizio parsing.\n\n                            \n                                    Parametri :\n                                    \n                                        \n                                            \n                                                Nome\n                                                    Tipo\n                                                Opzionale\n                                            \n                                        \n                                        \n                                                \n                                                        theaterService\n                                                  \n                                                        \n                                                                        TheaterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        moduleService\n                                                  \n                                                        \n                                                                        ModuleService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        flavorService\n                                                  \n                                                        \n                                                                        FlavorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        parseFlavorForModuleComposer\n                        \n                    \n                \n            \n            \n                \n                    \n                    parseFlavorForModuleComposer()\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/parse/parse.service.ts:113\n                \n            \n\n\n            \n                \n                    Funzione che si occupa del parsing dei flavor per la costruzione dei moduli\nSee {PerseDataForModuleComposer}\nSee {MockedAllFlavors}\n\n\n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        parseModuleForModuleVisualizer\n                        \n                    \n                \n            \n            \n                \n                    \n                    parseModuleForModuleVisualizer(id: string | number)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/parse/parse.service.ts:96\n                \n            \n\n\n            \n                \n                    Funzione che si occupa del parsing del modulo per la visualizzazione\nSee {PerseDataForModuleVisualizer}\nSee {MockedModule}\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            string | number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        parseModuleForTheaterComposer\n                        \n                    \n                \n            \n            \n                \n                    \n                    parseModuleForTheaterComposer()\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/parse/parse.service.ts:79\n                \n            \n\n\n            \n                \n                    Funzione che si occupa del parsing dei moduli per la composizione del teatro.\nSee {PerseDataForTheaterComposer}\nSee {MockedAllModules}\n\n\n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        parseTheaterForTheaterVisualizer\n                        \n                    \n                \n            \n            \n                \n                    \n                    parseTheaterForTheaterVisualizer(id: string | number)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/parse/parse.service.ts:63\n                \n            \n\n\n            \n                \n                    Funzione che si occupa del parsing del teatro per la visualizzazione.\nSee {ParseDataForTheaterVisualizer}\nSee {MockedTheater}\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            string | number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        mocked\n                        \n                    \n                \n            \n                \n                    \n                        Valore predefinito : environment.mocked\n                    \n                \n                    \n                        \n                                Definito in src/app/services/application/parse/parse.service.ts:27\n                        \n                    \n\n            \n                \n                    Variabile che contiene l'opzione di mock dei dati.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { TheaterService } from '../../api/theater.service';\nimport { ModuleService } from '../../api/module.service';\nimport {  ModuleInstance, TheaterApplication, ModuleApplication, FlavorApplication } from '../../modelsApplication/applicationModels';\nimport { FlavorService } from '../../api/flavor.service';\nimport { ParseDataForTheaterVisualizer } from './parseDataForTheaterVisualizer';\nimport { PerseDataForTheaterComposer } from './perseDataForTheaterComposer';\nimport { PerseDataForModuleVisualizer } from './perseDataForModuleVisualizer';\nimport { PerseDataForModuleComposer } from './perseDataForModuleComposer';\nimport { MockedTheater } from '../../mock/dataset-theaterVisualizer/TVdata';\nimport { MockedModule } from '../../mock/dataset-moduleVisualizer/MVdata';\nimport { MockedAllFlavors } from '../../mock/dataset-moduleDesigner/MDdata';\nimport { MockedAllModules } from '../../mock/dataset-theaterDesigner/TDdata';\nimport { environment } from 'src/environments/environment';\n\n/**\n * Servizio che ha lo scopo di captare i dati provenienti o meno dal server e convertirli in un formato comprensibile all'applacazione e al canvas.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ParseService {\n\n  /**\n   * Variabile che contiene l'opzione di mock dei dati.\n   */\n  mocked?=environment.mocked;\n\n\n\n\n\n\n\n\n  \n  /**\n   * Costrutture servizio parsing.\n   * @param theaterService \n   * @param moduleService \n   * @param flavorService \n   */\n  constructor(\n    private theaterService: TheaterService,\n    private moduleService: ModuleService,\n    private flavorService: FlavorService\n  ) {\n  }\n\n\n\n\n\n  // parsing type\n\n  /**\n   * Funzione che si occupa del parsing del teatro per la visualizzazione.\n   * @param id \n   * @returns {Promise}\n   * @see {ParseDataForTheaterVisualizer}\n   * @see {MockedTheater}\n   */\n  async parseTheaterForTheaterVisualizer(id: string | number): Promise {\n    if (this.mocked)\n      return (await MockedTheater(id) as unknown as TheaterApplication)\n    else\n      return await new ParseDataForTheaterVisualizer(this.theaterService, this.moduleService).parseTheaterForTheaterVisualizer(id);\n  }\n\n\n\n\n  /**\n   * Funzione che si occupa del parsing dei moduli per la composizione del teatro.\n   * @returns { Promise }\n   * @see {PerseDataForTheaterComposer}\n   * @see {MockedAllModules}\n   */\n  async parseModuleForTheaterComposer(): Promise {\n    if (this.mocked)\n      return await MockedAllModules() as unknown as { [name: string]: ModuleInstance }\n    else\n      return await new PerseDataForTheaterComposer(this.moduleService).parseModuleForTheaterComposer();\n  }\n\n\n\n\n  /**\n   * Funzione che si occupa del parsing del modulo per la visualizzazione\n   * @param id \n   * @returns {Promise}\n   * @see {PerseDataForModuleVisualizer}\n   * @see {MockedModule}\n   */\n  async parseModuleForModuleVisualizer(id: string | number): Promise {\n    if (this.mocked)\n      return (await MockedModule(id) as unknown as ModuleApplication)\n    else\n      return await new PerseDataForModuleVisualizer(this.moduleService).parseModuleForModuleVisualizer(id);\n  }\n\n\n\n\n\n  /**\n   * Funzione che si occupa del parsing dei flavor per la costruzione dei moduli\n   * @returns {Promise}\n   * @see {PerseDataForModuleComposer}\n   * @see {MockedAllFlavors}\n   */\n  async parseFlavorForModuleComposer(): Promise {\n    if (this.mocked)\n      return await MockedAllFlavors() as unknown as FlavorApplication[]\n    else\n      return await new PerseDataForModuleComposer(this.flavorService).parseFlavorForModuleComposer();\n  }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/PerseDataForModuleComposer.html":{"url":"classes/PerseDataForModuleComposer.html","title":"class - PerseDataForModuleComposer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  PerseDataForModuleComposer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/application/parse/perseDataForModuleComposer.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Elemento che ha lo scopo di eseguire il fetching ed il parsing dei dati per la costruzione del modulo.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                parseFlavor\n                            \n                            \n                                    Async\n                                parseFlavorForModuleComposer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Costruttore\n        \n            \n                \n                    \nconstructor(flavorService: FlavorService)\n                    \n                \n                        \n                            \n                                Definito in src/app/services/application/parse/perseDataForModuleComposer.ts:9\n                            \n                        \n\n                \n                    \n                            Costrutture della componente-\n\n                            \n                                    Parametri :\n                                    \n                                        \n                                            \n                                                Nome\n                                                    Tipo\n                                                Opzionale\n                                            \n                                        \n                                        \n                                                \n                                                        flavorService\n                                                  \n                                                        \n                                                                        FlavorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        parseFlavor\n                        \n                    \n                \n            \n            \n                \nparseFlavor(flavorDTO: FlavorDTO[])\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/parse/perseDataForModuleComposer.ts:41\n                \n            \n\n\n            \n                \n                    Funzione che si occupa di eseguire il parsing dei flavor.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    flavorDTO\n                                    \n                                                FlavorDTO[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FlavorApplication[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        parseFlavorForModuleComposer\n                        \n                    \n                \n            \n            \n                \n                    \n                    parseFlavorForModuleComposer()\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/parse/perseDataForModuleComposer.ts:27\n                \n            \n\n\n            \n                \n                    Funzione che esegue il fetching ed il parsing dei dati flavor.\nSee {flavorService}\nSee {parseFlavor}\n\n\n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { FlavorService } from '../../api/flavor.service';\nimport { FlavorApplication } from '../../modelsApplication/applicationModels';\nimport { FlavorDTO } from '../../modelsDTO/falvorDTO';\n\n\n/**\n * Elemento che ha lo scopo di eseguire il fetching ed il parsing dei dati per la costruzione del modulo.\n */\nexport class PerseDataForModuleComposer {\n\n\n    /**\n     * Costrutture della componente-\n     * @param flavorService \n     */\n    constructor(private flavorService: FlavorService) {\n    }\n\n\n\n    /**\n     * Funzione che esegue il fetching ed il parsing dei dati flavor.\n     * @returns {Promise}\n     * @see {flavorService}\n     * @see {parseFlavor}\n     */\n    async parseFlavorForModuleComposer(): Promise {\n        let flavorDTO: FlavorDTO[] = await this.flavorService.getAllFlavor();\n        let flavorApplication: FlavorApplication[] = this.parseFlavor(flavorDTO);\n        return flavorApplication;\n    }\n\n\n\n\n    /**\n     * Funzione che si occupa di eseguire il parsing dei flavor.\n     * @param flavorDTO\n     * @returns { FlavorApplication[] }\n     */\n    parseFlavor(flavorDTO: FlavorDTO[]): FlavorApplication[] {\n        let fa: FlavorApplication[] = []\n        flavorDTO.forEach(f => {\n            fa.push({\n                flavorName: f.name,\n                cpu: f.cpu,\n                ram: f.ram,\n                disk: f.disk,\n            })\n        })\n        return fa;\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/PerseDataForModuleVisualizer.html":{"url":"classes/PerseDataForModuleVisualizer.html","title":"class - PerseDataForModuleVisualizer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  PerseDataForModuleVisualizer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/application/parse/perseDataForModuleVisualizer.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Elemento che ha lo scopo di eseguire il fetching ed il parsing dei dati per la costruzione del modulo.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getMainModuleDetails\n                            \n                            \n                                    Async\n                                getMainModuleInterfaces\n                            \n                            \n                                    Async\n                                getMainModuleNodes\n                            \n                            \n                                getMainModuleTopology\n                            \n                            \n                                    Async\n                                parseMainModule\n                            \n                            \n                                    Async\n                                parseModuleForModuleVisualizer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Costruttore\n        \n            \n                \n                    \nconstructor(moduleService: ModuleService)\n                    \n                \n                        \n                            \n                                Definito in src/app/services/application/parse/perseDataForModuleVisualizer.ts:16\n                            \n                        \n\n                \n                    \n                            Costruttore della componente.\n\n                            \n                                    Parametri :\n                                    \n                                        \n                                            \n                                                Nome\n                                                    Tipo\n                                                Opzionale\n                                            \n                                        \n                                        \n                                                \n                                                        moduleService\n                                                  \n                                                        \n                                                                        ModuleService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getMainModuleDetails\n                        \n                    \n                \n            \n            \n                \n                    \n                    getMainModuleDetails(module: ModuleDTO)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/parse/perseDataForModuleVisualizer.ts:71\n                \n            \n\n\n            \n                \n                    Funzione che prende i dati dei nodi e interfacce del modulo e le collega ad esso.\nSee {getMainModuleNodes}\nSee {getMainModuleInterfaces}\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    module\n                                    \n                                                ModuleDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getMainModuleInterfaces\n                        \n                    \n                \n            \n            \n                \n                    \n                    getMainModuleInterfaces(module: ModuleDTO)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/parse/perseDataForModuleVisualizer.ts:115\n                \n            \n\n\n            \n                \n                    Funzione che segue il fetching delle intefracce del modulo.\nSee {moduleService}\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    module\n                                    \n                                                ModuleDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getMainModuleNodes\n                        \n                    \n                \n            \n            \n                \n                    \n                    getMainModuleNodes(module: ModuleDTO)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/parse/perseDataForModuleVisualizer.ts:96\n                \n            \n\n\n            \n                \n                    Funzione che segue il fetching degli host del modulo.\nSee {moduleService}\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    module\n                                    \n                                                ModuleDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMainModuleTopology\n                        \n                    \n                \n            \n            \n                \ngetMainModuleTopology(moduleInfo: ModuleApplication)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/parse/perseDataForModuleVisualizer.ts:136\n                \n            \n\n\n            \n                \n                    Funzione che ha lo scopo di collegare, inizializzare e parserizzare i nodi del modulo e strutturare la topologia per la visualizzazione su canvas.\nCrea anche direttamente i nodi per il rendering dell'editor.\nSee {createHost}\nSee {createSubnet}\nSee {createNetwork}\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    moduleInfo\n                                    \n                                                ModuleApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        parseMainModule\n                        \n                    \n                \n            \n            \n                \n                    \n                    parseMainModule(id: string | number)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/parse/perseDataForModuleVisualizer.ts:54\n                \n            \n\n\n            \n                \n                    Funzione che esegue il fetching e il parsing dei dati del modulo.\nSi procura anche i dati di dettaglio sui nodi e topologie.\nSee {getModuleByID}\nSee {getMainModuleDetails}\nSee {getMainModuleTopology}\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            string | number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        parseModuleForModuleVisualizer\n                        \n                    \n                \n            \n            \n                \n                    \n                    parseModuleForModuleVisualizer(id: string | number)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/parse/perseDataForModuleVisualizer.ts:35\n                \n            \n\n\n            \n                \n                    Funzione che ritorna il modulo parserizzato per la visualizzazione.\nSee {parseMainModule}\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            string | number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ModuleService } from '../../api/module.service';\nimport { ModuleNetworkInterfaceDTO, ModuleDTO } from '../../modelsDTO/moduleDTO';\nimport {ReteConnection, NodeTopologyElement, ModuleApplication } from '../../modelsApplication/applicationModels';\nimport { HostModuleDTO, HostPortModuleDTO } from '../../modelsDTO/hostDTO';\nimport { SubnetDTO } from '../../modelsDTO/networkDTO';\nimport {  ReteHostInfo } from 'src/app/rete-settings/nodes/rete-nodes/host/hostNode';\nimport {  ReteNetworkInfo } from 'src/app/rete-settings/nodes/rete-nodes/network/networkNode';\nimport { ReteSubnetInfo } from 'src/app/rete-settings/nodes/rete-nodes/subnet/subnetNode';\nimport {  StaticValue } from 'src/app/models/appType';\nimport { createHost, createSubnet, createNetwork } from './parseCommonElement';\n\n\n/**\n * Elemento che ha lo scopo di eseguire il fetching ed il parsing dei dati per la costruzione del modulo.\n */\nexport class PerseDataForModuleVisualizer {\n\n\n    /**\n     * Costruttore della componente.\n     * @param moduleService \n     */\n    constructor(private moduleService: ModuleService) {\n    }\n\n\n\n\n    /**\n     * Funzione che ritorna il modulo parserizzato per la visualizzazione.\n     * @param id \n     * @returns {Promise }\n     * @see {parseMainModule}\n     */\n    async parseModuleForModuleVisualizer(id: string | number): Promise {\n        let moduleDTO: ModuleDTO;\n        let module: ModuleApplication;\n        [moduleDTO, module] = await this.parseMainModule(id);\n        return module;\n    }\n\n\n\n\n    /**\n     * Funzione che esegue il fetching e il parsing dei dati del modulo.\n     * Si procura anche i dati di dettaglio sui nodi e topologie.\n     * @param id \n     * @returns {Promise}\n     * @see {getModuleByID}\n     * @see {getMainModuleDetails}\n     * @see {getMainModuleTopology}\n     */\n    async parseMainModule(id: string | number): Promise {\n        let module: ModuleDTO = await this.moduleService.getModuleByID(id);\n        let parsedModule: ModuleApplication = await this.getMainModuleDetails(module)\n        this.getMainModuleTopology(parsedModule);\n        return [module, parsedModule];\n    }\n\n\n\n\n    /**\n     * Funzione che prende i dati dei nodi e interfacce del modulo e le collega ad esso.\n     * @param module \n     * @returns {Promise }\n     * @see {getMainModuleNodes}\n     * @see {getMainModuleInterfaces}\n     */\n    async getMainModuleDetails(module: ModuleDTO): Promise {\n        let h: HostModuleDTO[] = await this.getMainModuleNodes(module);\n        let i: ModuleNetworkInterfaceDTO[] = await this.getMainModuleInterfaces(module);\n        let moduleInfo2: ModuleApplication = {\n            imports: [],\n            ...module,\n            hosts: h,\n            interfaces: i,\n            host_number: 0,\n            subnet_number: 0,\n            network_number: 0,\n            topology: new NodeTopologyElement\n        };\n        return moduleInfo2;\n    }\n\n\n\n\n    /**\n     * Funzione che segue il fetching degli host del modulo.\n     * @param module \n     * @returns {Promise}\n     * @see {moduleService}\n     */\n    async getMainModuleNodes(module: ModuleDTO): Promise {\n        let h: HostModuleDTO[] = undefined;\n        try {\n            h = await this.moduleService.getModuleHostByTheaterUUID(module.uuid);\n        } catch (e) {\n            console.error(e);\n        }\n        return h;\n    }\n\n\n\n\n    /**\n     * Funzione che segue il fetching delle intefracce del modulo.\n     * @param module \n     * @returns {Promise}\n     * @see {moduleService}\n     */\n    async getMainModuleInterfaces(module: ModuleDTO): Promise {\n        let i: ModuleNetworkInterfaceDTO[] = [];\n        try {\n            i = await this.moduleService.getModuleInterfacesByModuleID(module.id);\n        } catch (e) {\n            console.error(e);\n        }\n        return i;\n    }\n\n\n\n\n    /**\n     * Funzione che ha lo scopo di collegare, inizializzare e parserizzare i nodi del modulo e strutturare la topologia per la visualizzazione su canvas.\n     * Crea anche direttamente i nodi per il rendering dell'editor.\n     * @param moduleInfo \n     * @see {createHost}\n     * @see {createSubnet}\n     * @see {createNetwork}\n     */\n    getMainModuleTopology(moduleInfo: ModuleApplication) {\n        var occourence: Map = new Map();\n        var connections_list: ReteConnection[] = [];\n        var elements: { [name: string]: ReteHostInfo | ReteSubnetInfo | ReteNetworkInfo } = {};\n        var hn: number = 0, sn: number = 0, nn: number = 0;\n        moduleInfo.hosts.forEach(\n            (node: HostModuleDTO) => {\n                let host_name: string = node.name;\n                elements[host_name] = createHost(host_name, node);\n                hn++; // counter\n                node.ports.forEach(\n                    (port: HostPortModuleDTO) => {\n                        let port_name: string = port.name;\n                        port.subnets.forEach(\n                            (subnet: SubnetDTO) => { // controllo subnet & network\n                                let subnet_name: string = subnet.name;\n                                let network_name: string = subnet.network.name;\n                                if (!occourence.get(subnet_name)) { // se non è stata considerata la subnet -> add\n                                    elements[subnet_name] = createSubnet(subnet_name, subnet)\n                                    occourence.set(subnet_name, subnet_name) // segno l'occorrenza\n                                    sn++; // counter\n                                    elements[subnet_name].Output.push(network_name) // add output port to sub\n\n                                    if (!occourence.get(network_name)) { // se non è stata considerata la network -> add\n                                        elements[network_name] = createNetwork(network_name, moduleInfo.interfaces);\n                                        occourence.set(network_name, network_name) // segno l'occorrenza\n                                        nn++; // counter\n                                    }\n                                    elements[network_name].Input.push(subnet_name) // add input port to net\n\n                                    connections_list.push( // add connection sub->net\n                                        {\n                                            from: subnet_name,\n                                            port_src: network_name,\n                                            to: network_name,\n                                            port_dst: subnet_name\n                                        }\n                                    )\n                                }\n                                elements[host_name].Output.push(port_name) // add output port to host\n                                connections_list.push( // add connection host->sub\n                                    {\n                                        from: host_name,\n                                        port_src: port_name,\n                                        to: subnet_name,\n                                        port_dst: StaticValue.SubnetOutput\n                                    }\n                                )\n                            }\n                        )\n                    }\n                )\n            }\n        )\n        // assign value to module\n        moduleInfo.topology = {\n            connection: connections_list,\n            elements: elements\n        };\n        moduleInfo.host_number = hn;\n        moduleInfo.subnet_number = sn;\n        moduleInfo.network_number = nn;\n    }\n\n\n\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/PerseDataForTheaterComposer.html":{"url":"classes/PerseDataForTheaterComposer.html","title":"class - PerseDataForTheaterComposer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  PerseDataForTheaterComposer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/application/parse/perseDataForTheaterComposer.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Elemento che ha lo scopo di eseguire il fetching ed il parsing dei dati per la costruzione del teatro.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getModuleDict\n                            \n                            \n                                    Async\n                                getModulesDetails\n                            \n                            \n                                    Async\n                                getModulesInterfaces\n                            \n                            \n                                    Async\n                                getModulesNodes\n                            \n                            \n                                getModulesTopology\n                            \n                            \n                                initEmptyModuleInstance\n                            \n                            \n                                    Async\n                                parseModuleForTheaterComposer\n                            \n                            \n                                    Async\n                                parseModuleList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Costruttore\n        \n            \n                \n                    \nconstructor(moduleService: ModuleService)\n                    \n                \n                        \n                            \n                                Definito in src/app/services/application/parse/perseDataForTheaterComposer.ts:18\n                            \n                        \n\n                \n                    \n                            Costruttore della componente\n\n                            \n                                    Parametri :\n                                    \n                                        \n                                            \n                                                Nome\n                                                    Tipo\n                                                Opzionale\n                                            \n                                        \n                                        \n                                                \n                                                        moduleService\n                                                  \n                                                        \n                                                                        ModuleService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getModuleDict\n                        \n                    \n                \n            \n            \n                \n                    \n                    getModuleDict(modules: SimpleModuleDTO[])\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/parse/perseDataForTheaterComposer.ts:70\n                \n            \n\n\n            \n                \n                    Funzione che si occupa di convertire i moduli in un dizionario.\nQuesta esegue anche le chiamate per reperire i dettagli dei singoli moduli.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    modules\n                                    \n                                            SimpleModuleDTO[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getModulesDetails\n                        \n                    \n                \n            \n            \n                \n                    \n                    getModulesDetails(modules: SimpleModuleDTO[])\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/parse/perseDataForTheaterComposer.ts:89\n                \n            \n\n\n            \n                \n                    Funzione che collega un modulo con i suoi dettagli (nodi e interfacce).\nSee {getModulesNodes}\nSee {getModulesInterfaces}\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    modules\n                                    \n                                            SimpleModuleDTO[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getModulesInterfaces\n                        \n                    \n                \n            \n            \n                \n                    \n                    getModulesInterfaces(modules: SimpleModuleDTO[])\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/parse/perseDataForTheaterComposer.ts:138\n                \n            \n\n\n            \n                \n                    Funzione che esegue il fetching dei dettagli sulle interfacce dei singoli moduli.\nSee {moduleService}\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    modules\n                                    \n                                            SimpleModuleDTO[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getModulesNodes\n                        \n                    \n                \n            \n            \n                \n                    \n                    getModulesNodes(modules: SimpleModuleDTO[])\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/parse/perseDataForTheaterComposer.ts:114\n                \n            \n\n\n            \n                \n                    Funzione che esegue il fetching dei dettagli sugli host dei singoli moduli.\nSee {moduleService}\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    modules\n                                    \n                                            SimpleModuleDTO[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getModulesTopology\n                        \n                    \n                \n            \n            \n                \ngetModulesTopology(modulesInfo: literal type)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/parse/perseDataForTheaterComposer.ts:164\n                \n            \n\n\n            \n                \n                    Funzione che struttura la topologia dei singoli moduli.\nEssa instanzia anche i nodi per poterli inserire direttamente nel canvas.\nSee {createHost}\nSee {createSubnet}\nSee {createNetwork}\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    modulesInfo\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initEmptyModuleInstance\n                        \n                    \n                \n            \n            \n                \ninitEmptyModuleInstance(modules: literal type)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/parse/perseDataForTheaterComposer.ts:240\n                \n            \n\n\n            \n                \n                    Funzione che ha come scopo inizializzare i dati, valori e attributi per il teatro da usare nell'applicazione.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    modules\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        parseModuleForTheaterComposer\n                        \n                    \n                \n            \n            \n                \n                    \n                    parseModuleForTheaterComposer()\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/parse/perseDataForTheaterComposer.ts:36\n                \n            \n\n\n            \n                \n                    Funzione che ritorna un dizionario di moduli utilizzati per la costruzione della topologia del teatro.\nQuesta provvede anche l'instanziazione dei dati per il rendering dei moduli sul canvas.\nSee {parseModuleList}\nSee {initEmptyModuleInstance}\n\n\n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        parseModuleList\n                        \n                    \n                \n            \n            \n                \n                    \n                    parseModuleList()\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/parse/perseDataForTheaterComposer.ts:53\n                \n            \n\n\n            \n                \n                    Funzione che esegue il fetching di tutti i moduli disponibili.\nQuesta funzione ritorna un dizionario degli stessi, annessa anche la topologia.\nSee {moduleService}\nSee {getModuleDict}\nSee {getModulesTopology}\n\n\n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ModuleService } from '../../api/module.service';\nimport { ModuleInstanceDTO, ModuleNetworkInterfaceDTO, SimpleModuleDTO } from '../../modelsDTO/moduleDTO';\nimport { SimpleModuleApplication, ModuleInstance, ReteConnection } from '../../modelsApplication/applicationModels';\nimport { HostModuleDTO, HostPortModuleDTO } from '../../modelsDTO/hostDTO';\nimport { SubnetDTO } from '../../modelsDTO/networkDTO';\nimport { ReteHostInfo } from 'src/app/rete-settings/nodes/rete-nodes/host/hostNode';\nimport { ReteNetworkInfo } from 'src/app/rete-settings/nodes/rete-nodes/network/networkNode';\nimport { ReteSubnetInfo } from 'src/app/rete-settings/nodes/rete-nodes/subnet/subnetNode';\nimport { ModuleType2, StaticValue, ModuleTypeTheater } from 'src/app/models/appType';\nimport { createHost, createSubnet, createNetwork, createModuleNode } from './parseCommonElement';\n\n\n\n/**\n * Elemento che ha lo scopo di eseguire il fetching ed il parsing dei dati per la costruzione del teatro.\n */\nexport class PerseDataForTheaterComposer {\n\n    /**\n     * Costruttore della componente\n     * @param moduleService \n     */\n    constructor(private moduleService: ModuleService) {\n    }\n\n\n\n    /**\n     * Funzione che ritorna un dizionario di moduli utilizzati per la costruzione della topologia del teatro.\n     * Questa provvede anche l'instanziazione dei dati per il rendering dei moduli sul canvas.\n     * @returns {Promise}\n     * @see {parseModuleList}\n     * @see {initEmptyModuleInstance}\n     */\n    async parseModuleForTheaterComposer(): Promise {\n        let modules: { [name: string]: SimpleModuleApplication } = await this.parseModuleList();\n        let moduleInstances: { [name: string]: ModuleInstance } = await this.initEmptyModuleInstance(modules);\n        return moduleInstances\n    }\n\n\n\n\n    /**\n     * Funzione che esegue il fetching di tutti i moduli disponibili.\n     * Questa funzione ritorna un dizionario degli stessi, annessa anche la topologia.\n     * @returns {Promise}\n     * @see {moduleService}\n     * @see {getModuleDict}\n     * @see {getModulesTopology}\n     */\n    async parseModuleList(): Promise {\n        let rowModules: SimpleModuleDTO[] = await this.moduleService.getAllModules();\n        let modules: { [name: string]: SimpleModuleApplication } = await this.getModuleDict(rowModules)\n        this.getModulesTopology(modules);\n        return modules;\n    }\n\n\n\n\n\n    /**\n     * Funzione che si occupa di convertire i moduli in un dizionario.\n     * Questa esegue anche le chiamate per reperire i dettagli dei singoli moduli.\n     * @param modules \n     * @returns { Promise }\n     */\n    async getModuleDict(modules: SimpleModuleDTO[]): Promise {\n        let moduleDict: { [name: string]: SimpleModuleApplication } = {};\n        let modulesApplication: SimpleModuleApplication[] = await this.getModulesDetails(modules);\n        Object.entries(modulesApplication).map(async ([key, value]) => {\n            moduleDict[value.name] = value;\n        });\n        return moduleDict;\n    }\n\n\n\n\n    /**\n     * Funzione che collega un modulo con i suoi dettagli (nodi e interfacce).\n     * @param modules  \n     * @returns {Promise}\n     * @see {getModulesNodes}\n     * @see {getModulesInterfaces}\n     */\n    async getModulesDetails(modules: SimpleModuleDTO[]): Promise {\n        let h: { [key: string]: HostModuleDTO[] } = await this.getModulesNodes(modules);\n        let i: { [key: string]: ModuleNetworkInterfaceDTO[] } = await this.getModulesInterfaces(modules);\n        let moduleInfo: SimpleModuleApplication[] = [];\n        await Promise.all(\n            Object.entries(modules).map(async ([key, value]) => {\n                moduleInfo[key] = {\n                    ...value,\n                    hosts: h[key],\n                    interfaces: i[key],\n                }\n            })\n        )\n        return moduleInfo;\n    }\n\n\n\n\n    /**\n     * Funzione che esegue il fetching dei dettagli sugli host dei singoli moduli.\n     * @param modules \n     * @returns {Promise }\n     * @see {moduleService}\n     */\n    async getModulesNodes(modules: SimpleModuleDTO[]): Promise {\n        let h: { [key: string]: HostModuleDTO[] } = {};\n        await Promise.all(\n            Object.entries(modules).map(async ([key, value]) => {\n                let simpleModuleDTO: SimpleModuleDTO = value as SimpleModuleDTO;\n                try {\n                    h[key] = await this.moduleService.getModuleHostByTheaterUUID(simpleModuleDTO.uuid);\n                } catch (e) {\n                    console.error(e);\n                }\n            })\n        )\n        return h;\n    }\n\n\n\n\n    /**\n     * Funzione che esegue il fetching dei dettagli sulle interfacce dei singoli moduli.\n     * @param modules \n     * @returns {Promise }\n     * @see {moduleService}\n     */\n    async getModulesInterfaces(modules: SimpleModuleDTO[]): Promise {\n        let i: { [key: string]: ModuleNetworkInterfaceDTO[] } = {};\n        await Promise.all(\n            Object.entries(modules).map(async ([key, value]) => {\n                let simpleModuleDTO: SimpleModuleDTO = value as SimpleModuleDTO;\n                try {\n                    i[key] = await this.moduleService.getModuleInterfacesByModuleID(simpleModuleDTO.id);\n                } catch (e) {\n                    console.error(e);\n                }\n            })\n        )\n        return i;\n    }\n\n\n\n\n    /**\n     * Funzione che struttura la topologia dei singoli moduli. \n     * Essa instanzia anche i nodi per poterli inserire direttamente nel canvas.\n     * @param modulesInfo \n     * @see {createHost}\n     * @see {createSubnet}\n     * @see {createNetwork}\n     */\n    getModulesTopology(modulesInfo: { [name: string]: SimpleModuleApplication }) {\n        Object.entries(modulesInfo).map(([key, value]) => {\n            let moduleInfo: SimpleModuleApplication = value;\n            var occourence: Map = new Map();\n            var connections_list: ReteConnection[] = [];\n            var elements: { [name: string]: ReteHostInfo | ReteSubnetInfo | ReteNetworkInfo } = {};\n            var hn: number = 0, sn: number = 0, nn: number = 0;\n            moduleInfo.hosts.forEach(\n                (node: HostModuleDTO) => {\n                    let host_name: string = node.name;\n                    elements[host_name] = createHost(host_name, node);\n                    hn++; // counter\n                    node.ports.forEach(\n                        (port: HostPortModuleDTO) => {\n                            let port_name: string = port.name;\n                            port.subnets.forEach(\n                                (subnet: SubnetDTO) => { // controllo subnet & network\n                                    let subnet_name: string = subnet.name;\n                                    let network_name: string = subnet.network.name;\n                                    if (!occourence.get(subnet_name)) { // se non è stata considerata la subnet -> add\n                                        elements[subnet_name] = createSubnet(subnet_name, subnet)\n                                        occourence.set(subnet_name, subnet_name) // segno l'occorrenza\n                                        sn++; // counter\n                                        elements[subnet_name].Output.push(network_name) // add output port to sub\n\n                                        if (!occourence.get(network_name)) { // se non è stata considerata la network -> add\n                                            elements[network_name] = createNetwork(network_name, moduleInfo.interfaces);\n                                            occourence.set(network_name, network_name); // segno l'occorrenza\n                                            nn++; // counter\n                                        }\n                                        elements[network_name].Input.push(subnet_name) // add input port to net\n\n                                        connections_list.push( // add connection sub->net\n                                            {\n                                                from: subnet_name,\n                                                port_src: network_name,\n                                                to: network_name,\n                                                port_dst: subnet_name\n                                            }\n                                        )\n                                    }\n                                    elements[host_name].Output.push(port_name) // add output port to host\n                                    connections_list.push( // add connection host->sub\n                                        {\n                                            from: host_name,\n                                            port_src: port_name,\n                                            to: subnet_name,\n                                            port_dst: StaticValue.SubnetOutput\n                                        }\n                                    )\n                                }\n                            )\n                        }\n                    )\n                }\n            )\n            // assign value to module\n            moduleInfo.topology = {\n                connection: connections_list,\n                elements: elements\n            };\n            moduleInfo.host_number = hn;\n            moduleInfo.subnet_number = sn;\n            moduleInfo.network_number = nn;\n        });\n    }\n\n\n\n\n\n    /**\n     * Funzione che ha come scopo inizializzare i dati, valori e attributi per il teatro da usare nell'applicazione.\n     * @param modules \n     * @returns \n     */\n    initEmptyModuleInstance(modules: { [name: string]: SimpleModuleApplication }): { [name: string]: ModuleInstance } {\n        let x: { [name: string]: ModuleInstance } = {};\n        Object.entries(modules).map(async ([key, value]) => {\n            let smr: SimpleModuleApplication = value as SimpleModuleApplication;\n            if (ModuleType2[smr.type]) {  // se è tra i tipi definiti\n                let mit: ModuleInstanceDTO = {\n                    properties: {\n                        description: '',\n                        area: '',\n                        module: smr.name,\n                        version: undefined,\n                        sequence: '',\n                        consumer_interfaces_link: []\n                    },\n                    type: ModuleTypeTheater[ModuleType2[value.type]],\n                };\n\n                let ma: ModuleInstance = createModuleNode(undefined, mit, smr)\n                // x[\"Instance \"+key] = ma;\n                x[key] = ma;\n            }\n        });\n        return x;\n    }\n\n\n\n\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/PortSimpleData.html":{"url":"classes/PortSimpleData.html","title":"class - PortSimpleData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  PortSimpleData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsExport/moduleExport.ts\n        \n\n\n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                relationships\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        relationships\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         RelationshipsExport[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:92\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         PortTypeExport\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:91\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ModeTypeExport, ModuleTypeExport, NetworkTypeExport, NodeTypeExport, PortTypeExport, RelationshipsTypeExport, SubnetTypeExport, ToscaDefinitionType } from \"./TypeExport\"\n\n\n/**\n * Classe utilizzata per l'export. \n * Contiene le informazioni generali per il modulo che devono esserci nello standard Tosca.\n */\nexport class ModuleExport {\n    tosca_definitions_version: ToscaDefinitionType\n    description: string\n    imports: string[]\n    node_templates: { [name: string]: ModuleSimpleData | NodeSimpleData | PortSimpleData | NetworkSimpleData | SubnetSimpleData }\n    dsl_definition: any | null; //future\n    capabilites: any | null //future\n    outputs: any | null //future\n}\n\n\nexport class ModuleSimpleData {\n    type: ModuleTypeExport\n    properties: PropertiesMSD\n}\nexport class PropertiesMSD {\n    mode: ModeTypeExport\n    description: string\n    version: string | number\n    constraints: ConstraintsMSD\n    interface_networks: {\n        providers: InterfaceNetworksProvider[]\n        consumers: InterfaceNetworksConsumer[]\n    }\n    virtual_machines: VirtualMachine[]\n}\nexport class ConstraintsMSD {\n    interface_constraints: InterfaceConstraints[]\n    module_constraints: ModuleConstraints[]\n    network_constraints: NetworkConstraints[]\n}\nexport class InterfaceConstraints {\n    local_interface: string\n    multiple_mode: boolean = false //future\n    module_name: string\n    compatibility: string = \"1.0\" // future\n    remote_interface: string\n}\nexport class ModuleConstraints {\n}\nexport class NetworkConstraints {\n}\n\nexport class InterfaceNetworksProvider {\n    interface: string\n    network: string\n    tag: string\n    subnets: SubnetExport[]\n}\nexport class InterfaceNetworksConsumer {\n    interface: string\n    network: string\n    tag: string\n    subnets: SubnetExport[]\n}\n\nexport class VirtualMachine {\n    virtual_machine: string\n    ports: VirtualMachinePorts[]\n}\nexport class VirtualMachinePorts {\n    port: string\n    network: string\n    subnets: SubnetExport[]\n}\n\nexport class SubnetExport {\n    subnet: string;\n}\n\nexport class NodeSimpleData {\n    type: NodeTypeExport\n    properties: any | null // future\n    interfaces: any | null // future\n    relationships: RelationshipsExport[]\n}\n\nexport class RelationshipsExport {\n    type: RelationshipsTypeExport\n    target: string\n}\n\nexport class PortSimpleData {\n    type: PortTypeExport\n    relationships: RelationshipsExport[]\n}\n\nexport class NetworkSimpleData {\n    type: NetworkTypeExport\n    properties: PropertiesNSD\n}\nexport class PropertiesNSD {\n    openstack_config?: any | null // future\n    use_external_resource?: boolean | null // future\n    resource_id?: any | null // future\n}\n\n\nexport class SubnetSimpleData {\n    type: SubnetTypeExport\n    relationships: RelationshipsExport[]\n    properties: PropertiesSSD\n}\nexport class PropertiesSSD {\n    subnet?: {\n        ip_version: string | number\n        cidr: string\n        enable_dhcp: boolean\n        gateway_ip?: any | null // future\n    }\n    openstack_config?: any | null // future\n    use_external_resource?: boolean | null // future\n    resource_id?: any | null // future\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/PropertiesMISD.html":{"url":"classes/PropertiesMISD.html","title":"class - PropertiesMISD","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  PropertiesMISD\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsExport/theaterExport.ts\n        \n\n\n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                area\n                            \n                            \n                                consumer_interface_link\n                            \n                            \n                                module\n                            \n                            \n                                sequence\n                            \n                            \n                                    Opzionale\n                                sources\n                            \n                            \n                                version\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        area\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/theaterExport.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        consumer_interface_link\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ConsumerInterfaceLinkExport[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/theaterExport.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/theaterExport.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sequence\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/theaterExport.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        sources\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         SourceExport[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/theaterExport.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/theaterExport.ts:40\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ModeTypeExport, ModuleTypeExport, TheaterTypeExport, ToscaDefinitionType } from \"./TypeExport\"\n\n/**\n * Classe utilizzata per l'export. \n * Contiene le informazioni generali per il teatro che devono esserci nello standard Tosca.\n */\nexport class TheaterExport {\n    tosca_definitions_version: ToscaDefinitionType\n    description: string\n    imports: string[]\n    node_templates: { [name: string]: TheaterSimpleData | ModuleInstanceSimpleData }\n}\n\nexport class TheaterSimpleData {\n    type: TheaterTypeExport\n    properties: PropertiesTSD\n}\nexport class PropertiesTSD {\n    version: string | number\n    description: string\n    mode: ModeTypeExport\n    author: string\n    tags: TagsExport[]\n    areas: AreaExport[]\n}\nexport class TagsExport {\n    tag: string\n}\nexport class AreaExport {\n    area: string\n    description: string\n}\n\nexport class ModuleInstanceSimpleData {\n    type: ModuleTypeExport\n    properties: PropertiesMISD\n}\nexport class PropertiesMISD{\n    module: string\n    version: string | number\n    area: string\n    sequence: number\n    sources?: SourceExport[]\n    consumer_interface_link: ConsumerInterfaceLinkExport[]\n}\nexport class SourceExport{\n    module_instance: string\n    host:string\n    interfaces: string[]\n}\nexport class ConsumerInterfaceLinkExport{\n    local_interface: string\n    module_interface:string\n    remote_interface:string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/PropertiesMSD.html":{"url":"classes/PropertiesMSD.html","title":"class - PropertiesMSD","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  PropertiesMSD\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsExport/moduleExport.ts\n        \n\n\n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                constraints\n                            \n                            \n                                description\n                            \n                            \n                                interface_networks\n                            \n                            \n                                mode\n                            \n                            \n                                version\n                            \n                            \n                                virtual_machines\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        constraints\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ConstraintsMSD\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        interface_networks\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     literal type\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ModeTypeExport\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        virtual_machines\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         VirtualMachine[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:32\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ModeTypeExport, ModuleTypeExport, NetworkTypeExport, NodeTypeExport, PortTypeExport, RelationshipsTypeExport, SubnetTypeExport, ToscaDefinitionType } from \"./TypeExport\"\n\n\n/**\n * Classe utilizzata per l'export. \n * Contiene le informazioni generali per il modulo che devono esserci nello standard Tosca.\n */\nexport class ModuleExport {\n    tosca_definitions_version: ToscaDefinitionType\n    description: string\n    imports: string[]\n    node_templates: { [name: string]: ModuleSimpleData | NodeSimpleData | PortSimpleData | NetworkSimpleData | SubnetSimpleData }\n    dsl_definition: any | null; //future\n    capabilites: any | null //future\n    outputs: any | null //future\n}\n\n\nexport class ModuleSimpleData {\n    type: ModuleTypeExport\n    properties: PropertiesMSD\n}\nexport class PropertiesMSD {\n    mode: ModeTypeExport\n    description: string\n    version: string | number\n    constraints: ConstraintsMSD\n    interface_networks: {\n        providers: InterfaceNetworksProvider[]\n        consumers: InterfaceNetworksConsumer[]\n    }\n    virtual_machines: VirtualMachine[]\n}\nexport class ConstraintsMSD {\n    interface_constraints: InterfaceConstraints[]\n    module_constraints: ModuleConstraints[]\n    network_constraints: NetworkConstraints[]\n}\nexport class InterfaceConstraints {\n    local_interface: string\n    multiple_mode: boolean = false //future\n    module_name: string\n    compatibility: string = \"1.0\" // future\n    remote_interface: string\n}\nexport class ModuleConstraints {\n}\nexport class NetworkConstraints {\n}\n\nexport class InterfaceNetworksProvider {\n    interface: string\n    network: string\n    tag: string\n    subnets: SubnetExport[]\n}\nexport class InterfaceNetworksConsumer {\n    interface: string\n    network: string\n    tag: string\n    subnets: SubnetExport[]\n}\n\nexport class VirtualMachine {\n    virtual_machine: string\n    ports: VirtualMachinePorts[]\n}\nexport class VirtualMachinePorts {\n    port: string\n    network: string\n    subnets: SubnetExport[]\n}\n\nexport class SubnetExport {\n    subnet: string;\n}\n\nexport class NodeSimpleData {\n    type: NodeTypeExport\n    properties: any | null // future\n    interfaces: any | null // future\n    relationships: RelationshipsExport[]\n}\n\nexport class RelationshipsExport {\n    type: RelationshipsTypeExport\n    target: string\n}\n\nexport class PortSimpleData {\n    type: PortTypeExport\n    relationships: RelationshipsExport[]\n}\n\nexport class NetworkSimpleData {\n    type: NetworkTypeExport\n    properties: PropertiesNSD\n}\nexport class PropertiesNSD {\n    openstack_config?: any | null // future\n    use_external_resource?: boolean | null // future\n    resource_id?: any | null // future\n}\n\n\nexport class SubnetSimpleData {\n    type: SubnetTypeExport\n    relationships: RelationshipsExport[]\n    properties: PropertiesSSD\n}\nexport class PropertiesSSD {\n    subnet?: {\n        ip_version: string | number\n        cidr: string\n        enable_dhcp: boolean\n        gateway_ip?: any | null // future\n    }\n    openstack_config?: any | null // future\n    use_external_resource?: boolean | null // future\n    resource_id?: any | null // future\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/PropertiesNSD.html":{"url":"classes/PropertiesNSD.html","title":"class - PropertiesNSD","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  PropertiesNSD\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsExport/moduleExport.ts\n        \n\n\n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                    Opzionale\n                                openstack_config\n                            \n                            \n                                    Opzionale\n                                resource_id\n                            \n                            \n                                    Opzionale\n                                use_external_resource\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        openstack_config\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     any | null\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:100\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        resource_id\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     any | null\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:102\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        use_external_resource\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     boolean | null\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:101\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ModeTypeExport, ModuleTypeExport, NetworkTypeExport, NodeTypeExport, PortTypeExport, RelationshipsTypeExport, SubnetTypeExport, ToscaDefinitionType } from \"./TypeExport\"\n\n\n/**\n * Classe utilizzata per l'export. \n * Contiene le informazioni generali per il modulo che devono esserci nello standard Tosca.\n */\nexport class ModuleExport {\n    tosca_definitions_version: ToscaDefinitionType\n    description: string\n    imports: string[]\n    node_templates: { [name: string]: ModuleSimpleData | NodeSimpleData | PortSimpleData | NetworkSimpleData | SubnetSimpleData }\n    dsl_definition: any | null; //future\n    capabilites: any | null //future\n    outputs: any | null //future\n}\n\n\nexport class ModuleSimpleData {\n    type: ModuleTypeExport\n    properties: PropertiesMSD\n}\nexport class PropertiesMSD {\n    mode: ModeTypeExport\n    description: string\n    version: string | number\n    constraints: ConstraintsMSD\n    interface_networks: {\n        providers: InterfaceNetworksProvider[]\n        consumers: InterfaceNetworksConsumer[]\n    }\n    virtual_machines: VirtualMachine[]\n}\nexport class ConstraintsMSD {\n    interface_constraints: InterfaceConstraints[]\n    module_constraints: ModuleConstraints[]\n    network_constraints: NetworkConstraints[]\n}\nexport class InterfaceConstraints {\n    local_interface: string\n    multiple_mode: boolean = false //future\n    module_name: string\n    compatibility: string = \"1.0\" // future\n    remote_interface: string\n}\nexport class ModuleConstraints {\n}\nexport class NetworkConstraints {\n}\n\nexport class InterfaceNetworksProvider {\n    interface: string\n    network: string\n    tag: string\n    subnets: SubnetExport[]\n}\nexport class InterfaceNetworksConsumer {\n    interface: string\n    network: string\n    tag: string\n    subnets: SubnetExport[]\n}\n\nexport class VirtualMachine {\n    virtual_machine: string\n    ports: VirtualMachinePorts[]\n}\nexport class VirtualMachinePorts {\n    port: string\n    network: string\n    subnets: SubnetExport[]\n}\n\nexport class SubnetExport {\n    subnet: string;\n}\n\nexport class NodeSimpleData {\n    type: NodeTypeExport\n    properties: any | null // future\n    interfaces: any | null // future\n    relationships: RelationshipsExport[]\n}\n\nexport class RelationshipsExport {\n    type: RelationshipsTypeExport\n    target: string\n}\n\nexport class PortSimpleData {\n    type: PortTypeExport\n    relationships: RelationshipsExport[]\n}\n\nexport class NetworkSimpleData {\n    type: NetworkTypeExport\n    properties: PropertiesNSD\n}\nexport class PropertiesNSD {\n    openstack_config?: any | null // future\n    use_external_resource?: boolean | null // future\n    resource_id?: any | null // future\n}\n\n\nexport class SubnetSimpleData {\n    type: SubnetTypeExport\n    relationships: RelationshipsExport[]\n    properties: PropertiesSSD\n}\nexport class PropertiesSSD {\n    subnet?: {\n        ip_version: string | number\n        cidr: string\n        enable_dhcp: boolean\n        gateway_ip?: any | null // future\n    }\n    openstack_config?: any | null // future\n    use_external_resource?: boolean | null // future\n    resource_id?: any | null // future\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/PropertiesSSD.html":{"url":"classes/PropertiesSSD.html","title":"class - PropertiesSSD","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  PropertiesSSD\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsExport/moduleExport.ts\n        \n\n\n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                    Opzionale\n                                openstack_config\n                            \n                            \n                                    Opzionale\n                                resource_id\n                            \n                            \n                                    Opzionale\n                                subnet\n                            \n                            \n                                    Opzionale\n                                use_external_resource\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        openstack_config\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     any | null\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:118\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        resource_id\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     any | null\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:120\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        subnet\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     literal type\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:112\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        use_external_resource\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     boolean | null\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:119\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ModeTypeExport, ModuleTypeExport, NetworkTypeExport, NodeTypeExport, PortTypeExport, RelationshipsTypeExport, SubnetTypeExport, ToscaDefinitionType } from \"./TypeExport\"\n\n\n/**\n * Classe utilizzata per l'export. \n * Contiene le informazioni generali per il modulo che devono esserci nello standard Tosca.\n */\nexport class ModuleExport {\n    tosca_definitions_version: ToscaDefinitionType\n    description: string\n    imports: string[]\n    node_templates: { [name: string]: ModuleSimpleData | NodeSimpleData | PortSimpleData | NetworkSimpleData | SubnetSimpleData }\n    dsl_definition: any | null; //future\n    capabilites: any | null //future\n    outputs: any | null //future\n}\n\n\nexport class ModuleSimpleData {\n    type: ModuleTypeExport\n    properties: PropertiesMSD\n}\nexport class PropertiesMSD {\n    mode: ModeTypeExport\n    description: string\n    version: string | number\n    constraints: ConstraintsMSD\n    interface_networks: {\n        providers: InterfaceNetworksProvider[]\n        consumers: InterfaceNetworksConsumer[]\n    }\n    virtual_machines: VirtualMachine[]\n}\nexport class ConstraintsMSD {\n    interface_constraints: InterfaceConstraints[]\n    module_constraints: ModuleConstraints[]\n    network_constraints: NetworkConstraints[]\n}\nexport class InterfaceConstraints {\n    local_interface: string\n    multiple_mode: boolean = false //future\n    module_name: string\n    compatibility: string = \"1.0\" // future\n    remote_interface: string\n}\nexport class ModuleConstraints {\n}\nexport class NetworkConstraints {\n}\n\nexport class InterfaceNetworksProvider {\n    interface: string\n    network: string\n    tag: string\n    subnets: SubnetExport[]\n}\nexport class InterfaceNetworksConsumer {\n    interface: string\n    network: string\n    tag: string\n    subnets: SubnetExport[]\n}\n\nexport class VirtualMachine {\n    virtual_machine: string\n    ports: VirtualMachinePorts[]\n}\nexport class VirtualMachinePorts {\n    port: string\n    network: string\n    subnets: SubnetExport[]\n}\n\nexport class SubnetExport {\n    subnet: string;\n}\n\nexport class NodeSimpleData {\n    type: NodeTypeExport\n    properties: any | null // future\n    interfaces: any | null // future\n    relationships: RelationshipsExport[]\n}\n\nexport class RelationshipsExport {\n    type: RelationshipsTypeExport\n    target: string\n}\n\nexport class PortSimpleData {\n    type: PortTypeExport\n    relationships: RelationshipsExport[]\n}\n\nexport class NetworkSimpleData {\n    type: NetworkTypeExport\n    properties: PropertiesNSD\n}\nexport class PropertiesNSD {\n    openstack_config?: any | null // future\n    use_external_resource?: boolean | null // future\n    resource_id?: any | null // future\n}\n\n\nexport class SubnetSimpleData {\n    type: SubnetTypeExport\n    relationships: RelationshipsExport[]\n    properties: PropertiesSSD\n}\nexport class PropertiesSSD {\n    subnet?: {\n        ip_version: string | number\n        cidr: string\n        enable_dhcp: boolean\n        gateway_ip?: any | null // future\n    }\n    openstack_config?: any | null // future\n    use_external_resource?: boolean | null // future\n    resource_id?: any | null // future\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/PropertiesTSD.html":{"url":"classes/PropertiesTSD.html","title":"class - PropertiesTSD","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  PropertiesTSD\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsExport/theaterExport.ts\n        \n\n\n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                areas\n                            \n                            \n                                author\n                            \n                            \n                                description\n                            \n                            \n                                mode\n                            \n                            \n                                tags\n                            \n                            \n                                version\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        areas\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         AreaExport[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/theaterExport.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        author\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/theaterExport.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/theaterExport.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ModeTypeExport\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/theaterExport.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tags\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         TagsExport[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/theaterExport.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/theaterExport.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ModeTypeExport, ModuleTypeExport, TheaterTypeExport, ToscaDefinitionType } from \"./TypeExport\"\n\n/**\n * Classe utilizzata per l'export. \n * Contiene le informazioni generali per il teatro che devono esserci nello standard Tosca.\n */\nexport class TheaterExport {\n    tosca_definitions_version: ToscaDefinitionType\n    description: string\n    imports: string[]\n    node_templates: { [name: string]: TheaterSimpleData | ModuleInstanceSimpleData }\n}\n\nexport class TheaterSimpleData {\n    type: TheaterTypeExport\n    properties: PropertiesTSD\n}\nexport class PropertiesTSD {\n    version: string | number\n    description: string\n    mode: ModeTypeExport\n    author: string\n    tags: TagsExport[]\n    areas: AreaExport[]\n}\nexport class TagsExport {\n    tag: string\n}\nexport class AreaExport {\n    area: string\n    description: string\n}\n\nexport class ModuleInstanceSimpleData {\n    type: ModuleTypeExport\n    properties: PropertiesMISD\n}\nexport class PropertiesMISD{\n    module: string\n    version: string | number\n    area: string\n    sequence: number\n    sources?: SourceExport[]\n    consumer_interface_link: ConsumerInterfaceLinkExport[]\n}\nexport class SourceExport{\n    module_instance: string\n    host:string\n    interfaces: string[]\n}\nexport class ConsumerInterfaceLinkExport{\n    local_interface: string\n    module_interface:string\n    remote_interface:string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/RelationshipsExport.html":{"url":"classes/RelationshipsExport.html","title":"class - RelationshipsExport","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  RelationshipsExport\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsExport/moduleExport.ts\n        \n\n\n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                target\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:87\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         RelationshipsTypeExport\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:86\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ModeTypeExport, ModuleTypeExport, NetworkTypeExport, NodeTypeExport, PortTypeExport, RelationshipsTypeExport, SubnetTypeExport, ToscaDefinitionType } from \"./TypeExport\"\n\n\n/**\n * Classe utilizzata per l'export. \n * Contiene le informazioni generali per il modulo che devono esserci nello standard Tosca.\n */\nexport class ModuleExport {\n    tosca_definitions_version: ToscaDefinitionType\n    description: string\n    imports: string[]\n    node_templates: { [name: string]: ModuleSimpleData | NodeSimpleData | PortSimpleData | NetworkSimpleData | SubnetSimpleData }\n    dsl_definition: any | null; //future\n    capabilites: any | null //future\n    outputs: any | null //future\n}\n\n\nexport class ModuleSimpleData {\n    type: ModuleTypeExport\n    properties: PropertiesMSD\n}\nexport class PropertiesMSD {\n    mode: ModeTypeExport\n    description: string\n    version: string | number\n    constraints: ConstraintsMSD\n    interface_networks: {\n        providers: InterfaceNetworksProvider[]\n        consumers: InterfaceNetworksConsumer[]\n    }\n    virtual_machines: VirtualMachine[]\n}\nexport class ConstraintsMSD {\n    interface_constraints: InterfaceConstraints[]\n    module_constraints: ModuleConstraints[]\n    network_constraints: NetworkConstraints[]\n}\nexport class InterfaceConstraints {\n    local_interface: string\n    multiple_mode: boolean = false //future\n    module_name: string\n    compatibility: string = \"1.0\" // future\n    remote_interface: string\n}\nexport class ModuleConstraints {\n}\nexport class NetworkConstraints {\n}\n\nexport class InterfaceNetworksProvider {\n    interface: string\n    network: string\n    tag: string\n    subnets: SubnetExport[]\n}\nexport class InterfaceNetworksConsumer {\n    interface: string\n    network: string\n    tag: string\n    subnets: SubnetExport[]\n}\n\nexport class VirtualMachine {\n    virtual_machine: string\n    ports: VirtualMachinePorts[]\n}\nexport class VirtualMachinePorts {\n    port: string\n    network: string\n    subnets: SubnetExport[]\n}\n\nexport class SubnetExport {\n    subnet: string;\n}\n\nexport class NodeSimpleData {\n    type: NodeTypeExport\n    properties: any | null // future\n    interfaces: any | null // future\n    relationships: RelationshipsExport[]\n}\n\nexport class RelationshipsExport {\n    type: RelationshipsTypeExport\n    target: string\n}\n\nexport class PortSimpleData {\n    type: PortTypeExport\n    relationships: RelationshipsExport[]\n}\n\nexport class NetworkSimpleData {\n    type: NetworkTypeExport\n    properties: PropertiesNSD\n}\nexport class PropertiesNSD {\n    openstack_config?: any | null // future\n    use_external_resource?: boolean | null // future\n    resource_id?: any | null // future\n}\n\n\nexport class SubnetSimpleData {\n    type: SubnetTypeExport\n    relationships: RelationshipsExport[]\n    properties: PropertiesSSD\n}\nexport class PropertiesSSD {\n    subnet?: {\n        ip_version: string | number\n        cidr: string\n        enable_dhcp: boolean\n        gateway_ip?: any | null // future\n    }\n    openstack_config?: any | null // future\n    use_external_resource?: boolean | null // future\n    resource_id?: any | null // future\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/ReteConnection.html":{"url":"classes/ReteConnection.html","title":"class - ReteConnection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  ReteConnection\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsApplication/applicationModels.ts\n        \n\n\n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                from\n                            \n                            \n                                port_dst\n                            \n                            \n                                port_src\n                            \n                            \n                                to\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        from\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsApplication/applicationModels.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        port_dst\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsApplication/applicationModels.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        port_src\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsApplication/applicationModels.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        to\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsApplication/applicationModels.ts:54\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ReteHostInfo } from \"src/app/rete-settings/nodes/rete-nodes/host/hostNode\";\nimport { ReteNetworkInfo } from \"src/app/rete-settings/nodes/rete-nodes/network/networkNode\";\nimport { ReteSubnetInfo } from \"src/app/rete-settings/nodes/rete-nodes/subnet/subnetNode\";\nimport { ReteMirroringModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/mirroringModuleInstance/mirroringModuleInstanceNode\";\nimport { ReteTheaterInternalServiceModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/theaterInternalServiceModuleInstance/theaterInternalServiceModuleInstanceNode\";\nimport { ReteTheaterModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/theaterModuleInstance/theaterModuleInstanceNode\";\nimport { FlavorBasicInfo } from \"../modelsDTO/falvorDTO\";\nimport { HostModuleDTO } from \"../modelsDTO/hostDTO\";\nimport { ModuleNetworkInterfaceDTO, ModuleInstancePropertiesDTO, SimpleModuleDTO, TheaterInstancePropertiesDTO, ModuleInstanceDTO, ModuleDTO, SimpleAreaDTO, AreaDTO } from \"../modelsDTO/moduleDTO\";\nimport { TheaterDTO } from \"../modelsDTO/theaterDTO\";\n\n\nexport interface CommonModule {\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n}\n\n\n/**\n * Classe contenente gli attributi utilizzati per le operazioni che coinvolgono i moduli.\n * ps. Questa struttura è prettamente utilizzata nella chiamata relativa al singolo modulo.\n */\nexport class ModuleApplication extends ModuleDTO implements CommonModule {\n    imports: string[] // perchè nell'export yaml è previsto\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n}\n// PER IMPLEMENTAZIONI FUTURE, PER COERENZA, PRENDERE DIRETTAMENTE I SINGOLI NODI DALLA CHIAMATA ESCLUSIVA E NON DA QUELLA CHE RESTITUISCE TUTTI I TEATRI\n/**\n * Classe contenente gli attributi utilizzati per le operazioni che coinvolgono i moduli.\n * ps. Questa struttura è prettamente utilizzata nella chiamata che prende tutti i moduli del teatro.\n */\nexport class SimpleModuleApplication extends SimpleModuleDTO implements CommonModule {\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n}\n\n\nexport class ReteConnection {\n    from: string;\n    port_src: string;\n    to: string;\n    port_dst: string;\n}\n\nexport interface TopologyList {\n    rete: any;\n    topology?: TopologyElement\n}\nexport class TopologyElement {\n    elements: { [name: string]: any };\n    connection: ReteConnection[]\n}\n\n// apptype module topology\n\nexport class NodeTopologyElement implements TopologyElement {\n    elements: { [hostName: string]: ReteHostInfo | ReteSubnetInfo | ReteNetworkInfo };\n    connection: ReteConnection[]\n}\n\nexport interface ModuleTopology extends TopologyList {\n    rete: ReteMirroringModuleInstanceInfo | ReteTheaterInternalServiceModuleInstanceInfo | ReteTheaterModuleInstanceInfo\n    topology: NodeTopologyElement;\n}\n\nexport class ModuleInstance extends ModuleInstanceDTO implements ModuleTopology {\n    // moduleTopology data\n    rete: ReteTheaterModuleInstanceInfo | ReteTheaterInternalServiceModuleInstanceInfo | ReteMirroringModuleInstanceInfo;\n    topology: NodeTopologyElement;\n    // other data\n    moduleInfo: SimpleModuleApplication\n}\n\n// apptype theater theater\n\nexport interface TheaterTopology extends TopologyElement {\n    elements: { [hostName: string]: ModuleInstance };\n    connection: ReteConnection[];\n}\n\nexport class TheaterApplication extends TheaterDTO implements TheaterTopology {\n    // theaterTopology data\n    elements: { [hostName: string]: ModuleInstance; };\n    connection: ReteConnection[];\n    // other data\n    properties: TheaterInstancePropertiesDTO;\n    topology: TheaterTopology;\n}\n\nexport class AreaApplication extends AreaDTO {\n    color?: string;\n}\nexport class AreaColorDTO extends SimpleAreaDTO {\n    color: string;\n}\n\n\nexport class FlavorApplication extends FlavorBasicInfo {\n    flavorName: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/ReteHostInfo.html":{"url":"classes/ReteHostInfo.html","title":"class - ReteHostInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  ReteHostInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/rete-settings/nodes/rete-nodes/host/hostNode.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe utilizzata per indicare il tipo di modulo HostNode.\nSee {reteBasicModuleInfo}\n\n            \n\n            \n                Extends\n            \n            \n                        reteBasicNodeInfo\n            \n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                cpu\n                            \n                            \n                                disk\n                            \n                            \n                                flavorName\n                            \n                            \n                                os\n                            \n                            \n                                ram\n                            \n                            \n                                type\n                            \n                            \n                                Input\n                            \n                            \n                                name\n                            \n                            \n                                Output\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        cpu\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     number | string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-nodes/host/hostNode.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        disk\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     number | string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-nodes/host/hostNode.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        flavorName\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-nodes/host/hostNode.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        os\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-nodes/host/hostNode.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ram\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     number | string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-nodes/host/hostNode.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         EnumNodeType.Host\n\n                    \n                \n                        \n                            \n                                ereditato da         reteBasicNodeInfo\n\n                            \n                        \n                    \n                        \n                                Definito in         reteBasicNodeInfo:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Input\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string[]\n\n                    \n                \n                        \n                            \n                                ereditato da         reteBasicNodeInfo\n\n                            \n                        \n                    \n                        \n                                Definito in         reteBasicNodeInfo:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         reteBasicNodeInfo\n\n                            \n                        \n                    \n                        \n                                Definito in         reteBasicNodeInfo:10\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Output\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string[]\n\n                    \n                \n                        \n                            \n                                ereditato da         reteBasicNodeInfo\n\n                            \n                        \n                    \n                        \n                                Definito in         reteBasicNodeInfo:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Component, Input, Output, Node } from 'rete';\nimport { _Socket } from '../../../sockets/socket';\nimport { _Control } from '../../../controls/control';\nimport { AngularComponent, AngularComponentData } from 'rete-angular-render-plugin';\nimport { HostComponent } from '../../../nodes/rete-nodes/host/host.component'\nimport { NodeData, WorkerInputs, WorkerOutputs } from 'rete/types/core/data';\nimport {  reteBasicNodeInfo } from '../../reteBasic';\nimport { EnumNodeType } from 'src/app/models/appType';\n\n/**\n * Classe utilizzata per indicare il tipo di modulo HostNode.\n * @see {reteBasicModuleInfo}\n */\nexport class ReteHostInfo extends reteBasicNodeInfo {\n  os: string;\n  flavorName: string;\n  cpu: number | string;\n  disk: number | string;\n  ram: number | string;\n  type: EnumNodeType.Host\n}\n\n/**\n * Funzione dichiarata in HostNode. \n * Essa ha lo scopo di generare una struttura dati empty.\n * Viene utilizzata in per instanziare un nodo del tipo di ritorno indicato senza dati.\n * @returns {ReteSubnetInfo}\n */\nexport function getEmptyHostInfo(): ReteHostInfo {\n  let x: ReteHostInfo = {\n    os: \"\",\n    Input: [],\n    Output: [],\n    name: \"\",\n    type: EnumNodeType.Host,\n    cpu: '',\n    disk: '',\n    ram: '',\n    flavorName: ''\n  };\n  return x;\n}\n\n/**\n * Classe che rappresenta il nodo (rete-node) Host all'interno del canvas/editor di rete.\n */\nexport class HostNode extends Component implements AngularComponent {\n\n  data: AngularComponentData;\n\n    /**\n   * Costruttore di HostNode\n   */\n  constructor() {\n    super(EnumNodeType.Host);\n    this.data.render = 'angular';\n    this.data.component = HostComponent;\n  }\n\n  /**\n   * Funzione richiamata in fase di costruzione del nodo (rete-node).\n   * Controlla se bisogna instanziare il nodo oppure crearne uno nuovo:\n   * - In fase di design, il nodo non ha dati, per cui bisogna crearne uno nuovo.\n   * - In fase di visualizing, il nodo presenta dei dati, per cui va valorizzato il nodo.\n   * @param node \n   */\n  async builder(node: Node) {\n    if (Object.keys(node.data).length === 0)\n      this.createNewNode(node)\n    else\n      this.valorizeNode(node)\n  }\n\n\n  /**\n   * Funzione che ha come scopo creare un nodo (rete-node).\n   * In particolare gli assegna una struttura vuota.\n   * @param node \n   */\n  createNewNode(node: Node) {\n    let t = getEmptyHostInfo()\n    node.data = {\n      ...node.data,\n      ...t\n    }\n  }\n\n\n  /**\n   * Funzione che ha come scopo la valorizzazione del nodo (rete-node) con i dati in suo possesso.\n   * In quasta fase avviene anche la fase iniziale di instanziamento delle porte input/output.\n   * @param node \n   */\n  valorizeNode(node: Node) {\n    var i: any = node.data['Input'];\n    var o: any = node.data['Output'];\n    var il = i.length;\n    var ol = o.length;\n\n    for (let index = 0; index \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/ReteMirroringModuleInstanceInfo.html":{"url":"classes/ReteMirroringModuleInstanceInfo.html","title":"class - ReteMirroringModuleInstanceInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  ReteMirroringModuleInstanceInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/rete-settings/nodes/rete-modules/mirroringModuleInstance/mirroringModuleInstanceNode.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe utilizzata per indicare il tipo di modulo MirroringModuleInstanceNode.\nSee {reteBasicModuleInfo}\n\n            \n\n            \n                Extends\n            \n            \n                        reteBasicModuleInfo\n            \n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                type\n                            \n                            \n                                host_number\n                            \n                            \n                                Input\n                            \n                            \n                                name\n                            \n                            \n                                network_number\n                            \n                            \n                                Output\n                            \n                            \n                                subnet_number\n                            \n                            \n                                area\n                            \n                            \n                                consumer_interfaces_link\n                            \n                            \n                                description\n                            \n                            \n                                module\n                            \n                            \n                                sequence\n                            \n                            \n                                version\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         EnumModuleType.MirroringModuleInstance\n\n                    \n                \n                        \n                            \n                                ereditato da         reteBasicModuleInfo\n\n                            \n                        \n                    \n                        \n                                Definito in         reteBasicModuleInfo:15\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        host_number\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         number\n\n                    \n                \n                        \n                            \n                                ereditato da         reteBasicModuleInfo\n\n                            \n                        \n                    \n                        \n                                Definito in         reteBasicModuleInfo:23\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Input\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string[]\n\n                    \n                \n                        \n                            \n                                ereditato da         reteBasicModuleInfo\n\n                            \n                        \n                    \n                        \n                                Definito in         reteBasicModuleInfo:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         reteBasicModuleInfo\n\n                            \n                        \n                    \n                        \n                                Definito in         reteBasicModuleInfo:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        network_number\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         number\n\n                    \n                \n                        \n                            \n                                ereditato da         reteBasicModuleInfo\n\n                            \n                        \n                    \n                        \n                                Definito in         reteBasicModuleInfo:24\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Output\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string[]\n\n                    \n                \n                        \n                            \n                                ereditato da         reteBasicModuleInfo\n\n                            \n                        \n                    \n                        \n                                Definito in         reteBasicModuleInfo:21\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subnet_number\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         number\n\n                    \n                \n                        \n                            \n                                ereditato da         reteBasicModuleInfo\n\n                            \n                        \n                    \n                        \n                                Definito in         reteBasicModuleInfo:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        area\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleInstancePropertiesDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleInstancePropertiesDTO:126\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        consumer_interfaces_link\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ConsumerInterfaceLinkDTO[]\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleInstancePropertiesDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleInstancePropertiesDTO:131\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleInstancePropertiesDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleInstancePropertiesDTO:127\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleInstancePropertiesDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleInstancePropertiesDTO:128\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sequence\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleInstancePropertiesDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleInstancePropertiesDTO:130\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleInstancePropertiesDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleInstancePropertiesDTO:129\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Component, Input, Output, Node } from 'rete';\nimport { _Socket } from '../../../sockets/socket';\nimport { _Control } from '../../../controls/control';\nimport { AngularComponent, AngularComponentData } from 'rete-angular-render-plugin';\nimport { NodeData, WorkerInputs, WorkerOutputs } from 'rete/types/core/data';\nimport { MirroringModuleInstanceComponent } from './mirroringModuleInstance.component';\nimport { reteBasicModuleInfo } from '../../reteBasic';\nimport { EnumModuleType } from 'src/app/models/appType';\n\n/**\n * Classe utilizzata per indicare il tipo di modulo MirroringModuleInstanceNode.\n * @see {reteBasicModuleInfo}\n */\nexport class ReteMirroringModuleInstanceInfo extends reteBasicModuleInfo {\n  type: EnumModuleType.MirroringModuleInstance;\n}\n\n/**\n * Funzione dichiarata in MirroringModuleInstanceNode. \n * Essa ha lo scopo di generare una struttura dati empty.\n * Viene utilizzata in per instanziare un nodo del tipo di ritorno indicato senza dati.\n * @returns {ReteMirroringModuleInstanceInfo}\n */\nexport function getEmptyReteMirroringModuleInstanceInfo(): ReteMirroringModuleInstanceInfo {\n  let x: ReteMirroringModuleInstanceInfo = {\n    Input: [],\n    Output: [],\n    description: \"\",\n    name: \"\",\n    type: EnumModuleType.MirroringModuleInstance,\n    area: \"\",\n    host_number: 0,\n    network_number: 0,\n    subnet_number: 0,\n    module: '',\n    version: '',\n    sequence: '',\n    consumer_interfaces_link: []\n  };\n  return x;\n}\n\n\n/**\n * Classe che rappresenta il modulo (rete-node) MirroringModuleInstance all'interno del canvas/editor di rete.\n */\nexport class MirroringModuleInstanceNode extends Component implements AngularComponent {\n\n  data: AngularComponentData;\n\n  /**\n   * Costruttore di MirroringModuleInstanceNode\n   */\n  constructor() {\n    super(EnumModuleType.MirroringModuleInstance);\n    this.data.render = 'angular';\n    this.data.component = MirroringModuleInstanceComponent;\n  }\n\n  /**\n   * Funzione richiamata in fase di costruzione del nodo (rete-node).\n   * Controlla se bisogna instanziare il nodo oppure crearne uno nuovo:\n   * - In fase di design, il nodo non ha dati, per cui bisogna crearne uno nuovo.\n   * - In fase di visualizing, il nodo presenta dei dati, per cui va valorizzato il nodo.\n   * @param node \n   */\n  async builder(node: Node) {\n    if (Object.keys(node.data).length === 0)\n      this.createNewNode(node)\n    else\n      this.valorizeNode(node)\n  }\n\n  /**\n   * Funzione che ha come scopo creare un nodo (rete-node).\n   * In particolare gli assegna una struttura vuota.\n   * @param node \n   */\n  createNewNode(node: Node) {\n    let t = getEmptyReteMirroringModuleInstanceInfo()\n    node.data = {\n      ...node.data,\n      ...t\n    }\n  }\n\n  /**\n   * Funzione che ha come scopo la valorizzazione del nodo (rete-node) con i dati in suo possesso.\n   * In quasta fase avviene anche la fase iniziale di instanziamento delle porte input/output.\n   * @param node \n   */\n  valorizeNode(node: Node) {\n    var i: any = node.data['Input'];\n    var o: any = node.data['Output'];\n    var il = i.length;\n    var ol = o.length;\n\n    for (let index = 0; index \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/ReteModuleComposerSettings.html":{"url":"classes/ReteModuleComposerSettings.html","title":"class - ReteModuleComposerSettings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  ReteModuleComposerSettings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/rete-settings/settings/editor-settings/reteModuleComposerSettings.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che ha lo scopo di eseguire i dovuti settaggi all'ambiente di rete.\nQuesta riguarda la parte di ReteModuleComposer\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                components\n                            \n                            \n                                container\n                            \n                            \n                                editor\n                            \n                            \n                                engine\n                            \n                            \n                                nodeSelected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                editorUSE\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Costruttore\n        \n            \n                \n                    \nconstructor(container: any, edito: NodeEditor, components: any, engine: Engine)\n                    \n                \n                        \n                            \n                                Definito in src/app/rete-settings/settings/editor-settings/reteModuleComposerSettings.ts:24\n                            \n                        \n\n                \n                    \n                            Costruttore di ReteModuleComposerSettings\n\n                            \n                                    Parametri :\n                                    \n                                        \n                                            \n                                                Nome\n                                                    Tipo\n                                                Opzionale\n                                            \n                                        \n                                        \n                                                \n                                                        container\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        edito\n                                                  \n                                                        \n                                                                    NodeEditor\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        components\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        engine\n                                                  \n                                                        \n                                                                    Engine\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        components\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     null\n\n                    \n                \n                \n                    \n                        Valore predefinito : null\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/settings/editor-settings/reteModuleComposerSettings.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        container\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     null\n\n                    \n                \n                \n                    \n                        Valore predefinito : null\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/settings/editor-settings/reteModuleComposerSettings.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editor\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     NodeEditor\n\n                    \n                \n                \n                    \n                        Valore predefinito : null\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/settings/editor-settings/reteModuleComposerSettings.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        engine\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     Engine\n\n                    \n                \n                \n                    \n                        Valore predefinito : null\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/settings/editor-settings/reteModuleComposerSettings.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nodeSelected\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         any\n\n                    \n                \n                \n                    \n                        Valore predefinito : {}\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/settings/editor-settings/reteModuleComposerSettings.ts:24\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        editorUSE\n                        \n                    \n                \n            \n            \n                \neditorUSE()\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/settings/editor-settings/reteModuleComposerSettings.ts:43\n                \n            \n\n\n            \n                \n                    Funzione che, una volta richiamata, setta l'editor i dovuti plugin.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Engine, NodeEditor, Node, Output as or, Input as ir } from \"rete\";\nimport ConnectionPlugin from 'rete-connection-plugin';\nimport ConnectionPathPlugin from 'rete-connection-path-plugin';\nimport ContextMenuPlugin from 'rete-context-menu-plugin';\nimport { AngularRenderPlugin } from 'rete-angular-render-plugin';\nimport AreaPlugin from 'rete-area-plugin';\nimport MinimapPlugin from 'rete-minimap-plugin';\nimport AutoArrangePlugin from 'rete-auto-arrange-plugin'\nimport DockPlugin from 'rete-dock-plugin';\nimport Vue from 'vue/dist/vue.esm';\nimport { _Socket } from '../../sockets/socket';\nimport HistoryPlugin from 'rete-history-plugin';\n\n\n/**\n * Classe che ha lo scopo di eseguire i dovuti settaggi all'ambiente di rete.\n * Questa riguarda la parte di ReteModuleComposer\n */\nexport class ReteModuleComposerSettings {\n    container = null;\n    editor: NodeEditor = null;\n    components = null;\n    engine: Engine = null;\n    nodeSelected: any = {};\n\n    /**\n     * Costruttore di ReteModuleComposerSettings\n     * @param container \n     * @param edito \n     * @param components \n     * @param engine \n     */\n    constructor(container: any, edito: NodeEditor, components: any, engine: Engine) {\n        this.container = container;\n        this.editor = edito;\n        this.components = components;\n        this.engine = engine;\n    }\n\n    /**\n     * Funzione che, una volta richiamata, setta l'editor i dovuti plugin.\n     */\n    editorUSE() {\n\n        this.editor.use(ConnectionPlugin);\n\n        this.editor.use(AngularRenderPlugin)//, { component: MyNodeComponent });\n\n        this.editor.use(MinimapPlugin, { Vue });\n\n        this.editor.use(HistoryPlugin, { keyboard: true });\n\n        this.editor.use(ContextMenuPlugin, {\n            searchBar: false,\n            components: {},\n            items: {\n                \"Undo\": () => {\n                    this.editor.trigger(\"undo\");\n                },\n                \"Redo\": () => {\n                    this.editor.trigger(\"redo\");\n                },\n                \"Show all nodes\": () => {\n                    AreaPlugin.zoomAt(this.editor, this.editor.nodes);\n                },\n                \"Editor\": () => {\n                    console.log(JSON.stringify(this.editor.toJSON()));\n                },\n                \"Nodes\": () => {\n                    var x = this.editor.toJSON();\n                    var z = [];\n                    for (let key in x) {\n                        let value = x[key];\n                        z.push(value);\n                    }\n                    return z;\n                }\n            },\n            allocate(component: any) {\n                return ['Create nodes'];\n            },\n            rename(component: any) {\n                return component.name;\n            },\n        });\n\n        this.editor.use(AreaPlugin, {\n            background: false, //righe\n            snap: false,\n            scaleExtent: { min: 0.1, max: 1 },\n            translateExtent: { width: 5000, height: 4000 }\n        })\n\n        this.editor.use(AutoArrangePlugin, {\n            // snap: {size: 64, dynamic: true},\n            margin: { x: 400, y: 100 },\n            depth: 0,\n            vertical: false,\n        })\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/ReteModuleVisualizerSettings.html":{"url":"classes/ReteModuleVisualizerSettings.html","title":"class - ReteModuleVisualizerSettings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  ReteModuleVisualizerSettings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/rete-settings/settings/editor-settings/reteModuleVisualizerSettings.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che ha lo scopo di eseguire i dovuti settaggi all'ambiente di rete.\nQuesta riguarda la parte di ReteModuleVisualizer\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                components\n                            \n                            \n                                container\n                            \n                            \n                                editor\n                            \n                            \n                                engine\n                            \n                            \n                                nodeSelected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                editorUSE\n                            \n                            \n                                editorUSE_simple\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Costruttore\n        \n            \n                \n                    \nconstructor(container: any, edito: NodeEditor, components: any, engine: Engine)\n                    \n                \n                        \n                            \n                                Definito in src/app/rete-settings/settings/editor-settings/reteModuleVisualizerSettings.ts:25\n                            \n                        \n\n                \n                    \n                            Costruttore di ReteModuleVisualizerSettings\n\n                            \n                                    Parametri :\n                                    \n                                        \n                                            \n                                                Nome\n                                                    Tipo\n                                                Opzionale\n                                            \n                                        \n                                        \n                                                \n                                                        container\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        edito\n                                                  \n                                                        \n                                                                    NodeEditor\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        components\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        engine\n                                                  \n                                                        \n                                                                    Engine\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        components\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     null\n\n                    \n                \n                \n                    \n                        Valore predefinito : null\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/settings/editor-settings/reteModuleVisualizerSettings.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        container\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     null\n\n                    \n                \n                \n                    \n                        Valore predefinito : null\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/settings/editor-settings/reteModuleVisualizerSettings.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editor\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     NodeEditor\n\n                    \n                \n                \n                    \n                        Valore predefinito : null\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/settings/editor-settings/reteModuleVisualizerSettings.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        engine\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     Engine\n\n                    \n                \n                \n                    \n                        Valore predefinito : null\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/settings/editor-settings/reteModuleVisualizerSettings.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nodeSelected\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         any\n\n                    \n                \n                \n                    \n                        Valore predefinito : {}\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/settings/editor-settings/reteModuleVisualizerSettings.ts:25\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        editorUSE\n                        \n                    \n                \n            \n            \n                \neditorUSE()\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/settings/editor-settings/reteModuleVisualizerSettings.ts:44\n                \n            \n\n\n            \n                \n                    Funzione che, una volta richiamata, setta l'editor i dovuti plugin.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editorUSE_simple\n                        \n                    \n                \n            \n            \n                \neditorUSE_simple()\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/settings/editor-settings/reteModuleVisualizerSettings.ts:107\n                \n            \n\n\n            \n                \n                    Funzione che, una volta richiamata, setta l'editor i dovuti plugin.\nQuesta è richiamata quando si renderizza l'editor in modalità simple.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Engine, NodeEditor, Node, Output as or, Input as ir } from \"rete\";\nimport ConnectionPlugin from 'rete-connection-plugin';\nimport ConnectionPathPlugin from 'rete-connection-path-plugin';\nimport ContextMenuPlugin from 'rete-context-menu-plugin';\nimport { AngularRenderPlugin } from 'rete-angular-render-plugin';\nimport AreaPlugin from 'rete-area-plugin';\nimport MinimapPlugin from 'rete-minimap-plugin';\nimport AutoArrangePlugin from 'rete-auto-arrange-plugin'\nimport DockPlugin from 'rete-dock-plugin';\nimport Vue from 'vue/dist/vue.esm';\nimport { _Socket } from '../../sockets/socket';\nimport ReadonlyPlugin from 'rete-readonly-plugin';\nimport HistoryPlugin from 'rete-history-plugin';\n\n\n/**\n * Classe che ha lo scopo di eseguire i dovuti settaggi all'ambiente di rete.\n * Questa riguarda la parte di ReteModuleVisualizer\n */\nexport class ReteModuleVisualizerSettings {\n  container = null;\n  editor: NodeEditor = null;\n  components = null;\n  engine: Engine = null;\n  nodeSelected: any = {};\n\n  /**\n   * Costruttore di ReteModuleVisualizerSettings\n   * @param container \n   * @param edito \n   * @param components \n   * @param engine \n   */\n  constructor(container: any, edito: NodeEditor, components: any, engine: Engine) {\n    this.container = container;\n    this.editor = edito;\n    this.components = components;\n    this.engine = engine;\n  }\n\n  /**\n   * Funzione che, una volta richiamata, setta l'editor i dovuti plugin.\n   */\n  editorUSE() {\n\n    this.editor.use(ConnectionPlugin);\n\n    this.editor.use(AngularRenderPlugin)//, { component: MyNodeComponent });\n\n    this.editor.use(MinimapPlugin, { Vue });\n\n    this.editor.use(HistoryPlugin, { keyboard: true });\n\n    this.editor.use(ContextMenuPlugin, {\n      searchBar: false,\n      components: {},\n      items: {\n        \"Undo\": () => {\n          this.editor.trigger(\"undo\");\n        },\n        \"Redo\": () => {\n          this.editor.trigger(\"redo\");\n        },\n        \"Show all nodes\": () => {\n          AreaPlugin.zoomAt(this.editor, this.editor.nodes);\n        },\n        \"Editor\": () => {\n          console.log(JSON.stringify(this.editor.toJSON()));\n        },\n        \"Nodes\": () => {\n          var x = this.editor.toJSON();\n          var z = [];\n          for (let key in x) {\n            let value = x[key];\n            z.push(value);\n          }\n          return z;\n        }\n      },\n      allocate(component: any) {\n        return null;\n      },\n      // rename(component) {\n      //   return component.name;\n      // }\n    });\n\n    this.editor.use(AreaPlugin, {\n      background: false, //righe\n      snap: false,\n      scaleExtent: { min: 0.1, max: 1 },\n      translateExtent: { width: 5000, height: 4000 }\n    })\n\n    this.editor.use(AutoArrangePlugin, {\n      // snap: {size: 64, dynamic: true},\n      margin: { x: 400, y: 100 },\n      depth: 0,\n      vertical: false,\n    })\n  }\n\n  /**\n   * Funzione che, una volta richiamata, setta l'editor i dovuti plugin.\n   * Questa è richiamata quando si renderizza l'editor in modalità simple.\n   */\n  editorUSE_simple() {\n\n    this.editor.use(ConnectionPlugin);\n    this.editor.use(AngularRenderPlugin)//, { component: MyNodeComponent });\n    this.editor.use(ContextMenuPlugin, {\n      searchBar: false,\n      components: {},\n      items: {\n        \"Show all nodes\": () => {\n          AreaPlugin.zoomAt(this.editor, this.editor.nodes);\n        },\n        \"Editor\": () => {\n          console.log(JSON.stringify(this.editor.toJSON()));\n        },\n        \"Nodes\": () => {\n          var x = this.editor.toJSON();\n          var z = [];\n          for (let key in x) {\n            let value = x[key];\n            z.push(value);\n          }\n          return z;\n        }\n      },\n      allocate(component: any) {\n        return null;\n      },\n      // rename(component) {\n      //   return component.name;\n      // }\n    });\n\n\n    this.editor.use(AreaPlugin, {\n      background: false, //righe\n      snap: false,\n      scaleExtent: { min: 0.1, max: 1 },\n      translateExtent: { width: 5000, height: 4000 }\n    })\n    this.editor.use(AutoArrangePlugin, {\n      margin: { x: 400, y: 200 },\n      depth: 1,\n      vertical: false,\n    })\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/ReteNetworkInfo.html":{"url":"classes/ReteNetworkInfo.html","title":"class - ReteNetworkInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  ReteNetworkInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/rete-settings/nodes/rete-nodes/network/networkNode.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe utilizzata per indicare il tipo di modulo NetworkNode.\nSee {reteBasicNodeInfo}\n\n            \n\n            \n                Extends\n            \n            \n                        reteBasicNodeInfo\n            \n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                externalInterfaceName\n                            \n                            \n                                externalInterfaceType\n                            \n                            \n                                type\n                            \n                            \n                                Input\n                            \n                            \n                                name\n                            \n                            \n                                Output\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        externalInterfaceName\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-nodes/network/networkNode.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        externalInterfaceType\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         InterfacePortType\n\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-nodes/network/networkNode.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         EnumNodeType.Network\n\n                    \n                \n                        \n                            \n                                ereditato da         reteBasicNodeInfo\n\n                            \n                        \n                    \n                        \n                                Definito in         reteBasicNodeInfo:15\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Input\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string[]\n\n                    \n                \n                        \n                            \n                                ereditato da         reteBasicNodeInfo\n\n                            \n                        \n                    \n                        \n                                Definito in         reteBasicNodeInfo:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         reteBasicNodeInfo\n\n                            \n                        \n                    \n                        \n                                Definito in         reteBasicNodeInfo:10\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Output\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string[]\n\n                    \n                \n                        \n                            \n                                ereditato da         reteBasicNodeInfo\n\n                            \n                        \n                    \n                        \n                                Definito in         reteBasicNodeInfo:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Component, Input, Output, Node } from 'rete';\nimport { _Socket } from '../../../sockets/socket';\nimport { _Control } from '../../../controls/control';\nimport { AngularComponent, AngularComponentData } from 'rete-angular-render-plugin';\nimport { NetworkComponent } from './network.component';\nimport { NodeData, WorkerInputs, WorkerOutputs } from 'rete/types/core/data';\nimport {  reteBasicNodeInfo } from '../../reteBasic';\nimport { EnumNodeType, InterfacePortType } from 'src/app/models/appType';\n\n/**\n * Classe utilizzata per indicare il tipo di modulo NetworkNode.\n * @see {reteBasicNodeInfo}\n */\nexport class ReteNetworkInfo extends reteBasicNodeInfo {\n  type: EnumNodeType.Network;\n  externalInterfaceName: string;\n  externalInterfaceType: InterfacePortType;\n}\n\n/**\n * Funzione dichiarata in NetworkNode. \n * Essa ha lo scopo di generare una struttura dati empty.\n * Viene utilizzata in per instanziare un nodo del tipo di ritorno indicato senza dati.\n * @returns {ReteSubnetInfo}\n */\nexport function getEmptyNetworkInfo():ReteNetworkInfo {\n  let x: ReteNetworkInfo = {\n    Input: [],\n    Output: [],\n    name: \"\",\n    type: EnumNodeType.Network,\n    externalInterfaceName: '',\n    externalInterfaceType: undefined\n  };\n  return x;\n\n}\n\n\n/**\n * Classe che rappresenta il nodo (rete-node) Network all'interno del canvas/editor di rete.\n */\nexport class NetworkNode extends Component implements AngularComponent {\n\n  data: AngularComponentData;\n\n  /**\n   * Costruttore di NetworkNode\n   */\n  constructor() {\n    super(EnumNodeType.Network);\n    this.data.render = 'angular';\n    this.data.component = NetworkComponent;\n  }\n\n  /**\n   * Funzione richiamata in fase di costruzione del nodo (rete-node).\n   * Controlla se bisogna instanziare il nodo oppure crearne uno nuovo:\n   * - In fase di design, il nodo non ha dati, per cui bisogna crearne uno nuovo.\n   * - In fase di visualizing, il nodo presenta dei dati, per cui va valorizzato il nodo.\n   * @param node \n   */\n  async builder(node: Node) {\n    if (Object.keys(node.data).length === 0)\n      this.createNewNode(node)\n    else\n      this.valorizeNode(node)\n  }\n\n  /**\n   * Funzione che ha come scopo creare un nodo (rete-node).\n   * In particolare gli assegna una struttura vuota.\n   * @param node \n   */\n  createNewNode(node: Node) {\n    let t = getEmptyNetworkInfo()\n    node.data = {\n      ...node.data,\n      ...t\n    }\n  }\n\n  /**\n   * Funzione che ha come scopo la valorizzazione del nodo (rete-node) con i dati in suo possesso.\n   * In quasta fase avviene anche la fase iniziale di instanziamento delle porte input/output.\n   * @param node \n   */\n  valorizeNode(node: Node) {\n    var i: any = node.data['Input'];\n    var o: any = node.data['Output'];\n    var il = i.length;\n    var ol = o.length;\n\n    for (let index = 0; index \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/ReteSubnetInfo.html":{"url":"classes/ReteSubnetInfo.html","title":"class - ReteSubnetInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  ReteSubnetInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/rete-settings/nodes/rete-nodes/subnet/subnetNode.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe utilizzata per indicare il tipo di modulo SubnetNode.\nSee {reteBasicModuleInfo}\n\n            \n\n            \n                Extends\n            \n            \n                        reteBasicNodeInfo\n            \n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                cidr\n                            \n                            \n                                isDhcp\n                            \n                            \n                                type\n                            \n                            \n                                version\n                            \n                            \n                                Input\n                            \n                            \n                                name\n                            \n                            \n                                Output\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        cidr\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-nodes/subnet/subnetNode.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDhcp\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | boolean\n\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-nodes/subnet/subnetNode.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         EnumNodeType.Subnet\n\n                    \n                \n                        \n                            \n                                ereditato da         reteBasicNodeInfo\n\n                            \n                        \n                    \n                        \n                                Definito in         reteBasicNodeInfo:18\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-nodes/subnet/subnetNode.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Input\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string[]\n\n                    \n                \n                        \n                            \n                                ereditato da         reteBasicNodeInfo\n\n                            \n                        \n                    \n                        \n                                Definito in         reteBasicNodeInfo:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         reteBasicNodeInfo\n\n                            \n                        \n                    \n                        \n                                Definito in         reteBasicNodeInfo:10\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Output\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string[]\n\n                    \n                \n                        \n                            \n                                ereditato da         reteBasicNodeInfo\n\n                            \n                        \n                    \n                        \n                                Definito in         reteBasicNodeInfo:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Component, Input, Output, Node } from 'rete';\nimport { _Socket } from '../../../sockets/socket';\nimport { _Control } from '../../../controls/control';\nimport { AngularComponent, AngularComponentData } from 'rete-angular-render-plugin';\nimport { SubnetComponent } from './subnet.component';\nimport { NodeData, WorkerInputs, WorkerOutputs } from 'rete/types/core/data';\nimport {  reteBasicNodeInfo } from '../../reteBasic';\nimport { EnumNodeType } from 'src/app/models/appType';\n\n/**\n * Classe utilizzata per indicare il tipo di modulo SubnetNode.\n * @see {reteBasicModuleInfo}\n */\nexport class ReteSubnetInfo extends reteBasicNodeInfo {\n  cidr: string;\n  version: string | number;\n  isDhcp: string | boolean;\n  type: EnumNodeType.Subnet;\n}\n\n/**\n * Funzione dichiarata in SubnetNode. \n * Essa ha lo scopo di generare una struttura dati empty.\n * Viene utilizzata in per instanziare un nodo del tipo di ritorno indicato senza dati.\n * @returns {ReteSubnetInfo}\n */\nexport function getEmptySubnetInfo(): ReteSubnetInfo {\n  let x: ReteSubnetInfo = {\n    cidr: \"\",\n    Input: [],\n    Output: [],\n    name: \"\",\n    type: EnumNodeType.Subnet,\n    version: \"\",\n    isDhcp: ''\n  };\n  return x;\n}\n\n\n/**\n * Classe che rappresenta il nodo (rete-node) Subnet all'interno del canvas/editor di rete.\n */\nexport class SubnetNode extends Component implements AngularComponent {\n\n  data: AngularComponentData;\n\n  /**\n   * Costruttore di SubnetNode\n   */\n  constructor() {\n    super(EnumNodeType.Subnet);\n    this.data.render = 'angular';\n    this.data.component = SubnetComponent;\n  }\n\n  /**\n   * Funzione richiamata in fase di costruzione del nodo (rete-node).\n   * Controlla se bisogna instanziare il nodo oppure crearne uno nuovo:\n   * - In fase di design, il nodo non ha dati, per cui bisogna crearne uno nuovo.\n   * - In fase di visualizing, il nodo presenta dei dati, per cui va valorizzato il nodo.\n   * @param node \n   */\n  async builder(node: Node) {\n    if (Object.keys(node.data).length === 0)\n      this.createNewNode(node)\n    else\n      this.valorizeNode(node)\n  }\n\n  /**\n   * Funzione che ha come scopo creare un nodo (rete-node).\n   * In particolare gli assegna una struttura vuota.\n   * @param node \n   */\n  createNewNode(node: Node) {\n    let t = getEmptySubnetInfo()\n    node.data = {\n      ...node.data,\n      ...t\n    }\n  }\n\n  /**\n   * Funzione che ha come scopo la valorizzazione del nodo (rete-node) con i dati in suo possesso.\n   * In quasta fase avviene anche la fase iniziale di instanziamento delle porte input/output.\n   * @param node \n   */\n  valorizeNode(node: Node) {\n    var i: any = node.data['Input'];\n    var o: any = node.data['Output'];\n    var il = i.length;\n    var ol = o.length;\n\n    for (let index = 0; index \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/ReteTheaterComposerSettings.html":{"url":"classes/ReteTheaterComposerSettings.html","title":"class - ReteTheaterComposerSettings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  ReteTheaterComposerSettings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/rete-settings/settings/editor-settings/reteTheaterComposerSettings.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che ha lo scopo di eseguire i dovuti settaggi all'ambiente di rete.\nQuesta riguarda la parte di ReteTheaterComposer\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                components\n                            \n                            \n                                    Public\n                                container\n                            \n                            \n                                    Public\n                                editor\n                            \n                            \n                                    Public\n                                engine\n                            \n                            \n                                    Public\n                                nodeSelected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                editorUSE\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Costruttore\n        \n            \n                \n                    \nconstructor(container: any, edito: NodeEditor, components: any, engine: Engine)\n                    \n                \n                        \n                            \n                                Definito in src/app/rete-settings/settings/editor-settings/reteTheaterComposerSettings.ts:21\n                            \n                        \n\n                \n                    \n                            Costruttore di ReteTheaterComposerSettings\n\n                            \n                                    Parametri :\n                                    \n                                        \n                                            \n                                                Nome\n                                                    Tipo\n                                                Opzionale\n                                            \n                                        \n                                        \n                                                \n                                                        container\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        edito\n                                                  \n                                                        \n                                                                    NodeEditor\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        components\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        engine\n                                                  \n                                                        \n                                                                    Engine\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        components\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     null\n\n                    \n                \n                \n                    \n                        Valore predefinito : null\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/settings/editor-settings/reteTheaterComposerSettings.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        container\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     null\n\n                    \n                \n                \n                    \n                        Valore predefinito : null\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/settings/editor-settings/reteTheaterComposerSettings.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        editor\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     NodeEditor\n\n                    \n                \n                \n                    \n                        Valore predefinito : null\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/settings/editor-settings/reteTheaterComposerSettings.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        engine\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     Engine\n\n                    \n                \n                \n                    \n                        Valore predefinito : null\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/settings/editor-settings/reteTheaterComposerSettings.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        nodeSelected\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         any\n\n                    \n                \n                \n                    \n                        Valore predefinito : {}\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/settings/editor-settings/reteTheaterComposerSettings.ts:21\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        editorUSE\n                        \n                    \n                \n            \n            \n                \neditorUSE()\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/settings/editor-settings/reteTheaterComposerSettings.ts:42\n                \n            \n\n\n            \n                \n                    Funzione che, una volta richiamata, setta l'editor i dovuti plugin.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Engine, NodeEditor, Node, Output as or, Input as ir } from \"rete\";\nimport ConnectionPlugin from 'rete-connection-plugin';\nimport ContextMenuPlugin from 'rete-context-menu-plugin';\nimport { AngularRenderPlugin } from 'rete-angular-render-plugin';\nimport AreaPlugin from 'rete-area-plugin';\nimport MinimapPlugin from 'rete-minimap-plugin';\nimport AutoArrangePlugin from 'rete-auto-arrange-plugin'\nimport Vue from 'vue/dist/vue.esm';\nimport { _Socket } from '../../sockets/socket';\nimport HistoryPlugin from 'rete-history-plugin';\n\n/**\n * Classe che ha lo scopo di eseguire i dovuti settaggi all'ambiente di rete.\n * Questa riguarda la parte di ReteTheaterComposer\n */\nexport class ReteTheaterComposerSettings {\n    public container = null;\n    public editor: NodeEditor = null;\n    public components = null;\n    public engine: Engine = null;\n    public nodeSelected: any = {};\n\n\n    /**\n     * Costruttore di ReteTheaterComposerSettings\n     * @param container \n     * @param edito \n     * @param components \n     * @param engine \n     */\n    constructor(container: any, edito: NodeEditor, components: any, engine: Engine) {\n        this.container = container;\n        this.editor = edito;\n        this.components = components;\n        this.engine = engine;\n    }\n\n\n    /**\n     * Funzione che, una volta richiamata, setta l'editor i dovuti plugin.\n     */\n    editorUSE() {\n\n        this.editor.use(ConnectionPlugin);\n\n        this.editor.use(AngularRenderPlugin)//, { component: MyNodeComponent });\n\n        this.editor.use(MinimapPlugin, { Vue });\n\n        this.editor.use(HistoryPlugin, { keyboard: true });\n\n        this.editor.use(ContextMenuPlugin, {\n            searchBar: false,\n            components: {},\n            items: {\n                \"Undo\": () => {\n                    this.editor.trigger(\"undo\");\n                },\n                \"Redo\": () => {\n                    this.editor.trigger(\"redo\");\n                },\n                \"Show all nodes\": () => {\n                    AreaPlugin.zoomAt(this.editor, this.editor.nodes);\n                },\n                \"Editor\": () => {\n                    console.log(JSON.stringify(this.editor.toJSON()));\n                },\n                \"Nodes\": () => {\n                    var x = this.editor.toJSON();\n                    var z = [];\n                    for (let key in x) {\n                        let value = x[key];\n                        z.push(value);\n                    }\n                    return z;\n                }\n            },\n            allocate(component: any) {\n                return null;\n            },\n            // rename(component) {\n            //   return component.name;\n            // }\n        });\n\n        this.editor.use(AreaPlugin, {\n            background: false, //righe\n            snap: false,\n            scaleExtent: { min: 0.1, max: 1 },\n            translateExtent: { width: 5000, height: 4000 }\n        })\n\n        this.editor.use(AutoArrangePlugin, {\n            // snap: {size: 64, dynamic: true},\n            margin: { x: 400, y: 100 },\n            depth: 0,\n            vertical: false,\n        })\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{"url":"classes/ReteTheaterInternalServiceModuleInstanceInfo.html","title":"class - ReteTheaterInternalServiceModuleInstanceInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  ReteTheaterInternalServiceModuleInstanceInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/rete-settings/nodes/rete-modules/theaterInternalServiceModuleInstance/theaterInternalServiceModuleInstanceNode.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe utilizzata per indicare il tipo di modulo TheaterInternalServiceModuleInstanceNode.\nSee {reteBasicModuleInfo}\n\n            \n\n            \n                Extends\n            \n            \n                        reteBasicModuleInfo\n            \n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                type\n                            \n                            \n                                host_number\n                            \n                            \n                                Input\n                            \n                            \n                                name\n                            \n                            \n                                network_number\n                            \n                            \n                                Output\n                            \n                            \n                                subnet_number\n                            \n                            \n                                area\n                            \n                            \n                                consumer_interfaces_link\n                            \n                            \n                                description\n                            \n                            \n                                module\n                            \n                            \n                                sequence\n                            \n                            \n                                version\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         EnumModuleType.TheaterInternalServiceModuleInstance\n\n                    \n                \n                        \n                            \n                                ereditato da         reteBasicModuleInfo\n\n                            \n                        \n                    \n                        \n                                Definito in         reteBasicModuleInfo:15\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        host_number\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         number\n\n                    \n                \n                        \n                            \n                                ereditato da         reteBasicModuleInfo\n\n                            \n                        \n                    \n                        \n                                Definito in         reteBasicModuleInfo:23\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Input\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string[]\n\n                    \n                \n                        \n                            \n                                ereditato da         reteBasicModuleInfo\n\n                            \n                        \n                    \n                        \n                                Definito in         reteBasicModuleInfo:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         reteBasicModuleInfo\n\n                            \n                        \n                    \n                        \n                                Definito in         reteBasicModuleInfo:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        network_number\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         number\n\n                    \n                \n                        \n                            \n                                ereditato da         reteBasicModuleInfo\n\n                            \n                        \n                    \n                        \n                                Definito in         reteBasicModuleInfo:24\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Output\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string[]\n\n                    \n                \n                        \n                            \n                                ereditato da         reteBasicModuleInfo\n\n                            \n                        \n                    \n                        \n                                Definito in         reteBasicModuleInfo:21\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subnet_number\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         number\n\n                    \n                \n                        \n                            \n                                ereditato da         reteBasicModuleInfo\n\n                            \n                        \n                    \n                        \n                                Definito in         reteBasicModuleInfo:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        area\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleInstancePropertiesDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleInstancePropertiesDTO:126\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        consumer_interfaces_link\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ConsumerInterfaceLinkDTO[]\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleInstancePropertiesDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleInstancePropertiesDTO:131\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleInstancePropertiesDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleInstancePropertiesDTO:127\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleInstancePropertiesDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleInstancePropertiesDTO:128\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sequence\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleInstancePropertiesDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleInstancePropertiesDTO:130\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleInstancePropertiesDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleInstancePropertiesDTO:129\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Component, Input, Output, Node } from 'rete';\nimport { _Socket } from '../../../sockets/socket';\nimport { _Control } from '../../../controls/control';\nimport { AngularComponent, AngularComponentData } from 'rete-angular-render-plugin';\nimport { NodeData, WorkerInputs, WorkerOutputs } from 'rete/types/core/data';\nimport { TheaterInternalServiceModuleInstanceComponent } from './theaterInternalServiceModuleInstance.component';\nimport {  reteBasicModuleInfo } from '../../reteBasic';\nimport { EnumModuleType } from 'src/app/models/appType';\n\n/**\n * Classe utilizzata per indicare il tipo di modulo TheaterInternalServiceModuleInstanceNode.\n * @see {reteBasicModuleInfo}\n */\nexport class ReteTheaterInternalServiceModuleInstanceInfo extends reteBasicModuleInfo {\n  type: EnumModuleType.TheaterInternalServiceModuleInstance;\n}\n\n/**\n * Funzione dichiarata in TheaterInternalServiceModuleInstanceNode. \n * Essa ha lo scopo di generare una struttura dati empty.\n * Viene utilizzata in per instanziare un nodo del tipo di ritorno indicato senza dati.\n * @returns {ReteTheaterInternalServiceModuleInstanceInfo}\n */\nexport function getEmptyReteTheaterInternalServiceModuleInstanceInfo(): ReteTheaterInternalServiceModuleInstanceInfo {\n  let x: ReteTheaterInternalServiceModuleInstanceInfo = {\n    Input: [],\n    Output: [],\n    name: \"\",\n    description: \"\",\n    type: EnumModuleType.TheaterInternalServiceModuleInstance,\n    host_number: 0,\n    network_number: 0,\n    subnet_number: 0,\n    area: '',\n    module: '',\n    version: '',\n    sequence: '',\n    consumer_interfaces_link: []\n  };\n  return x;\n}\n\n\n/**\n * Classe che rappresenta il modulo (rete-node) TheaterInternalServiceModuleInstance all'interno del canvas/editor di rete.\n */\nexport class TheaterInternalServiceModuleInstanceNode extends Component implements AngularComponent {\n\n  data: AngularComponentData;\n\n    /**\n   * Costruttore di TheaterInternalServiceModuleInstanceNode\n   */\n  constructor() {\n    super(EnumModuleType.TheaterInternalServiceModuleInstance);\n    this.data.render = 'angular';\n    this.data.component = TheaterInternalServiceModuleInstanceComponent;\n  }\n\n  /**\n   * Funzione richiamata in fase di costruzione del nodo (rete-node).\n   * Controlla se bisogna instanziare il nodo oppure crearne uno nuovo:\n   * - In fase di design, il nodo non ha dati, per cui bisogna crearne uno nuovo.\n   * - In fase di visualizing, il nodo presenta dei dati, per cui va valorizzato il nodo.\n   * @param node \n   */\n  async builder(node: Node) {\n    if (Object.keys(node.data).length === 0)\n      this.createNewNode(node)\n    else\n      this.valorizeNode(node)\n  }\n\n  /**\n   * Funzione che ha come scopo creare un nodo (rete-node).\n   * In particolare gli assegna una struttura vuota.\n   * @param node \n   */\n  createNewNode(node: Node) {\n    let t = getEmptyReteTheaterInternalServiceModuleInstanceInfo()\n    node.data = {\n      ...node.data,\n      ...t\n    }\n  }\n\n  /**\n   * Funzione che ha come scopo la valorizzazione del nodo (rete-node) con i dati in suo possesso.\n   * In quasta fase avviene anche la fase iniziale di instanziamento delle porte input/output.\n   * @param node \n   */\n  valorizeNode(node: Node) {\n    var i: any = node.data['Input'];\n    var o: any = node.data['Output'];\n    var il = i.length;\n    var ol = o.length;\n\n    for (let index = 0; index \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/ReteTheaterModuleInstanceInfo.html":{"url":"classes/ReteTheaterModuleInstanceInfo.html","title":"class - ReteTheaterModuleInstanceInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  ReteTheaterModuleInstanceInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/rete-settings/nodes/rete-modules/theaterModuleInstance/theaterModuleInstanceNode.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe utilizzata per indicare il tipo di modulo MirroringModuleInstanceNode.\nSee {reteBasicModuleInfo}\n\n            \n\n            \n                Extends\n            \n            \n                        reteBasicModuleInfo\n            \n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                type\n                            \n                            \n                                host_number\n                            \n                            \n                                Input\n                            \n                            \n                                name\n                            \n                            \n                                network_number\n                            \n                            \n                                Output\n                            \n                            \n                                subnet_number\n                            \n                            \n                                area\n                            \n                            \n                                consumer_interfaces_link\n                            \n                            \n                                description\n                            \n                            \n                                module\n                            \n                            \n                                sequence\n                            \n                            \n                                version\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         EnumModuleType.TheaterModuleInstance\n\n                    \n                \n                        \n                            \n                                ereditato da         reteBasicModuleInfo\n\n                            \n                        \n                    \n                        \n                                Definito in         reteBasicModuleInfo:15\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        host_number\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         number\n\n                    \n                \n                        \n                            \n                                ereditato da         reteBasicModuleInfo\n\n                            \n                        \n                    \n                        \n                                Definito in         reteBasicModuleInfo:23\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Input\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string[]\n\n                    \n                \n                        \n                            \n                                ereditato da         reteBasicModuleInfo\n\n                            \n                        \n                    \n                        \n                                Definito in         reteBasicModuleInfo:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         reteBasicModuleInfo\n\n                            \n                        \n                    \n                        \n                                Definito in         reteBasicModuleInfo:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        network_number\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         number\n\n                    \n                \n                        \n                            \n                                ereditato da         reteBasicModuleInfo\n\n                            \n                        \n                    \n                        \n                                Definito in         reteBasicModuleInfo:24\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Output\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string[]\n\n                    \n                \n                        \n                            \n                                ereditato da         reteBasicModuleInfo\n\n                            \n                        \n                    \n                        \n                                Definito in         reteBasicModuleInfo:21\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subnet_number\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         number\n\n                    \n                \n                        \n                            \n                                ereditato da         reteBasicModuleInfo\n\n                            \n                        \n                    \n                        \n                                Definito in         reteBasicModuleInfo:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        area\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleInstancePropertiesDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleInstancePropertiesDTO:126\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        consumer_interfaces_link\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ConsumerInterfaceLinkDTO[]\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleInstancePropertiesDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleInstancePropertiesDTO:131\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleInstancePropertiesDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleInstancePropertiesDTO:127\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleInstancePropertiesDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleInstancePropertiesDTO:128\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sequence\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleInstancePropertiesDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleInstancePropertiesDTO:130\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleInstancePropertiesDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleInstancePropertiesDTO:129\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Component, Input, Output, Node } from 'rete';\nimport { _Socket } from '../../../sockets/socket';\nimport { _Control } from '../../../controls/control';\nimport { AngularComponent, AngularComponentData } from 'rete-angular-render-plugin';\nimport { NodeData, WorkerInputs, WorkerOutputs } from 'rete/types/core/data';\nimport { TheaterModuleInstanceComponent } from './theaterModuleInstance.component';\nimport {  reteBasicModuleInfo } from '../../reteBasic';\nimport { EnumModuleType } from 'src/app/models/appType';\n\n/**\n * Classe utilizzata per indicare il tipo di modulo MirroringModuleInstanceNode.\n * @see {reteBasicModuleInfo}\n */\nexport class ReteTheaterModuleInstanceInfo extends reteBasicModuleInfo {\n  type: EnumModuleType.TheaterModuleInstance;\n}\n\n/**\n * Funzione dichiarata in TheaterModuleInstanceNode. \n * Essa ha lo scopo di generare una struttura dati empty.\n * Viene utilizzata in per instanziare un nodo del tipo di ritorno indicato senza dati.\n * @returns {ReteTheaterModuleInstanceInfo}\n */\nexport function getEmptyReteTheaterModuleInstanceInfo(): ReteTheaterModuleInstanceInfo {\n  let x: ReteTheaterModuleInstanceInfo = {\n    Input: [],\n    Output: [],\n    description: \"\",\n    name: \"\",\n    type: EnumModuleType.TheaterModuleInstance,\n    host_number: 0,\n    network_number: 0,\n    subnet_number: 0,\n    area: '',\n    module: '',\n    version: '',\n    sequence: '',\n    consumer_interfaces_link: []\n  };\n  return x;\n\n}\n\n/**\n * Classe che rappresenta il modulo (rete-node) TheaterModuleInstance all'interno del canvas/editor di rete.\n */\nexport class TheaterModuleInstanceNode extends Component implements AngularComponent {\n\n  data: AngularComponentData;\n\n    /**\n   * Costruttore di MirroringModuleInstanceNode\n   */\n  constructor() {\n    super(EnumModuleType.TheaterModuleInstance);\n    this.data.render = 'angular';\n    this.data.component = TheaterModuleInstanceComponent;\n  }\n\n    /**\n   * Funzione richiamata in fase di costruzione del nodo (rete-node).\n   * Controlla se bisogna instanziare il nodo oppure crearne uno nuovo:\n   * - In fase di design, il nodo non ha dati, per cui bisogna crearne uno nuovo.\n   * - In fase di visualizing, il nodo presenta dei dati, per cui va valorizzato il nodo.\n   * @param node \n   */\n  async builder(node: Node) {\n    if (Object.keys(node.data).length === 0)\n      this.createNewNode(node)\n    else\n      this.valorizeNode(node)\n  }\n\n  /**\n   * Funzione che ha come scopo creare un nodo (rete-node).\n   * In particolare gli assegna una struttura vuota.\n   * @param node \n   */\n  createNewNode(node: Node) {\n    let t = getEmptyReteTheaterModuleInstanceInfo()\n    node.data = {\n      ...node.data,\n      ...t\n    }\n  }\n\n  /**\n   * Funzione che ha come scopo la valorizzazione del nodo (rete-node) con i dati in suo possesso.\n   * In quasta fase avviene anche la fase iniziale di instanziamento delle porte input/output.\n   * @param node \n   */\n  valorizeNode(node: Node) {\n    var i: any = node.data['Input'];\n    var o: any = node.data['Output'];\n    var il = i.length;\n    var ol = o.length;\n\n    for (let index = 0; index \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/ReteTheaterVisualizerSettings.html":{"url":"classes/ReteTheaterVisualizerSettings.html","title":"class - ReteTheaterVisualizerSettings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  ReteTheaterVisualizerSettings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/rete-settings/settings/editor-settings/reteTheaterVisualizerSettings.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che ha lo scopo di eseguire i dovuti settaggi all'ambiente di rete.\nQuesta riguarda la parte di ReteTheaterVisualizer\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                components\n                            \n                            \n                                container\n                            \n                            \n                                editor\n                            \n                            \n                                engine\n                            \n                            \n                                nodeSelected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                editorUSE\n                            \n                            \n                                editorUSE_simple\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Costruttore\n        \n            \n                \n                    \nconstructor(container: any, edito: NodeEditor, components: any, engine: Engine)\n                    \n                \n                        \n                            \n                                Definito in src/app/rete-settings/settings/editor-settings/reteTheaterVisualizerSettings.ts:22\n                            \n                        \n\n                \n                    \n                            Costruttore di ReteTheaterVisualizerSettings\n\n                            \n                                    Parametri :\n                                    \n                                        \n                                            \n                                                Nome\n                                                    Tipo\n                                                Opzionale\n                                            \n                                        \n                                        \n                                                \n                                                        container\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        edito\n                                                  \n                                                        \n                                                                    NodeEditor\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        components\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        engine\n                                                  \n                                                        \n                                                                    Engine\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        components\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     null\n\n                    \n                \n                \n                    \n                        Valore predefinito : null\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/settings/editor-settings/reteTheaterVisualizerSettings.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        container\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     null\n\n                    \n                \n                \n                    \n                        Valore predefinito : null\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/settings/editor-settings/reteTheaterVisualizerSettings.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editor\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     NodeEditor\n\n                    \n                \n                \n                    \n                        Valore predefinito : null\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/settings/editor-settings/reteTheaterVisualizerSettings.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        engine\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     Engine\n\n                    \n                \n                \n                    \n                        Valore predefinito : null\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/settings/editor-settings/reteTheaterVisualizerSettings.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nodeSelected\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         any\n\n                    \n                \n                \n                    \n                        Valore predefinito : {}\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/settings/editor-settings/reteTheaterVisualizerSettings.ts:22\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        editorUSE\n                        \n                    \n                \n            \n            \n                \neditorUSE()\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/settings/editor-settings/reteTheaterVisualizerSettings.ts:42\n                \n            \n\n\n            \n                \n                    Funzione che, una volta richiamata, setta l'editor i dovuti plugin.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editorUSE_simple\n                        \n                    \n                \n            \n            \n                \neditorUSE_simple()\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/settings/editor-settings/reteTheaterVisualizerSettings.ts:108\n                \n            \n\n\n            \n                \n                    Funzione che, una volta richiamata, setta l'editor i dovuti plugin.\nQuesta è richiamata quando si renderizza l'editor in modalità simple.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Engine, NodeEditor, Node, Output as or, Input as ir } from \"rete\";\nimport ConnectionPlugin from 'rete-connection-plugin';\nimport ContextMenuPlugin from 'rete-context-menu-plugin';\nimport { AngularRenderPlugin } from 'rete-angular-render-plugin';\nimport AreaPlugin from 'rete-area-plugin';\nimport MinimapPlugin from 'rete-minimap-plugin';\nimport AutoArrangePlugin from 'rete-auto-arrange-plugin'\nimport Vue from 'vue/dist/vue.esm';\nimport { _Socket } from '../../sockets/socket';\nimport HistoryPlugin from 'rete-history-plugin';\n\n\n/**\n * Classe che ha lo scopo di eseguire i dovuti settaggi all'ambiente di rete.\n * Questa riguarda la parte di ReteTheaterVisualizer\n */\nexport class ReteTheaterVisualizerSettings {\n  container = null;\n  editor: NodeEditor = null;\n  components = null;\n  engine: Engine = null;\n  nodeSelected: any = {};\n\n\n  /**\n   * Costruttore di ReteTheaterVisualizerSettings\n   * @param container \n   * @param edito \n   * @param components \n   * @param engine \n   */\n  constructor(container: any, edito: NodeEditor, components: any, engine: Engine) {\n    this.container = container;\n    this.editor = edito;\n    this.components = components;\n    this.engine = engine;\n  }\n\n  /**\n   * Funzione che, una volta richiamata, setta l'editor i dovuti plugin.\n   */\n  editorUSE() {\n\n    this.editor.use(ConnectionPlugin);\n\n    this.editor.use(AngularRenderPlugin)//, { component: MyNodeComponent });\n\n    this.editor.use(MinimapPlugin, { Vue });\n\n    this.editor.use(HistoryPlugin, { keyboard: true });\n\n    this.editor.use(ContextMenuPlugin, {\n      searchBar: false,\n      components: {},\n      items: {\n        \"Undo\": () => {\n          this.editor.trigger(\"undo\");\n        },\n        \"Redo\": () => {\n          this.editor.trigger(\"redo\");\n        },\n        \"Show all nodes\": () => {\n          AreaPlugin.zoomAt(this.editor, this.editor.nodes);\n        },\n        \"Editor\": () => {\n          console.log(JSON.stringify(this.editor.toJSON()));\n        },\n        \"Nodes\": () => {\n          var x = this.editor.toJSON();\n          var z = [];\n          for (let key in x) {\n            let value = x[key];\n            z.push(value);\n          }\n          return z;\n        }\n      },\n      allocate(component: any) {\n        return null;\n      },\n      // rename(component) {\n      //   return component.name;\n      // }\n    });\n\n    this.editor.use(AreaPlugin, {\n      background: false, //righe\n      snap: false,\n      scaleExtent: { min: 0.1, max: 1 },\n      translateExtent: { width: 5000, height: 4000 }\n    })\n\n    this.editor.use(AutoArrangePlugin, {\n      // snap: {size: 64, dynamic: true},\n      margin: { x: 400, y: 100 },\n      depth: 0,\n      vertical: false,\n    })\n\n\n  }\n\n\n  /**\n   * Funzione che, una volta richiamata, setta l'editor i dovuti plugin.\n   * Questa è richiamata quando si renderizza l'editor in modalità simple.\n   */\n  editorUSE_simple() {\n\n    this.editor.use(ConnectionPlugin);\n\n    this.editor.use(AngularRenderPlugin)//, { component: MyNodeComponent });\n\n    this.editor.use(ContextMenuPlugin, {\n      searchBar: false,\n      components: {},\n      items: {\n        \"Show all nodes\": () => {\n          AreaPlugin.zoomAt(this.editor, this.editor.nodes);\n        },\n        \"Editor\": () => {\n          console.log(JSON.stringify(this.editor.toJSON()));\n        },\n        \"Nodes\": () => {\n          var x = this.editor.toJSON();\n          var z = [];\n          for (let key in x) {\n            let value = x[key];\n            z.push(value);\n          }\n          return z;\n        }\n      },\n      allocate(component: any) {\n        return null;\n      },\n      // rename(component) {\n      //   return component.name;\n      // }\n    });\n\n    this.editor.use(AreaPlugin, {\n      background: false, //righe\n      snap: false,\n      scaleExtent: { min: 0.1, max: 1 },\n      translateExtent: { width: 5000, height: 4000 }\n    });\n\n    this.editor.use(AutoArrangePlugin, {\n      margin: { x: 400, y: 200 },\n      depth: 1,\n      vertical: false,\n    });\n\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/SelectOption.html":{"url":"classes/SelectOption.html","title":"class - SelectOption","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  SelectOption\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/data-input/dataInputType.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Tipo usato per le selezioni (multiselect option).\nSee {DataInputComponet}\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                    Opzionale\n                                other\n                            \n                            \n                                text\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        other\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         any\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/data-input/dataInputType.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        text\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/data-input/dataInputType.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/data-input/dataInputType.ts:53\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class DataInputElement{\n    element: Array;\n}\n\n/**\n * Tipo di dato Input contenente variabili generali.\n * @see {DataInputComponet}\n */\nexport class DataInput{\n    id: string;\n    text?: string;\n    type: \"textarea\" | \"text\" | \"selection\" | \"checkbox\";\n    data_prepended?: string;\n    data_appended?: string;\n    required: boolean;\n}\n/**\n * Tipo input text base/area.\n * Estende DataInput.\n  * @see {DataInputComponet}\n */\nexport class DataInputText extends DataInput{\n    placeholder?: string;\n}\n/**\n * Tipo input selection.\n * Estende DataInput.\n  * @see {DataInputComponet}\n */\nexport class DataInputSelection extends DataInput{\n    multiple?: boolean;\n    selected_number: number;\n    selection: SelectOption[];\n}\n/**\n * Tipo input check (toggle).\n * Estende DataInput.\n * @see {DataInputComponet}\n */\nexport class DataInputCheck  extends DataInput{\n    checked?: boolean;\n}\n\n/**\n * Tipo usato per le selezioni (multiselect option).\n  * @see {DataInputComponet}\n */\nexport class SelectOption{\n    value: string;\n    text: string;\n    other?: any;\n}\n\n/**\n * Tipo di ritorno della componente DataInputReturned.\n  * @see {DataInputComponet}\n */\nexport class DataInputReturned{\n    element: { [key:string]: SingleDataInputReturned};\n    isValid: boolean;\n    exitStatus?: 'submitted' | 'cancel' | 'error';\n}\n/**\n * Singolo elemento dato in ritorno al submit.\n  * @see {DataInputComponet}\n */\nexport class SingleDataInputReturned{\n    id: string;\n    text: string;\n    type: string;\n    value: any;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/SimpleAreaDTO.html":{"url":"classes/SimpleAreaDTO.html","title":"class - SimpleAreaDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  SimpleAreaDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsDTO/moduleDTO.ts\n        \n\n\n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                area\n                            \n                            \n                                description\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        area\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:144\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:145\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PageableDTO, SortDTO } from './elementDTO';\nimport { NetworkDTO } from './networkDTO';\nimport { TheaterDTO } from './theaterDTO';\n\n\nexport class ModuleListDTO {\n    content: SimpleModuleDTO[]\n    pageable: PageableDTO\n    last: boolean\n    totalPages: string | number\n    totalElements: string | number\n    size: string | number\n    number: string | number\n    sort: SortDTO\n    numberOfElements: string | number\n    first: boolean\n    empty: boolean\n}\n\n\nexport class TypesCatalogueDTO {\n    group: string\n    id: string | number\n    parentId: {}\n    value: string\n}\n\nexport class ModuleClassificationDTO {\n    blueprintType: string\n    category: string\n    expectedInstanceType: string\n    id: string | number\n    mcClass: string\n    type: string\n    uuid: string\n}\n\nexport class GenericParameterDTO {\n    type: string\n    default: string\n    description: string\n}\n\nexport class ConfigurationTemplateDTO {\n    anchor_parameters: { [name: string]: GenericParameterDTO | string }\n    instance_parameters: { [name: string]: GenericParameterDTO }\n    structural_parameters: { [name: string]: GenericParameterDTO }\n    fixed_parameters: { [name: string]: GenericParameterDTO }\n    control_parameters: { [name: string]: GenericParameterDTO }\n    infrastructure_parameters: { [name: string]: GenericParameterDTO }\n    module: string\n    description: string\n    category: string\n    version: string | number\n    platform: string\n}\n\nexport class ModuleModeDTO {\n    code: string\n    id: string | number\n    name: string\n}\n\nexport class ModuleStatusDTO {\n    descriptionCode: string\n    id: string | number\n    name: string\n}\nexport class StatisticItemDTO {\n    error: string | number\n    updated: string | number\n    inserted: string | number\n}\n\nexport class SimpleModuleDTO {\n    createdBy: string\n    createdDate: string\n    description: string\n    id: string | number\n    isLocked: boolean\n    lastModifiedBy: string\n    lastModifiedDate: string\n    lockAcquiredTimestamp: string\n    lockLastUserAcquiring: string\n    lockReleasedTimestamp: string\n    name: string\n    status: ModuleStatusDTO\n    type?: string | any\n    uuid: string\n    version: string | number\n}\nexport class ModuleDTO extends SimpleModuleDTO {\n    attachments: string[]\n    author: string\n    capabilities: { [name: string]: string }\n    catalog1: TypesCatalogueDTO\n    catalog2: TypesCatalogueDTO\n    catalog3: TypesCatalogueDTO\n    classification: ModuleClassificationDTO\n    configurationTemplate: ConfigurationTemplateDTO\n    detailProperties: {}\n    input: { [name: string]: string }\n    output: { [name: string]: string }\n    mode: ModuleModeDTO\n    statistics: { [name: string]: StatisticItemDTO | string | number }\n    tags: []\n}\n\nexport class ModuleNetworkInterfaceDTO {\n    id: string | number\n    label: string\n    module: ModuleDTO\n    network: NetworkDTO\n    nodeName: string\n    type: string\n    uuid: string\n}\n\nexport class ConsumerInterfaceLinkDTO {\n    local_interface: string\n    module_instance: string\n    remote_interface: string\n}\n\nexport class ModuleInstancePropertiesDTO {\n    area: string\n    description: string\n    module: string\n    version: string | number\n    sequence: string | number\n    consumer_interfaces_link: ConsumerInterfaceLinkDTO[]\n}\n\nexport class AreaDTO {\n    id: string | number;\n    uuid: string;\n    name: string;\n    description: string;\n    theater: TheaterDTO;\n    deleted: boolean | string;\n}\n\nexport class SimpleAreaDTO {\n    area: string\n    description: string\n}\nexport class TheaterInstancePropertiesDTO {\n    mode: string\n    tags: TagTIP[]\n    areas: SimpleAreaDTO[]\n    author: string\n    version: string | number\n    description: string\n}\nexport class TagTIP{\n    tag: string\n}\nexport class ElementIntoTheaterDTO {  // goes into map in blueprint [name:string]: Module...\n    properties: ModuleInstancePropertiesDTO | TheaterInstancePropertiesDTO\n    type: string\n}\nexport class ModuleInstanceDTO {\n    properties: ModuleInstancePropertiesDTO\n    type: string\n}\nexport class TheaterInstanceDTO {\n    properties: TheaterInstancePropertiesDTO\n    type: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/SimpleModuleApplication.html":{"url":"classes/SimpleModuleApplication.html","title":"class - SimpleModuleApplication","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  SimpleModuleApplication\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsApplication/applicationModels.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe contenente gli attributi utilizzati per le operazioni che coinvolgono i moduli.\nps. Questa struttura è prettamente utilizzata nella chiamata che prende tutti i moduli del teatro.\n\n            \n\n            \n                Extends\n            \n            \n                        SimpleModuleDTO\n            \n\n            \n                Implementa\n            \n            \n                            CommonModule\n            \n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                host_number\n                            \n                            \n                                hosts\n                            \n                            \n                                interfaces\n                            \n                            \n                                network_number\n                            \n                            \n                                subnet_number\n                            \n                            \n                                topology\n                            \n                            \n                                createdBy\n                            \n                            \n                                createdDate\n                            \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                isLocked\n                            \n                            \n                                lastModifiedBy\n                            \n                            \n                                lastModifiedDate\n                            \n                            \n                                lockAcquiredTimestamp\n                            \n                            \n                                lockLastUserAcquiring\n                            \n                            \n                                lockReleasedTimestamp\n                            \n                            \n                                name\n                            \n                            \n                                status\n                            \n                            \n                                    Opzionale\n                                type\n                            \n                            \n                                uuid\n                            \n                            \n                                version\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        host_number\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsApplication/applicationModels.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hosts\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     HostModuleDTO[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsApplication/applicationModels.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        interfaces\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ModuleNetworkInterfaceDTO[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsApplication/applicationModels.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        network_number\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsApplication/applicationModels.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subnet_number\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsApplication/applicationModels.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        topology\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         NodeTopologyElement\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsApplication/applicationModels.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:76\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdDate\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:77\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:78\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:79\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLocked\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:80\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastModifiedBy\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:81\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastModifiedDate\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:82\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lockAcquiredTimestamp\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:83\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lockLastUserAcquiring\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:84\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lockReleasedTimestamp\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:85\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:86\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ModuleStatusDTO\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:87\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | any\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:88\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uuid\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:89\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:90\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ReteHostInfo } from \"src/app/rete-settings/nodes/rete-nodes/host/hostNode\";\nimport { ReteNetworkInfo } from \"src/app/rete-settings/nodes/rete-nodes/network/networkNode\";\nimport { ReteSubnetInfo } from \"src/app/rete-settings/nodes/rete-nodes/subnet/subnetNode\";\nimport { ReteMirroringModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/mirroringModuleInstance/mirroringModuleInstanceNode\";\nimport { ReteTheaterInternalServiceModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/theaterInternalServiceModuleInstance/theaterInternalServiceModuleInstanceNode\";\nimport { ReteTheaterModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/theaterModuleInstance/theaterModuleInstanceNode\";\nimport { FlavorBasicInfo } from \"../modelsDTO/falvorDTO\";\nimport { HostModuleDTO } from \"../modelsDTO/hostDTO\";\nimport { ModuleNetworkInterfaceDTO, ModuleInstancePropertiesDTO, SimpleModuleDTO, TheaterInstancePropertiesDTO, ModuleInstanceDTO, ModuleDTO, SimpleAreaDTO, AreaDTO } from \"../modelsDTO/moduleDTO\";\nimport { TheaterDTO } from \"../modelsDTO/theaterDTO\";\n\n\nexport interface CommonModule {\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n}\n\n\n/**\n * Classe contenente gli attributi utilizzati per le operazioni che coinvolgono i moduli.\n * ps. Questa struttura è prettamente utilizzata nella chiamata relativa al singolo modulo.\n */\nexport class ModuleApplication extends ModuleDTO implements CommonModule {\n    imports: string[] // perchè nell'export yaml è previsto\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n}\n// PER IMPLEMENTAZIONI FUTURE, PER COERENZA, PRENDERE DIRETTAMENTE I SINGOLI NODI DALLA CHIAMATA ESCLUSIVA E NON DA QUELLA CHE RESTITUISCE TUTTI I TEATRI\n/**\n * Classe contenente gli attributi utilizzati per le operazioni che coinvolgono i moduli.\n * ps. Questa struttura è prettamente utilizzata nella chiamata che prende tutti i moduli del teatro.\n */\nexport class SimpleModuleApplication extends SimpleModuleDTO implements CommonModule {\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n}\n\n\nexport class ReteConnection {\n    from: string;\n    port_src: string;\n    to: string;\n    port_dst: string;\n}\n\nexport interface TopologyList {\n    rete: any;\n    topology?: TopologyElement\n}\nexport class TopologyElement {\n    elements: { [name: string]: any };\n    connection: ReteConnection[]\n}\n\n// apptype module topology\n\nexport class NodeTopologyElement implements TopologyElement {\n    elements: { [hostName: string]: ReteHostInfo | ReteSubnetInfo | ReteNetworkInfo };\n    connection: ReteConnection[]\n}\n\nexport interface ModuleTopology extends TopologyList {\n    rete: ReteMirroringModuleInstanceInfo | ReteTheaterInternalServiceModuleInstanceInfo | ReteTheaterModuleInstanceInfo\n    topology: NodeTopologyElement;\n}\n\nexport class ModuleInstance extends ModuleInstanceDTO implements ModuleTopology {\n    // moduleTopology data\n    rete: ReteTheaterModuleInstanceInfo | ReteTheaterInternalServiceModuleInstanceInfo | ReteMirroringModuleInstanceInfo;\n    topology: NodeTopologyElement;\n    // other data\n    moduleInfo: SimpleModuleApplication\n}\n\n// apptype theater theater\n\nexport interface TheaterTopology extends TopologyElement {\n    elements: { [hostName: string]: ModuleInstance };\n    connection: ReteConnection[];\n}\n\nexport class TheaterApplication extends TheaterDTO implements TheaterTopology {\n    // theaterTopology data\n    elements: { [hostName: string]: ModuleInstance; };\n    connection: ReteConnection[];\n    // other data\n    properties: TheaterInstancePropertiesDTO;\n    topology: TheaterTopology;\n}\n\nexport class AreaApplication extends AreaDTO {\n    color?: string;\n}\nexport class AreaColorDTO extends SimpleAreaDTO {\n    color: string;\n}\n\n\nexport class FlavorApplication extends FlavorBasicInfo {\n    flavorName: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/SimpleModuleDTO.html":{"url":"classes/SimpleModuleDTO.html","title":"class - SimpleModuleDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  SimpleModuleDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsDTO/moduleDTO.ts\n        \n\n\n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                createdBy\n                            \n                            \n                                createdDate\n                            \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                isLocked\n                            \n                            \n                                lastModifiedBy\n                            \n                            \n                                lastModifiedDate\n                            \n                            \n                                lockAcquiredTimestamp\n                            \n                            \n                                lockLastUserAcquiring\n                            \n                            \n                                lockReleasedTimestamp\n                            \n                            \n                                name\n                            \n                            \n                                status\n                            \n                            \n                                    Opzionale\n                                type\n                            \n                            \n                                uuid\n                            \n                            \n                                version\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdDate\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLocked\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastModifiedBy\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastModifiedDate\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lockAcquiredTimestamp\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:83\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lockLastUserAcquiring\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:84\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lockReleasedTimestamp\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:85\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ModuleStatusDTO\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:87\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | any\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:88\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uuid\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:89\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:90\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PageableDTO, SortDTO } from './elementDTO';\nimport { NetworkDTO } from './networkDTO';\nimport { TheaterDTO } from './theaterDTO';\n\n\nexport class ModuleListDTO {\n    content: SimpleModuleDTO[]\n    pageable: PageableDTO\n    last: boolean\n    totalPages: string | number\n    totalElements: string | number\n    size: string | number\n    number: string | number\n    sort: SortDTO\n    numberOfElements: string | number\n    first: boolean\n    empty: boolean\n}\n\n\nexport class TypesCatalogueDTO {\n    group: string\n    id: string | number\n    parentId: {}\n    value: string\n}\n\nexport class ModuleClassificationDTO {\n    blueprintType: string\n    category: string\n    expectedInstanceType: string\n    id: string | number\n    mcClass: string\n    type: string\n    uuid: string\n}\n\nexport class GenericParameterDTO {\n    type: string\n    default: string\n    description: string\n}\n\nexport class ConfigurationTemplateDTO {\n    anchor_parameters: { [name: string]: GenericParameterDTO | string }\n    instance_parameters: { [name: string]: GenericParameterDTO }\n    structural_parameters: { [name: string]: GenericParameterDTO }\n    fixed_parameters: { [name: string]: GenericParameterDTO }\n    control_parameters: { [name: string]: GenericParameterDTO }\n    infrastructure_parameters: { [name: string]: GenericParameterDTO }\n    module: string\n    description: string\n    category: string\n    version: string | number\n    platform: string\n}\n\nexport class ModuleModeDTO {\n    code: string\n    id: string | number\n    name: string\n}\n\nexport class ModuleStatusDTO {\n    descriptionCode: string\n    id: string | number\n    name: string\n}\nexport class StatisticItemDTO {\n    error: string | number\n    updated: string | number\n    inserted: string | number\n}\n\nexport class SimpleModuleDTO {\n    createdBy: string\n    createdDate: string\n    description: string\n    id: string | number\n    isLocked: boolean\n    lastModifiedBy: string\n    lastModifiedDate: string\n    lockAcquiredTimestamp: string\n    lockLastUserAcquiring: string\n    lockReleasedTimestamp: string\n    name: string\n    status: ModuleStatusDTO\n    type?: string | any\n    uuid: string\n    version: string | number\n}\nexport class ModuleDTO extends SimpleModuleDTO {\n    attachments: string[]\n    author: string\n    capabilities: { [name: string]: string }\n    catalog1: TypesCatalogueDTO\n    catalog2: TypesCatalogueDTO\n    catalog3: TypesCatalogueDTO\n    classification: ModuleClassificationDTO\n    configurationTemplate: ConfigurationTemplateDTO\n    detailProperties: {}\n    input: { [name: string]: string }\n    output: { [name: string]: string }\n    mode: ModuleModeDTO\n    statistics: { [name: string]: StatisticItemDTO | string | number }\n    tags: []\n}\n\nexport class ModuleNetworkInterfaceDTO {\n    id: string | number\n    label: string\n    module: ModuleDTO\n    network: NetworkDTO\n    nodeName: string\n    type: string\n    uuid: string\n}\n\nexport class ConsumerInterfaceLinkDTO {\n    local_interface: string\n    module_instance: string\n    remote_interface: string\n}\n\nexport class ModuleInstancePropertiesDTO {\n    area: string\n    description: string\n    module: string\n    version: string | number\n    sequence: string | number\n    consumer_interfaces_link: ConsumerInterfaceLinkDTO[]\n}\n\nexport class AreaDTO {\n    id: string | number;\n    uuid: string;\n    name: string;\n    description: string;\n    theater: TheaterDTO;\n    deleted: boolean | string;\n}\n\nexport class SimpleAreaDTO {\n    area: string\n    description: string\n}\nexport class TheaterInstancePropertiesDTO {\n    mode: string\n    tags: TagTIP[]\n    areas: SimpleAreaDTO[]\n    author: string\n    version: string | number\n    description: string\n}\nexport class TagTIP{\n    tag: string\n}\nexport class ElementIntoTheaterDTO {  // goes into map in blueprint [name:string]: Module...\n    properties: ModuleInstancePropertiesDTO | TheaterInstancePropertiesDTO\n    type: string\n}\nexport class ModuleInstanceDTO {\n    properties: ModuleInstancePropertiesDTO\n    type: string\n}\nexport class TheaterInstanceDTO {\n    properties: TheaterInstancePropertiesDTO\n    type: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/SingleDataInputReturned.html":{"url":"classes/SingleDataInputReturned.html","title":"class - SingleDataInputReturned","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  SingleDataInputReturned\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/data-input/dataInputType.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Singolo elemento dato in ritorno al submit.\nSee {DataInputComponet}\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                text\n                            \n                            \n                                type\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/data-input/dataInputType.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        text\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/data-input/dataInputType.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/data-input/dataInputType.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         any\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/data-input/dataInputType.ts:75\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class DataInputElement{\n    element: Array;\n}\n\n/**\n * Tipo di dato Input contenente variabili generali.\n * @see {DataInputComponet}\n */\nexport class DataInput{\n    id: string;\n    text?: string;\n    type: \"textarea\" | \"text\" | \"selection\" | \"checkbox\";\n    data_prepended?: string;\n    data_appended?: string;\n    required: boolean;\n}\n/**\n * Tipo input text base/area.\n * Estende DataInput.\n  * @see {DataInputComponet}\n */\nexport class DataInputText extends DataInput{\n    placeholder?: string;\n}\n/**\n * Tipo input selection.\n * Estende DataInput.\n  * @see {DataInputComponet}\n */\nexport class DataInputSelection extends DataInput{\n    multiple?: boolean;\n    selected_number: number;\n    selection: SelectOption[];\n}\n/**\n * Tipo input check (toggle).\n * Estende DataInput.\n * @see {DataInputComponet}\n */\nexport class DataInputCheck  extends DataInput{\n    checked?: boolean;\n}\n\n/**\n * Tipo usato per le selezioni (multiselect option).\n  * @see {DataInputComponet}\n */\nexport class SelectOption{\n    value: string;\n    text: string;\n    other?: any;\n}\n\n/**\n * Tipo di ritorno della componente DataInputReturned.\n  * @see {DataInputComponet}\n */\nexport class DataInputReturned{\n    element: { [key:string]: SingleDataInputReturned};\n    isValid: boolean;\n    exitStatus?: 'submitted' | 'cancel' | 'error';\n}\n/**\n * Singolo elemento dato in ritorno al submit.\n  * @see {DataInputComponet}\n */\nexport class SingleDataInputReturned{\n    id: string;\n    text: string;\n    type: string;\n    value: any;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/SortDTO.html":{"url":"classes/SortDTO.html","title":"class - SortDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  SortDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsDTO/elementDTO.ts\n        \n\n\n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                empty\n                            \n                            \n                                sorted\n                            \n                            \n                                unsorted\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        empty\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/elementDTO.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sorted\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/elementDTO.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unsorted\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/elementDTO.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class SortDTO {\n    empty: boolean\n    sorted: boolean\n    unsorted: boolean\n}\nexport class PageableDTO {\n    offset: string | number\n    pageNumber: string | number\n    pageSize: string | number\n    paged: boolean\n    sort: SortDTO\n    unpaged: boolean\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/SourceExport.html":{"url":"classes/SourceExport.html","title":"class - SourceExport","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  SourceExport\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsExport/theaterExport.ts\n        \n\n\n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                host\n                            \n                            \n                                interfaces\n                            \n                            \n                                module_instance\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        host\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/theaterExport.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        interfaces\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/theaterExport.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        module_instance\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/theaterExport.ts:47\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ModeTypeExport, ModuleTypeExport, TheaterTypeExport, ToscaDefinitionType } from \"./TypeExport\"\n\n/**\n * Classe utilizzata per l'export. \n * Contiene le informazioni generali per il teatro che devono esserci nello standard Tosca.\n */\nexport class TheaterExport {\n    tosca_definitions_version: ToscaDefinitionType\n    description: string\n    imports: string[]\n    node_templates: { [name: string]: TheaterSimpleData | ModuleInstanceSimpleData }\n}\n\nexport class TheaterSimpleData {\n    type: TheaterTypeExport\n    properties: PropertiesTSD\n}\nexport class PropertiesTSD {\n    version: string | number\n    description: string\n    mode: ModeTypeExport\n    author: string\n    tags: TagsExport[]\n    areas: AreaExport[]\n}\nexport class TagsExport {\n    tag: string\n}\nexport class AreaExport {\n    area: string\n    description: string\n}\n\nexport class ModuleInstanceSimpleData {\n    type: ModuleTypeExport\n    properties: PropertiesMISD\n}\nexport class PropertiesMISD{\n    module: string\n    version: string | number\n    area: string\n    sequence: number\n    sources?: SourceExport[]\n    consumer_interface_link: ConsumerInterfaceLinkExport[]\n}\nexport class SourceExport{\n    module_instance: string\n    host:string\n    interfaces: string[]\n}\nexport class ConsumerInterfaceLinkExport{\n    local_interface: string\n    module_interface:string\n    remote_interface:string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/SpinnerData.html":{"url":"classes/SpinnerData.html","title":"class - SpinnerData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  SpinnerData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/application/spinner/spinner.service.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe utilizzata per lo stato dello spinner.\nSee {SpinnerService}\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                show\n                            \n                            \n                                text\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        show\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/application/spinner/spinner.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        text\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/application/spinner/spinner.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { Observable, Subject } from 'rxjs';\n\n/**\n * Classe utilizzata per lo stato dello spinner.\n * @see {SpinnerService}\n */\nclass SpinnerData {\n  show: boolean;\n  text: string\n}\n\n/**\n * Servizio di settaggio dello spinner (operazioni di loading).\n * Questo serivizio è associato allo spinner situato nell'AppComponent.\n * Questo servizio rende raggiungibile lo stesso dalle diverse componenti dell'applicazione. \n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class SpinnerService {\n\n  /**\n   * Variabile che memorizza lo stato dello spinner.\n   * @type {Subject}\n   */\n  protected spinnerData: Subject = new Subject();\n\n  /**\n   * Costruttore dello SpinnerService\n   * Setta lo spinner come \"hide\"\n   * @param ss \n   */\n  constructor(private ss: NgxSpinnerService) {\n    this.setSpinner(false);\n  }\n\n  /**\n   * Funzione che ritorna l'observable dello stato dello spinner.\n   * @returns {Observable}\n   */\n  getSpinner(): Observable {\n    return this.spinnerData.asObservable();\n  }\n\n  /**\n   * Funzone che setta lo stato dello spinner.\n   * @param show \n   * @param text \n   */\n  setSpinner(show: boolean, text: string = \"Loading\") {\n    this.spinnerData.next({ show: show, text: text });\n    show\n      ? this.ss.show()\n      : this.ss.hide();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"injectables/SpinnerService.html":{"url":"injectables/SpinnerService.html","title":"injectable - SpinnerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SpinnerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/application/spinner/spinner.service.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Servizio di settaggio dello spinner (operazioni di loading).\nQuesto serivizio è associato allo spinner situato nell'AppComponent.\nQuesto servizio rende raggiungibile lo stesso dalle diverse componenti dell'applicazione.\n\n            \n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                spinnerData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                getSpinner\n                            \n                            \n                                setSpinner\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Costruttore\n        \n            \n                \n                    \nconstructor(ss: NgxSpinnerService)\n                    \n                \n                        \n                            \n                                Definito in src/app/services/application/spinner/spinner.service.ts:28\n                            \n                        \n\n                \n                    \n                            Costruttore dello SpinnerService\nSetta lo spinner come \"hide\"\n\n                            \n                                    Parametri :\n                                    \n                                        \n                                            \n                                                Nome\n                                                    Tipo\n                                                Opzionale\n                                            \n                                        \n                                        \n                                                \n                                                        ss\n                                                  \n                                                        \n                                                                        NgxSpinnerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        getSpinner\n                        \n                    \n                \n            \n            \n                \ngetSpinner()\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/spinner/spinner.service.ts:43\n                \n            \n\n\n            \n                \n                    Funzione che ritorna l'observable dello stato dello spinner.\n\n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSpinner\n                        \n                    \n                \n            \n            \n                \nsetSpinner(show: boolean, text: string)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/spinner/spinner.service.ts:52\n                \n            \n\n\n            \n                \n                    Funzone che setta lo stato dello spinner.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                    Valore predefinito\n                                \n                            \n                            \n                                \n                                    show\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        \"Loading\"\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        spinnerData\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         Subject\n\n                    \n                \n                \n                    \n                        Valore predefinito : new Subject()\n                    \n                \n                    \n                        \n                                Definito in src/app/services/application/spinner/spinner.service.ts:28\n                        \n                    \n\n            \n                \n                    Variabile che memorizza lo stato dello spinner.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { Observable, Subject } from 'rxjs';\n\n/**\n * Classe utilizzata per lo stato dello spinner.\n * @see {SpinnerService}\n */\nclass SpinnerData {\n  show: boolean;\n  text: string\n}\n\n/**\n * Servizio di settaggio dello spinner (operazioni di loading).\n * Questo serivizio è associato allo spinner situato nell'AppComponent.\n * Questo servizio rende raggiungibile lo stesso dalle diverse componenti dell'applicazione. \n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class SpinnerService {\n\n  /**\n   * Variabile che memorizza lo stato dello spinner.\n   * @type {Subject}\n   */\n  protected spinnerData: Subject = new Subject();\n\n  /**\n   * Costruttore dello SpinnerService\n   * Setta lo spinner come \"hide\"\n   * @param ss \n   */\n  constructor(private ss: NgxSpinnerService) {\n    this.setSpinner(false);\n  }\n\n  /**\n   * Funzione che ritorna l'observable dello stato dello spinner.\n   * @returns {Observable}\n   */\n  getSpinner(): Observable {\n    return this.spinnerData.asObservable();\n  }\n\n  /**\n   * Funzone che setta lo stato dello spinner.\n   * @param show \n   * @param text \n   */\n  setSpinner(show: boolean, text: string = \"Loading\") {\n    this.spinnerData.next({ show: show, text: text });\n    show\n      ? this.ss.show()\n      : this.ss.hide();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/StatisticItemDTO.html":{"url":"classes/StatisticItemDTO.html","title":"class - StatisticItemDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  StatisticItemDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsDTO/moduleDTO.ts\n        \n\n\n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                inserted\n                            \n                            \n                                updated\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        inserted\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updated\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:71\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PageableDTO, SortDTO } from './elementDTO';\nimport { NetworkDTO } from './networkDTO';\nimport { TheaterDTO } from './theaterDTO';\n\n\nexport class ModuleListDTO {\n    content: SimpleModuleDTO[]\n    pageable: PageableDTO\n    last: boolean\n    totalPages: string | number\n    totalElements: string | number\n    size: string | number\n    number: string | number\n    sort: SortDTO\n    numberOfElements: string | number\n    first: boolean\n    empty: boolean\n}\n\n\nexport class TypesCatalogueDTO {\n    group: string\n    id: string | number\n    parentId: {}\n    value: string\n}\n\nexport class ModuleClassificationDTO {\n    blueprintType: string\n    category: string\n    expectedInstanceType: string\n    id: string | number\n    mcClass: string\n    type: string\n    uuid: string\n}\n\nexport class GenericParameterDTO {\n    type: string\n    default: string\n    description: string\n}\n\nexport class ConfigurationTemplateDTO {\n    anchor_parameters: { [name: string]: GenericParameterDTO | string }\n    instance_parameters: { [name: string]: GenericParameterDTO }\n    structural_parameters: { [name: string]: GenericParameterDTO }\n    fixed_parameters: { [name: string]: GenericParameterDTO }\n    control_parameters: { [name: string]: GenericParameterDTO }\n    infrastructure_parameters: { [name: string]: GenericParameterDTO }\n    module: string\n    description: string\n    category: string\n    version: string | number\n    platform: string\n}\n\nexport class ModuleModeDTO {\n    code: string\n    id: string | number\n    name: string\n}\n\nexport class ModuleStatusDTO {\n    descriptionCode: string\n    id: string | number\n    name: string\n}\nexport class StatisticItemDTO {\n    error: string | number\n    updated: string | number\n    inserted: string | number\n}\n\nexport class SimpleModuleDTO {\n    createdBy: string\n    createdDate: string\n    description: string\n    id: string | number\n    isLocked: boolean\n    lastModifiedBy: string\n    lastModifiedDate: string\n    lockAcquiredTimestamp: string\n    lockLastUserAcquiring: string\n    lockReleasedTimestamp: string\n    name: string\n    status: ModuleStatusDTO\n    type?: string | any\n    uuid: string\n    version: string | number\n}\nexport class ModuleDTO extends SimpleModuleDTO {\n    attachments: string[]\n    author: string\n    capabilities: { [name: string]: string }\n    catalog1: TypesCatalogueDTO\n    catalog2: TypesCatalogueDTO\n    catalog3: TypesCatalogueDTO\n    classification: ModuleClassificationDTO\n    configurationTemplate: ConfigurationTemplateDTO\n    detailProperties: {}\n    input: { [name: string]: string }\n    output: { [name: string]: string }\n    mode: ModuleModeDTO\n    statistics: { [name: string]: StatisticItemDTO | string | number }\n    tags: []\n}\n\nexport class ModuleNetworkInterfaceDTO {\n    id: string | number\n    label: string\n    module: ModuleDTO\n    network: NetworkDTO\n    nodeName: string\n    type: string\n    uuid: string\n}\n\nexport class ConsumerInterfaceLinkDTO {\n    local_interface: string\n    module_instance: string\n    remote_interface: string\n}\n\nexport class ModuleInstancePropertiesDTO {\n    area: string\n    description: string\n    module: string\n    version: string | number\n    sequence: string | number\n    consumer_interfaces_link: ConsumerInterfaceLinkDTO[]\n}\n\nexport class AreaDTO {\n    id: string | number;\n    uuid: string;\n    name: string;\n    description: string;\n    theater: TheaterDTO;\n    deleted: boolean | string;\n}\n\nexport class SimpleAreaDTO {\n    area: string\n    description: string\n}\nexport class TheaterInstancePropertiesDTO {\n    mode: string\n    tags: TagTIP[]\n    areas: SimpleAreaDTO[]\n    author: string\n    version: string | number\n    description: string\n}\nexport class TagTIP{\n    tag: string\n}\nexport class ElementIntoTheaterDTO {  // goes into map in blueprint [name:string]: Module...\n    properties: ModuleInstancePropertiesDTO | TheaterInstancePropertiesDTO\n    type: string\n}\nexport class ModuleInstanceDTO {\n    properties: ModuleInstancePropertiesDTO\n    type: string\n}\nexport class TheaterInstanceDTO {\n    properties: TheaterInstancePropertiesDTO\n    type: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"injectables/StorageService.html":{"url":"injectables/StorageService.html","title":"injectable - StorageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/application/storage/storage.service.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Service che si occupa dello storaging di dati condivisibili attraverso le componenti.\n\n            \n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _data\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessori\n                        \n                    \n                    \n                        \n                            \n                                \n                                    data\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Costruttore\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Definito in src/app/services/application/storage/storage.service.ts:27\n                            \n                        \n\n            \n        \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _data\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         any\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/application/storage/storage.service.ts:14\n                        \n                    \n\n            \n                \n                    Variabile che memorizza le informazioni da salvare\n\n                \n            \n\n        \n    \n\n\n            \n    \n        Accessori\n    \n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n\n                \n                    \n                        getdata()\n                    \n                \n                            \n                                \n                                    Definito in src/app/services/application/storage/storage.service.ts:25\n                                \n                            \n                    \n                        \n                                Funzione che ritorna i dati memorizzati.\n\n\n                        \n                    \n\n                \n                    \n                        setdata(data: any)\n                    \n                \n                            \n                                \n                                    Definito in src/app/services/application/storage/storage.service.ts:19\n                                \n                            \n                    \n                        \n                                Funzione che consente di settare i dati.\n\n\n                                \n                                        Parametri :\n                                        \n                                            \n                                                \n                                                    Nome\n                                                        Tipo\n                                                    Opzionale\n                                                \n                                            \n                                            \n                                                    \n                                                            data\n                                                    \n                                                            \n                                                                            any\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n * Service che si occupa dello storaging di dati condivisibili attraverso le componenti.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class StorageService {\n\n  /**\n   * Variabile che memorizza le informazioni da salvare\n   */\n  private _data: any;\n\n  /**\n   * Funzione che consente di settare i dati.\n   */\n  set data(data: any) {\n    this._data = data;\n  }\n  /**\n   * Funzione che ritorna i dati memorizzati.\n   */\n  get data() {\n    return this._data;\n  }\n\n  constructor() { }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"components/SubnetComponent.html":{"url":"components/SubnetComponent.html","title":"component - SubnetComponent","body":"\n                   \n\n\n\n\n\n  Componenti\n  \n  SubnetComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/rete-settings/nodes/rete-nodes/subnet/subnet.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n            NodeComponent\n    \n\n\n\n\n    Metadati\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            NodeService\n                \n            \n\n\n\n            \n                styleUrls\n                ./subnet.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./subnet.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                NodeType\n                            \n                            \n                                showInputOutlet\n                            \n                            \n                                showOutputOutlet\n                            \n                            \n                                showPorts\n                            \n                            \n                                SubnetIcon\n                            \n                        \n                    \n                \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                showhidesocket\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Costruttore\n        \n            \n                \n                    \nconstructor(service: NodeService, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Definito in src/app/rete-settings/nodes/rete-nodes/subnet/subnet.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parametri :\n                                    \n                                        \n                                            \n                                                Nome\n                                                    Tipo\n                                                Opzionale\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                    NodeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        showhidesocket\n                        \n                    \n                \n            \n            \n                \nshowhidesocket()\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-nodes/subnet/subnet.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        NodeType\n                        \n                    \n                \n            \n                \n                    \n                        Valore predefinito : EnumNodeType\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-nodes/subnet/subnet.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showInputOutlet\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                \n                    \n                        Valore predefinito : true\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-nodes/subnet/subnet.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showOutputOutlet\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                \n                    \n                        Valore predefinito : true\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-nodes/subnet/subnet.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showPorts\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                \n                    \n                        Valore predefinito : true\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-nodes/subnet/subnet.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SubnetIcon\n                        \n                    \n                \n            \n                \n                    \n                        Valore predefinito : SubnetIcon\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-nodes/subnet/subnet.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, ChangeDetectorRef, ChangeDetectionStrategy } from '@angular/core';\nimport { NodeComponent, NodeService } from 'rete-angular-render-plugin';\nimport { EnumNodeType } from 'src/app/models/appType';\nimport { SubnetIcon } from 'src/app/rete-settings/style/styleIconConfig';\n// import { EnumNodeType } from 'src/app/rete-settings/models/reteModelType';\n\n@Component({\n  templateUrl: './subnet.component.html',\n  styleUrls: ['./subnet.component.sass',],\n  providers: [NodeService],\n  changeDetection: ChangeDetectionStrategy.OnPush, // render più veloce.\n})\n\nexport class SubnetComponent extends NodeComponent {\n\n  showPorts: boolean = true;\n  showOutputOutlet: boolean = true;\n  showInputOutlet: boolean = true;\n  NodeType = EnumNodeType;\n  SubnetIcon = SubnetIcon;\n\n  constructor(\n    protected service: NodeService,\n    protected cdr: ChangeDetectorRef) {\n    super(service, cdr);\n  }\n\n  showhidesocket() {\n    this.showPorts = !this.showPorts;\n  }\n  \n}\n\n    \n\n    \n        \n\n\n  \n    \n      \n        \n          {{ node.data.name === \"\" || node.data.name === undefined ? \"Assign name\" : node.data.name }}\n        \n      \n      \n        \n          \n          \n        \n      \n    \n   -->\n\n\n  \n  \n    \n      \n        \n          \n            \n              \n                \n              \n              \n                \n                  {{\n                  (node.data.name && node.data.name!=='')\n                  ?node.data.name\n                  :NodeType.SUBNET\n                  }}\n                \n                \n                  {{\n                  (node.data.cidr && node.data.cidr!=='')\n                  ?\"cidr: \"+node.data.cidr\n                  :''\n                  }}\n                \n                \n                  {{\n                  (node.data.isDhcp !== undefined)\n                  ? \"DHCP: \"+ (node.data.isDhcp?\"true\":\"false\")\n                  :''\n                  }}\n                \n                \n                  {{\n                  (node.data.version && node.data.version!=='')\n                  ?\"version: \"+node.data.version\n                  :''\n                  }}\n                \n              \n            \n          \n        \n      \n    \n  \n\n\n  \n    \n      Button with data-bs-target\n    \n  \n  \n    \n      Some placeholder content for the collapse component. This panel is hidden by default but revealed when the user\n      activates the relevant trigger.\n    \n   -->\n\n\n  \n\n    \n    \n      \n        {{output.name}}\n        \n          \n          \n        \n      \n    \n\n\n     -->\n\n    \n    \n      \n        \n          \n          \n          \n        \n        {{input.name}}\n        \n      \n    \n\n  \n    \n\n    \n                \n                    ./subnet.component.sass\n                \n                @import \"../vars\"\n\n.node\n  background: $node-color\n  border: 2px solid #f124\n  border-radius: 10px\n  cursor: pointer\n  min-width: $node-width\n  height: auto\n  padding-bottom: 6px\n  box-sizing: content-box\n  position: relative\n  user-select: none\n  &:hover\n    background: lighten($node-color,4%)\n  &.selected\n    background: $node-color-selected\n    border-color: #ff0000\n  .title\n    color: $text-color\n    font-family: $font-fam\n    font-size: 18px\n    padding: 8px\n  .output\n    text-align: right\n    display: flex\n    justify-content: flex-end\n  .input\n    text-align: left\n    display: flex\n    justify-content: flex-start\n  .input-title,.output-title\n    vertical-align: middle\n    color: $text-color\n    display: inline-block\n    font-family: $font-fam\n    font-size: 14px\n    margin: $socket-margin\n    line-height: $socket-size\n    &[hidden]\n      display: none\n  .input-control\n    z-index: 1\n    width: calc(100% - #{$socket-size + 2*$socket-margin})\n    vertical-align: middle\n    display: inline-block\n  .control\n    padding: $socket-margin $socket-size/2 + $socket-margin\n    \n\n    \n        \n        \n            \n                Legenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento html con direttive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              {{ node.data.name === \"\" || node.data.name === undefined ? \"Assign name\" : node.data.name }}                                                                     -->                                                                                                                                        {{                  (node.data.name && node.data.name!==\\'\\')                  ?node.data.name                  :NodeType.SUBNET                  }}                                                  {{                  (node.data.cidr && node.data.cidr!==\\'\\')                  ?\"cidr: \"+node.data.cidr                  :\\'\\'                  }}                                                  {{                  (node.data.isDhcp !== undefined)                  ? \"DHCP: \"+ (node.data.isDhcp?\"true\":\"false\")                  :\\'\\'                  }}                                                  {{                  (node.data.version && node.data.version!==\\'\\')                  ?\"version: \"+node.data.version                  :\\'\\'                  }}                                                                                    Button with data-bs-target                  Some placeholder content for the collapse component. This panel is hidden by default but revealed when the user      activates the relevant trigger.       -->                        {{output.name}}                                                   -->                                                                    {{input.name}}                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ComposerComponent', 'selector': 'app-composer'},{'name': 'ControlTemplate', 'selector': ''},{'name': 'DataInputComponent', 'selector': 'app-data-input'},{'name': 'DataInputV2Component', 'selector': 'app-data-input-v2'},{'name': 'DataItemComponent', 'selector': 'app-window-item'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HostComponent', 'selector': ''},{'name': 'HowToUseComponent', 'selector': 'app-how-to-use'},{'name': 'MirroringModuleInstanceComponent', 'selector': ''},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavbarElementComponent', 'selector': 'app-navbar-element'},{'name': 'NetworkComponent', 'selector': ''},{'name': 'OffcanvasComponent', 'selector': 'app-offcanvas'},{'name': 'ReteModuleComposerComponent', 'selector': 'app-rete-module-composer'},{'name': 'ReteModuleVisualizerComponent', 'selector': 'app-rete-module-visualizer'},{'name': 'ReteTheaterComposerComponent', 'selector': 'app-rete-theater-composer'},{'name': 'ReteTheaterVisualizerComponent', 'selector': 'app-rete-theater-visualizer'},{'name': 'SubnetComponent', 'selector': ''},{'name': 'TabnavComponent', 'selector': 'app-tabnav'},{'name': 'TheaterInternalServiceModuleInstanceComponent', 'selector': ''},{'name': 'TheaterModuleInstanceComponent', 'selector': ''},{'name': 'UnderbarComponent', 'selector': 'app-underbar'},{'name': 'VisualizerComponent', 'selector': 'app-displayer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SubnetComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/SubnetDTO.html":{"url":"classes/SubnetDTO.html","title":"class - SubnetDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  SubnetDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsDTO/networkDTO.ts\n        \n\n\n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                allocationPool\n                            \n                            \n                                borderNetwork\n                            \n                            \n                                cidr\n                            \n                            \n                                dns\n                            \n                            \n                                gateway\n                            \n                            \n                                id\n                            \n                            \n                                isDhcp\n                            \n                            \n                                name\n                            \n                            \n                                network\n                            \n                            \n                                router\n                            \n                            \n                                uuid\n                            \n                            \n                                version\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        allocationPool\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/networkDTO.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        borderNetwork\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         BorderNetworkDTO\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/networkDTO.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cidr\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/networkDTO.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dns\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/networkDTO.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gateway\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/networkDTO.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/networkDTO.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDhcp\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/networkDTO.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/networkDTO.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        network\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         NetworkDTO\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/networkDTO.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         NetOSRouterDTO\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/networkDTO.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uuid\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/networkDTO.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/networkDTO.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class NetworkDTO {\n    id: string | number\n    name: string\n    uuid: string\n}\n\nexport class BorderNetworkDTO {\n    bnName: string\n    id: string | number\n    subnet: {} | null\n    uuid: string | number\n}\n\nexport class NetOSRouterDTO {\n    borderNetwork: BorderNetworkDTO\n    id: string | number\n    subnet: {} | null\n    uuid: string | number\n}\n\nexport class SubnetDTO {\n    allocationPool: string\n    borderNetwork: BorderNetworkDTO\n    cidr: string\n    dns: string\n    gateway: string\n    id: string | number\n    isDhcp: boolean\n    name: string\n    network: NetworkDTO\n    router: NetOSRouterDTO\n    uuid: string\n    version: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/SubnetExport.html":{"url":"classes/SubnetExport.html","title":"class - SubnetExport","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  SubnetExport\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsExport/moduleExport.ts\n        \n\n\n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                subnet\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        subnet\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:75\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ModeTypeExport, ModuleTypeExport, NetworkTypeExport, NodeTypeExport, PortTypeExport, RelationshipsTypeExport, SubnetTypeExport, ToscaDefinitionType } from \"./TypeExport\"\n\n\n/**\n * Classe utilizzata per l'export. \n * Contiene le informazioni generali per il modulo che devono esserci nello standard Tosca.\n */\nexport class ModuleExport {\n    tosca_definitions_version: ToscaDefinitionType\n    description: string\n    imports: string[]\n    node_templates: { [name: string]: ModuleSimpleData | NodeSimpleData | PortSimpleData | NetworkSimpleData | SubnetSimpleData }\n    dsl_definition: any | null; //future\n    capabilites: any | null //future\n    outputs: any | null //future\n}\n\n\nexport class ModuleSimpleData {\n    type: ModuleTypeExport\n    properties: PropertiesMSD\n}\nexport class PropertiesMSD {\n    mode: ModeTypeExport\n    description: string\n    version: string | number\n    constraints: ConstraintsMSD\n    interface_networks: {\n        providers: InterfaceNetworksProvider[]\n        consumers: InterfaceNetworksConsumer[]\n    }\n    virtual_machines: VirtualMachine[]\n}\nexport class ConstraintsMSD {\n    interface_constraints: InterfaceConstraints[]\n    module_constraints: ModuleConstraints[]\n    network_constraints: NetworkConstraints[]\n}\nexport class InterfaceConstraints {\n    local_interface: string\n    multiple_mode: boolean = false //future\n    module_name: string\n    compatibility: string = \"1.0\" // future\n    remote_interface: string\n}\nexport class ModuleConstraints {\n}\nexport class NetworkConstraints {\n}\n\nexport class InterfaceNetworksProvider {\n    interface: string\n    network: string\n    tag: string\n    subnets: SubnetExport[]\n}\nexport class InterfaceNetworksConsumer {\n    interface: string\n    network: string\n    tag: string\n    subnets: SubnetExport[]\n}\n\nexport class VirtualMachine {\n    virtual_machine: string\n    ports: VirtualMachinePorts[]\n}\nexport class VirtualMachinePorts {\n    port: string\n    network: string\n    subnets: SubnetExport[]\n}\n\nexport class SubnetExport {\n    subnet: string;\n}\n\nexport class NodeSimpleData {\n    type: NodeTypeExport\n    properties: any | null // future\n    interfaces: any | null // future\n    relationships: RelationshipsExport[]\n}\n\nexport class RelationshipsExport {\n    type: RelationshipsTypeExport\n    target: string\n}\n\nexport class PortSimpleData {\n    type: PortTypeExport\n    relationships: RelationshipsExport[]\n}\n\nexport class NetworkSimpleData {\n    type: NetworkTypeExport\n    properties: PropertiesNSD\n}\nexport class PropertiesNSD {\n    openstack_config?: any | null // future\n    use_external_resource?: boolean | null // future\n    resource_id?: any | null // future\n}\n\n\nexport class SubnetSimpleData {\n    type: SubnetTypeExport\n    relationships: RelationshipsExport[]\n    properties: PropertiesSSD\n}\nexport class PropertiesSSD {\n    subnet?: {\n        ip_version: string | number\n        cidr: string\n        enable_dhcp: boolean\n        gateway_ip?: any | null // future\n    }\n    openstack_config?: any | null // future\n    use_external_resource?: boolean | null // future\n    resource_id?: any | null // future\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/SubnetNode.html":{"url":"classes/SubnetNode.html","title":"class - SubnetNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  SubnetNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/rete-settings/nodes/rete-nodes/subnet/subnetNode.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che rappresenta il nodo (rete-node) Subnet all'interno del canvas/editor di rete.\n\n            \n\n            \n                Extends\n            \n            \n                        Component\n            \n\n            \n                Implementa\n            \n            \n                        AngularComponent\n            \n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                builder\n                            \n                            \n                                created\n                            \n                            \n                                createNewNode\n                            \n                            \n                                destroyed\n                            \n                            \n                                valorizeNode\n                            \n                            \n                                worker\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Costruttore\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Definito in src/app/rete-settings/nodes/rete-nodes/subnet/subnetNode.ts:46\n                            \n                        \n\n                \n                    \n                            Costruttore di SubnetNode\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     AngularComponentData\n\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-nodes/subnet/subnetNode.ts:46\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        builder\n                        \n                    \n                \n            \n            \n                \n                    \n                    builder(node: Node)\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-nodes/subnet/subnetNode.ts:64\n                \n            \n\n\n            \n                \n                    Funzione richiamata in fase di costruzione del nodo (rete-node).\nControlla se bisogna instanziare il nodo oppure crearne uno nuovo:\n\nIn fase di design, il nodo non ha dati, per cui bisogna crearne uno nuovo.\nIn fase di visualizing, il nodo presenta dei dati, per cui va valorizzato il nodo.\n\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        created\n                        \n                    \n                \n            \n            \n                \ncreated(node)\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-nodes/subnet/subnetNode.ts:127\n                \n            \n\n\n            \n                \n                    Funzione richiamata una volta in nodo creato.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    node\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createNewNode\n                        \n                    \n                \n            \n            \n                \ncreateNewNode(node: Node)\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-nodes/subnet/subnetNode.ts:76\n                \n            \n\n\n            \n                \n                    Funzione che ha come scopo creare un nodo (rete-node).\nIn particolare gli assegna una struttura vuota.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destroyed\n                        \n                    \n                \n            \n            \n                \ndestroyed(node)\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-nodes/subnet/subnetNode.ts:135\n                \n            \n\n\n            \n                \n                    Funzione richiamata una volta in nodo cancellato.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    node\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        valorizeNode\n                        \n                    \n                \n            \n            \n                \nvalorizeNode(node: Node)\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-nodes/subnet/subnetNode.ts:89\n                \n            \n\n\n            \n                \n                    Funzione che ha come scopo la valorizzazione del nodo (rete-node) con i dati in suo possesso.\nIn quasta fase avviene anche la fase iniziale di instanziamento delle porte input/output.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        worker\n                        \n                    \n                \n            \n            \n                \nworker(node: NodeData, inputs: WorkerInputs, outputs: WorkerOutputs)\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-nodes/subnet/subnetNode.ts:119\n                \n            \n\n\n            \n                \n                    Funzione richiamta per eseguire operazioni che conivolgono computazioni dei nodi.\nNon sono necessari in questa versione.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                            NodeData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    inputs\n                                    \n                                            WorkerInputs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    outputs\n                                    \n                                            WorkerOutputs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Component, Input, Output, Node } from 'rete';\nimport { _Socket } from '../../../sockets/socket';\nimport { _Control } from '../../../controls/control';\nimport { AngularComponent, AngularComponentData } from 'rete-angular-render-plugin';\nimport { SubnetComponent } from './subnet.component';\nimport { NodeData, WorkerInputs, WorkerOutputs } from 'rete/types/core/data';\nimport {  reteBasicNodeInfo } from '../../reteBasic';\nimport { EnumNodeType } from 'src/app/models/appType';\n\n/**\n * Classe utilizzata per indicare il tipo di modulo SubnetNode.\n * @see {reteBasicModuleInfo}\n */\nexport class ReteSubnetInfo extends reteBasicNodeInfo {\n  cidr: string;\n  version: string | number;\n  isDhcp: string | boolean;\n  type: EnumNodeType.Subnet;\n}\n\n/**\n * Funzione dichiarata in SubnetNode. \n * Essa ha lo scopo di generare una struttura dati empty.\n * Viene utilizzata in per instanziare un nodo del tipo di ritorno indicato senza dati.\n * @returns {ReteSubnetInfo}\n */\nexport function getEmptySubnetInfo(): ReteSubnetInfo {\n  let x: ReteSubnetInfo = {\n    cidr: \"\",\n    Input: [],\n    Output: [],\n    name: \"\",\n    type: EnumNodeType.Subnet,\n    version: \"\",\n    isDhcp: ''\n  };\n  return x;\n}\n\n\n/**\n * Classe che rappresenta il nodo (rete-node) Subnet all'interno del canvas/editor di rete.\n */\nexport class SubnetNode extends Component implements AngularComponent {\n\n  data: AngularComponentData;\n\n  /**\n   * Costruttore di SubnetNode\n   */\n  constructor() {\n    super(EnumNodeType.Subnet);\n    this.data.render = 'angular';\n    this.data.component = SubnetComponent;\n  }\n\n  /**\n   * Funzione richiamata in fase di costruzione del nodo (rete-node).\n   * Controlla se bisogna instanziare il nodo oppure crearne uno nuovo:\n   * - In fase di design, il nodo non ha dati, per cui bisogna crearne uno nuovo.\n   * - In fase di visualizing, il nodo presenta dei dati, per cui va valorizzato il nodo.\n   * @param node \n   */\n  async builder(node: Node) {\n    if (Object.keys(node.data).length === 0)\n      this.createNewNode(node)\n    else\n      this.valorizeNode(node)\n  }\n\n  /**\n   * Funzione che ha come scopo creare un nodo (rete-node).\n   * In particolare gli assegna una struttura vuota.\n   * @param node \n   */\n  createNewNode(node: Node) {\n    let t = getEmptySubnetInfo()\n    node.data = {\n      ...node.data,\n      ...t\n    }\n  }\n\n  /**\n   * Funzione che ha come scopo la valorizzazione del nodo (rete-node) con i dati in suo possesso.\n   * In quasta fase avviene anche la fase iniziale di instanziamento delle porte input/output.\n   * @param node \n   */\n  valorizeNode(node: Node) {\n    var i: any = node.data['Input'];\n    var o: any = node.data['Output'];\n    var il = i.length;\n    var ol = o.length;\n\n    for (let index = 0; index \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/SubnetSimpleData.html":{"url":"classes/SubnetSimpleData.html","title":"class - SubnetSimpleData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  SubnetSimpleData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsExport/moduleExport.ts\n        \n\n\n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                properties\n                            \n                            \n                                relationships\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        properties\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         PropertiesSSD\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:109\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        relationships\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         RelationshipsExport[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:108\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         SubnetTypeExport\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:107\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ModeTypeExport, ModuleTypeExport, NetworkTypeExport, NodeTypeExport, PortTypeExport, RelationshipsTypeExport, SubnetTypeExport, ToscaDefinitionType } from \"./TypeExport\"\n\n\n/**\n * Classe utilizzata per l'export. \n * Contiene le informazioni generali per il modulo che devono esserci nello standard Tosca.\n */\nexport class ModuleExport {\n    tosca_definitions_version: ToscaDefinitionType\n    description: string\n    imports: string[]\n    node_templates: { [name: string]: ModuleSimpleData | NodeSimpleData | PortSimpleData | NetworkSimpleData | SubnetSimpleData }\n    dsl_definition: any | null; //future\n    capabilites: any | null //future\n    outputs: any | null //future\n}\n\n\nexport class ModuleSimpleData {\n    type: ModuleTypeExport\n    properties: PropertiesMSD\n}\nexport class PropertiesMSD {\n    mode: ModeTypeExport\n    description: string\n    version: string | number\n    constraints: ConstraintsMSD\n    interface_networks: {\n        providers: InterfaceNetworksProvider[]\n        consumers: InterfaceNetworksConsumer[]\n    }\n    virtual_machines: VirtualMachine[]\n}\nexport class ConstraintsMSD {\n    interface_constraints: InterfaceConstraints[]\n    module_constraints: ModuleConstraints[]\n    network_constraints: NetworkConstraints[]\n}\nexport class InterfaceConstraints {\n    local_interface: string\n    multiple_mode: boolean = false //future\n    module_name: string\n    compatibility: string = \"1.0\" // future\n    remote_interface: string\n}\nexport class ModuleConstraints {\n}\nexport class NetworkConstraints {\n}\n\nexport class InterfaceNetworksProvider {\n    interface: string\n    network: string\n    tag: string\n    subnets: SubnetExport[]\n}\nexport class InterfaceNetworksConsumer {\n    interface: string\n    network: string\n    tag: string\n    subnets: SubnetExport[]\n}\n\nexport class VirtualMachine {\n    virtual_machine: string\n    ports: VirtualMachinePorts[]\n}\nexport class VirtualMachinePorts {\n    port: string\n    network: string\n    subnets: SubnetExport[]\n}\n\nexport class SubnetExport {\n    subnet: string;\n}\n\nexport class NodeSimpleData {\n    type: NodeTypeExport\n    properties: any | null // future\n    interfaces: any | null // future\n    relationships: RelationshipsExport[]\n}\n\nexport class RelationshipsExport {\n    type: RelationshipsTypeExport\n    target: string\n}\n\nexport class PortSimpleData {\n    type: PortTypeExport\n    relationships: RelationshipsExport[]\n}\n\nexport class NetworkSimpleData {\n    type: NetworkTypeExport\n    properties: PropertiesNSD\n}\nexport class PropertiesNSD {\n    openstack_config?: any | null // future\n    use_external_resource?: boolean | null // future\n    resource_id?: any | null // future\n}\n\n\nexport class SubnetSimpleData {\n    type: SubnetTypeExport\n    relationships: RelationshipsExport[]\n    properties: PropertiesSSD\n}\nexport class PropertiesSSD {\n    subnet?: {\n        ip_version: string | number\n        cidr: string\n        enable_dhcp: boolean\n        gateway_ip?: any | null // future\n    }\n    openstack_config?: any | null // future\n    use_external_resource?: boolean | null // future\n    resource_id?: any | null // future\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"components/TabnavComponent.html":{"url":"components/TabnavComponent.html","title":"component - TabnavComponent","body":"\n                   \n\n\n\n\n\n  Componenti\n  \n  TabnavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/tabnav/tabnav.component.ts\n\n\n\n    \n        Descrizione\n    \n    \n        Componente utilizzata per la suddivisione dei tab a contenuto generico.\n\n    \n\n\n    \n        Implementa\n    \n    \n                    OnInit\n    \n\n\n\n    Metadati\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tabnav\n            \n\n            \n                styleUrls\n                ./tabnav.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./tabnav.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                activetab\n                            \n                            \n                                    Protected\n                                hasMultipleTag\n                            \n                        \n                    \n                \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                active\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Input\n                    \n                \n                \n                    \n                        \n                            \n                                alt_title\n                            \n                            \n                                element\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Costruttore\n        \n            \n                \n                    \nconstructor(cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Definito in src/app/components/tabnav/tabnav.component.ts:40\n                            \n                        \n\n                \n                    \n                            Costrutture TabnavComponent.\n\n                            \n                                    Parametri :\n                                    \n                                        \n                                            \n                                                Nome\n                                                    Tipo\n                                                Opzionale\n                                            \n                                        \n                                        \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Input\n        \n            \n                \n                    \n                        \n                        alt_title\n                    \n                \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                    Definito in src/app/components/tabnav/tabnav.component.ts:23\n                            \n                        \n                \n                    \n                        Variabile data in input che rappresenta il titolo alternativo dalla tab.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        element\n                    \n                \n                \n                    \n                        Tipo :         TabnavElement\n\n                    \n                \n                        \n                            \n                                    Definito in src/app/components/tabnav/tabnav.component.ts:28\n                            \n                        \n                \n                    \n                        Variabile data in input che contiene le caratteristiche/quantità della tab.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                    Definito in src/app/components/tabnav/tabnav.component.ts:18\n                            \n                        \n                \n                    \n                        Variabile data in input che rappresenta il titolo dalla tab.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        active\n                        \n                    \n                \n            \n            \n                \nactive(val: string | any)\n                \n            \n\n\n            \n                \n                    Definito in src/app/components/tabnav/tabnav.component.ts:63\n                \n            \n\n\n            \n                \n                    Funzione richiamata quando si seleziona una tab.\nSee {activetab}\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                            string | any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Definito in src/app/components/tabnav/tabnav.component.ts:53\n                \n            \n\n\n            \n                \n                    Funzione richiamata all'inizializzazione del componente.\nControlla che ci siano 1 o più tab.\nSetta la prima tab attiva, in modo da essere mostrata.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        activetab\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/tabnav/tabnav.component.ts:40\n                        \n                    \n\n            \n                \n                    Variabile che indica l'id della tab selezionata.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        hasMultipleTag\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                \n                    \n                        Valore predefinito : true\n                    \n                \n                    \n                        \n                                Definito in src/app/components/tabnav/tabnav.component.ts:34\n                        \n                    \n\n            \n                \n                    Variabile che indica se ci siano più tab.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectorRef, Component, Input, OnInit } from '@angular/core';\nimport { TabnavElement } from './tabnavType';\n\n/**\n * Componente utilizzata per la suddivisione dei tab a contenuto generico.\n */\n@Component({\n  selector: 'app-tabnav',\n  templateUrl: './tabnav.component.html',\n  styleUrls: ['./tabnav.component.sass']\n})\nexport class TabnavComponent implements OnInit {\n\n  /**\n   * Variabile data in input che rappresenta il titolo dalla tab.\n   * @type {string}\n   */\n  @Input() title: string;\n  /**\n   * Variabile data in input che rappresenta il titolo alternativo dalla tab.\n   * @type {string}\n   */\n  @Input() alt_title: string;\n  /**\n   * Variabile data in input che contiene le caratteristiche/quantità della tab.\n   * @type {TabnavElement}\n  */ \n  @Input() element: TabnavElement;\n\n  /**\n   * Variabile che indica se ci siano più tab.\n   * @type {boolean}\n   */\n  protected hasMultipleTag: boolean = true;\n\n  /**\n   * Variabile che indica l'id della tab selezionata.\n   * @type {string}\n   */\n  protected activetab: string;\n\n  /**\n   * Costrutture TabnavComponent.\n   * @param cdr \n   */\n  constructor(private cdr: ChangeDetectorRef) { }\n\n  /**\n   * Funzione richiamata all'inizializzazione del componente.\n   * Controlla che ci siano 1 o più tab.\n   * Setta la prima tab attiva, in modo da essere mostrata. \n   */\n  ngOnInit(): void {\n    this.hasMultipleTag = (this.element.element.length > 1) ? true : false;\n    this.active(this.element.element[0].id);\n  }\n\n  /**\n   * Funzione richiamata quando si seleziona una tab.\n   * @see {activetab} \n   * @param val \n   */\n  active(val: string | any) {\n    this.activetab = val;\n    this.cdr.detectChanges();\n  }\n\n}\n\n    \n\n    \n        \n\n    \n        \n            {{item.text}}\n        \n    \n\n\n\n\n    \n    \n        \n\n            \n\n        \n    \n\n\n    \n\n    \n                \n                    ./tabnav.component.sass\n                \n                .text-tab-selected\n    // font-size: 1.5em\n    color: white !important\n    font-weight: bold\n\n.text-tab-unselected\n    // fonr-size: 1em\n    color: #93a1ba !important\n\n.my-tab-content\n    width: 100%\n    height: 100%\n    overflow: hidden\n    word-break: break-all\n    padding-left: 2em\n    padding-right: 2em\n    padding-bottom: 10em\n\n.cursor-pointer\n    cursor: pointer\n    \n\n    \n        \n        \n            \n                Legenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento html con direttive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        {{item.text}}                                                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ComposerComponent', 'selector': 'app-composer'},{'name': 'ControlTemplate', 'selector': ''},{'name': 'DataInputComponent', 'selector': 'app-data-input'},{'name': 'DataInputV2Component', 'selector': 'app-data-input-v2'},{'name': 'DataItemComponent', 'selector': 'app-window-item'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HostComponent', 'selector': ''},{'name': 'HowToUseComponent', 'selector': 'app-how-to-use'},{'name': 'MirroringModuleInstanceComponent', 'selector': ''},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavbarElementComponent', 'selector': 'app-navbar-element'},{'name': 'NetworkComponent', 'selector': ''},{'name': 'OffcanvasComponent', 'selector': 'app-offcanvas'},{'name': 'ReteModuleComposerComponent', 'selector': 'app-rete-module-composer'},{'name': 'ReteModuleVisualizerComponent', 'selector': 'app-rete-module-visualizer'},{'name': 'ReteTheaterComposerComponent', 'selector': 'app-rete-theater-composer'},{'name': 'ReteTheaterVisualizerComponent', 'selector': 'app-rete-theater-visualizer'},{'name': 'SubnetComponent', 'selector': ''},{'name': 'TabnavComponent', 'selector': 'app-tabnav'},{'name': 'TheaterInternalServiceModuleInstanceComponent', 'selector': ''},{'name': 'TheaterModuleInstanceComponent', 'selector': ''},{'name': 'UnderbarComponent', 'selector': 'app-underbar'},{'name': 'VisualizerComponent', 'selector': 'app-displayer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TabnavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/TabnavElement.html":{"url":"classes/TabnavElement.html","title":"class - TabnavElement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  TabnavElement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/tabnav/tabnavType.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Elemento utilizzato come input dalla componente TabnavComponent\nSee {TabnavComponent}\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                element\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        element\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         TabnavItem[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/tabnav/tabnavType.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { TemplateRef } from \"@angular/core\";\n\n/**\n * Elemento utilizzato come input dalla componente TabnavComponent\n * @see {TabnavComponent}\n */\nexport class TabnavElement {\n    element: TabnavItem[];\n}\n\n/**\n * Elemento che rappresenta una singola tab.\n * @see {TabnavComponent}\n */\nexport class TabnavItem {\n    id: string;\n    text: string;\n    template: TemplateRef\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/TabnavItem.html":{"url":"classes/TabnavItem.html","title":"class - TabnavItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  TabnavItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/tabnav/tabnavType.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Elemento che rappresenta una singola tab.\nSee {TabnavComponent}\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                template\n                            \n                            \n                                text\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/tabnav/tabnavType.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        template\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     TemplateRef\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/tabnav/tabnavType.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        text\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/tabnav/tabnavType.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { TemplateRef } from \"@angular/core\";\n\n/**\n * Elemento utilizzato come input dalla componente TabnavComponent\n * @see {TabnavComponent}\n */\nexport class TabnavElement {\n    element: TabnavItem[];\n}\n\n/**\n * Elemento che rappresenta una singola tab.\n * @see {TabnavComponent}\n */\nexport class TabnavItem {\n    id: string;\n    text: string;\n    template: TemplateRef\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/TagCatalogueDTO.html":{"url":"classes/TagCatalogueDTO.html","title":"class - TagCatalogueDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  TagCatalogueDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsDTO/theaterDTO.ts\n        \n\n\n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/theaterDTO.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/theaterDTO.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/theaterDTO.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ElementIntoTheaterDTO, ModuleInstanceDTO, TheaterInstanceDTO } from \"./moduleDTO\"\n\nexport class TagCatalogueDTO {\n    description: string\n    id: string | number\n    name: string\n}\n\nexport class TheatreStatusDTO {\n    code: string\n    id: string | number\n    name: string\n}\n\nexport class DeployInstanceDTO {\n    moduleInstanceConfigurationUUID?: string\n    moduleInstanceName: string\n    moduleInstanceUUID: string\n    moduleUUID: string\n}\n\nexport class BlueprintFileDTO {\n    description: string\n    imports: string[]\n    node_templates: {[name:string]:ModuleInstanceDTO|TheaterInstanceDTO}\n    tosca_definitions_version: string\n}\n\nexport class NameMappingDTO {\n    display_name: string\n    module_instance_name: string\n    module_name: string\n    node_template_name: string\n}\nexport class EntityNameMappingFileDTO {\n    name_mapping: NameMappingDTO[]\n}\nexport class TheaterDTO {\n    author: string\n    blueprintFile: BlueprintFileDTO\n    blueprintUUID: string | number\n    createdBy: string\n    createdDate: string\n    deploymentSequence: {[index:string]:DeployInstanceDTO} //tosee\n    description: string\n    entityNameMappingFile: EntityNameMappingFileDTO\n    id: string | number\n    isLocked: boolean\n    lastModifiedBy: string\n    lastModifiedDate: string\n    lockAcquiredTimestamp: string\n    lockLastUserAcquiring: string\n    lockReleasedTimestamp: string\n    name: string\n    status: TheatreStatusDTO\n    tags: TagCatalogueDTO[]\n    uuid: string\n    version: string\n}\n\nexport const TheaterType: string = \"sysman.creo.nodes.Theater\";\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/TagTIP.html":{"url":"classes/TagTIP.html","title":"class - TagTIP","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  TagTIP\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsDTO/moduleDTO.ts\n        \n\n\n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                tag\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        tag\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:156\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PageableDTO, SortDTO } from './elementDTO';\nimport { NetworkDTO } from './networkDTO';\nimport { TheaterDTO } from './theaterDTO';\n\n\nexport class ModuleListDTO {\n    content: SimpleModuleDTO[]\n    pageable: PageableDTO\n    last: boolean\n    totalPages: string | number\n    totalElements: string | number\n    size: string | number\n    number: string | number\n    sort: SortDTO\n    numberOfElements: string | number\n    first: boolean\n    empty: boolean\n}\n\n\nexport class TypesCatalogueDTO {\n    group: string\n    id: string | number\n    parentId: {}\n    value: string\n}\n\nexport class ModuleClassificationDTO {\n    blueprintType: string\n    category: string\n    expectedInstanceType: string\n    id: string | number\n    mcClass: string\n    type: string\n    uuid: string\n}\n\nexport class GenericParameterDTO {\n    type: string\n    default: string\n    description: string\n}\n\nexport class ConfigurationTemplateDTO {\n    anchor_parameters: { [name: string]: GenericParameterDTO | string }\n    instance_parameters: { [name: string]: GenericParameterDTO }\n    structural_parameters: { [name: string]: GenericParameterDTO }\n    fixed_parameters: { [name: string]: GenericParameterDTO }\n    control_parameters: { [name: string]: GenericParameterDTO }\n    infrastructure_parameters: { [name: string]: GenericParameterDTO }\n    module: string\n    description: string\n    category: string\n    version: string | number\n    platform: string\n}\n\nexport class ModuleModeDTO {\n    code: string\n    id: string | number\n    name: string\n}\n\nexport class ModuleStatusDTO {\n    descriptionCode: string\n    id: string | number\n    name: string\n}\nexport class StatisticItemDTO {\n    error: string | number\n    updated: string | number\n    inserted: string | number\n}\n\nexport class SimpleModuleDTO {\n    createdBy: string\n    createdDate: string\n    description: string\n    id: string | number\n    isLocked: boolean\n    lastModifiedBy: string\n    lastModifiedDate: string\n    lockAcquiredTimestamp: string\n    lockLastUserAcquiring: string\n    lockReleasedTimestamp: string\n    name: string\n    status: ModuleStatusDTO\n    type?: string | any\n    uuid: string\n    version: string | number\n}\nexport class ModuleDTO extends SimpleModuleDTO {\n    attachments: string[]\n    author: string\n    capabilities: { [name: string]: string }\n    catalog1: TypesCatalogueDTO\n    catalog2: TypesCatalogueDTO\n    catalog3: TypesCatalogueDTO\n    classification: ModuleClassificationDTO\n    configurationTemplate: ConfigurationTemplateDTO\n    detailProperties: {}\n    input: { [name: string]: string }\n    output: { [name: string]: string }\n    mode: ModuleModeDTO\n    statistics: { [name: string]: StatisticItemDTO | string | number }\n    tags: []\n}\n\nexport class ModuleNetworkInterfaceDTO {\n    id: string | number\n    label: string\n    module: ModuleDTO\n    network: NetworkDTO\n    nodeName: string\n    type: string\n    uuid: string\n}\n\nexport class ConsumerInterfaceLinkDTO {\n    local_interface: string\n    module_instance: string\n    remote_interface: string\n}\n\nexport class ModuleInstancePropertiesDTO {\n    area: string\n    description: string\n    module: string\n    version: string | number\n    sequence: string | number\n    consumer_interfaces_link: ConsumerInterfaceLinkDTO[]\n}\n\nexport class AreaDTO {\n    id: string | number;\n    uuid: string;\n    name: string;\n    description: string;\n    theater: TheaterDTO;\n    deleted: boolean | string;\n}\n\nexport class SimpleAreaDTO {\n    area: string\n    description: string\n}\nexport class TheaterInstancePropertiesDTO {\n    mode: string\n    tags: TagTIP[]\n    areas: SimpleAreaDTO[]\n    author: string\n    version: string | number\n    description: string\n}\nexport class TagTIP{\n    tag: string\n}\nexport class ElementIntoTheaterDTO {  // goes into map in blueprint [name:string]: Module...\n    properties: ModuleInstancePropertiesDTO | TheaterInstancePropertiesDTO\n    type: string\n}\nexport class ModuleInstanceDTO {\n    properties: ModuleInstancePropertiesDTO\n    type: string\n}\nexport class TheaterInstanceDTO {\n    properties: TheaterInstancePropertiesDTO\n    type: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/TagsExport.html":{"url":"classes/TagsExport.html","title":"class - TagsExport","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  TagsExport\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsExport/theaterExport.ts\n        \n\n\n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                tag\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        tag\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/theaterExport.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ModeTypeExport, ModuleTypeExport, TheaterTypeExport, ToscaDefinitionType } from \"./TypeExport\"\n\n/**\n * Classe utilizzata per l'export. \n * Contiene le informazioni generali per il teatro che devono esserci nello standard Tosca.\n */\nexport class TheaterExport {\n    tosca_definitions_version: ToscaDefinitionType\n    description: string\n    imports: string[]\n    node_templates: { [name: string]: TheaterSimpleData | ModuleInstanceSimpleData }\n}\n\nexport class TheaterSimpleData {\n    type: TheaterTypeExport\n    properties: PropertiesTSD\n}\nexport class PropertiesTSD {\n    version: string | number\n    description: string\n    mode: ModeTypeExport\n    author: string\n    tags: TagsExport[]\n    areas: AreaExport[]\n}\nexport class TagsExport {\n    tag: string\n}\nexport class AreaExport {\n    area: string\n    description: string\n}\n\nexport class ModuleInstanceSimpleData {\n    type: ModuleTypeExport\n    properties: PropertiesMISD\n}\nexport class PropertiesMISD{\n    module: string\n    version: string | number\n    area: string\n    sequence: number\n    sources?: SourceExport[]\n    consumer_interface_link: ConsumerInterfaceLinkExport[]\n}\nexport class SourceExport{\n    module_instance: string\n    host:string\n    interfaces: string[]\n}\nexport class ConsumerInterfaceLinkExport{\n    local_interface: string\n    module_interface:string\n    remote_interface:string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/TheaterApplication.html":{"url":"classes/TheaterApplication.html","title":"class - TheaterApplication","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  TheaterApplication\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsApplication/applicationModels.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        TheaterDTO\n            \n\n            \n                Implementa\n            \n            \n                            TheaterTopology\n            \n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                connection\n                            \n                            \n                                elements\n                            \n                            \n                                properties\n                            \n                            \n                                topology\n                            \n                            \n                                author\n                            \n                            \n                                blueprintFile\n                            \n                            \n                                blueprintUUID\n                            \n                            \n                                createdBy\n                            \n                            \n                                createdDate\n                            \n                            \n                                deploymentSequence\n                            \n                            \n                                description\n                            \n                            \n                                entityNameMappingFile\n                            \n                            \n                                id\n                            \n                            \n                                isLocked\n                            \n                            \n                                lastModifiedBy\n                            \n                            \n                                lastModifiedDate\n                            \n                            \n                                lockAcquiredTimestamp\n                            \n                            \n                                lockLastUserAcquiring\n                            \n                            \n                                lockReleasedTimestamp\n                            \n                            \n                                name\n                            \n                            \n                                status\n                            \n                            \n                                tags\n                            \n                            \n                                uuid\n                            \n                            \n                                version\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        connection\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ReteConnection[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsApplication/applicationModels.ts:97\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        elements\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     literal type\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsApplication/applicationModels.ts:96\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        properties\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         TheaterInstancePropertiesDTO\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsApplication/applicationModels.ts:99\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        topology\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         TheaterTopology\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsApplication/applicationModels.ts:100\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        author\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         TheaterDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         TheaterDTO:39\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        blueprintFile\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         BlueprintFileDTO\n\n                    \n                \n                        \n                            \n                                ereditato da         TheaterDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         TheaterDTO:40\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        blueprintUUID\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                        \n                            \n                                ereditato da         TheaterDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         TheaterDTO:41\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         TheaterDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         TheaterDTO:42\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdDate\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         TheaterDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         TheaterDTO:43\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deploymentSequence\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     literal type\n\n                    \n                \n                        \n                            \n                                ereditato da         TheaterDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         TheaterDTO:44\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         TheaterDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         TheaterDTO:45\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        entityNameMappingFile\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         EntityNameMappingFileDTO\n\n                    \n                \n                        \n                            \n                                ereditato da         TheaterDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         TheaterDTO:46\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                        \n                            \n                                ereditato da         TheaterDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         TheaterDTO:47\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLocked\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                        \n                            \n                                ereditato da         TheaterDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         TheaterDTO:48\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastModifiedBy\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         TheaterDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         TheaterDTO:49\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastModifiedDate\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         TheaterDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         TheaterDTO:50\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lockAcquiredTimestamp\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         TheaterDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         TheaterDTO:51\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lockLastUserAcquiring\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         TheaterDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         TheaterDTO:52\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lockReleasedTimestamp\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         TheaterDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         TheaterDTO:53\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         TheaterDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         TheaterDTO:54\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         TheatreStatusDTO\n\n                    \n                \n                        \n                            \n                                ereditato da         TheaterDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         TheaterDTO:55\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tags\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         TagCatalogueDTO[]\n\n                    \n                \n                        \n                            \n                                ereditato da         TheaterDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         TheaterDTO:56\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uuid\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         TheaterDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         TheaterDTO:57\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         TheaterDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         TheaterDTO:58\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ReteHostInfo } from \"src/app/rete-settings/nodes/rete-nodes/host/hostNode\";\nimport { ReteNetworkInfo } from \"src/app/rete-settings/nodes/rete-nodes/network/networkNode\";\nimport { ReteSubnetInfo } from \"src/app/rete-settings/nodes/rete-nodes/subnet/subnetNode\";\nimport { ReteMirroringModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/mirroringModuleInstance/mirroringModuleInstanceNode\";\nimport { ReteTheaterInternalServiceModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/theaterInternalServiceModuleInstance/theaterInternalServiceModuleInstanceNode\";\nimport { ReteTheaterModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/theaterModuleInstance/theaterModuleInstanceNode\";\nimport { FlavorBasicInfo } from \"../modelsDTO/falvorDTO\";\nimport { HostModuleDTO } from \"../modelsDTO/hostDTO\";\nimport { ModuleNetworkInterfaceDTO, ModuleInstancePropertiesDTO, SimpleModuleDTO, TheaterInstancePropertiesDTO, ModuleInstanceDTO, ModuleDTO, SimpleAreaDTO, AreaDTO } from \"../modelsDTO/moduleDTO\";\nimport { TheaterDTO } from \"../modelsDTO/theaterDTO\";\n\n\nexport interface CommonModule {\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n}\n\n\n/**\n * Classe contenente gli attributi utilizzati per le operazioni che coinvolgono i moduli.\n * ps. Questa struttura è prettamente utilizzata nella chiamata relativa al singolo modulo.\n */\nexport class ModuleApplication extends ModuleDTO implements CommonModule {\n    imports: string[] // perchè nell'export yaml è previsto\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n}\n// PER IMPLEMENTAZIONI FUTURE, PER COERENZA, PRENDERE DIRETTAMENTE I SINGOLI NODI DALLA CHIAMATA ESCLUSIVA E NON DA QUELLA CHE RESTITUISCE TUTTI I TEATRI\n/**\n * Classe contenente gli attributi utilizzati per le operazioni che coinvolgono i moduli.\n * ps. Questa struttura è prettamente utilizzata nella chiamata che prende tutti i moduli del teatro.\n */\nexport class SimpleModuleApplication extends SimpleModuleDTO implements CommonModule {\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n}\n\n\nexport class ReteConnection {\n    from: string;\n    port_src: string;\n    to: string;\n    port_dst: string;\n}\n\nexport interface TopologyList {\n    rete: any;\n    topology?: TopologyElement\n}\nexport class TopologyElement {\n    elements: { [name: string]: any };\n    connection: ReteConnection[]\n}\n\n// apptype module topology\n\nexport class NodeTopologyElement implements TopologyElement {\n    elements: { [hostName: string]: ReteHostInfo | ReteSubnetInfo | ReteNetworkInfo };\n    connection: ReteConnection[]\n}\n\nexport interface ModuleTopology extends TopologyList {\n    rete: ReteMirroringModuleInstanceInfo | ReteTheaterInternalServiceModuleInstanceInfo | ReteTheaterModuleInstanceInfo\n    topology: NodeTopologyElement;\n}\n\nexport class ModuleInstance extends ModuleInstanceDTO implements ModuleTopology {\n    // moduleTopology data\n    rete: ReteTheaterModuleInstanceInfo | ReteTheaterInternalServiceModuleInstanceInfo | ReteMirroringModuleInstanceInfo;\n    topology: NodeTopologyElement;\n    // other data\n    moduleInfo: SimpleModuleApplication\n}\n\n// apptype theater theater\n\nexport interface TheaterTopology extends TopologyElement {\n    elements: { [hostName: string]: ModuleInstance };\n    connection: ReteConnection[];\n}\n\nexport class TheaterApplication extends TheaterDTO implements TheaterTopology {\n    // theaterTopology data\n    elements: { [hostName: string]: ModuleInstance; };\n    connection: ReteConnection[];\n    // other data\n    properties: TheaterInstancePropertiesDTO;\n    topology: TheaterTopology;\n}\n\nexport class AreaApplication extends AreaDTO {\n    color?: string;\n}\nexport class AreaColorDTO extends SimpleAreaDTO {\n    color: string;\n}\n\n\nexport class FlavorApplication extends FlavorBasicInfo {\n    flavorName: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/TheaterDTO.html":{"url":"classes/TheaterDTO.html","title":"class - TheaterDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  TheaterDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsDTO/theaterDTO.ts\n        \n\n\n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                author\n                            \n                            \n                                blueprintFile\n                            \n                            \n                                blueprintUUID\n                            \n                            \n                                createdBy\n                            \n                            \n                                createdDate\n                            \n                            \n                                deploymentSequence\n                            \n                            \n                                description\n                            \n                            \n                                entityNameMappingFile\n                            \n                            \n                                id\n                            \n                            \n                                isLocked\n                            \n                            \n                                lastModifiedBy\n                            \n                            \n                                lastModifiedDate\n                            \n                            \n                                lockAcquiredTimestamp\n                            \n                            \n                                lockLastUserAcquiring\n                            \n                            \n                                lockReleasedTimestamp\n                            \n                            \n                                name\n                            \n                            \n                                status\n                            \n                            \n                                tags\n                            \n                            \n                                uuid\n                            \n                            \n                                version\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        author\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/theaterDTO.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        blueprintFile\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         BlueprintFileDTO\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/theaterDTO.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        blueprintUUID\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/theaterDTO.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/theaterDTO.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdDate\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/theaterDTO.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deploymentSequence\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     literal type\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/theaterDTO.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/theaterDTO.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        entityNameMappingFile\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         EntityNameMappingFileDTO\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/theaterDTO.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/theaterDTO.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLocked\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/theaterDTO.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastModifiedBy\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/theaterDTO.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastModifiedDate\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/theaterDTO.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lockAcquiredTimestamp\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/theaterDTO.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lockLastUserAcquiring\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/theaterDTO.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lockReleasedTimestamp\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/theaterDTO.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/theaterDTO.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         TheatreStatusDTO\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/theaterDTO.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tags\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         TagCatalogueDTO[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/theaterDTO.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uuid\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/theaterDTO.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/theaterDTO.ts:58\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ElementIntoTheaterDTO, ModuleInstanceDTO, TheaterInstanceDTO } from \"./moduleDTO\"\n\nexport class TagCatalogueDTO {\n    description: string\n    id: string | number\n    name: string\n}\n\nexport class TheatreStatusDTO {\n    code: string\n    id: string | number\n    name: string\n}\n\nexport class DeployInstanceDTO {\n    moduleInstanceConfigurationUUID?: string\n    moduleInstanceName: string\n    moduleInstanceUUID: string\n    moduleUUID: string\n}\n\nexport class BlueprintFileDTO {\n    description: string\n    imports: string[]\n    node_templates: {[name:string]:ModuleInstanceDTO|TheaterInstanceDTO}\n    tosca_definitions_version: string\n}\n\nexport class NameMappingDTO {\n    display_name: string\n    module_instance_name: string\n    module_name: string\n    node_template_name: string\n}\nexport class EntityNameMappingFileDTO {\n    name_mapping: NameMappingDTO[]\n}\nexport class TheaterDTO {\n    author: string\n    blueprintFile: BlueprintFileDTO\n    blueprintUUID: string | number\n    createdBy: string\n    createdDate: string\n    deploymentSequence: {[index:string]:DeployInstanceDTO} //tosee\n    description: string\n    entityNameMappingFile: EntityNameMappingFileDTO\n    id: string | number\n    isLocked: boolean\n    lastModifiedBy: string\n    lastModifiedDate: string\n    lockAcquiredTimestamp: string\n    lockLastUserAcquiring: string\n    lockReleasedTimestamp: string\n    name: string\n    status: TheatreStatusDTO\n    tags: TagCatalogueDTO[]\n    uuid: string\n    version: string\n}\n\nexport const TheaterType: string = \"sysman.creo.nodes.Theater\";\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/TheaterExport.html":{"url":"classes/TheaterExport.html","title":"class - TheaterExport","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  TheaterExport\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsExport/theaterExport.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe utilizzata per l'export.\nContiene le informazioni generali per il teatro che devono esserci nello standard Tosca.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                imports\n                            \n                            \n                                node_templates\n                            \n                            \n                                tosca_definitions_version\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/theaterExport.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        imports\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/theaterExport.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        node_templates\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     literal type\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/theaterExport.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tosca_definitions_version\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ToscaDefinitionType\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/theaterExport.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ModeTypeExport, ModuleTypeExport, TheaterTypeExport, ToscaDefinitionType } from \"./TypeExport\"\n\n/**\n * Classe utilizzata per l'export. \n * Contiene le informazioni generali per il teatro che devono esserci nello standard Tosca.\n */\nexport class TheaterExport {\n    tosca_definitions_version: ToscaDefinitionType\n    description: string\n    imports: string[]\n    node_templates: { [name: string]: TheaterSimpleData | ModuleInstanceSimpleData }\n}\n\nexport class TheaterSimpleData {\n    type: TheaterTypeExport\n    properties: PropertiesTSD\n}\nexport class PropertiesTSD {\n    version: string | number\n    description: string\n    mode: ModeTypeExport\n    author: string\n    tags: TagsExport[]\n    areas: AreaExport[]\n}\nexport class TagsExport {\n    tag: string\n}\nexport class AreaExport {\n    area: string\n    description: string\n}\n\nexport class ModuleInstanceSimpleData {\n    type: ModuleTypeExport\n    properties: PropertiesMISD\n}\nexport class PropertiesMISD{\n    module: string\n    version: string | number\n    area: string\n    sequence: number\n    sources?: SourceExport[]\n    consumer_interface_link: ConsumerInterfaceLinkExport[]\n}\nexport class SourceExport{\n    module_instance: string\n    host:string\n    interfaces: string[]\n}\nexport class ConsumerInterfaceLinkExport{\n    local_interface: string\n    module_interface:string\n    remote_interface:string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/TheaterInstanceDTO.html":{"url":"classes/TheaterInstanceDTO.html","title":"class - TheaterInstanceDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  TheaterInstanceDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsDTO/moduleDTO.ts\n        \n\n\n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                properties\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        properties\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         TheaterInstancePropertiesDTO\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:167\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:168\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PageableDTO, SortDTO } from './elementDTO';\nimport { NetworkDTO } from './networkDTO';\nimport { TheaterDTO } from './theaterDTO';\n\n\nexport class ModuleListDTO {\n    content: SimpleModuleDTO[]\n    pageable: PageableDTO\n    last: boolean\n    totalPages: string | number\n    totalElements: string | number\n    size: string | number\n    number: string | number\n    sort: SortDTO\n    numberOfElements: string | number\n    first: boolean\n    empty: boolean\n}\n\n\nexport class TypesCatalogueDTO {\n    group: string\n    id: string | number\n    parentId: {}\n    value: string\n}\n\nexport class ModuleClassificationDTO {\n    blueprintType: string\n    category: string\n    expectedInstanceType: string\n    id: string | number\n    mcClass: string\n    type: string\n    uuid: string\n}\n\nexport class GenericParameterDTO {\n    type: string\n    default: string\n    description: string\n}\n\nexport class ConfigurationTemplateDTO {\n    anchor_parameters: { [name: string]: GenericParameterDTO | string }\n    instance_parameters: { [name: string]: GenericParameterDTO }\n    structural_parameters: { [name: string]: GenericParameterDTO }\n    fixed_parameters: { [name: string]: GenericParameterDTO }\n    control_parameters: { [name: string]: GenericParameterDTO }\n    infrastructure_parameters: { [name: string]: GenericParameterDTO }\n    module: string\n    description: string\n    category: string\n    version: string | number\n    platform: string\n}\n\nexport class ModuleModeDTO {\n    code: string\n    id: string | number\n    name: string\n}\n\nexport class ModuleStatusDTO {\n    descriptionCode: string\n    id: string | number\n    name: string\n}\nexport class StatisticItemDTO {\n    error: string | number\n    updated: string | number\n    inserted: string | number\n}\n\nexport class SimpleModuleDTO {\n    createdBy: string\n    createdDate: string\n    description: string\n    id: string | number\n    isLocked: boolean\n    lastModifiedBy: string\n    lastModifiedDate: string\n    lockAcquiredTimestamp: string\n    lockLastUserAcquiring: string\n    lockReleasedTimestamp: string\n    name: string\n    status: ModuleStatusDTO\n    type?: string | any\n    uuid: string\n    version: string | number\n}\nexport class ModuleDTO extends SimpleModuleDTO {\n    attachments: string[]\n    author: string\n    capabilities: { [name: string]: string }\n    catalog1: TypesCatalogueDTO\n    catalog2: TypesCatalogueDTO\n    catalog3: TypesCatalogueDTO\n    classification: ModuleClassificationDTO\n    configurationTemplate: ConfigurationTemplateDTO\n    detailProperties: {}\n    input: { [name: string]: string }\n    output: { [name: string]: string }\n    mode: ModuleModeDTO\n    statistics: { [name: string]: StatisticItemDTO | string | number }\n    tags: []\n}\n\nexport class ModuleNetworkInterfaceDTO {\n    id: string | number\n    label: string\n    module: ModuleDTO\n    network: NetworkDTO\n    nodeName: string\n    type: string\n    uuid: string\n}\n\nexport class ConsumerInterfaceLinkDTO {\n    local_interface: string\n    module_instance: string\n    remote_interface: string\n}\n\nexport class ModuleInstancePropertiesDTO {\n    area: string\n    description: string\n    module: string\n    version: string | number\n    sequence: string | number\n    consumer_interfaces_link: ConsumerInterfaceLinkDTO[]\n}\n\nexport class AreaDTO {\n    id: string | number;\n    uuid: string;\n    name: string;\n    description: string;\n    theater: TheaterDTO;\n    deleted: boolean | string;\n}\n\nexport class SimpleAreaDTO {\n    area: string\n    description: string\n}\nexport class TheaterInstancePropertiesDTO {\n    mode: string\n    tags: TagTIP[]\n    areas: SimpleAreaDTO[]\n    author: string\n    version: string | number\n    description: string\n}\nexport class TagTIP{\n    tag: string\n}\nexport class ElementIntoTheaterDTO {  // goes into map in blueprint [name:string]: Module...\n    properties: ModuleInstancePropertiesDTO | TheaterInstancePropertiesDTO\n    type: string\n}\nexport class ModuleInstanceDTO {\n    properties: ModuleInstancePropertiesDTO\n    type: string\n}\nexport class TheaterInstanceDTO {\n    properties: TheaterInstancePropertiesDTO\n    type: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/TheaterInstancePropertiesDTO.html":{"url":"classes/TheaterInstancePropertiesDTO.html","title":"class - TheaterInstancePropertiesDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  TheaterInstancePropertiesDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsDTO/moduleDTO.ts\n        \n\n\n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                areas\n                            \n                            \n                                author\n                            \n                            \n                                description\n                            \n                            \n                                mode\n                            \n                            \n                                tags\n                            \n                            \n                                version\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        areas\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     SimpleAreaDTO[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:150\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        author\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:151\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:153\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:148\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tags\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         TagTIP[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:149\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:152\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PageableDTO, SortDTO } from './elementDTO';\nimport { NetworkDTO } from './networkDTO';\nimport { TheaterDTO } from './theaterDTO';\n\n\nexport class ModuleListDTO {\n    content: SimpleModuleDTO[]\n    pageable: PageableDTO\n    last: boolean\n    totalPages: string | number\n    totalElements: string | number\n    size: string | number\n    number: string | number\n    sort: SortDTO\n    numberOfElements: string | number\n    first: boolean\n    empty: boolean\n}\n\n\nexport class TypesCatalogueDTO {\n    group: string\n    id: string | number\n    parentId: {}\n    value: string\n}\n\nexport class ModuleClassificationDTO {\n    blueprintType: string\n    category: string\n    expectedInstanceType: string\n    id: string | number\n    mcClass: string\n    type: string\n    uuid: string\n}\n\nexport class GenericParameterDTO {\n    type: string\n    default: string\n    description: string\n}\n\nexport class ConfigurationTemplateDTO {\n    anchor_parameters: { [name: string]: GenericParameterDTO | string }\n    instance_parameters: { [name: string]: GenericParameterDTO }\n    structural_parameters: { [name: string]: GenericParameterDTO }\n    fixed_parameters: { [name: string]: GenericParameterDTO }\n    control_parameters: { [name: string]: GenericParameterDTO }\n    infrastructure_parameters: { [name: string]: GenericParameterDTO }\n    module: string\n    description: string\n    category: string\n    version: string | number\n    platform: string\n}\n\nexport class ModuleModeDTO {\n    code: string\n    id: string | number\n    name: string\n}\n\nexport class ModuleStatusDTO {\n    descriptionCode: string\n    id: string | number\n    name: string\n}\nexport class StatisticItemDTO {\n    error: string | number\n    updated: string | number\n    inserted: string | number\n}\n\nexport class SimpleModuleDTO {\n    createdBy: string\n    createdDate: string\n    description: string\n    id: string | number\n    isLocked: boolean\n    lastModifiedBy: string\n    lastModifiedDate: string\n    lockAcquiredTimestamp: string\n    lockLastUserAcquiring: string\n    lockReleasedTimestamp: string\n    name: string\n    status: ModuleStatusDTO\n    type?: string | any\n    uuid: string\n    version: string | number\n}\nexport class ModuleDTO extends SimpleModuleDTO {\n    attachments: string[]\n    author: string\n    capabilities: { [name: string]: string }\n    catalog1: TypesCatalogueDTO\n    catalog2: TypesCatalogueDTO\n    catalog3: TypesCatalogueDTO\n    classification: ModuleClassificationDTO\n    configurationTemplate: ConfigurationTemplateDTO\n    detailProperties: {}\n    input: { [name: string]: string }\n    output: { [name: string]: string }\n    mode: ModuleModeDTO\n    statistics: { [name: string]: StatisticItemDTO | string | number }\n    tags: []\n}\n\nexport class ModuleNetworkInterfaceDTO {\n    id: string | number\n    label: string\n    module: ModuleDTO\n    network: NetworkDTO\n    nodeName: string\n    type: string\n    uuid: string\n}\n\nexport class ConsumerInterfaceLinkDTO {\n    local_interface: string\n    module_instance: string\n    remote_interface: string\n}\n\nexport class ModuleInstancePropertiesDTO {\n    area: string\n    description: string\n    module: string\n    version: string | number\n    sequence: string | number\n    consumer_interfaces_link: ConsumerInterfaceLinkDTO[]\n}\n\nexport class AreaDTO {\n    id: string | number;\n    uuid: string;\n    name: string;\n    description: string;\n    theater: TheaterDTO;\n    deleted: boolean | string;\n}\n\nexport class SimpleAreaDTO {\n    area: string\n    description: string\n}\nexport class TheaterInstancePropertiesDTO {\n    mode: string\n    tags: TagTIP[]\n    areas: SimpleAreaDTO[]\n    author: string\n    version: string | number\n    description: string\n}\nexport class TagTIP{\n    tag: string\n}\nexport class ElementIntoTheaterDTO {  // goes into map in blueprint [name:string]: Module...\n    properties: ModuleInstancePropertiesDTO | TheaterInstancePropertiesDTO\n    type: string\n}\nexport class ModuleInstanceDTO {\n    properties: ModuleInstancePropertiesDTO\n    type: string\n}\nexport class TheaterInstanceDTO {\n    properties: TheaterInstancePropertiesDTO\n    type: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"components/TheaterInternalServiceModuleInstanceComponent.html":{"url":"components/TheaterInternalServiceModuleInstanceComponent.html","title":"component - TheaterInternalServiceModuleInstanceComponent","body":"\n                   \n\n\n\n\n\n  Componenti\n  \n  TheaterInternalServiceModuleInstanceComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/rete-settings/nodes/rete-modules/theaterInternalServiceModuleInstance/theaterInternalServiceModuleInstance.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n            NodeComponent\n    \n\n\n\n\n    Metadati\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            NodeService\n                \n            \n\n\n\n            \n                styleUrls\n                ./theaterInternalServiceModuleInstance.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./theaterInternalServiceModuleInstance.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                HostIcon\n                            \n                            \n                                ModuleType\n                            \n                            \n                                NetworkIcon\n                            \n                            \n                                showFooter\n                            \n                            \n                                showInputOutlet\n                            \n                            \n                                showOutputOutlet\n                            \n                            \n                                showPorts\n                            \n                            \n                                SubnetIcon\n                            \n                            \n                                TheaterInternalServiceModuleInstanceIcon\n                            \n                        \n                    \n                \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                showhidesocket\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Costruttore\n        \n            \n                \n                    \nconstructor(service: NodeService, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Definito in src/app/rete-settings/nodes/rete-modules/theaterInternalServiceModuleInstance/theaterInternalServiceModuleInstance.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parametri :\n                                    \n                                        \n                                            \n                                                Nome\n                                                    Tipo\n                                                Opzionale\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                    NodeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        showhidesocket\n                        \n                    \n                \n            \n            \n                \nshowhidesocket()\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-modules/theaterInternalServiceModuleInstance/theaterInternalServiceModuleInstance.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        HostIcon\n                        \n                    \n                \n            \n                \n                    \n                        Valore predefinito : HostIcon\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-modules/theaterInternalServiceModuleInstance/theaterInternalServiceModuleInstance.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ModuleType\n                        \n                    \n                \n            \n                \n                    \n                        Valore predefinito : EnumModuleType\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-modules/theaterInternalServiceModuleInstance/theaterInternalServiceModuleInstance.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        NetworkIcon\n                        \n                    \n                \n            \n                \n                    \n                        Valore predefinito : NetworkIcon\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-modules/theaterInternalServiceModuleInstance/theaterInternalServiceModuleInstance.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showFooter\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                \n                    \n                        Valore predefinito : true\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-modules/theaterInternalServiceModuleInstance/theaterInternalServiceModuleInstance.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showInputOutlet\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                \n                    \n                        Valore predefinito : true\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-modules/theaterInternalServiceModuleInstance/theaterInternalServiceModuleInstance.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showOutputOutlet\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                \n                    \n                        Valore predefinito : true\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-modules/theaterInternalServiceModuleInstance/theaterInternalServiceModuleInstance.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showPorts\n                        \n                    \n                \n            \n                \n                    \n                        Valore predefinito : true\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-modules/theaterInternalServiceModuleInstance/theaterInternalServiceModuleInstance.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SubnetIcon\n                        \n                    \n                \n            \n                \n                    \n                        Valore predefinito : SubnetIcon\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-modules/theaterInternalServiceModuleInstance/theaterInternalServiceModuleInstance.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TheaterInternalServiceModuleInstanceIcon\n                        \n                    \n                \n            \n                \n                    \n                        Valore predefinito : TheaterInternalServiceModuleInstance_ICON\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-modules/theaterInternalServiceModuleInstance/theaterInternalServiceModuleInstance.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, ChangeDetectorRef, ChangeDetectionStrategy } from '@angular/core';\nimport { NodeComponent, NodeService } from 'rete-angular-render-plugin';\nimport { EnumModuleType } from 'src/app/models/appType';\nimport { HostIcon, SubnetIcon, NetworkIcon, TheaterInternalServiceModuleInstance_ICON } from 'src/app/rete-settings/style/styleIconConfig';\n// import { EnumModuleType } from 'src/app/rete-settings/models/reteModelType';\n \n@Component({\n  templateUrl: './theaterInternalServiceModuleInstance.component.html',\n  styleUrls: ['./theaterInternalServiceModuleInstance.component.sass',],\n  providers: [NodeService],\n  changeDetection: ChangeDetectionStrategy.OnPush, // render più veloce.\n})\n\nexport class TheaterInternalServiceModuleInstanceComponent extends NodeComponent {\n\n  showPorts = true;\n  showOutputOutlet: boolean = true;\n  showInputOutlet: boolean = true;\n  showFooter: boolean = true;\n  \n  TheaterInternalServiceModuleInstanceIcon = TheaterInternalServiceModuleInstance_ICON;\n  ModuleType = EnumModuleType;\n  SubnetIcon=SubnetIcon;\n  NetworkIcon=NetworkIcon;\n  HostIcon=HostIcon;\n\n  constructor(\n    protected service: NodeService,\n    protected cdr: ChangeDetectorRef) {\n    super(service, cdr);\n  }\n\n  showhidesocket() {\n    this.showPorts = !this.showPorts;\n    \n  }\n  \n}\n\n    \n\n    \n        \n\n  \n    \n      \n        \n          {{ node.data.name === \"\" || node.data.name === undefined ? \"Assign name\" : node.data.name }}\n        \n      \n      \n        \n          \n          \n        \n      \n    \n   -->\n\n\n  \n  \n    \n      \n        \n          \n            \n              \n                 \n              \n              \n                \n                  {{\n                  (node.data.name && node.data.name!=='')\n                  ?node.data.name\n                  :ModuleType.TheaterInternalServiceModuleInstance\n                  }}\n                \n                \n                  {{\n                  (node.data.area && node.data.area!=='')\n                  ?\"area: \"+node.data.area\n                  :''\n                  }}\n                \n                \n                  {{\n                  (node.data.version && node.data.version!=='')\n                  ?\"version: \"+node.data.version\n                  :''\n                  }}\n                \n              \n            \n          \n        \n      \n    \n  \n\n\n  \n    \n      Button with data-bs-target\n    \n  \n  \n    \n      Some placeholder content for the collapse component. This panel is hidden by default but revealed when the user\n      activates the relevant trigger.\n    \n   -->\n\n\n  \n\n    \n    \n      \n        {{output.name}}\n        \n          \n          P\n          \n        \n      \n    \n\n\n     -->\n\n    \n    \n      \n        \n          \n          \n          C\n          \n        \n        {{input.name}}\n        \n      \n    \n\n  \n\n\n\n  \n  \n    \n\n      \n        \n        {{\n        node.data.host_number\n        ?node.data.host_number\n        :0\n        }}\n      \n\n      \n        \n        {{\n        node.data.subnet_number\n        ?node.data.subnet_number\n        :0\n        }}\n      \n\n      \n        \n        {{\n        node.data.network_number\n        ?node.data.network_number\n        :0\n        }}\n      \n\n    \n  \n\n\n\n    \n\n    \n                \n                    ./theaterInternalServiceModuleInstance.component.sass\n                \n                @import \"../vars\"\n\n.node\n  background: $node-color\n  border: 2px solid #f124\n  border-radius: 10px\n  cursor: pointer\n  min-width: $node-width\n  height: auto\n  padding-bottom: 6px\n  box-sizing: content-box\n  position: relative\n  user-select: none\n  &:hover\n    background: lighten($node-color,4%)\n  &.selected\n    background: $node-color-selected\n    border-color: #ff0000\n  .title\n    color: $text-color\n    font-family: $font-fam\n    font-size: 18px\n    padding: 8px\n  .output\n    text-align: right\n    display: flex\n    justify-content: flex-end\n  .input\n    text-align: left\n    display: flex\n    justify-content: flex-start\n  .input-title,.output-title\n    vertical-align: middle\n    color: $text-color\n    display: inline-block\n    font-family: $font-fam\n    font-size: 14px\n    margin: $socket-margin\n    line-height: $socket-size\n    &[hidden]\n      display: none\n  .input-control\n    z-index: 1\n    width: calc(100% - #{$socket-size + 2*$socket-margin})\n    vertical-align: middle\n    display: inline-block\n  .control\n    padding: $socket-margin $socket-size/2 + $socket-margin\n\n    \n\n    \n        \n        \n            \n                Legenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento html con direttive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              {{ node.data.name === \"\" || node.data.name === undefined ? \"Assign name\" : node.data.name }}                                                                     -->                                                                                                                                         {{                  (node.data.name && node.data.name!==\\'\\')                  ?node.data.name                  :ModuleType.TheaterInternalServiceModuleInstance                  }}                                                  {{                  (node.data.area && node.data.area!==\\'\\')                  ?\"area: \"+node.data.area                  :\\'\\'                  }}                                                  {{                  (node.data.version && node.data.version!==\\'\\')                  ?\"version: \"+node.data.version                  :\\'\\'                  }}                                                                                    Button with data-bs-target                  Some placeholder content for the collapse component. This panel is hidden by default but revealed when the user      activates the relevant trigger.       -->                        {{output.name}}                            P                                 -->                                                    C                          {{input.name}}                                                  {{        node.data.host_number        ?node.data.host_number        :0        }}                            {{        node.data.subnet_number        ?node.data.subnet_number        :0        }}                            {{        node.data.network_number        ?node.data.network_number        :0        }}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ComposerComponent', 'selector': 'app-composer'},{'name': 'ControlTemplate', 'selector': ''},{'name': 'DataInputComponent', 'selector': 'app-data-input'},{'name': 'DataInputV2Component', 'selector': 'app-data-input-v2'},{'name': 'DataItemComponent', 'selector': 'app-window-item'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HostComponent', 'selector': ''},{'name': 'HowToUseComponent', 'selector': 'app-how-to-use'},{'name': 'MirroringModuleInstanceComponent', 'selector': ''},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavbarElementComponent', 'selector': 'app-navbar-element'},{'name': 'NetworkComponent', 'selector': ''},{'name': 'OffcanvasComponent', 'selector': 'app-offcanvas'},{'name': 'ReteModuleComposerComponent', 'selector': 'app-rete-module-composer'},{'name': 'ReteModuleVisualizerComponent', 'selector': 'app-rete-module-visualizer'},{'name': 'ReteTheaterComposerComponent', 'selector': 'app-rete-theater-composer'},{'name': 'ReteTheaterVisualizerComponent', 'selector': 'app-rete-theater-visualizer'},{'name': 'SubnetComponent', 'selector': ''},{'name': 'TabnavComponent', 'selector': 'app-tabnav'},{'name': 'TheaterInternalServiceModuleInstanceComponent', 'selector': ''},{'name': 'TheaterModuleInstanceComponent', 'selector': ''},{'name': 'UnderbarComponent', 'selector': 'app-underbar'},{'name': 'VisualizerComponent', 'selector': 'app-displayer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TheaterInternalServiceModuleInstanceComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/TheaterInternalServiceModuleInstanceNode.html":{"url":"classes/TheaterInternalServiceModuleInstanceNode.html","title":"class - TheaterInternalServiceModuleInstanceNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  TheaterInternalServiceModuleInstanceNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/rete-settings/nodes/rete-modules/theaterInternalServiceModuleInstance/theaterInternalServiceModuleInstanceNode.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che rappresenta il modulo (rete-node) TheaterInternalServiceModuleInstance all'interno del canvas/editor di rete.\n\n            \n\n            \n                Extends\n            \n            \n                        Component\n            \n\n            \n                Implementa\n            \n            \n                        AngularComponent\n            \n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                builder\n                            \n                            \n                                created\n                            \n                            \n                                createNewNode\n                            \n                            \n                                destroyed\n                            \n                            \n                                valorizeNode\n                            \n                            \n                                worker\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Costruttore\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Definito in src/app/rete-settings/nodes/rete-modules/theaterInternalServiceModuleInstance/theaterInternalServiceModuleInstanceNode.ts:49\n                            \n                        \n\n                \n                    \n                            Costruttore di TheaterInternalServiceModuleInstanceNode\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     AngularComponentData\n\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-modules/theaterInternalServiceModuleInstance/theaterInternalServiceModuleInstanceNode.ts:49\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        builder\n                        \n                    \n                \n            \n            \n                \n                    \n                    builder(node: Node)\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-modules/theaterInternalServiceModuleInstance/theaterInternalServiceModuleInstanceNode.ts:67\n                \n            \n\n\n            \n                \n                    Funzione richiamata in fase di costruzione del nodo (rete-node).\nControlla se bisogna instanziare il nodo oppure crearne uno nuovo:\n\nIn fase di design, il nodo non ha dati, per cui bisogna crearne uno nuovo.\nIn fase di visualizing, il nodo presenta dei dati, per cui va valorizzato il nodo.\n\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        created\n                        \n                    \n                \n            \n            \n                \ncreated(node: Node)\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-modules/theaterInternalServiceModuleInstance/theaterInternalServiceModuleInstanceNode.ts:130\n                \n            \n\n\n            \n                \n                    Funzione richiamata una volta in nodo creato.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createNewNode\n                        \n                    \n                \n            \n            \n                \ncreateNewNode(node: Node)\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-modules/theaterInternalServiceModuleInstance/theaterInternalServiceModuleInstanceNode.ts:79\n                \n            \n\n\n            \n                \n                    Funzione che ha come scopo creare un nodo (rete-node).\nIn particolare gli assegna una struttura vuota.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destroyed\n                        \n                    \n                \n            \n            \n                \ndestroyed(node: Node)\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-modules/theaterInternalServiceModuleInstance/theaterInternalServiceModuleInstanceNode.ts:138\n                \n            \n\n\n            \n                \n                    Funzione richiamata una volta in nodo cancellato.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        valorizeNode\n                        \n                    \n                \n            \n            \n                \nvalorizeNode(node: Node)\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-modules/theaterInternalServiceModuleInstance/theaterInternalServiceModuleInstanceNode.ts:92\n                \n            \n\n\n            \n                \n                    Funzione che ha come scopo la valorizzazione del nodo (rete-node) con i dati in suo possesso.\nIn quasta fase avviene anche la fase iniziale di instanziamento delle porte input/output.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        worker\n                        \n                    \n                \n            \n            \n                \nworker(node: NodeData, inputs: WorkerInputs, outputs: WorkerOutputs)\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-modules/theaterInternalServiceModuleInstance/theaterInternalServiceModuleInstanceNode.ts:122\n                \n            \n\n\n            \n                \n                    Funzione richiamta per eseguire operazioni che conivolgono computazioni dei nodi.\nNon sono necessari in questa versione.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                            NodeData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    inputs\n                                    \n                                            WorkerInputs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    outputs\n                                    \n                                            WorkerOutputs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Component, Input, Output, Node } from 'rete';\nimport { _Socket } from '../../../sockets/socket';\nimport { _Control } from '../../../controls/control';\nimport { AngularComponent, AngularComponentData } from 'rete-angular-render-plugin';\nimport { NodeData, WorkerInputs, WorkerOutputs } from 'rete/types/core/data';\nimport { TheaterInternalServiceModuleInstanceComponent } from './theaterInternalServiceModuleInstance.component';\nimport {  reteBasicModuleInfo } from '../../reteBasic';\nimport { EnumModuleType } from 'src/app/models/appType';\n\n/**\n * Classe utilizzata per indicare il tipo di modulo TheaterInternalServiceModuleInstanceNode.\n * @see {reteBasicModuleInfo}\n */\nexport class ReteTheaterInternalServiceModuleInstanceInfo extends reteBasicModuleInfo {\n  type: EnumModuleType.TheaterInternalServiceModuleInstance;\n}\n\n/**\n * Funzione dichiarata in TheaterInternalServiceModuleInstanceNode. \n * Essa ha lo scopo di generare una struttura dati empty.\n * Viene utilizzata in per instanziare un nodo del tipo di ritorno indicato senza dati.\n * @returns {ReteTheaterInternalServiceModuleInstanceInfo}\n */\nexport function getEmptyReteTheaterInternalServiceModuleInstanceInfo(): ReteTheaterInternalServiceModuleInstanceInfo {\n  let x: ReteTheaterInternalServiceModuleInstanceInfo = {\n    Input: [],\n    Output: [],\n    name: \"\",\n    description: \"\",\n    type: EnumModuleType.TheaterInternalServiceModuleInstance,\n    host_number: 0,\n    network_number: 0,\n    subnet_number: 0,\n    area: '',\n    module: '',\n    version: '',\n    sequence: '',\n    consumer_interfaces_link: []\n  };\n  return x;\n}\n\n\n/**\n * Classe che rappresenta il modulo (rete-node) TheaterInternalServiceModuleInstance all'interno del canvas/editor di rete.\n */\nexport class TheaterInternalServiceModuleInstanceNode extends Component implements AngularComponent {\n\n  data: AngularComponentData;\n\n    /**\n   * Costruttore di TheaterInternalServiceModuleInstanceNode\n   */\n  constructor() {\n    super(EnumModuleType.TheaterInternalServiceModuleInstance);\n    this.data.render = 'angular';\n    this.data.component = TheaterInternalServiceModuleInstanceComponent;\n  }\n\n  /**\n   * Funzione richiamata in fase di costruzione del nodo (rete-node).\n   * Controlla se bisogna instanziare il nodo oppure crearne uno nuovo:\n   * - In fase di design, il nodo non ha dati, per cui bisogna crearne uno nuovo.\n   * - In fase di visualizing, il nodo presenta dei dati, per cui va valorizzato il nodo.\n   * @param node \n   */\n  async builder(node: Node) {\n    if (Object.keys(node.data).length === 0)\n      this.createNewNode(node)\n    else\n      this.valorizeNode(node)\n  }\n\n  /**\n   * Funzione che ha come scopo creare un nodo (rete-node).\n   * In particolare gli assegna una struttura vuota.\n   * @param node \n   */\n  createNewNode(node: Node) {\n    let t = getEmptyReteTheaterInternalServiceModuleInstanceInfo()\n    node.data = {\n      ...node.data,\n      ...t\n    }\n  }\n\n  /**\n   * Funzione che ha come scopo la valorizzazione del nodo (rete-node) con i dati in suo possesso.\n   * In quasta fase avviene anche la fase iniziale di instanziamento delle porte input/output.\n   * @param node \n   */\n  valorizeNode(node: Node) {\n    var i: any = node.data['Input'];\n    var o: any = node.data['Output'];\n    var il = i.length;\n    var ol = o.length;\n\n    for (let index = 0; index \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"components/TheaterModuleInstanceComponent.html":{"url":"components/TheaterModuleInstanceComponent.html","title":"component - TheaterModuleInstanceComponent","body":"\n                   \n\n\n\n\n\n  Componenti\n  \n  TheaterModuleInstanceComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/rete-settings/nodes/rete-modules/theaterModuleInstance/theaterModuleInstance.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n            NodeComponent\n    \n\n\n\n\n    Metadati\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            NodeService\n                \n            \n\n\n\n            \n                styleUrls\n                ./theaterModuleInstance.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./theaterModuleInstance.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                HostIcon\n                            \n                            \n                                ModuleType\n                            \n                            \n                                NetworkIcon\n                            \n                            \n                                showFooter\n                            \n                            \n                                showInputOutlet\n                            \n                            \n                                showOutputOutlet\n                            \n                            \n                                showPorts\n                            \n                            \n                                SubnetIcon\n                            \n                            \n                                TheaterModuleInstanceIcon\n                            \n                        \n                    \n                \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                showhidesocket\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Costruttore\n        \n            \n                \n                    \nconstructor(service: NodeService, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Definito in src/app/rete-settings/nodes/rete-modules/theaterModuleInstance/theaterModuleInstance.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parametri :\n                                    \n                                        \n                                            \n                                                Nome\n                                                    Tipo\n                                                Opzionale\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                    NodeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        showhidesocket\n                        \n                    \n                \n            \n            \n                \nshowhidesocket()\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-modules/theaterModuleInstance/theaterModuleInstance.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        HostIcon\n                        \n                    \n                \n            \n                \n                    \n                        Valore predefinito : HostIcon\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-modules/theaterModuleInstance/theaterModuleInstance.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ModuleType\n                        \n                    \n                \n            \n                \n                    \n                        Valore predefinito : EnumModuleType\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-modules/theaterModuleInstance/theaterModuleInstance.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        NetworkIcon\n                        \n                    \n                \n            \n                \n                    \n                        Valore predefinito : NetworkIcon\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-modules/theaterModuleInstance/theaterModuleInstance.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showFooter\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                \n                    \n                        Valore predefinito : true\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-modules/theaterModuleInstance/theaterModuleInstance.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showInputOutlet\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                \n                    \n                        Valore predefinito : true\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-modules/theaterModuleInstance/theaterModuleInstance.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showOutputOutlet\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                \n                    \n                        Valore predefinito : true\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-modules/theaterModuleInstance/theaterModuleInstance.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showPorts\n                        \n                    \n                \n            \n                \n                    \n                        Valore predefinito : true\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-modules/theaterModuleInstance/theaterModuleInstance.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SubnetIcon\n                        \n                    \n                \n            \n                \n                    \n                        Valore predefinito : SubnetIcon\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-modules/theaterModuleInstance/theaterModuleInstance.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TheaterModuleInstanceIcon\n                        \n                    \n                \n            \n                \n                    \n                        Valore predefinito : TheaterModuleInstance_ICON\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-modules/theaterModuleInstance/theaterModuleInstance.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, ChangeDetectorRef, ChangeDetectionStrategy } from '@angular/core';\nimport { NodeComponent, NodeService } from 'rete-angular-render-plugin';\nimport { EnumModuleType } from 'src/app/models/appType';\nimport { HostIcon, SubnetIcon, NetworkIcon, TheaterModuleInstance_ICON } from 'src/app/rete-settings/style/styleIconConfig';\n// import { EnumModuleType } from 'src/app/rete-settings/models/reteModelType';\n \n@Component({\n  templateUrl: './theaterModuleInstance.component.html',\n  styleUrls: ['./theaterModuleInstance.component.sass',],\n  providers: [NodeService],\n  changeDetection: ChangeDetectionStrategy.OnPush, // render più veloce.\n})\n\nexport class TheaterModuleInstanceComponent extends NodeComponent {\n\n  showPorts = true;\n  showOutputOutlet: boolean = true;\n  showInputOutlet: boolean = true;\n  showFooter: boolean = true;\n  \n  TheaterModuleInstanceIcon = TheaterModuleInstance_ICON;\n  ModuleType = EnumModuleType;\n  SubnetIcon=SubnetIcon;\n  NetworkIcon=NetworkIcon;\n  HostIcon=HostIcon;\n\n  constructor(\n    protected service: NodeService,\n    protected cdr: ChangeDetectorRef) {\n    super(service, cdr);\n  }\n\n  showhidesocket() {\n    this.showPorts = !this.showPorts;\n\n  }\n  \n}\n\n    \n\n    \n        \n\n  \n    \n      \n        \n          {{ node.data.name === \"\" || node.data.name === undefined ? \"Assign name\" : node.data.name }}\n        \n      \n      \n        \n          \n          \n        \n      \n    \n   -->\n\n\n  \n  \n    \n      \n        \n          \n            \n              \n                 \n              \n              \n                \n                  {{\n                  (node.data.name && node.data.name!=='')\n                  ?node.data.name\n                  :ModuleType.TheaterModuleInstance\n                  }}\n                \n                \n                  {{\n                  (node.data.area && node.data.area!=='')\n                  ?\"area: \"+node.data.area\n                  :''\n                  }}\n                \n                \n                  {{\n                  (node.data.version && node.data.version!=='')\n                  ?\"version: \"+node.data.version\n                  :''\n                  }}\n                \n              \n            \n          \n        \n      \n    \n  \n\n\n  \n    \n      Button with data-bs-target\n    \n  \n  \n    \n      Some placeholder content for the collapse component. This panel is hidden by default but revealed when the user\n      activates the relevant trigger.\n    \n   -->\n\n\n  \n\n    \n    \n      \n        {{output.name}}\n        \n          \n          \n          P\n          \n        \n      \n    \n\n\n     -->\n\n    \n    \n      \n        \n          \n          \n          C\n          \n        \n        {{input.name}}\n        \n      \n    \n\n  \n\n\n\n  \n  \n    \n\n      \n        \n        {{\n        node.data.host_number\n        ?node.data.host_number\n        :0\n        }}\n      \n\n      \n        \n        {{\n        node.data.subnet_number\n        ?node.data.subnet_number\n        :0\n        }}\n      \n\n      \n        \n        {{\n        node.data.network_number\n        ?node.data.network_number\n        :0\n        }}\n      \n\n    \n  \n\n\n\n    \n\n    \n                \n                    ./theaterModuleInstance.component.sass\n                \n                @import \"../vars\"\n\n.node\n  background: $node-color\n  border: 2px solid #f124\n  border-radius: 10px\n  cursor: pointer\n  min-width: $node-width\n  height: auto\n  padding-bottom: 6px\n  box-sizing: content-box\n  position: relative\n  user-select: none\n  &:hover\n    background: lighten($node-color,4%)\n  &.selected\n    background: $node-color-selected\n    border-color: #ff0000\n  .title\n    color: $text-color\n    font-family: $font-fam\n    font-size: 18px\n    padding: 8px\n  .output\n    text-align: right\n    display: flex\n    justify-content: flex-end\n  .input\n    text-align: left\n    display: flex\n    justify-content: flex-start\n  .input-title,.output-title\n    vertical-align: middle\n    color: $text-color\n    display: inline-block\n    font-family: $font-fam\n    font-size: 14px\n    margin: $socket-margin\n    line-height: $socket-size\n    &[hidden]\n      display: none\n  .input-control\n    z-index: 1\n    width: calc(100% - #{$socket-size + 2*$socket-margin})\n    vertical-align: middle\n    display: inline-block\n  .control\n    padding: $socket-margin $socket-size/2 + $socket-margin\n\n    \n\n    \n        \n        \n            \n                Legenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento html con direttive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              {{ node.data.name === \"\" || node.data.name === undefined ? \"Assign name\" : node.data.name }}                                                                     -->                                                                                                                                         {{                  (node.data.name && node.data.name!==\\'\\')                  ?node.data.name                  :ModuleType.TheaterModuleInstance                  }}                                                  {{                  (node.data.area && node.data.area!==\\'\\')                  ?\"area: \"+node.data.area                  :\\'\\'                  }}                                                  {{                  (node.data.version && node.data.version!==\\'\\')                  ?\"version: \"+node.data.version                  :\\'\\'                  }}                                                                                    Button with data-bs-target                  Some placeholder content for the collapse component. This panel is hidden by default but revealed when the user      activates the relevant trigger.       -->                        {{output.name}}                                      P                                 -->                                                    C                          {{input.name}}                                                  {{        node.data.host_number        ?node.data.host_number        :0        }}                            {{        node.data.subnet_number        ?node.data.subnet_number        :0        }}                            {{        node.data.network_number        ?node.data.network_number        :0        }}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ComposerComponent', 'selector': 'app-composer'},{'name': 'ControlTemplate', 'selector': ''},{'name': 'DataInputComponent', 'selector': 'app-data-input'},{'name': 'DataInputV2Component', 'selector': 'app-data-input-v2'},{'name': 'DataItemComponent', 'selector': 'app-window-item'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HostComponent', 'selector': ''},{'name': 'HowToUseComponent', 'selector': 'app-how-to-use'},{'name': 'MirroringModuleInstanceComponent', 'selector': ''},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavbarElementComponent', 'selector': 'app-navbar-element'},{'name': 'NetworkComponent', 'selector': ''},{'name': 'OffcanvasComponent', 'selector': 'app-offcanvas'},{'name': 'ReteModuleComposerComponent', 'selector': 'app-rete-module-composer'},{'name': 'ReteModuleVisualizerComponent', 'selector': 'app-rete-module-visualizer'},{'name': 'ReteTheaterComposerComponent', 'selector': 'app-rete-theater-composer'},{'name': 'ReteTheaterVisualizerComponent', 'selector': 'app-rete-theater-visualizer'},{'name': 'SubnetComponent', 'selector': ''},{'name': 'TabnavComponent', 'selector': 'app-tabnav'},{'name': 'TheaterInternalServiceModuleInstanceComponent', 'selector': ''},{'name': 'TheaterModuleInstanceComponent', 'selector': ''},{'name': 'UnderbarComponent', 'selector': 'app-underbar'},{'name': 'VisualizerComponent', 'selector': 'app-displayer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TheaterModuleInstanceComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/TheaterModuleInstanceNode.html":{"url":"classes/TheaterModuleInstanceNode.html","title":"class - TheaterModuleInstanceNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  TheaterModuleInstanceNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/rete-settings/nodes/rete-modules/theaterModuleInstance/theaterModuleInstanceNode.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che rappresenta il modulo (rete-node) TheaterModuleInstance all'interno del canvas/editor di rete.\n\n            \n\n            \n                Extends\n            \n            \n                        Component\n            \n\n            \n                Implementa\n            \n            \n                        AngularComponent\n            \n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                builder\n                            \n                            \n                                created\n                            \n                            \n                                createNewNode\n                            \n                            \n                                destroyed\n                            \n                            \n                                valorizeNode\n                            \n                            \n                                worker\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Costruttore\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Definito in src/app/rete-settings/nodes/rete-modules/theaterModuleInstance/theaterModuleInstanceNode.ts:49\n                            \n                        \n\n                \n                    \n                            Costruttore di MirroringModuleInstanceNode\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     AngularComponentData\n\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-modules/theaterModuleInstance/theaterModuleInstanceNode.ts:49\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        builder\n                        \n                    \n                \n            \n            \n                \n                    \n                    builder(node: Node)\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-modules/theaterModuleInstance/theaterModuleInstanceNode.ts:67\n                \n            \n\n\n            \n                \n                    Funzione richiamata in fase di costruzione del nodo (rete-node).\nControlla se bisogna instanziare il nodo oppure crearne uno nuovo:\n\nIn fase di design, il nodo non ha dati, per cui bisogna crearne uno nuovo.\nIn fase di visualizing, il nodo presenta dei dati, per cui va valorizzato il nodo.\n\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        created\n                        \n                    \n                \n            \n            \n                \ncreated(node: Node)\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-modules/theaterModuleInstance/theaterModuleInstanceNode.ts:130\n                \n            \n\n\n            \n                \n                    Funzione richiamata una volta in nodo creato.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createNewNode\n                        \n                    \n                \n            \n            \n                \ncreateNewNode(node: Node)\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-modules/theaterModuleInstance/theaterModuleInstanceNode.ts:79\n                \n            \n\n\n            \n                \n                    Funzione che ha come scopo creare un nodo (rete-node).\nIn particolare gli assegna una struttura vuota.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destroyed\n                        \n                    \n                \n            \n            \n                \ndestroyed(node: Node)\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-modules/theaterModuleInstance/theaterModuleInstanceNode.ts:138\n                \n            \n\n\n            \n                \n                    Funzione richiamata una volta in nodo cancellato.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        valorizeNode\n                        \n                    \n                \n            \n            \n                \nvalorizeNode(node: Node)\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-modules/theaterModuleInstance/theaterModuleInstanceNode.ts:92\n                \n            \n\n\n            \n                \n                    Funzione che ha come scopo la valorizzazione del nodo (rete-node) con i dati in suo possesso.\nIn quasta fase avviene anche la fase iniziale di instanziamento delle porte input/output.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        worker\n                        \n                    \n                \n            \n            \n                \nworker(node: NodeData, inputs: WorkerInputs, outputs: WorkerOutputs)\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-modules/theaterModuleInstance/theaterModuleInstanceNode.ts:122\n                \n            \n\n\n            \n                \n                    Funzione richiamta per eseguire operazioni che conivolgono computazioni dei nodi.\nNon sono necessari in questa versione.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                            NodeData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    inputs\n                                    \n                                            WorkerInputs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    outputs\n                                    \n                                            WorkerOutputs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Component, Input, Output, Node } from 'rete';\nimport { _Socket } from '../../../sockets/socket';\nimport { _Control } from '../../../controls/control';\nimport { AngularComponent, AngularComponentData } from 'rete-angular-render-plugin';\nimport { NodeData, WorkerInputs, WorkerOutputs } from 'rete/types/core/data';\nimport { TheaterModuleInstanceComponent } from './theaterModuleInstance.component';\nimport {  reteBasicModuleInfo } from '../../reteBasic';\nimport { EnumModuleType } from 'src/app/models/appType';\n\n/**\n * Classe utilizzata per indicare il tipo di modulo MirroringModuleInstanceNode.\n * @see {reteBasicModuleInfo}\n */\nexport class ReteTheaterModuleInstanceInfo extends reteBasicModuleInfo {\n  type: EnumModuleType.TheaterModuleInstance;\n}\n\n/**\n * Funzione dichiarata in TheaterModuleInstanceNode. \n * Essa ha lo scopo di generare una struttura dati empty.\n * Viene utilizzata in per instanziare un nodo del tipo di ritorno indicato senza dati.\n * @returns {ReteTheaterModuleInstanceInfo}\n */\nexport function getEmptyReteTheaterModuleInstanceInfo(): ReteTheaterModuleInstanceInfo {\n  let x: ReteTheaterModuleInstanceInfo = {\n    Input: [],\n    Output: [],\n    description: \"\",\n    name: \"\",\n    type: EnumModuleType.TheaterModuleInstance,\n    host_number: 0,\n    network_number: 0,\n    subnet_number: 0,\n    area: '',\n    module: '',\n    version: '',\n    sequence: '',\n    consumer_interfaces_link: []\n  };\n  return x;\n\n}\n\n/**\n * Classe che rappresenta il modulo (rete-node) TheaterModuleInstance all'interno del canvas/editor di rete.\n */\nexport class TheaterModuleInstanceNode extends Component implements AngularComponent {\n\n  data: AngularComponentData;\n\n    /**\n   * Costruttore di MirroringModuleInstanceNode\n   */\n  constructor() {\n    super(EnumModuleType.TheaterModuleInstance);\n    this.data.render = 'angular';\n    this.data.component = TheaterModuleInstanceComponent;\n  }\n\n    /**\n   * Funzione richiamata in fase di costruzione del nodo (rete-node).\n   * Controlla se bisogna instanziare il nodo oppure crearne uno nuovo:\n   * - In fase di design, il nodo non ha dati, per cui bisogna crearne uno nuovo.\n   * - In fase di visualizing, il nodo presenta dei dati, per cui va valorizzato il nodo.\n   * @param node \n   */\n  async builder(node: Node) {\n    if (Object.keys(node.data).length === 0)\n      this.createNewNode(node)\n    else\n      this.valorizeNode(node)\n  }\n\n  /**\n   * Funzione che ha come scopo creare un nodo (rete-node).\n   * In particolare gli assegna una struttura vuota.\n   * @param node \n   */\n  createNewNode(node: Node) {\n    let t = getEmptyReteTheaterModuleInstanceInfo()\n    node.data = {\n      ...node.data,\n      ...t\n    }\n  }\n\n  /**\n   * Funzione che ha come scopo la valorizzazione del nodo (rete-node) con i dati in suo possesso.\n   * In quasta fase avviene anche la fase iniziale di instanziamento delle porte input/output.\n   * @param node \n   */\n  valorizeNode(node: Node) {\n    var i: any = node.data['Input'];\n    var o: any = node.data['Output'];\n    var il = i.length;\n    var ol = o.length;\n\n    for (let index = 0; index \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"injectables/TheaterService.html":{"url":"injectables/TheaterService.html","title":"injectable - TheaterService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TheaterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/api/theater.service.ts\n        \n\n\n\n\n\n            \n    Indice\n    \n        \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getTheaterInfoByID\n                            \n                            \n                                    Async\n                                getTheaterModulesByUUID\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Costruttore\n        \n            \n                \n                    \nconstructor(http: HttpClient, tokenService: TokenService)\n                    \n                \n                        \n                            \n                                Definito in src/app/services/api/theater.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parametri :\n                                    \n                                        \n                                            \n                                                Nome\n                                                    Tipo\n                                                Opzionale\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tokenService\n                                                  \n                                                        \n                                                                        TokenService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getTheaterInfoByID\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTheaterInfoByID(theater_id: number | string)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/api/theater.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    theater_id\n                                    \n                                            number | string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getTheaterModulesByUUID\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTheaterModulesByUUID(theater_uuid: number | string)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/api/theater.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    theater_uuid\n                                    \n                                            number | string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { SimpleModuleDTO } from '../modelsDTO/moduleDTO';\nimport { TheaterDTO } from '../modelsDTO/theaterDTO';\nimport { TokenService } from '../token/token.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TheaterService {\n\n  constructor(private http: HttpClient, private tokenService: TokenService) { }\n\n  async getTheaterInfoByID(theater_id: number | string): Promise {\n\n    let link: string = environment.getTheaterByID + (theater_id as unknown as string);\n\n    const promise = await new Promise(\n      (resolve, reject) => {\n        this.http.get\n          (\n            link,\n            this.tokenService.getHttpgetOption()\n          )\n          .toPromise()\n          .then(\n            (res: TheaterDTO) => {\n              resolve(res);\n            }\n          )\n          .catch(\n            error => {\n              reject(error);\n            }\n          );\n      }\n    );\n\n    return promise;\n  }\n\n  async getTheaterModulesByUUID(theater_uuid: number | string): Promise {\n\n    let link: string = environment.getTheaterModulesByUUID + (theater_uuid as unknown as string);\n\n    const promise = await new Promise((resolve, reject) => {\n      this.http.get\n        (\n          link,\n          this.tokenService.getHttpgetOption()\n        )\n        .toPromise()\n        .then(\n          (res: SimpleModuleDTO[]) => {\n            resolve(res);\n          }\n        )\n        .catch(\n          error => {\n            reject(error);\n          }\n        );\n    }\n    );\n    return promise;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/TheaterSimpleData.html":{"url":"classes/TheaterSimpleData.html","title":"class - TheaterSimpleData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  TheaterSimpleData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsExport/theaterExport.ts\n        \n\n\n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                properties\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        properties\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         PropertiesTSD\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/theaterExport.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         TheaterTypeExport\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/theaterExport.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ModeTypeExport, ModuleTypeExport, TheaterTypeExport, ToscaDefinitionType } from \"./TypeExport\"\n\n/**\n * Classe utilizzata per l'export. \n * Contiene le informazioni generali per il teatro che devono esserci nello standard Tosca.\n */\nexport class TheaterExport {\n    tosca_definitions_version: ToscaDefinitionType\n    description: string\n    imports: string[]\n    node_templates: { [name: string]: TheaterSimpleData | ModuleInstanceSimpleData }\n}\n\nexport class TheaterSimpleData {\n    type: TheaterTypeExport\n    properties: PropertiesTSD\n}\nexport class PropertiesTSD {\n    version: string | number\n    description: string\n    mode: ModeTypeExport\n    author: string\n    tags: TagsExport[]\n    areas: AreaExport[]\n}\nexport class TagsExport {\n    tag: string\n}\nexport class AreaExport {\n    area: string\n    description: string\n}\n\nexport class ModuleInstanceSimpleData {\n    type: ModuleTypeExport\n    properties: PropertiesMISD\n}\nexport class PropertiesMISD{\n    module: string\n    version: string | number\n    area: string\n    sequence: number\n    sources?: SourceExport[]\n    consumer_interface_link: ConsumerInterfaceLinkExport[]\n}\nexport class SourceExport{\n    module_instance: string\n    host:string\n    interfaces: string[]\n}\nexport class ConsumerInterfaceLinkExport{\n    local_interface: string\n    module_interface:string\n    remote_interface:string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"interfaces/TheaterTopology.html":{"url":"interfaces/TheaterTopology.html","title":"interface - TheaterTopology","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfacce\n  \n  TheaterTopology\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsApplication/applicationModels.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        TopologyElement\n            \n\n        \n            Indice\n            \n                \n                    \n                        \n                            Proprietà\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            connection\n                                        \n                                \n                                \n                                        \n                                            elements\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Proprietà\n                    \n                        \n                                \n                                    \n                                        \n                                        connection\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        connection:         ReteConnection[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         ReteConnection[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        elements\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        elements:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ReteHostInfo } from \"src/app/rete-settings/nodes/rete-nodes/host/hostNode\";\nimport { ReteNetworkInfo } from \"src/app/rete-settings/nodes/rete-nodes/network/networkNode\";\nimport { ReteSubnetInfo } from \"src/app/rete-settings/nodes/rete-nodes/subnet/subnetNode\";\nimport { ReteMirroringModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/mirroringModuleInstance/mirroringModuleInstanceNode\";\nimport { ReteTheaterInternalServiceModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/theaterInternalServiceModuleInstance/theaterInternalServiceModuleInstanceNode\";\nimport { ReteTheaterModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/theaterModuleInstance/theaterModuleInstanceNode\";\nimport { FlavorBasicInfo } from \"../modelsDTO/falvorDTO\";\nimport { HostModuleDTO } from \"../modelsDTO/hostDTO\";\nimport { ModuleNetworkInterfaceDTO, ModuleInstancePropertiesDTO, SimpleModuleDTO, TheaterInstancePropertiesDTO, ModuleInstanceDTO, ModuleDTO, SimpleAreaDTO, AreaDTO } from \"../modelsDTO/moduleDTO\";\nimport { TheaterDTO } from \"../modelsDTO/theaterDTO\";\n\n\nexport interface CommonModule {\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n}\n\n\n/**\n * Classe contenente gli attributi utilizzati per le operazioni che coinvolgono i moduli.\n * ps. Questa struttura è prettamente utilizzata nella chiamata relativa al singolo modulo.\n */\nexport class ModuleApplication extends ModuleDTO implements CommonModule {\n    imports: string[] // perchè nell'export yaml è previsto\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n}\n// PER IMPLEMENTAZIONI FUTURE, PER COERENZA, PRENDERE DIRETTAMENTE I SINGOLI NODI DALLA CHIAMATA ESCLUSIVA E NON DA QUELLA CHE RESTITUISCE TUTTI I TEATRI\n/**\n * Classe contenente gli attributi utilizzati per le operazioni che coinvolgono i moduli.\n * ps. Questa struttura è prettamente utilizzata nella chiamata che prende tutti i moduli del teatro.\n */\nexport class SimpleModuleApplication extends SimpleModuleDTO implements CommonModule {\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n}\n\n\nexport class ReteConnection {\n    from: string;\n    port_src: string;\n    to: string;\n    port_dst: string;\n}\n\nexport interface TopologyList {\n    rete: any;\n    topology?: TopologyElement\n}\nexport class TopologyElement {\n    elements: { [name: string]: any };\n    connection: ReteConnection[]\n}\n\n// apptype module topology\n\nexport class NodeTopologyElement implements TopologyElement {\n    elements: { [hostName: string]: ReteHostInfo | ReteSubnetInfo | ReteNetworkInfo };\n    connection: ReteConnection[]\n}\n\nexport interface ModuleTopology extends TopologyList {\n    rete: ReteMirroringModuleInstanceInfo | ReteTheaterInternalServiceModuleInstanceInfo | ReteTheaterModuleInstanceInfo\n    topology: NodeTopologyElement;\n}\n\nexport class ModuleInstance extends ModuleInstanceDTO implements ModuleTopology {\n    // moduleTopology data\n    rete: ReteTheaterModuleInstanceInfo | ReteTheaterInternalServiceModuleInstanceInfo | ReteMirroringModuleInstanceInfo;\n    topology: NodeTopologyElement;\n    // other data\n    moduleInfo: SimpleModuleApplication\n}\n\n// apptype theater theater\n\nexport interface TheaterTopology extends TopologyElement {\n    elements: { [hostName: string]: ModuleInstance };\n    connection: ReteConnection[];\n}\n\nexport class TheaterApplication extends TheaterDTO implements TheaterTopology {\n    // theaterTopology data\n    elements: { [hostName: string]: ModuleInstance; };\n    connection: ReteConnection[];\n    // other data\n    properties: TheaterInstancePropertiesDTO;\n    topology: TheaterTopology;\n}\n\nexport class AreaApplication extends AreaDTO {\n    color?: string;\n}\nexport class AreaColorDTO extends SimpleAreaDTO {\n    color: string;\n}\n\n\nexport class FlavorApplication extends FlavorBasicInfo {\n    flavorName: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/TheatreStatusDTO.html":{"url":"classes/TheatreStatusDTO.html","title":"class - TheatreStatusDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  TheatreStatusDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsDTO/theaterDTO.ts\n        \n\n\n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                code\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/theaterDTO.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/theaterDTO.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/theaterDTO.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ElementIntoTheaterDTO, ModuleInstanceDTO, TheaterInstanceDTO } from \"./moduleDTO\"\n\nexport class TagCatalogueDTO {\n    description: string\n    id: string | number\n    name: string\n}\n\nexport class TheatreStatusDTO {\n    code: string\n    id: string | number\n    name: string\n}\n\nexport class DeployInstanceDTO {\n    moduleInstanceConfigurationUUID?: string\n    moduleInstanceName: string\n    moduleInstanceUUID: string\n    moduleUUID: string\n}\n\nexport class BlueprintFileDTO {\n    description: string\n    imports: string[]\n    node_templates: {[name:string]:ModuleInstanceDTO|TheaterInstanceDTO}\n    tosca_definitions_version: string\n}\n\nexport class NameMappingDTO {\n    display_name: string\n    module_instance_name: string\n    module_name: string\n    node_template_name: string\n}\nexport class EntityNameMappingFileDTO {\n    name_mapping: NameMappingDTO[]\n}\nexport class TheaterDTO {\n    author: string\n    blueprintFile: BlueprintFileDTO\n    blueprintUUID: string | number\n    createdBy: string\n    createdDate: string\n    deploymentSequence: {[index:string]:DeployInstanceDTO} //tosee\n    description: string\n    entityNameMappingFile: EntityNameMappingFileDTO\n    id: string | number\n    isLocked: boolean\n    lastModifiedBy: string\n    lastModifiedDate: string\n    lockAcquiredTimestamp: string\n    lockLastUserAcquiring: string\n    lockReleasedTimestamp: string\n    name: string\n    status: TheatreStatusDTO\n    tags: TagCatalogueDTO[]\n    uuid: string\n    version: string\n}\n\nexport const TheaterType: string = \"sysman.creo.nodes.Theater\";\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"injectables/TokenService.html":{"url":"injectables/TokenService.html","title":"injectable - TokenService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TokenService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/token/token.service.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Servizio che serve per la gestione di un toker per le chiamate al server.\n\n            \n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                headers\n                            \n                            \n                                    Private\n                                httpgetOption\n                            \n                            \n                                    Private\n                                token\n                            \n                        \n                    \n                \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                getHeaders\n                            \n                            \n                                getHttpgetOption\n                            \n                            \n                                getToken\n                            \n                            \n                                setHeaders\n                            \n                            \n                                setHttpgetOption\n                            \n                            \n                                setToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Costruttore\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Definito in src/app/services/token/token.service.ts:24\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        getHeaders\n                        \n                    \n                \n            \n            \n                \ngetHeaders()\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/token/token.service.ts:60\n                \n            \n\n\n            \n                \n                    Funzione che ritorna l'header salvato.\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHttpgetOption\n                        \n                    \n                \n            \n            \n                \ngetHttpgetOption()\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/token/token.service.ts:74\n                \n            \n\n\n            \n                \n                    Funzione che ritorna l'http get option salvato.\n\n\n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getToken\n                        \n                    \n                \n            \n            \n                \ngetToken()\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/token/token.service.ts:46\n                \n            \n\n\n            \n                \n                    Funzione che ha come scopo di ritornare il token salvato.\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setHeaders\n                        \n                    \n                \n            \n            \n                \nsetHeaders(val: HttpHeaders)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/token/token.service.ts:54\n                \n            \n\n\n            \n                \n                    Funzione che setta l'header.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                HttpHeaders\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setHttpgetOption\n                        \n                    \n                \n            \n            \n                \nsetHttpgetOption(val: any)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/token/token.service.ts:67\n                \n            \n\n\n            \n                \n                    Funzione che salva l'http get option.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setToken\n                        \n                    \n                \n            \n            \n                \nsetToken(val: any)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/token/token.service.ts:32\n                \n            \n\n\n            \n                \n                    Funzione che si occupa di settare il token\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        headers\n                        \n                    \n                \n            \n                    \n                        \n                                Definito in src/app/services/token/token.service.ts:20\n                        \n                    \n\n            \n                \n                    Variabile che serve per memorizzare gli header della chiamata api.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        httpgetOption\n                        \n                    \n                \n            \n                    \n                        \n                                Definito in src/app/services/token/token.service.ts:24\n                        \n                    \n\n            \n                \n                    Variabile utilizzata per salvare le httpOption delle chiamate api.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        token\n                        \n                    \n                \n            \n                    \n                        \n                                Definito in src/app/services/token/token.service.ts:16\n                        \n                    \n\n            \n                \n                    Variabile che serve a memorizzare il token\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n\n/**\n * Servizio che serve per la gestione di un toker per le chiamate al server.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenService {\n\n  /**\n   * Variabile che serve a memorizzare il token\n   */\n  private token;\n  /**\n   * Variabile che serve per memorizzare gli header della chiamata api.\n   */\n  private headers;\n  /**\n   * Variabile utilizzata per salvare le httpOption delle chiamate api.\n   */\n  private httpgetOption;\n\n  constructor() { }\n\n  /**\n   * Funzione che si occupa di settare il token\n   * @param val \n   */\n  setToken(val: any) {\n    this.token = val;\n    this.headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer' + this.token,\n    });\n    this.httpgetOption = {\n      headers: this.headers,\n      observe: \"body\",\n    }\n  }\n  /**\n   * Funzione che ha come scopo di ritornare il token salvato.\n   */\n  getToken() {\n    return this.token;\n  }\n\n  /**\n   * Funzione che setta l'header.\n   * @param val \n   */\n  setHeaders(val: HttpHeaders) {\n    this.headers = val;\n  }\n  /**\n   * Funzione che ritorna l'header salvato.\n   */\n  getHeaders() {\n    return this.headers;\n  }\n\n  /** \n   * Funzione che salva l'http get option.\n  */\n  setHttpgetOption(val: any) {\n    this.httpgetOption = val;\n  }\n  /**\n   * Funzione che ritorna l'http get option salvato.\n   * @returns \n   */\n  getHttpgetOption() {\n    return this.httpgetOption as unknown;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/TopologyElement.html":{"url":"classes/TopologyElement.html","title":"class - TopologyElement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  TopologyElement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsApplication/applicationModels.ts\n        \n\n\n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                connection\n                            \n                            \n                                elements\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        connection\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ReteConnection[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsApplication/applicationModels.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        elements\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     literal type\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsApplication/applicationModels.ts:63\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ReteHostInfo } from \"src/app/rete-settings/nodes/rete-nodes/host/hostNode\";\nimport { ReteNetworkInfo } from \"src/app/rete-settings/nodes/rete-nodes/network/networkNode\";\nimport { ReteSubnetInfo } from \"src/app/rete-settings/nodes/rete-nodes/subnet/subnetNode\";\nimport { ReteMirroringModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/mirroringModuleInstance/mirroringModuleInstanceNode\";\nimport { ReteTheaterInternalServiceModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/theaterInternalServiceModuleInstance/theaterInternalServiceModuleInstanceNode\";\nimport { ReteTheaterModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/theaterModuleInstance/theaterModuleInstanceNode\";\nimport { FlavorBasicInfo } from \"../modelsDTO/falvorDTO\";\nimport { HostModuleDTO } from \"../modelsDTO/hostDTO\";\nimport { ModuleNetworkInterfaceDTO, ModuleInstancePropertiesDTO, SimpleModuleDTO, TheaterInstancePropertiesDTO, ModuleInstanceDTO, ModuleDTO, SimpleAreaDTO, AreaDTO } from \"../modelsDTO/moduleDTO\";\nimport { TheaterDTO } from \"../modelsDTO/theaterDTO\";\n\n\nexport interface CommonModule {\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n}\n\n\n/**\n * Classe contenente gli attributi utilizzati per le operazioni che coinvolgono i moduli.\n * ps. Questa struttura è prettamente utilizzata nella chiamata relativa al singolo modulo.\n */\nexport class ModuleApplication extends ModuleDTO implements CommonModule {\n    imports: string[] // perchè nell'export yaml è previsto\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n}\n// PER IMPLEMENTAZIONI FUTURE, PER COERENZA, PRENDERE DIRETTAMENTE I SINGOLI NODI DALLA CHIAMATA ESCLUSIVA E NON DA QUELLA CHE RESTITUISCE TUTTI I TEATRI\n/**\n * Classe contenente gli attributi utilizzati per le operazioni che coinvolgono i moduli.\n * ps. Questa struttura è prettamente utilizzata nella chiamata che prende tutti i moduli del teatro.\n */\nexport class SimpleModuleApplication extends SimpleModuleDTO implements CommonModule {\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n}\n\n\nexport class ReteConnection {\n    from: string;\n    port_src: string;\n    to: string;\n    port_dst: string;\n}\n\nexport interface TopologyList {\n    rete: any;\n    topology?: TopologyElement\n}\nexport class TopologyElement {\n    elements: { [name: string]: any };\n    connection: ReteConnection[]\n}\n\n// apptype module topology\n\nexport class NodeTopologyElement implements TopologyElement {\n    elements: { [hostName: string]: ReteHostInfo | ReteSubnetInfo | ReteNetworkInfo };\n    connection: ReteConnection[]\n}\n\nexport interface ModuleTopology extends TopologyList {\n    rete: ReteMirroringModuleInstanceInfo | ReteTheaterInternalServiceModuleInstanceInfo | ReteTheaterModuleInstanceInfo\n    topology: NodeTopologyElement;\n}\n\nexport class ModuleInstance extends ModuleInstanceDTO implements ModuleTopology {\n    // moduleTopology data\n    rete: ReteTheaterModuleInstanceInfo | ReteTheaterInternalServiceModuleInstanceInfo | ReteMirroringModuleInstanceInfo;\n    topology: NodeTopologyElement;\n    // other data\n    moduleInfo: SimpleModuleApplication\n}\n\n// apptype theater theater\n\nexport interface TheaterTopology extends TopologyElement {\n    elements: { [hostName: string]: ModuleInstance };\n    connection: ReteConnection[];\n}\n\nexport class TheaterApplication extends TheaterDTO implements TheaterTopology {\n    // theaterTopology data\n    elements: { [hostName: string]: ModuleInstance; };\n    connection: ReteConnection[];\n    // other data\n    properties: TheaterInstancePropertiesDTO;\n    topology: TheaterTopology;\n}\n\nexport class AreaApplication extends AreaDTO {\n    color?: string;\n}\nexport class AreaColorDTO extends SimpleAreaDTO {\n    color: string;\n}\n\n\nexport class FlavorApplication extends FlavorBasicInfo {\n    flavorName: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"interfaces/TopologyList.html":{"url":"interfaces/TopologyList.html","title":"interface - TopologyList","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfacce\n  \n  TopologyList\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsApplication/applicationModels.ts\n        \n\n\n\n\n        \n            Indice\n            \n                \n                    \n                        \n                            Proprietà\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            rete\n                                        \n                                \n                                \n                                            Opzionale\n                                        \n                                            topology\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Proprietà\n                    \n                        \n                                \n                                    \n                                        \n                                        rete\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rete:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        topology\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        topology:         TopologyElement\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         TopologyElement\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Opzionale\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ReteHostInfo } from \"src/app/rete-settings/nodes/rete-nodes/host/hostNode\";\nimport { ReteNetworkInfo } from \"src/app/rete-settings/nodes/rete-nodes/network/networkNode\";\nimport { ReteSubnetInfo } from \"src/app/rete-settings/nodes/rete-nodes/subnet/subnetNode\";\nimport { ReteMirroringModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/mirroringModuleInstance/mirroringModuleInstanceNode\";\nimport { ReteTheaterInternalServiceModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/theaterInternalServiceModuleInstance/theaterInternalServiceModuleInstanceNode\";\nimport { ReteTheaterModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/theaterModuleInstance/theaterModuleInstanceNode\";\nimport { FlavorBasicInfo } from \"../modelsDTO/falvorDTO\";\nimport { HostModuleDTO } from \"../modelsDTO/hostDTO\";\nimport { ModuleNetworkInterfaceDTO, ModuleInstancePropertiesDTO, SimpleModuleDTO, TheaterInstancePropertiesDTO, ModuleInstanceDTO, ModuleDTO, SimpleAreaDTO, AreaDTO } from \"../modelsDTO/moduleDTO\";\nimport { TheaterDTO } from \"../modelsDTO/theaterDTO\";\n\n\nexport interface CommonModule {\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n}\n\n\n/**\n * Classe contenente gli attributi utilizzati per le operazioni che coinvolgono i moduli.\n * ps. Questa struttura è prettamente utilizzata nella chiamata relativa al singolo modulo.\n */\nexport class ModuleApplication extends ModuleDTO implements CommonModule {\n    imports: string[] // perchè nell'export yaml è previsto\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n}\n// PER IMPLEMENTAZIONI FUTURE, PER COERENZA, PRENDERE DIRETTAMENTE I SINGOLI NODI DALLA CHIAMATA ESCLUSIVA E NON DA QUELLA CHE RESTITUISCE TUTTI I TEATRI\n/**\n * Classe contenente gli attributi utilizzati per le operazioni che coinvolgono i moduli.\n * ps. Questa struttura è prettamente utilizzata nella chiamata che prende tutti i moduli del teatro.\n */\nexport class SimpleModuleApplication extends SimpleModuleDTO implements CommonModule {\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n}\n\n\nexport class ReteConnection {\n    from: string;\n    port_src: string;\n    to: string;\n    port_dst: string;\n}\n\nexport interface TopologyList {\n    rete: any;\n    topology?: TopologyElement\n}\nexport class TopologyElement {\n    elements: { [name: string]: any };\n    connection: ReteConnection[]\n}\n\n// apptype module topology\n\nexport class NodeTopologyElement implements TopologyElement {\n    elements: { [hostName: string]: ReteHostInfo | ReteSubnetInfo | ReteNetworkInfo };\n    connection: ReteConnection[]\n}\n\nexport interface ModuleTopology extends TopologyList {\n    rete: ReteMirroringModuleInstanceInfo | ReteTheaterInternalServiceModuleInstanceInfo | ReteTheaterModuleInstanceInfo\n    topology: NodeTopologyElement;\n}\n\nexport class ModuleInstance extends ModuleInstanceDTO implements ModuleTopology {\n    // moduleTopology data\n    rete: ReteTheaterModuleInstanceInfo | ReteTheaterInternalServiceModuleInstanceInfo | ReteMirroringModuleInstanceInfo;\n    topology: NodeTopologyElement;\n    // other data\n    moduleInfo: SimpleModuleApplication\n}\n\n// apptype theater theater\n\nexport interface TheaterTopology extends TopologyElement {\n    elements: { [hostName: string]: ModuleInstance };\n    connection: ReteConnection[];\n}\n\nexport class TheaterApplication extends TheaterDTO implements TheaterTopology {\n    // theaterTopology data\n    elements: { [hostName: string]: ModuleInstance; };\n    connection: ReteConnection[];\n    // other data\n    properties: TheaterInstancePropertiesDTO;\n    topology: TheaterTopology;\n}\n\nexport class AreaApplication extends AreaDTO {\n    color?: string;\n}\nexport class AreaColorDTO extends SimpleAreaDTO {\n    color: string;\n}\n\n\nexport class FlavorApplication extends FlavorBasicInfo {\n    flavorName: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/TypesCatalogueDTO.html":{"url":"classes/TypesCatalogueDTO.html","title":"class - TypesCatalogueDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  TypesCatalogueDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsDTO/moduleDTO.ts\n        \n\n\n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                group\n                            \n                            \n                                id\n                            \n                            \n                                parentId\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        group\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        parentId\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     literal type\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PageableDTO, SortDTO } from './elementDTO';\nimport { NetworkDTO } from './networkDTO';\nimport { TheaterDTO } from './theaterDTO';\n\n\nexport class ModuleListDTO {\n    content: SimpleModuleDTO[]\n    pageable: PageableDTO\n    last: boolean\n    totalPages: string | number\n    totalElements: string | number\n    size: string | number\n    number: string | number\n    sort: SortDTO\n    numberOfElements: string | number\n    first: boolean\n    empty: boolean\n}\n\n\nexport class TypesCatalogueDTO {\n    group: string\n    id: string | number\n    parentId: {}\n    value: string\n}\n\nexport class ModuleClassificationDTO {\n    blueprintType: string\n    category: string\n    expectedInstanceType: string\n    id: string | number\n    mcClass: string\n    type: string\n    uuid: string\n}\n\nexport class GenericParameterDTO {\n    type: string\n    default: string\n    description: string\n}\n\nexport class ConfigurationTemplateDTO {\n    anchor_parameters: { [name: string]: GenericParameterDTO | string }\n    instance_parameters: { [name: string]: GenericParameterDTO }\n    structural_parameters: { [name: string]: GenericParameterDTO }\n    fixed_parameters: { [name: string]: GenericParameterDTO }\n    control_parameters: { [name: string]: GenericParameterDTO }\n    infrastructure_parameters: { [name: string]: GenericParameterDTO }\n    module: string\n    description: string\n    category: string\n    version: string | number\n    platform: string\n}\n\nexport class ModuleModeDTO {\n    code: string\n    id: string | number\n    name: string\n}\n\nexport class ModuleStatusDTO {\n    descriptionCode: string\n    id: string | number\n    name: string\n}\nexport class StatisticItemDTO {\n    error: string | number\n    updated: string | number\n    inserted: string | number\n}\n\nexport class SimpleModuleDTO {\n    createdBy: string\n    createdDate: string\n    description: string\n    id: string | number\n    isLocked: boolean\n    lastModifiedBy: string\n    lastModifiedDate: string\n    lockAcquiredTimestamp: string\n    lockLastUserAcquiring: string\n    lockReleasedTimestamp: string\n    name: string\n    status: ModuleStatusDTO\n    type?: string | any\n    uuid: string\n    version: string | number\n}\nexport class ModuleDTO extends SimpleModuleDTO {\n    attachments: string[]\n    author: string\n    capabilities: { [name: string]: string }\n    catalog1: TypesCatalogueDTO\n    catalog2: TypesCatalogueDTO\n    catalog3: TypesCatalogueDTO\n    classification: ModuleClassificationDTO\n    configurationTemplate: ConfigurationTemplateDTO\n    detailProperties: {}\n    input: { [name: string]: string }\n    output: { [name: string]: string }\n    mode: ModuleModeDTO\n    statistics: { [name: string]: StatisticItemDTO | string | number }\n    tags: []\n}\n\nexport class ModuleNetworkInterfaceDTO {\n    id: string | number\n    label: string\n    module: ModuleDTO\n    network: NetworkDTO\n    nodeName: string\n    type: string\n    uuid: string\n}\n\nexport class ConsumerInterfaceLinkDTO {\n    local_interface: string\n    module_instance: string\n    remote_interface: string\n}\n\nexport class ModuleInstancePropertiesDTO {\n    area: string\n    description: string\n    module: string\n    version: string | number\n    sequence: string | number\n    consumer_interfaces_link: ConsumerInterfaceLinkDTO[]\n}\n\nexport class AreaDTO {\n    id: string | number;\n    uuid: string;\n    name: string;\n    description: string;\n    theater: TheaterDTO;\n    deleted: boolean | string;\n}\n\nexport class SimpleAreaDTO {\n    area: string\n    description: string\n}\nexport class TheaterInstancePropertiesDTO {\n    mode: string\n    tags: TagTIP[]\n    areas: SimpleAreaDTO[]\n    author: string\n    version: string | number\n    description: string\n}\nexport class TagTIP{\n    tag: string\n}\nexport class ElementIntoTheaterDTO {  // goes into map in blueprint [name:string]: Module...\n    properties: ModuleInstancePropertiesDTO | TheaterInstancePropertiesDTO\n    type: string\n}\nexport class ModuleInstanceDTO {\n    properties: ModuleInstancePropertiesDTO\n    type: string\n}\nexport class TheaterInstanceDTO {\n    properties: TheaterInstancePropertiesDTO\n    type: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"components/UnderbarComponent.html":{"url":"components/UnderbarComponent.html","title":"component - UnderbarComponent","body":"\n                   \n\n\n\n\n\n  Componenti\n  \n  UnderbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/underbar/underbar.component.ts\n\n\n\n    \n        Descrizione\n    \n    \n        Componente che consente di mostrare una underbar (sottoposta) alla navbar ad elementi generici.\n\n    \n\n\n\n\n\n    Metadati\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-underbar\n            \n\n            \n                styleUrls\n                ./underbar.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./underbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Indice\n    \n        \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                itemClicked\n                            \n                        \n                    \n                \n\n                \n                    \n                        Input\n                    \n                \n                \n                    \n                        \n                            \n                                element\n                            \n                        \n                    \n                \n\n                \n                    \n                        Output\n                    \n                \n                \n                    \n                        \n                            \n                                itemSelected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Costruttore\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Definito in src/app/components/underbar/underbar.component.ts:23\n                            \n                        \n\n                \n                    \n                            Costruttore componente UnderbarComponent.\nControlla che tutti gli id siano diversi prima di procedere alla loro visualizzazione.\n\n                    \n                \n            \n        \n\n\n    \n    Input\n        \n            \n                \n                    \n                        \n                        element\n                    \n                \n                \n                    \n                        Tipo :         UnderbarElement[]\n\n                    \n                \n                        \n                            \n                                    Definito in src/app/components/underbar/underbar.component.ts:19\n                            \n                        \n                \n                    \n                        Variabile data in input che contiene gli elementi dell'underbar.\n\n                    \n                \n            \n        \n\n    \n    Output\n        \n            \n                \n                    \n                        \n                        itemSelected\n                    \n                \n                \n                    \n                        Tipo :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Definito in src/app/components/underbar/underbar.component.ts:23\n                            \n                        \n                \n                    \n                        Variabile (event) che ritorna l'elemento selezionatp\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        itemClicked\n                        \n                    \n                \n            \n            \n                \nitemClicked(event: UnderbarItem)\n                \n            \n\n\n            \n                \n                    Definito in src/app/components/underbar/underbar.component.ts:54\n                \n            \n\n\n            \n                \n                    Funzione che emette l'evento appena si seleziona un elemento.\nSee {itemSelected}\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                UnderbarItem\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Output, Input, ChangeDetectionStrategy } from '@angular/core';\nimport { UnderbarItem, UnderbarElement } from './underbarType';\n\n/**\n * Componente che consente di mostrare una underbar (sottoposta) alla navbar ad elementi generici.\n */\n@Component({\n  selector: 'app-underbar',\n  templateUrl: './underbar.component.html',\n  styleUrls: ['./underbar.component.sass'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class UnderbarComponent {\n\n  /**\n   * Variabile data in input che contiene gli elementi dell'underbar.\n   * @type {UnderbarElement}\n   */\n  @Input() element: UnderbarElement[];\n  /**\n   * Variabile (event) che ritorna l'elemento selezionatp\n   */\n  @Output() itemSelected:EventEmitter = new EventEmitter();\n\n  /**\n   * Costruttore componente UnderbarComponent.\n   * Controlla che tutti gli id siano diversi prima di procedere alla loro visualizzazione.\n   * @returns \n   */\n  constructor() {\n    if (!this.element)\n      return\n    let check = [];\n    this.element.forEach(\n      (el) => {\n        el.element.forEach(e => {\n          if (check[e.id])\n            check[e.id] = true;\n          else {\n            console.error(\"UnderbarItem [ID] duplicated\");\n            return;\n          }\n        }\n        );\n      }\n    )\n  }\n\n  /**\n   * Funzione che emette l'evento appena si seleziona un elemento.\n   * @param event \n   * @see {itemSelected}\n   */\n  itemClicked(event: UnderbarItem) {\n    this.itemSelected.emit(event);\n  }\n\n}\n\n    \n\n    \n        \n    \n    \n\n        &nbsp;\n\n        \n\n             1\">\n                \n                    \n                        \n                            \n                        \n                        \n                        \n                    \n                \n            \n\n            \n                \n                    \n                \n            \n\n            \n                \n            \n\n            \n                \n            \n\n        \n\n    \n    \n\n    \n\n    \n                \n                    ./underbar.component.sass\n                \n                \n    \n\n    \n        \n        \n            \n                Legenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento html con direttive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                      1\">                                                                                                                                                                                                                                                                                                                                                                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ComposerComponent', 'selector': 'app-composer'},{'name': 'ControlTemplate', 'selector': ''},{'name': 'DataInputComponent', 'selector': 'app-data-input'},{'name': 'DataInputV2Component', 'selector': 'app-data-input-v2'},{'name': 'DataItemComponent', 'selector': 'app-window-item'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HostComponent', 'selector': ''},{'name': 'HowToUseComponent', 'selector': 'app-how-to-use'},{'name': 'MirroringModuleInstanceComponent', 'selector': ''},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavbarElementComponent', 'selector': 'app-navbar-element'},{'name': 'NetworkComponent', 'selector': ''},{'name': 'OffcanvasComponent', 'selector': 'app-offcanvas'},{'name': 'ReteModuleComposerComponent', 'selector': 'app-rete-module-composer'},{'name': 'ReteModuleVisualizerComponent', 'selector': 'app-rete-module-visualizer'},{'name': 'ReteTheaterComposerComponent', 'selector': 'app-rete-theater-composer'},{'name': 'ReteTheaterVisualizerComponent', 'selector': 'app-rete-theater-visualizer'},{'name': 'SubnetComponent', 'selector': ''},{'name': 'TabnavComponent', 'selector': 'app-tabnav'},{'name': 'TheaterInternalServiceModuleInstanceComponent', 'selector': ''},{'name': 'TheaterModuleInstanceComponent', 'selector': ''},{'name': 'UnderbarComponent', 'selector': 'app-underbar'},{'name': 'VisualizerComponent', 'selector': 'app-displayer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UnderbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/UnderbarElement.html":{"url":"classes/UnderbarElement.html","title":"class - UnderbarElement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  UnderbarElement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/underbar/underbarType.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Funzione usata come input per la componente UnderbarComponent.\nSee {UnderbarComponent}\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                element\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        element\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         UnderbarItem[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/underbar/underbarType.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { TemplateRef } from \"@angular/core\";\n/**\n * Funzione usata come input per la componente UnderbarComponent.\n * @see {UnderbarComponent}\n */\nexport class UnderbarElement {\n    element: UnderbarItem[];\n}\n\n/**\n * Elemento singolo per l'underbar.\n * Usato anche come ritorno.\n * @see {UnderbarComponent}\n */\nexport class UnderbarItem {\n    id: string;\n    type: \"separator\" | \"template\" | \"button\";\n    button?: {\n        iconClass: string\n        tooltipText: string\n    } \n    template?: TemplateRef;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/UnderbarItem.html":{"url":"classes/UnderbarItem.html","title":"class - UnderbarItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  UnderbarItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/underbar/underbarType.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Elemento singolo per l'underbar.\nUsato anche come ritorno.\nSee {UnderbarComponent}\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                    Opzionale\n                                button\n                            \n                            \n                                id\n                            \n                            \n                                    Opzionale\n                                template\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        button\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     literal type\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/underbar/underbarType.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/underbar/underbarType.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        template\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     TemplateRef\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/underbar/underbarType.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     \"separator\" | \"template\" | \"button\"\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/underbar/underbarType.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { TemplateRef } from \"@angular/core\";\n/**\n * Funzione usata come input per la componente UnderbarComponent.\n * @see {UnderbarComponent}\n */\nexport class UnderbarElement {\n    element: UnderbarItem[];\n}\n\n/**\n * Elemento singolo per l'underbar.\n * Usato anche come ritorno.\n * @see {UnderbarComponent}\n */\nexport class UnderbarItem {\n    id: string;\n    type: \"separator\" | \"template\" | \"button\";\n    button?: {\n        iconClass: string\n        tooltipText: string\n    } \n    template?: TemplateRef;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/VirtualMachine.html":{"url":"classes/VirtualMachine.html","title":"class - VirtualMachine","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  VirtualMachine\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsExport/moduleExport.ts\n        \n\n\n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                ports\n                            \n                            \n                                virtual_machine\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        ports\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     VirtualMachinePorts[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        virtual_machine\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:65\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ModeTypeExport, ModuleTypeExport, NetworkTypeExport, NodeTypeExport, PortTypeExport, RelationshipsTypeExport, SubnetTypeExport, ToscaDefinitionType } from \"./TypeExport\"\n\n\n/**\n * Classe utilizzata per l'export. \n * Contiene le informazioni generali per il modulo che devono esserci nello standard Tosca.\n */\nexport class ModuleExport {\n    tosca_definitions_version: ToscaDefinitionType\n    description: string\n    imports: string[]\n    node_templates: { [name: string]: ModuleSimpleData | NodeSimpleData | PortSimpleData | NetworkSimpleData | SubnetSimpleData }\n    dsl_definition: any | null; //future\n    capabilites: any | null //future\n    outputs: any | null //future\n}\n\n\nexport class ModuleSimpleData {\n    type: ModuleTypeExport\n    properties: PropertiesMSD\n}\nexport class PropertiesMSD {\n    mode: ModeTypeExport\n    description: string\n    version: string | number\n    constraints: ConstraintsMSD\n    interface_networks: {\n        providers: InterfaceNetworksProvider[]\n        consumers: InterfaceNetworksConsumer[]\n    }\n    virtual_machines: VirtualMachine[]\n}\nexport class ConstraintsMSD {\n    interface_constraints: InterfaceConstraints[]\n    module_constraints: ModuleConstraints[]\n    network_constraints: NetworkConstraints[]\n}\nexport class InterfaceConstraints {\n    local_interface: string\n    multiple_mode: boolean = false //future\n    module_name: string\n    compatibility: string = \"1.0\" // future\n    remote_interface: string\n}\nexport class ModuleConstraints {\n}\nexport class NetworkConstraints {\n}\n\nexport class InterfaceNetworksProvider {\n    interface: string\n    network: string\n    tag: string\n    subnets: SubnetExport[]\n}\nexport class InterfaceNetworksConsumer {\n    interface: string\n    network: string\n    tag: string\n    subnets: SubnetExport[]\n}\n\nexport class VirtualMachine {\n    virtual_machine: string\n    ports: VirtualMachinePorts[]\n}\nexport class VirtualMachinePorts {\n    port: string\n    network: string\n    subnets: SubnetExport[]\n}\n\nexport class SubnetExport {\n    subnet: string;\n}\n\nexport class NodeSimpleData {\n    type: NodeTypeExport\n    properties: any | null // future\n    interfaces: any | null // future\n    relationships: RelationshipsExport[]\n}\n\nexport class RelationshipsExport {\n    type: RelationshipsTypeExport\n    target: string\n}\n\nexport class PortSimpleData {\n    type: PortTypeExport\n    relationships: RelationshipsExport[]\n}\n\nexport class NetworkSimpleData {\n    type: NetworkTypeExport\n    properties: PropertiesNSD\n}\nexport class PropertiesNSD {\n    openstack_config?: any | null // future\n    use_external_resource?: boolean | null // future\n    resource_id?: any | null // future\n}\n\n\nexport class SubnetSimpleData {\n    type: SubnetTypeExport\n    relationships: RelationshipsExport[]\n    properties: PropertiesSSD\n}\nexport class PropertiesSSD {\n    subnet?: {\n        ip_version: string | number\n        cidr: string\n        enable_dhcp: boolean\n        gateway_ip?: any | null // future\n    }\n    openstack_config?: any | null // future\n    use_external_resource?: boolean | null // future\n    resource_id?: any | null // future\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/VirtualMachinePorts.html":{"url":"classes/VirtualMachinePorts.html","title":"class - VirtualMachinePorts","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  VirtualMachinePorts\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsExport/moduleExport.ts\n        \n\n\n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                network\n                            \n                            \n                                port\n                            \n                            \n                                subnets\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        network\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        port\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subnets\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         SubnetExport[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:71\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ModeTypeExport, ModuleTypeExport, NetworkTypeExport, NodeTypeExport, PortTypeExport, RelationshipsTypeExport, SubnetTypeExport, ToscaDefinitionType } from \"./TypeExport\"\n\n\n/**\n * Classe utilizzata per l'export. \n * Contiene le informazioni generali per il modulo che devono esserci nello standard Tosca.\n */\nexport class ModuleExport {\n    tosca_definitions_version: ToscaDefinitionType\n    description: string\n    imports: string[]\n    node_templates: { [name: string]: ModuleSimpleData | NodeSimpleData | PortSimpleData | NetworkSimpleData | SubnetSimpleData }\n    dsl_definition: any | null; //future\n    capabilites: any | null //future\n    outputs: any | null //future\n}\n\n\nexport class ModuleSimpleData {\n    type: ModuleTypeExport\n    properties: PropertiesMSD\n}\nexport class PropertiesMSD {\n    mode: ModeTypeExport\n    description: string\n    version: string | number\n    constraints: ConstraintsMSD\n    interface_networks: {\n        providers: InterfaceNetworksProvider[]\n        consumers: InterfaceNetworksConsumer[]\n    }\n    virtual_machines: VirtualMachine[]\n}\nexport class ConstraintsMSD {\n    interface_constraints: InterfaceConstraints[]\n    module_constraints: ModuleConstraints[]\n    network_constraints: NetworkConstraints[]\n}\nexport class InterfaceConstraints {\n    local_interface: string\n    multiple_mode: boolean = false //future\n    module_name: string\n    compatibility: string = \"1.0\" // future\n    remote_interface: string\n}\nexport class ModuleConstraints {\n}\nexport class NetworkConstraints {\n}\n\nexport class InterfaceNetworksProvider {\n    interface: string\n    network: string\n    tag: string\n    subnets: SubnetExport[]\n}\nexport class InterfaceNetworksConsumer {\n    interface: string\n    network: string\n    tag: string\n    subnets: SubnetExport[]\n}\n\nexport class VirtualMachine {\n    virtual_machine: string\n    ports: VirtualMachinePorts[]\n}\nexport class VirtualMachinePorts {\n    port: string\n    network: string\n    subnets: SubnetExport[]\n}\n\nexport class SubnetExport {\n    subnet: string;\n}\n\nexport class NodeSimpleData {\n    type: NodeTypeExport\n    properties: any | null // future\n    interfaces: any | null // future\n    relationships: RelationshipsExport[]\n}\n\nexport class RelationshipsExport {\n    type: RelationshipsTypeExport\n    target: string\n}\n\nexport class PortSimpleData {\n    type: PortTypeExport\n    relationships: RelationshipsExport[]\n}\n\nexport class NetworkSimpleData {\n    type: NetworkTypeExport\n    properties: PropertiesNSD\n}\nexport class PropertiesNSD {\n    openstack_config?: any | null // future\n    use_external_resource?: boolean | null // future\n    resource_id?: any | null // future\n}\n\n\nexport class SubnetSimpleData {\n    type: SubnetTypeExport\n    relationships: RelationshipsExport[]\n    properties: PropertiesSSD\n}\nexport class PropertiesSSD {\n    subnet?: {\n        ip_version: string | number\n        cidr: string\n        enable_dhcp: boolean\n        gateway_ip?: any | null // future\n    }\n    openstack_config?: any | null // future\n    use_external_resource?: boolean | null // future\n    resource_id?: any | null // future\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/VirtualizationEnvironmentTypeDTO.html":{"url":"classes/VirtualizationEnvironmentTypeDTO.html","title":"class - VirtualizationEnvironmentTypeDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  VirtualizationEnvironmentTypeDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsDTO/falvorDTO.ts\n        \n\n\n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                isEnabled\n                            \n                            \n                                name\n                            \n                            \n                                nameAlias\n                            \n                            \n                                supportMachineId\n                            \n                            \n                                uuid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/falvorDTO.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/falvorDTO.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isEnabled\n                        \n                    \n                \n            \n                    \n                        \n                                Definito in src/app/services/modelsDTO/falvorDTO.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/falvorDTO.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nameAlias\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/falvorDTO.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        supportMachineId\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/falvorDTO.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uuid\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/falvorDTO.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class FlavorBasicInfo {\n    cpu: number | string;\n    disk: number | string;\n    ram: number | string;\n}\n\nexport class VirtualizationEnvironmentTypeDTO {\n    description: string\n    id: number\n    isEnabled: true\n    name: string\n    nameAlias: string\n    supportMachineId: number\n    uuid: string\n}\n\nexport class FlavorDTO extends FlavorBasicInfo {\n    name: string;\n    detailJson: {};\n    id: number | string;\n    uuid: string;\n    virtualizationEnvironmentType: VirtualizationEnvironmentTypeDTO;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"components/VisualizerComponent.html":{"url":"components/VisualizerComponent.html","title":"component - VisualizerComponent","body":"\n                   \n\n\n\n\n\n  Componenti\n  \n  VisualizerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/visualizer-system/visualizer/visualizer.component.ts\n\n\n\n\n\n    \n        Implementa\n    \n    \n                    OnInit\n    \n\n\n\n    Metadati\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-displayer\n            \n\n            \n                styleUrls\n                ./visualizer.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./visualizer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                active\n                            \n                            \n                                dataFromRouter\n                            \n                            \n                                    Protected\n                                hasproblem\n                            \n                            \n                                    Protected\n                                id\n                            \n                            \n                                    Protected\n                                module\n                            \n                            \n                                    Protected\n                                MODULE\n                            \n                            \n                                    Protected\n                                theater\n                            \n                            \n                                    Protected\n                                THEATER\n                            \n                            \n                                    Protected\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                gohome\n                            \n                            \n                                    Async\n                                initMODULE\n                            \n                            \n                                    Async\n                                initTHEATER\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Costruttore\n        \n            \n                \n                    \nconstructor(router: Router, parseService: ParseService, spinnerService: SpinnerService)\n                    \n                \n                        \n                            \n                                Definito in src/app/visualizer-system/visualizer/visualizer.component.ts:59\n                            \n                        \n\n                \n                    \n                            Costruttore di VisualizerComponent.\nSi occupa di prendere i dati di route url e valorizzare le rispettive variabili.\n\n                            \n                                    Parametri :\n                                    \n                                        \n                                            \n                                                Nome\n                                                    Tipo\n                                                Opzionale\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parseService\n                                                  \n                                                        \n                                                                        ParseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        spinnerService\n                                                  \n                                                        \n                                                                        SpinnerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        gohome\n                        \n                    \n                \n            \n            \n                \n                    \n                    gohome()\n                \n            \n\n\n            \n                \n                    Definito in src/app/visualizer-system/visualizer/visualizer.component.ts:156\n                \n            \n\n\n            \n                \n                    Funzione che esegue una redirezione alla pagine home\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        initMODULE\n                        \n                    \n                \n            \n            \n                \n                    \n                    initMODULE()\n                \n            \n\n\n            \n                \n                    Definito in src/app/visualizer-system/visualizer/visualizer.component.ts:110\n                \n            \n\n\n            \n                \n                    Funzione che esegue tutte le funzioni di inizializzazione, reperimento e filtraggio dati da poter essere passati alla componente di TheaterVisualizer.\nEsegue anche le attività di spinner-loading.\nSee {ReteModuleComposer}\nSee {SpinnerService}\nSee {parseService}\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        initTHEATER\n                        \n                    \n                \n            \n            \n                \n                    \n                    initTHEATER()\n                \n            \n\n\n            \n                \n                    Definito in src/app/visualizer-system/visualizer/visualizer.component.ts:135\n                \n            \n\n\n            \n                \n                    Funzione che esegue tutte le funzioni di inizializzazione, reperimento e filtraggio dati da poter essere passati alla componente di TheaterVisualizer.\nEsegue anche le attività di spinner-loading.\nSee {ReteTheaterComposer}\nSee {SpinnerService}\nSee {parseService}\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Definito in src/app/visualizer-system/visualizer/visualizer.component.ts:90\n                \n            \n\n\n            \n                \n                    Funzione richiamata all'inizializzazione della componente.\nRichiama le funzioni adeguate in base al tipo di componente Modulo o Teatro scelto per la visualizzazione.\nSee {initMODULE}\nSee {initTHEATER}\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        active\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                \n                    \n                        Valore predefinito : false\n                    \n                \n                    \n                        \n                                Definito in src/app/visualizer-system/visualizer/visualizer.component.ts:45\n                        \n                    \n\n            \n                \n                    Variabile che indica lo stato di reperimento dei dati prima di visualizzare le componenti di costruzione\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataFromRouter\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         DataRouteVisualizer\n\n                    \n                \n                    \n                        \n                                Definito in src/app/visualizer-system/visualizer/visualizer.component.ts:23\n                        \n                    \n\n            \n                \n                    Variabile che ha come scopo prendere i dati passati come url-parameters\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        hasproblem\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                \n                    \n                        Valore predefinito : false\n                    \n                \n                    \n                        \n                                Definito in src/app/visualizer-system/visualizer/visualizer.component.ts:38\n                        \n                    \n\n            \n                \n                    Variabile che viene valorizzata a true se si è verificato un errore.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/visualizer-system/visualizer/visualizer.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ModuleApplication\n\n                    \n                \n                    \n                        \n                                Definito in src/app/visualizer-system/visualizer/visualizer.component.ts:52\n                        \n                    \n\n            \n                \n                    Variabile che memorizza il modulo ricavato dal parser.\nSee {parseService}\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        MODULE\n                        \n                    \n                \n            \n                \n                    \n                        Valore predefinito : SubjectType.MODULE\n                    \n                \n                    \n                        \n                                Definito in src/app/visualizer-system/visualizer/visualizer.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        theater\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         TheaterApplication\n\n                    \n                \n                    \n                        \n                                Definito in src/app/visualizer-system/visualizer/visualizer.component.ts:59\n                        \n                    \n\n            \n                \n                    Variabile che memorizza il modulo ricavato dal parser.\nSee {parseService}\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        THEATER\n                        \n                    \n                \n            \n                \n                    \n                        Valore predefinito : SubjectType.THEATER\n                    \n                \n                    \n                        \n                                Definito in src/app/visualizer-system/visualizer/visualizer.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         SubjectType\n\n                    \n                \n                    \n                        \n                                Definito in src/app/visualizer-system/visualizer/visualizer.component.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { from } from 'rxjs';\nimport { DataRouteVisualizer, SubjectType } from 'src/app/models/appType';\nimport { ParseService } from 'src/app/services/application/parse/parse.service';\nimport { SpinnerService } from 'src/app/services/application/spinner/spinner.service';\nimport { ModuleApplication, TheaterApplication } from 'src/app/services/modelsApplication/applicationModels';\n\n\n@Component({\n  selector: 'app-displayer',\n  templateUrl: './visualizer.component.html',\n  styleUrls: ['./visualizer.component.sass'],\n})\n\nexport class VisualizerComponent implements OnInit {\n\n  /**\n   * Variabile che ha come scopo prendere i dati passati come url-parameters\n   * @type {DataRouteComposer} \n   */\n  dataFromRouter: DataRouteVisualizer;\n  // variabili istanziate come valori proveniente dalla dataFormRouter\n  protected id: string | number;\n  protected type: SubjectType;\n\n  // type var\n  protected MODULE = SubjectType.MODULE;\n  protected THEATER = SubjectType.THEATER;\n\n\n  /**\n   * Variabile che viene valorizzata a true se si è verificato un errore.\n   * @type {boolean}\n   * @default false\n   */\n  protected hasproblem: boolean = false;\n\n  /**\n   * Variabile che indica lo stato di reperimento dei dati prima di visualizzare le componenti di costruzione\n   * @type  {boolean}\n   * @default false\n   */\n  protected active: boolean = false;\n\n  /**\n   * Variabile che memorizza il modulo ricavato dal parser.\n   * @type {ModuleApplication}\n   * @see {parseService}\n   */\n  protected module: ModuleApplication;\n\n  /**\n   * Variabile che memorizza il modulo ricavato dal parser.\n   * @type {TheaterApplication}\n   * @see {parseService}\n   */\n  protected theater: TheaterApplication;\n\n  /**\n   * Costruttore di VisualizerComponent.\n   * Si occupa di prendere i dati di route url e valorizzare le rispettive variabili.\n   * @param router \n   * @param parseService \n   * @param spinnerService \n   */\n  constructor(\n    private router: Router,\n    private parseService: ParseService,\n    private spinnerService: SpinnerService,\n  ) {\n    this.dataFromRouter = this.router.getCurrentNavigation().extras.state as DataRouteVisualizer\n    if (this.dataFromRouter) {\n      this.id = this.dataFromRouter.id;\n      this.type = this.dataFromRouter.type;\n    }\n    else {\n      this.hasproblem = true;\n    }\n\n  }\n\n  /**\n   * Funzione richiamata all'inizializzazione della componente.\n   * Richiama le funzioni adeguate in base al tipo di componente Modulo o Teatro scelto per la visualizzazione.\n   * @see {initMODULE}\n   * @see {initTHEATER}\n   */\n  async ngOnInit() {\n    if (this.type === this.MODULE) {\n      this.initMODULE();\n    }\n    else if (this.type === this.THEATER) {\n      this.initTHEATER();\n    }\n    else {\n      this.hasproblem = true;\n    }\n  }\n\n\n  /**\n   * Funzione che esegue tutte le funzioni di inizializzazione, reperimento e filtraggio dati da poter essere passati alla componente di TheaterVisualizer.\n   * Esegue anche le attività di spinner-loading.\n   * @see {ReteModuleComposer}\n   * @see {SpinnerService}\n   * @see {parseService}\n   */\n  async initMODULE() {\n    this.spinnerService.setSpinner(true, \"Loading module canvas\");\n    from(\n      this.parseService.parseModuleForModuleVisualizer(this.id ? this.id : 1459)\n    )\n      .subscribe(el => {\n        if (el) {\n          this.module = el\n          this.spinnerService.setSpinner(false);\n          this.active = true;\n        }\n        else {\n          this.spinnerService.setSpinner(false);\n          this.hasproblem = true;\n        }\n      });\n  }\n\n  /**\n   * Funzione che esegue tutte le funzioni di inizializzazione, reperimento e filtraggio dati da poter essere passati alla componente di TheaterVisualizer.\n   * Esegue anche le attività di spinner-loading.\n   * @see {ReteTheaterComposer}\n   * @see {SpinnerService}\n   * @see {parseService}\n   */\n  async initTHEATER() {\n    this.spinnerService.setSpinner(true, \"Loading theater canvas\");\n    from(\n      this.parseService.parseTheaterForTheaterVisualizer(this.id ? this.id : 502)\n    )\n      .subscribe(el => {\n        if (el) {\n          this.theater = el\n          this.spinnerService.setSpinner(false);\n          this.active = true;\n        }\n        else {\n          this.spinnerService.setSpinner(false);\n          this.hasproblem = true;\n        }\n      });\n  }\n\n  /**\n   * Funzione che esegue una redirezione alla pagine home\n   */\n  public gohome() {\n    this.router.navigate(['/home']);\n  }\n\n}\n\n\n\n    \n\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        \n            \n                \n                 A Problem occurred when loading {{type}} with id: {{id}} \n                 A Problem occurred when loading visualizer system \n            \n            \n                \n                     Go home \n                \n            \n        \n    \n\n    \n\n    \n                \n                    ./visualizer.component.sass\n                \n                .oh-imp\n    overflow: hidden !important\n    \n\n    \n        \n        \n            \n                Legenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento html con direttive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                         A Problem occurred when loading {{type}} with id: {{id}}                  A Problem occurred when loading visualizer system                                                              Go home                                         '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ComposerComponent', 'selector': 'app-composer'},{'name': 'ControlTemplate', 'selector': ''},{'name': 'DataInputComponent', 'selector': 'app-data-input'},{'name': 'DataInputV2Component', 'selector': 'app-data-input-v2'},{'name': 'DataItemComponent', 'selector': 'app-window-item'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HostComponent', 'selector': ''},{'name': 'HowToUseComponent', 'selector': 'app-how-to-use'},{'name': 'MirroringModuleInstanceComponent', 'selector': ''},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavbarElementComponent', 'selector': 'app-navbar-element'},{'name': 'NetworkComponent', 'selector': ''},{'name': 'OffcanvasComponent', 'selector': 'app-offcanvas'},{'name': 'ReteModuleComposerComponent', 'selector': 'app-rete-module-composer'},{'name': 'ReteModuleVisualizerComponent', 'selector': 'app-rete-module-visualizer'},{'name': 'ReteTheaterComposerComponent', 'selector': 'app-rete-theater-composer'},{'name': 'ReteTheaterVisualizerComponent', 'selector': 'app-rete-theater-visualizer'},{'name': 'SubnetComponent', 'selector': ''},{'name': 'TabnavComponent', 'selector': 'app-tabnav'},{'name': 'TheaterInternalServiceModuleInstanceComponent', 'selector': ''},{'name': 'TheaterModuleInstanceComponent', 'selector': ''},{'name': 'UnderbarComponent', 'selector': 'app-underbar'},{'name': 'VisualizerComponent', 'selector': 'app-displayer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'VisualizerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/_Control.html":{"url":"classes/_Control.html","title":"class - _Control","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  _Control\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/rete-settings/controls/control.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Elemento indica il control da utilizzare dai vari tipi di nodi/moduli\n\n            \n\n            \n                Extends\n            \n            \n                    Control\n            \n\n            \n                Implementa\n            \n            \n                        AngularControl\n            \n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                component\n                            \n                            \n                                    Public\n                                emitter\n                            \n                            \n                                    Public\n                                key\n                            \n                            \n                                props\n                            \n                        \n                    \n                \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                onChange\n                            \n                            \n                                setValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Costruttore\n        \n            \n                \n                    \nconstructor(emitter: NodeEditor, key: string, readonly)\n                    \n                \n                        \n                            \n                                Definito in src/app/rete-settings/controls/control.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parametri :\n                                    \n                                        \n                                            \n                                                Nome\n                                                    Tipo\n                                                Opzionale\n                                            \n                                        \n                                        \n                                                \n                                                        emitter\n                                                  \n                                                        \n                                                                    NodeEditor\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        key\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        readonly\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        component\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         Type\n\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/controls/control.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        emitter\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     NodeEditor\n\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/controls/control.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/controls/control.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        props\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     literal type\n\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/controls/control.ts:32\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        onChange\n                        \n                    \n                \n            \n            \n                \nonChange(val: number)\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/controls/control.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setValue\n                        \n                    \n                \n            \n            \n                \nsetValue(val: number)\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/controls/control.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Component, Input, Type } from '@angular/core';\nimport { Control, NodeEditor } from 'rete';\nimport { AngularControl } from 'rete-angular-render-plugin';\n\n\n/**\n * Componente che si occpa del control per i nodi la libreria retejs\n */\n@Component({\n  templateUrl: './control.html',\n  styleUrls:  ['./control.css'],\n})\nexport class ControlTemplate {\n\n  @Input() value!: number;\n  @Input() readonly!: boolean;\n  @Input() change!: Function;\n  @Input() mounted!: Function;\n\n  ngOnInit() {\n    this.mounted();\n  }\n}\n\n\n/**\n * Elemento indica il control da utilizzare dai vari tipi di nodi/moduli \n */\nexport class _Control extends Control implements AngularControl {\n  \n  component: Type\n  props: { [key: string]: unknown }\n\n  constructor(public emitter: NodeEditor, public key: string, readonly = false) {\n    \n    super(key);\n\n    this.component = ControlTemplate;\n    this.props = {\n      readonly,\n      change: (v: undefined) => this.onChange(v),\n      value: 0,\n      mounted: () => {\n        this.setValue(+(this.getData(key) as any) || 0)\n      },\n  };\n    \n  }\n\n  onChange(val: number) {\n    this.setValue(val);\n    this.emitter.trigger('process');\n  }\n\n  setValue(val: number) {\n    this.props.value = +val;\n    this.putData(this.key, this.props.value)\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~9.1.12\n        \n            @angular/common : ~9.1.12\n        \n            @angular/compiler : ~9.1.12\n        \n            @angular/core : ~9.1.12\n        \n            @angular/elements : ^9.1.12\n        \n            @angular/forms : ~9.1.12\n        \n            @angular/localize : ~9.1.12\n        \n            @angular/platform-browser : ~9.1.12\n        \n            @angular/platform-browser-dynamic : ~9.1.12\n        \n            @angular/router : ~9.1.12\n        \n            @compodoc/compodoc : ^1.1.19\n        \n            @popperjs/core : ^2.10.2\n        \n            ajv : ^6.12.6\n        \n            angular-popper : ^2.0.1\n        \n            bootstrap : ^5.1.3\n        \n            bootstrap-icons : ^1.8.1\n        \n            jquery : ^3.6.0\n        \n            json-to-pretty-yaml : ^1.2.2\n        \n            keycloak-angular : ^8.0.1\n        \n            keycloak-js : ^11.0.2\n        \n            ngx-color-picker : ^12.0.1\n        \n            ngx-spinner : ^9.0.1\n        \n            ngx-typeahead : ^9.2.0\n        \n            popper : ^1.0.1\n        \n            popper.js : ^1.14.0\n        \n            qs : ^6.10.3\n        \n            rete : ^1.4.1\n        \n            rete-angular-render-plugin : ^0.2.0-rc.2\n        \n            rete-area-plugin : ^0.2.1\n        \n            rete-auto-arrange-plugin : ^0.5.0-rc.1\n        \n            rete-cli : ^0.6.1-rc2\n        \n            rete-connection-path-plugin : ^0.3.1\n        \n            rete-connection-plugin : ^0.8.3\n        \n            rete-context-menu-plugin : ^0.6.0\n        \n            rete-dock-plugin : ^0.2.1\n        \n            rete-history-plugin : ^0.2.2\n        \n            rete-minimap-plugin : ^0.3.0\n        \n            rete-readonly-plugin : ^0.4.1\n        \n            rxjs : ~6.4.0\n        \n            tslib : ^1.9.0\n        \n            zone.js : ~0.9.1\n    \n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Varie\n  Enumerations\n\n\n\n    Indice\n    \n        \n            \n                \n                    \n                        \n                            ComposerVisualizerType   (src/.../appType.ts)\n                        \n                        \n                            EnumModuleType   (src/.../appType.ts)\n                        \n                        \n                            EnumModuleTypeDescription   (src/.../appType.ts)\n                        \n                        \n                            EnumNodeType   (src/.../appType.ts)\n                        \n                        \n                            EnumNodeTypeDescription   (src/.../appType.ts)\n                        \n                        \n                            HostIcon   (src/.../styleIconConfig.ts)\n                        \n                        \n                            IndexModuleComponent   (src/.../export-rete-modules.ts)\n                        \n                        \n                            IndexNodeComponent   (src/.../export-rete-nodes.ts)\n                        \n                        \n                            InterfacePortType   (src/.../appType.ts)\n                        \n                        \n                            IpVersionType   (src/.../appType.ts)\n                        \n                        \n                            MirroringModuleInstance_ICON   (src/.../styleIconConfig.ts)\n                        \n                        \n                            ModeTypeExport   (src/.../TypeExport.ts)\n                        \n                        \n                            ModuleType1   (src/.../appType.ts)\n                        \n                        \n                            ModuleType2   (src/.../appType.ts)\n                        \n                        \n                            ModuleTypeExport   (src/.../TypeExport.ts)\n                        \n                        \n                            ModuleTypeLink   (src/.../appType.ts)\n                        \n                        \n                            ModuleTypeTheater   (src/.../appType.ts)\n                        \n                        \n                            NetworkIcon   (src/.../styleIconConfig.ts)\n                        \n                        \n                            NetworkTypeExport   (src/.../TypeExport.ts)\n                        \n                        \n                            NodePortType   (src/.../appType.ts)\n                        \n                        \n                            NodeTypeExport   (src/.../TypeExport.ts)\n                        \n                        \n                            PortTypeExport   (src/.../TypeExport.ts)\n                        \n                        \n                            RelationshipsTypeExport   (src/.../TypeExport.ts)\n                        \n                        \n                            StaticValue   (src/.../appType.ts)\n                        \n                        \n                            SubjectType   (src/.../appType.ts)\n                        \n                        \n                            SubnetIcon   (src/.../styleIconConfig.ts)\n                        \n                        \n                            SubnetTypeExport   (src/.../TypeExport.ts)\n                        \n                        \n                            TheaterInternalServiceModuleInstance_ICON   (src/.../styleIconConfig.ts)\n                        \n                        \n                            TheaterModuleInstance_ICON   (src/.../styleIconConfig.ts)\n                        \n                        \n                            TheaterTypeExport   (src/.../TypeExport.ts)\n                        \n                        \n                            ToscaDefinitionType   (src/.../TypeExport.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/models/appType.ts\n    \n        \n            \n                \n                    \n                        \n                        ComposerVisualizerType\n                    \n                \n                    \n                        \n                            Enum per eseguire le operazioni in base al tipo\n\n                        \n                    \n                        \n                            \n                                 COMPOSER\n                            \n                        \n                        \n                            \n                                Valori : Composer\n                            \n                        \n                        \n                            \n                                 VISUALIZER\n                            \n                        \n                        \n                            \n                                Valori : Visualizer\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        EnumModuleType\n                    \n                \n                    \n                        \n                            Enum per indicare i tipi di moduli nel teatro.\n\n                        \n                    \n                        \n                            \n                                 TheaterModuleInstance\n                            \n                        \n                        \n                            \n                                Valori : TheaterModuleInstance\n                            \n                        \n                        \n                            \n                                 TheaterInternalServiceModuleInstance\n                            \n                        \n                        \n                            \n                                Valori : TheaterInternalServiceModuleInstance\n                            \n                        \n                        \n                            \n                                 MirroringModuleInstance\n                            \n                        \n                        \n                            \n                                Valori : MirroringModuleInstance\n                            \n                        \n                        \n                            \n                                 VirtualServerModuleInstance\n                            \n                        \n                        \n                            \n                                Valori : VirtualServerModuleInstance\n                            \n                        \n                        \n                            \n                                 ExternalVirtualMachine\n                            \n                        \n                        \n                            \n                                Valori : ExternalVirtualMachine\n                            \n                        \n                        \n                            \n                                 AutomaticSystem\n                            \n                        \n                        \n                            \n                                Valori : AutomaticSystem\n                            \n                        \n                        \n                            \n                                 Border\n                            \n                        \n                        \n                            \n                                Valori : Border\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        EnumModuleTypeDescription\n                    \n                \n                    \n                        \n                            Enum per l'indicazione testuale descrittiva dei tipi di modulo nel teatro.\n\n                        \n                    \n                        \n                            \n                                 TheaterModuleInstance\n                            \n                        \n                        \n                            \n                                Valori : Module\n                            \n                        \n                        \n                            \n                                 TheaterInternalServiceModuleInstance\n                            \n                        \n                        \n                            \n                                Valori : Internal Service\n                            \n                        \n                        \n                            \n                                 MirroringModuleInstance\n                            \n                        \n                        \n                            \n                                Valori : Mirroring Module\n                            \n                        \n                        \n                            \n                                 VirtualServerModuleInstance\n                            \n                        \n                        \n                            \n                                Valori : Virtual Server\n                            \n                        \n                        \n                            \n                                 ExternalVirtualMachine\n                            \n                        \n                        \n                            \n                                Valori : External Virtual Machine\n                            \n                        \n                        \n                            \n                                 AutomaticSystem\n                            \n                        \n                        \n                            \n                                Valori : Automatic System\n                            \n                        \n                        \n                            \n                                 Border\n                            \n                        \n                        \n                            \n                                Valori : Border\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        EnumNodeType\n                    \n                \n                    \n                        \n                            Enum per indicare i tipi di nodi nel modulo.\n\n                        \n                    \n                        \n                            \n                                 Host\n                            \n                        \n                        \n                            \n                                Valori : Host\n                            \n                        \n                        \n                            \n                                 Subnet\n                            \n                        \n                        \n                            \n                                Valori : Subnet\n                            \n                        \n                        \n                            \n                                 Network\n                            \n                        \n                        \n                            \n                                Valori : Network\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        EnumNodeTypeDescription\n                    \n                \n                    \n                        \n                            Enum per l'indicazione testuale descrittiva dei tipi di nodi nel modulo.\n\n                        \n                    \n                        \n                            \n                                 Host\n                            \n                        \n                        \n                            \n                                Valori : Nodo Host\n                            \n                        \n                        \n                            \n                                 Subnet\n                            \n                        \n                        \n                            \n                                Valori : Nodo Subnet\n                            \n                        \n                        \n                            \n                                 Network\n                            \n                        \n                        \n                            \n                                Valori : Nodo Network\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        InterfacePortType\n                    \n                \n                    \n                        \n                            Enum per indicare il tipo di interfaccia\n\n                        \n                    \n                        \n                            \n                                 CONSUMER\n                            \n                        \n                        \n                            \n                                Valori : CONSUMER\n                            \n                        \n                        \n                            \n                                 PRODUCER\n                            \n                        \n                        \n                            \n                                Valori : PRODUCER\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        IpVersionType\n                    \n                \n                    \n                        \n                            Enum per indicare la versione dell'ip\n\n                        \n                    \n                        \n                            \n                                 FOUR\n                            \n                        \n                        \n                            \n                                Valori : 4\n                            \n                        \n                        \n                            \n                                 SIXSTEEN\n                            \n                        \n                        \n                            \n                                Valori : 16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ModuleType1\n                    \n                \n                    \n                        \n                            Rappresentazione inversa di @see {ModuleTypeTheater}\n\n                        \n                    \n                        \n                            \n                                 sysman.creo.nodes.TheaterModuleInstance\n                            \n                        \n                        \n                            \n                                Valori : TheaterModuleInstance\n                            \n                        \n                        \n                            \n                                 sysman.creo.nodes.MirroringModuleInstance\n                            \n                        \n                        \n                            \n                                Valori : MirroringModuleInstance\n                            \n                        \n                        \n                            \n                                 sysman.creo.nodes.TheaterInternalServiceModuleInstance\n                            \n                        \n                        \n                            \n                                Valori : TheaterInternalServiceModuleInstance\n                            \n                        \n                        \n                            \n                                 sysman.creo.nodes.VirtualServerModuleInstance\n                            \n                        \n                        \n                            \n                                Valori : VirtualServerModuleInstance\n                            \n                        \n                        \n                            \n                                 sysman.creo.nodes.ExternalVirtualMachine\n                            \n                        \n                        \n                            \n                                Valori : ExternalVirtualMachine\n                            \n                        \n                        \n                            \n                                 sysman.creo.nodes.AutomaticSystem\n                            \n                        \n                        \n                            \n                                Valori : AutomaticSystem\n                            \n                        \n                        \n                            \n                                 sysman.creo.nodes.Border\n                            \n                        \n                        \n                            \n                                Valori : Border\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ModuleType2\n                    \n                \n                    \n                        \n                            Rappresentazione inversa di @see {ModuleTypeLink}\n\n                        \n                    \n                        \n                            \n                                 THEATRE\n                            \n                        \n                        \n                            \n                                Valori : TheaterModuleInstance\n                            \n                        \n                        \n                            \n                                 MIRRORING\n                            \n                        \n                        \n                            \n                                Valori : MirroringModuleInstance\n                            \n                        \n                        \n                            \n                                 INTERNAL_THEATRE_SERVICE\n                            \n                        \n                        \n                            \n                                Valori : TheaterInternalServiceModuleInstance\n                            \n                        \n                        \n                            \n                                 VIRTUAL_SERVER\n                            \n                        \n                        \n                            \n                                Valori : VirtualServerModuleInstance\n                            \n                        \n                        \n                            \n                                 EXTERNAL_VIRTUAL_MACHINE\n                            \n                        \n                        \n                            \n                                Valori : ExternalVirtualMachine\n                            \n                        \n                        \n                            \n                                 AUTOMATIC_SYSTEM\n                            \n                        \n                        \n                            \n                                Valori : AutomaticSystem\n                            \n                        \n                        \n                            \n                                 BORDER\n                            \n                        \n                        \n                            \n                                Valori : Border\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ModuleTypeLink\n                    \n                \n                    \n                        \n                            Enum che restituisce delle proprietà, espresse in termini di variabili indicatrici dei moduli.\nIndica il tipo di un modulo e la sua altra indicazione in altri tipi di dati reperiti. (api-restituzione moduli da chiamata apposita)\n\n                        \n                    \n                        \n                            \n                                 TheaterModuleInstance\n                            \n                        \n                        \n                            \n                                Valori : THEATER\n                            \n                        \n                        \n                            \n                                 MirroringModuleInstance\n                            \n                        \n                        \n                            \n                                Valori : MIRRORING\n                            \n                        \n                        \n                            \n                                 TheaterInternalServiceModuleInstance\n                            \n                        \n                        \n                            \n                                Valori : INTERNAL_THEATRE_SERVICE\n                            \n                        \n                        \n                            \n                                 VirtualServerModuleInstance\n                            \n                        \n                        \n                            \n                                Valori : VIRTUAL_SERVER\n                            \n                        \n                        \n                            \n                                 ExternalVirtualMachine\n                            \n                        \n                        \n                            \n                                Valori : EXTERNAL_VIRTUAL_MACHINE\n                            \n                        \n                        \n                            \n                                 AutomaticSystem\n                            \n                        \n                        \n                            \n                                Valori : AUTOMATIC_SYSTEM\n                            \n                        \n                        \n                            \n                                 Border\n                            \n                        \n                        \n                            \n                                Valori : BORDER\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ModuleTypeTheater\n                    \n                \n                    \n                        \n                            Enum che restituisce delle proprietà, espresse in termini di variabili indicatrici dei moduli.\nIndica il tipo di un modulo e la sua rappresentazione. (api-restituzione moduli da teatro)\n\n                        \n                    \n                        \n                            \n                                 TheaterModuleInstance\n                            \n                        \n                        \n                            \n                                Valori : sysman.creo.nodes.TheaterModuleInstance\n                            \n                        \n                        \n                            \n                                 MirroringModuleInstance\n                            \n                        \n                        \n                            \n                                Valori : sysman.creo.nodes.MirroringModuleInstance\n                            \n                        \n                        \n                            \n                                 TheaterInternalServiceModuleInstance\n                            \n                        \n                        \n                            \n                                Valori : sysman.creo.nodes.TheaterInternalServiceModuleInstance\n                            \n                        \n                        \n                            \n                                 VirtualServerModuleInstance\n                            \n                        \n                        \n                            \n                                Valori : sysman.creo.nodes.VirtualServerModuleInstance\n                            \n                        \n                        \n                            \n                                 ExternalVirtualMachine\n                            \n                        \n                        \n                            \n                                Valori : sysman.creo.nodes.ExternalVirtualMachine\n                            \n                        \n                        \n                            \n                                 AutomaticSystem\n                            \n                        \n                        \n                            \n                                Valori : sysman.creo.nodes.AutomaticSystem\n                            \n                        \n                        \n                            \n                                 Border\n                            \n                        \n                        \n                            \n                                Valori : sysman.creo.nodes.Border\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        NodePortType\n                    \n                \n                    \n                        \n                            Enum per indicare il tipo di porta\n\n                        \n                    \n                        \n                            \n                                 INPUT\n                            \n                        \n                        \n                            \n                                Valori : input\n                            \n                        \n                        \n                            \n                                 OUTPUT\n                            \n                        \n                        \n                            \n                                Valori : output\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        StaticValue\n                    \n                \n                    \n                        \n                            Enum per indicare il tipo di sistma operativo\n\n                        \n                    \n                        \n                            \n                                 SubnetOutput\n                            \n                        \n                        \n                            \n                                Valori : Link\n                            \n                        \n                        \n                            \n                                 hostOS1\n                            \n                        \n                        \n                            \n                                Valori : Linux\n                            \n                        \n                        \n                            \n                                 hostOS2\n                            \n                        \n                        \n                            \n                                Valori : Ubuntu\n                            \n                        \n                        \n                            \n                                 hostOS3\n                            \n                        \n                        \n                            \n                                Valori : CentOS\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        SubjectType\n                    \n                \n                    \n                        \n                            Enum per eseguire le operazioni in base al tipo\n\n                        \n                    \n                        \n                            \n                                 MODULE\n                            \n                        \n                        \n                            \n                                Valori : Module\n                            \n                        \n                        \n                            \n                                 THEATER\n                            \n                        \n                        \n                            \n                                Valori : Theater\n                            \n                        \n            \n        \n\n    src/app/rete-settings/style/styleIconConfig.ts\n    \n        \n            \n                \n                    \n                        \n                        HostIcon\n                    \n                \n                    \n                        \n                            Enum per indicare la icon-class da utilizzare per il nodo host\n\n                        \n                    \n                        \n                            \n                                 ICON\n                            \n                        \n                        \n                            \n                                Valori : bi bi-server\n                            \n                        \n                        \n                            \n                                 PORTIN\n                            \n                        \n                        \n                            \n                                Valori : bi bi-exclamation-octagonal\n                            \n                        \n                        \n                            \n                                 PORTOUT\n                            \n                        \n                        \n                            \n                                Valori : bi bi-ethernet m-auto\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        MirroringModuleInstance_ICON\n                    \n                \n                    \n                        \n                            Enum per indicare la icon-class da utilizzare per il modulo MirroringModuleInstance\n\n                        \n                    \n                        \n                            \n                                 ICON\n                            \n                        \n                        \n                            \n                                Valori : bi bi-textarea-resize\n                            \n                        \n                        \n                            \n                                 PORTIN\n                            \n                        \n                        \n                            \n                                Valori : bi bi-wifi\n                            \n                        \n                        \n                            \n                                 PORTOUT\n                            \n                        \n                        \n                            \n                                Valori : bi bi-broadcast-pin\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        NetworkIcon\n                    \n                \n                    \n                        \n                            Enum per indicare la icon-class da utilizzare per il nodo network\n\n                        \n                    \n                        \n                            \n                                 ICON\n                            \n                        \n                        \n                            \n                                Valori : bi bi-cloud-fill\n                            \n                        \n                        \n                            \n                                 PORTIN\n                            \n                        \n                        \n                            \n                                Valori : bi bi-cloud-plus\n                            \n                        \n                        \n                            \n                                 PORTOUT\n                            \n                        \n                        \n                            \n                                Valori : bi bi-exclamation-octagonal\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        SubnetIcon\n                    \n                \n                    \n                        \n                            Enum per indicare la icon-class da utilizzare per il nodo subnet\n\n                        \n                    \n                        \n                            \n                                 ICON\n                            \n                        \n                        \n                            \n                                Valori : bi bi-hdd-network-fill\n                            \n                        \n                        \n                            \n                                 PORTIN\n                            \n                        \n                        \n                            \n                                Valori : bi bi-box-arrow-right\n                            \n                        \n                        \n                            \n                                 PORTOUT\n                            \n                        \n                        \n                            \n                                Valori : bi bi-clouds m-auto\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        TheaterInternalServiceModuleInstance_ICON\n                    \n                \n                    \n                        \n                            Enum per indicare la icon-class da utilizzare per il modulo TheaterInternalServiceModuleInstance\n\n                        \n                    \n                        \n                            \n                                 ICON\n                            \n                        \n                        \n                            \n                                Valori : bi bi-gear-wide-connected\n                            \n                        \n                        \n                            \n                                 PORTIN\n                            \n                        \n                        \n                            \n                                Valori : bi bi-wifi\n                            \n                        \n                        \n                            \n                                 PORTOUT\n                            \n                        \n                        \n                            \n                                Valori : bi bi-broadcast-pin\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        TheaterModuleInstance_ICON\n                    \n                \n                    \n                        \n                            Enum per indicare la icon-class da utilizzare per il modulo TheaterModuleInstance\n\n                        \n                    \n                        \n                            \n                                 ICON\n                            \n                        \n                        \n                            \n                                Valori : bi bi-pencil\n                            \n                        \n                        \n                            \n                                 PORTIN\n                            \n                        \n                        \n                            \n                                Valori : bi bi-wifi\n                            \n                        \n                        \n                            \n                                 PORTOUT\n                            \n                        \n                        \n                            \n                                Valori : bi bi-broadcast-pin\n                            \n                        \n            \n        \n\n    src/app/rete-settings/nodes/rete-modules/export-rete-modules.ts\n    \n        \n            \n                \n                    \n                        \n                        IndexModuleComponent\n                    \n                \n                    \n                        \n                            Enum utilizzato per indicare l'indice di riferimento degli array contenenti le informazioni.\n\n                        \n                    \n                        \n                            \n                                 TheaterModuleInstance\n                            \n                        \n                        \n                            \n                                 MirroringModuleInstance\n                            \n                        \n                        \n                            \n                                Valori : 1\n                            \n                        \n                        \n                            \n                                 TheaterInternalServiceModuleInstance\n                            \n                        \n                        \n                            \n                                Valori : 2\n                            \n                        \n                        \n                            \n                                 VirtualServerModuleInstance\n                            \n                        \n                        \n                            \n                                Valori : 1\n                            \n                        \n                        \n                            \n                                 ExternalVirtualMachine\n                            \n                        \n                        \n                            \n                                Valori : 1\n                            \n                        \n                        \n                            \n                                 AutomaticSystem\n                            \n                        \n                        \n                            \n                                Valori : 1\n                            \n                        \n                        \n                            \n                                 Border\n                            \n                        \n                        \n                            \n                                Valori : 1\n                            \n                        \n            \n        \n\n    src/app/rete-settings/nodes/rete-nodes/export-rete-nodes.ts\n    \n        \n            \n                \n                    \n                        \n                        IndexNodeComponent\n                    \n                \n                    \n                        \n                            Enum utilizzato per indicare l'indice di riferimento degli array contenenti le informazioni.\n\n                        \n                    \n                        \n                            \n                                 Host\n                            \n                        \n                        \n                            \n                                 Subnet\n                            \n                        \n                        \n                            \n                                Valori : 1\n                            \n                        \n                        \n                            \n                                 Network\n                            \n                        \n                        \n                            \n                                Valori : 2\n                            \n                        \n            \n        \n\n    src/app/services/modelsExport/TypeExport.ts\n    \n        \n            \n                \n                    \n                        \n                        ModeTypeExport\n                    \n                \n                        \n                            \n                                 managed\n                            \n                        \n                        \n                            \n                                Valori : Managed\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ModuleTypeExport\n                    \n                \n                        \n                            \n                                 TheaterModuleInstance\n                            \n                        \n                        \n                            \n                                Valori : sysman.creo.nodes.TheaterModuleInstance\n                            \n                        \n                        \n                            \n                                 MirroringModuleInstance\n                            \n                        \n                        \n                            \n                                Valori : sysman.creo.nodes.MirroringModuleInstance\n                            \n                        \n                        \n                            \n                                 TheaterInternalServiceModuleInstance\n                            \n                        \n                        \n                            \n                                Valori : sysman.creo.nodes.TheaterInternalServiceModuleInstance\n                            \n                        \n                        \n                            \n                                 VirtualServerModuleInstance\n                            \n                        \n                        \n                            \n                                Valori : sysman.creo.nodes.VirtualServerModuleInstance\n                            \n                        \n                        \n                            \n                                 ExternalVirtualMachine\n                            \n                        \n                        \n                            \n                                Valori : sysman.creo.nodes.ExternalVirtualMachine\n                            \n                        \n                        \n                            \n                                 AutomaticSystem\n                            \n                        \n                        \n                            \n                                Valori : sysman.creo.nodes.AutomaticSystem\n                            \n                        \n                        \n                            \n                                 Border\n                            \n                        \n                        \n                            \n                                Valori : sysman.creo.nodes.Border\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        NetworkTypeExport\n                    \n                \n                        \n                            \n                                 Network\n                            \n                        \n                        \n                            \n                                Valori : cloudify.openstack.nodes.Network\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        NodeTypeExport\n                    \n                \n                        \n                            \n                                 Host\n                            \n                        \n                        \n                            \n                                Valori : cloudify.openstack.nodes.Server\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        PortTypeExport\n                    \n                \n                        \n                            \n                                 Port\n                            \n                        \n                        \n                            \n                                Valori : cloudify.openstack.nodes.Port\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        RelationshipsTypeExport\n                    \n                \n                        \n                            \n                                 depends_on\n                            \n                        \n                        \n                            \n                                Valori : cloudify.relationships.depends_on\n                            \n                        \n                        \n                            \n                                 connect_port\n                            \n                        \n                        \n                            \n                                Valori : cloudify.openstack.server_connected_to_port\n                            \n                        \n                        \n                            \n                                 contained_in\n                            \n                        \n                        \n                            \n                                Valori : cloudify.relationships.contained_in\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        SubnetTypeExport\n                    \n                \n                        \n                            \n                                 Subnet\n                            \n                        \n                        \n                            \n                                Valori : cloudify.openstack.nodes.Subnet\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        TheaterTypeExport\n                    \n                \n                        \n                            \n                                 Theater\n                            \n                        \n                        \n                            \n                                Valori : sysman.creo.nodes.Theater\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ToscaDefinitionType\n                    \n                \n                        \n                            \n                                 cloudify\n                            \n                        \n                        \n                            \n                                Valori : cloudify_dsl_1_3\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Varie\n  Funzioni\n\n\n\n    Indice\n    \n        \n            \n                \n                    \n                        \n                            createHost   (src/.../parseCommonElement.ts)\n                        \n                        \n                            createModuleNode   (src/.../parseCommonElement.ts)\n                        \n                        \n                            createNetwork   (src/.../parseCommonElement.ts)\n                        \n                        \n                            createSubnet   (src/.../parseCommonElement.ts)\n                        \n                        \n                            getEmptyHostInfo   (src/.../hostNode.ts)\n                        \n                        \n                            getEmptyNetworkInfo   (src/.../networkNode.ts)\n                        \n                        \n                            getEmptyReteMirroringModuleInstanceInfo   (src/.../mirroringModuleInstanceNode.ts)\n                        \n                        \n                            getEmptyReteTheaterInternalServiceModuleInstanceInfo   (src/.../theaterInternalServiceModuleInstanceNode.ts)\n                        \n                        \n                            getEmptyReteTheaterModuleInstanceInfo   (src/.../theaterModuleInstanceNode.ts)\n                        \n                        \n                            getEmptySubnetInfo   (src/.../subnetNode.ts)\n                        \n                        \n                            initializeKeycloak   (src/.../app.init.ts)\n                        \n                        \n                            ReteDisplayModuleDataMC   (src/.../displayData.ts)\n                        \n                        \n                            ReteDisplayModuleDataMV   (src/.../displayData.ts)\n                        \n                        \n                            ReteDisplayModuleDataTC   (src/.../displayData.ts)\n                        \n                        \n                            ReteDisplayModuleDataTV   (src/.../displayData.ts)\n                        \n                        \n                            ReteDisplayModuleInstanceTC   (src/.../displayData.ts)\n                        \n                        \n                            ReteDisplayNodeDataMV   (src/.../displayData.ts)\n                        \n                        \n                            ReteDisplayTheaterDataTC   (src/.../displayData.ts)\n                        \n                        \n                            ReteDisplayTheaterDataTV   (src/.../displayData.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/services/application/parse/parseCommonElement.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createHost\n                        \n                    \n                \n            \n            \n                \ncreateHost(name: string, hostDTO: HostModuleDTO)\n                \n            \n\n\n\n\n            \n                \n                    Funzione che esegue il settaggio iniziale per i nodi host.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    hostDTO\n                                    \n                                                HostModuleDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ReteHostInfo\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createModuleNode\n                        \n                    \n                \n            \n            \n                \ncreateModuleNode(name: string, moduleInstance: ModuleInstanceDTO, simpleModuleRoot: SimpleModuleApplication)\n                \n            \n\n\n\n\n            \n                \n                    Funzione che esegue il settaggio iniziale per i moduli del teatro.\nLa funzione controlla prima di che tipo è il modulo, prima di eseguire le dovute assegnazioni.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    moduleInstance\n                                    \n                                                ModuleInstanceDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    simpleModuleRoot\n                                    \n                                                SimpleModuleApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ModuleInstance\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createNetwork\n                        \n                    \n                \n            \n            \n                \ncreateNetwork(name: string, moduleInterfaceDTO)\n                \n            \n\n\n\n\n            \n                \n                    Funzione che esegue il settaggio iniziale per i nodi network.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    moduleInterfaceDTO\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ReteNetworkInfo\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createSubnet\n                        \n                    \n                \n            \n            \n                \ncreateSubnet(name: string, subnetDTO: SubnetDTO)\n                \n            \n\n\n\n\n            \n                \n                    Funzione che esegue il settaggio iniziale per i nodi subnet.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    subnetDTO\n                                    \n                                                SubnetDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ReteSubnetInfo\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/app/rete-settings/nodes/rete-nodes/host/hostNode.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getEmptyHostInfo\n                        \n                    \n                \n            \n            \n                \ngetEmptyHostInfo()\n                \n            \n\n\n\n\n            \n                \n                    Funzione dichiarata in HostNode. \nEssa ha lo scopo di generare una struttura dati empty.\nViene utilizzata in per instanziare un nodo del tipo di ritorno indicato senza dati.\n\n\n                    \n                    \n                    \n                        Returns :         ReteHostInfo\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/app/rete-settings/nodes/rete-nodes/network/networkNode.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getEmptyNetworkInfo\n                        \n                    \n                \n            \n            \n                \ngetEmptyNetworkInfo()\n                \n            \n\n\n\n\n            \n                \n                    Funzione dichiarata in NetworkNode. \nEssa ha lo scopo di generare una struttura dati empty.\nViene utilizzata in per instanziare un nodo del tipo di ritorno indicato senza dati.\n\n\n                    \n                    \n                    \n                        Returns :         ReteNetworkInfo\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/app/rete-settings/nodes/rete-modules/mirroringModuleInstance/mirroringModuleInstanceNode.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getEmptyReteMirroringModuleInstanceInfo\n                        \n                    \n                \n            \n            \n                \ngetEmptyReteMirroringModuleInstanceInfo()\n                \n            \n\n\n\n\n            \n                \n                    Funzione dichiarata in MirroringModuleInstanceNode. \nEssa ha lo scopo di generare una struttura dati empty.\nViene utilizzata in per instanziare un nodo del tipo di ritorno indicato senza dati.\n\n\n                    \n                    \n                    \n                        Returns :         ReteMirroringModuleInstanceInfo\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/app/rete-settings/nodes/rete-modules/theaterInternalServiceModuleInstance/theaterInternalServiceModuleInstanceNode.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getEmptyReteTheaterInternalServiceModuleInstanceInfo\n                        \n                    \n                \n            \n            \n                \ngetEmptyReteTheaterInternalServiceModuleInstanceInfo()\n                \n            \n\n\n\n\n            \n                \n                    Funzione dichiarata in TheaterInternalServiceModuleInstanceNode. \nEssa ha lo scopo di generare una struttura dati empty.\nViene utilizzata in per instanziare un nodo del tipo di ritorno indicato senza dati.\n\n\n                    \n                    \n                    \n                        Returns :         ReteTheaterInternalServiceModuleInstanceInfo\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/app/rete-settings/nodes/rete-modules/theaterModuleInstance/theaterModuleInstanceNode.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getEmptyReteTheaterModuleInstanceInfo\n                        \n                    \n                \n            \n            \n                \ngetEmptyReteTheaterModuleInstanceInfo()\n                \n            \n\n\n\n\n            \n                \n                    Funzione dichiarata in TheaterModuleInstanceNode. \nEssa ha lo scopo di generare una struttura dati empty.\nViene utilizzata in per instanziare un nodo del tipo di ritorno indicato senza dati.\n\n\n                    \n                    \n                    \n                        Returns :         ReteTheaterModuleInstanceInfo\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/app/rete-settings/nodes/rete-nodes/subnet/subnetNode.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getEmptySubnetInfo\n                        \n                    \n                \n            \n            \n                \ngetEmptySubnetInfo()\n                \n            \n\n\n\n\n            \n                \n                    Funzione dichiarata in SubnetNode. \nEssa ha lo scopo di generare una struttura dati empty.\nViene utilizzata in per instanziare un nodo del tipo di ritorno indicato senza dati.\n\n\n                    \n                    \n                    \n                        Returns :         ReteSubnetInfo\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/app/utility/app.init.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        initializeKeycloak\n                        \n                    \n                \n            \n            \n                \ninitializeKeycloak(keycloak: KeycloakService)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    keycloak\n                                    \n                                            KeycloakService\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/app/rete-settings/settings/displayData.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ReteDisplayModuleDataMC\n                        \n                    \n                \n            \n            \n                \nReteDisplayModuleDataMC(module: ModuleApplication)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    module\n                                    \n                                                ModuleApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     [][]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ReteDisplayModuleDataMV\n                        \n                    \n                \n            \n            \n                \nReteDisplayModuleDataMV(module: ModuleApplication)\n                \n            \n\n\n\n\n            \n                \n                    Funzione che ritorna gli attributi da visualizzare dato un modulo.\nUsata nella componente di visualizzazione modulo.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    module\n                                    \n                                                ModuleApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     [][]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ReteDisplayModuleDataTC\n                        \n                    \n                \n            \n            \n                \nReteDisplayModuleDataTC(module: SimpleModuleApplication)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    module\n                                    \n                                                SimpleModuleApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     [][]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ReteDisplayModuleDataTV\n                        \n                    \n                \n            \n            \n                \nReteDisplayModuleDataTV(module: SimpleModuleApplication)\n                \n            \n\n\n\n\n            \n                \n                    Funzione che ritorna gli attributi da visualizzare dato un modulo.\nUsata nella componente di visualizzazione teatro.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    module\n                                    \n                                                SimpleModuleApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     [][]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ReteDisplayModuleInstanceTC\n                        \n                    \n                \n            \n            \n                \nReteDisplayModuleInstanceTC(node: Node)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ReteDisplayNodeDataMV\n                        \n                    \n                \n            \n            \n                \nReteDisplayNodeDataMV(node: Node)\n                \n            \n\n\n\n\n            \n                \n                    Funzione che ritorna gli attributi da visualizzare dato un nodo.\nUsata nella componente di visualizzazione modulo.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ReteDisplayTheaterDataTC\n                        \n                    \n                \n            \n            \n                \nReteDisplayTheaterDataTC(theater: TheaterApplication)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    theater\n                                    \n                                                TheaterApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ReteDisplayTheaterDataTV\n                        \n                    \n                \n            \n            \n                \nReteDisplayTheaterDataTV(theater: TheaterApplication)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    theater\n                                    \n                                                TheaterApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nInfraCreate\nThis project was generated with Angular CLI version 9.1.12.\nnvm version 12.16.1 \nfor update/install 12.20.\nAggiunta e modifiche elementi in libreria\naggiungere ad event.d.ts  : \n    - arrange: void;\n    - showcontextmenu: { e: MouseEvent, node: Node };\n    - undo: void;\n    - redo: void;\ninstallare minimap-plugin versione 0.3.0\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Moduli\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Il tuo browser non supporta SVG\n                                    \n                                \n                        \n                            Cerca\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    Grafico non disponibile.\n                                \n                        \n                            Cerca\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Sommario\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_exports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nComposerComponent\n\nComposerComponent\n\nAppModule -->\n\nComposerComponent->AppModule\n\n\n\nAppModule -->\n\nComposerComponent->AppModule\n\n\n\n\n\nDataInputComponent\n\nDataInputComponent\n\nAppModule -->\n\nDataInputComponent->AppModule\n\n\n\n\n\nDataInputV2Component\n\nDataInputV2Component\n\nAppModule -->\n\nDataInputV2Component->AppModule\n\n\n\n\n\nDataItemComponent\n\nDataItemComponent\n\nAppModule -->\n\nDataItemComponent->AppModule\n\n\n\n\n\nDocsComponent\n\nDocsComponent\n\nAppModule -->\n\nDocsComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nHostComponent\n\nHostComponent\n\nAppModule -->\n\nHostComponent->AppModule\n\n\n\n\n\nHowToUseComponent\n\nHowToUseComponent\n\nAppModule -->\n\nHowToUseComponent->AppModule\n\n\n\n\n\nMirroringModuleInstanceComponent\n\nMirroringModuleInstanceComponent\n\nAppModule -->\n\nMirroringModuleInstanceComponent->AppModule\n\n\n\n\n\nModalComponent\n\nModalComponent\n\nAppModule -->\n\nModalComponent->AppModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nAppModule -->\n\nNavbarComponent->AppModule\n\n\n\n\n\nNavbarElementComponent\n\nNavbarElementComponent\n\nAppModule -->\n\nNavbarElementComponent->AppModule\n\n\n\n\n\nNetworkComponent\n\nNetworkComponent\n\nAppModule -->\n\nNetworkComponent->AppModule\n\n\n\n\n\nOffcanvasComponent\n\nOffcanvasComponent\n\nAppModule -->\n\nOffcanvasComponent->AppModule\n\n\n\n\n\nReteModuleComposerComponent\n\nReteModuleComposerComponent\n\nAppModule -->\n\nReteModuleComposerComponent->AppModule\n\n\n\n\n\nReteModuleVisualizerComponent\n\nReteModuleVisualizerComponent\n\nAppModule -->\n\nReteModuleVisualizerComponent->AppModule\n\n\n\n\n\nReteTheaterComposerComponent\n\nReteTheaterComposerComponent\n\nAppModule -->\n\nReteTheaterComposerComponent->AppModule\n\n\n\n\n\nReteTheaterVisualizerComponent\n\nReteTheaterVisualizerComponent\n\nAppModule -->\n\nReteTheaterVisualizerComponent->AppModule\n\n\n\n\n\nSubnetComponent\n\nSubnetComponent\n\nAppModule -->\n\nSubnetComponent->AppModule\n\n\n\n\n\nTabnavComponent\n\nTabnavComponent\n\nAppModule -->\n\nTabnavComponent->AppModule\n\n\n\n\n\nTheaterInternalServiceModuleInstanceComponent\n\nTheaterInternalServiceModuleInstanceComponent\n\nAppModule -->\n\nTheaterInternalServiceModuleInstanceComponent->AppModule\n\n\n\n\n\nTheaterModuleInstanceComponent\n\nTheaterModuleInstanceComponent\n\nAppModule -->\n\nTheaterModuleInstanceComponent->AppModule\n\n\n\n\n\nUnderbarComponent\n\nUnderbarComponent\n\nAppModule -->\n\nUnderbarComponent->AppModule\n\n\n\n\n\nVisualizerComponent\n\nVisualizerComponent\n\nAppModule -->\n\nVisualizerComponent->AppModule\n\n\n\nAppModule -->\n\nVisualizerComponent->AppModule\n\n\n\n\n\nDataInputComponent \n\nDataInputComponent \n\nDataInputComponent  -->\n\nAppModule->DataInputComponent \n\n\n\n\n\nNavbarComponent \n\nNavbarComponent \n\nNavbarComponent  -->\n\nAppModule->NavbarComponent \n\n\n\n\n\nNavbarElementComponent \n\nNavbarElementComponent \n\nNavbarElementComponent  -->\n\nAppModule->NavbarElementComponent \n\n\n\n\n\nOffcanvasComponent \n\nOffcanvasComponent \n\nOffcanvasComponent  -->\n\nAppModule->OffcanvasComponent \n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nNgxPopper\n\nNgxPopper\n\nAppModule -->\n\nNgxPopper->AppModule\n\n\n\n\n\nModuleService\n\nModuleService\n\nAppModule -->\n\nModuleService->AppModule\n\n\n\n\n\nParseService\n\nParseService\n\nAppModule -->\n\nParseService->AppModule\n\n\n\n\n\nTheaterService\n\nTheaterService\n\nAppModule -->\n\nTheaterService->AppModule\n\n\n\n\n\nTokenService\n\nTokenService\n\nAppModule -->\n\nTokenService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Ingrandisci\n        Reset\n        Rimpocciolisci\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Moduli\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    26 Componenti\n                \n            \n        \n        \n            \n                \n                    \n                    12 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    124 Classi\n                \n            \n        \n        \n            \n                \n                    \n                    4 Interfacce\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        0 \n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Proprietà\n    \n    \n        \n            Version : 1.0.0\n    \n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/reteBasicModuleInfo.html":{"url":"classes/reteBasicModuleInfo.html","title":"class - reteBasicModuleInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  reteBasicModuleInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/rete-settings/nodes/reteBasic.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Elemento che rappresenta una struttura dati generale per le classi dei singoli moduli.\n\n            \n\n            \n                Extends\n            \n            \n                        ModuleInstancePropertiesDTO\n            \n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                host_number\n                            \n                            \n                                Input\n                            \n                            \n                                name\n                            \n                            \n                                network_number\n                            \n                            \n                                Output\n                            \n                            \n                                subnet_number\n                            \n                            \n                                    Readonly\n                                type\n                            \n                            \n                                area\n                            \n                            \n                                consumer_interfaces_link\n                            \n                            \n                                description\n                            \n                            \n                                module\n                            \n                            \n                                sequence\n                            \n                            \n                                version\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        host_number\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/reteBasic.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Input\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/reteBasic.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/reteBasic.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        network_number\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/reteBasic.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Output\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/reteBasic.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subnet_number\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/reteBasic.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         EnumModuleType\n\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/reteBasic.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        area\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleInstancePropertiesDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleInstancePropertiesDTO:126\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        consumer_interfaces_link\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ConsumerInterfaceLinkDTO[]\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleInstancePropertiesDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleInstancePropertiesDTO:131\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleInstancePropertiesDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleInstancePropertiesDTO:127\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleInstancePropertiesDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleInstancePropertiesDTO:128\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sequence\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleInstancePropertiesDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleInstancePropertiesDTO:130\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleInstancePropertiesDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleInstancePropertiesDTO:129\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { EnumNodeType, EnumModuleType } from \"src/app/models/appType\";\nimport { ModuleInstancePropertiesDTO} from \"src/app/services/modelsDTO/moduleDTO\";\n\n/**\n * Elemento che rappresenta una struttura dati generale per le classi dei singoli nodi.\n */\nexport class reteBasicNodeInfo {\n    Input: string[];\n    Output: string[];\n    name: string;\n    readonly type: EnumNodeType;\n}\n\n\n/**\n * Elemento che rappresenta una struttura dati generale per le classi dei singoli moduli.\n * @extends {reteBasicModuleInfo}\n */\nexport class reteBasicModuleInfo extends ModuleInstancePropertiesDTO { // may extends retemodulenodeinfo\n    Input: string[];\n    Output: string[];\n    name: string;\n    host_number: number;\n    network_number: number\n    subnet_number: number\n    readonly type: EnumModuleType;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/reteBasicNodeInfo.html":{"url":"classes/reteBasicNodeInfo.html","title":"class - reteBasicNodeInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  reteBasicNodeInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/rete-settings/nodes/reteBasic.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Elemento che rappresenta una struttura dati generale per le classi dei singoli nodi.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                Input\n                            \n                            \n                                name\n                            \n                            \n                                Output\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        Input\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/reteBasic.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/reteBasic.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Output\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/reteBasic.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         EnumNodeType\n\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/reteBasic.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { EnumNodeType, EnumModuleType } from \"src/app/models/appType\";\nimport { ModuleInstancePropertiesDTO} from \"src/app/services/modelsDTO/moduleDTO\";\n\n/**\n * Elemento che rappresenta una struttura dati generale per le classi dei singoli nodi.\n */\nexport class reteBasicNodeInfo {\n    Input: string[];\n    Output: string[];\n    name: string;\n    readonly type: EnumNodeType;\n}\n\n\n/**\n * Elemento che rappresenta una struttura dati generale per le classi dei singoli moduli.\n * @extends {reteBasicModuleInfo}\n */\nexport class reteBasicModuleInfo extends ModuleInstancePropertiesDTO { // may extends retemodulenodeinfo\n    Input: string[];\n    Output: string[];\n    name: string;\n    host_number: number;\n    network_number: number\n    subnet_number: number\n    readonly type: EnumModuleType;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"}}
}
