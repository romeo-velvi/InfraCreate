var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/Aoption.html",[0,0.341,1,3.661]],["body/classes/Aoption.html",[0,0.642,1,6.894,2,0.454,3,0.066,4,0.057,5,0.066,6,5.759,7,0.331,8,3.612,9,0.933,10,6.444,11,0.933,12,0.735,13,2.065,14,0.102,15,0.236,16,7.37,17,7.37,18,0.122,19,0.006,20,0.426,21,0.156,22,7.012,23,7.012,24,0.258,25,5.119,26,1.872,27,1.41,28,4.632,29,2.292,30,2.943,31,2.558,32,1.934,33,2.711,34,0.084,35,5.09,36,5.759,37,0.563,38,0.999,39,1.405,40,5.759,41,2.711,42,6.444,43,4.632,44,0.32,45,1.123,46,2.711,47,1.755,48,2.882,49,1.319,50,2.51,51,5.759,52,2.51,53,0.013,54,0.013,55,0.013,56,0.013]],["title/components/AppComponent.html",[57,0.97,58,1.958]],["body/components/AppComponent.html",[0,0.335,3,0.044,4,0.038,5,0.044,7,0.221,11,0.964,14,0.068,15,0.182,18,0.134,19,0.006,20,0.327,21,0.171,24,0.318,26,1.252,27,1.088,32,2.311,33,1.812,34,0.044,38,0.922,39,1.296,47,1.619,48,1.927,52,1.678,53,0.009,54,0.009,55,0.009,56,0.009,57,1.317,58,3.282,59,1.812,60,2.011,61,2.011,62,2.011,63,4.688,64,7.126,65,7.115,66,2.011,67,4.287,68,4.051,69,3.283,70,2.715,71,7.407,72,2.715,73,6.469,74,4.114,75,6.609,76,5.494,77,5.302,78,6.609,79,7.407,80,5.976,81,6.484,82,8.379,83,3.662,84,1.712,85,3.404,86,4.415,87,4.415,88,5.798,89,6.559,90,6.469,91,1.16,92,6.469,93,5.517,94,1.784,95,6.136,96,3.56,97,0.882,98,1.083,99,0.868,100,4.893,101,4.688,102,3.636,103,1.652,104,0.954,105,4.688,106,1.1,107,2.509,108,2.652,109,1.973,110,4.688,111,5.691,112,4.688,113,5.772,114,1.508,115,2.042,116,2.902,117,6.469,118,6.469,119,6.469,120,6.469,121,5.772,122,4.688,123,4.688,124,5.772,125,4.688,126,6.469,127,2.042,128,4.469,129,3.097,130,3.097,131,4.688,132,4.688,133,4.688,134,4.688,135,4.688,136,2.394,137,1.533,138,2.516,139,4.688,140,3.577,141,4.688,142,4.688,143,4.688,144,5.772,145,3.198,146,4.688,147,4.688,148,4.688,149,3.238,150,4.688,151,4.688,152,4.688,153,3.85,154,3.404,155,4.688,156,4.688,157,4.97,158,4.688,159,4.688,160,3.85,161,3.238,162,1.71,163,3.404,164,2.011,165,2.775,166,1.272,167,2.011,168,2.354,169,2.011,170,1.887,171,0.641,172,2.056,173,1.887,174,3.248,175,1.887,176,1.927,177,1.519,178,2.056,179,1.927,180,0.738,181,2.056,182,1.927,183,2.056,184,2.056,185,1.849,186,2.056,187,1.887,188,2.056,189,1.849,190,1.887,191,2.056,192,1.849,193,1.849,194,2.056,195,2.056,196,1.927,197,2.056,198,1.849,199,1.927,200,2.056,201,1.968,202,1.875,203,1.968,204,2.837,205,1.968,206,1.968,207,1.849,208,1.849,209,2.056,210,1.849,211,1.849,212,1.849,213,2.056,214,1.887,215,2.056,216,2.056,217,2.056]],["title/modules/AppModule.html",[38,0.679,218,3.661]],["body/modules/AppModule.html",[0,0.282,3,0.037,4,0.032,5,0.037,18,0.058,19,0.006,21,0.073,24,0.37,26,1.053,33,3.547,34,0.037,38,1.054,39,1.482,53,0.007,54,0.007,55,0.007,56,0.007,58,3.864,68,1.622,80,2.607,97,0.742,98,0.912,99,0.73,162,1.439,173,3.551,175,3.296,176,3.771,179,3.365,180,0.902,182,3.365,185,3.23,187,3.296,189,3.413,190,3.296,192,3.413,193,3.23,196,3.771,198,3.413,199,3.771,201,3.437,202,2.032,203,3.437,205,3.437,206,3.437,207,3.413,208,3.23,210,3.413,211,3.413,212,3.23,214,3.551,218,7.852,219,1.037,220,4.4,221,3.521,222,3.521,223,3.521,224,3.521,225,3.521,226,3.521,227,5.945,228,7.307,229,5.194,230,5.657,231,5.41,232,5.194,233,3.521,234,3.241,235,3.521,236,3.946,237,3.946,238,5.726,239,2.214,240,3.946,241,5.11,242,4.703,243,5.726,244,6.74,245,1.037,246,3.946,247,5.726,248,7.394,249,3.946,250,3.946,251,0.897,252,1.204,253,5.726,254,4.703,255,3.032,256,5.726,257,5.726,258,5.11,259,2.569,260,3.946,261,3.946,262,3.521,263,3.521,264,3.241,265,3.521,266,5.726,267,2.555,268,1.556,269,1.526,270,4.656,271,7.394,272,5.726,273,5.726,274,4.656,275,5.726,276,5.726,277,2.541,278,3.241,279,3.946,280,3.946,281,3.946,282,3.946,283,3.946,284,3.521,285,3.521,286,2.831,287,3.521,288,3.946,289,5.726,290,6.939,291,4.4,292,5.11,293,3.946,294,5.726,295,2.607,296,5.726,297,5.178,298,5.726,299,3.521,300,3.521,301,5.726,302,3.946,303,3.946,304,3.946,305,3.946,306,3.946,307,3.946,308,3.946,309,3.521,310,3.946,311,6.74,312,3.521,313,3.946,314,3.946,315,3.946,316,3.521,317,3.946,318,3.946,319,3.946,320,5.726,321,3.946,322,5.726,323,3.241,324,3.521,325,3.946,326,2.607,327,2.607,328,3.521,329,3.946,330,3.521,331,2.251,332,1.467,333,5.726,334,4.703,335,5.726,336,3.946,337,3.946,338,1.622,339,3.946,340,3.946,341,3.946,342,0.988,343,1.268,344,1.588,345,1.313,346,3.946,347,5.726,348,3.946,349,3.946,350,3.946,351,3.946,352,1.337]],["title/modules/AppRoutingModule.html",[38,0.679,227,3.459]],["body/modules/AppRoutingModule.html",[0,0.46,3,0.06,4,0.052,5,0.06,19,0.006,24,0.358,26,1.716,34,0.06,53,0.012,54,0.012,55,0.012,56,0.012,57,2.034,129,4.247,173,3.478,185,3.408,187,3.856,190,3.478,214,3.478,219,1.689,227,5.776,241,5.737,258,7.099,262,5.737,263,5.737,264,5.281,265,5.737,270,5.968,274,5.968,284,5.737,285,5.737,326,4.247,327,4.247,328,5.737,331,4.538,334,5.281,342,1.609,353,6.429,354,6.429,355,7.956,356,7.62,357,7.096,358,6.429,359,7.956,360,7.674,361,5.776,362,6.113,363,7.099,364,7.956,365,7.956,366,6.429]],["title/classes/AreaApplication.html",[0,0.341,367,2.418]],["body/classes/AreaApplication.html",[0,0.667,2,0.31,3,0.045,4,0.039,5,0.045,9,0.729,11,0.969,12,0.575,14,0.07,15,0.185,18,0.13,19,0.006,20,0.435,21,0.166,24,0.343,34,0.09,38,0.934,39,1.691,44,0.368,46,1.848,49,1.233,53,0.009,54,0.009,55,0.009,56,0.009,94,1.318,99,1.214,103,1.356,106,0.658,116,2.941,127,1.509,162,2.937,171,0.523,177,1.89,202,1.757,219,1.965,277,2.704,286,3.699,342,1.196,343,2.71,345,1.59,367,3.327,368,2.493,369,1.811,370,3.068,371,2.875,372,1.102,373,1.999,374,4.779,375,4.001,376,1.905,377,4.779,378,4.779,379,0.818,380,4.779,381,4.779,382,2.133,383,4.779,384,4.779,385,2.812,386,2.404,387,2.303,388,2.812,389,2.303,390,2.586,391,2.303,392,3.435,393,2.493,394,3.435,395,2.493,396,3.435,397,2.493,398,3.082,399,2.363,400,3.454,401,2.247,402,2.498,403,1.458,404,2.034,405,2.143,406,1.838,407,1.869,408,2.181,409,2.194,410,2.363,411,2.498,412,2.064,413,3.606,414,3.141,415,3.141,416,3.141,417,4.493,418,4.308,419,0.729,420,2.812,421,0.771,422,0.999,423,3.327,424,2.485,425,3.419,426,3.419,427,2.534,428,2.304,429,3.419,430,2.694,431,3.435,432,2.493,433,0.583,434,2.006,435,2.493,436,2.493,437,2.144,438,2.493,439,3.419,440,2.941,441,3.419,442,1.999,443,2.875,444,0.912,445,3.141,446,3.419,447,2.493,448,1.649,449,2.493,450,2.247,451,2.096,452,2.096,453,1.649,454,2.05,455,2.493,456,2.493,457,2.247,458,3.159,459,2.426,460,2.194,461,1.02,462,3.082,463,3.967,464,2.303,465,2.303,466,3.327,467,4.086,468,3.88,469,3.454,470,3.419,471,3.903,472,3.797,473,3.356,474,2.303,475,4.086,476,0.913,477,2.426,478,2.247,479,2.303]],["title/classes/AreaColorDTO.html",[0,0.341,477,2.418]],["body/classes/AreaColorDTO.html",[0,0.672,2,0.322,3,0.047,4,0.04,5,0.047,9,0.748,11,0.98,12,0.59,14,0.072,15,0.189,18,0.111,19,0.006,20,0.433,21,0.142,24,0.345,34,0.091,38,0.959,39,1.529,44,0.374,46,1.919,53,0.009,54,0.009,55,0.009,56,0.009,94,1.37,103,1.392,116,3.018,127,1.567,162,2.984,171,0.347,177,1.92,202,1.792,219,2.004,277,2.735,286,3.772,342,1.242,343,2.746,345,1.652,367,2.52,368,2.59,369,1.825,370,2.239,372,1.131,375,3.089,376,1.629,379,0.815,382,1.918,385,2.886,386,2.431,387,2.393,388,2.886,389,2.393,390,2.654,391,2.393,392,3.504,393,2.59,394,3.504,395,2.59,396,3.504,397,2.59,398,3.164,399,2.454,400,3.509,401,2.335,402,2.538,403,1.514,404,2.087,405,2.199,406,1.887,407,1.918,408,2.845,409,2.279,410,2.454,411,2.538,412,2.105,413,3.678,414,3.203,415,3.203,416,3.203,417,4.533,418,4.357,419,0.748,420,2.886,421,0.791,422,1.025,423,3.415,424,2.55,425,3.509,426,3.509,427,2.601,428,2.364,429,3.509,430,2.765,431,3.504,432,2.59,433,0.605,434,2.084,435,2.59,436,2.59,437,2.227,438,2.59,439,3.509,440,3.018,441,3.509,442,2.052,443,2.95,444,0.93,445,3.203,446,3.509,447,2.59,448,1.713,449,2.59,450,2.335,451,2.177,452,2.177,453,1.713,454,2.13,455,2.59,456,2.59,457,2.335,458,3.242,459,2.52,460,2.279,461,1.06,462,3.164,463,4.02,464,2.393,465,2.393,466,3.415,467,4.152,468,3.942,469,3.509,470,3.509,471,3.98,472,3.873,473,3.423,474,2.393,475,4.152,476,0.949,477,3.415,478,2.335,479,2.393,480,1.796,481,4.965,482,4.965,483,4.965]],["title/classes/AreaDTO.html",[0,0.341,370,1.585]],["body/classes/AreaDTO.html",[0,0.685,2,0.243,3,0.035,4,0.03,5,0.035,7,0.177,9,0.948,12,0.573,13,1.357,14,0.055,15,0.203,18,0.121,19,0.006,20,0.452,21,0.149,24,0.24,27,0.629,30,1.571,34,0.09,37,0.668,38,1.028,39,1.31,44,0.458,45,1.492,49,1.637,53,0.007,54,0.007,55,0.007,56,0.007,91,1.724,96,1.538,97,0.704,104,0.812,106,1.107,114,0.762,115,1.181,171,0.656,180,0.59,219,0.983,352,1.268,369,1.07,370,1.833,371,2.867,372,1.463,373,2.451,376,1.176,379,0.849,382,2.056,402,1.161,403,1.994,404,2.237,405,2.137,406,1.05,407,1.571,408,1.833,419,1.069,421,1.13,422,1.465,433,1.118,442,1.142,444,0.937,461,1.539,476,1.249,480,1.471,484,1.679,485,1.889,486,2.933,487,0.771,488,2.933,489,2.933,490,3.743,491,3.743,492,3.743,493,3.743,494,3.743,495,3.743,496,2.313,497,2.313,498,1.679,499,2.528,500,1.161,501,0.524,502,1.679,503,1.605,504,1.365,505,1.679,506,1.679,507,1.679,508,1.679,509,1.246,510,1.605,511,1.679,512,1.641,513,1.246,514,0.762,515,1.447,516,3.093,517,1.679,518,1.679,519,1.142,520,1.679,521,2.363,522,1.679,523,2.471,524,1.679,525,1.679,526,1.571,527,3.644,528,1.34,529,1.641,530,1.679,531,2.363,532,1.679,533,1.679,534,1.679,535,1.679,536,1.679,537,1.679,538,1.154,539,1.679,540,1.605,541,2.363,542,1.419,543,2.313,544,1.679,545,1.679,546,2.416,547,1.679,548,1.679,549,2.363,550,1.679,551,1.365,552,1.365,553,1.365,554,1.365,555,1.365,556,1.365,557,1.365,558,1.365,559,1.365,560,1.679,561,1.679,562,1.679,563,1.641,564,1.597,565,1.641,566,1.641,567,1.641,568,1.641,569,1.641,570,1.641,571,1.641,572,0.851,573,1.379,574,1.641,575,1.709,576,0.865,577,1.679,578,1.679,579,0.907,580,1.679,581,1.571,582,1.605,583,2.218,584,0.983,585,1.392,586,1.122,587,2.471,588,1.195,589,1.804,590,1.181,591,1.419,592,2.416,593,1.365,594,1.641,595,2.933,596,1.641,597,1.392,598,2.867,599,2.297,600,1.605,601,1.679,602,1.571,603,1.419,604,1.679,605,1.419]],["title/classes/AreaExport.html",[0,0.341,606,2.809]],["body/classes/AreaExport.html",[0,0.681,2,0.363,3,0.053,4,0.046,5,0.053,7,0.265,9,1.033,11,0.811,12,0.711,13,1.797,14,0.082,15,0.257,18,0.106,19,0.006,20,0.439,21,0.135,24,0.206,34,0.09,37,0.586,38,0.799,44,0.456,53,0.01,54,0.01,55,0.01,56,0.01,91,1.722,94,1.547,103,1.16,166,1.522,171,0.392,342,1.403,372,1.496,379,0.711,412,1.547,419,1.068,421,1.119,422,1.451,433,0.988,444,1.112,461,1.833,476,1.394,480,2.292,485,1.878,487,0.461,501,1.203,538,1.168,564,1.626,573,1.403,575,1.74,576,1.296,584,1.473,585,2.085,588,1.862,589,2.016,590,1.77,593,2.046,606,4.781,607,3.425,608,4.302,609,4.781,610,4.455,611,1.298,612,5.249,613,5.608,614,5.608,615,2.661,616,2.661,617,4.302,618,2.661,619,2.126,620,2.085,621,1.9,622,1.801,623,2.085,624,2.085,625,2.085,626,2.008,627,2.008,628,3.101,629,1.866,630,4.162,631,4.162,632,4.302,633,3.307,634,4.162,635,3.425,636,3.307,637,4.302,638,3.307,639,4.302,640,1.626,641,3.307,642,3.425,643,3.425,644,2.085,645,3.425,646,3.199,647,3.425,648,3.425]],["title/injectables/AttachmentsService.html",[649,1.918,650,4.251]],["body/injectables/AttachmentsService.html",[0,0.429,3,0.056,4,0.049,5,0.056,14,0.087,18,0.122,19,0.006,20,0.429,21,0.155,24,0.341,26,1.599,34,0.056,37,0.612,53,0.011,54,0.011,55,0.011,56,0.011,69,3.04,84,1.384,97,1.573,98,1.933,99,1.548,138,4.084,177,1.787,231,6.232,232,5.983,245,1.999,251,1.731,295,3.958,326,3.958,327,3.958,331,5.297,332,2.83,379,0.837,437,2.687,440,2.687,649,3.064,650,6.791,651,3.215,652,5.991,653,3.662,654,7.611,655,7.611,656,4.603,657,6.39,658,5.991,659,5.526,660,7.611,661,8.801,662,5.991,663,5.346,664,4.648,665,7.611,666,5.991,667,5.346,668,5.991,669,4.603,670,5.991,671,5.991,672,5.991,673,5.346,674,3.215,675,3.04,676,5.028,677,5.991,678,3.775,679,7.611,680,6.791,681,7.611,682,7.611,683,6.791,684,7.611,685,7.611,686,7.229,687,7.611,688,7.611,689,7.611,690,7.611,691,7.611,692,4.648,693,7.611,694,7.611,695,7.611,696,7.611,697,2.321,698,5.991,699,5.991]],["title/injectables/AuthGuard.html",[357,3.913,649,1.918]],["body/injectables/AuthGuard.html",[0,0.468,3,0.061,4,0.053,5,0.061,14,0.095,18,0.117,19,0.006,21,0.149,24,0.32,26,1.745,34,0.061,53,0.012,54,0.012,55,0.012,56,0.012,69,3.317,74,3.374,76,5.52,77,5.414,84,1.51,85,4.746,97,1.512,98,1.857,99,1.488,129,4.318,137,2.137,245,2.111,251,1.487,267,2.478,290,7.457,291,7.162,331,3.729,338,2.686,357,6.601,369,1.56,649,3.235,651,3.508,653,3.433,674,3.508,697,2.451,700,6.537,701,8.703,702,8.703,703,6.537,704,6.537,705,9.08,706,7.766,707,9.08,708,6.537,709,6.976,710,4.585,711,5.309,712,6.537,713,6.537,714,5.749,715,6.537,716,6.537,717,6.537,718,6.537,719,3.854,720,6.537,721,6.537,722,6.537,723,6.537,724,8.703,725,4.965,726,8.037,727,6.537,728,8.037,729,8.037,730,6.537,731,6.537,732,6.537,733,3.729,734,6.537,735,2.214,736,6.537,737,6.537,738,6.537]],["title/classes/BlueprintFileDTO.html",[0,0.341,739,2.91]],["body/classes/BlueprintFileDTO.html",[0,0.669,2,0.373,3,0.054,4,0.047,5,0.054,7,0.272,12,0.787,14,0.084,15,0.209,18,0.127,19,0.006,20,0.45,21,0.161,24,0.211,27,0.968,34,0.088,37,0.463,44,0.454,45,1.437,49,1.544,53,0.011,54,0.011,55,0.011,56,0.011,91,1.698,98,1.714,106,0.793,114,1.172,115,1.817,171,0.573,342,2.054,372,1.509,373,1.756,379,0.76,382,1.641,406,1.614,407,1.641,419,1.053,421,1.113,422,1.443,430,2.366,433,0.904,461,1.851,485,1.844,487,0.755,501,0.807,514,1.172,515,2.226,538,0.922,542,2.182,551,2.1,552,2.1,553,2.1,554,2.1,555,2.1,556,2.1,557,2.1,558,2.1,559,2.1,564,1.669,575,1.786,589,1.927,603,2.812,605,2.182,629,2.732,739,5.014,740,3.803,741,5.757,742,5.757,743,2.27,744,5.757,745,5.757,746,3.516,747,4.531,748,4.531,749,3.803,750,3.803,751,3.651,752,3.803,753,3.651,754,3.803,755,3.803,756,3.803,757,4.901,758,4.705,759,3.803,760,3.803,761,2.226,762,3.803,763,3.803,764,4.531,765,3.803,766,3.803,767,3.651,768,3.651,769,3.651,770,3.803,771,3.803,772,3.651]],["title/classes/BorderNetworkDTO.html",[0,0.341,773,3.459]],["body/classes/BorderNetworkDTO.html",[0,0.646,2,0.417,3,0.061,4,0.052,5,0.061,7,0.304,9,0.885,14,0.094,15,0.224,18,0.132,19,0.006,20,0.446,21,0.168,34,0.085,37,0.517,44,0.442,49,1.778,53,0.012,54,0.012,55,0.012,56,0.012,77,3.672,91,1.619,104,1.173,106,0.887,171,0.556,373,2.883,379,0.849,419,1.004,421,1.062,422,1.376,485,1.57,499,3.078,514,1.621,538,1.031,579,2.095,743,2.539,773,6.556,774,4.945,775,3.935,776,6.641,777,3.202,778,6.436,779,6.436,780,3.153,781,6.436,782,6.436,783,4.082,784,4.252,785,5.78,786,6.117,787,3.672,788,4.945,789,2.488,790,4.945,791,4.945,792,4.446]],["title/interfaces/CommonModule.html",[286,2.355,411,1.478]],["body/interfaces/CommonModule.html",[0,0.671,3,0.046,4,0.04,5,0.046,9,0.743,11,0.977,12,0.585,14,0.072,15,0.188,18,0.128,19,0.006,20,0.426,24,0.345,34,0.091,38,0.952,39,1.521,44,0.372,46,1.899,53,0.009,54,0.009,55,0.009,56,0.009,94,1.355,103,1.381,116,2.996,127,1.55,162,2.436,171,0.343,177,1.912,202,1.782,219,1.993,277,2.726,286,4.026,342,1.229,343,2.736,345,1.634,367,2.492,368,2.562,369,1.801,370,2.222,376,1.048,379,0.851,382,1.904,385,2.865,386,2.424,387,2.367,388,2.865,389,2.367,390,2.634,391,2.367,392,3.484,393,2.562,394,3.484,395,2.562,396,3.484,397,2.562,398,3.14,399,2.428,400,3.769,401,2.309,402,2.726,403,1.498,404,2.072,405,2.183,406,1.873,407,1.904,408,2.222,409,2.255,410,2.428,411,2.527,412,2.424,413,4.234,414,3.688,415,3.688,416,3.688,417,4.679,418,4.522,419,0.743,420,2.865,421,0.785,422,1.018,423,3.389,424,2.532,425,3.483,426,3.483,427,2.582,428,2.347,429,3.483,430,2.745,431,3.484,432,2.562,433,0.599,434,2.061,435,2.562,436,2.562,437,2.203,438,2.562,439,3.483,440,2.996,441,3.483,442,2.037,443,2.929,444,0.925,445,3.185,446,3.483,447,2.562,448,1.694,449,2.562,450,2.309,451,2.154,452,2.154,453,1.694,454,2.106,455,2.562,456,2.562,457,2.309,458,3.218,459,2.492,460,2.255,461,1.048,462,3.14,463,4.005,464,2.367,465,2.367,466,3.389,467,4.133,468,3.925,469,3.493,470,3.483,471,3.958,472,3.851,473,3.404,474,2.367,475,4.133,476,0.938,477,2.492,478,2.309,479,2.367,576,1.135]],["title/components/ComposerComponent.html",[57,0.97,173,1.918]],["body/components/ComposerComponent.html",[0,0.21,3,0.028,4,0.024,5,0.065,7,0.139,9,0.982,11,0.709,12,0.713,14,0.043,15,0.129,18,0.129,19,0.006,20,0.374,21,0.17,24,0.291,26,0.785,27,0.771,29,2.658,31,2.671,32,2.46,33,1.136,34,0.028,37,0.691,38,0.985,39,1.467,41,1.136,44,0.429,45,1.172,47,1.148,48,1.208,52,1.052,53,0.005,54,0.005,55,0.005,56,0.005,57,0.934,58,1.208,59,2.18,60,1.261,61,1.261,62,1.261,66,1.261,67,4.101,68,3.823,70,1.925,72,1.925,74,4.11,76,3.577,77,4.362,80,4.209,81,5.944,84,1.303,85,2.134,94,2.293,97,0.553,98,1.06,99,0.544,102,3.704,103,1.318,106,1.12,107,2.48,108,2.621,109,2.413,114,0.934,115,1.78,127,1.448,129,1.942,130,1.942,136,1.91,137,0.961,138,3.419,140,1.625,149,3.896,161,2.03,163,2.134,164,1.261,165,1.967,166,1.53,167,1.261,168,1.878,169,1.261,170,1.183,171,0.616,172,1.289,173,3.185,174,2.473,175,1.183,176,1.208,177,1.622,178,1.289,179,1.208,180,0.888,181,1.289,182,1.208,183,1.289,184,1.289,185,1.159,186,1.289,187,1.183,188,1.289,189,1.159,190,1.183,191,1.289,192,1.159,193,1.159,194,1.289,195,1.289,196,1.208,197,1.289,198,1.159,199,1.208,200,1.289,201,1.234,202,1.496,203,1.234,204,2.011,205,1.234,206,1.234,207,1.159,208,1.159,209,1.289,210,1.159,211,1.159,212,1.159,213,1.289,214,1.183,215,1.289,216,1.289,217,1.289,219,2.009,230,5.944,245,1.205,251,1.449,252,1.399,274,3.168,338,3.143,343,0.944,344,2.27,345,0.978,361,4.626,372,0.948,376,1.689,433,0.777,434,2.9,444,0.777,445,2.9,450,2.996,454,2.964,459,2.328,461,1.633,473,2.53,478,2.996,485,0.58,487,0.803,501,0.643,514,0.934,528,1.642,564,1.635,597,2.722,599,1.612,611,1.481,625,1.093,653,2.888,686,5.233,709,3.524,743,1.159,793,9.198,794,2.939,795,2.159,796,2.159,797,4.586,798,4.586,799,3.469,800,4.401,801,4.586,802,2.328,803,6.498,804,1.318,805,3.577,806,5.64,807,4.586,808,4.632,809,5.032,810,4.773,811,5.64,812,5.032,813,5.64,814,5.685,815,6.533,816,6.533,817,3.891,818,6.078,819,4.586,820,2.947,821,2.461,822,3.524,823,4.092,824,2.925,825,2.939,826,2.219,827,4.461,828,1.554,829,4.092,830,4.092,831,2.939,832,4.895,833,5.315,834,5.685,835,6.533,836,5.685,837,5.315,838,4.586,839,2.618,840,5.685,841,5.876,842,5.233,843,2.939,844,4.586,845,5.233,846,2.939,847,1.809,848,3.33,849,3.524,850,4.092,851,2.794,852,3.524,853,3.323,854,2.939,855,3.03,856,3.03,857,2.939,858,3.168,859,4.586,860,4.773,861,2.939,862,4.092,863,2.939,864,2.939,865,3.72,866,7.059,867,3.524,868,2.939,869,4.092,870,2.328,871,2.461,872,3.168,873,4.586,874,2.939,875,4.092,876,4.092,877,3.767,878,2.939,879,2.939,880,3.767,881,2.939,882,3.767,883,2.939,884,4.209,885,2.939,886,1.093,887,2.623,888,2.623,889,2.623,890,2.623,891,2.623,892,1.795,893,2.414,894,2.623,895,1.942,896,4.092,897,2.623,898,4.092,899,2.939,900,2.623,901,2.939,902,2.623,903,2.939,904,4.632,905,2.623,906,2.939,907,2.414,908,1.625,909,2.939,910,5.032,911,5.64,912,7.322,913,1.416,914,2.939,915,2.414,916,2.939,917,4.092,918,2.414,919,2.623,920,2.414,921,2.623,922,4.092,923,1.942,924,2.939,925,2.623,926,2.939,927,4.092,928,4.092,929,2.623,930,2.03,931,2.939,932,2.623,933,2.939,934,2.623,935,4.092,936,4.092,937,4.092,938,3.33,939,3.524,940,2.623,941,2.623]],["title/classes/ConfigurationTemplateDTO.html",[0,0.341,531,2.044]],["body/classes/ConfigurationTemplateDTO.html",[0,0.683,2,0.237,3,0.034,4,0.03,5,0.034,7,0.173,9,0.942,12,0.565,13,1.333,14,0.053,15,0.201,18,0.132,19,0.006,20,0.452,21,0.166,24,0.237,27,0.614,30,1.534,34,0.09,37,0.734,38,1.136,39,0.732,44,0.457,45,1.487,49,1.551,53,0.007,54,0.007,55,0.007,56,0.007,91,1.719,96,1.502,97,1.018,104,0.798,106,1.048,114,0.744,115,1.154,171,0.644,180,0.576,219,0.96,352,1.238,369,1.051,370,1.216,371,1.603,372,1.454,373,2.174,376,1.156,379,0.846,382,1.838,402,1.134,403,1.966,404,2.211,405,2.108,406,1.025,407,1.543,408,1.801,419,1.066,421,1.127,422,1.461,433,1.101,442,1.115,444,0.927,461,1.522,476,1.232,480,1.445,484,1.639,485,1.883,486,2.428,487,0.768,488,2.428,489,2.428,496,2.272,497,2.272,498,1.639,499,2.492,500,1.134,501,0.512,502,1.639,503,1.568,504,1.333,505,1.639,506,1.639,507,1.639,508,1.639,509,1.216,510,1.568,511,1.639,512,1.603,513,1.216,514,0.744,515,1.413,516,3.057,517,1.639,518,1.639,519,1.115,520,1.639,521,2.322,522,1.639,523,3.197,524,1.639,525,1.639,526,1.534,527,3.617,528,1.308,529,2.374,530,2.428,531,2.765,532,2.892,533,2.892,534,2.892,535,2.892,536,2.892,537,2.892,538,1.276,539,2.892,540,1.568,541,2.322,542,1.385,543,2.272,544,1.639,545,1.639,546,2.374,547,1.639,548,1.639,549,2.322,550,1.639,551,1.333,552,1.333,553,1.333,554,1.333,555,1.333,556,1.333,557,1.333,558,1.333,559,1.333,560,1.639,561,1.639,562,1.639,563,1.603,564,1.569,565,1.603,566,1.603,567,1.603,568,1.603,569,1.603,570,1.603,571,1.603,572,0.831,573,1.355,574,1.603,575,1.679,576,0.844,577,1.639,578,1.639,579,0.886,580,1.639,581,1.534,582,1.568,583,2.179,584,0.96,585,1.359,586,1.096,587,2.428,588,1.174,589,1.787,590,1.154,591,1.385,592,2.374,593,1.333,594,1.603,595,2.892,596,1.603,597,1.359,598,2.827,599,2.265,600,1.568,601,1.639,602,1.534,603,1.385,604,1.639,605,1.385,743,3.143,942,3.655,943,3.655,944,3.655,945,3.655,946,3.655,947,3.655,948,3.655,949,3.655,950,3.655,951,3.655,952,3.655]],["title/classes/ConstraintsMSD.html",[0,0.341,953,2.137]],["body/classes/ConstraintsMSD.html",[0,0.692,2,0.273,3,0.04,4,0.034,5,0.04,7,0.199,9,0.997,11,0.958,12,0.369,13,1.479,14,0.062,15,0.227,18,0.102,19,0.006,20,0.432,21,0.13,24,0.155,31,1.537,34,0.091,37,0.673,44,0.459,45,1.22,47,1.75,53,0.008,54,0.008,55,0.008,56,0.008,91,1.742,103,0.872,104,0.885,106,1.05,109,1.285,171,0.294,239,1.629,259,1.891,342,1.055,372,1.009,379,0.526,411,1.863,412,1.163,419,1.081,421,1.138,422,1.475,433,1.132,444,1.092,448,3.256,476,1.456,485,1.902,487,0.662,500,1.308,501,1.207,514,0.858,538,0.675,573,1.055,576,1.616,579,2.029,584,1.107,586,1.264,588,1.816,589,2.023,611,1.22,615,2.19,616,2.19,618,2.19,619,1.598,620,2.995,621,1.428,622,1.928,623,1.567,624,1.567,625,1.567,626,1.509,627,1.509,629,1.402,640,1.741,644,1.567,761,1.629,777,2.779,780,3.389,789,1.629,802,1.867,953,3.137,954,1.935,955,2.756,956,3.211,957,3.137,958,3.137,959,3.137,960,3.137,961,4.215,962,3.137,963,4.215,964,3.137,965,4.215,966,2.693,967,2.693,968,2.693,969,2.693,970,2.693,971,2.575,972,2.633,973,2.633,974,2.633,975,3.342,976,2.633,977,1.935,978,1.935,979,1.697,980,1.808,981,2.633,982,1.891,983,1.891,984,2.693,985,1.891,986,2.693,987,1.891,988,2.633,989,3.211,990,1.935,991,1.935,992,1.935,993,3,994,3.419,995,1.848,996,2.149,997,1.935,998,1.891,999,1.808,1000,3.067,1001,1.935,1002,1.732,1003,1.769,1004,1.935,1005,1.891,1006,1.354,1007,3.137,1008,3.419,1009,1.662,1010,1.848,1011,1.831,1012,2.693,1013,2.693,1014,2.693,1015,2.756,1016,2.633,1017,1.891,1018,1.891,1019,1.891]],["title/classes/ConsumerInterfaceLinkDTO.html",[0,0.341,583,1.918]],["body/classes/ConsumerInterfaceLinkDTO.html",[0,0.687,2,0.247,3,0.036,4,0.031,5,0.036,7,0.18,9,0.973,12,0.579,13,1.375,14,0.056,15,0.205,18,0.106,19,0.006,20,0.452,21,0.123,24,0.243,27,0.641,30,1.6,34,0.09,37,0.672,38,1.037,39,0.764,44,0.458,45,1.486,49,1.572,53,0.007,54,0.007,55,0.007,56,0.007,91,1.728,96,1.566,97,0.717,104,0.823,106,1.067,114,0.776,115,1.203,171,0.648,180,0.6,219,1.001,352,1.291,369,1.084,370,1.268,371,1.671,372,1.405,373,2.218,376,1.192,379,0.848,382,1.883,402,1.182,403,2.015,404,2.256,405,2.16,406,1.069,407,1.592,408,1.858,419,1.072,421,1.133,422,1.468,433,1.122,442,1.162,444,0.944,461,1.553,476,1.262,480,1.49,484,1.709,485,1.893,486,2.504,487,0.762,488,2.504,489,2.504,496,2.343,497,2.343,498,1.709,499,2.554,500,1.182,501,0.534,502,1.709,503,1.635,504,1.39,505,1.709,506,1.709,507,1.709,508,1.709,509,1.268,510,1.635,511,1.709,512,1.671,513,1.268,514,0.776,515,1.473,516,3.12,517,1.709,518,1.709,519,1.162,520,1.709,521,2.394,522,1.709,523,2.504,524,1.709,525,1.709,526,1.6,527,3.665,528,1.364,529,1.671,530,1.709,531,2.394,532,1.709,533,1.709,534,1.709,535,1.709,536,1.709,537,1.709,538,1.164,539,1.709,540,1.635,541,2.394,542,1.445,543,2.343,544,1.709,545,1.709,546,2.448,547,1.709,548,1.709,549,2.394,550,1.709,551,1.39,552,1.39,553,1.39,554,1.39,555,1.39,556,1.39,557,1.39,558,1.39,559,1.39,560,1.709,561,1.709,562,1.709,563,1.671,564,1.618,565,1.671,566,1.671,567,1.671,568,1.671,569,1.671,570,1.671,571,1.671,572,0.867,573,1.397,574,1.671,575,1.732,576,0.881,577,1.709,578,1.709,579,0.924,580,1.709,581,2.343,582,2.394,583,2.659,584,1.735,585,2.456,586,1.981,587,2.504,588,1.211,589,1.818,590,1.203,591,1.445,592,2.448,593,1.39,594,1.671,595,2.963,596,1.671,597,1.417,598,2.897,599,2.321,600,1.635,601,1.709,602,1.6,603,1.445,604,1.709,605,1.445,1020,3.811,1021,3.811,1022,3.811]],["title/classes/ConsumerInterfaceLinkExport.html",[0,0.341,639,2.809]],["body/classes/ConsumerInterfaceLinkExport.html",[0,0.68,2,0.361,3,0.052,4,0.045,5,0.052,7,0.263,9,1.032,11,0.808,12,0.708,13,1.789,14,0.081,15,0.25,18,0.118,19,0.006,20,0.439,21,0.15,24,0.205,34,0.089,37,0.584,38,0.794,44,0.456,53,0.01,54,0.01,55,0.01,56,0.01,91,1.72,94,2.004,103,1.152,166,1.971,171,0.389,342,1.394,372,1.359,379,0.708,412,1.537,419,1.067,421,1.118,422,1.449,433,0.985,444,1.083,461,1.828,476,1.388,480,1.939,485,1.876,487,0.458,501,1.2,538,1.163,564,1.615,573,1.394,575,1.728,576,1.678,584,2.123,585,2.071,586,2.178,588,1.857,589,2.011,590,1.759,593,2.032,606,4.283,607,3.403,608,3.285,609,4.283,610,3.403,611,1.163,612,5.05,615,2.65,616,2.65,617,4.283,618,2.65,619,2.112,620,2.071,621,1.887,622,1.79,623,2.071,624,2.071,625,2.071,626,1.994,627,1.994,628,3.08,629,1.854,630,4.144,631,4.144,632,4.283,633,3.285,634,4.144,635,3.403,636,3.285,637,4.283,638,3.285,639,4.765,640,1.615,641,3.285,642,3.403,643,4.436,644,2.701,645,4.436,646,4.144,647,3.403,648,3.403,1023,6.481,1024,5.571,1025,5.571,1026,5.571]],["title/components/ControlTemplate.html",[57,0.97,175,1.918]],["body/components/ControlTemplate.html",[0,0.501,3,0.05,4,0.043,5,0.05,7,0.249,11,0.779,12,0.462,14,0.077,18,0.122,19,0.006,20,0.309,21,0.162,24,0.289,26,1.406,27,1.322,32,2.169,33,2.036,34,0.066,37,0.563,38,0.998,39,1.403,44,0.32,48,2.165,52,1.885,53,0.01,54,0.01,55,0.01,56,0.01,57,1.601,58,2.165,59,2.036,60,2.259,61,2.259,62,2.259,66,2.259,67,4.312,68,4.077,70,2.938,72,2.938,76,3.34,104,1.032,106,0.964,109,1.606,145,2.604,157,4.047,162,1.921,164,2.259,165,3.003,166,1.429,167,2.259,168,2.47,169,2.259,170,2.12,171,0.657,172,2.31,173,2.12,174,3.448,175,3.511,176,2.165,177,1.643,178,2.31,179,2.165,180,1.482,181,2.31,182,2.165,183,2.31,184,2.31,185,2.077,186,2.31,187,2.12,188,2.31,189,2.077,190,2.12,191,2.31,192,2.077,193,2.077,194,2.31,195,2.31,196,2.165,197,2.31,198,2.077,199,2.165,200,2.31,201,2.211,202,2.105,203,2.211,204,3.07,205,2.211,206,2.211,207,2.077,208,2.077,209,2.31,210,2.077,211,2.077,212,2.077,213,2.31,214,2.12,215,2.31,216,2.31,217,2.31,245,1.839,251,1.198,252,1.606,267,1.997,268,2.077,269,2.036,343,1.692,369,1.023,376,1.124,379,0.734,386,2.473,444,0.853,453,2.415,487,0.433,509,1.753,514,1.072,519,2.555,664,3.217,711,5.762,735,2.372,775,3.887,817,5.117,820,2.818,895,3.479,913,2.538,1027,4.7,1028,6.246,1029,5.327,1030,5.749,1031,6.246,1032,7.015,1033,6.246,1034,6.437,1035,7.476,1036,4.252,1037,5.267,1038,5.267,1039,5.267,1040,5.267,1041,5.267,1042,4.835,1043,6.246,1044,4.7,1045,4.326,1046,4.7,1047,4.047,1048,4.7,1049,2.673,1050,4.7,1051,3.757,1052,4.7,1053,4.326,1054,4.7,1055,4.7,1056,4.7,1057,4.7,1058,4.7,1059,4.7,1060,4.7,1061,4.7,1062,4.326,1063,6.246,1064,3.005,1065,4.7,1066,3.217,1067,5.267,1068,4.047,1069,3.005,1070,3.479,1071,3.479,1072,4.7,1073,3.34,1074,5.267,1075,3.005,1076,5.267,1077,2.673,1078,5.267,1079,3.993,1080,3.479]],["title/classes/DataInput.html",[0,0.341,1081,2.91]],["body/classes/DataInput.html",[0,0.681,2,0.382,3,0.055,4,0.048,5,0.055,7,0.278,9,0.656,11,0.656,14,0.086,15,0.212,18,0.144,19,0.006,20,0.437,21,0.172,27,0.991,32,1.626,34,0.089,37,0.703,41,2.912,46,2.279,47,1.475,49,1.645,50,3.407,53,0.011,54,0.011,55,0.011,56,0.011,99,1.712,106,1.245,127,1.861,180,1.424,352,1.997,369,1.612,379,0.517,420,3.231,487,0.682,519,2.297,611,1.524,622,2.42,725,4.736,733,3.363,824,3.458,1081,5.812,1082,5.044,1083,3.739,1084,4.33,1085,6.036,1086,5.265,1087,5.265,1088,5.895,1089,5.895,1090,5.895,1091,5.895,1092,5.895,1093,4.297,1094,5.343,1095,4.442,1096,5.895,1097,3.259,1098,3.739,1099,5.265,1100,3.6,1101,2.992,1102,3.6,1103,3.739,1104,3.739,1105,4.442,1106,3.363,1107,3.739,1108,3.6,1109,3.6,1110,3.075,1111,3.739,1112,3.739,1113,3.6,1114,2.856,1115,4.165,1116,3.739,1117,4.297,1118,3.6,1119,3.6,1120,3.6,1121,3.476,1122,3.739]],["title/classes/DataInputCheck.html",[0,0.341,1108,2.91]],["body/classes/DataInputCheck.html",[0,0.678,2,0.373,3,0.054,4,0.047,5,0.054,7,0.272,9,0.641,11,0.641,14,0.084,15,0.209,18,0.144,19,0.006,20,0.436,21,0.174,27,0.969,32,1.589,34,0.089,37,0.697,41,2.87,46,2.228,47,1.442,49,1.632,50,3.391,53,0.011,54,0.011,55,0.011,56,0.011,99,1.753,106,1.266,127,1.819,180,1.414,352,1.952,369,1.684,375,4.22,376,1.962,379,0.505,420,2.472,487,0.61,519,2.264,611,1.517,622,1.851,725,4.685,733,3.287,824,2.645,1081,6.045,1082,3.984,1083,3.654,1084,3.872,1085,6.008,1086,5.209,1087,5.209,1093,4.235,1094,5.298,1095,4.377,1097,3.186,1098,3.654,1099,5.502,1100,3.519,1101,2.924,1102,3.519,1103,3.654,1104,3.654,1105,4.377,1106,4.235,1107,4.708,1108,4.534,1109,5.016,1110,3.005,1111,3.654,1112,3.654,1113,3.519,1114,2.814,1115,4.105,1116,3.654,1117,4.235,1118,3.519,1119,3.519,1120,3.519,1121,3.398,1122,3.654,1123,5.762,1124,4.733,1125,4.733,1126,4.733,1127,4.733,1128,4.733,1129,4.733]],["title/components/DataInputComponent.html",[57,0.97,176,1.958]],["body/components/DataInputComponent.html",[0,0.292,3,0.038,4,0.033,5,0.038,7,0.192,9,0.652,11,1.027,12,0.514,14,0.06,15,0.165,18,0.116,19,0.006,20,0.18,21,0.162,24,0.252,26,1.089,27,0.986,32,2.194,33,1.576,34,0.038,37,0.639,38,0.836,39,1.175,41,3.299,47,1.467,48,1.676,49,1.103,50,2.687,52,1.46,53,0.008,54,0.008,55,0.013,56,0.008,57,1.194,58,1.676,59,1.576,60,1.749,61,1.749,62,1.749,66,1.749,67,4.239,68,3.991,70,2.461,72,2.461,74,2.882,84,1.586,86,3.242,87,4.151,94,2.408,97,1.103,98,1.355,99,1.085,102,3.476,104,0.864,107,1.986,109,1.244,136,1.223,149,2.817,153,4.816,154,2.96,164,1.749,165,2.515,166,1.106,167,1.749,168,2.213,169,1.749,170,1.641,171,0.621,172,1.788,173,1.641,174,3.011,175,1.641,176,3.403,177,2.088,178,1.788,179,1.676,180,1.439,181,1.788,182,1.676,183,1.788,184,1.788,185,1.608,186,1.788,187,1.641,188,1.788,189,1.608,190,1.641,191,1.788,192,1.608,193,1.608,194,1.788,195,1.788,196,1.676,197,1.788,198,1.608,199,1.676,200,1.788,201,1.712,202,1.762,203,1.712,204,2.571,205,1.712,206,1.712,207,1.608,208,1.608,209,1.788,210,1.608,211,1.608,212,1.608,213,1.788,214,1.641,215,1.788,216,1.788,217,1.788,245,1.54,251,1.707,252,2.426,312,7.935,323,3.349,332,2.791,338,1.676,343,1.31,421,0.689,431,2.692,454,3.22,487,0.717,501,0.822,519,1.788,572,1.883,597,2.18,611,1.503,675,2.069,804,1.829,805,4.354,817,4.585,826,2.449,827,3.147,865,2.757,908,3.242,913,1.965,1029,3.581,1051,2.188,1064,4.283,1082,4.772,1084,3.058,1093,3.345,1095,4.048,1097,4.151,1115,4.579,1117,4.283,1118,3.581,1119,3.581,1120,2.49,1121,4.048,1130,4.077,1131,5.724,1132,5.232,1133,4.816,1134,4.505,1135,5.232,1136,5.232,1137,5.186,1138,4.505,1139,7.413,1140,5.232,1141,4.816,1142,5.232,1143,3.345,1144,3.345,1145,6.866,1146,5.863,1147,7.953,1148,8.281,1149,8.281,1150,8.731,1151,7.953,1152,2.96,1153,5.863,1154,4.077,1155,7.507,1156,4.959,1157,4.077,1158,5.863,1159,4.077,1160,5.863,1161,5.863,1162,5.863,1163,4.077,1164,3.719,1165,4.816,1166,5.863,1167,5.863,1168,8.533,1169,7.953,1170,5.863,1171,4.077,1172,5.232,1173,3.147,1174,4.077,1175,5.863,1176,5.232,1177,2.404,1178,4.077,1179,4.077,1180,4.077,1181,4.077,1182,4.077,1183,5.863,1184,4.077,1185,5.863,1186,3.638,1187,5.863,1188,3.638,1189,6.866,1190,5.863,1191,5.863,1192,4.077,1193,4.077,1194,4.505,1195,5.863,1196,4.077,1197,5.768,1198,5.863,1199,5.863,1200,5.863,1201,5.232,1202,5.863,1203,5.863]],["title/classes/DataInputElement.html",[0,0.341,1097,2.634]],["body/classes/DataInputElement.html",[0,0.688,2,0.403,3,0.058,4,0.051,5,0.058,7,0.294,9,0.692,11,0.692,14,0.091,15,0.219,18,0.14,19,0.006,20,0.432,21,0.115,27,1.045,28,4.108,31,2.268,32,2.149,34,0.09,37,0.626,41,3.449,46,2.404,47,1.556,49,1.466,50,3.289,53,0.011,54,0.011,55,0.011,56,0.011,106,1.229,127,1.963,180,1.405,352,2.107,369,1.652,379,0.545,420,2.667,487,0.699,519,2.377,611,1.54,622,1.997,725,3.548,733,4.445,824,2.855,1081,5.874,1082,4.182,1083,3.944,1084,4.439,1085,6.1,1086,3.944,1087,3.944,1093,3.548,1094,5.198,1095,3.667,1097,4.308,1098,3.944,1099,5.397,1100,3.798,1101,3.156,1102,3.798,1103,3.944,1104,3.944,1105,4.595,1106,3.548,1107,3.944,1108,3.798,1109,3.798,1110,3.244,1111,3.944,1112,3.944,1113,3.798,1114,2.954,1115,4.308,1116,3.944,1117,4.445,1118,3.798,1119,3.798,1120,3.798,1121,3.667,1122,3.944,1204,6.219]],["title/classes/DataInputReturned.html",[0,0.341,1115,2.634]],["body/classes/DataInputReturned.html",[0,0.685,2,0.394,3,0.057,4,0.049,5,0.057,7,0.287,9,0.676,11,0.676,14,0.089,15,0.216,18,0.142,19,0.006,20,0.43,21,0.156,27,1.022,32,2.119,34,0.09,37,0.677,41,3.421,46,2.35,47,1.922,49,1.445,50,3.266,53,0.011,54,0.011,55,0.011,56,0.011,99,1.422,106,1.257,127,1.918,180,1.394,352,2.602,369,1.635,379,0.533,420,2.607,487,0.692,519,2.342,611,1.533,622,1.952,725,3.467,733,3.467,743,2.397,824,2.79,1081,5.78,1082,4.748,1083,3.854,1084,4.006,1085,6.072,1086,3.854,1087,3.854,1093,3.467,1094,5.143,1095,3.584,1097,3.36,1098,3.854,1099,5.341,1100,3.712,1101,3.084,1102,3.712,1103,3.854,1104,3.854,1105,4.529,1106,3.467,1107,3.854,1108,3.712,1109,3.712,1110,3.17,1111,3.854,1112,3.854,1113,3.712,1114,3.192,1115,4.892,1116,3.854,1117,4.382,1118,5.143,1119,5.143,1120,4.691,1121,4.529,1122,3.854,1205,6.078,1206,6.078,1207,6.078]],["title/classes/DataInputReturnedV2.html",[0,0.341,1208,3.913]],["body/classes/DataInputReturnedV2.html",[0,0.531,2,0.481,3,0.07,4,0.06,5,0.07,7,0.351,14,0.108,15,0.244,18,0.138,19,0.006,20,0.383,21,0.171,32,2.049,34,0.07,47,1.859,53,0.014,54,0.014,55,0.014,56,0.014,180,1.492,487,0.61,611,1.189,1051,4.933,1082,5.084,1114,2.816,1208,7.127,1209,7.427,1210,7.427,1211,7.427,1212,8.202,1213,8.202,1214,7.427,1215,7.427,1216,7.427]],["title/classes/DataInputSelection.html",[0,0.341,1102,2.91]],["body/classes/DataInputSelection.html",[0,0.676,2,0.368,3,0.053,4,0.046,5,0.053,7,0.268,9,0.632,11,0.632,14,0.083,15,0.207,18,0.145,19,0.006,20,0.435,21,0.177,27,0.955,32,1.566,34,0.089,37,0.693,41,2.843,46,2.195,47,1.421,49,1.623,50,3.381,53,0.01,54,0.01,55,0.01,56,0.01,99,1.748,106,1.261,127,1.793,180,1.408,352,1.924,369,1.675,375,4.203,376,1.954,379,0.645,420,2.436,487,0.604,519,2.243,611,1.512,622,1.824,725,4.653,733,3.24,824,2.607,1081,6.035,1082,4.63,1083,3.602,1084,3.836,1085,5.99,1086,5.173,1087,5.173,1093,4.195,1094,5.691,1095,4.336,1097,3.14,1098,3.602,1099,5.471,1100,3.468,1101,2.882,1102,4.492,1103,5.173,1104,5.173,1105,4.809,1106,3.24,1107,3.602,1108,3.468,1109,3.468,1110,2.962,1111,3.602,1112,3.602,1113,3.468,1114,2.788,1115,4.066,1116,3.602,1117,4.195,1118,3.468,1119,3.468,1120,3.468,1121,3.348,1122,3.602,1124,4.664,1125,4.664,1126,4.664,1127,4.664,1128,4.664,1129,4.664,1217,5.679,1218,5.679,1219,5.679]],["title/classes/DataInputText.html",[0,0.341,1100,2.91]],["body/classes/DataInputText.html",[0,0.678,2,0.373,3,0.054,4,0.047,5,0.054,7,0.272,9,0.641,11,0.641,14,0.084,15,0.209,18,0.144,19,0.006,20,0.437,21,0.174,27,0.969,32,1.589,34,0.089,37,0.697,41,2.87,46,2.228,47,1.442,49,1.632,50,3.426,53,0.011,54,0.011,55,0.011,56,0.011,99,1.753,106,1.237,127,1.819,180,1.414,352,1.952,369,1.684,375,4.22,376,1.962,379,0.505,420,2.472,487,0.61,519,2.264,611,1.517,622,1.851,725,4.685,733,3.287,824,2.645,1081,6.045,1082,3.984,1083,3.654,1084,3.872,1085,6.008,1086,5.209,1087,5.209,1093,4.235,1094,5.298,1095,4.377,1097,3.186,1098,4.708,1099,5.502,1100,4.534,1101,4.168,1102,3.519,1103,3.654,1104,3.654,1105,4.377,1106,3.287,1107,3.654,1108,3.519,1109,3.519,1110,3.005,1111,3.654,1112,3.654,1113,3.519,1114,2.814,1115,4.105,1116,3.654,1117,4.235,1118,3.519,1119,3.519,1120,3.519,1121,3.398,1122,3.654,1124,4.733,1125,4.733,1126,4.733,1127,4.733,1128,4.733,1129,4.733,1220,5.762]],["title/components/DataInputV2Component.html",[57,0.97,179,1.958]],["body/components/DataInputV2Component.html",[0,0.201,3,0.026,4,0.023,5,0.026,7,0.133,8,2.207,11,1.016,12,0.789,14,0.041,15,0.125,18,0.133,19,0.006,20,0.332,21,0.173,24,0.201,26,0.751,27,1.208,28,4.47,29,0.919,31,2,32,2.212,33,1.087,34,0.026,37,0.684,38,0.632,39,0.888,41,1.087,44,0.389,45,1.428,47,1.95,48,1.156,49,0.529,50,3.047,52,1.007,53,0.005,54,0.005,55,0.005,56,0.005,57,0.902,58,1.156,59,1.087,60,1.206,61,1.206,62,1.206,66,1.206,67,4.08,68,3.798,70,1.86,72,1.86,74,3.366,83,3.553,84,1.267,86,2.45,87,3.439,94,1.716,97,1.031,98,1.267,99,1.392,102,3.857,104,1.059,106,1.036,107,2.994,108,1.586,109,1.672,114,0.573,116,3.224,128,3.061,153,2.31,164,1.206,165,1.901,166,1.202,167,1.206,168,1.834,169,1.206,170,1.132,171,0.56,172,1.233,173,1.132,174,2.404,175,1.132,176,2.253,177,2.129,178,1.233,179,2.954,180,1.59,181,1.233,182,1.156,183,1.233,184,1.233,185,1.109,186,1.233,187,1.132,188,1.233,189,1.109,190,1.132,191,1.233,192,1.109,193,1.109,194,1.233,195,1.233,196,1.156,197,1.233,198,1.109,199,1.156,200,1.233,201,1.181,202,1.46,203,1.181,204,1.943,205,1.181,206,1.181,207,1.109,208,1.109,209,1.233,210,1.109,211,1.109,212,1.109,213,1.233,214,1.132,215,1.233,216,1.233,217,1.233,245,1.164,251,1.711,252,2.064,316,8.328,332,2.516,338,1.156,343,0.903,344,2.207,424,2.078,427,2.119,442,0.858,444,0.825,451,1.233,480,0.751,487,0.77,501,0.394,509,1.474,519,2.446,572,1.711,597,2.313,599,2.738,611,1.471,675,1.428,676,1.858,692,1.718,697,1.351,725,3.548,735,0.953,795,0.953,796,0.953,800,3.787,804,1.262,805,3.477,817,3.799,820,3.137,826,2.109,847,1.748,848,3.217,851,3.298,852,3.404,855,3.622,856,2.927,872,5.384,892,2.706,908,2.45,1034,3.404,1036,2.782,1051,2.942,1062,2.31,1064,3.548,1075,3.86,1082,5.009,1084,1.467,1093,4.1,1094,4.133,1095,4.435,1097,5.048,1101,1.428,1105,4.238,1109,3.348,1114,2.078,1115,3.741,1117,1.605,1131,4.77,1132,3.954,1134,4.212,1138,3.404,1139,6.401,1140,3.954,1141,3.639,1142,3.954,1143,2.528,1144,2.528,1152,2.042,1156,5.148,1172,5.55,1177,1.659,1208,4.503,1212,2.51,1213,2.51,1221,2.813,1222,3.061,1223,3.954,1224,4.516,1225,4.431,1226,6.766,1227,4.431,1228,4.431,1229,5.482,1230,4.431,1231,7.187,1232,6.22,1233,6.766,1234,7.187,1235,7.187,1236,6.22,1237,7.187,1238,5.482,1239,5.482,1240,5.55,1241,5.482,1242,3.404,1243,4.431,1244,2.813,1245,7.187,1246,2.813,1247,5.55,1248,6.22,1249,2.925,1250,6.22,1251,4.431,1252,3.061,1253,2.813,1254,4.431,1255,4.431,1256,4.431,1257,3.954,1258,4.431,1259,4.431,1260,3.639,1261,2.813,1262,3.639,1263,4.431,1264,6.22,1265,4.431,1266,2.813,1267,2.813,1268,2.813,1269,4.431,1270,4.431,1271,4.779,1272,5.482,1273,3.98,1274,5.482,1275,5.482,1276,2.967,1277,5.482,1278,4.892,1279,2.859,1280,2.642,1281,3.98,1282,5.482,1283,5.482,1284,5.482,1285,2.813,1286,4.431,1287,3.639,1288,2.813,1289,2.51,1290,2.813,1291,2.813,1292,2.813,1293,2.813,1294,2.813,1295,2.45,1296,4.431,1297,2.813,1298,2.51,1299,2.813,1300,3.639,1301,4.431,1302,2.813,1303,2.813,1304,2.813,1305,2.51,1306,2.813,1307,2.813,1308,4.431,1309,2.813,1310,2.813,1311,6.22,1312,4.431,1313,5.482,1314,2.31,1315,2.813,1316,2.813,1317,6.766,1318,4.431,1319,2.813,1320,2.813,1321,2.813,1322,2.813,1323,6.766,1324,5.482,1325,2.813,1326,2.813,1327,2.813,1328,2.813,1329,2.813,1330,2.813,1331,6.22,1332,2.813,1333,5.482,1334,2.813,1335,2.813,1336,4.431,1337,1.784,1338,1.784,1339,4.431,1340,4.503,1341,2.813,1342,4.431,1343,2.378,1344,1.659,1345,2.51,1346,2.813,1347,2.813,1348,4.431]],["title/components/DataItemComponent.html",[57,0.97,182,1.958]],["body/components/DataItemComponent.html",[0,0.287,2,0.26,3,0.038,4,0.033,5,0.038,7,0.19,8,3.317,11,0.645,12,0.762,14,0.059,15,0.163,18,0.131,19,0.006,20,0.391,21,0.167,24,0.148,26,1.073,27,1.254,32,2.444,33,1.554,34,0.038,37,0.466,38,0.827,39,1.163,44,0.428,47,2.062,48,1.652,50,2.077,52,1.439,53,0.007,54,0.007,55,0.007,56,0.007,57,1.181,58,1.652,59,1.554,60,1.724,61,1.724,62,1.724,66,1.724,67,4.233,68,3.985,70,2.436,72,2.436,74,3.72,83,3.909,84,1.574,86,3.765,87,4.123,94,1.601,97,0.756,98,0.929,99,0.744,102,3.459,104,1.099,106,1.089,107,2.878,108,2.831,109,2.274,114,1.181,115,1.832,128,4.008,136,1.205,140,2.222,154,4.213,161,4.008,162,1.466,164,1.724,165,2.489,166,1.091,167,1.724,168,2.198,169,1.724,170,1.618,171,0.619,172,1.762,173,1.618,174,2.986,175,1.618,176,1.652,177,2.042,178,1.762,179,1.652,180,1.464,181,1.762,182,3.387,183,2.986,184,1.762,185,1.585,186,1.762,187,1.618,188,1.762,189,1.585,190,1.618,191,1.762,192,1.585,193,1.585,194,1.762,195,1.762,196,1.652,197,1.762,198,1.585,199,1.652,200,1.762,201,1.687,202,1.751,203,1.687,204,2.545,205,1.687,206,1.687,207,1.585,208,1.585,209,1.762,210,1.585,211,1.585,212,1.585,213,1.762,214,1.618,215,1.762,216,1.762,217,1.762,242,3.301,245,1.524,251,1.32,252,1.77,324,8.129,332,1.494,487,0.799,504,1.466,572,1.874,611,1.44,675,2.04,678,2.489,775,4.074,824,1.845,826,2.091,827,3.114,828,1.966,851,3.27,856,3.833,872,4.008,1066,4.555,1068,3.088,1069,3.885,1073,2.549,1079,3.31,1082,4.889,1131,3.68,1133,4.766,1137,4.008,1143,3.31,1144,3.31,1152,2.918,1156,4.926,1177,2.37,1222,5.151,1224,4.213,1247,6.654,1273,4.213,1276,2.545,1281,4.213,1298,5.178,1340,3.301,1343,2.157,1344,2.37,1345,3.586,1349,4.019,1350,5.803,1351,5.803,1352,5.803,1353,5.803,1354,5.803,1355,5.803,1356,5.803,1357,5.178,1358,8.241,1359,4.926,1360,7.457,1361,5.178,1362,4.458,1363,8.496,1364,6.81,1365,6.81,1366,5.803,1367,6.076,1368,6.076,1369,6.076,1370,6.654,1371,8.698,1372,7.057,1373,6.81,1374,5.803,1375,4.019,1376,5.803,1377,5.803,1378,4.019,1379,4.766,1380,4.458,1381,5.803,1382,4.019,1383,4.019,1384,5.414,1385,5.414,1386,5.803,1387,4.019,1388,3.114,1389,4.019,1390,5.178,1391,5.803,1392,8.216,1393,5.178,1394,5.178,1395,4.019,1396,5.178,1397,4.766,1398,4.83,1399,4.019,1400,4.019,1401,4.019,1402,5.178,1403,4.019,1404,4.766,1405,3.586,1406,5.593,1407,4.019,1408,4.944,1409,4.019,1410,4.019,1411,4.019,1412,3.586,1413,4.019,1414,4.019,1415,6.076,1416,4.019,1417,5.178,1418,5.803,1419,6.81,1420,4.019]],["title/classes/DataRouteComposer.html",[0,0.341,860,3.291]],["body/classes/DataRouteComposer.html",[0,0.429,2,0.273,3,0.04,4,0.034,5,0.04,7,0.199,9,0.848,11,1.011,12,0.734,14,0.062,15,0.215,18,0.133,19,0.006,20,0.37,21,0.142,27,1.176,34,0.09,37,0.647,38,1.148,39,1.527,44,0.383,45,1.12,47,1.75,49,0.793,53,0.008,54,0.008,55,0.008,56,0.008,77,4.348,91,1.254,94,1.656,104,1.123,127,2.406,171,0.489,177,0.989,180,0.946,219,2.199,270,4.147,274,4.147,372,1.176,376,1.788,379,0.369,424,1.598,431,1.935,433,0.982,453,2.071,457,3.288,461,1.72,476,0.805,487,0.78,501,1.068,514,1.222,564,2.027,572,1.365,579,1.847,582,1.808,599,3.028,611,0.961,676,2.784,775,4.494,777,2.629,799,2.633,800,2.911,802,1.125,820,2.815,824,3.698,860,4.147,867,3.238,872,4.831,884,5.035,895,5.532,930,2.911,938,3.06,980,3,995,2.633,996,2.728,1006,2.246,1010,1.848,1011,1.831,1276,1.848,1421,3.761,1422,6.24,1423,6.24,1424,4.215,1425,4.215,1426,4.215,1427,4.215,1428,7.6,1429,3.462,1430,4.139,1431,3.06,1432,5.357,1433,3.761,1434,3.761,1435,3.761,1436,3.06,1437,3.761,1438,3.761,1439,3.761,1440,3.761,1441,3.761,1442,3.761,1443,3.761,1444,2.574,1445,3.761,1446,3.761,1447,3.761,1448,3.462,1449,3.761,1450,3.761,1451,2.404,1452,3.06,1453,2.198,1454,5.357,1455,5.357,1456,5.357,1457,3.761,1458,2.262,1459,6.507,1460,6.801,1461,5.744,1462,6.256,1463,6.256,1464,7.077,1465,8.072,1466,7.077,1467,7.077,1468,3.761,1469,3.761,1470,2.574,1471,6.24,1472,4.931,1473,2.911,1474,3.462,1475,3.462,1476,3.761,1477,5.357,1478,5.357,1479,5.357,1480,4.931,1481,5.077,1482,6.24,1483,4.931,1484,5.357,1485,5.357,1486,5.357,1487,5.357,1488,5.357,1489,5.357,1490,5.357,1491,5.357,1492,3.761,1493,3.761,1494,3.761,1495,3.761,1496,3.761,1497,3.761,1498,5.357,1499,5.357,1500,5.357,1501,5.357,1502,5.357,1503,3.462,1504,5.357,1505,3.462,1506,3.761,1507,3.761,1508,3.761,1509,3.761,1510,3.761,1511,3.06,1512,3.761]],["title/classes/DataRouteVisualizer.html",[0,0.341,1452,3.459]],["body/classes/DataRouteVisualizer.html",[0,0.433,2,0.276,3,0.04,4,0.035,5,0.04,7,0.201,9,0.852,11,1.013,12,0.736,14,0.062,15,0.216,18,0.129,19,0.006,20,0.311,21,0.112,27,1.182,34,0.09,37,0.65,38,1.153,39,1.534,44,0.384,45,1.126,47,1.76,49,1.323,53,0.008,54,0.008,55,0.008,56,0.008,77,4.368,91,1.261,94,1.668,104,1.129,127,2.417,171,0.297,177,0.999,180,0.952,219,2.207,270,4.177,274,4.177,372,0.716,376,1.794,379,0.53,424,1.614,431,1.955,433,0.986,453,2.086,457,3.307,461,1.726,476,0.814,487,0.782,501,1.073,514,1.231,564,1.234,572,1.375,579,1.856,582,1.826,599,3.037,611,0.968,676,2.812,775,4.504,777,2.641,799,1.867,800,2.941,802,1.137,820,2.831,824,3.713,860,2.941,867,3.271,872,4.858,884,5.058,895,5.55,930,2.941,938,3.091,980,3.016,995,2.652,996,2.741,1006,2.259,1010,1.867,1011,1.844,1276,1.867,1421,3.799,1422,6.275,1423,6.275,1428,7.607,1429,3.497,1430,4.153,1431,3.091,1432,5.396,1433,3.799,1434,3.799,1435,3.799,1436,3.091,1437,3.799,1438,3.799,1439,3.799,1440,3.799,1441,3.799,1442,3.799,1443,3.799,1444,2.6,1445,3.799,1446,3.799,1447,3.799,1448,3.497,1449,3.799,1450,3.799,1451,3.45,1452,4.39,1453,2.221,1454,5.396,1455,5.396,1456,5.396,1457,3.799,1458,2.285,1459,6.523,1460,6.832,1461,5.776,1462,6.274,1463,6.274,1464,7.098,1465,8.08,1466,7.098,1467,7.098,1468,3.799,1469,3.799,1470,2.6,1471,6.275,1472,4.967,1473,2.941,1474,3.497,1475,3.497,1476,3.799,1477,5.396,1478,5.396,1479,5.396,1480,4.967,1481,5.106,1482,6.275,1483,4.967,1484,5.396,1485,5.396,1486,5.396,1487,5.396,1488,5.396,1489,5.396,1490,5.396,1491,5.396,1492,3.799,1493,3.799,1494,3.799,1495,3.799,1496,3.799,1497,3.799,1498,5.396,1499,5.396,1500,5.396,1501,5.396,1502,5.396,1503,3.497,1504,5.396,1505,3.497,1506,3.799,1507,3.799,1508,3.799,1509,3.799,1510,3.799,1511,3.091,1512,3.799,1513,4.257,1514,4.257]],["title/classes/DeployInstanceDTO.html",[0,0.341,751,3.022]],["body/classes/DeployInstanceDTO.html",[0,0.668,2,0.372,3,0.054,4,0.047,5,0.054,7,0.271,12,0.76,14,0.084,15,0.209,18,0.126,19,0.006,20,0.45,21,0.161,24,0.211,27,1.246,34,0.088,44,0.453,45,1.436,49,1.543,53,0.011,54,0.011,55,0.011,56,0.011,91,1.697,98,1.712,99,1.372,106,0.791,114,1.17,115,1.814,171,0.573,342,1.438,372,1.379,373,1.752,379,0.76,382,1.638,406,1.611,407,1.638,419,1.053,421,1.113,422,1.443,430,3.045,433,0.903,461,1.751,485,1.843,487,0.755,501,0.805,514,1.17,515,2.221,538,0.92,542,2.178,551,2.096,552,2.096,553,2.096,554,2.096,555,2.096,556,2.096,557,2.096,558,2.096,559,2.096,564,1.666,575,1.782,589,1.349,603,2.178,605,2.178,629,1.912,739,4.526,740,3.795,746,3.509,747,4.526,748,4.526,749,4.895,750,4.895,751,4.699,752,5.418,753,5.202,754,5.418,755,5.418,756,3.795,757,4.895,758,4.699,759,3.795,760,3.795,761,2.221,762,3.795,763,3.795,764,4.526,765,3.795,766,3.795,767,3.644,768,3.644,769,3.644,770,3.795,771,3.795,772,3.644,1515,5.745,1516,5.745,1517,5.745,1518,5.745]],["title/components/DocsComponent.html",[57,0.97,185,1.879]],["body/components/DocsComponent.html",[0,0.384,3,0.05,4,0.044,5,0.05,7,0.253,11,0.788,14,0.078,15,0.199,18,0.116,19,0.006,20,0.373,21,0.157,24,0.291,26,1.432,27,1.191,29,2.316,32,2.42,34,0.05,37,0.569,44,0.412,45,1.134,47,2.112,50,1.92,52,1.92,57,1.442,59,2.073,60,2.3,61,2.3,62,2.3,66,2.3,67,3.039,68,2.911,70,2.974,72,2.974,74,3.783,84,1.833,97,1.009,98,1.239,99,0.993,102,3.542,104,1.328,107,1.817,108,1.92,114,1.442,136,2.124,137,1.753,138,3.802,145,2.651,162,1.956,164,2.3,165,3.619,166,1.455,167,2.3,168,1.581,169,2.3,177,1.663,185,3.328,245,1.861,251,1.22,252,2.161,254,4.405,255,4.121,295,3.543,331,3.059,332,1.994,343,1.723,352,2.4,376,1.512,431,3.252,454,3.039,487,0.693,514,1.718,611,1.351,657,6.126,659,6.126,680,4.785,692,5.359,735,2.688,795,2.4,796,2.4,804,2.406,805,5.031,817,5.154,826,1.987,847,2.794,848,5.143,851,3.107,1072,4.785,1077,3.595,1079,4.814,1222,4.894,1276,3.107,1281,5.143,1519,5.363,1520,6.321,1521,9.013,1522,7.084,1523,7.084,1524,7.084,1525,7.084,1526,7.933,1527,7.084,1528,8.774,1529,7.933,1530,5.363,1531,9.013,1532,7.084,1533,7.084,1534,7.933,1535,5.363,1536,6.321,1537,6.321,1538,8.438,1539,5.363,1540,7.084,1541,6.321,1542,7.084,1543,7.084,1544,7.084,1545,4.68,1546,4.785,1547,4.785,1548,6.321,1549,5.363,1550,5.363,1551,5.363,1552,5.363,1553,5.363,1554,5.363,1555,7.084,1556,7.084,1557,5.363,1558,5.154,1559,3.695,1560,5.363,1561,3.401,1562,5.917,1563,5.363,1564,5.363,1565,5.363,1566,4.028,1567,4.386,1568,5.363,1569,5.363,1570,5.363,1571,5.363,1572,5.363]],["title/classes/ElementIntoTheaterDTO.html",[0,0.341,600,2.044]],["body/classes/ElementIntoTheaterDTO.html",[0,0.686,2,0.246,3,0.036,4,0.031,5,0.036,7,0.179,9,0.972,12,0.578,13,1.372,14,0.055,15,0.205,18,0.096,19,0.006,20,0.452,21,0.103,24,0.242,27,0.937,30,1.595,34,0.09,37,0.702,38,1.035,39,0.762,44,0.458,45,1.496,49,1.571,53,0.007,54,0.007,55,0.007,56,0.007,91,1.727,96,2.29,97,0.715,104,0.821,106,1.065,114,0.774,115,1.2,171,0.648,180,0.599,219,0.998,352,1.288,369,1.082,370,1.265,371,1.667,372,1.404,373,2.215,376,1.189,379,0.847,382,1.881,402,1.179,403,2.215,404,2.254,405,2.375,406,1.066,407,1.589,408,1.854,419,1.071,421,1.132,422,1.468,433,1.11,442,1.159,444,0.943,461,1.551,476,1.478,480,1.487,484,1.705,485,1.893,486,2.499,487,0.768,488,2.499,489,2.499,496,2.339,497,2.339,498,1.705,499,2.55,500,1.179,501,0.533,502,1.705,503,1.63,504,1.386,505,1.705,506,1.705,507,1.705,508,1.705,509,1.265,510,1.63,511,1.705,512,1.667,513,1.265,514,0.774,515,1.469,516,3.116,517,1.705,518,1.705,519,1.159,520,1.705,521,2.39,522,1.705,523,2.499,524,1.705,525,1.705,526,1.595,527,3.662,528,1.361,529,1.667,530,1.705,531,2.39,532,1.705,533,1.705,534,1.705,535,1.705,536,1.705,537,1.705,538,1.163,539,1.705,540,1.63,541,2.39,542,1.441,543,2.339,544,1.705,545,1.705,546,2.443,547,1.705,548,1.705,549,2.39,550,1.705,551,1.386,552,1.386,553,1.386,554,1.386,555,1.386,556,1.386,557,1.386,558,1.386,559,1.386,560,1.705,561,1.705,562,1.705,563,1.667,564,1.615,565,1.667,566,1.667,567,1.667,568,1.667,569,1.667,570,1.667,571,1.667,572,0.864,573,1.394,574,1.667,575,1.729,576,0.878,577,1.705,578,1.705,579,0.921,580,1.705,581,1.595,582,1.63,583,2.243,584,0.998,585,1.413,586,1.14,587,2.499,588,1.208,589,1.897,590,1.2,591,1.441,592,2.443,593,1.386,594,2.443,595,3.258,596,2.443,597,2.072,598,3.185,599,2.552,600,2.39,601,1.705,602,1.595,603,1.441,604,1.705,605,1.441,1573,3.801,1574,3.801]],["title/classes/EmptyModuleInfo.html",[0,0.341,1575,4.251]],["body/classes/EmptyModuleInfo.html",[0,0.399,2,0.361,3,0.052,4,0.045,5,0.052,7,0.263,9,0.899,11,0.899,14,0.081,15,0.205,18,0.135,19,0.006,21,0.172,24,0.297,27,1.222,34,0.076,44,0.391,53,0.01,54,0.01,55,0.01,56,0.01,57,1.135,94,1.538,107,3.143,108,3.321,127,1.76,202,2.233,277,2.919,331,3.181,332,3.006,386,2.595,392,4.438,394,3.712,396,3.712,428,2.554,452,3.187,453,2.789,487,0.458,501,1.018,611,1.486,621,1.889,733,4.146,735,2.462,746,3.406,775,4.235,824,3.337,828,2.462,833,5.277,892,3.406,1047,4.285,1110,2.909,1165,5.969,1262,4.58,1428,5.584,1430,2.757,1459,6.22,1461,4.58,1462,6.22,1463,6.22,1464,7.037,1465,7.727,1466,7.037,1467,7.037,1566,4.079,1575,6.485,1576,9.408,1577,5.577,1578,3.791,1579,6.485,1580,3.791,1581,7.512,1582,6.827,1583,6.827,1584,5.577,1585,5.577,1586,5.577,1587,5.577,1588,5.577,1589,5.577,1590,5.577,1591,4.801,1592,5.577,1593,5.277,1594,5.577,1595,5.277,1596,5.577,1597,5.584,1598,4.976,1599,3.406,1600,4.976,1601,4.976,1602,5.577,1603,5.577,1604,3.684,1605,4.976,1606,3.684,1607,4.976,1608,2.83,1609,2.034,1610,5.577]],["title/classes/EmptyNodeInfo.html",[0,0.341,1611,4.251]],["body/classes/EmptyNodeInfo.html",[0,0.439,2,0.397,3,0.058,4,0.05,5,0.058,7,0.29,9,0.941,11,0.941,14,0.09,15,0.218,18,0.123,19,0.006,21,0.157,24,0.311,27,1.299,34,0.08,44,0.406,53,0.011,54,0.011,55,0.011,56,0.011,57,1.249,94,1.692,107,2.865,108,3.027,127,1.936,202,2.148,277,2.754,331,3.5,332,3.144,385,3.628,386,2.449,388,3.628,390,3.336,428,2.715,452,3.388,453,2.918,487,0.504,501,1.083,579,2.152,611,1.518,621,2.078,733,4.407,735,2.078,746,3.747,777,3.063,824,3.547,828,2.617,833,5.609,892,3.747,996,3.178,1047,4.713,1110,3.2,1165,6.346,1262,5.038,1428,5.936,1430,3.032,1566,2.816,1578,4.03,1579,6.894,1580,4.03,1597,5.936,1598,5.474,1599,3.747,1600,5.474,1601,6.894,1604,4.052,1605,5.474,1606,4.052,1607,5.474,1608,3.113,1609,2.238,1611,6.894,1612,8.878,1613,6.135,1614,7.03,1615,7.03,1616,7.03,1617,9.679,1618,6.135,1619,6.135,1620,6.135,1621,5.609,1622,6.135,1623,5.609,1624,6.135,1625,5.609,1626,6.135,1627,6.135]],["title/classes/EntityNameMappingFileDTO.html",[0,0.341,764,2.91]],["body/classes/EntityNameMappingFileDTO.html",[0,0.672,2,0.381,3,0.055,4,0.048,5,0.055,7,0.278,12,0.766,14,0.086,15,0.212,18,0.086,19,0.006,20,0.45,21,0.109,24,0.216,27,0.989,34,0.088,44,0.455,45,1.4,49,1.56,53,0.011,54,0.011,55,0.011,56,0.011,91,1.706,98,1.917,106,0.81,114,1.198,115,1.857,171,0.579,342,1.472,372,1.394,373,1.794,379,0.766,382,1.677,406,1.65,407,1.677,419,1.058,421,1.118,422,1.45,430,2.418,433,1.011,461,1.771,485,1.823,487,0.742,501,1.054,514,1.532,515,2.274,538,0.942,542,2.23,551,2.146,552,2.146,553,2.146,554,2.146,555,2.146,556,2.146,557,2.146,558,2.146,559,2.146,564,1.706,575,1.825,589,1.381,603,2.23,605,2.23,629,1.958,739,4.595,740,3.886,746,3.593,747,4.595,748,4.595,749,3.886,750,3.886,751,3.731,752,3.886,753,3.731,754,3.886,755,3.886,756,3.886,757,5.479,758,5.26,759,3.886,760,3.886,761,2.274,762,3.886,763,4.97,764,5.066,765,5.479,766,3.886,767,3.731,768,3.731,769,3.731,770,3.886,771,3.886,772,3.731,1628,5.883]],["title/classes/ExportModule.html",[0,0.341,1629,3.913]],["body/classes/ExportModule.html",[0,0.188,2,0.17,3,0.025,4,0.021,5,0.025,7,0.124,9,0.969,11,0.895,12,0.688,13,0.647,14,0.038,15,0.118,18,0.117,19,0.006,20,0.419,21,0.149,24,0.24,29,1.714,31,0.959,34,0.025,37,0.73,38,0.995,41,1.016,43,2.774,44,0.422,47,1.051,53,0.005,54,0.005,55,0.005,56,0.005,74,3.293,84,1.813,93,2.9,94,2.164,97,1.231,98,1.693,99,1.212,102,2.929,104,1.029,106,0.362,107,0.89,108,0.941,109,1.28,114,1.421,116,2.352,127,2.312,136,2.092,166,1.423,171,0.626,177,1.72,219,0.69,239,1.623,245,1.103,251,1.829,332,0.977,344,1.058,372,0.442,379,0.612,411,0.815,412,0.725,419,0.666,433,1.091,434,3.075,437,3.13,442,1.826,443,3.527,444,1.107,450,1.236,451,3.06,453,0.907,457,1.974,458,1.267,460,2.407,476,1.144,487,0.755,501,0.588,538,0.421,572,1.362,573,0.658,576,1.211,579,2.086,581,3.075,588,0.911,596,1.152,597,1.949,599,2.673,611,1.378,615,0.959,616,0.959,618,0.959,621,2.364,626,1.503,627,1.503,640,2.274,644,1.561,664,5.187,697,2.392,743,2.362,777,3.004,780,2.775,783,2.663,789,1.016,795,2.364,796,2.364,800,2.9,802,2.233,820,2.635,821,2.253,824,1.928,826,2.345,849,3.226,855,1.736,886,0.977,892,2.564,908,4.206,913,2.527,918,2.159,923,2.774,957,1.179,958,1.179,959,1.179,966,1.179,967,1.179,968,1.179,969,1.179,970,1.179,971,3.45,972,3.667,973,3.44,974,3.44,975,3.336,976,3.336,981,1.152,982,1.179,983,1.179,985,1.883,987,1.179,988,2.626,993,1.801,998,2.352,999,2.568,1000,1.152,1002,1.08,1003,2.201,1005,1.883,1006,2.444,1007,2.352,1009,2.362,1011,2.128,1013,1.883,1014,1.883,1016,1.152,1017,1.179,1018,1.179,1019,1.179,1051,3.213,1131,2.663,1252,2.9,1273,3.048,1280,3.363,1314,2.159,1406,2.159,1431,1.908,1453,1.371,1472,3.448,1475,3.448,1541,2.345,1566,3.493,1604,3.955,1609,2.672,1629,4.918,1630,2.628,1631,3.448,1632,4.347,1633,6.789,1634,7.325,1635,5.987,1636,4.199,1637,6.979,1638,5.987,1639,5.987,1640,5.987,1641,4.199,1642,4.199,1643,2.628,1644,4.918,1645,4.918,1646,6.227,1647,2.628,1648,3.746,1649,4.199,1650,2.9,1651,6.545,1652,2.628,1653,3.746,1654,3.746,1655,4.678,1656,3.746,1657,3.746,1658,3.746,1659,3.746,1660,3.746,1661,3.746,1662,5.342,1663,3.448,1664,3.746,1665,4.199,1666,2.628,1667,3.448,1668,4.199,1669,4.199,1670,4.738,1671,4.199,1672,2.628,1673,4.199,1674,3.448,1675,4.199,1676,5.243,1677,6.979,1678,2.628,1679,3.226,1680,3.746,1681,5.732,1682,6.227,1683,4.821,1684,3.226,1685,4.199,1686,4.199,1687,2.628,1688,4.199,1689,4.199,1690,2.628,1691,4.199,1692,4.199,1693,3.746,1694,2.628,1695,5.243,1696,1.334,1697,1.605,1698,2.345,1699,2.345,1700,2.345,1701,2.628,1702,2.345,1703,2.628,1704,4.199,1705,2.628,1706,2.628,1707,2.628,1708,7.177,1709,3.746,1710,3.746,1711,5.243,1712,2.159,1713,3.746,1714,2.628,1715,2.159,1716,2.628,1717,2.159,1718,2.628,1719,2.628,1720,4.199,1721,2.628,1722,2.628,1723,2.628,1724,2.628,1725,2.345,1726,2.628,1727,2.628,1728,4.199,1729,5.987,1730,2.628,1731,2.628,1732,2.628,1733,2.774,1734,3.13,1735,4.199,1736,2.628,1737,5.243,1738,2.628,1739,2.628,1740,2.628,1741,4.199,1742,6.536,1743,2.628,1744,2.628,1745,2.628,1746,4.199,1747,2.628,1748,2.628,1749,2.628,1750,2.628,1751,2.628,1752,4.028,1753,3.226,1754,2.628,1755,2.628,1756,2.628,1757,2.628,1758,4.678,1759,4.199,1760,2.628,1761,4.199,1762,2.628,1763,2.628,1764,2.628,1765,2.628,1766,2.628,1767,2.628,1768,2.628,1769,4.199,1770,4.199,1771,2.628,1772,2.628,1773,2.628,1774,4.199,1775,2.628,1776,2.628,1777,2.628,1778,2.628,1779,2.628,1780,2.628,1781,2.628,1782,2.628,1783,4.199,1784,2.628,1785,2.628,1786,2.345,1787,2.628,1788,2.345,1789,2.628,1790,2.628,1791,2.628,1792,4.199,1793,4.199,1794,2.628,1795,4.199,1796,2.628,1797,2.628,1798,2.628,1799,2.628,1800,4.199,1801,2.628,1802,2.019,1803,4.199,1804,2.628,1805,2.628,1806,2.628,1807,2.628,1808,2.628,1809,2.628,1810,2.628,1811,2.628,1812,4.678]],["title/injectables/ExportService.html",[649,1.918,1813,4.251]],["body/injectables/ExportService.html",[0,0.325,3,0.043,4,0.037,5,0.083,7,0.214,14,0.066,15,0.178,18,0.131,19,0.006,21,0.163,24,0.335,26,1.213,34,0.043,38,1.255,39,1.46,44,0.43,45,1.507,53,0.008,54,0.008,55,0.008,56,0.008,69,2.306,74,3.601,84,1.05,94,2.476,97,1.482,98,2.074,99,1.459,102,3.307,107,2.145,108,2.266,127,2.487,136,2.692,137,2.069,177,2.276,245,1.663,251,1.792,332,2.354,344,3.172,376,1.351,433,1.126,434,3.695,437,3.848,440,4.143,444,1.126,445,3.695,461,1.972,487,0.805,514,1.604,599,3.155,611,1.507,620,3.501,626,2.266,627,3.071,628,3.5,649,2.548,651,2.438,674,2.438,697,2.403,820,3.172,826,2.518,827,4.818,837,4.596,884,3.001,886,1.689,971,2.715,1045,5.199,1249,3.705,1511,4.596,1536,7.03,1606,6.375,1629,6.471,1632,6.518,1696,2.306,1697,2.775,1698,4.054,1813,5.648,1814,4.543,1815,4.015,1816,6.33,1817,3.397,1818,7.046,1819,6.33,1820,5.648,1821,4.596,1822,6.33,1823,6.33,1824,6.33,1825,6.33,1826,6.33,1827,6.33,1828,4.543,1829,7.879,1830,7.392,1831,6.33,1832,4.543,1833,7.879,1834,7.392,1835,6.33,1836,4.543,1837,6.33,1838,4.543,1839,6.471,1840,4.054,1841,7.03,1842,7.03,1843,7.03,1844,7.03,1845,7.03,1846,7.03,1847,5.648,1848,4.054,1849,4.543,1850,5.648,1851,4.054,1852,4.543,1853,5.648,1854,4.543,1855,4.543,1856,4.543,1857,4.543,1858,4.543,1859,4.543,1860,4.543,1861,4.543,1862,4.543,1863,4.543]],["title/classes/ExportTheater.html",[0,0.341,1839,3.913]],["body/classes/ExportTheater.html",[0,0.292,2,0.265,3,0.065,4,0.033,5,0.038,7,0.193,9,0.836,12,0.726,13,1.692,14,0.06,15,0.165,18,0.11,19,0.006,20,0.415,21,0.154,24,0.276,29,1.919,34,0.038,37,0.666,38,0.979,39,1.66,41,1.579,43,4.963,44,0.429,45,1.203,53,0.008,54,0.008,55,0.008,56,0.008,84,2.055,93,4.054,94,2.409,97,1.104,98,1.356,99,1.086,102,3.153,114,1.778,127,2.371,136,2.06,171,0.596,177,2.004,180,0.924,219,1.072,245,1.542,251,1.884,332,1.518,372,0.987,379,0.358,419,0.836,433,1.065,437,3.918,442,1.79,443,3.294,444,1.136,445,3.583,450,1.92,451,2.574,457,2.76,460,3.449,461,1.951,476,1.122,480,1.567,487,0.718,501,0.822,538,0.94,564,1.184,573,1.022,575,1.267,581,2.464,584,1.072,586,1.224,590,1.289,593,1.489,597,2.182,599,2.911,608,3.461,615,1.489,616,1.489,617,2.408,618,1.489,621,2.545,626,2.101,627,2.689,628,4.581,630,5.075,631,4.983,634,2.329,636,2.408,638,2.408,641,3.461,646,3.348,664,5.335,697,2.095,743,2.315,780,1.489,795,2.807,796,2.807,802,2.332,820,2.363,821,3.15,824,2.695,826,2.323,892,3.585,908,3.245,920,3.354,1006,2.661,1011,1.79,1023,3.643,1051,3.687,1252,4.054,1273,4.261,1566,3.154,1604,3.877,1631,4.82,1632,5.454,1633,7.794,1644,6.17,1645,6.17,1646,7.393,1653,6.703,1654,5.237,1655,7.1,1656,5.237,1657,5.237,1658,5.237,1659,5.237,1660,5.237,1661,5.237,1662,6.703,1663,4.82,1664,5.237,1670,4.321,1674,4.82,1679,4.509,1680,5.237,1681,4.82,1682,5.237,1683,5.189,1684,5.772,1693,5.237,1696,2.072,1697,2.494,1699,3.643,1700,3.643,1702,3.643,1708,7.393,1709,3.643,1710,3.643,1713,3.643,1758,3.643,1786,3.643,1788,3.643,1839,6.17,1851,3.643,1864,4.083,1865,7.512,1866,5.869,1867,7.512,1868,5.869,1869,5.869,1870,4.083,1871,4.083,1872,5.869,1873,4.083,1874,5.869,1875,4.82,1876,5.869,1877,5.869,1878,5.237,1879,5.869,1880,4.083,1881,5.869,1882,4.083,1883,4.083,1884,4.083,1885,4.083,1886,4.083,1887,4.083,1888,4.083,1889,4.083,1890,5.869,1891,5.869,1892,4.083,1893,4.083,1894,4.083,1895,4.083,1896,4.083,1897,4.083,1898,4.083,1899,4.083,1900,4.083,1901,4.083,1902,4.083,1903,4.083,1904,4.083,1905,4.083,1906,5.869,1907,4.083,1908,5.869,1909,4.083,1910,4.083,1911,4.083,1912,4.083,1913,4.083,1914,4.083,1915,4.083,1916,4.083,1917,4.083]],["title/injectables/FileService.html",[649,1.918,1918,3.913]],["body/injectables/FileService.html",[0,0.332,3,0.044,4,0.038,5,0.094,7,0.219,11,0.715,12,0.813,14,0.068,15,0.181,18,0.129,19,0.006,20,0.205,21,0.164,24,0.271,26,1.241,29,2.601,34,0.044,37,0.373,38,0.662,39,0.931,43,5.256,44,0.424,45,1.274,53,0.009,54,0.009,55,0.009,56,0.009,69,2.359,74,3.847,84,1.074,94,2.304,97,1.209,98,1.996,99,1.19,102,3.627,106,1.016,107,2.178,108,2.302,109,2.426,114,1.309,121,5.738,127,2.511,136,2.211,137,2.102,168,1.37,177,2.119,245,1.689,251,1.9,331,2.651,332,2.391,338,2.643,344,3.478,352,1.574,376,1.373,433,0.784,434,1.951,440,4.162,444,1.053,445,1.951,461,1.373,487,0.802,514,1.62,621,2.178,649,2.588,651,2.494,653,3.138,674,2.494,697,2.795,710,4.206,795,2.696,796,2.927,820,3.478,821,3.451,826,2.423,828,2.178,839,2.643,847,2.536,851,2.82,865,3.024,884,3.07,886,1.728,1133,5.281,1194,4.941,1249,3.741,1278,5.738,1281,4.668,1385,4.668,1511,5.353,1697,2.838,1815,4.078,1818,6.535,1821,5.353,1840,5.738,1841,7.099,1842,7.099,1843,7.099,1844,7.099,1845,7.099,1846,7.099,1847,5.738,1848,5.738,1850,5.738,1853,5.738,1918,5.281,1919,4.647,1920,4.941,1921,6.43,1922,6.43,1923,6.43,1924,7.373,1925,7.956,1926,6.43,1927,5.738,1928,6.43,1929,4.647,1930,6.43,1931,5.738,1932,5.738,1933,7.956,1934,6.43,1935,6.43,1936,4.647,1937,5.738,1938,6.43,1939,5.738,1940,4.647,1941,6.43,1942,3.555,1943,5.738,1944,4.647,1945,4.647,1946,6.43,1947,4.647,1948,6.43,1949,4.647,1950,4.647,1951,4.647,1952,3.571,1953,3.571,1954,4.647,1955,3.571,1956,4.647,1957,4.647,1958,4.647,1959,4.647,1960,2.838,1961,4.647,1962,3.07,1963,4.647,1964,4.647,1965,4.647,1966,4.647,1967,4.647,1968,4.147,1969,4.647,1970,4.647,1971,4.647,1972,4.647]],["title/classes/FlavorApplication.html",[0,0.341,478,2.24]],["body/classes/FlavorApplication.html",[0,0.67,2,0.317,3,0.046,4,0.04,5,0.046,9,0.742,11,0.977,12,0.584,14,0.071,15,0.188,18,0.119,19,0.006,20,0.434,21,0.151,24,0.344,34,0.091,38,0.95,39,1.519,44,0.372,46,1.894,53,0.009,54,0.009,55,0.009,56,0.009,94,1.351,103,1.379,116,2.991,127,1.546,162,2.432,171,0.342,177,1.91,202,1.779,219,1.991,277,2.724,286,3.746,342,1.226,343,2.733,345,1.63,367,2.486,368,2.555,369,1.82,370,2.219,375,3.479,376,1.737,379,0.836,382,1.901,385,2.86,386,2.422,387,2.361,388,2.86,389,2.361,390,2.63,391,2.361,392,3.479,393,2.555,394,3.479,395,2.555,396,3.479,397,2.555,398,4.128,399,2.422,400,3.489,401,2.303,402,2.524,403,1.494,404,2.068,405,2.179,406,1.87,407,1.901,408,2.219,409,2.249,410,2.422,411,2.524,412,2.091,413,3.652,414,3.181,415,3.181,416,3.181,417,4.519,418,4.34,419,0.742,420,2.86,421,0.784,422,1.016,423,3.384,424,2.527,425,3.477,426,3.477,427,2.578,428,2.343,429,3.477,430,2.74,431,3.479,432,2.555,433,0.597,434,2.056,435,2.555,436,2.555,437,2.197,438,2.555,439,3.477,440,2.991,441,3.477,442,2.033,443,2.924,444,0.924,445,3.181,446,3.477,447,2.555,448,1.69,449,2.555,450,2.303,451,2.148,452,2.148,453,1.69,454,2.101,455,2.555,456,2.555,457,2.303,458,3.213,459,2.486,460,2.249,461,1.046,462,3.135,463,4.001,464,2.361,465,2.361,466,3.384,467,4.129,468,3.921,469,3.489,470,3.477,471,3.953,472,3.846,473,3.4,474,2.361,475,4.129,476,0.936,477,2.486,478,3.135,479,3.652,1973,4.228,1974,4.228,1975,4.228,1976,4.899,1977,4.371,1978,4.371,1979,4.371]],["title/classes/FlavorBasicInfo.html",[0,0.341,398,2.24]],["body/classes/FlavorBasicInfo.html",[0,0.632,2,0.438,3,0.064,4,0.055,5,0.064,7,0.319,12,0.593,14,0.099,15,0.231,18,0.129,19,0.006,20,0.442,21,0.164,34,0.083,44,0.437,49,1.543,53,0.012,54,0.012,55,0.012,56,0.012,91,1.584,171,0.573,338,2.779,369,1.593,372,1.137,373,2.502,379,0.862,398,4.319,419,0.983,421,1.038,422,1.346,444,0.824,485,1.743,622,2.172,810,6.102,1973,5.603,1974,5.603,1975,5.603,1980,5.554,1981,6.762,1982,6.762,1983,6.762,1984,5.554,1985,5.554,1986,6.304,1987,5.554,1988,5.554,1989,5.554,1990,5.554,1991,4.671,1992,5.554,1993,5.554]],["title/classes/FlavorDTO.html",[0,0.341,1991,3.291]],["body/classes/FlavorDTO.html",[0,0.617,2,0.415,3,0.06,4,0.052,5,0.06,7,0.303,14,0.094,15,0.224,18,0.141,19,0.006,20,0.443,21,0.18,34,0.081,37,0.515,44,0.431,49,1.696,53,0.012,54,0.012,55,0.012,56,0.012,91,1.547,171,0.63,338,2.634,369,1.675,372,1.077,373,2.75,375,3.961,376,1.842,379,0.86,398,4.502,419,0.96,421,1.014,422,1.315,444,0.781,485,1.702,743,2.528,810,5.959,1973,5.471,1974,5.471,1975,5.471,1977,5.718,1978,5.718,1979,5.718,1980,5.263,1984,5.263,1985,5.263,1986,6.628,1987,5.263,1988,5.263,1989,5.263,1990,6.521,1991,5.485,1992,7.085,1993,7.085,1994,6.408,1995,6.408,1996,6.408,1997,6.408,1998,6.408]],["title/injectables/FlavorService.html",[649,1.918,1999,3.661]],["body/injectables/FlavorService.html",[0,0.456,3,0.06,4,0.052,5,0.06,14,0.093,18,0.115,19,0.006,20,0.397,21,0.16,24,0.34,26,1.702,34,0.06,49,1.199,53,0.012,54,0.012,55,0.012,56,0.012,69,3.235,84,1.473,97,1.488,98,1.828,99,1.465,138,3.42,232,6.065,245,2.078,251,1.8,295,4.21,326,4.21,327,4.21,331,4.514,332,2.942,352,2.681,379,0.694,399,3.151,649,3.185,651,3.42,653,3.72,656,4.897,657,6.534,659,5.745,669,4.897,674,3.42,675,3.235,676,5.945,697,2.413,710,5.513,719,4.666,1952,6.08,1953,6.08,1962,5.227,1991,5.945,1999,6.08,2000,6.374,2001,9,2002,7.913,2003,6.374,2004,6.374,2005,7.913,2006,6.374,2007,6.374,2008,6.499,2009,6.499,2010,6.499,2011,6.499,2012,6.499,2013,6.499,2014,6.374,2015,6.374]],["title/classes/GenericParameterDTO.html",[0,0.341,527,2.089]],["body/classes/GenericParameterDTO.html",[0,0.687,2,0.247,3,0.036,4,0.031,5,0.036,7,0.18,9,0.953,12,0.579,13,1.375,14,0.056,15,0.205,18,0.106,19,0.006,20,0.452,21,0.123,24,0.243,27,0.641,30,2.344,34,0.09,37,0.703,38,1.037,39,0.764,44,0.458,45,1.497,49,1.572,53,0.007,54,0.007,55,0.007,56,0.007,91,1.728,96,1.567,97,0.717,104,0.823,106,1.067,114,0.776,115,1.204,171,0.648,180,0.601,219,1.002,352,1.292,369,1.084,370,1.269,371,1.672,372,1.47,373,2.219,376,1.192,379,0.848,382,1.884,402,1.183,403,2.015,404,2.257,405,2.16,406,1.069,407,1.592,408,1.859,419,1.072,421,1.133,422,1.468,433,1.111,442,1.163,444,0.944,461,1.553,476,1.263,480,1.491,484,1.71,485,1.893,486,2.505,487,0.763,488,2.505,489,2.505,496,2.344,497,2.344,498,1.71,499,2.555,500,1.183,501,0.534,502,1.71,503,1.636,504,1.391,505,1.71,506,1.71,507,1.71,508,1.71,509,1.269,510,1.636,511,1.71,512,1.672,513,1.269,514,0.776,515,1.474,516,3.121,517,1.71,518,1.71,519,1.163,520,1.71,521,2.396,522,1.71,523,2.505,524,1.71,525,1.71,526,2.344,527,3.759,528,2.366,529,1.672,530,1.71,531,2.396,532,1.71,533,1.71,534,1.71,535,1.71,536,1.71,537,1.71,538,1.165,539,1.71,540,1.636,541,2.396,542,1.446,543,2.344,544,1.71,545,1.71,546,2.449,547,1.71,548,1.71,549,2.396,550,1.71,551,1.391,552,1.391,553,1.391,554,1.391,555,1.391,556,1.391,557,1.391,558,1.391,559,1.391,560,1.71,561,1.71,562,1.71,563,1.672,564,1.619,565,1.672,566,1.672,567,1.672,568,1.672,569,1.672,570,1.672,571,1.672,572,0.867,573,1.398,574,1.672,575,1.733,576,0.881,577,1.71,578,1.71,579,0.924,580,1.71,581,1.601,582,1.636,583,2.248,584,1.002,585,1.418,586,1.143,587,2.505,588,1.211,589,1.818,590,1.204,591,1.446,592,2.449,593,1.391,594,1.672,595,2.964,596,1.672,597,1.418,598,2.898,599,2.322,600,1.636,601,1.71,602,1.601,603,1.446,604,1.71,605,1.446,2016,3.813,2017,3.813,2018,3.813]],["title/components/HomeComponent.html",[57,0.97,187,1.918]],["body/components/HomeComponent.html",[0,0.152,3,0.02,4,0.017,5,0.081,7,0.214,9,0.588,10,2.717,11,0.876,12,0.82,14,0.031,15,0.1,18,0.132,19,0.006,20,0.354,21,0.168,24,0.246,25,3.013,26,0.568,27,0.888,32,1.617,33,0.823,34,0.02,37,0.758,38,1.098,39,1.543,41,2.042,44,0.434,45,1.306,47,1.582,48,0.875,49,1.613,50,2.921,52,1.266,53,0.004,54,0.004,55,0.008,56,0.004,57,1.075,58,0.875,59,0.823,60,0.913,61,1.945,62,0.913,66,0.913,67,3.928,68,3.616,70,1.484,72,1.484,74,4.068,77,4.152,83,2.242,84,1.048,85,1.546,88,3.293,91,1.134,94,1.744,95,2.717,97,1.102,98,1.682,99,1.24,100,2.996,102,3.951,103,0.731,104,1.106,106,0.871,107,2.466,108,2.605,109,2.139,114,1.075,115,1.667,127,2.369,129,1.406,136,2.103,138,1.898,144,3.155,145,3.71,157,1.636,162,2.306,164,0.913,165,1.517,166,1.231,167,0.913,168,2.366,169,0.913,170,0.857,171,0.605,172,0.934,173,0.857,174,1.989,175,0.857,176,0.875,177,0.83,178,0.934,179,0.875,180,1.24,181,0.934,182,0.875,183,0.934,184,0.934,185,0.84,186,0.934,187,2.545,188,0.934,189,0.84,190,0.857,191,0.934,192,0.84,193,0.84,194,0.934,195,0.934,196,0.875,197,0.934,198,0.84,199,0.875,200,0.934,201,0.894,202,1.24,203,0.894,204,1.551,205,0.894,206,0.894,207,0.84,208,0.84,209,0.934,210,0.84,211,0.84,212,0.84,213,0.934,214,0.857,215,0.934,216,0.934,217,0.934,234,2.904,245,0.929,251,1.438,252,1.928,270,4.368,274,4.368,332,1.315,338,3.084,344,2.126,345,1.758,361,2.567,372,1.262,376,1.681,379,0.463,424,1.341,430,1.453,433,0.771,440,0.955,444,1.064,460,1.624,461,1.35,487,0.784,501,0.496,504,0.777,509,1.758,514,1.804,528,1.266,564,2.176,573,0.885,599,1.856,609,2.085,611,1.452,623,1.964,624,1.964,653,1.789,675,1.08,678,0.913,697,0.649,706,5.642,709,4.058,719,1.255,725,4.001,775,2.611,795,1.198,796,1.198,802,1.872,805,1.35,818,5.389,820,2.545,821,1.898,824,2.425,826,2.288,827,3.393,828,2.142,847,3.105,849,2.717,851,0.934,852,5.389,853,2.755,856,4.958,860,2.443,869,6.697,870,1.795,877,2.904,882,2.904,884,5.088,886,0.792,889,1.9,895,3.489,898,3.155,900,3.155,902,3.155,904,3.725,910,1.9,913,2.186,915,2.904,937,3.155,938,2.567,939,1.636,1011,1.078,1064,2.587,1066,2.16,1069,2.017,1075,2.587,1077,1.795,1079,3.607,1082,1.143,1084,2.755,1093,2.017,1097,4.15,1114,1.341,1115,3.496,1121,2.085,1137,2.443,1139,6.164,1164,4.01,1176,3.155,1194,2.717,1222,2.443,1224,2.567,1252,2.443,1260,2.904,1273,2.567,1279,1.844,1289,3.155,1305,1.9,1343,1.898,1361,3.155,1404,1.749,1408,5.092,1429,6.326,1451,3.013,1452,2.567,1520,3.155,1558,2.77,1559,2.366,1561,1.35,1562,1.35,1566,0.977,1599,2.16,1604,1.406,1608,2.681,1648,7.484,1679,4.058,1681,2.904,1684,2.717,1725,3.155,1812,1.9,1815,2.243,1918,6.164,1920,2.717,1927,3.155,1939,3.155,1942,1.955,2019,2.129,2020,3.536,2021,3.155,2022,3.536,2023,3.536,2024,3.536,2025,4.536,2026,3.536,2027,8.159,2028,4.536,2029,5.861,2030,5.861,2031,4.536,2032,4.536,2033,4.536,2034,4.536,2035,5.861,2036,3.536,2037,3.536,2038,5.282,2039,7.013,2040,3.536,2041,3.536,2042,2.129,2043,3.536,2044,3.536,2045,2.129,2046,4.338,2047,2.717,2048,3.536,2049,3.536,2050,3.536,2051,2.129,2052,2.904,2053,3.536,2054,3.536,2055,2.129,2056,2.129,2057,3.536,2058,3.536,2059,3.536,2060,2.129,2061,3.536,2062,3.536,2063,3.536,2064,3.536,2065,2.129,2066,7.013,2067,3.536,2068,7.873,2069,6.323,2070,2.129,2071,4.713,2072,5.861,2073,2.129,2074,2.129,2075,3.536,2076,2.129,2077,3.536,2078,2.129,2079,3.536,2080,2.129,2081,2.129,2082,3.536,2083,2.129,2084,5.282,2085,2.129,2086,2.129,2087,2.129,2088,3.155,2089,2.129,2090,3.155,2091,2.129,2092,2.129,2093,2.129,2094,2.129,2095,5.282,2096,2.129,2097,2.129,2098,1.9,2099,2.129,2100,3.536,2101,3.536,2102,5.861,2103,3.536,2104,2.129,2105,2.129,2106,2.129,2107,2.129,2108,1.636,2109,1.636,2110,1.9,2111,2.129,2112,3.536,2113,2.129,2114,3.155,2115,2.129,2116,2.129,2117,2.129,2118,2.129,2119,3.536,2120,3.536,2121,2.129,2122,2.129,2123,4.536,2124,3.536,2125,2.129,2126,2.129,2127,2.129,2128,2.129,2129,2.129,2130,2.129,2131,2.129,2132,3.536,2133,3.536,2134,3.536,2135,3.536,2136,3.536,2137,3.536,2138,4.338,2139,3.536,2140,6.323,2141,3.536,2142,2.336,2143,3.536,2144,1.406,2145,2.129,2146,1.9,2147,3.536,2148,3.155,2149,3.536,2150,3.536,2151,3.155,2152,3.536,2153,3.536,2154,2.129,2155,2.129,2156,2.129,2157,2.129,2158,2.129,2159,4.536,2160,2.129,2161,3.536,2162,2.129,2163,2.129,2164,2.129,2165,2.129,2166,2.129,2167,2.129,2168,2.129,2169,2.129,2170,2.129,2171,2.129,2172,2.129,2173,1.749,2174,2.129,2175,2.129,2176,4.536,2177,1.9,2178,3.155,2179,1.9,2180,1.9,2181,2.129,2182,2.129,2183,2.129,2184,2.129,2185,2.129,2186,2.129,2187,2.129,2188,1.9,2189,4.713,2190,7.873,2191,5.282,2192,5.282,2193,2.129]],["title/components/HostComponent.html",[57,0.97,189,1.879]],["body/components/HostComponent.html",[0,0.307,3,0.04,4,0.035,5,0.04,14,0.063,15,0.171,18,0.112,19,0.006,21,0.161,24,0.31,26,1.147,27,1.023,32,1.186,33,1.662,34,0.04,38,0.868,39,1.22,48,1.766,50,2.752,52,1.538,53,0.008,54,0.008,55,0.008,56,0.008,57,1.565,58,1.766,59,1.662,60,1.843,61,1.843,62,1.843,66,1.843,67,4.242,68,3.988,70,2.555,72,2.555,74,2.555,83,3.009,84,0.993,86,4.251,87,4.251,97,0.808,98,0.993,99,0.796,106,1.161,107,2.749,108,2.905,109,1.857,137,1.405,140,3.908,145,3.494,162,3.161,164,1.843,165,2.611,166,1.166,167,1.843,168,2.267,169,1.843,170,1.73,171,0.645,172,1.885,173,1.73,174,3.1,175,1.73,176,1.766,177,1.805,178,1.885,179,1.766,180,1.211,181,1.885,182,1.766,183,1.885,184,1.885,185,1.695,186,1.885,187,1.73,188,1.885,189,3.033,190,1.73,191,1.885,192,1.695,193,1.695,194,1.885,195,1.885,196,1.766,197,1.885,198,1.695,199,1.766,200,1.885,201,1.804,202,1.905,203,1.804,204,2.67,205,1.804,206,1.804,207,1.695,208,1.695,209,1.885,210,1.695,211,1.695,212,1.695,213,1.885,214,1.73,215,1.885,216,1.885,217,1.885,239,2.354,245,1.599,251,0.977,252,1.311,267,1.629,268,2.401,269,1.662,277,2.747,338,3.16,369,1.182,386,2.518,504,2.96,509,2.559,528,2.179,572,0.977,692,3.718,714,4.67,775,3.494,784,4.022,886,1.598,913,2.934,1009,2.401,1029,3.718,1066,2.625,1069,4.033,1070,2.839,1071,2.839,1073,2.726,1075,4.808,1077,3.588,1079,3.473,1080,2.839,1101,3.09,1143,3.473,1144,3.473,1177,2.534,1337,2.726,1338,2.726,1343,4.355,1344,2.534,1359,4.022,1398,2.625,1453,4.01,1470,3.718,1545,4.022,1559,3.175,1561,5.147,1562,4.876,1566,1.973,1567,2.376,1609,2.805,1733,6.159,1734,1.928,1960,3.718,1973,3.861,1974,3.861,1975,3.861,2142,2.839,2144,4.022,2194,4.298,2195,4.883,2196,5.822,2197,7.069,2198,6.088,2199,6.475,2200,5.806,2201,4.883,2202,4.883,2203,4.883,2204,5.311,2205,2.969,2206,6.088,2207,4.298,2208,4.298,2209,4.298,2210,4.298,2211,4.298,2212,2.969,2213,2.969,2214,2.726,2215,2.969,2216,2.969,2217,4.205,2218,3.718,2219,6.088,2220,8.428,2221,8.428,2222,7.689,2223,8.428,2224,8.428,2225,3.59,2226,4.205,2227,4.205,2228,4.205,2229,4.205,2230,4.205,2231,4.205,2232,4.205,2233,4.205,2234,2.969,2235,2.969,2236,2.969,2237,2.452,2238,2.839,2239,2.969,2240,2.969,2241,2.969,2242,2.969,2243,2.969,2244,4.205,2245,4.205,2246,2.969,2247,2.969,2248,5.311,2249,2.726,2250,2.839,2251,2.839,2252,2.969,2253,3.59,2254,4.205,2255,4.205,2256,2.969,2257,5.822,2258,2.969,2259,2.534,2260,2.969,2261,2.969,2262,2.969]],["title/classes/HostModuleDTO.html",[0,0.341,400,2.044]],["body/classes/HostModuleDTO.html",[0,0.591,2,0.444,3,0.064,4,0.056,5,0.064,7,0.323,9,0.762,14,0.1,15,0.233,18,0.138,19,0.006,20,0.432,21,0.175,24,0.252,34,0.078,44,0.438,49,1.735,53,0.013,54,0.013,55,0.013,56,0.013,91,1.593,106,1.139,171,0.644,373,2.709,379,0.779,400,3.547,419,0.988,421,1.11,422,1.354,485,1.752,499,3.434,640,1.985,787,4.717,993,2.937,996,3.18,999,3.81,1599,4.183,2263,6.111,2264,7.926,2265,6.848,2266,6.848,2267,6.848,2268,6.136,2269,6.848,2270,6.848,2271,6.111]],["title/classes/HostNode.html",[0,0.341,1621,3.459]],["body/classes/HostNode.html",[0,0.434,2,0.277,3,0.04,4,0.035,5,0.04,7,0.202,8,2.44,11,0.962,12,0.816,14,0.062,15,0.171,18,0.131,19,0.006,20,0.358,21,0.164,24,0.325,29,2.507,34,0.066,37,0.487,44,0.395,45,1.128,53,0.008,54,0.008,55,0.008,56,0.008,57,1.435,84,1.628,97,1.582,98,1.944,99,1.557,103,1.254,104,1.13,114,0.87,136,2.113,137,1.982,166,1.645,168,2.261,171,0.298,177,1.654,180,0.955,189,2.391,202,2.186,245,1.592,251,1.967,252,2.47,267,2.298,268,1.685,269,1.652,277,2.79,278,3.509,343,1.372,344,2.44,345,2.345,369,1.368,379,0.618,385,3.022,386,2.48,390,1.685,419,0.784,421,0.713,424,1.62,427,1.652,428,2.476,433,0.521,444,1.054,453,1.474,479,2.922,487,0.782,501,0.987,513,1.422,572,1.379,588,1.315,611,0.684,640,1.758,653,2.779,678,2.6,697,1.303,735,2.054,784,4.005,795,2.931,796,2.743,799,2.659,802,2.36,804,1.917,826,2.557,828,2.743,839,2.492,847,3.025,851,1.874,853,3.162,865,2.009,870,3.892,871,3.254,886,1.589,908,2.362,979,2.44,996,2.17,1006,3.115,1011,1.849,1036,2.169,1049,2.169,1114,1.62,1173,3.254,1249,2.009,1276,1.874,1279,3.162,1280,2.922,1388,4.115,1430,2.112,1444,2.61,1453,2.229,1578,3.162,1580,3.162,1608,3.077,1609,3.636,1614,4.658,1621,6.107,1670,3.675,1696,2.169,1712,4.979,1734,2.719,1817,3.254,1942,3.352,1973,3.845,1974,3.845,1975,3.845,2272,3.509,2273,3.896,2274,4.188,2275,4.188,2276,4.188,2277,4.188,2278,4.188,2279,4.188,2280,6.063,2281,3.896,2282,3.352,2283,4.273,2284,4.893,2285,4.24,2286,3.781,2287,4.24,2288,4.24,2289,3.352,2290,3.254,2291,3.352,2292,2.952,2293,4.273,2294,2.952,2295,3.352,2296,4.273,2297,2.952,2298,4.273,2299,2.952,2300,3.352,2301,4.273,2302,3.352,2303,3.352,2304,3.352,2305,3.352,2306,3.254,2307,3.254,2308,3.352,2309,3.352,2310,2.952,2311,4.188,2312,3.896,2313,3.896,2314,4.273,2315,2.952,2316,2.952,2317,2.952,2318,2.952,2319,2.112,2320,2.112,2321,2.362,2322,3.813,2323,3.703,2324,2.362,2325,2.293,2326,2.293,2327,2.293,2328,2.293,2329,2.293,2330,3.813,2331,2.362,2332,2.362,2333,2.362,2334,2.362,2335,2.362,2336,3.352,2337,3.352,2338,2.362,2339,2.362,2340,2.362,2341,2.362,2342,2.362]],["title/classes/HostPortModuleDTO.html",[0,0.341,2268,3.291]],["body/classes/HostPortModuleDTO.html",[0,0.594,2,0.446,3,0.065,4,0.056,5,0.065,7,0.325,9,0.923,14,0.101,15,0.234,18,0.135,19,0.006,20,0.429,21,0.172,24,0.253,34,0.078,44,0.439,49,1.739,53,0.013,54,0.013,55,0.013,56,0.013,91,1.597,106,0.949,171,0.646,373,2.101,379,0.781,400,2.955,419,0.99,421,1.087,422,1.357,485,1.757,499,3.574,640,2.406,787,5.08,993,3.82,996,3.188,999,2.955,1599,5.068,2263,6.146,2264,6.146,2268,6.152,2271,7.946,2343,6.888,2344,6.888,2345,6.888,2346,6.888]],["title/components/HowToUseComponent.html",[57,0.97,190,1.918]],["body/components/HowToUseComponent.html",[0,0.445,3,0.059,4,0.051,5,0.059,14,0.091,19,0.006,21,0.145,24,0.229,26,1.662,27,1.311,32,1.717,33,2.407,34,0.059,38,1.111,39,1.563,48,2.558,52,2.229,53,0.011,54,0.011,55,0.011,56,0.011,57,1.588,58,2.558,59,2.407,60,2.67,61,2.67,62,2.67,66,2.67,67,4.369,68,4.154,70,3.273,72,3.273,84,1.438,137,2.549,164,2.67,165,3.345,166,1.689,167,2.67,168,2.631,169,2.67,170,2.506,171,0.678,172,2.73,173,2.506,174,3.734,175,2.506,176,2.558,177,1.831,178,2.73,179,2.558,180,0.981,181,2.73,182,2.558,183,2.73,184,2.73,185,2.455,186,2.73,187,2.506,188,2.73,189,2.455,190,3.592,191,2.73,192,2.455,193,2.455,194,2.73,195,2.73,196,2.558,197,2.73,198,2.455,199,2.558,200,2.73,201,2.613,202,2.095,203,2.613,204,3.419,205,2.613,206,2.613,207,2.455,208,2.455,209,2.73,210,2.455,211,2.455,212,2.455,213,2.73,214,2.506,215,2.73,216,2.73,217,2.73,245,2.048,251,1.416,252,2.378,264,6.993,343,2,362,5.991,804,2.792,805,5.4,817,5.451,2347,8.514,2348,6.225,2349,8.514,2350,7.798,2351,6.225,2352,6.225]],["title/classes/InterfaceConstraints.html",[0,0.341,960,2.137]],["body/classes/InterfaceConstraints.html",[0,0.691,2,0.269,3,0.039,4,0.034,5,0.039,7,0.196,9,1.008,11,0.954,12,0.363,13,1.461,14,0.061,15,0.225,18,0.117,19,0.006,20,0.435,21,0.149,24,0.152,31,1.513,34,0.091,37,0.669,44,0.459,45,1.211,47,1.734,53,0.008,54,0.008,55,0.008,56,0.008,91,1.739,103,0.858,104,0.875,106,1.103,107,2.01,108,2.124,109,1.81,171,0.29,239,1.603,259,1.86,342,1.038,372,0.998,379,0.52,411,1.841,412,1.144,419,1.079,421,1.136,422,1.472,433,1.129,444,1.088,448,3.247,476,1.446,485,1.898,487,0.658,500,1.286,501,1.202,514,0.844,538,0.664,573,1.038,576,1.748,579,2.018,584,1.82,586,2.078,588,1.806,589,2.013,611,1.211,615,2.165,616,2.165,618,2.165,619,1.572,620,2.813,621,1.405,622,1.906,623,1.542,624,1.542,625,1.542,626,1.484,627,1.484,629,1.38,640,1.72,644,1.542,761,2.679,777,2.762,780,3.379,789,1.603,802,1.85,953,2.662,954,1.904,955,1.904,956,3.182,957,1.86,958,1.86,959,1.86,960,3.109,962,2.662,964,2.662,966,2.662,967,2.662,968,2.662,969,2.662,970,2.662,971,2.545,972,2.602,973,2.602,974,2.602,975,3.317,976,2.602,977,1.904,978,1.904,979,1.669,980,1.779,981,2.602,982,1.86,983,1.86,984,2.662,985,1.86,986,2.662,987,1.86,988,2.602,989,3.473,990,3.182,991,3.182,992,2.724,993,2.973,994,3.393,995,1.818,996,2.124,997,1.904,998,1.86,999,1.779,1000,3.039,1001,1.904,1002,1.704,1003,1.74,1004,1.904,1005,1.86,1006,1.332,1007,3.109,1008,3.393,1009,1.635,1010,1.818,1011,1.81,1012,2.662,1013,2.662,1014,2.662,1015,2.724,1016,2.602,1017,1.86,1018,1.86,1019,1.86,2353,4.146,2354,4.146,2355,4.146,2356,4.146,2357,4.146]],["title/classes/InterfaceNetworksConsumer.html",[0,0.341,986,2.137]],["body/classes/InterfaceNetworksConsumer.html",[0,0.692,2,0.272,3,0.039,4,0.034,5,0.039,7,0.198,9,1.01,11,0.93,12,0.368,13,1.874,14,0.061,15,0.227,18,0.111,19,0.006,20,0.435,21,0.141,24,0.154,31,1.532,34,0.091,37,0.672,44,0.459,45,1.218,47,1.747,53,0.008,54,0.008,55,0.008,56,0.008,91,1.741,103,0.869,104,0.883,106,1.048,109,1.281,171,0.293,239,1.624,259,1.884,342,1.051,372,1.007,379,0.525,411,2.361,412,1.158,419,1.08,421,1.138,422,1.475,433,1.132,444,1.092,448,3.254,476,1.454,485,1.901,487,0.625,500,1.303,501,1.206,514,0.855,538,0.672,573,1.051,576,1.758,579,2.133,584,1.103,586,1.259,588,1.814,589,2.021,611,1.218,615,2.184,616,2.184,618,2.184,619,1.592,620,2.829,621,1.423,622,1.924,623,1.561,624,1.561,625,1.561,626,1.503,627,1.503,629,1.397,640,1.736,644,1.561,761,1.624,777,2.775,780,3.387,789,1.624,802,1.863,953,2.686,954,1.928,955,1.928,956,2.749,957,1.884,958,1.884,959,1.884,960,2.686,962,2.686,964,2.686,966,2.686,967,2.686,968,2.686,969,2.686,970,2.686,971,2.569,972,2.626,973,2.626,974,2.626,975,3.337,976,2.626,977,1.928,978,1.928,979,1.691,980,1.801,981,2.626,982,1.884,983,1.884,984,2.686,985,1.884,986,3.131,987,1.884,988,2.626,989,3.204,990,1.928,991,1.928,992,1.928,993,3.451,994,3.608,995,2.626,996,2.144,997,1.928,998,1.884,999,1.801,1000,3.061,1001,1.928,1002,1.726,1003,1.763,1004,1.928,1005,1.884,1006,1.349,1007,3.131,1008,3.413,1009,1.656,1010,1.842,1011,1.826,1012,2.686,1013,2.686,1014,2.686,1015,2.749,1016,2.626,1017,1.884,1018,1.884,1019,1.884,2358,4.2,2359,4.2,2360,4.2,2361,4.2]],["title/classes/InterfaceNetworksProvider.html",[0,0.341,984,2.137]],["body/classes/InterfaceNetworksProvider.html",[0,0.692,2,0.272,3,0.039,4,0.034,5,0.039,7,0.198,9,1.01,11,0.93,12,0.368,13,1.874,14,0.061,15,0.227,18,0.111,19,0.006,20,0.435,21,0.141,24,0.154,31,1.532,34,0.091,37,0.672,44,0.459,45,1.218,47,1.747,53,0.008,54,0.008,55,0.008,56,0.008,91,1.741,103,0.869,104,0.883,106,1.048,109,1.281,171,0.293,239,1.624,259,2.686,342,1.051,372,1.007,379,0.525,411,2.361,412,1.158,419,1.08,421,1.138,422,1.475,433,1.132,444,1.092,448,3.254,476,1.454,485,1.901,487,0.625,500,1.303,501,1.206,514,0.855,538,0.672,573,1.051,576,1.758,579,2.133,584,1.103,586,1.259,588,1.814,589,2.021,611,1.218,615,2.184,616,2.184,618,2.184,619,1.592,620,2.829,621,1.423,622,1.924,623,1.561,624,1.561,625,1.561,626,1.503,627,1.503,629,1.397,640,1.736,644,1.561,761,1.624,777,2.775,780,3.387,789,1.624,802,1.863,953,2.686,954,1.928,955,1.928,956,2.749,957,1.884,958,1.884,959,1.884,960,2.686,962,2.686,964,2.686,966,2.686,967,2.686,968,2.686,969,2.686,970,2.686,971,2.569,972,2.626,973,2.626,974,2.626,975,3.337,976,2.626,977,1.928,978,1.928,979,1.691,980,1.801,981,2.626,982,1.884,983,1.884,984,3.131,985,1.884,986,2.686,987,1.884,988,2.626,989,3.204,990,1.928,991,1.928,992,1.928,993,3.451,994,3.608,995,1.842,996,2.144,997,1.928,998,1.884,999,1.801,1000,3.061,1001,1.928,1002,1.726,1003,1.763,1004,1.928,1005,1.884,1006,1.349,1007,3.131,1008,3.413,1009,1.656,1010,1.842,1011,1.826,1012,2.686,1013,2.686,1014,2.686,1015,2.749,1016,2.626,1017,1.884,1018,1.884,1019,1.884,2362,4.2,2363,4.2,2364,4.2,2365,4.2]],["title/components/MirroringModuleInstanceComponent.html",[57,0.97,192,1.879]],["body/components/MirroringModuleInstanceComponent.html",[0,0.298,3,0.039,4,0.034,5,0.039,14,0.061,15,0.168,18,0.111,19,0.006,21,0.17,24,0.306,26,1.111,27,1,32,1.148,33,1.609,34,0.039,38,0.848,39,1.192,48,1.71,50,2.712,52,1.49,53,0.008,54,0.008,55,0.008,56,0.008,57,1.543,58,1.71,59,1.609,60,1.785,61,1.785,62,1.785,66,1.785,67,4.23,68,3.972,70,2.497,72,2.497,74,2.497,83,2.941,84,0.961,86,4.189,87,4.189,97,0.783,98,0.961,99,0.77,106,1.149,107,3.027,108,3.199,137,1.36,140,3.839,145,3.433,162,3.131,164,1.785,165,2.552,166,1.129,167,1.785,168,2.234,169,1.785,170,1.675,171,0.641,172,1.825,173,1.675,174,3.045,175,1.675,176,1.71,177,1.779,178,1.825,179,1.71,180,1.193,181,1.825,182,1.71,183,1.825,184,1.825,185,1.641,186,1.825,187,1.675,188,1.825,189,1.641,190,1.675,191,1.825,192,2.989,193,1.641,194,1.825,195,1.825,196,1.71,197,1.825,198,1.641,199,1.71,200,1.825,201,1.747,202,1.882,203,1.747,204,2.609,205,1.747,206,1.747,207,1.641,208,1.641,209,1.825,210,1.641,211,1.641,212,1.641,213,1.825,214,1.675,215,1.825,216,1.825,217,1.825,239,2.3,245,1.563,251,0.946,252,1.269,267,1.577,268,2.347,269,1.609,277,2.875,338,3.608,369,1.155,386,2.598,480,1.588,504,2.924,509,2.521,528,2.13,538,0.953,572,0.946,692,3.634,714,4.587,735,2.825,775,3.433,886,1.547,913,2.867,1009,2.347,1029,3.634,1066,2.541,1069,3.961,1070,2.749,1071,2.749,1073,2.639,1075,4.757,1077,3.524,1079,3.394,1080,2.749,1101,3.019,1143,3.394,1144,3.394,1177,2.454,1337,2.639,1338,2.639,1343,4.302,1344,2.454,1359,3.93,1398,2.541,1458,4.066,1470,3.634,1545,3.93,1559,3.103,1561,5.084,1562,4.806,1566,1.91,1567,2.301,1609,2.764,1733,6.123,1734,1.866,1821,5.041,1960,3.634,2142,2.749,2144,3.93,2195,4.797,2196,5.76,2199,5.822,2201,4.797,2202,4.797,2203,4.797,2204,5.234,2205,2.874,2212,2.874,2213,2.874,2214,2.639,2215,2.874,2216,2.874,2217,4.11,2218,3.634,2225,3.508,2226,4.11,2227,4.11,2228,4.11,2229,4.11,2230,4.11,2231,4.11,2232,4.11,2233,4.11,2234,2.874,2235,2.874,2236,2.874,2237,2.374,2238,2.749,2239,2.874,2240,2.874,2241,2.874,2242,2.874,2243,2.874,2244,4.11,2245,4.11,2246,2.874,2247,2.874,2248,5.234,2249,2.639,2250,2.749,2251,2.749,2252,2.874,2253,3.508,2254,4.11,2255,4.11,2256,2.874,2257,5.76,2258,2.874,2259,2.454,2260,2.874,2261,2.874,2262,2.874,2366,4.161,2367,6.944,2368,5.949,2369,6.944,2370,5.822,2371,5.703,2372,5.822,2373,5.949,2374,4.161,2375,6.944,2376,4.161,2377,4.161,2378,4.161,2379,4.161,2380,4.161,2381,4.161,2382,4.161,2383,4.161,2384,3.418,2385,3.418,2386,3.418,2387,5.949,2388,6.848,2389,6.406,2390,4.886,2391,4.886,2392,6.223,2393,6.223,2394,6.223]],["title/classes/MirroringModuleInstanceNode.html",[0,0.341,1591,3.147]],["body/classes/MirroringModuleInstanceNode.html",[0,0.436,2,0.279,3,0.04,4,0.035,5,0.04,7,0.203,8,2.452,11,0.964,12,0.817,14,0.063,15,0.172,18,0.131,19,0.006,21,0.164,24,0.325,29,2.514,34,0.066,37,0.489,38,0.613,44,0.396,45,1.132,53,0.008,54,0.008,55,0.008,56,0.008,57,1.44,84,1.634,97,1.585,98,1.948,99,1.56,103,1.26,104,1.134,114,0.876,136,2.12,137,1.991,166,1.653,168,2.267,171,0.3,177,1.66,180,0.959,192,2.402,202,2.189,245,1.6,251,1.971,252,2.476,267,2.309,268,1.696,269,1.663,277,2.794,343,1.381,344,2.452,345,2.353,369,1.373,372,0.723,386,2.484,392,3.531,414,1.805,415,1.805,416,1.805,419,0.787,421,0.716,424,1.63,427,1.663,428,2.485,433,0.862,444,1.056,453,1.484,480,1.148,487,0.783,501,0.991,513,1.431,538,0.689,572,1.385,588,1.321,590,1.358,591,1.63,611,0.689,640,1.766,653,2.789,678,2.613,697,1.312,735,2.75,795,2.936,796,2.75,799,2.671,802,2.364,804,1.929,826,2.56,828,2.75,839,2.503,847,3.034,851,1.886,853,3.177,865,2.022,870,3.903,871,3.269,886,1.599,908,2.378,979,2.452,1006,3.092,1011,1.858,1036,2.183,1049,2.183,1114,1.63,1173,3.269,1249,2.022,1276,1.886,1279,3.177,1280,2.935,1388,4.128,1430,2.126,1444,2.627,1458,2.308,1463,4.422,1578,3.177,1580,3.177,1581,4.68,1591,5.569,1608,3.091,1609,3.638,1670,3.689,1696,2.183,1734,2.732,1817,3.269,1942,3.368,2273,3.91,2274,4.207,2275,4.207,2276,4.207,2277,4.207,2278,4.207,2279,4.207,2281,3.91,2282,3.368,2284,4.9,2285,4.252,2286,3.795,2287,4.252,2288,4.252,2289,3.368,2290,3.269,2291,3.368,2292,2.971,2294,2.971,2295,3.368,2297,2.971,2299,2.971,2300,3.368,2302,3.368,2303,3.368,2304,3.368,2305,3.368,2306,3.269,2307,3.269,2308,3.368,2309,3.368,2310,2.971,2311,4.207,2312,3.91,2313,3.91,2315,2.971,2316,2.971,2317,2.971,2318,2.971,2319,2.126,2320,2.126,2321,2.378,2324,2.378,2325,3.795,2326,2.308,2327,2.308,2328,2.308,2329,2.308,2331,2.378,2332,2.378,2333,2.378,2334,2.378,2335,2.378,2336,3.368,2337,3.368,2338,2.378,2339,2.378,2340,2.378,2341,2.378,2342,2.378,2395,3.532,2396,6.091,2397,4.301,2398,4.301,2399,4.301,2400,4.301,2401,4.301,2402,4.301,2403,3.838,2404,5.435,2405,3.838]],["title/classes/ModalButton.html",[0,0.341,2406,3.459]],["body/classes/ModalButton.html",[0,0.584,2,0.435,3,0.063,4,0.054,5,0.063,7,0.317,11,0.746,12,0.716,14,0.098,15,0.23,18,0.139,19,0.006,20,0.427,21,0.163,24,0.246,25,4.658,26,1.791,27,1.373,28,4.431,29,2.669,31,2.447,32,1.85,34,0.077,37,0.707,44,0.373,49,1.656,50,3.151,52,2.401,53,0.012,54,0.012,55,0.012,56,0.012,83,3.316,88,5.928,100,4.431,193,3.613,487,0.771,514,1.662,599,2.869,611,1.409,839,3.356,1084,3.499,1110,4.259,1114,3.095,1380,6.274,1802,6.274,2108,5.154,2109,5.154,2225,4.815,2406,6.391,2407,5.985,2408,7.286,2409,7.286,2410,6.708,2411,6.708,2412,6.706,2413,6.706,2414,7.286,2415,7.286,2416,6.708,2417,5.985,2418,5.509,2419,5.985]],["title/components/ModalComponent.html",[57,0.97,193,1.879]],["body/components/ModalComponent.html",[0,0.312,3,0.041,4,0.035,5,0.041,7,0.206,8,3.284,11,0.861,14,0.064,15,0.173,18,0.127,19,0.006,21,0.172,24,0.262,26,1.641,27,1.034,29,2.01,32,2.25,33,1.685,34,0.041,37,0.572,38,0.876,39,1.232,41,2.754,44,0.43,47,2.177,48,1.791,52,1.56,53,0.008,54,0.008,55,0.008,56,0.008,57,1.252,58,1.791,59,1.685,60,1.869,61,1.869,62,1.869,66,1.869,67,4.263,68,4.021,70,2.581,72,2.581,74,2.99,78,6.903,84,1.007,88,4.464,94,1.696,95,6.941,97,1.156,98,1.421,99,1.138,100,5.111,102,3.955,104,1.31,106,1.199,107,2.413,109,1.875,114,1.809,115,2.248,136,1.307,137,2.01,164,1.869,165,2.637,166,1.183,167,1.869,168,2.281,169,1.869,170,1.754,171,0.631,172,1.911,173,1.754,174,3.124,175,1.754,176,1.791,177,1.443,178,1.911,179,1.791,180,1.458,181,1.911,182,1.791,183,1.911,184,1.911,185,1.719,186,1.911,187,1.754,188,1.911,189,1.719,190,1.754,191,1.911,192,1.719,193,3.339,194,1.911,195,1.911,196,1.791,197,1.911,198,1.719,199,1.791,200,1.911,201,1.829,202,1.816,203,1.829,204,2.696,205,1.829,206,1.829,207,1.719,208,1.719,209,1.911,210,1.719,211,1.719,212,1.719,213,1.911,214,1.754,215,1.911,216,1.911,217,1.911,245,1.615,251,1.76,252,2.36,332,2.286,338,2.527,444,0.868,487,0.752,501,0.862,526,2.581,529,2.696,572,2.126,611,1.446,697,1.329,735,2.083,795,2.083,796,2.083,826,2.374,827,3.823,828,2.083,839,2.927,1053,5.05,1064,4.654,1131,3.899,1156,5.869,1164,4.518,1197,4.724,1224,4.464,1242,4.724,1271,5.944,1300,5.05,1380,4.724,1384,5.923,1385,5.617,1451,3.507,2406,5.617,2420,4.358,2421,4.724,2422,7.123,2423,6.148,2424,7.554,2425,7.123,2426,7.737,2427,5.975,2428,8.158,2429,6.356,2430,6.148,2431,4.724,2432,4.358,2433,6.148,2434,6.356,2435,6.356,2436,6.148,2437,4.358,2438,4.358,2439,4.358,2440,6.148,2441,6.148,2442,4.358,2443,4.562,2444,4.358,2445,4.358,2446,6.148,2447,3.889,2448,4.358,2449,3.889,2450,4.358,2451,3.889,2452,3.889,2453,5.486,2454,4.358,2455,4.358,2456,4.358,2457,6.148,2458,4.358,2459,6.148,2460,6.148,2461,6.148]],["title/classes/ModalItem.html",[0,0.341,100,3.147]],["body/classes/ModalItem.html",[0,0.581,2,0.431,3,0.062,4,0.054,5,0.062,7,0.314,11,0.903,12,0.583,14,0.097,15,0.229,18,0.142,19,0.006,20,0.43,21,0.174,24,0.244,25,5.002,26,1.775,27,1.118,28,5.364,29,2.173,31,2.962,32,2.24,34,0.076,37,0.534,44,0.304,49,1.25,50,2.38,52,3.139,53,0.012,54,0.012,55,0.012,56,0.012,83,4.334,88,4.826,99,1.764,100,5.364,107,2.252,108,2.38,193,3.694,487,0.75,514,1.353,599,2.336,611,1.404,839,2.732,1084,4.235,1110,3.467,1114,2.52,1380,5.107,1802,5.107,2108,6.737,2109,6.737,2225,3.92,2406,6.366,2407,5.931,2408,5.931,2409,5.931,2412,5.46,2413,5.46,2414,5.931,2415,5.931,2417,7.246,2418,7.201,2419,7.246,2462,6.647,2463,6.647,2464,6.647,2465,6.647,2466,6.647]],["title/injectables/ModalService.html",[89,3.913,649,1.918]],["body/injectables/ModalService.html",[0,0.311,3,0.041,4,0.035,5,0.041,7,0.205,9,0.86,11,0.941,12,0.742,14,0.063,15,0.173,18,0.123,19,0.006,20,0.374,21,0.165,24,0.261,26,1.161,34,0.041,37,0.655,44,0.438,45,1.354,47,2.338,49,1.155,50,2.197,53,0.008,54,0.008,55,0.008,56,0.008,59,2.988,64,5.477,69,2.207,75,6.348,76,5.726,83,2.15,84,1.005,89,5.042,94,2.449,95,7.437,97,1.338,98,1.644,99,1.317,100,4.7,102,3.551,103,1.599,104,1.349,107,3.059,108,2.547,109,1.872,111,6.68,114,1.808,115,2.889,130,2.873,136,2.133,137,2.007,166,2.097,245,1.612,251,1.924,252,1.872,332,3.145,345,2.043,376,1.65,424,2.327,430,3.176,451,2.692,487,0.752,512,1.907,514,1.574,519,2.17,528,2.197,597,2.282,649,2.471,651,2.334,674,2.334,697,2.357,780,2.239,802,1.639,820,3.111,826,2.49,828,2.08,832,4.716,837,4.457,858,4.24,870,3.115,892,4.721,932,5.477,1011,2.357,1064,3.502,1134,4.716,1135,5.477,1138,4.716,1164,3.893,1223,6.897,1249,2.886,1260,6.348,1276,2.692,1295,4.273,1314,5.042,1362,5.938,1379,5.042,1505,5.042,1604,4.055,1663,5.042,1815,5.365,1920,4.716,2090,5.477,2098,3.88,2108,3.341,2109,3.341,2110,3.88,2284,3.294,2290,3.294,2306,3.294,2406,5.611,2412,3.572,2413,3.572,2418,7.141,2427,4.979,2443,4.557,2467,4.349,2468,6.139,2469,6.139,2470,6.139,2471,6.139,2472,5.042,2473,6.139,2474,6.139,2475,6.139,2476,6.139,2477,6.139,2478,6.139,2479,6.139,2480,6.139,2481,6.139,2482,6.139,2483,6.139,2484,6.139,2485,6.139,2486,6.139,2487,7.729,2488,6.139,2489,6.139,2490,6.139,2491,6.139,2492,4.349,2493,6.139,2494,4.349,2495,6.139,2496,6.139,2497,4.349,2498,5.042,2499,5.042,2500,6.139,2501,6.139,2502,6.139,2503,5.477,2504,6.139,2505,4.349,2506,6.139,2507,9.152,2508,6.139,2509,4.349,2510,7.729,2511,4.349,2512,7.729,2513,4.349,2514,4.349,2515,7.115,2516,4.349,2517,4.349,2518,4.349,2519,4.349,2520,4.349,2521,4.349,2522,4.349,2523,4.349,2524,4.349,2525,4.349,2526,4.349,2527,4.349,2528,4.349,2529,4.349,2530,4.349,2531,4.349,2532,4.349,2533,4.349,2534,4.349]],["title/classes/ModuleApplication.html",[0,0.341,434,2]],["body/classes/ModuleApplication.html",[0,0.635,2,0.246,3,0.036,4,0.031,5,0.036,7,0.179,9,0.734,11,0.929,12,0.488,14,0.055,15,0.157,18,0.145,19,0.006,20,0.436,21,0.185,24,0.326,34,0.087,37,0.671,38,0.94,39,1.322,44,0.353,46,2.154,49,1.048,53,0.007,54,0.007,55,0.007,56,0.007,94,1.048,99,1.345,103,1.364,106,0.524,107,1.288,108,1.361,116,2.499,127,1.759,162,2.032,171,0.461,177,1.705,180,0.878,202,1.549,219,1.908,277,2.507,286,3.591,342,1.651,343,2.484,345,1.265,367,1.929,368,1.983,369,1.725,370,1.854,372,0.937,373,1.699,375,4.518,376,2.105,379,0.813,382,1.589,385,2.39,386,2.229,387,1.832,388,2.39,389,1.832,390,2.198,391,1.832,392,3.028,393,1.983,394,3.028,395,1.983,396,3.028,397,1.983,398,2.62,399,1.879,400,3.317,401,1.787,402,2.399,403,1.159,404,2.935,405,1.821,406,1.562,407,2.698,408,1.854,409,1.745,410,1.879,411,2.254,412,2.133,413,3.727,414,3.246,415,3.246,416,3.246,417,4.391,418,4.128,419,0.734,420,2.829,421,0.775,422,1.005,423,3.348,424,2.501,425,3.441,426,3.441,427,2.55,428,2.318,429,3.441,430,2.711,431,3.335,432,2.906,433,0.679,434,2.339,435,1.983,436,1.983,437,1.705,438,1.983,439,2.906,440,2.499,441,2.906,442,1.699,443,2.443,444,0.804,445,2.769,446,3.789,447,1.983,448,1.311,449,1.983,450,1.787,451,1.667,452,1.667,453,1.311,454,1.63,455,1.983,456,1.983,457,1.787,458,2.685,459,1.929,460,1.745,461,0.811,462,2.62,463,3.636,464,1.832,465,1.832,466,2.828,467,3.687,468,3.501,469,3.116,470,2.906,471,3.441,472,3.348,473,2.959,474,1.832,475,3.687,476,0.726,477,1.929,478,1.787,479,1.832,516,2.829,521,1.63,531,1.63,538,0.892,541,1.63,543,1.595,551,2.032,552,2.032,553,2.032,554,2.032,555,2.032,556,2.032,557,2.032,558,2.032,559,2.032,563,2.443,564,1.615,565,2.443,566,2.443,567,2.443,568,2.443,569,2.443,570,2.443,571,2.443,572,1.267,573,1.394,574,2.443,575,1.729,743,3.05,804,1.705,2535,3.801,2536,3.801,2537,3.801,2538,3.801,2539,3.801,2540,3.801,2541,3.801,2542,3.801,2543,3.801,2544,3.801,2545,3.801,2546,3.801,2547,3.801,2548,3.801,2549,3.801,2550,3.801,2551,3.801,2552,3.801,2553,3.801,2554,3.801,2555,3.801,2556,3.801,2557,3.122,2558,3.122,2559,3.122,2560,3.122,2561,3.122,2562,3.122,2563,3.122,2564,3.122,2565,3.122,2566,3.122,2567,3.122,2568,3.122,2569,3.122,2570,3.122,2571,3.122]],["title/classes/ModuleClassificationDTO.html",[0,0.341,521,2.044]],["body/classes/ModuleClassificationDTO.html",[0,0.685,2,0.242,3,0.035,4,0.03,5,0.035,7,0.176,9,0.948,12,0.573,13,1.355,14,0.055,15,0.203,18,0.124,19,0.006,20,0.452,21,0.154,24,0.24,27,0.628,30,1.569,34,0.09,37,0.699,38,1.027,39,0.749,44,0.458,45,1.481,49,1.637,53,0.007,54,0.007,55,0.007,56,0.007,91,1.723,96,1.536,97,0.703,104,0.963,106,1.058,114,0.761,115,1.18,171,0.646,180,0.589,219,0.982,352,1.266,369,1.069,370,1.244,371,1.639,372,1.397,373,2.45,376,1.175,379,0.848,382,1.863,402,1.16,403,1.992,404,2.236,405,2.136,406,1.048,407,1.569,408,1.832,419,1.069,421,1.13,422,1.465,433,1.118,442,1.14,444,0.979,461,1.538,476,1.248,480,1.469,484,1.677,485,1.889,486,2.469,487,0.76,488,2.469,489,2.469,496,2.31,497,2.31,498,1.677,499,2.526,500,1.16,501,0.524,502,1.677,503,1.603,504,1.364,505,1.677,506,1.677,507,1.677,508,1.677,509,1.244,510,1.603,511,1.677,512,1.639,513,1.244,514,0.761,515,1.445,516,3.091,517,1.677,518,1.677,519,1.14,520,2.469,521,2.802,522,2.93,523,3.232,524,2.93,525,2.93,526,1.569,527,3.643,528,1.338,529,1.639,530,1.677,531,2.361,532,1.677,533,1.677,534,1.677,535,1.677,536,1.677,537,1.677,538,1.154,539,1.677,540,1.603,541,2.361,542,1.417,543,2.31,544,1.677,545,1.677,546,2.414,547,1.677,548,1.677,549,2.361,550,1.677,551,1.364,552,1.364,553,1.364,554,1.364,555,1.364,556,1.364,557,1.364,558,1.364,559,1.364,560,1.677,561,1.677,562,1.677,563,1.639,564,1.596,565,1.639,566,1.639,567,1.639,568,1.639,569,1.639,570,1.639,571,1.639,572,0.85,573,1.377,574,1.639,575,1.708,576,0.864,577,1.677,578,1.677,579,0.906,580,1.677,581,1.569,582,1.603,583,2.216,584,0.982,585,1.39,586,1.121,587,2.469,588,1.194,589,1.803,590,1.18,591,1.417,592,2.414,593,1.364,594,1.639,595,2.93,596,1.639,597,1.39,598,2.865,599,2.296,600,1.603,601,1.677,602,1.569,603,1.417,604,1.677,605,1.417,2572,3.738,2573,3.738,2574,3.738,2575,3.738,2576,3.738,2577,3.738,2578,3.738]],["title/classes/ModuleConstraints.html",[0,0.341,962,2.137]],["body/classes/ModuleConstraints.html",[0,0.694,2,0.279,3,0.04,4,0.035,5,0.04,7,0.203,9,1.002,11,0.938,12,0.377,13,1.5,15,0.199,19,0.006,20,0.433,24,0.158,31,1.569,34,0.091,37,0.677,44,0.46,45,1.231,47,1.77,53,0.008,54,0.008,55,0.008,56,0.008,91,1.746,103,0.89,104,0.898,106,1.06,109,1.312,171,0.3,239,1.663,259,1.929,342,1.076,372,1.024,379,0.534,411,1.89,412,1.186,419,1.083,421,1.141,422,1.479,433,1.136,444,1.098,448,3.266,476,1.47,485,1.907,487,0.632,500,1.334,501,1.215,514,0.876,538,0.689,573,1.076,576,1.634,579,2.043,584,1.13,586,1.29,588,1.828,589,2.035,611,1.231,615,2.222,616,2.222,618,2.222,619,1.63,620,2.86,621,1.457,622,1.956,623,1.599,624,1.599,625,1.599,626,1.54,627,1.54,629,1.431,640,1.766,644,1.599,761,1.663,777,2.801,780,3.401,789,1.663,802,1.888,953,2.732,954,1.975,955,1.975,956,2.796,957,1.929,958,1.929,959,1.929,960,2.732,962,3.172,964,2.732,966,2.732,967,2.732,968,2.732,969,2.732,970,2.732,971,2.613,972,2.671,973,2.671,974,2.671,975,3.373,976,2.671,977,1.975,978,1.975,979,1.731,980,1.845,981,2.671,982,1.929,983,1.929,984,2.732,985,1.929,986,2.732,987,1.929,988,2.671,989,3.531,990,1.975,991,1.975,992,1.975,993,3.033,994,3.45,995,1.886,996,2.18,997,1.975,998,1.929,999,1.845,1000,3.101,1001,1.975,1002,1.768,1003,1.805,1004,1.975,1005,1.929,1006,1.381,1007,3.172,1008,3.45,1009,1.696,1010,1.886,1011,1.858,1012,2.732,1013,2.732,1014,2.732,1015,2.796,1016,2.671,1017,1.929,1018,1.929,1019,1.929]],["title/classes/ModuleDTO.html",[0,0.341,407,1.358]],["body/classes/ModuleDTO.html",[0,0.673,2,0.213,3,0.031,4,0.027,5,0.031,7,0.155,9,0.913,12,0.593,13,1.232,14,0.048,15,0.19,18,0.142,19,0.006,20,0.451,21,0.18,24,0.222,27,0.553,30,1.381,34,0.088,37,0.726,38,0.964,39,0.659,44,0.454,45,1.446,49,1.581,53,0.006,54,0.006,55,0.006,56,0.006,91,1.695,96,1.352,97,0.619,99,0.926,104,0.738,106,1.055,114,0.67,115,1.039,171,0.642,180,0.953,219,0.864,352,1.115,369,1.175,370,1.095,371,1.443,372,1.413,373,2.337,375,4.184,376,1.988,379,0.839,382,1.726,402,1.021,403,1.846,404,2.92,405,1.979,406,0.923,407,1.726,408,1.665,419,1.052,421,1.112,422,1.441,433,1.09,442,1.004,444,0.887,461,1.444,476,1.157,480,1.336,484,1.476,485,1.856,486,2.244,487,0.742,488,2.244,489,2.715,496,2.1,497,2.1,498,1.476,499,2.34,500,1.021,501,0.461,502,1.476,503,1.412,504,1.2,505,1.476,506,1.476,507,1.476,508,1.476,509,1.095,510,1.412,511,1.476,512,1.443,513,1.095,514,0.67,515,1.272,516,3.416,517,1.476,518,1.476,519,1.004,520,1.476,521,2.597,522,1.476,523,2.244,524,1.476,525,1.476,526,1.381,527,3.492,528,1.178,529,1.443,530,1.476,531,2.597,532,1.476,533,1.476,534,1.476,535,1.476,536,1.476,537,1.476,538,1.227,539,1.476,540,1.412,541,2.597,542,1.247,543,2.541,544,1.476,545,1.476,546,2.194,547,1.476,548,1.476,549,2.146,550,1.476,551,2.208,552,2.208,553,2.208,554,2.208,555,2.208,556,2.208,557,2.208,558,2.208,559,2.208,560,2.244,561,2.244,562,2.244,563,2.655,564,1.961,565,2.655,566,2.655,567,2.655,568,2.655,569,2.655,570,2.655,571,2.655,572,1.377,573,1.692,574,2.655,575,2.098,576,0.76,577,1.476,578,1.476,579,0.798,580,1.476,581,1.381,582,1.412,583,2.014,584,0.864,585,1.224,586,0.987,587,2.244,588,1.085,589,1.708,590,1.039,591,1.247,592,2.194,593,1.2,594,1.443,595,2.715,596,1.443,597,1.224,598,2.655,599,2.127,600,1.412,601,1.476,602,1.381,603,1.247,604,1.476,605,1.247,743,2.869,2557,2.703,2558,2.703,2559,2.703,2560,2.703,2561,2.703,2562,2.703,2563,2.703,2564,2.703,2565,2.703,2566,2.703,2567,2.703,2568,2.703,2569,2.703,2570,2.703,2571,2.703,2579,3.291,2580,3.291,2581,3.291,2582,3.291,2583,3.291,2584,3.291,2585,3.291,2586,3.291,2587,3.291,2588,3.291,2589,3.291,2590,3.291,2591,3.291,2592,3.291]],["title/classes/ModuleExport.html",[0,0.341,971,2.044]],["body/classes/ModuleExport.html",[0,0.69,2,0.266,3,0.039,4,0.033,5,0.039,7,0.194,9,1.006,11,0.973,12,0.517,13,1.453,14,0.06,15,0.225,18,0.125,19,0.006,20,0.433,21,0.159,24,0.151,31,1.5,34,0.091,37,0.687,44,0.458,45,1.207,47,1.726,53,0.008,54,0.008,55,0.008,56,0.008,91,1.737,103,1.22,104,0.869,106,1.038,109,1.254,171,0.287,239,1.59,259,1.844,342,1.726,372,1.267,379,0.517,411,1.83,412,1.134,419,1.078,421,1.13,422,1.465,433,1.127,444,1.067,448,3.243,476,1.44,485,1.887,487,0.619,500,1.276,501,1.199,514,0.837,538,0.658,573,1.029,576,1.594,579,2.013,584,1.08,586,1.233,588,1.801,589,2.092,611,1.207,615,2.152,616,2.152,618,2.516,619,1.559,620,2.967,621,1.998,622,2.216,623,2.193,624,2.193,625,2.193,626,2.112,627,2.112,629,2.295,640,1.71,644,1.529,743,1.622,761,1.59,777,2.753,780,3.452,789,1.59,802,1.841,953,2.646,954,1.888,955,1.888,956,2.708,957,1.844,958,1.844,959,1.844,960,2.646,962,2.646,964,2.646,966,2.646,967,2.646,968,2.646,969,2.646,970,2.646,971,2.959,972,2.587,973,2.587,974,2.587,975,3.305,976,2.587,977,3.167,978,3.167,979,2.777,980,1.764,981,2.587,982,1.844,983,1.844,984,2.646,985,1.844,986,2.646,987,1.844,988,2.587,989,3.167,990,1.888,991,1.888,992,1.888,993,2.959,994,3.38,995,1.803,996,2.112,997,1.888,998,1.844,999,1.764,1000,3.025,1001,1.888,1002,1.69,1003,1.726,1004,1.888,1005,1.844,1006,1.321,1007,3.094,1008,3.38,1009,1.622,1010,1.803,1011,1.799,1012,2.646,1013,2.646,1014,2.646,1015,2.708,1016,2.587,1017,1.844,1018,1.844,1019,1.844,2593,4.112,2594,4.112,2595,4.112,2596,4.112,2597,4.112,2598,4.112,2599,4.112]],["title/classes/ModuleInstance.html",[0,0.341,473,2.137]],["body/classes/ModuleInstance.html",[0,0.67,2,0.316,3,0.046,4,0.04,5,0.046,9,0.74,11,0.976,12,0.583,14,0.071,15,0.187,18,0.124,19,0.006,20,0.428,21,0.158,24,0.344,34,0.091,37,0.535,38,0.948,39,1.516,44,0.371,46,1.888,53,0.009,54,0.009,55,0.009,56,0.009,94,1.347,103,1.376,116,2.984,127,1.541,162,2.426,171,0.341,177,1.907,202,1.996,219,1.987,277,2.721,286,3.74,342,1.222,343,2.73,345,1.625,367,2.478,368,2.547,369,1.819,370,2.214,375,3.054,376,1.615,379,0.812,382,1.897,385,2.853,386,2.419,387,2.353,388,2.853,389,2.353,390,2.624,391,2.353,392,3.73,393,2.547,394,3.73,395,2.547,396,3.73,397,2.547,398,3.128,399,2.414,400,3.485,401,2.296,402,2.52,403,2.029,404,2.064,405,2.175,406,2.384,407,1.897,408,2.214,409,2.242,410,2.414,411,2.52,412,2.087,413,3.646,414,3.176,415,3.176,416,3.176,417,4.631,418,4.437,419,0.74,420,2.853,421,0.782,422,1.014,423,3.376,424,2.522,425,3.47,426,3.47,427,2.572,428,2.337,429,3.47,430,2.734,431,3.473,432,2.547,433,0.595,434,2.049,435,2.547,436,2.547,437,2.19,438,2.547,439,3.47,440,2.984,441,3.47,442,2.029,443,2.917,444,0.922,445,3.176,446,3.47,447,2.547,448,1.684,449,2.547,450,2.296,451,2.141,452,2.141,453,1.684,454,2.094,455,2.547,456,2.547,457,2.296,458,3.206,459,2.478,460,2.242,461,1.042,462,3.557,463,3.997,464,2.353,465,2.353,466,3.376,467,4.123,468,3.915,469,3.485,470,3.47,471,3.946,472,4.123,473,3.644,474,3.646,475,4.123,476,1.446,477,2.478,478,2.296,479,2.353,804,2.19,2600,4.883,2601,4.883,2602,4.883,2603,4.883,2604,4.883]],["title/classes/ModuleInstanceDTO.html",[0,0.341,406,1.336]],["body/classes/ModuleInstanceDTO.html",[0,0.687,2,0.247,3,0.036,4,0.031,5,0.036,7,0.18,9,0.973,12,0.58,13,1.377,14,0.056,15,0.205,18,0.097,19,0.006,20,0.452,21,0.104,24,0.243,27,0.642,30,1.603,34,0.09,37,0.703,38,1.038,39,0.765,44,0.458,45,1.497,49,1.573,53,0.007,54,0.007,55,0.007,56,0.007,91,1.728,96,1.569,97,0.718,104,0.824,106,1.067,114,0.777,115,1.205,171,0.649,180,0.601,219,1.003,352,1.294,369,1.085,370,1.271,371,1.674,372,1.406,373,2.22,376,1.193,379,0.848,382,1.886,402,1.185,403,2.22,404,2.259,405,2.162,406,1.568,407,1.594,408,1.86,419,1.072,421,1.133,422,1.469,433,1.111,442,1.164,444,0.944,461,1.654,476,1.481,480,1.492,484,1.713,485,1.894,486,2.508,487,0.768,488,2.508,489,2.508,496,2.347,497,2.347,498,1.713,499,2.557,500,1.185,501,0.535,502,1.713,503,1.638,504,1.393,505,1.713,506,1.713,507,1.713,508,1.713,509,1.271,510,1.638,511,1.713,512,1.674,513,1.271,514,0.777,515,1.476,516,3.123,517,1.713,518,1.713,519,1.164,520,1.713,521,2.398,522,1.713,523,2.508,524,1.713,525,1.713,526,1.603,527,3.667,528,1.367,529,1.674,530,1.713,531,2.398,532,1.713,533,1.713,534,1.713,535,1.713,536,1.713,537,1.713,538,1.166,539,1.713,540,1.638,541,2.398,542,1.447,543,2.347,544,1.713,545,1.713,546,2.451,547,1.713,548,1.713,549,2.398,550,1.713,551,1.393,552,1.393,553,1.393,554,1.393,555,1.393,556,1.393,557,1.393,558,1.393,559,1.393,560,1.713,561,1.713,562,1.713,563,1.674,564,1.621,565,1.674,566,1.674,567,1.674,568,1.674,569,1.674,570,1.674,571,1.674,572,0.868,573,1.399,574,1.674,575,1.734,576,0.882,577,1.713,578,1.713,579,0.925,580,1.713,581,1.603,582,1.638,583,2.25,584,1.003,585,1.42,586,1.145,587,2.508,588,1.212,589,1.9,590,1.205,591,1.447,592,2.451,593,1.393,594,1.674,595,3.265,596,1.674,597,1.42,598,3.192,599,2.558,600,1.638,601,1.713,602,1.603,603,1.447,604,1.713,605,1.447,2605,3.818,2606,3.818]],["title/classes/ModuleInstancePropertiesDTO.html",[0,0.341,403,1.453]],["body/classes/ModuleInstancePropertiesDTO.html",[0,0.685,2,0.242,3,0.035,4,0.03,5,0.035,7,0.176,9,0.968,12,0.573,13,1.355,14,0.055,15,0.216,18,0.121,19,0.006,20,0.452,21,0.149,24,0.24,27,0.628,30,1.569,34,0.09,37,0.668,38,1.145,39,0.749,44,0.458,45,1.492,49,1.562,53,0.007,54,0.007,55,0.007,56,0.007,91,1.723,96,1.536,97,0.703,104,0.811,106,1.058,114,0.761,115,1.18,171,0.646,180,0.589,219,0.982,352,1.266,369,1.069,370,1.244,371,1.639,372,1.463,373,2.198,376,1.175,379,0.851,382,1.863,402,1.16,403,2.198,404,2.236,405,2.136,406,1.048,407,1.569,408,1.832,419,1.069,421,1.13,422,1.465,433,1.118,442,1.14,444,0.979,461,1.538,476,1.248,480,1.924,484,1.677,485,1.889,486,2.469,487,0.766,488,2.469,489,2.469,496,2.31,497,2.31,498,1.677,499,2.526,500,1.16,501,0.524,502,1.677,503,1.603,504,1.364,505,1.677,506,1.677,507,1.677,508,1.677,509,1.244,510,1.603,511,1.677,512,1.639,513,1.244,514,0.761,515,1.445,516,3.091,517,1.677,518,1.677,519,1.14,520,1.677,521,2.361,522,1.677,523,2.469,524,1.677,525,1.677,526,1.569,527,3.643,528,1.338,529,1.639,530,1.677,531,2.361,532,1.677,533,1.677,534,1.677,535,1.677,536,1.677,537,1.677,538,1.286,539,1.677,540,1.603,541,2.361,542,1.417,543,2.31,544,1.677,545,1.677,546,2.414,547,1.677,548,1.677,549,2.361,550,1.677,551,1.364,552,1.364,553,1.364,554,1.364,555,1.364,556,1.364,557,1.364,558,1.364,559,1.364,560,1.677,561,1.677,562,1.677,563,1.639,564,1.596,565,1.639,566,1.639,567,1.639,568,1.639,569,1.639,570,1.639,571,1.639,572,0.85,573,1.377,574,1.639,575,1.708,576,0.864,577,1.677,578,1.677,579,0.906,580,1.677,581,1.569,582,1.603,583,2.63,584,0.982,585,1.39,586,1.121,587,2.93,588,1.417,589,1.886,590,2.062,591,2.476,592,2.414,593,1.364,594,1.639,595,2.93,596,1.639,597,1.39,598,2.865,599,2.296,600,1.603,601,1.677,602,1.569,603,1.417,604,1.677,605,1.417,2607,3.738,2608,3.738,2609,3.738,2610,3.738,2611,3.738,2612,3.738]],["title/classes/ModuleInstanceSimpleData.html",[0,0.341,631,2.718]],["body/classes/ModuleInstanceSimpleData.html",[0,0.681,2,0.364,3,0.053,4,0.046,5,0.053,7,0.266,9,1.016,11,0.813,12,0.753,13,1.8,14,0.082,15,0.251,18,0.107,19,0.006,20,0.436,21,0.136,24,0.207,34,0.09,37,0.691,38,0.802,44,0.456,53,0.01,54,0.01,55,0.01,56,0.01,91,1.723,94,1.551,103,1.163,166,1.526,171,0.393,342,1.408,372,1.365,379,0.712,412,1.551,419,1.069,421,1.12,422,1.452,433,1.048,444,1.086,461,1.835,476,1.643,480,1.951,485,1.879,487,0.462,501,1.248,538,1.17,564,1.631,573,1.408,575,1.745,576,1.3,584,1.477,585,2.091,588,1.932,589,2.018,590,1.775,593,2.052,606,4.31,607,3.435,608,3.316,609,4.31,610,3.435,611,1.17,612,5.068,615,2.666,616,2.962,617,4.31,618,2.666,619,2.132,620,2.091,621,1.906,622,1.807,623,2.091,624,2.091,625,2.091,626,2.013,627,2.013,628,3.11,629,1.872,630,4.169,631,4.632,632,4.31,633,4.31,634,4.632,635,3.435,636,3.316,637,4.31,638,3.316,639,4.31,640,1.631,641,3.316,642,3.435,643,3.435,644,2.091,645,3.435,646,3.209,647,3.435,648,3.435,2613,5.624,2614,5.624]],["title/classes/ModuleListDTO.html",[0,0.341,503,2.044]],["body/classes/ModuleListDTO.html",[0,0.683,2,0.237,3,0.034,4,0.03,5,0.034,7,0.172,9,0.942,12,0.565,13,1.332,14,0.053,15,0.201,18,0.132,19,0.006,20,0.452,21,0.166,24,0.237,27,0.614,30,1.532,34,0.09,37,0.662,38,1.015,39,0.731,44,0.457,45,1.475,49,1.551,53,0.007,54,0.007,55,0.007,56,0.007,91,1.718,96,1.5,97,0.687,104,0.797,106,1.166,114,0.743,115,1.152,171,0.643,180,0.575,219,1.42,352,1.237,369,1.05,370,1.215,371,1.601,372,1.386,373,2.172,376,1.155,379,0.859,382,1.837,402,1.132,403,1.965,404,2.36,405,2.106,406,1.024,407,1.542,408,1.8,419,1.066,421,1.127,422,1.461,433,1.101,442,1.649,444,0.927,461,1.624,476,1.231,480,1.444,484,1.637,485,1.883,486,2.426,487,0.757,488,2.426,489,2.426,496,2.704,497,2.704,498,1.637,499,2.491,500,1.678,501,0.758,502,2.426,503,2.32,504,2.35,505,2.89,506,2.89,507,2.89,508,2.89,509,2.144,510,2.763,511,2.89,512,2.825,513,2.144,514,0.743,515,1.411,516,3.055,517,1.637,518,1.637,519,1.113,520,1.637,521,2.32,522,1.637,523,2.426,524,1.637,525,1.637,526,1.532,527,3.615,528,1.307,529,1.601,530,1.637,531,2.32,532,1.637,533,1.637,534,1.637,535,1.637,536,1.637,537,1.637,538,1.141,539,1.637,540,1.566,541,2.32,542,1.384,543,2.27,544,1.637,545,1.637,546,2.371,547,1.637,548,1.637,549,2.32,550,1.637,551,1.331,552,1.331,553,1.331,554,1.331,555,1.331,556,1.331,557,1.331,558,1.331,559,1.331,560,1.637,561,1.637,562,1.637,563,1.601,564,1.568,565,1.601,566,1.601,567,1.601,568,1.601,569,1.601,570,1.601,571,1.601,572,0.83,573,1.353,574,1.601,575,1.678,576,0.843,577,1.637,578,1.637,579,0.885,580,1.637,581,1.532,582,1.566,583,2.177,584,0.959,585,1.357,586,1.094,587,2.426,588,1.173,589,1.786,590,1.152,591,1.384,592,2.371,593,1.331,594,1.601,595,2.89,596,1.601,597,1.357,598,2.825,599,2.264,600,1.566,601,1.637,602,1.532,603,1.384,604,1.637,605,1.384,2615,3.65,2616,3.65,2617,3.65,2618,3.65,2619,3.65,2620,3.65,2621,3.65,2622,3.65,2623,3.65,2624,3.65,2625,3.65]],["title/classes/ModuleModeDTO.html",[0,0.341,541,2.044]],["body/classes/ModuleModeDTO.html",[0,0.686,2,0.246,3,0.036,4,0.031,5,0.036,7,0.18,9,0.953,12,0.578,13,1.373,14,0.056,15,0.205,18,0.106,19,0.006,20,0.452,21,0.123,24,0.242,27,0.639,30,1.597,34,0.09,37,0.671,38,1.036,39,0.762,44,0.458,45,1.496,49,1.644,53,0.007,54,0.007,55,0.007,56,0.007,91,1.727,96,1.563,97,0.715,104,0.973,106,1.066,114,0.774,115,1.201,171,0.657,180,0.599,219,0.999,352,1.289,369,1.082,370,1.266,371,1.668,372,1.404,373,2.216,376,1.19,379,0.85,382,1.881,402,1.18,403,2.012,404,2.254,405,2.157,406,1.067,407,1.589,408,1.855,419,1.071,421,1.132,422,1.468,433,1.121,442,1.16,444,0.943,461,1.551,476,1.261,480,1.488,484,1.706,485,1.893,486,2.5,487,0.768,488,2.5,489,2.5,496,2.34,497,2.34,498,1.706,499,2.551,500,1.18,501,0.533,502,1.706,503,1.631,504,1.387,505,1.706,506,1.706,507,1.706,508,1.706,509,1.266,510,1.631,511,1.706,512,1.668,513,1.266,514,0.774,515,1.47,516,3.117,517,1.706,518,1.706,519,1.16,520,1.706,521,2.391,522,1.706,523,2.5,524,1.706,525,1.706,526,1.597,527,3.663,528,1.362,529,1.668,530,1.706,531,2.391,532,1.706,533,1.706,534,1.706,535,1.706,536,1.706,537,1.706,538,1.163,539,1.706,540,2.391,541,2.83,542,2.501,543,2.34,544,1.706,545,1.706,546,2.445,547,1.706,548,1.706,549,2.391,550,1.706,551,1.387,552,1.387,553,1.387,554,1.387,555,1.387,556,1.387,557,1.387,558,1.387,559,1.387,560,1.706,561,1.706,562,1.706,563,1.668,564,1.616,565,1.668,566,1.668,567,1.668,568,1.668,569,1.668,570,1.668,571,1.668,572,0.865,573,1.395,574,1.668,575,1.729,576,0.879,577,1.706,578,1.706,579,0.922,580,1.706,581,1.597,582,1.631,583,2.244,584,0.999,585,1.414,586,1.14,587,2.5,588,1.209,589,1.816,590,1.201,591,1.442,592,2.445,593,1.387,594,1.668,595,2.96,596,1.668,597,1.414,598,2.894,599,2.319,600,1.631,601,1.706,602,1.597,603,1.442,604,1.706,605,1.442,2626,3.803,2627,3.803,2628,3.803]],["title/classes/ModuleNetworkInterfaceDTO.html",[0,0.341,402,1.478]],["body/classes/ModuleNetworkInterfaceDTO.html",[0,0.685,2,0.242,3,0.035,4,0.03,5,0.035,7,0.176,9,0.967,12,0.572,13,1.354,14,0.054,15,0.203,18,0.124,19,0.006,20,0.452,21,0.154,24,0.24,27,0.628,30,1.567,34,0.09,37,0.699,38,1.145,39,0.748,44,0.457,45,1.492,49,1.636,53,0.007,54,0.007,55,0.007,56,0.007,91,1.723,96,1.534,97,0.702,104,0.811,106,1.058,114,0.76,115,1.178,171,0.646,180,0.588,219,0.981,352,1.265,369,1.068,370,1.242,371,1.637,372,1.396,373,2.449,376,1.394,379,0.848,382,1.861,402,1.706,403,1.991,404,2.234,405,2.134,406,1.047,407,1.861,408,1.83,419,1.069,421,1.13,422,1.465,433,1.117,442,1.139,444,0.936,461,1.537,476,1.247,480,1.468,484,1.675,485,1.888,486,2.467,487,0.76,488,2.467,489,2.467,496,2.308,497,2.308,498,1.675,499,2.784,500,1.158,501,0.523,502,1.675,503,1.601,504,1.362,505,1.675,506,1.675,507,1.675,508,1.675,509,1.242,510,1.601,511,1.675,512,1.637,513,1.242,514,0.76,515,1.443,516,3.089,517,1.675,518,1.675,519,1.139,520,1.675,521,2.359,522,1.675,523,2.467,524,1.675,525,1.675,526,1.567,527,3.641,528,1.336,529,1.637,530,1.675,531,2.359,532,1.675,533,1.675,534,1.675,535,1.675,536,1.675,537,1.675,538,1.153,539,1.675,540,1.601,541,2.359,542,1.415,543,2.308,544,1.675,545,1.675,546,2.411,547,1.675,548,1.675,549,2.359,550,1.675,551,1.362,552,1.362,553,1.362,554,1.362,555,1.362,556,1.362,557,1.362,558,1.362,559,1.362,560,1.675,561,1.675,562,1.675,563,1.637,564,1.594,565,1.637,566,1.637,567,1.637,568,1.637,569,1.637,570,1.637,571,1.637,572,0.849,573,1.376,574,1.637,575,1.706,576,1.271,577,2.467,578,2.928,579,1.582,580,2.928,581,1.567,582,1.601,583,2.214,584,0.981,585,1.388,586,1.119,587,2.467,588,1.193,589,1.802,590,1.178,591,1.415,592,2.411,593,1.362,594,1.637,595,2.928,596,1.637,597,1.388,598,2.863,599,2.294,600,1.601,601,1.675,602,1.567,603,1.415,604,1.675,605,1.415,2629,3.733,2630,3.733,2631,3.733,2632,3.733,2633,3.733,2634,3.733,2635,3.733]],["title/injectables/ModuleService.html",[229,3.022,649,1.918]],["body/injectables/ModuleService.html",[0,0.376,3,0.049,4,0.043,5,0.049,14,0.077,18,0.127,19,0.006,20,0.43,21,0.166,24,0.329,26,1.402,34,0.049,49,1.314,53,0.01,54,0.01,55,0.01,56,0.01,69,2.666,84,1.214,97,1.639,98,2.013,99,1.613,138,2.819,229,4.432,232,5.799,245,1.835,251,1.982,295,3.47,326,3.47,327,3.47,331,4.774,332,3.112,352,2.835,379,0.839,400,2.997,401,2.47,402,2.168,404,2.168,407,1.992,409,2.412,503,2.997,649,2.813,651,2.819,653,3.844,656,4.036,657,6.076,659,5.073,663,6.235,664,4.268,669,4.036,674,2.819,675,2.666,676,6.135,678,2.253,697,2.552,710,5.625,719,4.935,735,2.367,1566,3.208,1952,6.43,1953,6.43,1962,5.529,2008,6.874,2009,6.874,2010,6.874,2011,6.874,2012,6.874,2013,6.874,2636,5.253,2637,8.369,2638,6.988,2639,6.235,2640,6.988,2641,6.988,2642,5.253,2643,5.253,2644,6.988,2645,5.253,2646,7.852,2647,6.988,2648,5.253,2649,5.253,2650,5.253,2651,6.235,2652,6.988,2653,5.253,2654,6.988,2655,6.988,2656,5.253,2657,6.988,2658,5.253,2659,5.253,2660,5.253]],["title/classes/ModuleSimpleData.html",[0,0.341,972,2.089]],["body/classes/ModuleSimpleData.html",[0,0.693,2,0.275,3,0.04,4,0.034,5,0.04,7,0.2,9,0.998,11,0.96,12,0.372,13,1.485,14,0.062,15,0.227,18,0.088,19,0.006,20,0.432,21,0.112,24,0.156,31,1.546,34,0.091,37,0.709,44,0.459,45,1.223,47,1.756,53,0.008,54,0.008,55,0.008,56,0.008,91,1.743,103,0.877,104,1.034,106,1.053,109,1.293,171,0.296,239,1.639,259,1.901,342,1.061,372,1.013,379,0.528,411,1.87,412,1.169,419,1.081,421,1.139,422,1.476,433,1.133,444,1.094,448,3.259,476,1.603,485,1.903,487,0.628,500,1.315,501,1.209,514,0.863,538,0.679,573,1.061,576,1.621,579,2.033,584,1.113,586,1.271,588,1.82,589,2.026,611,1.223,615,2.199,616,2.559,618,2.199,619,1.607,620,3.002,621,1.436,622,1.936,623,1.576,624,1.576,625,1.576,626,1.517,627,1.517,629,1.411,640,1.748,644,1.576,761,1.639,777,2.785,780,3.392,789,1.639,802,1.873,953,2.704,954,1.946,955,1.946,956,2.768,957,1.901,958,1.901,959,1.901,960,2.704,962,2.704,964,2.704,966,2.704,967,2.704,968,2.704,969,2.704,970,2.704,971,2.586,972,3.076,973,2.644,974,2.644,975,3.351,976,2.644,977,1.946,978,1.946,979,1.706,980,2.586,981,3.076,982,1.901,983,1.901,984,2.704,985,1.901,986,2.704,987,1.901,988,2.644,989,3.221,990,1.946,991,1.946,992,1.946,993,3.009,994,3.428,995,1.859,996,2.158,997,1.946,998,1.901,999,1.818,1000,3.076,1001,1.946,1002,1.742,1003,1.779,1004,1.946,1005,1.901,1006,1.362,1007,3.147,1008,3.428,1009,1.672,1010,1.859,1011,1.839,1012,2.704,1013,2.704,1014,2.704,1015,2.768,1016,2.644,1017,1.901,1018,1.901,1019,1.901,2661,4.239,2662,4.239]],["title/classes/ModuleStatusDTO.html",[0,0.341,543,2]],["body/classes/ModuleStatusDTO.html",[0,0.686,2,0.246,3,0.036,4,0.031,5,0.036,7,0.18,9,0.953,12,0.578,13,1.373,14,0.056,15,0.205,18,0.106,19,0.006,20,0.452,21,0.123,24,0.242,27,0.639,30,1.597,34,0.09,37,0.671,38,1.036,39,0.762,44,0.458,45,1.496,49,1.644,53,0.007,54,0.007,55,0.007,56,0.007,91,1.727,96,1.563,97,0.715,104,0.822,106,1.066,114,1.135,115,1.76,171,0.657,180,0.599,219,0.999,352,1.289,369,1.082,370,1.266,371,1.668,372,1.404,373,2.216,376,1.19,379,0.85,382,1.881,402,1.18,403,2.012,404,2.254,405,2.157,406,1.067,407,1.589,408,1.855,419,1.071,421,1.132,422,1.468,433,1.121,442,1.16,444,0.943,461,1.551,476,1.261,480,1.488,484,1.706,485,1.893,486,2.5,487,0.768,488,2.5,489,2.5,496,2.34,497,2.34,498,1.706,499,2.551,500,1.18,501,0.533,502,1.706,503,1.631,504,1.387,505,1.706,506,1.706,507,1.706,508,1.706,509,1.266,510,1.631,511,1.706,512,1.668,513,1.266,514,0.774,515,1.47,516,3.117,517,1.706,518,1.706,519,1.16,520,1.706,521,2.391,522,1.706,523,2.5,524,1.706,525,1.706,526,1.597,527,3.663,528,1.362,529,1.668,530,1.706,531,2.391,532,1.706,533,1.706,534,1.706,535,1.706,536,1.706,537,1.706,538,1.163,539,1.706,540,1.631,541,2.391,542,1.442,543,2.77,544,2.96,545,1.706,546,2.445,547,1.706,548,1.706,549,2.391,550,1.706,551,1.387,552,1.387,553,1.387,554,1.387,555,1.387,556,1.387,557,1.387,558,1.387,559,1.387,560,1.706,561,1.706,562,1.706,563,1.668,564,1.616,565,1.668,566,1.668,567,1.668,568,1.668,569,1.668,570,1.668,571,1.668,572,0.865,573,1.395,574,1.668,575,1.729,576,0.879,577,1.706,578,1.706,579,0.922,580,1.706,581,1.597,582,1.631,583,2.244,584,0.999,585,1.414,586,1.14,587,2.5,588,1.209,589,1.816,590,1.201,591,1.442,592,2.445,593,1.387,594,1.668,595,2.96,596,1.668,597,1.414,598,2.894,599,2.319,600,1.631,601,1.706,602,1.597,603,1.442,604,1.706,605,1.442,2663,3.803,2664,3.803,2665,3.803]],["title/interfaces/ModuleTopology.html",[411,1.478,472,2.418]],["body/interfaces/ModuleTopology.html",[0,0.673,3,0.047,4,0.041,5,0.047,9,0.75,11,0.982,12,0.591,14,0.073,15,0.19,18,0.098,19,0.006,20,0.427,24,0.346,34,0.091,38,0.962,39,1.533,44,0.374,46,1.928,53,0.009,54,0.009,55,0.009,56,0.009,94,1.375,103,1.396,116,3.027,127,1.574,162,2.461,171,0.348,177,1.924,202,2.072,219,2.009,277,2.738,286,3.781,342,1.248,343,2.75,345,1.659,367,2.53,368,2.601,369,1.826,370,2.245,376,1.064,379,0.816,382,1.924,385,2.894,386,2.434,387,2.403,388,2.894,389,2.403,390,2.661,391,2.403,392,3.931,393,2.601,394,3.931,395,2.601,396,3.931,397,2.601,398,3.173,399,2.465,400,3.515,401,2.344,402,2.542,403,1.521,404,2.093,405,2.206,406,1.892,407,1.924,408,2.245,409,2.289,410,2.465,411,2.542,412,2.11,413,3.686,414,3.21,415,3.21,416,3.21,417,4.691,418,4.538,419,0.75,420,2.894,421,0.793,422,1.028,423,3.424,424,2.558,425,3.519,426,3.519,427,2.609,428,2.371,429,3.519,430,2.773,431,3.511,432,2.601,433,0.608,434,2.093,435,2.601,436,2.601,437,2.236,438,2.601,439,3.519,440,3.027,441,3.519,442,2.058,443,2.959,444,0.932,445,3.21,446,3.519,447,2.601,448,1.72,449,2.601,450,2.344,451,2.186,452,2.186,453,1.72,454,2.139,455,2.601,456,2.601,457,2.344,458,3.252,459,2.53,460,2.289,461,1.064,462,3.173,463,4.026,464,2.403,465,2.403,466,3.881,467,4.159,468,3.949,469,3.515,470,3.519,471,3.989,472,4.159,473,3.43,474,2.403,475,4.159,476,0.953,477,2.53,478,2.344,479,2.403,576,1.152]],["title/classes/NameMappingDTO.html",[0,0.341,758,3.022]],["body/classes/NameMappingDTO.html",[0,0.669,2,0.374,3,0.054,4,0.047,5,0.054,7,0.272,12,0.787,14,0.084,15,0.209,18,0.127,19,0.006,20,0.45,21,0.161,24,0.212,27,0.97,34,0.088,44,0.454,45,1.389,49,1.546,53,0.011,54,0.011,55,0.011,56,0.011,91,1.699,98,1.899,106,0.795,114,1.174,115,1.821,171,0.574,342,1.443,372,1.381,373,1.759,379,0.761,382,1.644,406,1.617,407,1.644,419,1.054,421,1.114,422,1.444,430,2.37,433,1.002,461,1.754,485,1.845,487,0.738,501,0.808,514,1.174,515,2.23,538,0.923,542,2.186,551,2.104,552,2.104,553,2.104,554,2.104,555,2.104,556,2.104,557,2.104,558,2.104,559,2.104,564,1.672,575,1.789,589,1.354,603,2.186,605,2.186,629,1.919,739,4.537,740,3.81,746,3.523,747,4.537,748,4.537,749,3.81,750,3.81,751,3.658,752,3.81,753,3.658,754,3.81,755,3.81,756,3.81,757,5.428,758,5.211,759,5.428,760,5.428,761,3.177,762,5.428,763,3.81,764,4.537,765,3.81,766,3.81,767,3.658,768,3.658,769,3.658,770,3.81,771,3.81,772,3.658,2666,5.768,2667,5.768,2668,5.768,2669,5.768]],["title/components/NavbarComponent.html",[33,1.842,57,0.97]],["body/components/NavbarComponent.html",[0,0.348,3,0.046,4,0.039,5,0.046,7,0.229,8,2.669,9,0.737,12,0.711,14,0.071,18,0.118,19,0.006,20,0.293,21,0.163,24,0.244,26,1.297,27,1.472,32,2.341,33,3.134,34,0.046,35,6.624,38,0.945,39,1.329,41,2.918,44,0.428,45,1.061,47,2.029,48,3.803,52,1.739,53,0.009,54,0.009,55,0.009,56,0.009,57,1.35,58,1.997,59,1.878,60,2.084,61,2.084,62,2.084,66,2.084,67,4.299,68,4.065,70,2.783,72,2.783,83,4.195,84,1.744,97,0.914,98,1.123,99,0.899,102,3.83,104,0.977,107,2.246,114,1.35,115,2.093,128,4.579,136,1.457,137,2.167,149,3.356,164,2.084,165,2.844,166,1.318,167,2.084,168,2.39,169,2.084,170,1.956,171,0.646,172,2.13,173,1.956,174,3.309,175,1.956,176,1.997,177,1.556,178,2.13,179,1.997,180,1.5,181,2.13,182,1.997,183,2.13,184,2.13,185,1.916,186,2.13,187,1.956,188,2.13,189,1.916,190,1.956,191,2.13,192,1.916,193,1.916,194,2.13,195,2.13,196,1.997,197,2.13,198,1.916,199,1.997,200,2.13,201,2.039,202,1.903,203,2.039,204,2.907,205,2.039,206,2.039,207,1.916,208,1.916,209,2.13,210,1.916,211,1.916,212,1.916,213,2.13,214,1.956,215,2.13,216,2.13,217,2.13,245,1.741,251,1.508,252,2.301,332,1.806,343,1.561,345,2.206,421,0.779,444,0.808,452,2.907,487,0.75,501,0.929,572,1.992,611,1.061,795,2.246,796,2.246,803,5.445,804,2.179,822,5.094,826,2.273,828,2.246,847,2.615,1064,3.782,1137,4.579,1156,4.985,1186,4.335,1188,4.335,1197,5.094,1224,5.886,1252,4.579,1295,3.665,1384,4.813,1385,4.813,2046,6.659,2421,5.094,2670,4.858,2671,6.629,2672,7.546,2673,7.546,2674,6.629,2675,8.107,2676,6.629,2677,6.734,2678,6.629,2679,6.629,2680,4.858,2681,8.107,2682,6.629,2683,6.629,2684,4.858,2685,6.629,2686,8.107,2687,4.858,2688,6.629,2689,6.629,2690,6.629,2691,4.858,2692,4.858,2693,4.858,2694,4.858,2695,4.858,2696,4.858,2697,4.335,2698,4.858,2699,4.858,2700,4.858,2701,6.629]],["title/classes/NavbarElement.html",[0,0.341,35,3.459]],["body/classes/NavbarElement.html",[0,0.635,1,6.353,2,0.444,3,0.064,4,0.056,5,0.064,6,5.625,7,0.323,8,3.328,9,0.762,10,5.262,11,0.762,12,0.6,13,1.687,14,0.1,15,0.233,16,5.625,17,5.625,18,0.135,19,0.006,20,0.407,21,0.171,24,0.252,25,5.263,26,1.828,27,1.493,28,5.462,29,2.703,30,3.471,31,3.016,32,2.281,33,3.197,34,0.084,35,6.003,36,7.296,37,0.714,38,1.178,39,1.657,40,7.296,41,3.434,42,6.825,43,4.524,44,0.313,45,1.096,46,2.648,47,1.714,48,2.814,49,1.288,50,2.452,51,5.625,52,2.452,53,0.013,54,0.013,55,0.013,56,0.013,99,1.708,2702,6.848,2703,6.848,2704,6.848,2705,6.848]],["title/components/NavbarElementComponent.html",[57,0.97,196,1.958]],["body/components/NavbarElementComponent.html",[0,0.386,3,0.051,4,0.044,5,0.051,7,0.255,9,0.792,11,0.792,19,0.006,21,0.1,24,0.198,26,1.442,27,1.197,29,2.327,32,2.196,33,2.089,34,0.051,38,1.015,39,1.427,41,2.752,44,0.325,47,1.781,48,3.979,52,1.934,53,0.01,54,0.01,55,0.01,56,0.01,57,1.449,58,2.22,59,2.089,60,2.317,61,2.317,62,2.317,66,2.317,67,4.331,68,4.105,70,2.988,72,2.988,84,1.248,137,2.327,145,2.671,162,1.971,164,2.317,165,3.053,166,1.466,167,2.317,168,2.495,169,2.317,170,2.175,171,0.66,172,2.369,173,2.175,174,3.491,175,2.175,176,2.22,177,1.671,178,2.369,179,2.22,180,0.851,181,2.369,182,2.22,183,2.369,184,2.369,185,2.131,186,2.369,187,2.175,188,2.369,189,2.131,190,2.175,191,2.369,192,2.131,193,2.131,194,2.369,195,2.369,196,3.478,197,2.369,198,2.131,199,2.22,200,2.369,201,2.268,202,1.987,203,2.268,204,3.122,205,2.268,206,2.268,207,2.131,208,2.131,209,2.369,210,2.131,211,2.131,212,2.131,213,2.369,214,2.175,215,2.369,216,2.369,217,2.369,309,6.352,361,5.168,362,5.469,363,6.352,735,2.412,795,2.412,796,2.412,828,2.412,1222,4.917,1397,7.417,1558,4.348,2021,6.352,2138,5.847,2146,4.821,2148,6.352,2177,4.821,2178,8.638,2179,4.821,2180,6.352,2188,8.338,2706,7.119,2707,5.402,2708,7.119,2709,7.962,2710,7.119,2711,5.402,2712,5.402,2713,5.402,2714,5.402,2715,7.119,2716,7.104,2717,9.208,2718,9.208,2719,5.402,2720,7.119,2721,7.119,2722,7.119,2723,9.345,2724,8.463,2725,8.463,2726,8.463,2727,8.463,2728,5.402]],["title/classes/NavbarItem.html",[0,0.341,42,3.661]],["body/classes/NavbarItem.html",[0,0.635,1,6.825,2,0.444,3,0.064,4,0.056,5,0.064,6,5.625,7,0.323,8,3.576,9,0.762,10,5.262,11,0.762,12,0.6,13,1.687,14,0.1,15,0.233,16,5.625,17,5.625,18,0.135,19,0.006,20,0.424,21,0.171,24,0.252,25,5.263,26,1.828,27,1.493,28,4.524,29,2.239,30,2.875,31,2.498,32,1.889,33,2.648,34,0.084,35,4.972,36,5.625,37,0.55,38,0.976,39,1.372,40,5.625,41,2.648,42,6.825,43,5.462,44,0.378,45,1.324,46,3.197,47,2.069,48,3.398,49,1.671,50,3.18,51,7.296,52,3.18,53,0.013,54,0.013,55,0.013,56,0.013,99,1.708,2729,6.848,2730,6.848,2731,6.848,2732,6.848]],["title/classes/NetOSRouterDTO.html",[0,0.341,785,3.459]],["body/classes/NetOSRouterDTO.html",[0,0.646,2,0.417,3,0.061,4,0.052,5,0.061,7,0.304,9,0.961,14,0.094,15,0.224,18,0.132,19,0.006,20,0.445,21,0.168,34,0.085,37,0.517,44,0.442,49,1.778,53,0.012,54,0.012,55,0.012,56,0.012,77,3.672,91,1.619,104,0.949,106,0.887,171,0.556,373,2.883,379,0.849,419,1.004,421,1.062,422,1.376,485,1.705,499,3.078,514,1.31,538,1.031,579,1.929,743,2.539,773,6.556,774,4.945,775,3.182,776,4.945,777,3.202,780,3.153,783,5.049,784,5.259,785,6.275,786,6.939,787,3.672,788,4.945,789,2.488,790,4.945,791,4.945,792,4.446,2733,6.436,2734,6.436,2735,6.436,2736,6.436]],["title/components/NetworkComponent.html",[57,0.97,198,1.879]],["body/components/NetworkComponent.html",[0,0.312,3,0.058,4,0.035,5,0.041,14,0.064,15,0.173,18,0.113,19,0.006,21,0.162,24,0.311,26,1.166,27,1.035,32,1.205,33,1.689,34,0.041,37,0.495,38,0.878,39,1.234,48,1.795,50,2.772,52,1.564,53,0.008,54,0.008,55,0.008,56,0.008,57,1.577,58,1.795,59,1.689,60,1.874,61,1.874,62,1.874,66,1.874,67,4.248,68,3.995,70,2.585,72,2.585,74,2.585,83,3.044,84,1.009,86,4.282,87,4.282,97,0.822,98,1.009,99,0.809,106,1.167,107,2.766,108,2.923,109,1.878,137,1.428,140,3.943,145,3.526,162,3.176,164,1.874,165,2.641,166,1.185,167,1.874,168,2.283,169,1.874,170,1.758,171,0.658,172,1.915,173,1.758,174,3.127,175,1.758,176,1.795,177,1.818,178,1.915,179,1.795,180,1.22,181,1.915,182,1.795,183,1.915,184,1.915,185,1.723,186,1.915,187,1.758,188,1.915,189,1.723,190,1.758,191,1.915,192,1.723,193,1.723,194,1.915,195,1.915,196,1.795,197,1.915,198,3.055,199,1.795,200,1.915,201,1.833,202,1.917,203,1.833,204,2.7,205,1.833,206,1.833,207,1.723,208,1.723,209,1.915,210,1.723,211,1.723,212,1.723,213,1.915,214,1.758,215,1.915,216,1.915,217,1.915,239,2.381,245,1.617,251,0.993,252,1.332,267,1.656,268,2.429,269,1.689,277,2.758,338,3.183,369,1.196,386,2.527,411,1.91,504,2.978,509,2.577,528,2.204,572,0.993,579,1.059,692,3.761,714,4.711,775,4.036,886,1.624,913,2.968,1009,2.429,1029,3.761,1066,3.761,1069,4.418,1070,2.886,1071,2.886,1073,2.77,1075,4.833,1077,3.62,1079,3.513,1080,2.886,1101,3.125,1143,3.513,1144,3.513,1177,2.576,1337,2.77,1338,2.77,1340,3.588,1343,4.382,1344,2.576,1359,4.068,1398,2.668,1404,3.588,1408,4.471,1453,4.039,1470,3.761,1474,5.858,1545,4.068,1559,3.212,1561,5.178,1562,4.912,1566,2.005,1567,2.415,1609,2.825,1733,6.177,1734,1.959,1960,3.761,2142,2.886,2144,4.068,2195,4.927,2196,5.852,2200,5.858,2201,4.927,2202,4.927,2203,4.927,2204,5.35,2205,3.017,2212,3.017,2213,3.017,2214,2.77,2215,3.017,2216,3.017,2217,4.254,2218,3.761,2225,3.631,2226,4.254,2227,4.254,2228,4.254,2229,4.254,2230,4.254,2231,4.254,2232,4.254,2233,4.254,2234,3.017,2235,3.017,2236,3.017,2237,2.492,2238,2.886,2239,3.017,2240,3.017,2241,3.017,2242,3.017,2243,3.017,2244,4.254,2245,4.254,2246,3.017,2247,3.017,2248,5.35,2249,2.77,2250,2.886,2251,2.886,2252,3.017,2253,3.631,2254,4.254,2255,4.254,2256,3.017,2257,5.852,2258,3.017,2259,2.576,2260,3.017,2261,3.017,2262,3.017,2370,6.509,2737,4.368,2738,7.132,2739,6.158,2740,6.158,2741,4.368,2742,4.368,2743,4.368,2744,4.368,2745,4.368,2746,6.158,2747,8.472,2748,8.472,2749,4.368]],["title/classes/NetworkConstraints.html",[0,0.341,964,2.137]],["body/classes/NetworkConstraints.html",[0,0.694,2,0.278,3,0.04,4,0.035,5,0.04,7,0.203,9,1.001,11,0.937,12,0.376,13,1.498,15,0.199,19,0.006,20,0.433,24,0.158,31,1.567,34,0.091,37,0.677,44,0.46,45,1.231,47,1.768,53,0.008,54,0.008,55,0.008,56,0.008,91,1.746,103,0.888,104,0.897,106,1.059,109,1.31,171,0.3,239,1.66,259,1.926,342,1.075,372,1.023,379,0.533,411,1.888,412,1.185,419,1.083,421,1.141,422,1.479,433,1.136,444,1.097,448,3.266,476,1.469,485,1.906,487,0.631,500,1.332,501,1.24,514,0.874,538,0.688,573,1.075,576,1.633,579,2.1,584,1.128,586,1.288,588,1.827,589,2.034,611,1.231,615,2.219,616,2.219,618,2.219,619,1.628,620,2.858,621,1.455,622,1.954,623,1.597,624,1.597,625,1.597,626,1.537,627,1.537,629,1.429,640,1.764,644,1.597,761,1.66,777,2.799,780,3.401,789,1.66,802,1.886,953,2.729,954,1.972,955,1.972,956,2.793,957,1.926,958,1.926,959,1.926,960,2.729,962,2.729,964,3.17,966,2.729,967,2.729,968,2.729,969,2.729,970,2.729,971,2.61,972,2.668,973,2.668,974,2.668,975,3.371,976,2.668,977,1.972,978,1.972,979,1.729,980,1.842,981,2.668,982,1.926,983,1.926,984,2.729,985,1.926,986,2.729,987,1.926,988,2.668,989,3.529,990,1.972,991,1.972,992,1.972,993,3.031,994,3.448,995,1.883,996,2.178,997,1.972,998,1.926,999,1.842,1000,3.099,1001,1.972,1002,1.765,1003,1.803,1004,1.972,1005,1.926,1006,1.379,1007,3.17,1008,3.448,1009,1.694,1010,1.883,1011,1.856,1012,2.729,1013,2.729,1014,2.729,1015,2.793,1016,2.668,1017,1.926,1018,1.926,1019,1.926]],["title/classes/NetworkDTO.html",[0,0.341,499,1.842]],["body/classes/NetworkDTO.html",[0,0.649,2,0.424,3,0.061,4,0.053,5,0.061,7,0.309,9,0.894,14,0.095,15,0.226,18,0.127,19,0.006,20,0.447,21,0.162,34,0.085,44,0.444,49,1.785,53,0.012,54,0.012,55,0.012,56,0.012,77,3.729,91,1.628,104,0.963,106,0.9,171,0.634,373,2.894,379,0.843,419,1.01,421,1.067,422,1.384,485,1.717,499,3.365,514,1.331,538,1.047,579,2.109,773,6.319,774,5.022,775,3.231,776,5.022,777,3.003,780,2.932,783,4.146,784,4.318,785,5.835,786,6.175,787,3.729,788,5.022,789,2.527,790,5.022,791,5.022,792,4.515,2750,6.537,2751,6.537,2752,6.537]],["title/classes/NetworkNode.html",[0,0.341,1623,3.459]],["body/classes/NetworkNode.html",[0,0.439,2,0.282,3,0.041,4,0.035,5,0.041,7,0.205,8,2.472,11,0.967,12,0.819,14,0.064,15,0.173,18,0.127,19,0.006,20,0.192,21,0.165,24,0.326,29,2.528,34,0.067,37,0.494,44,0.397,45,1.14,53,0.008,54,0.008,55,0.008,56,0.008,57,1.449,84,1.645,97,1.592,98,1.955,99,1.566,103,1.27,104,1.14,114,0.886,136,2.134,137,2.008,166,1.667,168,2.279,171,0.304,177,1.671,180,0.967,198,2.422,202,2.194,245,1.613,251,1.978,252,2.487,267,2.328,268,1.716,269,1.682,277,2.802,343,1.398,344,2.472,345,2.368,369,1.382,386,2.491,388,2.634,390,1.716,419,0.792,421,0.722,424,1.65,427,1.682,428,2.501,433,0.53,444,1.06,453,1.501,487,0.784,501,0.997,513,1.448,572,1.397,579,1.489,588,1.332,611,0.697,640,1.781,653,2.807,678,2.634,697,1.327,735,2.081,795,2.946,796,2.762,799,2.693,802,2.371,804,1.952,826,2.567,828,2.762,839,2.524,847,3.05,851,1.908,853,3.203,865,2.046,870,3.924,871,3.296,886,1.618,908,2.406,913,2.097,979,2.472,1006,3.121,1011,1.873,1036,2.209,1049,2.209,1114,1.65,1173,3.296,1249,2.046,1276,1.908,1279,3.203,1280,2.96,1388,4.149,1430,2.151,1431,4.459,1444,2.658,1453,2.27,1578,3.203,1580,3.203,1608,3.117,1609,3.618,1616,3.344,1623,6.143,1670,3.712,1696,2.209,1717,5.044,1734,2.755,1817,3.296,1942,3.396,2273,3.935,2274,4.243,2275,4.243,2276,4.243,2277,4.243,2278,4.243,2279,4.243,2281,3.935,2282,3.396,2284,4.912,2285,4.275,2286,3.82,2287,4.275,2288,4.275,2289,3.396,2290,3.296,2291,3.396,2292,3.006,2294,3.006,2295,3.396,2297,3.006,2299,3.006,2300,3.396,2302,3.396,2303,3.396,2304,3.396,2305,3.396,2306,3.296,2307,3.296,2308,3.396,2309,3.396,2310,3.006,2311,4.243,2312,3.935,2313,3.935,2315,3.006,2316,3.006,2317,3.006,2318,3.006,2319,2.151,2320,2.151,2321,2.406,2323,4.347,2324,2.406,2326,2.335,2327,2.335,2328,2.335,2329,2.335,2331,2.406,2332,2.406,2333,2.406,2334,2.406,2335,2.406,2336,3.396,2337,3.396,2338,2.406,2339,2.406,2340,2.406,2341,2.406,2342,2.406,2753,3.574,2754,6.142,2755,4.352,2756,4.352,2757,4.352,2758,4.352,2759,4.352,2760,4.352,2761,3.883,2762,5.48,2763,5.48,2764,3.883,2765,3.883]],["title/classes/NetworkSimpleData.html",[0,0.341,975,2.089]],["body/classes/NetworkSimpleData.html",[0,0.693,2,0.275,3,0.04,4,0.034,5,0.04,7,0.2,9,0.998,11,0.933,12,0.372,13,1.485,14,0.062,15,0.227,18,0.088,19,0.006,20,0.432,21,0.112,24,0.156,31,1.546,34,0.091,37,0.709,44,0.459,45,1.223,47,1.756,53,0.008,54,0.008,55,0.008,56,0.008,91,1.743,103,0.877,104,0.889,106,1.053,109,1.293,171,0.296,239,1.639,259,1.901,342,1.061,372,1.013,379,0.528,411,1.87,412,1.169,419,1.081,421,1.139,422,1.476,433,1.122,444,1.075,448,3.259,476,1.603,485,1.903,487,0.628,500,1.315,501,1.236,514,0.863,538,0.679,573,1.061,576,1.621,579,2.092,584,1.113,586,1.271,588,1.872,589,2.071,611,1.223,615,2.199,616,2.199,618,2.199,619,1.607,620,2.841,621,1.436,622,1.936,623,1.576,624,1.576,625,1.576,626,1.517,627,1.517,629,1.411,640,1.748,644,1.576,761,1.639,777,2.785,780,3.392,789,1.639,802,2.04,953,2.704,954,1.946,955,1.946,956,2.768,957,1.901,958,1.901,959,1.901,960,2.704,962,2.704,964,2.704,966,3.147,967,2.704,968,2.704,969,2.704,970,2.704,971,2.586,972,2.644,973,2.644,974,2.644,975,3.54,976,2.644,977,1.946,978,1.946,979,1.706,980,1.818,981,2.644,982,1.901,983,1.901,984,2.704,985,1.901,986,2.704,987,1.901,988,2.644,989,3.221,990,1.946,991,1.946,992,1.946,993,3.009,994,3.428,995,1.859,996,2.158,997,1.946,998,1.901,999,1.818,1000,3.076,1001,1.946,1002,1.742,1003,1.779,1004,1.946,1005,1.901,1006,1.362,1007,3.147,1008,3.428,1009,1.672,1010,1.859,1011,2.14,1012,3.147,1013,2.704,1014,2.704,1015,2.768,1016,2.644,1017,1.901,1018,1.901,1019,1.901,2766,4.239,2767,4.239]],["title/classes/NodeSimpleData.html",[0,0.341,973,2.089]],["body/classes/NodeSimpleData.html",[0,0.692,2,0.271,3,0.039,4,0.034,5,0.039,7,0.198,9,0.995,11,0.929,12,0.367,13,1.472,14,0.061,15,0.226,18,0.111,19,0.006,20,0.431,21,0.141,24,0.154,31,1.528,34,0.091,37,0.707,44,0.459,45,1.287,47,1.744,53,0.008,54,0.008,55,0.008,56,0.008,91,1.741,103,0.866,104,0.881,106,1.047,109,1.277,171,0.293,239,1.619,259,1.878,342,1.048,372,1.005,379,0.524,411,1.854,412,1.922,419,1.08,421,1.137,422,1.474,433,1.12,444,1.072,448,3.253,476,1.597,485,1.892,487,0.624,500,1.299,501,1.232,514,1.217,538,0.67,573,1.048,576,1.61,579,2.025,584,1.1,586,1.256,588,1.865,589,2.064,611,1.287,615,2.18,616,2.18,618,2.18,619,1.587,620,2.825,621,1.419,622,1.92,623,1.557,624,1.557,625,1.557,626,1.499,627,1.499,629,1.394,640,1.733,644,1.557,761,1.619,777,2.772,780,3.439,789,1.619,802,1.86,953,2.681,954,1.923,955,1.923,956,2.744,957,1.878,958,1.878,959,1.878,960,2.681,962,2.681,964,2.681,966,2.681,967,3.126,968,2.681,969,2.681,970,2.681,971,2.989,972,2.621,973,3.056,974,2.621,975,3.332,976,2.621,977,1.923,978,1.923,979,1.686,980,1.796,981,2.621,982,1.878,983,1.878,984,2.681,985,1.878,986,2.681,987,1.878,988,2.621,989,3.199,990,1.923,991,1.923,992,1.923,993,2.989,994,3.409,995,1.836,996,2.139,997,1.923,998,1.878,999,1.796,1000,3.056,1001,1.923,1002,1.721,1003,1.758,1004,1.923,1005,1.878,1006,1.92,1007,3.605,1008,3.605,1009,1.652,1010,1.836,1011,1.823,1012,2.681,1013,2.681,1014,2.681,1015,2.744,1016,2.621,1017,1.878,1018,1.878,1019,1.878,2768,4.188,2769,4.188,2770,4.188,2771,4.188]],["title/classes/NodeTopologyElement.html",[0,0.341,418,2.355]],["body/classes/NodeTopologyElement.html",[0,0.673,2,0.325,3,0.047,4,0.041,5,0.047,9,0.753,11,0.983,12,0.594,14,0.073,15,0.191,18,0.099,19,0.006,20,0.428,21,0.126,24,0.346,34,0.091,37,0.403,38,0.966,39,1.537,44,0.375,46,1.939,53,0.009,54,0.009,55,0.009,56,0.009,94,1.384,103,1.401,116,3.039,127,1.583,162,2.471,171,0.35,177,1.928,202,1.801,219,2.015,277,2.743,286,3.792,342,1.255,343,2.756,345,1.669,367,2.546,368,2.616,369,1.808,370,2.254,376,1.071,379,0.817,382,1.931,385,2.906,386,2.439,387,2.417,388,2.906,389,2.417,390,2.672,391,2.417,392,3.522,393,2.616,394,3.522,395,2.616,396,3.522,397,2.616,398,3.185,399,2.479,400,3.523,401,2.358,402,2.549,403,1.53,404,2.102,405,2.215,406,1.9,407,1.931,408,2.254,409,2.303,410,2.479,411,2.549,412,2.116,413,3.697,414,3.22,415,3.22,416,3.22,417,4.544,418,4.468,419,0.753,420,2.906,421,0.796,422,1.032,423,3.438,424,2.568,425,3.533,426,3.533,427,2.619,428,2.38,429,3.533,430,2.784,431,3.522,432,2.616,433,0.611,434,2.105,435,2.616,436,2.616,437,2.25,438,2.616,439,3.533,440,3.039,441,3.533,442,2.066,443,2.971,444,0.935,445,3.22,446,3.533,447,2.616,448,1.73,449,2.616,450,2.358,451,2.199,452,2.199,453,1.73,454,2.151,455,2.616,456,2.616,457,2.358,458,3.265,459,2.546,460,2.303,461,1.071,462,3.185,463,4.157,464,2.417,465,2.417,466,3.438,467,4.354,468,4.261,469,3.792,470,3.533,471,4.001,472,3.893,473,3.441,474,2.417,475,4.169,476,0.958,477,2.546,478,2.358,479,2.417,743,1.978,804,2.25,2772,5.016,2773,5.016]],["title/components/OffcanvasComponent.html",[57,0.97,199,1.958]],["body/components/OffcanvasComponent.html",[0,0.249,3,0.033,4,0.028,5,0.033,7,0.165,8,3.439,11,0.929,12,0.687,14,0.051,15,0.147,18,0.133,19,0.006,20,0.395,21,0.173,24,0.128,25,4.633,26,0.931,27,0.879,29,1.709,32,2.058,33,1.348,34,0.033,37,0.727,38,0.745,39,1.048,41,2.424,44,0.413,45,0.837,48,1.433,50,3.058,52,1.249,53,0.006,54,0.006,55,0.006,56,0.006,57,1.064,58,1.433,59,1.348,60,1.496,61,1.496,62,1.496,66,1.496,67,4.178,68,3.916,70,2.194,72,2.194,74,3.756,83,3.872,84,0.806,86,3.467,87,3.851,94,1.442,97,0.983,98,1.208,99,0.968,102,3.92,103,1.081,104,1.027,106,1.177,107,2.752,108,2.493,109,2.124,114,1.822,115,2.696,127,1.65,128,5.411,136,1.046,137,1.709,140,1.928,145,3.1,154,3.795,160,2.865,161,3.611,162,3.264,163,4.553,164,1.496,165,2.242,166,1.702,167,1.496,168,2.053,169,1.496,170,1.404,171,0.597,172,1.529,173,1.404,174,2.75,175,1.404,176,1.433,177,1.227,178,1.529,179,1.433,180,1.507,181,1.529,182,1.433,183,1.529,184,1.529,185,1.376,186,1.529,187,1.404,188,1.529,189,1.376,190,1.404,191,1.529,192,1.376,193,1.376,194,1.529,195,1.529,196,1.433,197,1.529,198,1.376,199,2.863,200,1.529,201,1.464,202,1.635,203,1.464,204,2.293,205,1.464,206,1.464,207,1.376,208,1.376,209,1.529,210,1.376,211,1.376,212,1.376,213,1.529,214,1.404,215,1.529,216,1.529,217,1.529,245,1.373,251,1.426,252,1.912,332,1.297,344,2.804,376,1.116,419,0.388,424,1.982,444,0.909,487,0.644,509,1.74,514,1.064,526,2.194,528,1.249,572,1.847,598,3.054,611,1.115,675,1.77,678,2.242,683,4.665,697,1.064,735,1.771,824,1.601,826,1.953,827,3.365,839,2.577,847,2.747,856,3.454,907,4.294,908,2.89,1064,2.982,1068,4.017,1069,2.982,1075,2.982,1077,2.653,1079,3.577,1143,1.99,1144,1.99,1152,2.532,1156,4.601,1164,3.977,1242,4.017,1271,5.352,1300,4.294,1344,4.107,1367,5.595,1368,5.595,1369,5.595,1370,6.215,1372,6.658,1379,4.294,1384,4.553,1392,7.984,1393,4.665,1394,4.665,1396,4.665,1397,4.294,1398,3.83,1402,4.665,1408,2.532,1412,3.112,1415,6.215,1417,3.112,1451,2.982,1547,4.665,1558,3.193,1559,1.819,1599,3.193,1960,3.83,2173,2.865,2189,5.595,2237,1.99,2238,4.142,2249,4.417,2251,4.601,2421,5.352,2424,5.595,2427,5.625,2429,5.595,2434,5.595,2435,5.595,2447,3.112,2449,3.112,2451,3.112,2452,3.112,2453,4.665,2503,4.665,2697,3.112,2716,3.112,2774,3.488,2775,4.294,2776,8.122,2777,4.665,2778,6.965,2779,8.7,2780,6.965,2781,5.228,2782,5.228,2783,5.228,2784,6.965,2785,6.965,2786,6.271,2787,5.228,2788,6.965,2789,6.658,2790,6.271,2791,5.228,2792,5.228,2793,3.488,2794,5.228,2795,4.665,2796,3.488,2797,5.228,2798,3.488,2799,3.488,2800,5.228,2801,8.834,2802,5.228,2803,5.228,2804,5.228,2805,5.228,2806,3.488,2807,3.488,2808,5.228,2809,5.228,2810,3.488,2811,3.488,2812,3.488,2813,5.228,2814,3.488,2815,4.294,2816,3.488,2817,3.488,2818,3.488,2819,3.488,2820,3.488,2821,3.488,2822,6.271,2823,3.488,2824,3.488,2825,6.018,2826,5.595,2827,3.112,2828,3.488,2829,4.665,2830,5.228,2831,5.228,2832,5.228,2833,3.488,2834,3.488,2835,3.488,2836,3.488,2837,3.112,2838,3.112]],["title/classes/PageableDTO.html",[0,0.341,496,2]],["body/classes/PageableDTO.html",[0,0.59,2,0.442,3,0.064,4,0.055,5,0.064,7,0.322,12,0.723,14,0.1,15,0.232,18,0.143,19,0.006,20,0.423,21,0.178,34,0.078,44,0.421,53,0.013,54,0.013,55,0.013,56,0.013,91,1.479,106,1.336,379,0.84,419,0.918,421,0.97,422,1.257,485,1.628,487,0.678,496,3.464,497,3.723,510,3.804,513,2.271,1287,6.777,1481,5.991,1683,5.7,2839,6.089,2840,7.362,2841,7.914,2842,7.914,2843,7.914,2844,7.914,2845,7.914,2846,6.825,2847,6.825,2848,6.825,2849,6.825,2850,6.825,2851,6.825,2852,6.089,2853,6.089]],["title/classes/ParseDataForTheaterVisualizer.html",[0,0.341,2854,3.913]],["body/classes/ParseDataForTheaterVisualizer.html",[0,0.162,2,0.147,3,0.021,4,0.018,5,0.021,7,0.107,9,0.908,11,0.725,12,0.727,14,0.033,15,0.133,18,0.121,19,0.006,20,0.411,21,0.154,24,0.295,27,0.626,29,1.794,32,1.027,34,0.021,37,0.487,38,0.929,39,1.663,43,2.459,44,0.425,45,1.228,47,0.932,49,1.032,53,0.004,54,0.004,55,0.004,56,0.004,69,2.785,84,1.095,94,2.374,96,1.53,97,1.56,98,1.989,99,1.536,104,1.13,114,1.327,116,1.67,127,1.175,136,2.553,137,0.741,138,1.998,166,1.869,168,2.317,171,0.56,180,0.746,219,2.236,229,5.088,231,5.191,245,1.441,251,2.063,252,1.135,277,1.47,332,0.842,344,1.499,345,1.239,376,1.172,379,0.703,382,2.365,385,1.597,386,1.307,387,1.092,388,1.597,389,1.092,390,1.468,391,1.092,400,2.354,401,1.065,402,1.47,404,2.742,405,2.251,406,1.7,409,1.04,410,1.12,412,0.625,413,1.092,417,1.84,421,0.438,422,0.567,427,2.52,433,0.958,442,1.445,443,1.633,444,1.077,445,3.429,451,1.633,452,1.633,453,2.248,454,2.354,460,2.519,461,1.925,462,3.503,463,3.065,464,2.284,465,2.284,468,3.319,469,2.796,473,3.226,474,2.284,476,0.433,487,0.77,501,1.239,519,2.651,572,1.248,576,1.268,579,0.902,581,1.563,589,1.423,597,2.04,599,2.527,600,2.354,602,1.989,603,0.859,611,1.518,633,1.336,653,3.512,697,2.447,710,5.08,719,4.96,735,1.606,743,2.391,753,1.437,761,1.439,777,1.893,783,2.361,787,2.124,795,2.437,796,2.437,802,1.92,820,2.999,821,3.498,822,2.861,826,2.629,827,2.945,832,2.861,837,3.984,839,1.53,847,1.468,865,1.751,867,2.861,872,2.572,880,4.507,886,0.842,893,1.861,913,1.092,923,3.625,930,6.057,980,1.597,996,1.964,1002,1.53,1003,2.304,1006,1.196,1011,1.135,1051,4.383,1106,2.124,1201,2.022,1276,2.406,1295,3.603,1436,1.645,1451,2.124,1473,3.791,1480,3.058,1511,1.645,1599,2.274,1609,1.358,1650,2.572,1697,1.384,1752,3.641,1753,2.861,1818,4.507,1937,3.322,1955,2.861,1962,2.459,2047,2.861,2214,1.437,2218,2.894,2268,2.572,2854,3.058,2855,2.266,2856,4.216,2857,4.216,2858,5.488,2859,3.723,2860,5.488,2861,4.897,2862,4.897,2863,4.897,2864,4.897,2865,4.897,2866,5.488,2867,5.488,2868,5.488,2869,5.488,2870,3.322,2871,2.022,2872,2.266,2873,3.723,2874,2.266,2875,3.723,2876,3.723,2877,7.449,2878,3.723,2879,2.266,2880,3.723,2881,3.723,2882,3.723,2883,2.266,2884,3.322,2885,2.266,2886,3.723,2887,3.723,2888,3.322,2889,2.266,2890,3.723,2891,3.723,2892,3.723,2893,3.723,2894,3.322,2895,2.266,2896,6.517,2897,3.322,2898,2.266,2899,3.322,2900,2.266,2901,3.322,2902,4.507,2903,3.723,2904,5.488,2905,3.723,2906,3.723,2907,3.641,2908,3.641,2909,3.641,2910,3.322,2911,3.723,2912,2.266,2913,3.723,2914,3.723,2915,2.266,2916,3.322,2917,3.723,2918,3.322,2919,3.723,2920,3.723,2921,3.723,2922,2.266,2923,3.723,2924,3.723,2925,3.723,2926,3.723,2927,2.266,2928,3.723,2929,3.322,2930,2.266,2931,3.723,2932,3.723,2933,3.723,2934,3.723,2935,3.723,2936,3.723,2937,3.723,2938,3.723,2939,3.723,2940,2.022,2941,1.741,2942,1.861,2943,1.861,2944,1.861,2945,2.266,2946,2.266,2947,2.266,2948,4.739,2949,3.322,2950,2.266,2951,2.266,2952,2.266,2953,3.723,2954,2.266,2955,2.266,2956,2.266,2957,5.488,2958,2.266,2959,2.266,2960,3.723,2961,2.266,2962,2.266,2963,4.739,2964,2.266,2965,3.723,2966,2.266,2967,2.266,2968,2.266,2969,2.266,2970,2.266,2971,2.266,2972,2.266,2973,2.266,2974,2.266,2975,2.266,2976,2.022,2977,2.266,2978,2.022,2979,2.022,2980,3.322,2981,2.022,2982,2.022,2983,2.022,2984,2.022,2985,3.892,2986,2.022,2987,2.022,2988,4.229,2989,4.229,2990,2.022,2991,3.322,2992,3.322,2993,2.022,2994,3.058,2995,2.022,2996,2.266,2997,4.897,2998,2.266,2999,2.266,3000,2.266,3001,2.266,3002,2.266,3003,2.266,3004,2.266,3005,2.266,3006,2.266,3007,2.266,3008,2.266,3009,2.022,3010,3.723,3011,2.266,3012,2.266,3013,4.507,3014,2.266,3015,2.266,3016,2.266,3017,2.266,3018,3.892,3019,2.266,3020,2.266,3021,2.266,3022,2.022,3023,1.861,3024,3.892,3025,3.892,3026,3.892,3027,1.861,3028,3.058,3029,1.861,3030,1.861,3031,1.861,3032,3.892,3033,1.861,3034,3.058,3035,1.861,3036,1.861,3037,4.979,3038,1.861,3039,4.507,3040,1.861,3041,1.861,3042,3.058,3043,5.656,3044,1.861,3045,1.861,3046,1.861,3047,3.058,3048,3.058,3049,1.861,3050,1.861,3051,1.861,3052,1.861,3053,1.861,3054,1.861,3055,1.861,3056,1.861,3057,1.861,3058,1.861,3059,1.861,3060,1.861,3061,1.861]],["title/injectables/ParseService.html",[230,3.291,649,1.918]],["body/injectables/ParseService.html",[0,0.331,3,0.044,4,0.038,5,0.044,7,0.219,11,1.003,14,0.068,15,0.181,18,0.107,19,0.006,20,0.391,21,0.16,24,0.352,26,1.236,34,0.044,37,0.372,44,0.431,45,1.027,49,1.494,53,0.009,54,0.009,55,0.009,56,0.009,69,2.349,84,1.07,91,1.15,94,2.191,97,1.384,98,1.7,99,1.544,102,2.692,104,1.329,107,1.568,108,1.657,113,5.722,114,1.306,127,2.024,136,2.501,137,1.513,138,3.949,171,0.323,219,2.086,229,5.72,230,4.43,231,5.845,245,1.684,251,2.051,326,3.058,327,3.058,332,2.953,334,3.802,379,0.756,433,0.782,434,2.692,442,1.956,443,4.107,444,1.167,445,2.692,461,1.696,473,2.876,478,3.015,487,0.653,501,1.264,611,1.549,649,2.581,651,2.484,653,3.726,664,4.851,674,2.484,697,2.751,710,5.388,719,5.318,795,2.173,796,2.173,799,2.812,802,2.12,810,4.43,820,3.63,821,4.84,826,2.529,851,2.812,923,4.236,1281,4.656,1451,4.531,1473,4.43,1632,4.656,1697,2.827,1815,5.038,1999,6.93,2431,4.927,2854,6.524,2870,5.722,2871,4.13,2929,5.722,2940,4.13,2941,3.557,3062,4.629,3063,6.413,3064,6.413,3065,6.413,3066,6.413,3067,6.413,3068,7.087,3069,5.722,3070,7.087,3071,6.413,3072,4.629,3073,6.524,3074,7.943,3075,5.722,3076,4.629,3077,6.524,3078,7.358,3079,4.629,3080,6.413,3081,6.524,3082,7.943,3083,4.629,3084,7.358,3085,6.413,3086,6.413,3087,4.13,3088,7.943,3089,4.629,3090,4.629,3091,4.629,3092,4.629,3093,4.629,3094,7.943,3095,4.629,3096,4.629,3097,4.629,3098,4.629,3099,4.629,3100,4.629,3101,4.629]],["title/classes/PerseDataForModuleComposer.html",[0,0.341,3073,3.913]],["body/classes/PerseDataForModuleComposer.html",[0,0.432,2,0.391,3,0.057,4,0.049,5,0.057,7,0.285,11,0.85,12,0.852,14,0.088,18,0.112,19,0.006,21,0.156,24,0.308,27,1.285,32,2.109,34,0.057,44,0.425,47,1.913,53,0.011,54,0.011,55,0.011,56,0.011,84,1.394,97,1.438,98,1.767,99,1.415,104,1.127,114,1.557,136,2.292,245,2.008,251,2.007,399,2.983,433,0.932,443,4.079,444,0.932,478,4.496,479,2.908,487,0.725,501,1.304,611,1.413,653,3.31,675,3.062,697,2.332,710,4.788,719,3.558,795,2.59,796,2.59,799,3.353,802,2.356,810,6.096,820,3.078,821,4.103,826,2.475,827,4.103,1276,3.87,1697,3.685,1973,3.827,1974,3.827,1975,3.827,1991,6.605,1999,7.415,2431,5.874,2856,6.78,2857,6.78,3068,7.874,3073,6.28,3087,5.384,3102,6.034,3103,8.824,3104,6.034,3105,6.034,3106,7.646,3107,6.034,3108,6.034,3109,6.034,3110,6.034,3111,7.646,3112,6.034,3113,6.034,3114,6.034,3115,6.034,3116,6.034,3117,6.034]],["title/classes/PerseDataForModuleVisualizer.html",[0,0.341,3077,3.913]],["body/classes/PerseDataForModuleVisualizer.html",[0,0.258,2,0.234,3,0.034,4,0.029,5,0.034,7,0.171,9,0.597,11,0.939,12,0.818,14,0.053,18,0.12,19,0.006,20,0.393,21,0.153,24,0.322,27,0.902,32,1.48,34,0.034,38,1.298,44,0.42,47,1.343,49,1.333,53,0.007,54,0.007,55,0.007,56,0.007,84,1.479,94,2.536,97,1.545,98,1.898,99,1.521,104,1.294,114,1.443,136,2.463,168,2.089,171,0.252,180,0.569,229,5.647,245,1.409,251,2.025,252,1.102,277,1.986,332,1.995,342,0.904,344,2.16,345,1.786,379,0.756,385,2.302,386,1.766,387,1.741,388,2.302,389,1.741,390,2.117,391,1.741,400,3.04,401,1.698,402,1.986,407,2.621,409,1.658,412,0.996,413,1.741,414,1.516,415,1.516,416,1.516,417,1.786,418,2.653,433,1.12,434,3.449,443,3.108,444,1.099,451,2.353,453,2.912,460,2.464,463,2.523,464,2.586,465,2.586,468,3.086,469,2.746,474,2.586,487,0.652,501,1.112,519,1.102,572,1.22,576,1.24,579,1.301,602,2.252,611,1.538,653,3.655,675,1.833,697,2.309,710,5.286,719,4.845,735,2.688,777,2.445,783,3.403,787,3.061,795,2.401,796,2.401,799,2.353,802,2.253,820,2.16,826,2.528,827,2.88,839,2.913,886,1.343,913,1.741,923,3.545,996,2.537,1002,2.205,1003,2.975,1011,1.637,1252,3.707,1276,2.353,1295,2.967,1436,2.622,1451,4.043,1599,3.277,1609,1.957,1645,4.407,1697,2.206,1752,4.919,1753,2.775,1802,4.123,1932,4.788,1943,4.788,1955,4.123,1962,3.545,2047,4.123,2218,2.206,2268,3.707,2639,4.788,2775,4.407,2856,6.485,2857,4.123,2902,4.407,2907,4.919,2908,4.919,2909,4.919,2916,4.788,2941,2.775,2942,2.967,2944,2.967,2985,6.22,2994,4.407,3013,4.407,3018,4.407,3023,2.967,3024,5.259,3025,5.259,3026,5.259,3027,2.967,3028,4.407,3029,2.967,3030,2.967,3031,2.967,3032,5.259,3033,2.967,3034,4.407,3035,2.967,3036,2.967,3037,6.22,3038,2.967,3039,5.821,3040,2.967,3041,2.967,3042,4.407,3043,6.748,3044,2.967,3045,2.967,3046,2.967,3047,4.407,3048,4.407,3049,2.967,3050,2.967,3051,2.967,3052,2.967,3053,2.967,3054,2.967,3055,2.967,3056,2.967,3057,2.967,3058,2.967,3059,2.967,3060,2.967,3061,2.967,3069,4.788,3075,4.788,3077,4.407,3118,3.612,3119,7.087,3120,7.087,3121,7.087,3122,7.087,3123,7.087,3124,3.223,3125,3.612,3126,5.366,3127,3.612,3128,4.788,3129,5.366,3130,3.612,3131,7.087,3132,5.366,3133,5.366,3134,3.612,3135,5.366,3136,3.612,3137,4.788,3138,5.366,3139,5.366,3140,5.366,3141,3.612,3142,5.366,3143,5.366,3144,5.366,3145,5.366,3146,3.612,3147,3.612,3148,3.612,3149,5.366,3150,3.612,3151,3.612,3152,3.612,3153,3.612,3154,5.366,3155,3.612,3156,3.612]],["title/classes/PerseDataForTheaterComposer.html",[0,0.341,3081,3.913]],["body/classes/PerseDataForTheaterComposer.html",[0,0.218,2,0.198,3,0.029,4,0.025,5,0.029,7,0.144,9,0.525,11,0.966,12,0.78,14,0.044,18,0.113,19,0.006,20,0.403,21,0.153,24,0.309,27,0.793,29,1.543,32,1.302,34,0.029,37,0.597,38,0.673,44,0.42,45,1.282,47,1.626,53,0.006,54,0.006,55,0.006,56,0.006,84,1.334,94,2.05,97,1.458,98,1.791,99,1.435,104,1.238,114,0.961,136,2.324,166,1.28,168,1.916,171,0.574,180,0.48,219,2.38,229,5.577,245,1.239,251,2.043,252,0.93,277,1.791,332,1.134,344,2.324,345,1.57,372,0.513,376,1.007,379,0.506,385,2.024,386,1.592,387,1.469,388,2.024,389,1.469,390,1.861,391,1.469,400,2.787,401,1.434,402,1.791,404,2.887,406,1.323,409,1.4,412,0.841,413,1.469,422,0.719,423,2.395,427,2.873,428,1.658,433,0.575,443,2.069,444,0.792,451,2.069,452,3.512,453,2.242,458,2.274,461,1.587,462,4.02,463,2.219,464,2.274,465,2.274,468,2.782,469,2.476,473,3.153,474,2.782,476,0.583,480,0.814,487,0.658,501,1.289,519,2.682,538,0.488,572,1.073,576,1.501,579,1.144,590,0.962,591,1.156,599,1.658,602,1.981,611,1.517,653,3.627,675,1.547,678,2.024,697,2.364,710,5.246,719,5.118,735,1.956,743,2.772,777,2.242,783,2.993,787,2.692,795,2.201,796,2.201,799,2.85,802,1.984,820,1.899,821,2.532,826,2.579,827,4.298,839,3.291,880,6.104,886,1.134,892,2.882,895,2.014,913,1.469,923,4.293,930,6.075,996,2.326,1003,2.728,1051,4.507,1141,3.876,1249,2.219,1276,2.069,1295,3.593,1357,4.21,1390,4.21,1436,2.213,1483,2.504,1503,2.504,1537,4.21,1599,2.882,1609,1.721,1631,3.876,1674,3.876,1697,1.862,1752,4.435,1753,2.342,1820,4.21,1955,3.625,1962,3.117,2047,3.625,2218,1.862,2268,3.26,2775,3.876,2856,6.153,2857,3.625,2861,5.798,2862,4.21,2863,5.798,2864,5.798,2865,5.798,2884,4.21,2888,4.21,2894,4.21,2897,4.21,2899,4.21,2901,4.21,2902,6.104,2907,4.435,2908,4.435,2909,4.435,2910,4.21,2918,7.146,2941,2.342,2942,2.504,2943,2.504,2944,2.504,2949,4.21,2976,2.72,2978,2.72,2979,2.72,2980,4.21,2981,2.72,2982,2.72,2983,2.72,2984,2.72,2985,4.741,2986,2.72,2987,2.72,2988,5.151,2989,5.798,2990,2.72,2991,4.21,2992,4.21,2993,2.72,2994,3.876,2995,2.72,2997,4.21,3009,2.72,3013,3.876,3018,3.876,3022,2.72,3023,2.504,3024,4.741,3025,4.741,3026,4.741,3027,2.504,3028,3.876,3029,2.504,3030,2.504,3031,2.504,3032,4.741,3033,2.504,3034,3.876,3035,2.504,3036,2.504,3037,5.772,3038,2.504,3039,5.337,3040,2.504,3041,2.504,3042,3.876,3043,6.366,3044,2.504,3045,2.504,3046,2.504,3047,3.876,3048,3.876,3049,2.504,3050,2.504,3051,2.504,3052,2.504,3053,2.504,3054,2.504,3055,2.504,3056,2.504,3057,2.504,3058,2.504,3059,2.504,3060,2.504,3061,2.504,3070,5.798,3081,3.876,3124,2.72,3128,4.21,3137,4.21,3157,3.049,3158,6.498,3159,7.432,3160,3.049,3161,3.049,3162,4.21,3163,3.049,3164,3.049,3165,3.049,3166,4.719,3167,3.049,3168,4.719,3169,4.719,3170,4.719,3171,3.049,3172,4.719,3173,3.049,3174,4.719,3175,4.719,3176,3.049,3177,4.719,3178,4.719,3179,3.049,3180,3.049,3181,3.049,3182,3.049,3183,3.049,3184,3.049,3185,4.719,3186,3.049,3187,5.772,3188,3.049,3189,3.049,3190,2.213]],["title/classes/PortSimpleData.html",[0,0.341,974,2.089]],["body/classes/PortSimpleData.html",[0,0.693,2,0.275,3,0.04,4,0.034,5,0.04,7,0.2,9,0.998,11,0.933,12,0.372,13,1.485,14,0.062,15,0.227,18,0.088,19,0.006,20,0.432,21,0.112,24,0.156,31,1.546,34,0.091,37,0.709,44,0.459,45,1.223,47,1.912,53,0.008,54,0.008,55,0.008,56,0.008,91,1.743,103,0.877,104,0.889,106,1.053,109,1.293,171,0.296,239,1.639,259,1.901,342,1.061,372,1.013,379,0.528,411,1.87,412,1.169,419,1.081,421,1.139,422,1.476,433,1.122,444,1.075,448,3.259,476,1.46,485,1.903,487,0.628,500,1.315,501,1.236,514,0.863,538,0.679,573,1.061,576,1.621,579,2.033,584,1.113,586,1.271,588,1.872,589,2.071,611,1.223,615,2.199,616,2.199,618,2.199,619,1.607,620,2.841,621,1.436,622,1.936,623,1.576,624,1.576,625,1.576,626,1.517,627,1.517,629,1.411,640,1.748,644,1.576,761,1.639,777,2.785,780,3.392,789,1.639,802,2.04,953,2.704,954,1.946,955,1.946,956,2.768,957,1.901,958,1.901,959,1.901,960,2.704,962,2.704,964,2.704,966,2.704,967,2.704,968,3.147,969,2.704,970,2.704,971,2.586,972,2.644,973,2.644,974,3.076,975,3.351,976,2.644,977,1.946,978,1.946,979,1.706,980,1.818,981,2.644,982,1.901,983,1.901,984,2.704,985,1.901,986,2.704,987,1.901,988,2.644,989,3.221,990,1.946,991,1.946,992,1.946,993,3.009,994,3.428,995,1.859,996,2.158,997,1.946,998,1.901,999,1.818,1000,3.076,1001,1.946,1002,1.742,1003,1.779,1004,1.946,1005,1.901,1006,1.362,1007,3.621,1008,3.621,1009,1.672,1010,2.644,1011,1.839,1012,2.704,1013,2.704,1014,2.704,1015,2.768,1016,2.644,1017,1.901,1018,1.901,1019,1.901,3191,4.239,3192,4.239]],["title/classes/PropertiesMISD.html",[0,0.341,634,2.718]],["body/classes/PropertiesMISD.html",[0,0.677,2,0.353,3,0.051,4,0.044,5,0.051,7,0.257,9,1.026,11,0.796,12,0.701,13,1.763,14,0.079,15,0.248,18,0.132,19,0.006,20,0.438,21,0.168,24,0.2,34,0.089,37,0.575,38,1.139,44,0.455,53,0.01,54,0.01,55,0.01,56,0.01,91,1.714,94,1.503,99,1.325,103,1.127,166,1.478,171,0.381,342,1.363,372,1.344,379,0.773,412,1.503,419,1.063,421,1.113,422,1.443,433,1.035,444,1.103,461,1.812,476,1.368,480,2.267,485,1.868,487,0.448,501,1.236,538,1.359,564,1.579,573,1.363,575,1.69,576,1.259,584,1.431,585,2.025,588,1.913,589,2.07,590,2.523,593,1.987,606,4.22,607,3.327,608,3.212,609,4.22,610,3.327,611,1.146,612,5.006,615,2.611,616,2.611,617,4.22,618,2.611,619,2.065,620,2.025,621,1.846,622,1.75,623,2.025,624,2.025,625,2.025,626,1.95,627,1.95,628,3.012,629,1.813,630,4.083,631,4.083,632,4.22,633,3.212,634,4.56,635,4.371,636,4.714,637,4.714,638,4.714,639,4.714,640,1.579,641,3.212,642,3.327,643,3.327,644,2.025,645,3.327,646,3.108,647,3.327,648,3.327,3193,5.447,3194,5.447,3195,5.447,3196,5.447,3197,5.447,3198,5.447]],["title/classes/PropertiesMSD.html",[0,0.341,981,2.089]],["body/classes/PropertiesMSD.html",[0,0.691,2,0.269,3,0.039,4,0.034,5,0.039,7,0.196,9,1.008,11,0.954,12,0.363,13,1.461,14,0.061,15,0.235,18,0.122,19,0.006,20,0.433,21,0.155,24,0.152,31,1.513,34,0.091,37,0.689,44,0.459,45,1.211,47,1.734,53,0.008,54,0.008,55,0.008,56,0.008,91,1.739,103,0.858,104,0.875,106,1.042,109,1.265,171,0.29,239,1.603,259,1.86,342,1.038,372,1.272,379,0.608,411,1.841,412,1.144,419,1.079,421,1.136,422,1.472,433,1.129,444,1.088,448,3.247,476,1.446,485,1.898,487,0.622,500,1.286,501,1.202,514,0.844,538,1.11,573,1.734,576,1.601,579,2.018,584,1.089,586,1.243,588,1.806,589,2.013,611,1.211,615,2.528,616,2.165,618,2.165,619,1.572,620,2.976,621,1.405,622,1.906,623,1.542,624,1.542,625,1.542,626,1.484,627,1.484,629,1.38,640,1.72,644,1.542,743,1.635,761,1.603,777,2.762,780,3.379,789,1.603,802,1.85,953,3.109,954,1.904,955,1.904,956,2.724,957,1.86,958,1.86,959,1.86,960,2.662,962,2.662,964,2.662,966,2.662,967,2.662,968,2.662,969,2.662,970,2.662,971,2.545,972,2.602,973,2.602,974,2.602,975,3.317,976,2.602,977,1.904,978,1.904,979,1.669,980,1.779,981,3.039,982,3.109,983,3.109,984,2.662,985,1.86,986,2.662,987,3.109,988,3.039,989,3.182,990,1.904,991,1.904,992,1.904,993,2.973,994,3.393,995,1.818,996,2.124,997,1.904,998,1.86,999,1.779,1000,3.039,1001,1.904,1002,1.704,1003,1.74,1004,1.904,1005,1.86,1006,1.332,1007,3.109,1008,3.393,1009,1.635,1010,1.818,1011,1.81,1012,2.662,1013,2.662,1014,2.662,1015,2.724,1016,2.602,1017,1.86,1018,1.86,1019,1.86,3199,4.146,3200,4.146,3201,4.146,3202,4.146,3203,4.146,3204,4.146]],["title/classes/PropertiesNSD.html",[0,0.341,1012,2.137]],["body/classes/PropertiesNSD.html",[0,0.692,2,0.271,3,0.039,4,0.034,5,0.039,7,0.197,9,1.009,11,0.929,12,0.366,13,1.47,14,0.061,15,0.235,18,0.102,19,0.006,20,0.431,21,0.129,24,0.154,31,1.524,34,0.091,37,0.671,44,0.459,45,1.216,47,1.9,53,0.008,54,0.008,55,0.008,56,0.008,91,1.74,99,1.546,103,0.864,104,0.88,106,1.106,109,1.274,171,0.292,239,1.616,259,1.874,342,1.046,372,1.003,379,0.523,411,1.851,412,1.153,419,1.08,421,1.137,422,1.474,433,1.119,444,1.071,448,3.252,476,1.451,485,1.9,487,0.624,500,1.296,501,1.232,514,0.851,538,0.669,573,1.046,576,1.608,579,2.083,584,1.098,586,1.253,588,1.864,589,2.063,611,1.286,615,2.177,616,2.177,618,2.177,619,1.584,620,2.823,621,1.416,622,1.917,623,1.554,624,1.554,625,1.554,626,1.496,627,1.496,629,1.391,640,1.73,644,1.554,761,1.616,777,2.77,780,3.46,789,1.616,802,1.858,953,2.677,954,1.919,955,1.919,956,2.74,957,1.874,958,1.874,959,1.874,960,2.677,962,2.677,964,2.677,966,2.677,967,2.677,968,2.677,969,2.677,970,2.677,971,2.56,972,2.617,973,2.617,974,2.617,975,3.521,976,2.617,977,1.919,978,1.919,979,1.682,980,1.792,981,2.617,982,1.874,983,1.874,984,2.677,985,1.874,986,2.677,987,1.874,988,2.617,989,3.196,990,1.919,991,1.919,992,1.919,993,2.985,994,3.405,995,1.832,996,2.136,997,1.919,998,1.874,999,1.792,1000,3.052,1001,1.919,1002,1.717,1003,1.754,1004,1.919,1005,1.874,1006,1.342,1007,3.122,1008,3.405,1009,1.648,1010,1.832,1011,1.82,1012,3.122,1013,3.405,1014,3.405,1015,3.486,1016,2.617,1017,1.874,1018,1.874,1019,1.874,3205,4.179,3206,4.179,3207,4.179]],["title/classes/PropertiesSSD.html",[0,0.341,1016,2.089]],["body/classes/PropertiesSSD.html",[0,0.691,2,0.269,3,0.039,4,0.034,5,0.039,7,0.196,9,1.008,11,0.927,12,0.364,13,1.462,14,0.061,15,0.235,18,0.11,19,0.006,20,0.431,21,0.141,24,0.152,31,1.514,34,0.091,37,0.689,44,0.459,45,1.212,47,1.894,53,0.008,54,0.008,55,0.008,56,0.008,91,1.739,99,1.624,103,0.858,104,0.875,106,1.103,109,1.265,171,0.29,239,1.604,259,1.861,342,1.038,372,0.998,379,0.52,411,1.842,412,1.145,419,1.079,421,1.136,422,1.472,433,1.118,444,1.069,448,3.248,476,1.446,485,1.898,487,0.622,500,1.287,501,1.229,514,0.845,538,0.664,573,1.038,576,1.602,579,2.019,584,1.09,586,1.244,588,1.86,589,2.059,611,1.282,615,2.166,616,2.166,618,2.166,619,1.573,620,2.814,621,1.406,622,1.907,623,1.543,624,1.543,625,1.543,626,1.485,627,1.485,629,1.381,640,1.721,644,1.543,743,1.637,761,1.604,777,3.026,780,3.457,789,1.604,802,1.851,953,2.663,954,1.905,955,1.905,956,2.726,957,1.861,958,1.861,959,1.861,960,2.663,962,2.663,964,2.663,966,2.663,967,2.663,968,2.663,969,2.663,970,2.663,971,2.547,972,2.604,973,2.604,974,2.604,975,3.511,976,2.604,977,1.905,978,1.905,979,1.67,980,1.78,981,2.604,982,1.861,983,1.861,984,2.663,985,1.861,986,2.663,987,1.861,988,2.604,989,3.183,990,1.905,991,1.905,992,1.905,993,2.974,994,3.395,995,1.82,996,2.125,997,1.905,998,1.861,999,1.78,1000,3.04,1001,1.905,1002,1.705,1003,1.742,1004,1.905,1005,1.861,1006,1.333,1007,3.11,1008,3.395,1009,1.637,1010,1.82,1011,1.811,1012,2.663,1013,3.395,1014,3.395,1015,3.474,1016,3.04,1017,1.861,1018,1.861,1019,1.861,3208,4.149,3209,4.149,3210,4.149,3211,4.149]],["title/classes/PropertiesTSD.html",[0,0.341,612,2.809]],["body/classes/PropertiesTSD.html",[0,0.678,2,0.355,3,0.051,4,0.044,5,0.051,7,0.258,9,1.027,11,0.799,12,0.702,13,1.768,14,0.08,15,0.255,18,0.132,19,0.006,20,0.439,21,0.168,24,0.201,34,0.089,37,0.577,38,0.78,44,0.455,53,0.01,54,0.01,55,0.01,56,0.01,91,1.715,94,1.51,103,1.132,166,1.485,171,0.382,342,1.37,372,1.485,379,0.746,412,1.51,419,1.064,421,1.114,422,1.444,433,0.977,444,1.105,461,1.885,476,1.372,480,1.917,485,1.87,487,0.45,501,1.192,538,1.362,564,2.323,573,2.005,575,2.486,576,1.265,584,1.437,585,2.035,588,1.845,589,1.997,590,1.728,593,2.923,606,4.724,607,3.343,608,3.227,609,4.233,610,3.343,611,1.149,612,5.208,615,2.923,616,2.619,617,4.233,618,2.619,619,2.075,620,2.035,621,1.854,622,1.758,623,2.035,624,2.035,625,2.035,626,1.959,627,1.959,628,3.026,629,1.821,630,4.096,631,4.096,632,4.724,633,3.227,634,4.096,635,3.343,636,3.227,637,4.233,638,3.227,639,4.233,640,1.587,641,3.227,642,3.343,643,3.343,644,2.035,645,3.343,646,3.122,647,3.343,648,3.343,3212,5.473,3213,5.473,3214,5.473,3215,5.473,3216,5.473,3217,5.473]],["title/classes/RelationshipsExport.html",[0,0.341,1008,2.137]],["body/classes/RelationshipsExport.html",[0,0.693,2,0.275,3,0.04,4,0.035,5,0.04,7,0.201,9,1.013,11,0.934,12,0.372,13,1.487,14,0.062,15,0.228,18,0.088,19,0.006,20,0.433,21,0.112,24,0.156,31,1.55,34,0.091,37,0.709,44,0.459,45,1.225,47,1.758,53,0.008,54,0.008,55,0.008,56,0.008,91,1.744,103,0.879,104,0.89,106,1.054,109,1.296,171,0.297,239,1.642,259,1.906,342,1.063,372,1.015,379,0.529,411,1.873,412,1.172,419,1.082,421,1.139,422,1.477,433,1.123,444,1.076,448,3.26,476,1.462,485,1.904,487,0.628,500,1.318,501,1.21,514,0.865,538,0.68,573,1.063,576,1.623,579,2.035,584,1.116,586,1.274,588,1.821,589,2.028,611,1.225,615,2.202,616,2.202,618,2.202,619,1.61,620,2.844,621,1.439,622,2.256,623,1.579,624,1.579,625,1.579,626,1.521,627,1.521,629,1.414,640,1.75,644,2.245,761,1.642,777,2.788,780,3.394,789,1.642,802,1.875,953,2.708,954,1.95,955,1.95,956,2.772,957,1.906,958,1.906,959,1.906,960,2.708,962,2.708,964,2.708,966,2.708,967,2.708,968,2.708,969,3.151,970,2.708,971,2.59,972,2.648,973,2.648,974,2.648,975,3.354,976,2.648,977,1.95,978,1.95,979,1.71,980,1.822,981,2.648,982,1.906,983,1.906,984,2.708,985,1.906,986,2.708,987,1.906,988,2.648,989,3.225,990,1.95,991,1.95,992,1.95,993,3.013,994,3.431,995,1.863,996,2.161,997,1.95,998,1.906,999,1.822,1000,3.08,1001,1.95,1002,1.746,1003,1.783,1004,1.95,1005,1.906,1006,1.365,1007,3.151,1008,3.624,1009,2.77,1010,1.863,1011,1.841,1012,2.708,1013,2.708,1014,2.708,1015,2.772,1016,2.648,1017,1.906,1018,1.906,1019,1.906,3218,4.248,3219,4.248]],["title/classes/ReteConnection.html",[0,0.341,463,2.24]],["body/classes/ReteConnection.html",[0,0.673,2,0.323,3,0.047,4,0.041,5,0.047,9,0.75,11,0.982,12,0.591,14,0.073,15,0.19,18,0.12,19,0.006,20,0.434,21,0.152,24,0.346,34,0.091,38,0.962,39,1.533,44,0.374,46,1.928,53,0.009,54,0.009,55,0.009,56,0.009,94,1.375,103,1.396,116,3.027,127,1.574,162,2.461,171,0.348,177,1.924,202,1.795,219,2.009,277,2.738,286,3.781,342,1.248,343,2.75,345,1.659,367,2.53,368,2.601,369,1.806,370,2.245,376,1.064,379,0.816,382,1.924,385,2.894,386,2.434,387,2.403,388,2.894,389,2.403,390,2.661,391,2.403,392,3.511,393,2.601,394,3.511,395,2.601,396,3.511,397,2.601,398,3.173,399,2.465,400,3.515,401,2.344,402,2.542,403,1.521,404,2.093,405,2.206,406,1.892,407,1.924,408,2.245,409,2.289,410,2.465,411,2.542,412,2.11,413,3.686,414,3.21,415,3.21,416,3.21,417,4.538,418,4.363,419,0.75,420,2.894,421,0.793,422,1.028,423,3.424,424,2.558,425,3.519,426,3.519,427,2.609,428,2.371,429,3.519,430,2.773,431,3.511,432,2.601,433,0.608,434,2.093,435,2.601,436,2.601,437,2.236,438,2.601,439,3.519,440,3.027,441,3.519,442,2.058,443,2.959,444,0.932,445,3.21,446,3.519,447,2.601,448,1.72,449,2.601,450,2.344,451,2.186,452,2.186,453,1.72,454,2.139,455,2.601,456,2.601,457,2.344,458,3.252,459,2.53,460,2.289,461,1.064,462,3.173,463,4.15,464,3.686,465,3.686,466,3.424,467,4.159,468,3.949,469,3.515,470,3.519,471,3.989,472,3.881,473,3.43,474,2.403,475,4.159,476,0.953,477,2.53,478,2.344,479,2.403,3220,4.986,3221,4.986,3222,4.986,3223,4.986]],["title/classes/ReteHostInfo.html",[0,0.341,385,2.044]],["body/classes/ReteHostInfo.html",[0,0.474,2,0.315,3,0.046,4,0.04,5,0.046,7,0.23,8,1.957,11,0.944,12,0.8,14,0.071,15,0.187,18,0.139,19,0.006,20,0.423,21,0.172,24,0.335,29,2.168,34,0.071,37,0.652,44,0.345,45,1.062,53,0.009,54,0.009,55,0.009,56,0.009,57,1.35,84,1.124,103,1.562,104,0.978,114,0.99,136,2.264,137,1.59,166,1.319,168,2.391,171,0.527,177,1.142,180,1.277,189,2.616,202,2.105,251,1.106,267,2.514,268,1.918,269,1.88,277,2.718,278,3.994,343,1.562,344,1.957,345,1.618,369,1.466,375,3.723,376,1.731,379,0.768,385,3.479,386,2.416,390,1.918,419,0.84,421,0.572,428,2.331,433,0.808,444,0.988,479,3.908,487,0.769,501,0.681,513,1.618,572,1.844,588,1.055,611,1.062,640,1.41,653,1.918,678,2.845,697,1.483,735,2.247,784,5.357,795,2.748,796,2.558,799,2.132,802,2.266,826,2.274,828,2.247,839,1.998,847,1.918,851,2.132,853,2.536,865,2.286,870,3.366,871,2.609,886,1.808,996,1.741,1006,2.973,1011,1.483,1036,2.468,1049,2.468,1114,1.843,1173,2.609,1249,2.286,1279,2.536,1280,2.343,1388,3.56,1430,3.279,1453,2.536,1578,2.536,1580,2.536,1608,2.468,1609,3.447,1614,5.096,1621,6.162,1670,2.536,1696,2.468,1712,6.201,1734,2.975,1817,2.609,1973,5.143,1974,5.143,1975,5.143,2272,3.994,2273,3.667,2281,3.667,2282,2.688,2284,4.555,2285,3.667,2286,3.56,2287,3.667,2288,3.667,2289,2.688,2290,2.609,2291,2.688,2295,2.688,2300,2.688,2302,2.688,2303,2.688,2304,2.688,2305,2.688,2306,2.609,2307,2.609,2308,2.688,2309,2.688,2312,2.688,2313,2.688,2319,2.404,2320,2.404,2321,2.688,2322,4.339,2323,5.476,2324,2.688,2325,3.56,2326,2.609,2327,2.609,2328,2.609,2329,2.609,2330,4.339,2331,2.688,2332,2.688,2333,2.688,2334,2.688,2335,2.688,2336,3.667,2337,3.667,2338,2.688,2339,2.688,2340,2.688,2341,2.688,2342,2.688,3224,4.862,3225,4.862,3226,4.862,3227,4.862,3228,4.862,3229,4.862,3230,3.994,3231,3.994,3232,3.994]],["title/classes/ReteMirroringModuleInstanceInfo.html",[0,0.341,392,2.187]],["body/classes/ReteMirroringModuleInstanceInfo.html",[0,0.466,2,0.306,3,0.044,4,0.038,5,0.044,7,0.223,8,1.904,11,0.935,12,0.795,14,0.069,15,0.183,18,0.142,19,0.006,20,0.4,21,0.177,24,0.333,29,2.128,34,0.07,37,0.644,38,1.061,44,0.34,45,1.042,53,0.009,54,0.009,55,0.009,56,0.009,57,1.325,84,1.093,103,1.539,104,0.959,114,0.963,136,2.231,137,1.546,166,1.283,168,2.363,171,0.52,177,1.11,180,1.263,192,2.567,202,2.089,251,1.076,267,2.467,268,1.865,269,1.828,277,1.467,343,1.519,344,1.904,345,1.574,369,1.445,372,1.251,375,4.383,376,2.038,379,0.737,386,1.305,392,3.859,403,2.649,414,3.124,415,3.124,416,3.124,419,0.828,421,0.556,428,2.287,433,0.907,444,0.977,480,1.987,487,0.765,501,0.663,513,1.574,538,1.191,572,1.823,583,1.904,588,1.026,590,2.349,591,2.821,611,1.042,640,1.371,653,1.865,678,2.792,697,1.442,735,2.848,795,2.716,796,2.521,799,2.074,802,2.244,826,2.248,828,2.205,839,1.944,847,1.865,851,2.074,853,2.467,865,2.224,870,3.303,871,2.538,886,1.758,1006,2.912,1011,1.442,1036,2.4,1049,2.4,1114,1.793,1173,2.538,1249,2.224,1279,2.467,1280,2.279,1388,3.493,1430,3.217,1458,2.538,1463,3.434,1578,2.467,1580,2.467,1581,5.001,1591,5.553,1608,2.4,1609,3.43,1670,2.467,1696,2.4,1734,2.919,1817,2.538,2273,3.598,2281,3.598,2282,2.615,2284,4.511,2285,3.598,2286,3.493,2287,3.598,2288,3.598,2289,2.615,2290,2.538,2291,2.615,2295,2.615,2300,2.615,2302,2.615,2303,2.615,2304,2.615,2305,2.615,2306,2.538,2307,2.538,2308,2.615,2309,2.615,2312,2.615,2313,2.615,2319,2.338,2320,2.338,2321,2.615,2324,2.615,2325,5.087,2326,2.538,2327,2.538,2328,2.538,2329,2.538,2331,2.615,2332,2.615,2333,2.615,2334,2.615,2335,2.615,2336,3.598,2337,3.598,2338,2.615,2339,2.615,2340,2.615,2341,2.615,2342,2.615,2395,3.884,2403,4.22,2404,6.64,2405,4.22,3233,3.884,3234,3.884,3235,3.884,3236,3.884,3237,3.884,3238,3.884,3239,3.884,3240,3.634,3241,3.634,3242,3.634,3243,3.634,3244,3.634,3245,3.634]],["title/classes/ReteModuleComposerSettings.html",[0,0.341,3246,4.251]],["body/classes/ReteModuleComposerSettings.html",[0,0.359,2,0.325,3,0.047,4,0.041,5,0.047,7,0.237,14,0.073,15,0.191,18,0.129,19,0.006,21,0.168,24,0.352,34,0.047,44,0.375,53,0.009,54,0.009,55,0.009,56,0.009,57,1.022,84,1.773,97,0.944,98,1.16,99,0.929,104,0.999,107,2.907,108,3.072,109,2.506,114,1.38,136,2.464,145,2.482,168,1.998,170,3.75,180,0.791,202,2.247,245,1.78,251,1.142,252,1.531,267,1.903,268,1.98,269,3.673,338,2.786,360,3.857,386,2.536,419,0.754,427,2.621,469,2.907,480,1.34,487,0.755,509,1.67,519,1.531,572,1.142,678,3.292,697,2.34,735,1.701,780,3.435,795,2.296,796,2.296,826,1.901,828,2.296,842,5.567,847,2.674,1042,6.109,1051,2.694,1077,2.548,1276,2.972,1343,2.694,1558,3.066,1559,2.618,1566,2.305,1567,2.775,1606,5.428,1609,1.831,1650,4.682,1942,3.748,2138,4.123,2237,2.864,2253,2.96,2259,3.997,2319,2.482,2320,2.482,2427,3.066,2443,3.997,3190,3.645,3246,7.332,3247,7.064,3248,5.02,3249,6.314,3250,5.208,3251,5.208,3252,5.208,3253,6.795,3254,7.442,3255,5.896,3256,6.314,3257,5.208,3258,6.594,3259,6.778,3260,5.02,3261,5.02,3262,5.02,3263,5.02,3264,5.02,3265,5.208,3266,3.857,3267,3.857,3268,4.479,3269,3.857,3270,3.645,3271,3.645,3272,3.857,3273,3.857,3274,3.857,3275,3.468,3276,3.857,3277,3.468,3278,4.479,3279,4.123,3280,5.208,3281,3.857,3282,3.857,3283,3.645,3284,3.857,3285,3.857,3286,3.857,3287,3.857,3288,3.857,3289,3.857,3290,3.857,3291,3.857,3292,3.857,3293,3.857,3294,3.857,3295,3.857,3296,3.857,3297,3.645,3298,3.857,3299,3.645,3300,3.857,3301,5.896,3302,3.857,3303,3.857,3304,3.857,3305,3.857,3306,3.857,3307,3.857,3308,3.857,3309,3.857,3310,3.857,3311,3.857,3312,5.208,3313,3.857,3314,3.857,3315,3.857,3316,3.857,3317,3.857,3318,3.857,3319,3.857,3320,3.857,3321,3.645,3322,3.857,3323,3.857,3324,3.857]],["title/classes/ReteModuleVisualizerSettings.html",[0,0.341,3325,4.251]],["body/classes/ReteModuleVisualizerSettings.html",[0,0.315,2,0.286,3,0.041,4,0.036,5,0.041,7,0.208,14,0.064,15,0.175,18,0.124,19,0.006,21,0.166,24,0.347,34,0.041,44,0.388,53,0.008,54,0.008,55,0.008,56,0.008,57,1.262,84,1.657,97,0.83,98,1.019,99,0.816,104,0.914,107,2.776,108,2.933,109,2.718,114,1.262,136,2.332,145,3.065,168,2.293,170,3.695,180,0.695,202,2.216,245,1.628,251,1.41,252,1.891,267,1.672,268,1.74,269,3.675,338,2.548,360,3.389,386,2.499,419,0.69,427,3.007,469,2.659,480,1.177,487,0.732,509,1.468,519,1.891,540,2.659,549,2.659,572,1.003,678,3.645,697,2.592,711,2.914,735,1.494,780,3.417,795,2.1,796,2.1,820,2.496,826,2.181,828,2.635,847,3.352,1042,5.871,1051,3.327,1077,3.147,1164,3.932,1276,2.719,1343,3.327,1558,2.694,1559,3.234,1566,3.292,1567,2.439,1606,5.413,1609,1.609,1650,4.283,1942,4.3,2237,3.537,2253,3.656,2259,4.586,2319,2.18,2320,2.18,2427,3.787,2443,4.586,3190,4.501,3247,6.96,3249,6.53,3250,4.764,3251,4.764,3252,4.764,3253,6.53,3254,7.303,3255,5.509,3256,5.976,3257,4.764,3258,6.296,3265,6.53,3266,3.389,3267,3.389,3268,3.935,3269,3.389,3270,3.202,3271,3.202,3272,3.389,3273,3.389,3274,3.389,3275,3.047,3276,3.389,3277,3.047,3278,3.935,3279,3.622,3280,4.764,3281,3.389,3282,3.389,3283,3.202,3284,3.389,3285,3.389,3286,3.389,3287,3.389,3288,4.764,3289,4.764,3290,4.764,3291,3.389,3292,3.389,3293,3.389,3294,4.764,3295,4.764,3296,4.764,3297,3.202,3298,3.389,3299,3.202,3300,3.389,3301,5.976,3302,4.764,3303,4.764,3304,4.764,3305,4.764,3306,4.764,3307,4.764,3308,4.764,3309,4.764,3310,4.764,3311,4.764,3312,5.509,3313,4.764,3314,4.764,3315,4.764,3316,4.764,3317,4.764,3318,4.764,3319,4.764,3320,3.389,3321,3.202,3322,4.764,3323,4.764,3324,4.764,3325,6.94,3326,4.411,3327,6.2,3328,6.94,3329,6.2,3330,4.411,3331,4.411,3332,4.411,3333,4.411,3334,4.411,3335,4.411,3336,5.532,3337,4.411,3338,3.935]],["title/classes/ReteNetworkInfo.html",[0,0.341,388,2.044]],["body/classes/ReteNetworkInfo.html",[0,0.489,2,0.329,3,0.048,4,0.041,5,0.048,7,0.24,8,2.045,11,0.958,12,0.808,14,0.074,15,0.192,18,0.136,19,0.006,20,0.381,21,0.165,24,0.339,29,2.234,34,0.073,37,0.664,44,0.353,45,1.094,53,0.009,54,0.009,55,0.009,56,0.009,57,1.391,84,1.174,103,1.597,104,1.007,114,1.034,136,2.315,137,1.661,166,1.379,168,2.434,171,0.539,177,1.193,180,1.301,198,2.695,202,2.129,251,1.155,267,2.59,268,2.004,269,1.964,277,2.396,343,1.632,344,2.045,345,1.691,369,1.499,375,3.791,376,1.763,386,2.13,388,3.312,390,2.004,419,0.859,421,0.597,428,2.401,433,0.833,444,1.006,487,0.775,501,0.712,513,1.691,572,1.878,579,1.231,588,1.102,611,1.094,640,1.473,653,2.004,678,2.931,697,1.549,735,2.315,795,2.798,796,2.616,799,2.228,802,2.3,826,2.316,828,2.315,839,2.088,847,2.004,851,2.228,853,2.65,865,2.389,870,3.468,871,2.727,886,1.889,913,2.448,1006,3,1011,1.549,1036,2.579,1049,2.579,1114,1.926,1173,2.727,1249,2.389,1279,2.65,1280,2.448,1388,3.667,1430,3.378,1431,5.606,1453,2.65,1578,2.65,1580,2.65,1608,2.579,1609,3.473,1616,3.904,1623,6.256,1670,2.65,1696,2.579,1717,6.342,1734,3.065,1817,2.727,2273,3.778,2281,3.778,2282,2.809,2284,4.624,2285,3.778,2286,3.667,2287,3.778,2288,3.778,2289,2.809,2290,2.727,2291,2.809,2295,2.809,2300,2.809,2302,2.809,2303,2.809,2304,2.809,2305,2.809,2306,2.727,2307,2.727,2308,2.809,2309,2.809,2312,2.809,2313,2.809,2319,2.512,2320,2.512,2321,2.809,2323,5.704,2324,2.809,2326,2.727,2327,2.727,2328,2.727,2329,2.727,2331,2.809,2332,2.809,2333,2.809,2334,2.809,2335,2.809,2336,3.778,2337,3.778,2338,2.809,2339,2.809,2340,2.809,2341,2.809,2342,2.809,2753,4.173,2761,4.533,2762,7.368,2763,7.368,2764,4.533,2765,4.533,3230,4.173,3231,4.173,3232,4.173,3339,5.081,3340,5.081,3341,5.081]],["title/classes/ReteSubnetInfo.html",[0,0.341,390,1.879]],["body/classes/ReteSubnetInfo.html",[0,0.483,2,0.323,3,0.047,4,0.041,5,0.047,7,0.236,8,2.009,11,0.953,12,0.805,14,0.073,15,0.19,18,0.137,19,0.006,20,0.411,21,0.168,24,0.337,29,2.207,34,0.072,37,0.659,44,0.35,45,1.081,53,0.009,54,0.009,55,0.009,56,0.009,57,1.374,84,1.153,103,1.583,104,0.995,106,0.93,114,1.016,136,2.294,137,1.631,166,1.354,168,2.417,171,0.534,177,1.172,180,1.291,202,2.119,207,2.663,251,1.135,267,2.559,268,1.968,269,1.929,277,2.543,343,1.603,344,2.009,345,1.661,369,1.485,375,3.763,376,1.75,379,0.592,386,2.261,390,3.378,419,0.851,421,0.587,428,2.372,433,0.823,444,0.999,487,0.773,501,0.699,513,1.661,538,1.312,572,1.864,588,1.082,611,1.081,640,1.447,653,1.968,678,2.896,697,1.522,735,2.287,777,1.722,789,3.169,792,5.663,795,2.777,796,2.592,799,2.188,802,2.286,826,2.299,828,2.287,839,2.051,847,1.968,851,2.188,853,2.603,865,2.346,870,3.426,871,2.678,886,1.855,1006,2.989,1011,1.522,1036,2.533,1049,2.533,1114,1.892,1173,2.678,1249,2.346,1279,2.603,1280,2.405,1388,3.623,1430,3.337,1453,2.603,1578,2.603,1580,2.603,1608,2.533,1609,3.462,1615,5.187,1625,6.218,1670,2.603,1696,2.533,1715,6.284,1734,3.028,1817,2.678,2273,3.733,2281,3.733,2282,2.759,2284,4.596,2285,3.733,2286,3.623,2287,3.733,2288,3.733,2289,2.759,2290,2.678,2291,2.759,2295,2.759,2300,2.759,2302,2.759,2303,2.759,2304,2.759,2305,2.759,2306,2.678,2307,2.678,2308,2.759,2309,2.759,2312,2.759,2313,2.759,2319,2.467,2320,2.467,2321,2.759,2323,5.513,2324,2.759,2325,3.623,2326,2.678,2327,2.678,2328,2.678,2329,2.678,2331,2.759,2332,2.759,2333,2.759,2334,2.759,2335,2.759,2336,3.733,2337,3.733,2338,2.759,2339,2.759,2340,2.759,2341,2.759,2342,2.759,3230,4.099,3231,4.099,3232,4.099,3342,4.099,3343,4.99,3344,4.99,3345,4.99,3346,4.99,3347,4.453,3348,4.453]],["title/classes/ReteTheaterComposerSettings.html",[0,0.341,3349,4.251]],["body/classes/ReteTheaterComposerSettings.html",[0,0.357,2,0.324,3,0.047,4,0.041,5,0.047,7,0.236,14,0.073,15,0.19,18,0.129,19,0.006,21,0.168,24,0.346,34,0.047,44,0.375,53,0.009,54,0.009,55,0.009,56,0.009,57,1.017,76,6.169,84,1.769,97,0.939,98,1.154,99,0.925,104,0.996,107,2.902,108,3.067,109,2.501,114,1.375,136,2.459,145,2.469,168,1.991,170,3.746,180,0.787,202,2.209,245,1.774,251,1.136,252,1.523,267,1.893,268,1.97,269,3.598,338,2.776,386,2.533,419,0.751,427,2.612,469,2.142,480,1.333,487,0.754,509,1.662,519,1.523,572,1.136,678,3.283,697,2.334,735,1.692,780,3.463,795,2.289,796,2.289,826,1.894,828,2.289,845,5.548,847,2.664,1042,6.1,1051,2.68,1077,2.535,1276,2.962,1343,2.68,1558,3.05,1559,2.605,1566,2.293,1567,2.761,1606,5.417,1609,1.822,1650,4.666,1942,3.735,2237,2.849,2253,2.945,2259,3.983,2319,2.469,2320,2.469,2427,3.05,2443,3.983,3190,3.626,3247,7.055,3249,6.301,3250,5.19,3251,5.19,3252,5.19,3253,6.784,3254,7.437,3255,5.881,3256,6.301,3257,5.19,3258,6.582,3265,5.19,3266,3.837,3267,3.837,3269,3.837,3270,3.626,3271,3.626,3272,3.837,3273,3.837,3274,3.837,3275,3.45,3276,3.837,3277,3.45,3280,5.19,3281,3.837,3282,3.837,3283,3.626,3284,3.837,3285,3.837,3286,3.837,3287,3.837,3288,3.837,3289,3.837,3290,3.837,3291,3.837,3292,3.837,3293,3.837,3294,3.837,3295,3.837,3296,3.837,3297,3.626,3298,3.837,3299,3.626,3300,3.837,3301,5.19,3302,3.837,3303,3.837,3304,3.837,3305,3.837,3306,3.837,3307,3.837,3308,3.837,3309,3.837,3310,3.837,3311,3.837,3312,5.19,3313,3.837,3314,3.837,3315,3.837,3316,3.837,3317,3.837,3318,3.837,3319,3.837,3320,3.837,3321,3.626,3322,3.837,3323,3.837,3324,3.837,3349,7.317,3350,4.994,3351,6.755,3352,4.994,3353,4.994,3354,4.994,3355,4.994,3356,4.994]],["title/classes/ReteTheaterInternalServiceModuleInstanceInfo.html",[0,0.341,394,2.187]],["body/classes/ReteTheaterInternalServiceModuleInstanceInfo.html",[0,0.466,2,0.306,3,0.044,4,0.038,5,0.044,7,0.223,8,1.904,11,0.935,12,0.795,14,0.069,15,0.183,18,0.142,19,0.006,20,0.4,21,0.177,24,0.333,29,2.128,34,0.07,37,0.644,38,1.061,44,0.34,45,1.042,53,0.009,54,0.009,55,0.009,56,0.009,57,1.325,84,1.093,103,1.539,104,0.959,114,0.963,136,2.231,137,1.546,166,1.283,168,2.363,171,0.52,177,1.11,180,1.263,202,2.089,210,2.567,251,1.076,267,2.467,268,1.865,269,1.828,277,1.467,343,1.519,344,1.904,345,1.574,369,1.445,372,1.251,375,4.383,376,2.038,379,0.737,386,1.305,394,3.859,403,2.649,414,3.124,415,3.124,416,3.124,419,0.828,421,0.556,428,2.287,433,0.907,444,0.977,480,1.987,487,0.765,501,0.663,513,1.574,538,1.191,572,1.823,583,1.904,588,1.026,590,2.349,591,2.821,611,1.042,640,1.371,653,1.865,678,2.792,697,1.442,735,2.848,795,2.716,796,2.521,799,2.074,802,2.244,826,2.248,828,2.205,839,1.944,847,1.865,851,2.074,853,2.467,865,2.224,870,3.303,871,2.538,886,1.758,1006,2.912,1011,1.442,1036,2.4,1049,2.4,1114,1.793,1173,2.538,1249,2.224,1279,2.467,1280,2.279,1388,3.493,1430,3.217,1458,2.538,1462,3.434,1578,2.467,1580,2.467,1583,5.001,1593,6.102,1608,2.4,1609,3.43,1670,2.467,1696,2.4,1734,2.919,1817,2.538,2273,3.598,2281,3.598,2282,2.615,2284,4.511,2285,3.598,2286,3.493,2287,3.598,2288,3.598,2289,2.615,2290,2.538,2291,2.615,2295,2.615,2300,2.615,2302,2.615,2303,2.615,2304,2.615,2305,2.615,2306,2.538,2307,2.538,2308,2.615,2309,2.615,2312,2.615,2313,2.615,2319,2.338,2320,2.338,2321,2.615,2324,2.615,2325,5.087,2326,2.538,2327,2.538,2328,2.538,2329,2.538,2331,2.615,2332,2.615,2333,2.615,2334,2.615,2335,2.615,2336,3.598,2337,3.598,2338,2.615,2339,2.615,2340,2.615,2341,2.615,2342,2.615,3233,3.884,3234,3.884,3235,3.884,3236,3.884,3237,3.884,3238,3.884,3239,3.884,3240,3.634,3241,3.634,3242,3.634,3243,3.634,3244,3.634,3245,3.634,3357,3.884,3358,6.64,3359,4.22,3360,4.22]],["title/classes/ReteTheaterModuleInstanceInfo.html",[0,0.341,396,2.187]],["body/classes/ReteTheaterModuleInstanceInfo.html",[0,0.466,2,0.306,3,0.044,4,0.038,5,0.044,7,0.223,8,1.904,11,0.935,12,0.795,14,0.069,15,0.183,18,0.142,19,0.006,20,0.4,21,0.177,24,0.333,29,2.128,34,0.07,37,0.644,38,1.061,44,0.34,45,1.042,53,0.009,54,0.009,55,0.009,56,0.009,57,1.325,84,1.093,103,1.539,104,0.959,114,0.963,136,2.231,137,1.546,166,1.283,168,2.363,171,0.52,177,1.11,180,1.263,202,2.089,211,2.567,251,1.076,267,2.467,268,1.865,269,1.828,277,1.467,343,1.519,344,1.904,345,1.574,369,1.445,372,1.251,375,4.383,376,2.038,379,0.737,386,1.305,396,3.859,403,2.649,414,3.124,415,3.124,416,3.124,419,0.828,421,0.556,428,2.287,433,0.907,444,0.977,480,1.987,487,0.765,501,0.663,513,1.574,538,1.191,572,1.823,583,1.904,588,1.026,590,2.349,591,2.821,611,1.042,640,1.371,653,1.865,678,2.792,697,1.442,735,2.848,795,2.716,796,2.521,799,2.074,802,2.244,826,2.248,828,2.205,839,1.944,847,1.865,851,2.074,853,2.467,865,2.224,870,3.303,871,2.538,886,1.758,1006,2.912,1011,1.442,1036,2.4,1049,2.4,1114,1.793,1173,2.538,1249,2.224,1279,2.467,1280,2.279,1388,3.493,1430,3.217,1458,2.538,1459,3.434,1578,2.467,1580,2.467,1582,5.001,1591,4.916,1595,4.725,1608,2.4,1609,3.43,1670,2.467,1696,2.4,1734,2.919,1817,2.538,2273,3.598,2281,3.598,2282,2.615,2284,4.511,2285,3.598,2286,3.493,2287,3.598,2288,3.598,2289,2.615,2290,2.538,2291,2.615,2295,2.615,2300,2.615,2302,2.615,2303,2.615,2304,2.615,2305,2.615,2306,2.538,2307,2.538,2308,2.615,2309,2.615,2312,2.615,2313,2.615,2319,2.338,2320,2.338,2321,2.615,2324,2.615,2325,5.087,2326,2.538,2327,2.538,2328,2.538,2329,2.538,2331,2.615,2332,2.615,2333,2.615,2334,2.615,2335,2.615,2336,3.598,2337,3.598,2338,2.615,2339,2.615,2340,2.615,2341,2.615,2342,2.615,3233,3.884,3234,3.884,3235,3.884,3236,3.884,3237,3.884,3238,3.884,3239,3.884,3240,3.634,3241,3.634,3242,3.634,3243,3.634,3244,3.634,3245,3.634,3361,3.884,3362,6.64,3363,4.22,3364,4.22]],["title/classes/ReteTheaterVisualizerSettings.html",[0,0.341,3365,4.251]],["body/classes/ReteTheaterVisualizerSettings.html",[0,0.319,2,0.289,3,0.042,4,0.036,5,0.042,7,0.211,14,0.065,15,0.176,18,0.124,19,0.006,21,0.166,24,0.338,34,0.042,44,0.39,53,0.008,54,0.008,55,0.008,56,0.008,57,1.273,84,1.667,97,0.84,98,1.031,99,0.826,104,0.922,107,2.789,108,2.947,109,2.726,114,1.273,136,2.344,145,3.091,168,2.305,170,3.704,180,0.703,202,2.16,245,1.642,251,1.422,252,1.907,267,1.692,268,1.761,269,3.596,338,2.57,386,2.505,419,0.695,427,3.023,469,1.915,480,1.192,487,0.734,509,1.485,519,1.907,540,2.682,549,2.682,572,1.015,678,3.659,697,2.602,735,1.512,780,3.424,795,2.118,796,2.118,820,2.517,826,2.193,828,2.649,847,3.365,1042,5.893,1051,3.355,1077,3.173,1164,3.965,1276,2.742,1343,3.355,1558,2.726,1559,3.261,1566,3.313,1567,2.468,1606,5.438,1609,1.628,1650,4.319,1942,4.323,2237,3.567,2253,3.687,2259,4.61,2319,2.207,2320,2.207,2427,3.819,2443,4.61,3190,4.539,3247,6.979,3249,6.555,3250,4.804,3251,4.804,3252,4.804,3253,6.555,3254,7.317,3255,5.545,3256,6.008,3257,4.804,3258,6.324,3265,6.555,3266,3.43,3267,3.43,3269,3.43,3270,3.241,3271,3.241,3272,3.43,3273,3.43,3274,3.43,3275,3.084,3276,3.43,3277,3.084,3280,4.804,3281,3.43,3282,3.43,3283,3.241,3284,3.43,3285,3.43,3286,3.43,3287,3.43,3288,4.804,3289,4.804,3290,4.804,3291,3.43,3292,3.43,3293,3.43,3294,4.804,3295,4.804,3296,4.804,3297,3.241,3298,3.43,3299,3.241,3300,3.43,3301,6.008,3302,4.804,3303,4.804,3304,4.804,3305,4.804,3306,4.804,3307,4.804,3308,4.804,3309,4.804,3310,4.804,3311,4.804,3312,5.545,3313,4.804,3314,4.804,3315,4.804,3316,4.804,3317,4.804,3318,4.804,3319,4.804,3320,3.43,3321,3.241,3322,4.804,3323,4.804,3324,4.804,3328,6.977,3336,5.579,3338,3.983,3365,6.977,3366,4.464,3367,6.253,3368,6.253,3369,4.464,3370,4.464,3371,4.464,3372,4.464,3373,4.464,3374,4.464]],["title/classes/SelectOption.html",[0,0.341,1105,2.809]],["body/classes/SelectOption.html",[0,0.686,2,0.397,3,0.058,4,0.05,5,0.058,7,0.289,9,0.858,11,0.858,14,0.089,15,0.217,18,0.142,19,0.006,20,0.435,21,0.157,27,1.029,32,1.689,34,0.09,37,0.62,41,2.983,46,2.367,47,1.532,49,1.451,50,3.393,53,0.011,54,0.011,55,0.011,56,0.011,99,1.428,106,1.222,127,1.932,180,1.397,352,2.074,369,1.64,379,0.537,420,2.626,487,0.634,519,2.705,611,1.535,622,1.966,725,3.492,733,3.492,824,2.811,1081,5.789,1082,4.761,1083,3.882,1084,4.024,1085,6.081,1086,3.882,1087,3.882,1093,3.492,1094,5.16,1095,3.61,1097,3.385,1098,3.882,1099,5.359,1100,3.739,1101,3.107,1102,3.739,1103,3.882,1104,3.882,1105,4.982,1106,3.492,1107,3.882,1108,3.739,1109,3.739,1110,4.024,1111,4.893,1112,4.893,1113,4.712,1114,2.925,1115,4.266,1116,3.882,1117,4.402,1118,3.739,1119,3.739,1120,3.739,1121,3.61,1122,3.882,3375,6.122,3376,6.122,3377,6.122]],["title/classes/SimpleAreaDTO.html",[0,0.341,408,1.585]],["body/classes/SimpleAreaDTO.html",[0,0.687,2,0.248,3,0.036,4,0.031,5,0.036,7,0.18,9,0.954,12,0.58,13,1.377,14,0.056,15,0.205,18,0.097,19,0.006,20,0.452,21,0.104,24,0.243,27,0.642,30,1.604,34,0.09,37,0.672,38,1.038,39,0.766,44,0.458,45,1.498,49,1.573,53,0.007,54,0.007,55,0.007,56,0.007,91,1.728,96,1.57,97,0.719,104,0.824,106,1.068,114,0.778,115,1.206,171,0.649,180,0.602,219,1.004,352,1.294,369,1.086,370,1.271,371,1.675,372,1.471,373,2.221,376,1.194,379,0.848,382,1.886,402,1.185,403,2.018,404,2.259,405,2.163,406,1.071,407,1.595,408,2.202,419,1.072,421,1.133,422,1.469,433,1.122,442,1.165,444,0.945,461,1.555,476,1.264,480,1.944,484,1.714,485,1.894,486,2.968,487,0.773,488,2.968,489,2.509,496,2.348,497,2.348,498,1.714,499,2.558,500,1.185,501,0.535,502,1.714,503,1.639,504,1.394,505,1.714,506,1.714,507,1.714,508,1.714,509,1.271,510,1.639,511,1.714,512,1.675,513,1.271,514,0.778,515,1.477,516,3.123,517,1.714,518,1.714,519,1.165,520,1.714,521,2.399,522,1.714,523,2.509,524,1.714,525,1.714,526,1.604,527,3.668,528,1.368,529,1.675,530,1.714,531,2.399,532,1.714,533,1.714,534,1.714,535,1.714,536,1.714,537,1.714,538,1.166,539,1.714,540,1.639,541,2.399,542,1.448,543,2.348,544,1.714,545,1.714,546,2.453,547,1.714,548,1.714,549,2.838,550,1.714,551,1.394,552,1.394,553,1.394,554,1.394,555,1.394,556,1.394,557,1.394,558,1.394,559,1.394,560,1.714,561,1.714,562,1.714,563,1.675,564,1.621,565,1.675,566,1.675,567,1.675,568,1.675,569,1.675,570,1.675,571,1.675,572,0.869,573,1.4,574,1.675,575,1.735,576,0.883,577,1.714,578,1.714,579,0.926,580,1.714,581,1.604,582,1.639,583,2.251,584,1.004,585,1.421,586,1.146,587,2.509,588,1.213,589,1.819,590,1.206,591,1.448,592,2.453,593,1.394,594,1.675,595,2.968,596,1.675,597,1.421,598,2.901,599,2.325,600,1.639,601,1.714,602,1.604,603,1.448,604,1.714,605,1.448,3378,3.821,3379,3.821]],["title/classes/SimpleModuleApplication.html",[0,0.341,462,2.24]],["body/classes/SimpleModuleApplication.html",[0,0.651,2,0.275,3,0.04,4,0.035,5,0.04,7,0.201,9,0.781,11,0.961,12,0.529,14,0.062,15,0.17,18,0.142,19,0.006,20,0.437,21,0.181,24,0.335,34,0.089,37,0.485,38,0.861,39,1.408,44,0.384,46,1.642,49,1.136,53,0.008,54,0.008,55,0.008,56,0.008,94,1.172,99,1.118,103,1.453,106,0.585,116,2.708,127,1.341,162,2.202,171,0.491,177,1.796,202,1.649,219,2.122,277,2.605,286,3.781,342,1.063,343,2.595,345,1.414,367,2.156,368,2.216,369,1.768,370,2.009,372,1.015,373,1.841,375,4.366,376,2.041,379,0.828,382,1.721,385,2.59,386,2.316,387,2.047,388,2.59,389,2.047,390,2.381,391,2.047,392,3.225,393,2.216,394,3.225,395,2.216,396,3.225,397,2.216,398,2.839,399,2.1,400,3.466,401,1.998,402,2.507,403,1.296,404,2.994,405,1.974,406,1.693,407,1.721,408,2.009,409,1.95,410,2.1,411,2.373,412,2.229,413,3.894,414,3.392,415,3.392,416,3.392,417,4.502,418,4.269,419,0.781,420,3.013,421,0.826,422,1.07,423,3.565,424,2.663,425,3.664,426,3.664,427,2.716,428,2.468,429,3.664,430,2.887,431,3.512,432,2.216,433,0.518,434,1.783,435,2.216,436,2.216,437,1.906,438,2.216,439,3.149,440,2.708,441,3.149,442,1.841,443,2.648,444,0.932,445,2.948,446,3.149,447,2.216,448,1.466,449,2.216,450,1.998,451,1.863,452,1.863,453,1.466,454,1.822,455,2.216,456,2.216,457,1.998,458,3.385,459,2.156,460,2.772,461,1.289,462,3.303,463,3.799,464,2.047,465,2.047,466,3.064,467,3.882,468,3.686,469,3.281,470,3.149,471,3.664,472,3.565,473,3.151,474,2.047,475,3.882,476,0.812,477,2.156,478,1.998,479,2.047,538,0.967,543,1.783,551,2.202,552,2.202,553,2.202,554,2.202,555,2.202,556,2.202,557,2.202,558,2.202,559,2.202,804,1.906,2557,3.489,2558,3.489,2559,3.489,2560,3.489,2561,3.489,2562,3.489,2563,3.489,2564,3.489,2565,3.489,2566,3.489,2567,3.489,2568,3.489,2569,3.489,2570,3.489,2571,3.489,3380,4.248,3381,4.248,3382,4.248,3383,4.248,3384,4.248,3385,4.248]],["title/classes/SimpleModuleDTO.html",[0,0.341,404,1.478]],["body/classes/SimpleModuleDTO.html",[0,0.681,2,0.233,3,0.034,4,0.029,5,0.034,7,0.17,9,0.937,12,0.62,13,1.317,14,0.052,15,0.199,18,0.136,19,0.006,20,0.452,21,0.172,24,0.235,27,0.604,30,1.509,34,0.09,37,0.692,38,1.008,39,0.72,44,0.456,45,1.47,49,1.62,53,0.007,54,0.007,55,0.007,56,0.007,91,1.715,96,1.477,97,0.676,99,0.99,104,0.788,106,1.091,114,0.732,115,1.135,171,0.651,180,0.566,219,0.944,352,1.218,369,1.038,370,1.196,371,1.576,372,1.448,373,2.416,376,1.141,379,0.847,382,1.82,402,1.115,403,1.947,404,2.345,405,2.087,406,1.008,407,1.524,408,1.779,419,1.064,421,1.124,422,1.458,433,1.109,442,1.096,444,0.965,461,1.613,476,1.22,480,1.427,484,1.612,485,1.879,486,2.398,487,0.755,488,2.398,489,2.398,496,2.244,497,2.244,498,1.612,499,2.468,500,1.115,501,0.504,502,1.612,503,1.542,504,1.311,505,1.612,506,1.612,507,1.612,508,1.612,509,1.196,510,1.542,511,1.612,512,1.576,513,1.196,514,0.732,515,1.39,516,3.032,517,1.612,518,1.612,519,1.096,520,1.612,521,2.293,522,1.612,523,2.398,524,1.612,525,1.612,526,1.509,527,3.597,528,1.287,529,1.576,530,1.612,531,2.293,532,1.612,533,1.612,534,1.612,535,1.612,536,1.612,537,1.612,538,1.268,539,1.612,540,1.542,541,2.293,542,1.363,543,2.68,544,1.612,545,1.612,546,2.345,547,1.612,548,1.612,549,2.738,550,2.398,551,2.329,552,2.329,553,2.329,554,2.329,555,2.329,556,2.329,557,2.329,558,2.329,559,2.329,560,1.612,561,1.612,562,1.612,563,1.576,564,1.55,565,1.576,566,1.576,567,1.576,568,1.576,569,1.576,570,1.576,571,1.576,572,0.817,573,1.338,574,1.576,575,1.659,576,0.831,577,1.612,578,1.612,579,0.871,580,1.612,581,1.509,582,1.542,583,2.152,584,0.944,585,1.336,586,1.078,587,2.398,588,1.16,589,1.774,590,1.135,591,1.363,592,2.345,593,1.311,594,1.576,595,2.864,596,1.576,597,1.336,598,2.799,599,2.243,600,1.542,601,1.612,602,1.509,603,1.363,604,1.612,605,1.363,3386,3.594,3387,3.594,3388,3.594,3389,3.594,3390,3.594,3391,3.594,3392,3.594,3393,3.594,3394,3.594,3395,3.594,3396,3.594,3397,3.594,3398,3.594,3399,3.594,3400,3.594]],["title/classes/SingleDataInputReturned.html",[0,0.341,1117,2.718]],["body/classes/SingleDataInputReturned.html",[0,0.685,2,0.394,3,0.057,4,0.049,5,0.057,7,0.287,9,0.676,11,0.676,14,0.089,15,0.216,18,0.142,19,0.006,20,0.437,21,0.164,27,1.291,32,1.676,34,0.09,37,0.711,41,2.969,46,2.969,47,1.521,49,1.664,50,3.388,53,0.011,54,0.011,55,0.011,56,0.011,106,1.219,127,2.424,180,1.394,352,2.059,369,1.635,379,0.533,420,2.607,487,0.631,519,2.698,611,1.533,622,1.952,725,3.467,733,3.467,824,2.79,1081,5.78,1082,4.897,1083,3.854,1084,4.392,1085,6.072,1086,3.854,1087,3.854,1093,3.467,1094,5.143,1095,3.584,1097,3.36,1098,3.854,1099,5.341,1100,3.712,1101,3.084,1102,3.712,1103,3.854,1104,3.854,1105,4.529,1106,3.467,1107,3.854,1108,3.712,1109,3.712,1110,3.17,1111,3.854,1112,3.854,1113,3.712,1114,3.192,1115,4.246,1116,3.854,1117,4.804,1118,3.712,1119,3.712,1120,3.712,1121,3.584,1122,4.871,3401,6.078,3402,6.078,3403,6.078,3404,6.078]],["title/classes/SortDTO.html",[0,0.341,497,2]],["body/classes/SortDTO.html",[0,0.602,2,0.456,3,0.066,4,0.057,5,0.066,7,0.333,12,0.737,14,0.103,15,0.237,18,0.139,19,0.006,20,0.397,21,0.167,34,0.079,44,0.425,53,0.013,54,0.013,55,0.013,56,0.013,91,1.508,106,1.356,379,0.788,419,0.935,421,0.989,422,1.282,485,1.659,487,0.691,496,2.957,497,3.774,510,3.022,513,2.992,1287,6.908,1481,6.106,1683,5.81,2839,6.286,2840,6.286,2841,6.286,2842,6.286,2843,6.286,2844,6.286,2845,6.286,2852,8.023,2853,8.023,3405,7.045,3406,7.045,3407,7.045,3408,7.045]],["title/classes/SourceExport.html",[0,0.341,637,2.809]],["body/classes/SourceExport.html",[0,0.68,2,0.361,3,0.052,4,0.045,5,0.052,7,0.263,9,1.032,11,0.807,12,0.708,13,1.788,14,0.081,15,0.25,18,0.118,19,0.006,20,0.439,21,0.15,24,0.204,34,0.089,37,0.583,38,0.793,44,0.456,53,0.01,54,0.01,55,0.01,56,0.01,91,1.72,94,1.535,103,1.151,166,1.51,171,0.389,342,1.393,372,1.358,379,0.708,412,2.228,419,1.067,421,1.118,422,1.449,433,1.043,444,1.11,461,1.828,476,1.387,480,1.938,485,1.876,487,0.596,501,1.244,538,1.162,564,1.614,573,1.393,575,1.727,576,1.286,584,1.462,585,3.003,588,1.926,589,2.085,590,1.757,593,2.03,606,4.28,607,3.399,608,3.282,609,4.28,610,3.399,611,1.162,612,5.048,615,2.648,616,2.648,617,4.28,618,2.648,619,2.11,620,2.069,621,1.886,622,1.788,623,2.069,624,2.069,625,2.069,626,1.992,627,1.992,628,3.077,629,1.852,630,4.141,631,4.141,632,4.28,633,3.282,634,4.141,635,3.399,636,3.282,637,4.763,638,3.282,639,4.28,640,2.104,641,4.28,642,3.399,643,3.399,644,2.069,645,3.399,646,3.175,647,3.399,648,3.399,996,2.599,3409,5.566,3410,5.566,3411,5.566]],["title/classes/SpinnerData.html",[0,0.341,3412,3.913]],["body/classes/SpinnerData.html",[0,0.558,2,0.403,3,0.059,4,0.051,5,0.059,7,0.294,11,0.867,14,0.091,15,0.22,18,0.114,19,0.006,20,0.376,21,0.145,24,0.313,26,1.662,29,2.035,34,0.059,37,0.5,44,0.389,50,3.406,53,0.011,54,0.011,55,0.011,56,0.011,59,2.407,65,5.113,69,3.159,74,2.613,80,6.41,81,6.165,84,1.438,93,6.645,102,2.613,103,1.613,106,1.173,111,6.542,114,1.909,115,2.901,130,4.112,136,2.553,251,1.416,297,4.783,332,2.315,419,0.867,424,2.36,487,0.641,611,1.248,649,3.139,674,3.341,675,3.159,697,1.899,826,1.746,841,5.991,858,4.3,1295,3.442,1362,5.991,1667,5.113,1683,4.3,1815,4.945,1875,5.113,2427,5.811,2443,4.598,2472,5.113,2815,5.113,3412,6.993,3413,5.555,3414,6.225,3415,6.225,3416,6.958,3417,7.963,3418,5.113,3419,5.555,3420,5.555,3421,5.555,3422,5.555,3423,5.555,3424,5.555,3425,5.555,3426,6.958,3427,5.555,3428,5.555,3429,5.555,3430,5.555,3431,5.555,3432,5.555,3433,5.555,3434,5.555]],["title/injectables/SpinnerService.html",[81,3.291,649,1.918]],["body/injectables/SpinnerService.html",[0,0.526,3,0.053,4,0.046,5,0.053,7,0.268,11,0.631,14,0.083,15,0.207,18,0.119,19,0.006,20,0.381,21,0.16,24,0.3,26,1.515,29,2.403,34,0.053,37,0.456,44,0.418,50,3.335,53,0.01,54,0.01,55,0.01,56,0.01,59,2.841,65,6.036,69,2.879,74,3.422,80,6.502,81,6.171,84,1.884,93,6.77,97,1.382,98,1.698,99,1.361,102,3.085,103,1.173,106,1.188,107,2.49,108,2.631,111,6.626,114,1.943,115,2.941,130,3.748,136,2.444,245,1.93,251,1.854,252,1.73,297,4.359,332,2.733,419,0.631,424,2.786,487,0.709,611,0.908,649,2.958,651,3.045,674,3.045,675,2.879,697,1.73,826,2.061,841,6.626,858,5.077,1295,4.064,1362,6.626,1667,6.036,1683,5.077,1815,5.469,1875,6.036,2427,5.59,2443,5.085,2472,6.036,2815,6.036,3412,7.083,3413,5.062,3416,7.695,3417,8.167,3418,6.036,3419,6.558,3420,6.558,3421,6.558,3422,6.558,3423,6.558,3424,6.558,3425,6.558,3426,7.275,3427,5.062,3428,6.558,3429,7.695,3430,5.062,3431,6.558,3432,5.062,3433,5.062,3434,5.062,3435,7.35,3436,5.673,3437,7.35,3438,5.673,3439,5.673]],["title/classes/StatisticItemDTO.html",[0,0.341,546,2.089]],["body/classes/StatisticItemDTO.html",[0,0.686,2,0.246,3,0.036,4,0.031,5,0.036,7,0.179,9,0.971,12,0.578,13,1.37,14,0.055,15,0.204,18,0.106,19,0.006,20,0.452,21,0.122,24,0.242,27,0.638,30,1.592,34,0.09,37,0.671,38,1.034,39,0.76,44,0.458,45,1.496,49,1.57,53,0.007,54,0.007,55,0.007,56,0.007,91,1.727,96,1.559,97,0.714,104,0.82,106,1.065,114,0.772,115,1.197,171,0.648,180,0.598,219,0.996,352,2.232,369,1.08,370,1.262,371,1.664,372,1.403,373,2.213,376,1.188,379,0.855,382,1.879,402,1.177,403,2.009,404,2.252,405,2.154,406,1.064,407,1.586,408,1.851,419,1.071,421,1.132,422,1.468,433,1.121,442,1.157,444,0.942,461,1.549,476,1.259,480,1.485,484,1.702,485,1.892,486,2.496,487,0.768,488,2.496,489,2.496,496,2.336,497,2.336,498,1.702,499,2.547,500,1.177,501,0.532,502,1.702,503,1.627,504,1.384,505,1.702,506,1.702,507,1.702,508,1.702,509,1.262,510,1.627,511,1.702,512,1.664,513,1.262,514,0.772,515,1.467,516,3.113,517,1.702,518,1.702,519,1.157,520,1.702,521,2.387,522,1.702,523,2.496,524,1.702,525,1.702,526,1.592,527,3.66,528,1.358,529,1.664,530,1.702,531,2.387,532,1.702,533,1.702,534,1.702,535,1.702,536,1.702,537,1.702,538,1.162,539,1.702,540,1.627,541,2.387,542,1.438,543,2.336,544,1.702,545,2.496,546,2.889,547,2.956,548,2.956,549,2.387,550,1.702,551,1.384,552,1.384,553,1.384,554,1.384,555,1.384,556,1.384,557,1.384,558,1.384,559,1.384,560,1.702,561,1.702,562,1.702,563,1.664,564,1.613,565,1.664,566,1.664,567,1.664,568,1.664,569,1.664,570,1.664,571,1.664,572,0.863,573,1.392,574,1.664,575,1.726,576,0.877,577,1.702,578,1.702,579,0.919,580,1.702,581,1.592,582,1.627,583,2.24,584,0.996,585,1.41,586,1.137,587,2.496,588,1.207,589,1.814,590,1.197,591,1.438,592,2.44,593,1.384,594,1.664,595,2.956,596,1.664,597,1.41,598,2.889,599,2.315,600,1.627,601,1.702,602,1.592,603,1.438,604,1.702,605,1.438,3440,3.794,3441,3.794,3442,3.794]],["title/injectables/StorageService.html",[649,1.918,818,3.661]],["body/injectables/StorageService.html",[0,0.477,3,0.063,4,0.054,5,0.063,7,0.315,9,1.017,14,0.097,15,0.229,18,0.119,19,0.006,21,0.17,24,0.245,26,1.779,34,0.063,44,0.445,53,0.012,54,0.012,55,0.012,56,0.012,59,3.144,69,3.381,84,1.539,93,5.617,97,1.253,98,1.539,99,1.233,102,3.413,137,2.658,138,4.71,177,2.2,251,1.515,252,2.032,376,1.736,487,0.751,621,2.755,649,3.273,651,3.575,674,3.575,697,2.032,802,2.545,818,6.248,820,3.273,821,4.364,826,2.563,858,5.617,1138,6.248,1242,6.248,1271,5.119,1295,4.496,1470,4.966,2498,6.679,2499,6.679,3443,6.662,3444,8.132,3445,8.132,3446,8.777,3447,6.662,3448,6.662,3449,7.256,3450,6.662,3451,6.662,3452,8.132,3453,6.662,3454,6.662,3455,6.662,3456,8.132]],["title/components/SubnetComponent.html",[57,0.97,207,1.879]],["body/components/SubnetComponent.html",[0,0.312,3,0.041,4,0.035,5,0.041,14,0.064,15,0.173,18,0.113,19,0.006,21,0.162,24,0.311,26,1.163,27,1.033,32,1.201,33,1.684,34,0.041,38,0.876,39,1.231,48,1.79,50,2.769,52,1.559,53,0.008,54,0.008,55,0.008,56,0.008,57,1.575,58,1.79,59,1.684,60,1.868,61,1.868,62,1.868,66,1.868,67,4.247,68,3.994,70,2.579,72,2.579,74,2.579,83,3.038,84,1.006,86,4.276,87,4.276,97,0.819,98,1.006,99,0.806,106,1.166,107,2.763,108,2.92,137,1.424,140,3.937,145,3.52,162,3.173,164,1.868,165,2.636,166,1.182,167,1.868,168,2.28,169,1.868,170,1.753,171,0.647,172,1.91,173,1.753,174,3.122,175,1.753,176,1.79,177,1.816,178,1.91,179,1.79,180,1.218,181,1.91,182,1.79,183,1.91,184,1.91,185,1.718,186,1.91,187,1.753,188,1.91,189,1.718,190,1.753,191,1.91,192,1.718,193,1.718,194,1.91,195,1.91,196,1.79,197,1.91,198,1.718,199,1.79,200,1.91,201,1.828,202,1.915,203,1.828,204,2.695,205,1.828,206,1.828,207,3.051,208,1.718,209,1.91,210,1.718,211,1.718,212,1.718,213,1.91,214,1.753,215,1.91,216,1.91,217,1.91,239,2.376,245,1.614,251,0.99,252,1.328,267,1.651,268,2.424,269,1.684,277,2.756,338,3.478,369,1.193,386,2.525,504,2.975,509,2.574,528,2.2,538,0.984,572,0.99,692,3.753,714,4.704,775,3.52,789,2.376,886,1.619,913,3.727,1009,2.424,1029,3.753,1066,2.66,1069,4.062,1070,2.877,1071,2.877,1073,2.762,1075,4.828,1077,3.614,1079,3.505,1080,2.877,1101,3.119,1143,3.505,1144,3.505,1177,2.568,1337,2.762,1338,2.762,1343,4.377,1344,2.568,1359,4.059,1398,2.66,1453,4.034,1470,3.753,1545,4.059,1559,3.205,1561,5.173,1562,4.905,1566,1.999,1567,2.408,1609,2.821,1733,6.174,1734,1.953,1960,3.753,2142,2.877,2144,4.059,2195,4.919,2196,5.847,2200,5.848,2201,4.919,2202,4.919,2203,4.919,2204,5.343,2205,3.008,2212,3.008,2213,3.008,2214,2.762,2215,3.008,2216,3.008,2217,4.245,2218,3.753,2225,3.623,2226,4.245,2227,4.245,2228,4.245,2229,4.245,2230,4.245,2231,4.245,2232,4.245,2233,4.245,2234,3.008,2235,3.008,2236,3.008,2237,2.484,2238,2.877,2239,3.008,2240,3.008,2241,3.008,2242,3.008,2243,3.008,2244,4.245,2245,4.245,2246,3.008,2247,3.008,2248,5.343,2249,2.762,2250,2.877,2251,2.877,2252,3.008,2253,3.623,2254,4.245,2255,4.245,2256,3.008,2257,5.847,2258,3.008,2259,2.568,2260,3.008,2261,3.008,2262,3.008,2372,6.503,2389,6.503,3457,4.355,3458,7.12,3459,6.145,3460,6.145,3461,4.355,3462,4.355,3463,4.355,3464,4.355,3465,4.355,3466,6.145,3467,8.464,3468,6.145,3469,6.145,3470,6.145]],["title/classes/SubnetDTO.html",[0,0.341,787,2.718]],["body/classes/SubnetDTO.html",[0,0.634,2,0.395,3,0.057,4,0.05,5,0.057,7,0.288,9,0.938,14,0.089,15,0.217,18,0.144,19,0.006,20,0.448,21,0.183,34,0.083,44,0.438,49,1.755,53,0.011,54,0.011,55,0.011,56,0.011,77,4.813,91,1.589,104,0.9,106,1.061,171,0.619,373,2.845,379,0.83,419,0.986,421,1.042,422,1.35,485,1.664,499,3.262,514,1.242,538,1.351,579,2.148,773,6.433,774,4.689,775,3.017,776,4.689,777,3.057,780,2.809,783,3.87,784,4.031,785,6.125,786,6.808,787,4.393,788,6.482,789,3.262,790,6.482,791,6.482,792,5.828,3471,6.103,3472,6.103,3473,6.103,3474,6.103,3475,6.103,3476,6.103,3477,6.103,3478,6.103,3479,6.103,3480,6.103,3481,6.103,3482,6.103]],["title/classes/SubnetExport.html",[0,0.341,994,2.137]],["body/classes/SubnetExport.html",[0,0.693,2,0.276,3,0.04,4,0.035,5,0.04,7,0.201,9,0.999,11,0.934,12,0.373,13,1.488,14,0.062,15,0.228,18,0.062,19,0.006,20,0.433,21,0.079,24,0.156,31,2.205,34,0.091,37,0.675,44,0.459,45,1.225,47,1.759,53,0.008,54,0.008,55,0.008,56,0.008,91,1.744,103,0.88,104,1.036,106,1.054,109,1.297,171,0.297,239,1.645,259,1.908,342,1.065,372,1.016,379,0.53,411,1.875,412,1.174,419,1.082,421,1.139,422,1.477,433,1.123,444,1.076,448,3.261,476,1.463,485,1.904,487,0.629,500,1.32,501,1.211,514,0.866,538,0.681,573,1.065,576,1.624,579,2.036,584,1.117,586,1.276,588,1.822,589,2.028,611,1.294,615,2.205,616,2.205,618,2.205,619,1.613,620,2.846,621,1.441,622,1.941,623,1.582,624,1.582,625,1.582,626,1.523,627,1.523,629,1.416,640,2.038,644,1.582,761,1.645,777,3.046,780,3.395,789,1.645,802,1.877,953,2.711,954,1.953,955,1.953,956,2.775,957,1.908,958,1.908,959,1.908,960,2.711,962,2.711,964,2.711,966,2.711,967,2.711,968,2.711,969,2.711,970,2.711,971,2.592,972,2.65,973,2.65,974,2.65,975,3.356,976,2.65,977,1.953,978,1.953,979,1.713,980,1.825,981,2.65,982,1.908,983,1.908,984,2.711,985,1.908,986,2.711,987,1.908,988,2.65,989,3.227,990,1.953,991,1.953,992,1.953,993,3.015,994,3.626,995,1.866,996,2.164,997,1.953,998,1.908,999,1.825,1000,3.356,1001,1.953,1002,1.748,1003,1.786,1004,2.775,1005,2.711,1006,1.367,1007,3.153,1008,3.433,1009,1.678,1010,1.866,1011,1.843,1012,2.711,1013,2.711,1014,2.711,1015,2.775,1016,2.65,1017,1.908,1018,1.908,1019,1.908,3483,4.254]],["title/classes/SubnetNode.html",[0,0.341,1625,3.459]],["body/classes/SubnetNode.html",[0,0.437,2,0.28,3,0.041,4,0.035,5,0.041,7,0.204,8,2.462,11,0.966,12,0.818,14,0.063,15,0.172,18,0.127,19,0.006,20,0.313,21,0.165,24,0.326,29,2.521,34,0.067,37,0.491,44,0.397,45,1.136,53,0.008,54,0.008,55,0.008,56,0.008,57,1.444,84,1.639,97,1.588,98,1.951,99,1.563,103,1.265,104,1.137,106,0.596,114,0.881,136,2.127,137,1.999,166,1.66,168,2.273,171,0.302,177,1.666,180,0.963,202,2.191,207,2.412,245,1.606,251,1.975,252,2.481,267,2.319,268,1.706,269,1.673,277,2.798,343,1.39,344,2.462,345,2.361,369,1.377,379,0.379,386,2.488,390,3.042,419,0.789,421,0.719,424,1.64,427,1.673,428,2.493,433,0.527,444,1.058,453,1.493,487,0.783,501,0.994,513,1.44,538,0.979,572,1.391,588,1.326,611,0.693,640,1.773,653,2.798,678,2.623,697,1.319,735,2.072,777,2.11,789,2.365,792,4.225,795,2.941,796,2.756,799,2.682,802,2.367,804,1.941,826,2.564,828,2.756,839,2.514,847,3.042,851,1.897,853,3.19,865,2.034,870,3.914,871,3.282,886,1.609,908,2.392,979,2.462,1006,3.119,1011,1.865,1036,2.196,1049,2.196,1114,1.64,1173,3.282,1249,2.034,1276,1.897,1279,3.19,1280,2.948,1388,4.138,1430,2.139,1444,2.642,1453,2.256,1578,3.19,1580,3.19,1608,3.104,1609,3.616,1615,4.699,1625,6.132,1670,3.7,1696,2.196,1715,5.023,1734,2.743,1817,3.282,1942,3.382,2273,3.922,2274,4.225,2275,4.225,2276,4.225,2277,4.225,2278,4.225,2279,4.225,2281,3.922,2282,3.382,2284,4.906,2285,4.263,2286,3.807,2287,4.263,2288,4.263,2289,3.382,2290,3.282,2291,3.382,2292,2.988,2294,2.988,2295,3.382,2297,2.988,2299,2.988,2300,3.382,2302,3.382,2303,3.382,2304,3.382,2305,3.382,2306,3.282,2307,3.282,2308,3.382,2309,3.382,2310,2.988,2311,4.225,2312,3.922,2313,3.922,2315,2.988,2316,2.988,2317,2.988,2318,2.988,2319,2.139,2320,2.139,2321,2.392,2323,3.735,2324,2.392,2325,2.322,2326,2.322,2327,2.322,2328,2.322,2329,2.322,2331,2.392,2332,2.392,2333,2.392,2334,2.392,2335,2.392,2336,3.382,2337,3.382,2338,2.392,2339,2.392,2340,2.392,2341,2.392,2342,2.392,3342,3.553,3347,3.86,3348,3.86,3484,6.116,3485,4.326,3486,4.326,3487,4.326,3488,4.326,3489,4.326,3490,4.326]],["title/classes/SubnetSimpleData.html",[0,0.341,976,2.089]],["body/classes/SubnetSimpleData.html",[0,0.693,2,0.273,3,0.04,4,0.034,5,0.04,7,0.199,9,0.997,11,0.932,12,0.37,13,1.479,14,0.062,15,0.227,18,0.102,19,0.006,20,0.432,21,0.13,24,0.155,31,1.539,34,0.091,37,0.708,44,0.459,45,1.221,47,1.751,53,0.008,54,0.008,55,0.008,56,0.008,91,1.742,103,0.872,104,0.885,106,1.05,109,1.286,171,0.295,239,1.631,259,1.892,342,1.055,372,1.01,379,0.527,411,1.864,412,1.163,419,1.081,421,1.138,422,1.475,433,1.121,444,1.074,448,3.256,476,1.601,485,1.902,487,0.626,500,1.309,501,1.235,514,0.859,538,0.675,573,1.055,576,1.617,579,2.03,584,1.108,586,1.265,588,1.869,589,2.068,611,1.221,615,2.191,616,2.191,618,2.191,619,1.599,620,2.835,621,1.429,622,1.929,623,1.568,624,1.568,625,1.568,626,1.51,627,1.51,629,1.404,640,1.741,644,1.568,761,1.631,777,2.889,780,3.389,789,1.631,802,2.035,953,2.694,954,1.936,955,1.936,956,2.758,957,1.892,958,1.892,959,1.892,960,2.694,962,2.694,964,2.694,966,2.694,967,2.694,968,2.694,969,2.694,970,3.138,971,2.577,972,2.634,973,2.634,974,2.634,975,3.343,976,3.068,977,1.936,978,1.936,979,1.698,980,1.809,981,2.634,982,1.892,983,1.892,984,2.694,985,1.892,986,2.694,987,1.892,988,2.634,989,3.212,990,1.936,991,1.936,992,1.936,993,3.001,994,3.42,995,1.85,996,2.15,997,1.936,998,1.892,999,1.809,1000,3.068,1001,1.936,1002,1.733,1003,1.77,1004,1.936,1005,1.892,1006,1.355,1007,3.614,1008,3.614,1009,1.664,1010,1.85,1011,2.134,1012,2.694,1013,2.694,1014,2.694,1015,2.758,1016,3.068,1017,1.892,1018,1.892,1019,1.892,3491,4.218,3492,4.218,3493,4.218]],["title/components/TabnavComponent.html",[57,0.97,208,1.879]],["body/components/TabnavComponent.html",[0,0.317,3,0.042,4,0.036,5,0.042,7,0.209,8,3.136,9,0.691,11,0.691,12,0.683,14,0.065,15,0.175,18,0.128,19,0.006,20,0.414,21,0.166,24,0.228,26,1.182,27,1.045,32,2.264,33,1.712,34,0.042,37,0.659,38,0.886,39,1.246,41,2.777,44,0.428,47,1.95,48,1.819,50,2.225,52,1.585,53,0.008,54,0.008,55,0.008,56,0.008,57,1.266,58,1.819,59,1.712,60,1.899,61,1.899,62,1.899,66,1.899,67,4.268,68,4.027,70,2.609,72,2.609,74,3.572,83,3.551,84,1.023,86,3.972,87,4.307,91,1.115,97,1.169,98,1.436,99,1.151,102,3.856,103,1.286,104,1.148,106,0.99,107,1.5,108,1.585,109,1.35,128,5.382,136,1.864,140,2.448,154,3.214,161,3.058,162,2.268,163,4.513,164,1.899,165,2.666,166,1.201,167,1.899,168,2.297,169,1.899,170,1.782,171,0.633,172,1.941,173,1.782,174,3.15,175,1.782,176,1.819,177,2.094,178,1.941,179,1.819,180,1.488,181,1.941,182,1.819,183,1.941,184,1.941,185,1.746,186,1.941,187,1.782,188,1.941,189,1.746,190,1.782,191,1.941,192,1.746,193,1.746,194,1.941,195,1.941,196,1.819,197,1.941,198,1.746,199,1.819,200,1.941,201,1.858,202,1.829,203,1.858,204,2.726,205,1.858,206,1.858,207,1.746,208,3.356,209,1.941,210,1.746,211,1.746,212,1.746,213,1.941,214,1.782,215,1.941,216,1.941,217,1.941,245,1.633,251,1.414,252,2.191,338,2.952,343,1.422,344,2.502,376,1.327,444,0.758,454,3.342,501,0.871,504,1.615,509,2.069,514,1.586,526,2.609,597,2.311,611,0.995,675,2.247,804,1.986,805,4.556,808,5.106,817,4.758,820,2.502,826,2.185,828,2.106,847,3.073,848,4.513,851,2.726,855,4.107,907,6.399,1064,4.098,1068,3.401,1069,4.098,1075,3.546,1077,2.247,1134,4.776,1152,3.214,1164,3.942,1197,4.776,1280,2.996,1337,3.942,1338,3.942,1344,2.61,1398,2.704,1405,3.95,1406,5.106,1408,3.214,1558,3.797,1559,2.309,1566,3.298,1960,2.704,2052,5.106,2071,5.547,2088,5.547,2173,3.636,2214,4.941,2250,2.925,2421,4.776,2431,4.776,2443,3.665,2789,6.41,2795,5.547,2825,7.529,2826,3.95,2827,3.95,2829,3.95,2837,3.95,2838,3.95,3494,4.427,3495,6.216,3496,6.216,3497,7.184,3498,6.216,3499,8.206,3500,7.184,3501,6.216,3502,4.427,3503,5.986,3504,4.427,3505,6.216,3506,4.427,3507,6.216,3508,4.427,3509,4.427,3510,6.951,3511,6.216,3512,6.216,3513,4.427,3514,4.427,3515,4.427,3516,4.427,3517,4.427,3518,4.427,3519,6.216,3520,4.427]],["title/classes/TabnavElement.html",[0,0.341,3503,3.661]],["body/classes/TabnavElement.html",[0,0.611,2,0.469,3,0.068,4,0.059,5,0.068,7,0.342,8,2.913,14,0.106,15,0.241,18,0.106,19,0.006,20,0.377,21,0.134,24,0.266,25,4.875,26,1.932,27,1.529,29,2.793,32,2.357,34,0.08,41,3.516,44,0.331,49,1.361,50,2.59,52,2.59,53,0.013,54,0.013,55,0.013,56,0.013,180,1.346,208,3.781,454,3.665,611,1.456,828,2.451,1597,6.565,2825,5.559,3503,6.565,3521,6.456,3522,7.469,3523,7.236,3524,6.456]],["title/classes/TabnavItem.html",[0,0.341,3522,3.913]],["body/classes/TabnavItem.html",[0,0.605,2,0.461,3,0.067,4,0.058,5,0.067,7,0.336,8,3.407,14,0.104,15,0.238,18,0.132,19,0.006,20,0.413,21,0.168,24,0.262,25,5.153,26,1.901,27,1.519,29,2.328,32,1.964,34,0.08,41,2.753,44,0.387,49,1.699,50,3.233,52,3.233,53,0.013,54,0.013,55,0.013,56,0.013,180,1.122,208,3.686,454,3.055,611,1.446,828,2.868,1597,5.472,2825,6.504,3503,5.472,3521,6.355,3522,7.419,3524,7.553,3525,7.122,3526,7.122,3527,7.122]],["title/classes/TagCatalogueDTO.html",[0,0.341,747,2.91]],["body/classes/TagCatalogueDTO.html",[0,0.669,2,0.374,3,0.054,4,0.047,5,0.054,7,0.273,12,0.788,14,0.084,15,0.209,18,0.12,19,0.006,20,0.45,21,0.153,24,0.212,27,0.972,34,0.088,44,0.454,45,1.439,49,1.69,53,0.011,54,0.011,55,0.011,56,0.011,91,1.699,98,1.719,106,0.796,114,1.177,115,1.824,171,0.628,342,1.446,372,1.511,373,1.762,379,0.788,382,1.648,406,1.621,407,1.648,419,1.054,421,1.114,422,1.444,430,2.375,433,0.907,461,1.854,485,1.846,487,0.769,501,0.81,514,1.177,515,2.876,538,0.925,542,2.191,551,2.108,552,2.108,553,2.108,554,2.108,555,2.108,556,2.108,557,2.108,558,2.108,559,2.108,564,1.675,575,1.793,589,1.357,603,2.191,605,2.191,629,1.923,739,4.543,740,3.818,746,4.543,747,5.023,748,4.543,749,3.818,750,3.818,751,3.665,752,3.818,753,3.665,754,3.818,755,3.818,756,3.818,757,4.914,758,4.717,759,3.818,760,3.818,761,2.234,762,3.818,763,3.818,764,4.543,765,3.818,766,3.818,767,3.665,768,3.665,769,3.665,770,3.818,771,3.818,772,3.665,3528,5.779,3529,5.779,3530,5.779]],["title/classes/TagTIP.html",[0,0.341,592,2.089]],["body/classes/TagTIP.html",[0,0.687,2,0.25,3,0.036,4,0.031,5,0.036,7,0.182,9,0.956,12,0.583,13,1.915,14,0.056,15,0.206,18,0.082,19,0.006,20,0.452,21,0.072,24,0.244,27,0.647,30,1.616,34,0.09,37,0.674,38,1.042,39,0.772,44,0.458,45,1.499,49,1.577,53,0.007,54,0.007,55,0.007,56,0.007,91,1.73,96,1.583,97,0.724,104,0.829,106,1.071,114,0.784,115,1.215,171,0.649,180,0.607,219,1.011,352,1.305,369,1.092,370,1.281,371,1.689,372,1.41,373,2.229,376,1.201,379,0.849,382,1.895,402,1.195,403,2.027,404,2.268,405,2.173,406,1.08,407,1.604,408,1.872,419,1.073,421,1.134,422,1.47,433,1.113,442,1.174,444,0.948,461,1.56,476,1.27,480,1.502,484,1.727,485,1.896,486,2.523,487,0.764,488,2.523,489,2.523,496,2.361,497,2.361,498,1.727,499,2.569,500,1.195,501,0.54,502,1.727,503,1.652,504,1.405,505,1.727,506,1.727,507,1.727,508,1.727,509,1.281,510,1.652,511,1.727,512,1.689,513,1.281,514,0.784,515,1.489,516,3.135,517,1.727,518,1.727,519,1.174,520,1.727,521,2.413,522,1.727,523,2.523,524,1.727,525,1.727,526,1.616,527,3.677,528,1.378,529,1.689,530,1.727,531,2.413,532,1.727,533,1.727,534,1.727,535,1.727,536,1.727,537,1.727,538,1.17,539,1.727,540,1.652,541,2.413,542,1.46,543,2.361,544,1.727,545,1.727,546,2.467,547,1.727,548,1.727,549,2.413,550,1.727,551,1.405,552,1.405,553,1.405,554,1.405,555,1.405,556,1.405,557,1.405,558,1.405,559,1.405,560,1.727,561,1.727,562,1.727,563,1.689,564,1.631,565,1.689,566,1.689,567,1.689,568,1.689,569,1.689,570,1.689,571,1.689,572,0.876,573,1.408,574,1.689,575,1.745,576,0.89,577,1.727,578,1.727,579,0.933,580,1.727,581,1.616,582,1.652,583,2.264,584,1.011,585,1.432,586,1.155,587,2.523,588,1.22,589,1.825,590,1.215,591,1.46,592,2.914,593,1.405,594,1.689,595,2.981,596,1.689,597,1.432,598,2.914,599,2.335,600,1.652,601,1.727,602,1.616,603,1.46,604,1.727,605,1.46,3531,3.851]],["title/classes/TagsExport.html",[0,0.341,632,2.809]],["body/classes/TagsExport.html",[0,0.682,2,0.366,3,0.053,4,0.046,5,0.053,7,0.267,9,1.017,11,0.815,12,0.713,13,2.197,14,0.082,15,0.257,18,0.082,19,0.006,20,0.438,21,0.105,24,0.208,34,0.09,37,0.589,38,0.805,44,0.456,53,0.01,54,0.01,55,0.01,56,0.01,91,1.725,94,1.559,103,1.169,166,1.534,171,0.395,342,1.414,372,1.368,379,0.713,412,1.559,419,1.07,421,1.121,422,1.453,433,0.992,444,1.114,461,1.905,476,1.401,480,1.957,485,1.881,487,0.464,501,1.207,538,1.174,564,1.638,573,1.414,575,1.753,576,1.306,584,1.484,585,2.101,588,1.868,589,2.022,590,1.784,593,2.062,606,4.323,607,3.452,608,3.332,609,4.798,610,3.452,611,1.303,612,5.261,615,2.674,616,2.674,617,4.323,618,2.674,619,2.142,620,2.101,621,1.915,622,1.815,623,2.101,624,2.101,625,2.101,626,2.023,627,2.023,628,3.125,629,1.881,630,4.182,631,4.182,632,4.798,633,3.332,634,4.182,635,3.452,636,3.332,637,4.323,638,3.332,639,4.323,640,1.638,641,3.332,642,3.452,643,3.452,644,2.101,645,3.452,646,3.224,647,3.452,648,3.452,3532,5.651]],["title/classes/TheaterApplication.html",[0,0.341,445,2]],["body/classes/TheaterApplication.html",[0,0.649,2,0.271,3,0.039,4,0.034,5,0.039,9,0.664,11,0.929,12,0.523,14,0.061,15,0.168,18,0.144,19,0.006,20,0.438,21,0.183,24,0.333,34,0.089,37,0.48,38,0.851,39,1.522,44,0.347,46,1.617,49,1.123,53,0.008,54,0.008,55,0.008,56,0.008,94,1.154,99,1.105,103,1.235,106,0.576,107,1.417,108,1.497,116,2.678,127,1.32,162,2.178,171,0.486,177,1.783,202,1.635,219,1.829,277,2.591,286,3.442,342,1.046,343,2.58,345,1.392,367,2.122,368,2.181,369,1.762,370,1.987,372,1.004,373,1.821,375,4.457,376,2.079,379,0.805,382,2.793,385,2.561,386,2.304,387,2.015,388,2.561,389,2.015,390,2.355,391,2.015,392,3.197,393,2.181,394,3.197,395,2.181,396,3.197,397,2.181,398,2.807,399,2.067,400,3.257,401,1.966,402,2.356,403,1.275,404,1.852,405,2.276,406,1.674,407,1.702,408,1.987,409,1.92,410,2.067,411,2.356,412,1.921,413,3.356,414,2.923,415,2.923,416,2.923,417,4.486,418,4.129,419,0.664,420,2.561,421,0.702,422,0.91,423,3.03,424,2.263,425,3.114,426,3.114,427,2.308,428,2.098,429,3.114,430,2.454,431,3.197,432,2.181,433,0.51,434,1.755,435,2.181,436,2.181,437,1.876,438,2.181,439,3.114,440,2.678,441,3.114,442,1.821,443,2.618,444,0.849,445,3.188,446,3.961,447,2.181,448,1.443,449,2.181,450,1.966,451,1.834,452,1.834,453,1.443,454,1.794,455,2.181,456,2.181,457,1.966,458,2.877,459,2.122,460,1.92,461,0.893,462,2.807,463,3.927,464,2.015,465,2.015,466,3.03,467,3.854,468,4.025,469,3.582,470,3.114,471,3.632,472,3.534,473,3.123,474,2.015,475,4.239,476,1.331,477,2.122,478,1.966,479,2.015,538,0.956,551,2.178,552,2.178,553,2.178,554,2.178,555,2.178,556,2.178,557,2.178,558,2.178,559,2.178,564,1.731,575,1.852,739,2.554,743,2.355,747,2.554,748,2.554,764,2.554,767,3.786,768,3.786,769,3.786,772,3.786,804,1.876,3533,4.182,3534,4.182,3535,4.182,3536,4.182,3537,4.182,3538,4.182,3539,4.182,3540,4.182,3541,4.182,3542,4.182,3543,4.182,3544,4.182,3545,4.182,3546,4.182,3547,4.182,3548,4.182,3549,4.182,3550,4.182,3551,4.182,3552,4.182,3553,4.182,3554,4.182,3555,4.182,3556,4.182,3557,4.182]],["title/classes/TheaterDTO.html",[0,0.341,382,1.358]],["body/classes/TheaterDTO.html",[0,0.652,2,0.336,3,0.049,4,0.042,5,0.049,7,0.245,12,0.761,14,0.076,15,0.195,18,0.145,19,0.006,20,0.451,21,0.184,24,0.19,27,0.871,34,0.086,37,0.417,44,0.448,45,1.333,49,1.632,53,0.01,54,0.01,55,0.01,56,0.01,91,1.66,98,1.6,106,0.954,114,1.055,115,1.636,171,0.606,342,1.297,372,1.459,373,2.379,379,0.782,382,1.975,406,1.454,407,1.478,419,1.03,421,1.089,422,1.411,430,2.13,433,0.844,461,1.665,485,1.798,487,0.713,501,0.726,514,1.055,515,2.004,538,1.249,542,1.965,551,2.845,552,2.845,553,2.845,554,2.845,555,2.845,556,2.845,557,2.845,558,2.845,559,2.845,564,2.261,575,2.42,589,1.217,603,1.965,605,1.965,629,1.725,739,4.764,740,3.424,743,2.045,746,3.166,747,4.764,748,4.764,749,3.424,750,3.424,751,3.287,752,3.424,753,3.287,754,3.424,755,3.424,756,3.424,757,4.575,758,4.392,759,3.424,760,3.424,761,2.004,762,3.424,763,3.424,764,4.764,765,3.424,766,4.575,767,4.947,768,4.947,769,4.947,770,3.424,771,3.424,772,4.947,3558,5.184,3559,5.184,3560,5.184,3561,5.184,3562,5.184,3563,5.184,3564,5.184,3565,5.184,3566,5.184,3567,5.184,3568,5.184,3569,5.184,3570,5.184,3571,5.184,3572,5.184,3573,5.184,3574,5.184,3575,5.184,3576,5.184,3577,5.184]],["title/classes/TheaterExport.html",[0,0.341,628,2.634]],["body/classes/TheaterExport.html",[0,0.679,2,0.358,3,0.052,4,0.045,5,0.052,7,0.261,9,1.029,11,0.949,12,0.748,13,1.778,14,0.081,15,0.249,18,0.125,19,0.006,20,0.438,21,0.158,24,0.203,34,0.089,37,0.646,38,0.787,44,0.454,53,0.01,54,0.01,55,0.01,56,0.01,91,1.718,94,1.522,103,1.493,166,1.498,171,0.386,342,2.013,372,1.489,379,0.705,412,1.522,419,1.065,421,1.104,422,1.431,433,0.981,444,1.079,461,1.891,476,1.379,480,1.927,485,1.852,487,0.453,501,1.196,538,1.156,564,1.6,573,1.381,575,1.712,576,1.275,584,1.45,585,2.052,588,1.851,589,2.133,590,1.742,593,2.013,606,4.257,607,3.371,608,3.254,609,4.257,610,3.371,611,1.156,612,5.032,615,2.633,616,2.633,617,4.257,618,2.935,619,2.092,620,2.684,621,2.446,622,2.319,623,2.684,624,2.684,625,2.684,626,2.584,627,2.584,628,3.991,629,2.677,630,4.118,631,4.118,632,4.257,633,3.254,634,4.118,635,3.371,636,3.254,637,4.257,638,3.254,639,4.257,640,1.6,641,3.254,642,3.371,643,3.371,644,2.052,645,3.371,646,3.148,647,3.371,648,3.371,743,2.177,3578,5.519,3579,5.519,3580,5.519,3581,5.519]],["title/classes/TheaterInstanceDTO.html",[0,0.341,605,1.806]],["body/classes/TheaterInstanceDTO.html",[0,0.687,2,0.247,3,0.036,4,0.031,5,0.036,7,0.18,9,0.973,12,0.58,13,1.377,14,0.056,15,0.205,18,0.097,19,0.006,20,0.452,21,0.104,24,0.243,27,0.642,30,1.603,34,0.09,37,0.703,38,1.038,39,0.765,44,0.458,45,1.497,49,1.573,53,0.007,54,0.007,55,0.007,56,0.007,91,1.728,96,1.569,97,0.718,104,0.824,106,1.067,114,0.777,115,1.205,171,0.649,180,0.601,219,1.003,352,1.294,369,1.085,370,1.271,371,1.674,372,1.406,373,2.22,376,1.193,379,0.848,382,1.886,402,1.185,403,2.017,404,2.259,405,2.38,406,1.071,407,1.594,408,1.86,419,1.072,421,1.133,422,1.469,433,1.122,442,1.164,444,0.944,461,1.554,476,1.481,480,1.492,484,1.713,485,1.894,486,2.508,487,0.768,488,2.508,489,2.508,496,2.347,497,2.347,498,1.713,499,2.557,500,1.185,501,0.535,502,1.713,503,1.638,504,1.393,505,1.713,506,1.713,507,1.713,508,1.713,509,1.271,510,1.638,511,1.713,512,1.674,513,1.271,514,0.777,515,1.476,516,3.123,517,1.713,518,1.713,519,1.164,520,1.713,521,2.398,522,1.713,523,2.508,524,1.713,525,1.713,526,1.603,527,3.667,528,1.367,529,1.674,530,1.713,531,2.398,532,1.713,533,1.713,534,1.713,535,1.713,536,1.713,537,1.713,538,1.166,539,1.713,540,1.638,541,2.398,542,1.447,543,2.347,544,1.713,545,1.713,546,2.451,547,1.713,548,1.713,549,2.398,550,1.713,551,1.393,552,1.393,553,1.393,554,1.393,555,1.393,556,1.393,557,1.393,558,1.393,559,1.393,560,1.713,561,1.713,562,1.713,563,1.674,564,1.621,565,1.674,566,1.674,567,1.674,568,1.674,569,1.674,570,1.674,571,1.674,572,0.868,573,1.399,574,1.674,575,1.734,576,0.882,577,1.713,578,1.713,579,0.925,580,1.713,581,1.603,582,1.638,583,2.25,584,1.003,585,1.42,586,1.145,587,2.508,588,1.212,589,1.9,590,1.205,591,1.447,592,2.451,593,1.393,594,1.674,595,3.265,596,1.674,597,1.42,598,3.192,599,2.558,600,1.638,601,1.713,602,1.603,603,1.447,604,1.713,605,2.119,3582,3.818,3583,3.818]],["title/classes/TheaterInstancePropertiesDTO.html",[0,0.341,405,1.558]],["body/classes/TheaterInstancePropertiesDTO.html",[0,0.685,2,0.243,3,0.035,4,0.03,5,0.035,7,0.177,9,0.968,12,0.573,13,1.357,14,0.055,15,0.216,18,0.121,19,0.006,20,0.452,21,0.149,24,0.24,27,0.629,30,1.571,34,0.09,37,0.668,38,1.028,39,0.75,44,0.458,45,1.492,49,1.563,53,0.007,54,0.007,55,0.007,56,0.007,91,1.724,96,1.538,97,0.704,104,0.812,106,1.059,114,0.762,115,1.181,171,0.646,180,0.59,219,0.983,352,1.268,369,1.07,370,1.246,371,1.641,372,1.463,373,2.199,376,1.176,379,0.849,382,1.864,402,1.161,403,1.994,404,2.237,405,2.357,406,1.05,407,1.571,408,2.175,419,1.069,421,1.13,422,1.465,433,1.107,442,1.142,444,0.98,461,1.641,476,1.249,480,1.471,484,1.679,485,1.889,486,2.471,487,0.766,488,2.471,489,2.471,496,2.313,497,2.313,498,1.679,499,2.528,500,1.161,501,0.524,502,1.679,503,1.605,504,1.365,505,1.679,506,1.679,507,1.679,508,1.679,509,1.246,510,1.605,511,1.679,512,1.641,513,1.246,514,0.762,515,1.447,516,3.093,517,1.679,518,1.679,519,1.142,520,1.679,521,2.363,522,1.679,523,2.471,524,1.679,525,1.679,526,1.571,527,3.644,528,1.34,529,1.641,530,1.679,531,2.363,532,1.679,533,1.679,534,1.679,535,1.679,536,1.679,537,1.679,538,1.287,539,1.679,540,1.605,541,2.363,542,1.419,543,2.313,544,1.679,545,1.679,546,2.416,547,1.679,548,1.679,549,2.363,550,1.679,551,1.365,552,1.365,553,1.365,554,1.365,555,1.365,556,1.365,557,1.365,558,1.365,559,1.365,560,1.679,561,1.679,562,1.679,563,1.641,564,2.09,565,1.641,566,1.641,567,1.641,568,1.641,569,1.641,570,1.641,571,1.641,572,0.851,573,1.804,574,1.641,575,2.237,576,0.865,577,1.679,578,1.679,579,0.907,580,1.679,581,1.571,582,1.605,583,2.218,584,0.983,585,1.392,586,1.122,587,2.933,588,1.418,589,1.887,590,1.181,591,1.419,592,2.867,593,2.385,594,1.641,595,2.933,596,1.641,597,1.392,598,2.867,599,2.297,600,1.605,601,1.679,602,1.571,603,1.419,604,1.679,605,1.419,3584,3.743,3585,3.743,3586,3.743,3587,3.743,3588,3.743,3589,3.743]],["title/components/TheaterInternalServiceModuleInstanceComponent.html",[57,0.97,210,1.879]],["body/components/TheaterInternalServiceModuleInstanceComponent.html",[0,0.298,3,0.039,4,0.034,5,0.039,14,0.061,15,0.168,18,0.111,19,0.006,21,0.17,24,0.306,26,1.111,27,1,32,1.148,33,1.609,34,0.039,38,0.848,39,1.192,48,1.71,50,2.712,52,1.49,53,0.008,54,0.008,55,0.008,56,0.008,57,1.543,58,1.71,59,1.609,60,1.785,61,1.785,62,1.785,66,1.785,67,4.23,68,3.972,70,2.497,72,2.497,74,2.497,83,2.941,84,0.961,86,4.189,87,4.189,97,0.783,98,0.961,99,0.77,106,1.149,107,3.027,108,3.199,137,1.36,140,3.839,145,3.433,162,3.131,164,1.785,165,2.552,166,1.129,167,1.785,168,2.234,169,1.785,170,1.675,171,0.641,172,1.825,173,1.675,174,3.045,175,1.675,176,1.71,177,1.779,178,1.825,179,1.71,180,1.193,181,1.825,182,1.71,183,1.825,184,1.825,185,1.641,186,1.825,187,1.675,188,1.825,189,1.641,190,1.675,191,1.825,192,1.641,193,1.641,194,1.825,195,1.825,196,1.71,197,1.825,198,1.641,199,1.71,200,1.825,201,1.747,202,1.882,203,1.747,204,2.609,205,1.747,206,1.747,207,1.641,208,1.641,209,1.825,210,2.989,211,1.641,212,1.641,213,1.825,214,1.675,215,1.825,216,1.825,217,1.825,239,2.3,245,1.563,251,0.946,252,1.269,267,1.577,268,2.347,269,1.609,277,2.875,338,3.608,369,1.155,386,2.598,480,1.588,504,2.924,509,2.521,528,2.13,538,0.953,572,0.946,692,3.634,714,4.587,735,2.825,775,3.433,886,1.547,913,2.867,1009,2.347,1029,3.634,1066,2.541,1069,3.961,1070,2.749,1071,2.749,1073,2.639,1075,4.757,1077,3.524,1079,3.394,1080,2.749,1101,3.019,1143,3.394,1144,3.394,1177,2.454,1337,2.639,1338,2.639,1343,4.302,1344,2.454,1359,3.93,1398,2.541,1458,4.066,1470,3.634,1545,3.93,1559,3.103,1561,5.084,1562,4.806,1566,1.91,1567,2.301,1609,2.764,1733,6.123,1734,1.866,1821,5.041,1960,3.634,2142,2.749,2144,3.93,2195,4.797,2196,5.76,2199,5.822,2201,4.797,2202,4.797,2203,4.797,2204,5.234,2205,2.874,2212,2.874,2213,2.874,2214,2.639,2215,2.874,2216,2.874,2217,4.11,2218,3.634,2225,3.508,2226,4.11,2227,4.11,2228,4.11,2229,4.11,2230,4.11,2231,4.11,2232,4.11,2233,4.11,2234,2.874,2235,2.874,2236,2.874,2237,2.374,2238,2.749,2239,2.874,2240,2.874,2241,2.874,2242,2.874,2243,2.874,2244,4.11,2245,4.11,2246,2.874,2247,2.874,2248,5.234,2249,2.639,2250,2.749,2251,2.749,2252,2.874,2253,3.508,2254,4.11,2255,4.11,2256,2.874,2257,5.76,2258,2.874,2259,2.454,2260,2.874,2261,2.874,2262,2.874,2370,5.822,2371,5.703,2372,5.822,2384,3.418,2385,3.418,2386,3.418,2388,6.848,2389,6.406,2390,4.886,2391,4.886,2392,6.223,2393,6.223,2394,6.223,3590,4.161,3591,6.944,3592,5.949,3593,6.944,3594,5.949,3595,4.161,3596,4.161,3597,4.161,3598,4.161,3599,4.161,3600,4.161,3601,4.161,3602,4.161,3603,6.944,3604,4.161,3605,5.949]],["title/classes/TheaterInternalServiceModuleInstanceNode.html",[0,0.341,1593,3.459]],["body/classes/TheaterInternalServiceModuleInstanceNode.html",[0,0.436,2,0.279,3,0.04,4,0.035,5,0.04,7,0.203,8,2.452,11,0.964,12,0.817,14,0.063,15,0.172,18,0.131,19,0.006,21,0.164,24,0.325,29,2.514,34,0.066,37,0.489,38,0.613,44,0.396,45,1.132,53,0.008,54,0.008,55,0.008,56,0.008,57,1.44,84,1.634,97,1.585,98,1.948,99,1.56,103,1.26,104,1.134,114,0.876,136,2.12,137,1.991,166,1.653,168,2.267,171,0.3,177,1.66,180,0.959,202,2.189,210,2.402,245,1.6,251,1.971,252,2.476,267,2.309,268,1.696,269,1.663,277,2.794,343,1.381,344,2.452,345,2.353,369,1.373,372,0.723,386,2.484,394,3.531,414,1.805,415,1.805,416,1.805,419,0.787,421,0.716,424,1.63,427,1.663,428,2.485,433,0.862,444,1.056,453,1.484,480,1.148,487,0.783,501,0.991,513,1.431,538,0.689,572,1.385,588,1.321,590,1.358,591,1.63,611,0.689,640,1.766,653,2.789,678,2.613,697,1.312,735,2.75,795,2.936,796,2.75,799,2.671,802,2.364,804,1.929,826,2.56,828,2.75,839,2.503,847,3.034,851,1.886,853,3.177,865,2.022,870,3.903,871,3.269,886,1.599,908,2.378,979,2.452,1006,3.092,1011,1.858,1036,2.183,1049,2.183,1114,1.63,1173,3.269,1249,2.022,1276,1.886,1279,3.177,1280,2.935,1388,4.128,1430,2.126,1444,2.627,1458,2.308,1462,4.422,1578,3.177,1580,3.177,1583,4.68,1593,6.12,1608,3.091,1609,3.638,1670,3.689,1696,2.183,1734,2.732,1817,3.269,1942,3.368,2273,3.91,2274,4.207,2275,4.207,2276,4.207,2277,4.207,2278,4.207,2279,4.207,2281,3.91,2282,3.368,2284,4.9,2285,4.252,2286,3.795,2287,4.252,2288,4.252,2289,3.368,2290,3.269,2291,3.368,2292,2.971,2294,2.971,2295,3.368,2297,2.971,2299,2.971,2300,3.368,2302,3.368,2303,3.368,2304,3.368,2305,3.368,2306,3.269,2307,3.269,2308,3.368,2309,3.368,2310,2.971,2311,4.207,2312,3.91,2313,3.91,2315,2.971,2316,2.971,2317,2.971,2318,2.971,2319,2.126,2320,2.126,2321,2.378,2324,2.378,2325,3.795,2326,2.308,2327,2.308,2328,2.308,2329,2.308,2331,2.378,2332,2.378,2333,2.378,2334,2.378,2335,2.378,2336,3.368,2337,3.368,2338,2.378,2339,2.378,2340,2.378,2341,2.378,2342,2.378,3357,3.532,3358,5.435,3359,3.838,3360,3.838,3606,6.091,3607,4.301,3608,4.301,3609,4.301,3610,4.301,3611,4.301,3612,4.301]],["title/components/TheaterModuleInstanceComponent.html",[57,0.97,211,1.879]],["body/components/TheaterModuleInstanceComponent.html",[0,0.298,3,0.039,4,0.034,5,0.039,14,0.061,15,0.168,18,0.111,19,0.006,21,0.17,24,0.306,26,1.111,27,1,32,1.148,33,1.609,34,0.039,38,0.848,39,1.192,48,1.71,50,2.712,52,1.49,53,0.008,54,0.008,55,0.008,56,0.008,57,1.543,58,1.71,59,1.609,60,1.785,61,1.785,62,1.785,66,1.785,67,4.23,68,3.972,70,2.497,72,2.497,74,2.497,83,2.941,84,0.961,86,4.189,87,4.189,97,0.783,98,0.961,99,0.77,106,1.149,107,3.027,108,3.199,137,1.36,140,3.839,145,3.433,162,3.131,164,1.785,165,2.552,166,1.129,167,1.785,168,2.234,169,1.785,170,1.675,171,0.641,172,1.825,173,1.675,174,3.045,175,1.675,176,1.71,177,1.779,178,1.825,179,1.71,180,1.193,181,1.825,182,1.71,183,1.825,184,1.825,185,1.641,186,1.825,187,1.675,188,1.825,189,1.641,190,1.675,191,1.825,192,1.641,193,1.641,194,1.825,195,1.825,196,1.71,197,1.825,198,1.641,199,1.71,200,1.825,201,1.747,202,1.882,203,1.747,204,2.609,205,1.747,206,1.747,207,1.641,208,1.641,209,1.825,210,1.641,211,2.989,212,1.641,213,1.825,214,1.675,215,1.825,216,1.825,217,1.825,239,2.3,245,1.563,251,0.946,252,1.269,267,1.577,268,2.347,269,1.609,277,2.875,338,3.608,369,1.155,386,2.598,480,1.588,504,2.924,509,2.521,528,2.13,538,0.953,572,0.946,692,3.634,714,4.587,735,2.825,775,3.433,886,1.547,913,2.867,1009,2.347,1029,3.634,1066,2.541,1069,3.961,1070,2.749,1071,2.749,1073,2.639,1075,4.757,1077,3.524,1079,3.394,1080,2.749,1101,3.019,1143,3.394,1144,3.394,1177,2.454,1337,2.639,1338,2.639,1343,4.302,1344,2.454,1359,3.93,1398,2.541,1458,4.066,1470,3.634,1545,3.93,1559,3.103,1561,5.084,1562,4.806,1566,1.91,1567,2.301,1609,2.764,1733,6.123,1734,1.866,1821,5.041,1960,3.634,2142,2.749,2144,3.93,2195,4.797,2196,5.76,2199,5.822,2201,4.797,2202,4.797,2203,4.797,2204,5.234,2205,2.874,2212,2.874,2213,2.874,2214,2.639,2215,2.874,2216,2.874,2217,4.11,2218,3.634,2225,3.508,2226,4.11,2227,4.11,2228,4.11,2229,4.11,2230,4.11,2231,4.11,2232,4.11,2233,4.11,2234,2.874,2235,2.874,2236,2.874,2237,2.374,2238,2.749,2239,2.874,2240,2.874,2241,2.874,2242,2.874,2243,2.874,2244,4.11,2245,4.11,2246,2.874,2247,2.874,2248,5.234,2249,2.639,2250,2.749,2251,2.749,2252,2.874,2253,3.508,2254,4.11,2255,4.11,2256,2.874,2257,5.76,2258,2.874,2259,2.454,2260,2.874,2261,2.874,2262,2.874,2370,5.822,2371,5.703,2372,5.822,2384,3.418,2385,3.418,2386,3.418,2388,6.848,2389,6.406,2390,4.886,2391,4.886,2392,6.223,2393,6.223,2394,6.223,3613,4.161,3614,6.944,3615,5.949,3616,6.944,3617,5.949,3618,4.161,3619,4.161,3620,4.161,3621,4.161,3622,4.161,3623,4.161,3624,4.161,3625,4.161,3626,6.944,3627,4.161,3628,5.949]],["title/classes/TheaterModuleInstanceNode.html",[0,0.341,1595,3.459]],["body/classes/TheaterModuleInstanceNode.html",[0,0.436,2,0.279,3,0.04,4,0.035,5,0.04,7,0.203,8,2.452,11,0.964,12,0.817,14,0.063,15,0.172,18,0.131,19,0.006,21,0.164,24,0.325,29,2.514,34,0.066,37,0.489,38,0.613,44,0.396,45,1.132,53,0.008,54,0.008,55,0.008,56,0.008,57,1.44,84,1.634,97,1.585,98,1.948,99,1.56,103,1.26,104,1.134,114,0.876,136,2.12,137,1.991,166,1.653,168,2.267,171,0.3,177,1.66,180,0.959,202,2.189,211,2.402,245,1.6,251,1.971,252,2.476,267,2.309,268,1.696,269,1.663,277,2.794,343,1.381,344,2.452,345,2.353,369,1.373,372,0.723,386,2.484,396,3.531,414,1.805,415,1.805,416,1.805,419,0.787,421,0.716,424,1.63,427,1.663,428,2.485,433,0.862,444,1.056,453,1.484,480,1.148,487,0.783,501,0.991,513,1.431,538,0.689,572,1.385,588,1.321,590,1.358,591,1.63,611,0.689,640,1.766,653,2.789,678,2.613,697,1.312,735,2.75,795,2.936,796,2.75,799,2.671,802,2.364,804,1.929,826,2.56,828,2.75,839,2.503,847,3.034,851,1.886,853,3.177,865,2.022,870,3.903,871,3.269,886,1.599,908,2.378,979,2.452,1006,3.092,1011,1.858,1036,2.183,1049,2.183,1114,1.63,1173,3.269,1249,2.022,1276,1.886,1279,3.177,1280,2.935,1388,4.128,1430,2.126,1444,2.627,1458,2.308,1459,4.422,1578,3.177,1580,3.177,1582,4.68,1591,4.672,1595,5.134,1608,3.091,1609,3.638,1670,3.689,1696,2.183,1734,2.732,1817,3.269,1942,3.368,2273,3.91,2274,4.207,2275,4.207,2276,4.207,2277,4.207,2278,4.207,2279,4.207,2281,3.91,2282,3.368,2284,4.9,2285,4.252,2286,3.795,2287,4.252,2288,4.252,2289,3.368,2290,3.269,2291,3.368,2292,2.971,2294,2.971,2295,3.368,2297,2.971,2299,2.971,2300,3.368,2302,3.368,2303,3.368,2304,3.368,2305,3.368,2306,3.269,2307,3.269,2308,3.368,2309,3.368,2310,2.971,2311,4.207,2312,3.91,2313,3.91,2315,2.971,2316,2.971,2317,2.971,2318,2.971,2319,2.126,2320,2.126,2321,2.378,2324,2.378,2325,3.795,2326,2.308,2327,2.308,2328,2.308,2329,2.308,2331,2.378,2332,2.378,2333,2.378,2334,2.378,2335,2.378,2336,3.368,2337,3.368,2338,2.378,2339,2.378,2340,2.378,2341,2.378,2342,2.378,3361,3.532,3362,5.435,3363,3.838,3364,3.838,3629,6.091,3630,4.301,3631,4.301,3632,4.301,3633,4.301,3634,4.301,3635,4.301]],["title/injectables/TheaterService.html",[231,3.147,649,1.918]],["body/injectables/TheaterService.html",[0,0.441,3,0.058,4,0.05,5,0.058,14,0.09,18,0.124,19,0.006,20,0.431,21,0.157,24,0.344,26,1.646,34,0.058,53,0.011,54,0.011,55,0.011,56,0.011,69,3.13,84,1.425,97,1.594,98,1.959,99,1.569,138,3.309,231,5.121,232,6.021,245,2.036,251,1.763,295,4.074,326,4.074,327,4.074,331,4.422,332,2.882,352,2.626,379,0.82,382,2.21,404,2.405,409,2.831,410,3.048,649,3.12,651,3.309,653,3.689,656,4.738,657,6.457,659,5.628,664,4.734,667,6.916,669,4.738,674,3.309,675,3.13,676,5.876,697,2.364,710,5.527,719,4.571,1952,4.738,1953,5.956,1962,5.121,2008,6.366,2009,6.366,2010,6.366,2011,6.366,2012,6.366,2013,6.366,2651,6.916,3636,6.167,3637,7.751,3638,7.751,3639,6.167,3640,7.751,3641,6.167,3642,7.751,3643,6.167,3644,6.167,3645,6.167,3646,6.167]],["title/classes/TheaterSimpleData.html",[0,0.341,630,2.718]],["body/classes/TheaterSimpleData.html",[0,0.681,2,0.364,3,0.053,4,0.046,5,0.053,7,0.266,9,1.016,11,0.813,12,0.753,13,1.8,14,0.082,15,0.251,18,0.107,19,0.006,20,0.436,21,0.136,24,0.207,34,0.09,37,0.691,38,0.802,44,0.456,53,0.01,54,0.01,55,0.01,56,0.01,91,1.723,94,1.551,103,1.163,166,1.526,171,0.393,342,1.408,372,1.365,379,0.712,412,1.551,419,1.069,421,1.12,422,1.452,433,0.99,444,1.086,461,1.902,476,1.643,480,1.951,485,1.879,487,0.462,501,1.248,538,1.17,564,1.631,573,1.408,575,1.745,576,1.3,584,1.477,585,2.091,588,1.932,589,2.092,590,1.775,593,2.052,606,4.31,607,3.435,608,3.316,609,4.31,610,3.435,611,1.17,612,5.253,615,2.666,616,2.666,617,4.787,618,2.666,619,2.132,620,2.091,621,1.906,622,1.807,623,2.091,624,2.091,625,2.091,626,2.013,627,2.013,628,3.11,629,1.872,630,4.632,631,4.169,632,4.31,633,3.316,634,4.169,635,3.435,636,3.316,637,4.31,638,3.316,639,4.31,640,1.631,641,3.316,642,3.435,643,3.435,644,2.091,645,3.435,646,3.209,647,3.435,648,3.435,3647,5.624,3648,5.624]],["title/interfaces/TheaterTopology.html",[411,1.478,475,2.418]],["body/interfaces/TheaterTopology.html",[0,0.673,3,0.047,4,0.041,5,0.047,9,0.753,11,0.983,12,0.594,14,0.073,15,0.191,18,0.099,19,0.006,20,0.428,24,0.346,34,0.091,37,0.544,38,0.965,39,1.537,44,0.375,46,1.937,53,0.009,54,0.009,55,0.009,56,0.009,94,1.382,103,1.4,116,3.037,127,1.582,162,2.47,171,0.35,177,1.928,202,1.8,219,2.014,277,2.742,286,3.79,342,1.254,343,2.755,345,1.668,367,2.543,368,2.614,369,1.828,370,2.253,376,1.07,379,0.816,382,1.93,385,2.904,386,2.438,387,2.415,388,2.904,389,2.415,390,2.67,391,2.415,392,3.52,393,2.614,394,3.52,395,2.614,396,3.52,397,2.614,398,3.184,399,2.477,400,3.522,401,2.356,402,2.548,403,1.528,404,2.101,405,2.213,406,1.899,407,1.93,408,2.253,409,2.301,410,2.477,411,2.548,412,2.115,413,3.695,414,3.219,415,3.219,416,3.219,417,4.543,418,4.369,419,0.753,420,2.904,421,0.796,422,1.032,423,3.436,424,2.567,425,3.531,426,3.531,427,2.618,428,2.379,429,3.531,430,2.782,431,3.52,432,2.614,433,0.611,434,2.104,435,2.614,436,2.614,437,2.248,438,2.614,439,3.531,440,3.037,441,3.531,442,2.065,443,2.969,444,0.935,445,3.219,446,3.531,447,2.614,448,1.729,449,2.614,450,2.356,451,2.198,452,2.198,453,1.729,454,2.15,455,2.614,456,2.614,457,2.356,458,3.263,459,2.543,460,2.301,461,1.07,462,3.184,463,4.249,464,2.415,465,2.415,466,3.436,467,4.353,468,4.355,469,3.876,470,3.531,471,3.999,472,3.891,473,3.439,474,2.415,475,4.353,476,0.958,477,2.543,478,2.356,479,2.415,576,1.158,743,2.67]],["title/classes/TheatreStatusDTO.html",[0,0.341,748,2.91]],["body/classes/TheatreStatusDTO.html",[0,0.67,2,0.375,3,0.054,4,0.047,5,0.054,7,0.273,12,0.762,14,0.085,15,0.21,18,0.12,19,0.006,20,0.45,21,0.153,24,0.213,27,0.973,34,0.088,44,0.454,45,1.44,49,1.691,53,0.011,54,0.011,55,0.011,56,0.011,91,1.7,98,1.721,106,0.798,114,1.516,115,2.351,171,0.628,342,1.449,372,1.384,373,1.766,379,0.788,382,1.651,406,1.624,407,1.651,419,1.055,421,1.115,422,1.445,430,2.38,433,0.908,461,1.855,485,1.846,487,0.756,501,0.811,514,1.179,515,2.239,538,0.927,542,3.121,551,2.112,552,2.112,553,2.112,554,2.112,555,2.112,556,2.112,557,2.112,558,2.112,559,2.112,564,1.679,575,1.796,589,1.359,603,2.195,605,2.195,629,1.927,739,4.548,740,3.825,746,3.537,747,4.548,748,5.028,749,3.825,750,3.825,751,3.672,752,3.825,753,3.672,754,3.825,755,3.825,756,3.825,757,4.92,758,4.723,759,3.825,760,3.825,761,2.239,762,3.825,763,3.825,764,4.548,765,3.825,766,3.825,767,3.672,768,3.672,769,3.672,770,3.825,771,3.825,772,3.672,3649,5.791,3650,5.791,3651,5.791]],["title/injectables/TokenService.html",[232,3.022,649,1.918]],["body/injectables/TokenService.html",[0,0.378,3,0.05,4,0.043,5,0.05,7,0.249,9,0.933,11,1.034,12,0.787,14,0.077,15,0.197,18,0.115,19,0.006,21,0.177,24,0.258,26,1.41,29,2.292,34,0.05,37,0.424,44,0.452,45,1.123,47,1.755,53,0.01,54,0.01,55,0.01,56,0.01,69,2.68,84,1.22,97,1.481,98,1.819,99,1.457,102,3.767,103,1.45,104,1.034,116,4.025,127,2.214,136,2.103,137,2.292,138,5.051,160,4.338,232,4.447,245,1.842,251,2.082,252,2.401,295,3.489,332,1.964,421,0.824,431,3.219,487,0.737,504,1.926,649,2.823,651,2.834,664,4.283,674,2.834,697,2.401,795,2.376,796,2.376,820,2.823,821,3.763,826,2.706,1011,2.139,1064,5.305,1113,5.123,1295,4.637,1473,4.844,1481,6.089,1546,7.789,1548,7.484,1644,6.889,1684,5.388,1815,4.447,1920,5.388,1931,6.257,1968,4.712,2443,4.135,2499,5.76,3162,7.484,3449,6.257,3652,5.281,3653,7.013,3654,7.873,3655,9.412,3656,8.387,3657,8.387,3658,8.387,3659,7.013,3660,7.013,3661,7.013,3662,7.013,3663,5.281,3664,8.387,3665,8.974,3666,5.281,3667,8.387,3668,5.281,3669,7.013,3670,5.281,3671,7.013,3672,5.281,3673,7.013,3674,5.281,3675,5.281,3676,7.013,3677,7.013,3678,5.281,3679,7.873,3680,8.387,3681,5.281,3682,5.281,3683,7.873,3684,5.281]],["title/classes/TopologyElement.html",[0,0.341,467,2.418]],["body/classes/TopologyElement.html",[0,0.674,2,0.326,3,0.047,4,0.041,5,0.047,9,0.754,11,0.984,12,0.595,14,0.073,15,0.191,18,0.099,19,0.006,20,0.428,21,0.126,24,0.346,34,0.091,37,0.404,38,0.967,39,1.539,44,0.376,46,1.942,53,0.009,54,0.009,55,0.009,56,0.009,94,1.386,103,1.403,116,3.042,127,1.586,162,2.474,171,0.351,177,1.93,202,1.802,219,2.017,277,2.744,286,3.795,342,1.257,343,2.757,345,1.672,367,2.55,368,2.621,369,1.809,370,2.257,376,1.073,379,0.817,382,1.934,385,2.909,386,2.44,387,2.421,388,2.909,389,2.421,390,2.675,391,2.421,392,3.525,393,2.621,394,3.525,395,2.621,396,3.525,397,2.621,398,3.189,399,2.484,400,3.526,401,2.362,402,2.55,403,1.532,404,2.104,405,2.217,406,1.902,407,1.934,408,2.257,409,2.307,410,2.484,411,2.55,412,2.118,413,3.7,414,3.223,415,3.223,416,3.223,417,4.545,418,4.373,419,0.754,420,2.909,421,0.797,422,1.034,423,3.442,424,2.571,425,3.537,426,3.537,427,2.622,428,2.383,429,3.537,430,2.787,431,3.525,432,2.621,433,0.612,434,2.109,435,2.621,436,2.621,437,2.254,438,2.621,439,3.537,440,3.042,441,3.537,442,2.068,443,2.974,444,0.936,445,3.223,446,3.537,447,2.621,448,1.733,449,2.621,450,2.362,451,2.203,452,2.203,453,1.733,454,2.155,455,2.621,456,2.621,457,2.362,458,3.269,459,2.55,460,2.307,461,1.073,462,3.189,463,4.159,464,2.421,465,2.421,466,3.442,467,4.357,468,4.263,469,3.794,470,3.537,471,4.005,472,3.897,473,3.444,474,2.421,475,4.172,476,0.96,477,2.55,478,2.362,479,2.421,743,1.982,3685,5.024,3686,5.024]],["title/interfaces/TopologyList.html",[411,1.478,466,2.418]],["body/interfaces/TopologyList.html",[0,0.674,3,0.047,4,0.041,5,0.047,9,0.755,11,0.984,12,0.595,14,0.073,15,0.191,18,0.099,19,0.006,20,0.428,24,0.346,34,0.091,38,0.967,39,1.539,44,0.376,46,1.944,53,0.009,54,0.009,55,0.009,56,0.009,94,1.387,99,1.256,103,1.404,116,3.044,127,1.587,162,2.475,171,0.351,177,1.931,202,2.077,219,2.017,277,2.745,286,3.797,342,1.258,343,2.758,345,1.673,367,2.552,368,2.623,369,1.809,370,2.258,376,1.074,379,0.817,382,1.935,385,2.911,386,2.441,387,2.423,388,2.911,389,2.423,390,2.677,391,2.423,392,3.526,393,2.623,394,3.526,395,2.623,396,3.526,397,2.623,398,3.191,399,2.486,400,3.527,401,2.364,402,2.551,403,1.534,404,2.105,405,2.218,406,1.903,407,1.935,408,2.258,409,2.309,410,2.486,411,2.551,412,2.119,413,3.702,414,3.224,415,3.224,416,3.224,417,4.698,418,4.374,419,0.755,420,2.911,421,0.798,422,1.034,423,3.444,424,2.572,425,3.54,426,3.54,427,2.624,428,2.385,429,3.54,430,2.789,431,3.526,432,2.623,433,0.613,434,2.111,435,2.623,436,2.623,437,2.256,438,2.623,439,3.54,440,3.044,441,3.54,442,2.07,443,2.976,444,0.936,445,3.224,446,3.54,447,2.623,448,1.735,449,2.623,450,2.364,451,2.205,452,2.205,453,1.735,454,2.157,455,2.623,456,2.623,457,2.364,458,3.27,459,2.552,460,2.309,461,1.074,462,3.191,463,4.038,464,2.423,465,2.423,466,3.898,467,4.49,468,3.963,469,3.527,470,3.54,471,4.006,472,3.898,473,3.445,474,2.423,475,4.173,476,0.961,477,2.552,478,2.364,479,2.423,576,1.162]],["title/classes/TypesCatalogueDTO.html",[0,0.341,516,2.044]],["body/classes/TypesCatalogueDTO.html",[0,0.686,2,0.245,3,0.036,4,0.031,5,0.036,7,0.179,9,0.952,12,0.636,13,1.368,14,0.055,15,0.204,18,0.118,19,0.006,20,0.452,21,0.135,24,0.242,27,0.637,30,1.589,34,0.09,37,0.687,38,1.033,39,0.759,44,0.458,45,1.484,49,1.642,53,0.007,54,0.007,55,0.007,56,0.007,91,1.726,96,1.556,97,0.712,104,0.819,106,1.064,114,0.771,115,1.195,171,0.648,180,0.596,219,0.994,352,1.283,369,1.079,370,1.26,371,1.66,372,1.402,373,2.211,376,1.186,379,0.85,382,1.876,402,1.175,403,2.007,404,2.249,405,2.152,406,1.062,407,1.584,408,1.849,419,1.071,421,1.132,422,1.467,433,1.109,442,1.155,444,0.984,461,1.548,476,1.258,480,1.483,484,1.698,485,1.884,486,2.492,487,0.762,488,2.492,489,2.492,496,2.332,497,2.332,498,1.698,499,2.544,500,1.175,501,0.531,502,1.698,503,1.624,504,1.381,505,1.698,506,1.698,507,1.698,508,1.698,509,1.26,510,1.624,511,1.698,512,1.66,513,1.26,514,1.131,515,2.148,516,3.312,517,2.952,518,2.952,519,2.007,520,1.698,521,2.383,522,1.698,523,2.492,524,1.698,525,1.698,526,1.589,527,3.658,528,1.355,529,1.66,530,1.698,531,2.383,532,1.698,533,1.698,534,1.698,535,1.698,536,1.698,537,1.698,538,1.161,539,1.698,540,1.624,541,2.383,542,1.435,543,2.332,544,1.698,545,1.698,546,2.436,547,1.698,548,1.698,549,2.383,550,1.698,551,1.381,552,1.381,553,1.381,554,1.381,555,1.381,556,1.381,557,1.381,558,1.381,559,1.381,560,1.698,561,1.698,562,1.698,563,1.66,564,1.611,565,1.66,566,1.66,567,1.66,568,1.66,569,1.66,570,1.66,571,1.66,572,0.861,573,1.39,574,1.66,575,1.724,576,0.875,577,1.698,578,1.698,579,0.918,580,1.698,581,1.589,582,1.624,583,2.237,584,0.994,585,1.408,586,1.135,587,2.492,588,1.205,589,1.813,590,1.195,591,1.435,592,2.436,593,1.381,594,1.66,595,2.952,596,1.66,597,1.408,598,2.886,599,2.313,600,1.624,601,1.698,602,1.589,603,1.435,604,1.698,605,1.435,743,1.493,3687,3.786,3688,3.786,3689,3.786,3690,3.786]],["title/components/UnderbarComponent.html",[57,0.97,212,1.879]],["body/components/UnderbarComponent.html",[0,0.367,3,0.048,4,0.042,5,0.048,7,0.242,14,0.075,18,0.113,19,0.006,21,0.154,24,0.253,26,1.369,27,1.394,31,3.024,32,2.385,33,1.983,34,0.048,37,0.412,38,0.98,39,1.378,41,3,44,0.432,45,1.101,48,3.189,49,1.459,52,1.836,53,0.009,54,0.009,55,0.009,56,0.009,57,1.4,58,2.108,59,1.983,60,2.2,61,2.2,62,2.2,66,2.2,67,4.315,68,4.086,70,2.887,72,2.887,84,1.793,91,1.233,97,0.965,98,1.185,99,0.95,102,3.48,136,1.538,137,2.248,149,3.543,164,2.2,165,2.95,166,1.392,167,2.2,168,2.444,169,2.2,170,2.065,171,0.654,172,2.249,173,2.065,174,3.402,175,2.065,176,2.108,177,1.946,178,2.249,179,2.108,180,1.432,181,2.249,182,2.108,183,2.249,184,2.249,185,2.023,186,2.249,187,2.065,188,2.249,189,2.023,190,2.065,191,2.249,192,2.023,193,2.023,194,2.249,195,2.249,196,2.108,197,2.249,198,2.023,199,2.108,200,2.249,201,2.153,202,1.946,203,2.153,204,3.016,205,2.153,206,2.153,207,2.023,208,2.023,209,2.249,210,2.023,211,2.023,212,3.51,213,2.249,214,2.065,215,2.249,216,2.249,217,2.249,245,1.806,251,1.564,252,1.564,332,1.907,338,2.108,421,0.974,458,3.314,487,0.681,572,1.885,611,1.101,697,2.097,820,2.768,826,1.929,828,2.33,855,4.543,915,5.649,1002,2.826,1106,2.926,1136,6.137,1137,5.726,1143,3.923,1144,3.923,1156,5.125,1177,3.025,1194,6.369,1222,4.751,1280,3.314,1295,3.802,1384,4.993,1385,4.993,1451,3.923,1566,3.157,2046,5.649,2052,5.649,2498,5.649,2677,7.397,3510,6.137,3691,5.129,3692,8.29,3693,6.877,3694,6.877,3695,7.759,3696,6.877,3697,6.877,3698,6.877,3699,6.877,3700,6.877,3701,6.369,3702,5.129,3703,6.877,3704,6.877,3705,6.877,3706,6.369,3707,5.129,3708,5.129,3709,5.129,3710,5.129,3711,5.129,3712,5.129,3713,6.877,3714,5.129,3715,5.129,3716,5.129,3717,5.129]],["title/classes/UnderbarElement.html",[0,0.341,3701,3.661]],["body/classes/UnderbarElement.html",[0,0.604,2,0.46,3,0.067,4,0.058,5,0.067,7,0.335,11,1.003,14,0.104,15,0.238,18,0.104,19,0.006,20,0.398,21,0.132,24,0.261,25,4.819,26,1.894,27,1.193,29,2.948,32,2.33,34,0.079,37,0.57,41,3.487,46,2.743,49,1.335,52,3.024,53,0.013,54,0.013,55,0.013,56,0.013,104,1.245,180,1.33,212,3.761,611,1.444,826,2.369,839,2.916,1110,3.701,1114,2.69,1131,5.357,2225,4.981,3701,6.49,3706,6.93,3718,6.332,3719,7.096,3720,6.332,3721,6.332,3722,6.332,3723,6.332]],["title/classes/UnderbarItem.html",[0,0.341,3706,3.661]],["body/classes/UnderbarItem.html",[0,0.591,2,0.444,3,0.064,4,0.056,5,0.064,7,0.323,11,0.988,14,0.1,15,0.233,18,0.135,19,0.006,20,0.407,21,0.171,24,0.252,25,5.067,26,1.828,27,1.39,29,2.904,32,1.889,34,0.078,37,0.741,41,2.648,46,3.197,49,1.671,52,3.381,53,0.013,54,0.013,55,0.013,56,0.013,99,1.708,104,1.009,180,1.079,212,3.639,611,1.422,743,2.701,826,1.92,839,3.398,1110,4.313,1114,3.134,1131,4.343,2225,5.569,3701,5.262,3706,6.825,3718,6.111,3720,7.378,3721,7.378,3722,6.111,3723,6.111,3724,6.848,3725,6.848,3726,6.848,3727,6.848]],["title/classes/VirtualMachine.html",[0,0.341,988,2.089]],["body/classes/VirtualMachine.html",[0,0.693,2,0.275,3,0.04,4,0.034,5,0.04,7,0.2,9,0.998,11,0.933,12,0.372,13,1.485,14,0.062,15,0.227,18,0.088,19,0.006,20,0.433,21,0.112,24,0.156,31,1.546,34,0.091,37,0.674,44,0.459,45,1.293,47,1.756,53,0.008,54,0.008,55,0.008,56,0.008,91,1.743,103,0.877,104,0.889,106,1.053,109,1.293,171,0.296,239,1.639,259,1.901,342,1.061,372,1.013,379,0.528,411,1.87,412,1.169,419,1.081,421,1.139,422,1.476,433,1.133,444,1.075,448,3.259,476,1.46,485,1.903,487,0.663,500,1.87,501,1.209,514,0.863,538,0.679,573,1.061,576,1.621,579,2.033,584,1.113,586,1.271,588,1.82,589,2.026,611,1.223,615,2.199,616,2.199,618,2.199,619,1.607,620,2.841,621,1.436,622,1.936,623,1.576,624,1.576,625,1.576,626,1.517,627,1.517,629,1.411,640,1.748,644,1.576,761,1.639,777,2.785,780,3.392,789,1.639,802,1.873,953,2.704,954,1.946,955,1.946,956,2.768,957,1.901,958,1.901,959,1.901,960,2.704,962,2.704,964,2.704,966,2.704,967,2.704,968,2.704,969,2.704,970,2.704,971,2.586,972,2.644,973,2.644,974,2.644,975,3.351,976,2.644,977,1.946,978,1.946,979,1.706,980,1.818,981,2.644,982,1.901,983,1.901,984,2.704,985,1.901,986,2.704,987,1.901,988,3.076,989,3.221,990,1.946,991,1.946,992,1.946,993,3.009,994,3.428,995,1.859,996,2.511,997,2.768,998,3.147,999,3.009,1000,3.351,1001,1.946,1002,1.742,1003,1.779,1004,1.946,1005,1.901,1006,1.362,1007,3.147,1008,3.428,1009,1.672,1010,1.859,1011,1.839,1012,2.704,1013,2.704,1014,2.704,1015,2.768,1016,2.644,1017,1.901,1018,1.901,1019,1.901,3728,4.239,3729,4.239]],["title/classes/VirtualMachinePorts.html",[0,0.341,1000,2.089]],["body/classes/VirtualMachinePorts.html",[0,0.692,2,0.273,3,0.04,4,0.034,5,0.04,7,0.199,9,1.011,11,0.931,12,0.369,13,1.477,14,0.061,15,0.227,18,0.102,19,0.006,20,0.434,21,0.13,24,0.155,31,1.535,34,0.091,37,0.673,44,0.459,45,1.34,47,1.749,53,0.008,54,0.008,55,0.008,56,0.008,91,1.742,103,0.871,104,0.884,106,1.049,109,1.284,171,0.294,239,1.627,259,1.888,342,1.053,372,1.008,379,0.526,411,1.861,412,1.161,419,1.08,421,1.138,422,1.475,433,1.132,444,1.073,448,3.255,476,1.455,485,1.902,487,0.661,500,1.306,501,1.207,514,0.857,538,0.674,573,1.053,576,1.615,579,2.134,584,1.105,586,1.262,588,1.815,589,2.022,611,1.219,615,2.188,616,2.188,618,2.188,619,1.595,620,2.832,621,1.426,622,1.926,623,1.565,624,1.565,625,1.565,626,1.507,627,1.507,629,1.4,640,2.026,644,1.565,761,1.627,777,2.778,780,3.388,789,1.627,802,1.865,953,2.69,954,1.932,955,1.932,956,2.754,957,1.888,958,1.888,959,1.888,960,2.69,962,2.69,964,2.69,966,2.69,967,2.69,968,2.69,969,2.69,970,2.69,971,2.573,972,2.63,973,2.63,974,2.63,975,3.34,976,2.63,977,1.932,978,1.932,979,1.694,980,1.805,981,2.63,982,1.888,983,1.888,984,2.69,985,1.888,986,2.69,987,1.888,988,2.63,989,3.208,990,1.932,991,1.932,992,1.932,993,3.453,994,3.611,995,1.846,996,2.501,997,1.932,998,1.888,999,1.805,1000,3.34,1001,2.754,1002,2.465,1003,2.933,1004,1.932,1005,1.888,1006,1.352,1007,3.134,1008,3.416,1009,1.66,1010,1.846,1011,1.829,1012,2.69,1013,2.69,1014,2.69,1015,2.754,1016,2.63,1017,1.888,1018,1.888,1019,1.888,3730,4.209,3731,4.209,3732,4.209]],["title/classes/VirtualizationEnvironmentTypeDTO.html",[0,0.341,1986,3.661]],["body/classes/VirtualizationEnvironmentTypeDTO.html",[0,0.626,2,0.428,3,0.062,4,0.054,5,0.062,7,0.312,14,0.096,15,0.228,18,0.139,19,0.006,20,0.442,21,0.179,34,0.082,44,0.435,49,1.714,53,0.012,54,0.012,55,0.012,56,0.012,91,1.568,171,0.637,338,2.716,369,1.571,372,1.47,373,2.78,379,0.853,398,4.113,419,0.973,421,1.028,422,1.333,444,0.986,485,1.725,810,6.042,1973,4.192,1974,4.192,1975,4.192,1980,5.429,1984,6.647,1985,6.647,1986,6.72,1987,7.184,1988,7.184,1989,7.184,1990,5.429,1991,4.566,1992,5.429,1993,5.429,3733,6.61,3734,6.61,3735,6.61,3736,6.61,3737,6.61,3738,6.61,3739,6.61]],["title/components/VisualizerComponent.html",[57,0.97,214,1.918]],["body/components/VisualizerComponent.html",[0,0.242,3,0.032,4,0.028,5,0.032,9,1.01,11,0.569,12,0.602,14,0.049,15,0.144,18,0.126,19,0.006,20,0.226,21,0.169,24,0.295,26,0.904,27,0.859,29,2.408,31,2.825,32,2.337,33,1.309,34,0.032,37,0.705,38,1.208,39,1.698,44,0.422,45,0.818,47,1.279,48,1.391,49,1.512,52,1.212,53,0.006,54,0.006,55,0.006,56,0.006,57,1.041,58,1.391,59,2.381,60,1.452,61,1.452,62,1.452,66,1.452,67,4.165,68,3.901,70,2.146,72,2.146,74,4.03,76,3.906,77,4.587,80,4.533,81,6.141,84,1.423,85,2.458,94,2.137,97,0.637,98,0.782,99,0.627,102,3.625,104,0.754,106,1.067,107,2.325,108,2.456,109,2.362,114,1.041,115,1.614,127,1.614,129,2.236,130,2.236,136,1.847,137,1.107,138,3.305,140,1.872,149,4.74,161,2.339,163,2.458,164,1.452,165,2.193,166,0.919,167,1.452,168,2.172,169,1.452,170,1.363,171,0.592,172,1.485,173,1.363,174,2.701,175,1.363,176,1.391,177,1.2,178,1.485,179,1.391,180,0.533,181,1.485,182,1.391,183,1.485,184,1.485,185,1.335,186,1.485,187,1.363,188,1.485,189,1.335,190,1.363,191,1.485,192,1.335,193,1.335,194,1.485,195,1.485,196,1.391,197,1.485,198,1.335,199,1.391,200,1.485,201,1.421,202,1.611,203,1.421,204,2.242,205,1.421,206,1.421,207,1.335,208,1.335,209,1.485,210,1.335,211,1.335,212,1.335,213,1.485,214,3.118,215,2.701,216,1.485,217,1.485,230,6.377,245,1.343,251,1.561,252,1.032,270,3.531,338,3.402,343,1.087,344,2.058,361,4.982,376,1.465,379,0.448,433,0.944,434,2.88,442,2.093,445,2.88,450,3.226,454,1.452,461,1.091,487,0.794,501,0.716,514,1.041,528,1.83,597,2.551,611,1.513,653,3.342,686,5.636,709,3.928,795,1.732,796,1.732,799,2.242,800,3.531,802,2.305,803,6.362,804,1.519,805,3.906,808,5.059,809,5.496,812,5.496,814,6.123,815,6.911,816,6.911,817,4.191,820,2.762,821,2.743,822,3.928,823,4.561,824,2.828,826,2.322,827,4.634,828,1.732,829,4.561,830,4.561,832,5.272,833,5.623,834,6.123,835,6.911,836,6.123,837,4.982,839,2.82,840,6.123,841,6.635,842,4.199,845,4.199,847,2.016,848,3.711,849,3.928,850,4.561,851,2.242,852,3.928,855,3.377,856,3.377,858,4.74,860,2.339,862,4.561,865,2.404,866,4.561,875,4.561,876,4.561,877,4.199,882,4.199,884,4.069,886,1.259,887,3.021,888,3.021,890,3.021,891,3.021,892,2.068,893,2.781,894,3.021,896,4.561,897,3.021,904,5.059,905,3.021,917,6.123,918,4.199,919,3.021,920,4.199,921,3.021,922,4.561,923,3.377,925,4.561,927,6.123,928,4.561,934,3.021,935,6.123,936,6.123,938,3.711,939,3.928,940,3.021,941,3.021,1451,2.916,1452,4.982,2114,5.496,3740,9.161,3741,3.386,3742,6.159,3743,5.112,3744,5.112,3745,3.386,3746,3.386,3747,6.862,3748,3.386,3749,3.386,3750,3.386,3751,3.386,3752,3.386,3753,3.386,3754,3.386,3755,6.862,3756,6.862,3757,3.386,3758,3.386,3759,3.386,3760,3.386,3761,3.386,3762,3.386,3763,3.386,3764,3.386]],["title/classes/_Control.html",[0,0.341,1049,2.418]],["body/classes/_Control.html",[0,0.538,2,0.381,3,0.055,4,0.048,5,0.055,7,0.278,11,0.654,12,0.66,14,0.086,15,0.212,18,0.137,19,0.006,20,0.399,21,0.174,24,0.305,26,1.571,27,1.265,32,1.623,34,0.071,37,0.703,44,0.269,53,0.011,54,0.011,55,0.011,56,0.011,57,1.839,70,2.469,72,2.469,76,5.73,84,1.359,97,1.56,98,1.917,99,1.535,104,0.867,106,0.81,109,1.794,157,4.52,175,3.028,180,1.423,202,1.766,245,1.976,251,1.711,252,2.294,267,2.23,268,2.32,269,2.274,343,1.89,369,1.461,376,1.606,379,0.824,386,2.624,444,0.717,453,2.03,487,0.618,514,1.532,519,2.294,664,3.593,711,5.969,735,2.549,743,2.32,804,2.639,817,3.593,820,2.368,895,4.97,913,2.835,1027,5.249,1028,5.249,1029,5.644,1030,4.832,1031,5.249,1032,5.249,1033,5.249,1034,5.781,1035,6.713,1036,3.818,1042,6.241,1043,7.401,1044,5.249,1045,6.179,1046,6.713,1047,5.781,1048,6.713,1049,3.818,1050,7.401,1051,4.959,1052,5.249,1053,7.18,1054,5.249,1055,5.249,1056,5.249,1057,5.249,1058,5.249,1059,6.713,1060,5.249,1061,5.249,1062,6.179,1063,6.713,1064,4.732,1065,5.249,1240,6.713,3765,7.524,3766,5.883,3767,7.524,3768,5.883,3769,7.524,3770,5.883,3771,5.883]],["title/dependencies.html",[220,4.411,3772,3.534]],["body/dependencies.html",[19,0.006,26,1.737,53,0.012,54,0.012,55,0.012,56,0.012,80,4.299,129,4.299,130,4.299,162,2.374,202,2.332,220,5,242,6.583,254,6.583,255,6.158,267,3.293,268,2.567,269,3.804,287,5.807,291,6.158,297,6.674,299,5.807,300,7.152,323,5.345,330,5.807,360,5,437,2.919,440,2.919,469,3.438,480,1.737,673,5.807,711,4.299,1567,3.598,3270,4.725,3271,4.725,3275,4.495,3277,4.495,3279,5.345,3283,4.725,3321,4.725,3773,6.508,3774,8.779,3775,6.508,3776,6.508,3777,6.508,3778,6.508,3779,6.508,3780,6.508,3781,6.508,3782,6.508,3783,6.508,3784,6.508,3785,6.508,3786,6.508,3787,6.508,3788,6.508,3789,6.508,3790,6.508,3791,6.508,3792,6.508,3793,6.508,3794,6.508,3795,6.508,3796,6.508,3797,6.508,3798,6.508,3799,6.508,3800,6.508,3801,6.508,3802,6.508,3803,6.508,3804,6.508,3805,8.015,3806,6.508,3807,6.508,3808,5.807,3809,6.508,3810,6.508,3811,6.508,3812,6.508,3813,6.508,3814,6.508,3815,5.807,3816,6.508,3817,6.508,3818,6.508,3819,6.508,3820,6.508,3821,6.508]],["title/miscellaneous/functions.html",[3822,3.96,3823,5.741]],["body/miscellaneous/functions.html",[9,0.467,11,1.01,12,0.705,14,0.061,18,0.143,19,0.006,20,0.41,32,2.427,37,0.481,38,1.084,39,1.199,44,0.434,45,1.52,53,0.008,54,0.008,55,0.008,56,0.008,97,1.785,98,2.193,99,1.757,103,1.73,104,0.619,114,1.702,171,0.531,219,1.102,251,2.182,277,2.594,290,4.916,291,3.224,292,5.341,376,1.878,385,2.567,386,2.374,388,2.567,390,2.361,392,1.927,394,1.927,396,1.927,400,2.567,406,1.678,421,1.034,422,1.341,428,2.938,430,3.616,433,1.091,434,3.193,437,1.882,440,1.882,444,1.107,445,3.193,453,2.407,461,1.878,462,3.932,473,3.13,487,0.803,513,2.782,579,1.017,646,2.394,710,2.394,743,2.361,777,1.448,787,4.339,795,2.833,796,2.833,799,2.625,802,2.478,820,2.409,821,3.212,826,2.732,827,4.082,828,2.833,833,3.047,855,3.954,856,5.812,865,3.932,996,1.502,1006,2.764,1084,4.589,1114,3.17,1131,5.58,1249,3.932,1276,1.84,1280,2.022,1295,4.864,1451,4.339,1581,5.361,1582,5.361,1583,5.361,1591,2.772,1593,3.047,1595,3.047,1609,3.05,1614,5.361,1615,5.361,1616,5.361,1621,3.047,1623,3.047,1625,3.047,1632,4.346,1679,4.599,1830,5.341,1834,5.341,2272,3.447,2286,4.487,2307,4.082,2326,4.487,2327,4.487,2328,4.487,2329,4.487,2395,3.447,2753,3.447,2907,4.599,2908,4.599,2909,4.599,2943,4.916,3342,3.447,3357,3.447,3361,3.447,3418,6.248,3824,7.607,3825,5.986,3826,4.197,3827,4.197,3828,4.197,3829,4.197,3830,4.197,3831,4.197,3832,4.197,3833,5.986,3834,8.798,3835,5.986,3836,5.986,3837,5.986,3838,5.986,3839,5.986,3840,5.986,3841,5.986,3842,4.197,3843,4.197,3844,5.986,3845,4.197,3846,5.986,3847,4.197,3848,4.197,3849,4.197,3850,5.986,3851,4.197,3852,4.197,3853,4.197,3854,7.607,3855,5.986,3856,5.986,3857,5.986,3858,4.197,3859,4.197,3860,4.197,3861,4.197,3862,4.197,3863,4.197,3864,4.197,3865,4.197,3866,4.197,3867,4.197,3868,4.197,3869,4.197,3870,4.197]],["title/index.html",[929,3.534,1734,1.776,3871,3.96]],["body/index.html",[4,0.055,19,0.006,53,0.013,54,0.013,55,0.013,56,0.013,57,1.805,68,2.801,94,2.274,116,3.058,124,6.082,171,0.476,252,2.704,267,3.361,269,2.635,332,2.534,362,6.811,538,1.32,542,2.584,594,3.616,939,5.237,1002,2.801,1030,5.599,1034,5.237,1106,3.889,1137,4.709,1257,6.082,1444,4.163,1473,5.696,1609,3.008,1742,6.082,2249,5.842,3275,4.709,3277,4.709,3297,4.949,3299,4.949,3774,6.082,3808,7.91,3815,6.082,3872,8.246,3873,6.817,3874,6.817,3875,6.817,3876,6.817,3877,6.817,3878,6.817,3879,6.817,3880,6.817,3881,6.817,3882,6.817,3883,6.817,3884,6.817,3885,9.432,3886,9.698,3887,6.817,3888,6.817,3889,6.817,3890,6.817,3891,6.817,3892,6.817,3893,6.817,3894,8.865,3895,6.817,3896,9.432,3897,6.817,3898,6.817,3899,6.817,3900,6.817,3901,6.817,3902,6.817,3903,6.817,3904,8.246,3905,8.246,3906,9.211,3907,6.817,3908,8.246,3909,6.817,3910,6.817,3911,6.817,3912,6.817,3913,8.865,3914,6.817,3915,6.817]],["title/modules.html",[930,4.519]],["body/modules.html",[12,0.685,19,0.005,53,0.014,54,0.014,55,0.014,56,0.014,218,6.002,219,2.052,227,5.672,255,6.002,345,2.973,1878,6.97,2777,6.97,3916,7.812,3917,7.812,3918,8.934,3919,7.812]],["title/overview.html",[3920,6.542]],["body/overview.html",[2,0.382,19,0.006,33,3.634,53,0.011,54,0.011,55,0.011,56,0.011,58,3.911,59,2.279,173,3.522,175,3.342,176,3.863,179,3.412,182,3.412,185,3.275,187,3.342,189,3.275,190,3.342,192,3.275,193,3.275,196,3.863,198,3.275,199,3.863,201,3.485,203,3.485,205,3.485,206,3.485,207,3.275,208,3.275,210,3.275,211,3.275,212,3.275,214,3.522,218,7.936,219,1.548,220,5.788,221,5.26,222,5.26,223,5.26,224,5.26,225,5.26,226,5.26,227,6.028,228,7.408,229,5.265,230,5.735,231,5.484,232,5.265,233,5.26,234,4.842,235,5.26,576,1.362,651,3.163,735,1.997,1448,4.842,1604,3.894,2151,5.26,3921,5.895,3922,5.895,3923,5.895]],["title/properties.html",[476,1.097,3772,3.534]],["body/properties.html",[15,0.223,19,0.006,53,0.015,54,0.015,55,0.015,56,0.015,538,1.268,3924,7.917]],["title/classes/reteBasicModuleInfo.html",[0,0.341,2325,2.557]],["body/classes/reteBasicModuleInfo.html",[0,0.548,2,0.573,3,0.057,4,0.049,5,0.057,7,0.286,8,3.385,9,0.935,11,0.935,14,0.088,15,0.216,18,0.144,19,0.006,20,0.438,21,0.184,24,0.282,27,1.414,34,0.072,37,0.71,38,1.093,44,0.384,53,0.011,54,0.011,55,0.011,56,0.011,96,3.456,171,0.617,180,1.392,219,2.013,369,1.716,372,1.289,375,4.275,376,1.988,379,0.839,386,2.64,403,2.945,414,3.53,415,3.53,416,3.53,428,2.955,452,3.687,453,2.09,480,2.046,501,1.178,538,1.227,572,2.01,583,2.439,590,2.42,591,2.906,711,5.838,802,2.245,828,2.849,886,2.253,1453,3.998,1458,4.513,2323,3.7,2325,4.513,3240,4.655,3241,4.655,3242,4.655,3243,4.655,3244,4.655,3245,4.655,3925,5.406,3926,6.059,3927,6.059,3928,6.059,3929,6.059,3930,6.059,3931,6.059,3932,6.059,3933,5.406,3934,5.406]],["title/classes/reteBasicNodeInfo.html",[0,0.341,2323,2.91]],["body/classes/reteBasicNodeInfo.html",[0,0.582,2,0.593,3,0.063,4,0.054,5,0.063,7,0.315,8,3.536,9,0.977,11,0.977,14,0.097,15,0.229,18,0.133,19,0.006,20,0.434,21,0.17,24,0.299,27,1.477,34,0.077,37,0.735,44,0.401,53,0.012,54,0.012,55,0.012,56,0.012,96,3.611,171,0.639,180,1.441,219,1.754,369,1.706,379,0.77,386,2.587,403,2.483,414,2.803,415,2.803,416,2.803,428,3.087,452,3.853,453,2.809,501,1.231,572,2.08,711,6.042,802,2.345,828,2.976,886,2.483,1453,4.582,1458,4.37,2323,4.973,2325,4.37,3925,5.958,3933,5.958,3934,5.958,3935,6.677,3936,6.677,3937,6.677,3938,6.677]],["title/routes.html",[356,5.373]],["body/routes.html",[19,0.006,53,0.015,54,0.015,55,0.015,56,0.015,356,6.529]]],"invertedIndex":[["",{"_index":19,"title":{},"body":{"classes/Aoption.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"injectables/AttachmentsService.html":{},"injectables/AuthGuard.html":{},"classes/BlueprintFileDTO.html":{},"classes/BorderNetworkDTO.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"components/ControlTemplate.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputReturnedV2.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/DeployInstanceDTO.html":{},"components/DocsComponent.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"classes/FlavorApplication.html":{},"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"injectables/FlavorService.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"classes/HostModuleDTO.html":{},"classes/HostNode.html":{},"classes/HostPortModuleDTO.html":{},"components/HowToUseComponent.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModalButton.html":{},"components/ModalComponent.html":{},"classes/ModalItem.html":{},"injectables/ModalService.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"injectables/ModuleService.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"interfaces/ModuleTopology.html":{},"classes/NameMappingDTO.html":{},"components/NavbarComponent.html":{},"classes/NavbarElement.html":{},"components/NavbarElementComponent.html":{},"classes/NavbarItem.html":{},"classes/NetOSRouterDTO.html":{},"components/NetworkComponent.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkDTO.html":{},"classes/NetworkNode.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/NodeTopologyElement.html":{},"components/OffcanvasComponent.html":{},"classes/PageableDTO.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SelectOption.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/SingleDataInputReturned.html":{},"classes/SortDTO.html":{},"classes/SourceExport.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"classes/StatisticItemDTO.html":{},"injectables/StorageService.html":{},"components/SubnetComponent.html":{},"classes/SubnetDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"components/TabnavComponent.html":{},"classes/TabnavElement.html":{},"classes/TabnavItem.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"injectables/TheaterService.html":{},"classes/TheaterSimpleData.html":{},"interfaces/TheaterTopology.html":{},"classes/TheatreStatusDTO.html":{},"injectables/TokenService.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/TypesCatalogueDTO.html":{},"components/UnderbarComponent.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{},"routes.html":{}}}],["0",{"_index":735,"title":{},"body":{"injectables/AuthGuard.html":{},"components/ControlTemplate.html":{},"components/DataInputV2Component.html":{},"components/DocsComponent.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/HostNode.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"components/ModalComponent.html":{},"injectables/ModuleService.html":{},"components/NavbarElementComponent.html":{},"classes/NetworkNode.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SubnetNode.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/_Control.html":{},"overview.html":{}}}],["0!important",{"_index":1345,"title":{},"body":{"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{}}}],["0.1",{"_index":3314,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["0.2.0",{"_index":3803,"title":{},"body":{"dependencies.html":{}}}],["0.2.1",{"_index":3805,"title":{},"body":{"dependencies.html":{}}}],["0.2.2",{"_index":3814,"title":{},"body":{"dependencies.html":{}}}],["0.2s",{"_index":2179,"title":{},"body":{"components/HomeComponent.html":{},"components/NavbarElementComponent.html":{}}}],["0.3.0",{"_index":3815,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["0.3.1",{"_index":3811,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":3816,"title":{},"body":{"dependencies.html":{}}}],["0.5.0",{"_index":3806,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":3813,"title":{},"body":{"dependencies.html":{}}}],["0.6.1",{"_index":3809,"title":{},"body":{"dependencies.html":{}}}],["0.6s",{"_index":2720,"title":{},"body":{"components/NavbarElementComponent.html":{}}}],["0.7",{"_index":2152,"title":{},"body":{"components/HomeComponent.html":{}}}],["0.8.3",{"_index":3812,"title":{},"body":{"dependencies.html":{}}}],["0.9.1",{"_index":3821,"title":{},"body":{"dependencies.html":{}}}],["0.9em",{"_index":1419,"title":{},"body":{"components/DataItemComponent.html":{}}}],["000000",{"_index":2192,"title":{},"body":{"components/HomeComponent.html":{}}}],["0000005e",{"_index":2110,"title":{},"body":{"components/HomeComponent.html":{},"injectables/ModalService.html":{}}}],["05",{"_index":2170,"title":{},"body":{"components/HomeComponent.html":{}}}],["0d6fd0",{"_index":2169,"title":{},"body":{"components/HomeComponent.html":{}}}],["0f131a",{"_index":144,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["0px",{"_index":2190,"title":{},"body":{"components/HomeComponent.html":{}}}],["1",{"_index":1566,"title":{},"body":{"components/DocsComponent.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"injectables/ModuleService.html":{},"components/NetworkComponent.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{}}}],["1.0",{"_index":992,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["1.0.0",{"_index":3924,"title":{},"body":{"properties.html":{}}}],["1.0.1",{"_index":3797,"title":{},"body":{"dependencies.html":{}}}],["1.1.19",{"_index":3779,"title":{},"body":{"dependencies.html":{}}}],["1.14.0",{"_index":3799,"title":{},"body":{"dependencies.html":{}}}],["1.2.2",{"_index":3790,"title":{},"body":{"dependencies.html":{}}}],["1.2em",{"_index":2174,"title":{},"body":{"components/HomeComponent.html":{}}}],["1.4.1",{"_index":3802,"title":{},"body":{"dependencies.html":{}}}],["1.5em",{"_index":2829,"title":{},"body":{"components/OffcanvasComponent.html":{},"components/TabnavComponent.html":{}}}],["1.8.1",{"_index":3787,"title":{},"body":{"dependencies.html":{}}}],["1.9.0",{"_index":3819,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":1558,"title":{},"body":{"components/DocsComponent.html":{},"components/HomeComponent.html":{},"components/NavbarElementComponent.html":{},"components/OffcanvasComponent.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"components/TabnavComponent.html":{}}}],["10em",{"_index":3520,"title":{},"body":{"components/TabnavComponent.html":{}}}],["10px",{"_index":2236,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["11.0.2",{"_index":3793,"title":{},"body":{"dependencies.html":{}}}],["110",{"_index":1076,"title":{},"body":{"components/ControlTemplate.html":{}}}],["12",{"_index":3922,"title":{},"body":{"overview.html":{}}}],["12.0.1",{"_index":3794,"title":{},"body":{"dependencies.html":{}}}],["12.16.1",{"_index":3875,"title":{},"body":{"index.html":{}}}],["12.20",{"_index":3877,"title":{},"body":{"index.html":{}}}],["124",{"_index":3923,"title":{},"body":{"overview.html":{}}}],["140px",{"_index":1078,"title":{},"body":{"components/ControlTemplate.html":{}}}],["1459",{"_index":3762,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["14px",{"_index":2256,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["150",{"_index":2183,"title":{},"body":{"components/HomeComponent.html":{}}}],["16",{"_index":1450,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["18px",{"_index":2246,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["19",{"_index":2150,"title":{},"body":{"components/HomeComponent.html":{}}}],["1em",{"_index":1408,"title":{},"body":{"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/TabnavComponent.html":{}}}],["1px",{"_index":1072,"title":{},"body":{"components/ControlTemplate.html":{},"components/DocsComponent.html":{}}}],["1px!important",{"_index":1411,"title":{},"body":{"components/DataItemComponent.html":{}}}],["1rem",{"_index":2834,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["2",{"_index":1604,"title":{},"body":{"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"components/HomeComponent.html":{},"injectables/ModalService.html":{},"overview.html":{}}}],["2*$socket",{"_index":2261,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["2.0.1",{"_index":3784,"title":{},"body":{"dependencies.html":{}}}],["2.10.2",{"_index":3781,"title":{},"body":{"dependencies.html":{}}}],["2.7vw",{"_index":2172,"title":{},"body":{"components/HomeComponent.html":{}}}],["200",{"_index":3338,"title":{},"body":{"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["26",{"_index":2151,"title":{},"body":{"components/HomeComponent.html":{},"overview.html":{}}}],["2a2f34",{"_index":2821,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["2em",{"_index":3519,"title":{},"body":{"components/TabnavComponent.html":{}}}],["2px",{"_index":1070,"title":{},"body":{"components/ControlTemplate.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["3",{"_index":1786,"title":{},"body":{"classes/ExportModule.html":{},"classes/ExportTheater.html":{}}}],["3.6.0",{"_index":3789,"title":{},"body":{"dependencies.html":{}}}],["30px",{"_index":1067,"title":{},"body":{"components/ControlTemplate.html":{}}}],["39",{"_index":2715,"title":{},"body":{"components/NavbarElementComponent.html":{}}}],["39px",{"_index":2191,"title":{},"body":{"components/HomeComponent.html":{}}}],["4",{"_index":1448,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"overview.html":{}}}],["400",{"_index":3322,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["4000",{"_index":3318,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["5.1.3",{"_index":3785,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":2716,"title":{},"body":{"components/NavbarElementComponent.html":{},"components/OffcanvasComponent.html":{}}}],["5000",{"_index":3317,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["502",{"_index":3764,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["5rem",{"_index":2833,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["6.10.3",{"_index":3801,"title":{},"body":{"dependencies.html":{}}}],["6.12.6",{"_index":3783,"title":{},"body":{"dependencies.html":{}}}],["6.4.0",{"_index":3817,"title":{},"body":{"dependencies.html":{}}}],["626a71",{"_index":1407,"title":{},"body":{"components/DataItemComponent.html":{}}}],["64",{"_index":3320,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["6px",{"_index":1071,"title":{},"body":{"components/ControlTemplate.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["8",{"_index":1951,"title":{},"body":{"injectables/FileService.html":{}}}],["8.0.1",{"_index":3791,"title":{},"body":{"dependencies.html":{}}}],["8px",{"_index":2247,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["9.0.1",{"_index":3795,"title":{},"body":{"dependencies.html":{}}}],["9.1.12",{"_index":3774,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["9.2.0",{"_index":3796,"title":{},"body":{"dependencies.html":{}}}],["93a1ba",{"_index":2827,"title":{},"body":{"components/OffcanvasComponent.html":{},"components/TabnavComponent.html":{}}}],["99",{"_index":2831,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["999",{"_index":1074,"title":{},"body":{"components/ControlTemplate.html":{}}}],["_control",{"_index":1049,"title":{"classes/_Control.html":{}},"body":{"components/ControlTemplate.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/_Control.html":{}}}],["_data",{"_index":3446,"title":{},"body":{"injectables/StorageService.html":{}}}],["_show",{"_index":2424,"title":{},"body":{"components/ModalComponent.html":{},"components/OffcanvasComponent.html":{}}}],["_socket",{"_index":2319,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["_value",{"_index":1231,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["a.area",{"_index":1912,"title":{},"body":{"classes/ExportTheater.html":{}}}],["a.classlist.add('d",{"_index":691,"title":{},"body":{"injectables/AttachmentsService.html":{}}}],["a.click",{"_index":694,"title":{},"body":{"injectables/AttachmentsService.html":{}}}],["a.description",{"_index":1913,"title":{},"body":{"classes/ExportTheater.html":{}}}],["a.href",{"_index":693,"title":{},"body":{"injectables/AttachmentsService.html":{}}}],["a.remove",{"_index":696,"title":{},"body":{"injectables/AttachmentsService.html":{}}}],["a_element",{"_index":2693,"title":{},"body":{"components/NavbarComponent.html":{}}}],["a_element.setattribute(opt.attr_key",{"_index":2698,"title":{},"body":{"components/NavbarComponent.html":{}}}],["a_option",{"_index":51,"title":{},"body":{"classes/Aoption.html":{},"classes/NavbarElement.html":{},"classes/NavbarItem.html":{}}}],["access",{"_index":731,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["accessori",{"_index":1242,"title":{},"body":{"components/DataInputV2Component.html":{},"components/ModalComponent.html":{},"components/OffcanvasComponent.html":{},"injectables/StorageService.html":{}}}],["accettabile",{"_index":1938,"title":{},"body":{"injectables/FileService.html":{}}}],["accordion",{"_index":1350,"title":{},"body":{"components/DataItemComponent.html":{}}}],["activatedroutesnapshot",{"_index":705,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["activates",{"_index":2229,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["active",{"_index":808,"title":{},"body":{"components/ComposerComponent.html":{},"components/TabnavComponent.html":{},"components/VisualizerComponent.html":{}}}],["active(val",{"_index":3507,"title":{},"body":{"components/TabnavComponent.html":{}}}],["activetab",{"_index":3499,"title":{},"body":{"components/TabnavComponent.html":{}}}],["actual_component",{"_index":217,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["ad",{"_index":1002,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/ExportModule.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"components/UnderbarComponent.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"index.html":{}}}],["adattabile",{"_index":1653,"title":{},"body":{"classes/ExportModule.html":{},"classes/ExportTheater.html":{}}}],["adatto",{"_index":2938,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["add",{"_index":3043,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["additional",{"_index":730,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["adeguate",{"_index":850,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["adeguato",{"_index":1296,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["afterviewinit",{"_index":2672,"title":{},"body":{"components/NavbarComponent.html":{}}}],["aggiornamento",{"_index":1316,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["aggiornare",{"_index":1318,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["aggiungere",{"_index":3879,"title":{},"body":{"index.html":{}}}],["aggiunta",{"_index":3878,"title":{},"body":{"index.html":{}}}],["aggiuntiva",{"_index":1842,"title":{},"body":{"injectables/ExportService.html":{},"injectables/FileService.html":{}}}],["aggiunto",{"_index":2058,"title":{},"body":{"components/HomeComponent.html":{}}}],["ai",{"_index":801,"title":{},"body":{"components/ComposerComponent.html":{}}}],["ajv",{"_index":3782,"title":{},"body":{"dependencies.html":{}}}],["al",{"_index":127,"title":{},"body":{"components/AppComponent.html":{},"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"classes/FlavorApplication.html":{},"components/HomeComponent.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/ReteConnection.html":{},"classes/SelectOption.html":{},"classes/SimpleModuleApplication.html":{},"classes/SingleDataInputReturned.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"injectables/TokenService.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"components/VisualizerComponent.html":{}}}],["alert(e",{"_index":2126,"title":{},"body":{"components/HomeComponent.html":{}}}],["align",{"_index":2248,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["all'ambiente",{"_index":3251,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["all'app",{"_index":1923,"title":{},"body":{"injectables/FileService.html":{}}}],["all'applacazione",{"_index":3066,"title":{},"body":{"injectables/ParseService.html":{}}}],["all'applicazione",{"_index":2939,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["all'elemento",{"_index":1264,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["all'export",{"_index":1654,"title":{},"body":{"classes/ExportModule.html":{},"classes/ExportTheater.html":{}}}],["all'inizializzazione",{"_index":848,"title":{},"body":{"components/ComposerComponent.html":{},"components/DataInputV2Component.html":{},"components/DocsComponent.html":{},"components/TabnavComponent.html":{},"components/VisualizerComponent.html":{}}}],["all'interno",{"_index":588,"title":{},"body":{"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/ExportModule.html":{},"classes/GenericParameterDTO.html":{},"classes/HostNode.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkNode.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/SourceExport.html":{},"classes/StatisticItemDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/TheaterSimpleData.html":{},"classes/TypesCatalogueDTO.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["all'occorrenza",{"_index":119,"title":{},"body":{"components/AppComponent.html":{}}}],["all'oggetto",{"_index":2881,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["all'utente",{"_index":2020,"title":{},"body":{"components/HomeComponent.html":{}}}],["alla",{"_index":31,"title":{},"body":{"classes/Aoption.html":{},"components/ComposerComponent.html":{},"classes/ConstraintsMSD.html":{},"classes/DataInputElement.html":{},"components/DataInputV2Component.html":{},"classes/ExportModule.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModalButton.html":{},"classes/ModalItem.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NavbarElement.html":{},"classes/NavbarItem.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"components/UnderbarComponent.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"components/VisualizerComponent.html":{}}}],["alle",{"_index":1657,"title":{},"body":{"classes/ExportModule.html":{},"classes/ExportTheater.html":{}}}],["allo",{"_index":1875,"title":{},"body":{"classes/ExportTheater.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{}}}],["allocate(component",{"_index":3307,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["allocationpool",{"_index":788,"title":{},"body":{"classes/BorderNetworkDTO.html":{},"classes/NetOSRouterDTO.html":{},"classes/NetworkDTO.html":{},"classes/SubnetDTO.html":{}}}],["allow",{"_index":728,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["alt_title",{"_index":2789,"title":{},"body":{"components/OffcanvasComponent.html":{},"components/TabnavComponent.html":{}}}],["alternativo",{"_index":2795,"title":{},"body":{"components/OffcanvasComponent.html":{},"components/TabnavComponent.html":{}}}],["altra",{"_index":1494,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["altri",{"_index":1496,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["ambo",{"_index":1754,"title":{},"body":{"classes/ExportModule.html":{}}}],["anche",{"_index":839,"title":{},"body":{"components/ComposerComponent.html":{},"injectables/FileService.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModalButton.html":{},"components/ModalComponent.html":{},"classes/ModalItem.html":{},"classes/NetworkNode.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{},"components/VisualizerComponent.html":{}}}],["anchor_parameters",{"_index":532,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["angular",{"_index":267,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthGuard.html":{},"components/ControlTemplate.html":{},"components/HostComponent.html":{},"classes/HostNode.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"components/NetworkComponent.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"components/SubnetComponent.html":{},"classes/SubnetNode.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/_Control.html":{},"dependencies.html":{},"index.html":{}}}],["angular/animations",{"_index":3773,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":287,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":295,"title":{},"body":{"modules/AppModule.html":{},"injectables/AttachmentsService.html":{},"components/DocsComponent.html":{},"injectables/FlavorService.html":{},"injectables/ModuleService.html":{},"injectables/TheaterService.html":{},"injectables/TokenService.html":{}}}],["angular/compiler",{"_index":3775,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":26,"title":{},"body":{"classes/Aoption.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AttachmentsService.html":{},"injectables/AuthGuard.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"injectables/ExportService.html":{},"injectables/FileService.html":{},"injectables/FlavorService.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/ModalButton.html":{},"components/ModalComponent.html":{},"classes/ModalItem.html":{},"injectables/ModalService.html":{},"injectables/ModuleService.html":{},"components/NavbarComponent.html":{},"classes/NavbarElement.html":{},"components/NavbarElementComponent.html":{},"classes/NavbarItem.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"injectables/ParseService.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"injectables/StorageService.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"classes/TabnavElement.html":{},"classes/TabnavItem.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"injectables/TheaterService.html":{},"injectables/TokenService.html":{},"components/UnderbarComponent.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{},"dependencies.html":{}}}],["angular/elements",{"_index":3776,"title":{},"body":{"dependencies.html":{}}}],["angular/forms",{"_index":323,"title":{},"body":{"modules/AppModule.html":{},"components/DataInputComponent.html":{},"dependencies.html":{}}}],["angular/localize",{"_index":3777,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":254,"title":{},"body":{"modules/AppModule.html":{},"components/DocsComponent.html":{},"dependencies.html":{}}}],["angular/router",{"_index":129,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"components/ComposerComponent.html":{},"components/HomeComponent.html":{},"components/VisualizerComponent.html":{},"dependencies.html":{}}}],["angularcomponent",{"_index":2273,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["angularcomponentdata",{"_index":2281,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["angularcontrol",{"_index":1043,"title":{},"body":{"components/ControlTemplate.html":{},"classes/_Control.html":{}}}],["angularrenderplugin",{"_index":3272,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["animation",{"_index":2180,"title":{},"body":{"components/HomeComponent.html":{},"components/NavbarElementComponent.html":{}}}],["annessa",{"_index":3178,"title":{},"body":{"classes/PerseDataForTheaterComposer.html":{}}}],["annullare",{"_index":1160,"title":{},"body":{"components/DataInputComponent.html":{}}}],["aoption",{"_index":1,"title":{"classes/Aoption.html":{}},"body":{"classes/Aoption.html":{},"classes/NavbarElement.html":{},"classes/NavbarItem.html":{}}}],["aperto",{"_index":1376,"title":{},"body":{"components/DataItemComponent.html":{}}}],["api",{"_index":1481,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/PageableDTO.html":{},"classes/SortDTO.html":{},"injectables/TokenService.html":{}}}],["api/flavor.service",{"_index":3087,"title":{},"body":{"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{}}}],["api/module.service",{"_index":2941,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["api/theater.service",{"_index":2940,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{}}}],["app",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"index.html":{}}}],["app.component",{"_index":260,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":73,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.sass",{"_index":71,"title":{},"body":{"components/AppComponent.html":{}}}],["app_initializer",{"_index":256,"title":{},"body":{"modules/AppModule.html":{}}}],["appartenenti",{"_index":2923,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["appartenenza",{"_index":488,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["appcomponent",{"_index":58,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"overview.html":{}}}],["appena",{"_index":2046,"title":{},"body":{"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"components/UnderbarComponent.html":{}}}],["application",{"_index":1829,"title":{},"body":{"injectables/ExportService.html":{}}}],["application/json",{"_index":1968,"title":{},"body":{"injectables/FileService.html":{},"injectables/TokenService.html":{}}}],["application/zip",{"_index":685,"title":{},"body":{"injectables/AttachmentsService.html":{}}}],["applicationref",{"_index":248,"title":{},"body":{"modules/AppModule.html":{}}}],["appmodule",{"_index":218,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appoggio",{"_index":1300,"title":{},"body":{"components/DataInputV2Component.html":{},"components/ModalComponent.html":{},"components/OffcanvasComponent.html":{}}}],["apposita",{"_index":1497,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["appostita",{"_index":562,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["appref",{"_index":250,"title":{},"body":{"modules/AppModule.html":{}}}],["appref.bootstrap(appcomponent",{"_index":348,"title":{},"body":{"modules/AppModule.html":{}}}],["approutingmodule",{"_index":227,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["apptype",{"_index":470,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["area",{"_index":480,"title":{},"body":{"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"components/DataInputV2Component.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/ExportTheater.html":{},"classes/GenericParameterDTO.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesTSD.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/SourceExport.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/TheaterSimpleData.html":{},"classes/TypesCatalogueDTO.html":{},"dependencies.html":{},"classes/reteBasicModuleInfo.html":{}}}],["areaapplication",{"_index":367,"title":{"classes/AreaApplication.html":{}},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["areacolordto",{"_index":477,"title":{"classes/AreaColorDTO.html":{}},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["areadto",{"_index":370,"title":{"classes/AreaDTO.html":{}},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"interfaces/CommonModule.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/FlavorApplication.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterApplication.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/TypesCatalogueDTO.html":{}}}],["areadto:179",{"_index":380,"title":{},"body":{"classes/AreaApplication.html":{}}}],["areadto:180",{"_index":384,"title":{},"body":{"classes/AreaApplication.html":{}}}],["areadto:181",{"_index":381,"title":{},"body":{"classes/AreaApplication.html":{}}}],["areadto:182",{"_index":378,"title":{},"body":{"classes/AreaApplication.html":{}}}],["areadto:183",{"_index":383,"title":{},"body":{"classes/AreaApplication.html":{}}}],["areadto:184",{"_index":377,"title":{},"body":{"classes/AreaApplication.html":{}}}],["areaexport",{"_index":606,"title":{"classes/AreaExport.html":{}},"body":{"classes/AreaExport.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesTSD.html":{},"classes/SourceExport.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{}}}],["areaplugin",{"_index":3273,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["areaplugin.zoomat(this.editor",{"_index":3302,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["areas",{"_index":593,"title":{},"body":{"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/ExportTheater.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesTSD.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/SourceExport.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheaterSimpleData.html":{},"classes/TypesCatalogueDTO.html":{}}}],["aree",{"_index":608,"title":{},"body":{"classes/AreaExport.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/ExportTheater.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesTSD.html":{},"classes/SourceExport.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{}}}],["arrange",{"_index":3277,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"dependencies.html":{},"index.html":{}}}],["array",{"_index":733,"title":{},"body":{"injectables/AuthGuard.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{}}}],["arraybuffer",{"_index":681,"title":{},"body":{"injectables/AttachmentsService.html":{}}}],["arricchisce",{"_index":2892,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["arrow",{"_index":1396,"title":{},"body":{"components/DataItemComponent.html":{},"components/OffcanvasComponent.html":{}}}],["artifacts",{"_index":3897,"title":{},"body":{"index.html":{}}}],["assegna",{"_index":1578,"title":{},"body":{"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["assegnando",{"_index":1656,"title":{},"body":{"classes/ExportModule.html":{},"classes/ExportTheater.html":{}}}],["assegnare",{"_index":1262,"title":{},"body":{"components/DataInputV2Component.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{}}}],["assegnazioni",{"_index":3848,"title":{},"body":{"miscellaneous/functions.html":{}}}],["assign",{"_index":2218,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["associate",{"_index":1001,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["associato",{"_index":3420,"title":{},"body":{"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{}}}],["associazioni",{"_index":1879,"title":{},"body":{"classes/ExportTheater.html":{}}}],["astratta",{"_index":1355,"title":{},"body":{"components/DataItemComponent.html":{}}}],["async",{"_index":653,"title":{},"body":{"injectables/AttachmentsService.html":{},"injectables/AuthGuard.html":{},"components/ComposerComponent.html":{},"injectables/FileService.html":{},"injectables/FlavorService.html":{},"components/HomeComponent.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"injectables/ModuleService.html":{},"classes/NetworkNode.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"injectables/TheaterService.html":{},"components/VisualizerComponent.html":{}}}],["attachments",{"_index":563,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["attachments_uuid",{"_index":661,"title":{},"body":{"injectables/AttachmentsService.html":{}}}],["attachmentsservice",{"_index":650,"title":{"injectables/AttachmentsService.html":{}},"body":{"injectables/AttachmentsService.html":{}}}],["attenzione",{"_index":1505,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"injectables/ModalService.html":{}}}],["attiva",{"_index":3511,"title":{},"body":{"components/TabnavComponent.html":{}}}],["attivata",{"_index":2475,"title":{},"body":{"injectables/ModalService.html":{}}}],["attivit",{"_index":840,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["attr_key",{"_index":16,"title":{},"body":{"classes/Aoption.html":{},"classes/NavbarElement.html":{},"classes/NavbarItem.html":{}}}],["attr_val",{"_index":17,"title":{},"body":{"classes/Aoption.html":{},"classes/NavbarElement.html":{},"classes/NavbarItem.html":{}}}],["attraverso",{"_index":1138,"title":{},"body":{"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"injectables/ModalService.html":{},"injectables/StorageService.html":{}}}],["attributi",{"_index":422,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"classes/BlueprintFileDTO.html":{},"classes/BorderNetworkDTO.html":{},"interfaces/CommonModule.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/DeployInstanceDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/FlavorApplication.html":{},"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/HostModuleDTO.html":{},"classes/HostPortModuleDTO.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"interfaces/ModuleTopology.html":{},"classes/NameMappingDTO.html":{},"classes/NetOSRouterDTO.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkDTO.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/NodeTopologyElement.html":{},"classes/PageableDTO.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteConnection.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/SortDTO.html":{},"classes/SourceExport.html":{},"classes/StatisticItemDTO.html":{},"classes/SubnetDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheaterSimpleData.html":{},"interfaces/TheaterTopology.html":{},"classes/TheatreStatusDTO.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/TypesCatalogueDTO.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{},"miscellaneous/functions.html":{}}}],["attributo",{"_index":1286,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["attrubuti",{"_index":2689,"title":{},"body":{"components/NavbarComponent.html":{}}}],["attuale",{"_index":1272,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["attualmente",{"_index":1140,"title":{},"body":{"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{}}}],["authguard",{"_index":357,"title":{"injectables/AuthGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{}}}],["author",{"_index":564,"title":{},"body":{"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"classes/BlueprintFileDTO.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/DeployInstanceDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/ExportTheater.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/NameMappingDTO.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesTSD.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/SourceExport.html":{},"classes/StatisticItemDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheaterSimpleData.html":{},"classes/TheatreStatusDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["authorization",{"_index":3681,"title":{},"body":{"injectables/TokenService.html":{}}}],["auto",{"_index":1567,"title":{},"body":{"components/DocsComponent.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"dependencies.html":{}}}],["autoarrangeplugin",{"_index":3276,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["automatic",{"_index":1476,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["automatic_system",{"_index":1502,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["automatically",{"_index":3890,"title":{},"body":{"index.html":{}}}],["automatico",{"_index":1135,"title":{},"body":{"components/DataInputComponent.html":{},"injectables/ModalService.html":{}}}],["automaticsystem",{"_index":1467,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/EmptyModuleInfo.html":{}}}],["available",{"_index":2531,"title":{},"body":{"injectables/ModalService.html":{}}}],["aver",{"_index":2057,"title":{},"body":{"components/HomeComponent.html":{}}}],["avvale",{"_index":2933,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["avviene",{"_index":2306,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"injectables/ModalService.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["await",{"_index":719,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/FlavorService.html":{},"components/HomeComponent.html":{},"injectables/ModuleService.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"injectables/TheaterService.html":{}}}],["b3b3b3",{"_index":2823,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["background",{"_index":145,"title":{},"body":{"components/AppComponent.html":{},"components/ControlTemplate.html":{},"components/DocsComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["backgroundcolor",{"_index":2109,"title":{},"body":{"components/HomeComponent.html":{},"classes/ModalButton.html":{},"classes/ModalItem.html":{},"injectables/ModalService.html":{}}}],["bar",{"_index":1410,"title":{},"body":{"components/DataItemComponent.html":{}}}],["base",{"_index":800,"title":{},"body":{"components/ComposerComponent.html":{},"components/DataInputV2Component.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/ExportModule.html":{},"components/VisualizerComponent.html":{}}}],["base/area",{"_index":1098,"title":{},"body":{"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{}}}],["basis",{"_index":1570,"title":{},"body":{"components/DocsComponent.html":{}}}],["bearer",{"_index":3682,"title":{},"body":{"injectables/TokenService.html":{}}}],["behaviorsubject",{"_index":2507,"title":{},"body":{"injectables/ModalService.html":{}}}],["behaviorsubject(false",{"_index":2510,"title":{},"body":{"injectables/ModalService.html":{}}}],["behaviorsubject(modalitem",{"_index":2508,"title":{},"body":{"injectables/ModalService.html":{}}}],["bg",{"_index":2146,"title":{},"body":{"components/HomeComponent.html":{},"components/NavbarElementComponent.html":{}}}],["bi",{"_index":1392,"title":{},"body":{"components/DataItemComponent.html":{},"components/OffcanvasComponent.html":{}}}],["bisogna",{"_index":2285,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["blend",{"_index":2161,"title":{},"body":{"components/HomeComponent.html":{}}}],["blob",{"_index":683,"title":{},"body":{"injectables/AttachmentsService.html":{},"components/OffcanvasComponent.html":{}}}],["blob([data",{"_index":684,"title":{},"body":{"injectables/AttachmentsService.html":{}}}],["block",{"_index":1545,"title":{},"body":{"components/DocsComponent.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["blueprint",{"_index":603,"title":{},"body":{"classes/AreaDTO.html":{},"classes/BlueprintFileDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/NameMappingDTO.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterDTO.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheatreStatusDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["blueprintfile",{"_index":767,"title":{},"body":{"classes/BlueprintFileDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/NameMappingDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheatreStatusDTO.html":{}}}],["blueprintfiledto",{"_index":739,"title":{"classes/BlueprintFileDTO.html":{}},"body":{"classes/BlueprintFileDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/NameMappingDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheatreStatusDTO.html":{}}}],["blueprinttype",{"_index":522,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["blueprintuuid",{"_index":768,"title":{},"body":{"classes/BlueprintFileDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/NameMappingDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheatreStatusDTO.html":{}}}],["bnname",{"_index":776,"title":{},"body":{"classes/BorderNetworkDTO.html":{},"classes/NetOSRouterDTO.html":{},"classes/NetworkDTO.html":{},"classes/SubnetDTO.html":{}}}],["body",{"_index":160,"title":{},"body":{"components/AppComponent.html":{},"components/OffcanvasComponent.html":{},"injectables/TokenService.html":{}}}],["bold",{"_index":2837,"title":{},"body":{"components/OffcanvasComponent.html":{},"components/TabnavComponent.html":{}}}],["boolean",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"classes/AreaApplication.html":{},"classes/AreaDTO.html":{},"classes/BlueprintFileDTO.html":{},"classes/BorderNetworkDTO.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"components/ControlTemplate.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/DeployInstanceDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/ExportModule.html":{},"injectables/FileService.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"classes/HostModuleDTO.html":{},"classes/HostPortModuleDTO.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"classes/NameMappingDTO.html":{},"classes/NetOSRouterDTO.html":{},"components/NetworkComponent.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkDTO.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"components/OffcanvasComponent.html":{},"classes/PageableDTO.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteSubnetInfo.html":{},"classes/SelectOption.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/SingleDataInputReturned.html":{},"classes/SortDTO.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"classes/StatisticItemDTO.html":{},"components/SubnetComponent.html":{},"classes/SubnetDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"components/TabnavComponent.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheatreStatusDTO.html":{},"classes/TypesCatalogueDTO.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{}}}],["bootstrap",{"_index":242,"title":{},"body":{"modules/AppModule.html":{},"components/DataItemComponent.html":{},"dependencies.html":{}}}],["border",{"_index":775,"title":{},"body":{"classes/BorderNetworkDTO.html":{},"components/ControlTemplate.html":{},"components/DataItemComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/EmptyModuleInfo.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/NetOSRouterDTO.html":{},"components/NetworkComponent.html":{},"classes/NetworkDTO.html":{},"components/SubnetComponent.html":{},"classes/SubnetDTO.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["bordernetwork",{"_index":786,"title":{},"body":{"classes/BorderNetworkDTO.html":{},"classes/NetOSRouterDTO.html":{},"classes/NetworkDTO.html":{},"classes/SubnetDTO.html":{}}}],["bordernetworkdto",{"_index":773,"title":{"classes/BorderNetworkDTO.html":{}},"body":{"classes/BorderNetworkDTO.html":{},"classes/NetOSRouterDTO.html":{},"classes/NetworkDTO.html":{},"classes/SubnetDTO.html":{}}}],["both",{"_index":2721,"title":{},"body":{"components/NavbarElementComponent.html":{}}}],["bottom",{"_index":1344,"title":{},"body":{"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["box",{"_index":1079,"title":{},"body":{"components/ControlTemplate.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["branch",{"_index":2027,"title":{},"body":{"components/HomeComponent.html":{}}}],["branch===composer?\"create",{"_index":2141,"title":{},"body":{"components/HomeComponent.html":{}}}],["break",{"_index":1406,"title":{},"body":{"components/DataItemComponent.html":{},"classes/ExportModule.html":{},"components/TabnavComponent.html":{}}}],["browser",{"_index":255,"title":{},"body":{"modules/AppModule.html":{},"components/DocsComponent.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":302,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":301,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":253,"title":{},"body":{"modules/AppModule.html":{}}}],["bs",{"_index":2226,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["btn",{"_index":1336,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["build",{"_index":3896,"title":{},"body":{"index.html":{}}}],["builder",{"_index":2274,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["builder(node",{"_index":2282,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["burn",{"_index":2167,"title":{},"body":{"components/HomeComponent.html":{}}}],["button",{"_index":2225,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/ModalButton.html":{},"classes/ModalItem.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{}}}],["buttonclick",{"_index":2036,"title":{},"body":{"components/HomeComponent.html":{}}}],["buttonclick(branch",{"_index":2041,"title":{},"body":{"components/HomeComponent.html":{}}}],["buttons",{"_index":2108,"title":{},"body":{"components/HomeComponent.html":{},"classes/ModalButton.html":{},"classes/ModalItem.html":{},"injectables/ModalService.html":{}}}],["c",{"_index":2391,"title":{},"body":{"components/MirroringModuleInstanceComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["c.output",{"_index":1904,"title":{},"body":{"classes/ExportTheater.html":{}}}],["calc(0.5rem",{"_index":2171,"title":{},"body":{"components/HomeComponent.html":{}}}],["calc(100",{"_index":2260,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["call",{"_index":561,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["cambiamento",{"_index":1282,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["campo",{"_index":1265,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["canactivate",{"_index":364,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["cancel",{"_index":1121,"title":{},"body":{"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/HomeComponent.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{}}}],["cancellato",{"_index":2299,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["cancellazione",{"_index":1360,"title":{},"body":{"components/DataItemComponent.html":{}}}],["canvas",{"_index":923,"title":{},"body":{"components/ComposerComponent.html":{},"classes/ExportModule.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"components/VisualizerComponent.html":{}}}],["canvas/editor",{"_index":1817,"title":{},"body":{"injectables/ExportService.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["capabilites",{"_index":978,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["capabilities",{"_index":565,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["capire",{"_index":1254,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["capta",{"_index":2440,"title":{},"body":{"components/ModalComponent.html":{}}}],["captare",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"injectables/ParseService.html":{}}}],["captato",{"_index":1933,"title":{},"body":{"injectables/FileService.html":{}}}],["caratterisiche",{"_index":2683,"title":{},"body":{"components/NavbarComponent.html":{}}}],["caratteristiche",{"_index":595,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["caratteristiche/quantit",{"_index":3505,"title":{},"body":{"components/TabnavComponent.html":{}}}],["caricato",{"_index":2082,"title":{},"body":{"components/HomeComponent.html":{}}}],["caso",{"_index":872,"title":{},"body":{"components/ComposerComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/ParseDataForTheaterVisualizer.html":{}}}],["catalog1",{"_index":566,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["catalog2",{"_index":567,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["catalog3",{"_index":568,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["catalogo",{"_index":515,"title":{},"body":{"classes/AreaDTO.html":{},"classes/BlueprintFileDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/NameMappingDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterDTO.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheatreStatusDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["catch",{"_index":1962,"title":{},"body":{"injectables/FileService.html":{},"injectables/FlavorService.html":{},"injectables/ModuleService.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"injectables/TheaterService.html":{}}}],["catch((e",{"_index":2125,"title":{},"body":{"components/HomeComponent.html":{}}}],["catch((error",{"_index":349,"title":{},"body":{"modules/AppModule.html":{}}}],["category",{"_index":523,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["cdr",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["center",{"_index":2145,"title":{},"body":{"components/HomeComponent.html":{}}}],["centos",{"_index":1443,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["cerca",{"_index":3918,"title":{},"body":{"modules.html":{}}}],["cha",{"_index":1930,"title":{},"body":{"injectables/FileService.html":{}}}],["change",{"_index":1034,"title":{},"body":{"components/ControlTemplate.html":{},"components/DataInputV2Component.html":{},"classes/_Control.html":{},"index.html":{}}}],["changedetection",{"_index":1143,"title":{},"body":{"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{}}}],["changedetectionstrategy",{"_index":1177,"title":{},"body":{"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":1144,"title":{},"body":{"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{}}}],["changedetectorref",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["che",{"_index":44,"title":{},"body":{"classes/Aoption.html":{},"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"classes/BlueprintFileDTO.html":{},"classes/BorderNetworkDTO.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"components/ControlTemplate.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/DeployInstanceDTO.html":{},"components/DocsComponent.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"classes/FlavorApplication.html":{},"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"classes/HostModuleDTO.html":{},"classes/HostNode.html":{},"classes/HostPortModuleDTO.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModalButton.html":{},"components/ModalComponent.html":{},"classes/ModalItem.html":{},"injectables/ModalService.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"interfaces/ModuleTopology.html":{},"classes/NameMappingDTO.html":{},"components/NavbarComponent.html":{},"classes/NavbarElement.html":{},"components/NavbarElementComponent.html":{},"classes/NavbarItem.html":{},"classes/NetOSRouterDTO.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkDTO.html":{},"classes/NetworkNode.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/NodeTopologyElement.html":{},"components/OffcanvasComponent.html":{},"classes/PageableDTO.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/SortDTO.html":{},"classes/SourceExport.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"classes/StatisticItemDTO.html":{},"injectables/StorageService.html":{},"classes/SubnetDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"components/TabnavComponent.html":{},"classes/TabnavElement.html":{},"classes/TabnavItem.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/TheaterSimpleData.html":{},"interfaces/TheaterTopology.html":{},"classes/TheatreStatusDTO.html":{},"injectables/TokenService.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/TypesCatalogueDTO.html":{},"components/UnderbarComponent.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{},"miscellaneous/functions.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["check",{"_index":1106,"title":{},"body":{"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{},"components/UnderbarComponent.html":{},"index.html":{}}}],["check[e.id",{"_index":3713,"title":{},"body":{"components/UnderbarComponent.html":{}}}],["checkbox",{"_index":1095,"title":{},"body":{"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{}}}],["checked",{"_index":1109,"title":{},"body":{"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{}}}],["chiamata",{"_index":431,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"components/DataInputComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"components/DocsComponent.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"injectables/TokenService.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["chiamate",{"_index":3162,"title":{},"body":{"classes/PerseDataForTheaterComposer.html":{},"injectables/TokenService.html":{}}}],["chiuso",{"_index":1377,"title":{},"body":{"components/DataItemComponent.html":{}}}],["chiusura",{"_index":2503,"title":{},"body":{"injectables/ModalService.html":{},"components/OffcanvasComponent.html":{}}}],["ci",{"_index":907,"title":{},"body":{"components/ComposerComponent.html":{},"components/OffcanvasComponent.html":{},"components/TabnavComponent.html":{}}}],["cidr",{"_index":789,"title":{},"body":{"classes/BorderNetworkDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ExportModule.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetOSRouterDTO.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkDTO.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteSubnetInfo.html":{},"components/SubnetComponent.html":{},"classes/SubnetDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["cite",{"_index":2822,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["class",{"_index":0,"title":{"classes/Aoption.html":{},"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"classes/BlueprintFileDTO.html":{},"classes/BorderNetworkDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputReturnedV2.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/DeployInstanceDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"classes/FlavorApplication.html":{},"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/HostModuleDTO.html":{},"classes/HostNode.html":{},"classes/HostPortModuleDTO.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModalButton.html":{},"classes/ModalItem.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"classes/NameMappingDTO.html":{},"classes/NavbarElement.html":{},"classes/NavbarItem.html":{},"classes/NetOSRouterDTO.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkDTO.html":{},"classes/NetworkNode.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/NodeTopologyElement.html":{},"classes/PageableDTO.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SelectOption.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/SingleDataInputReturned.html":{},"classes/SortDTO.html":{},"classes/SourceExport.html":{},"classes/SpinnerData.html":{},"classes/StatisticItemDTO.html":{},"classes/SubnetDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"classes/TabnavElement.html":{},"classes/TabnavItem.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/TheaterSimpleData.html":{},"classes/TheatreStatusDTO.html":{},"classes/TopologyElement.html":{},"classes/TypesCatalogueDTO.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{},"classes/_Control.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}},"body":{"classes/Aoption.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"injectables/AttachmentsService.html":{},"injectables/AuthGuard.html":{},"classes/BlueprintFileDTO.html":{},"classes/BorderNetworkDTO.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"components/ControlTemplate.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputReturnedV2.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/DeployInstanceDTO.html":{},"components/DocsComponent.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"classes/FlavorApplication.html":{},"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"injectables/FlavorService.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"classes/HostModuleDTO.html":{},"classes/HostNode.html":{},"classes/HostPortModuleDTO.html":{},"components/HowToUseComponent.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModalButton.html":{},"components/ModalComponent.html":{},"classes/ModalItem.html":{},"injectables/ModalService.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"injectables/ModuleService.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"interfaces/ModuleTopology.html":{},"classes/NameMappingDTO.html":{},"components/NavbarComponent.html":{},"classes/NavbarElement.html":{},"components/NavbarElementComponent.html":{},"classes/NavbarItem.html":{},"classes/NetOSRouterDTO.html":{},"components/NetworkComponent.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkDTO.html":{},"classes/NetworkNode.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/NodeTopologyElement.html":{},"components/OffcanvasComponent.html":{},"classes/PageableDTO.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SelectOption.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/SingleDataInputReturned.html":{},"classes/SortDTO.html":{},"classes/SourceExport.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"classes/StatisticItemDTO.html":{},"injectables/StorageService.html":{},"components/SubnetComponent.html":{},"classes/SubnetDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"components/TabnavComponent.html":{},"classes/TabnavElement.html":{},"classes/TabnavItem.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"injectables/TheaterService.html":{},"classes/TheaterSimpleData.html":{},"interfaces/TheaterTopology.html":{},"classes/TheatreStatusDTO.html":{},"injectables/TokenService.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/TypesCatalogueDTO.html":{},"components/UnderbarComponent.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["class=\"modal",{"_index":2460,"title":{},"body":{"components/ModalComponent.html":{}}}],["classe",{"_index":419,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"classes/BlueprintFileDTO.html":{},"classes/BorderNetworkDTO.html":{},"interfaces/CommonModule.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/DeployInstanceDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"classes/FlavorApplication.html":{},"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/HostModuleDTO.html":{},"classes/HostNode.html":{},"classes/HostPortModuleDTO.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"interfaces/ModuleTopology.html":{},"classes/NameMappingDTO.html":{},"classes/NetOSRouterDTO.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkDTO.html":{},"classes/NetworkNode.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/NodeTopologyElement.html":{},"components/OffcanvasComponent.html":{},"classes/PageableDTO.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/SortDTO.html":{},"classes/SourceExport.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"classes/StatisticItemDTO.html":{},"classes/SubnetDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/TheaterSimpleData.html":{},"interfaces/TheaterTopology.html":{},"classes/TheatreStatusDTO.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/TypesCatalogueDTO.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{}}}],["classi",{"_index":2,"title":{},"body":{"classes/Aoption.html":{},"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"classes/BlueprintFileDTO.html":{},"classes/BorderNetworkDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputReturnedV2.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataItemComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/DeployInstanceDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"classes/FlavorApplication.html":{},"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/HostModuleDTO.html":{},"classes/HostNode.html":{},"classes/HostPortModuleDTO.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModalButton.html":{},"classes/ModalItem.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"classes/NameMappingDTO.html":{},"classes/NavbarElement.html":{},"classes/NavbarItem.html":{},"classes/NetOSRouterDTO.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkDTO.html":{},"classes/NetworkNode.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/NodeTopologyElement.html":{},"classes/PageableDTO.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SelectOption.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/SingleDataInputReturned.html":{},"classes/SortDTO.html":{},"classes/SourceExport.html":{},"classes/SpinnerData.html":{},"classes/StatisticItemDTO.html":{},"classes/SubnetDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"classes/TabnavElement.html":{},"classes/TabnavItem.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/TheaterSimpleData.html":{},"classes/TheatreStatusDTO.html":{},"classes/TopologyElement.html":{},"classes/TypesCatalogueDTO.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{},"classes/_Control.html":{},"overview.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["classification",{"_index":569,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["classificazione",{"_index":520,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["clear",{"_index":2519,"title":{},"body":{"injectables/ModalService.html":{}}}],["cli",{"_index":3808,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["cliccato",{"_index":2441,"title":{},"body":{"components/ModalComponent.html":{}}}],["click",{"_index":1224,"title":{},"body":{"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{}}}],["clickbutton",{"_index":2425,"title":{},"body":{"components/ModalComponent.html":{}}}],["clickbutton(val",{"_index":2438,"title":{},"body":{"components/ModalComponent.html":{}}}],["clicked",{"_index":2409,"title":{},"body":{"classes/ModalButton.html":{},"classes/ModalItem.html":{}}}],["closeiconclass",{"_index":1367,"title":{},"body":{"components/DataItemComponent.html":{},"components/OffcanvasComponent.html":{}}}],["closemodal",{"_index":2426,"title":{},"body":{"components/ModalComponent.html":{}}}],["closeoffcanvas",{"_index":2788,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["cluster_appmodule",{"_index":221,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":222,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":226,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_exports",{"_index":223,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":224,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":225,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":542,"title":{},"body":{"classes/AreaDTO.html":{},"classes/BlueprintFileDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/NameMappingDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterDTO.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheatreStatusDTO.html":{},"classes/TypesCatalogueDTO.html":{},"index.html":{}}}],["coerenza",{"_index":449,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["coinvolgono",{"_index":425,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["collapse",{"_index":1359,"title":{},"body":{"components/DataItemComponent.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["collega",{"_index":3128,"title":{},"body":{"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["collegamenti",{"_index":643,"title":{},"body":{"classes/AreaExport.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesTSD.html":{},"classes/SourceExport.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{}}}],["collegano",{"_index":1692,"title":{},"body":{"classes/ExportModule.html":{}}}],["collegare",{"_index":2916,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{}}}],["collegato",{"_index":2468,"title":{},"body":{"injectables/ModalService.html":{}}}],["color",{"_index":162,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"components/ControlTemplate.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"classes/FlavorApplication.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"classes/NodeTopologyElement.html":{},"components/OffcanvasComponent.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"classes/TheaterApplication.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"dependencies.html":{}}}],["color!important",{"_index":2835,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["color,4",{"_index":2242,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["colorpickermodule",{"_index":329,"title":{},"body":{"modules/AppModule.html":{}}}],["column",{"_index":1564,"title":{},"body":{"components/DocsComponent.html":{}}}],["come",{"_index":29,"title":{},"body":{"classes/Aoption.html":{},"components/ComposerComponent.html":{},"components/DataInputV2Component.html":{},"components/DocsComponent.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModalButton.html":{},"components/ModalComponent.html":{},"classes/ModalItem.html":{},"classes/NavbarElement.html":{},"components/NavbarElementComponent.html":{},"classes/NavbarItem.html":{},"classes/NetworkNode.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"classes/SubnetNode.html":{},"classes/TabnavElement.html":{},"classes/TabnavItem.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"injectables/TokenService.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{},"components/VisualizerComponent.html":{}}}],["commonmodule",{"_index":286,"title":{"interfaces/CommonModule.html":{}},"body":{"modules/AppModule.html":{},"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["compatibility",{"_index":991,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["completati",{"_index":1727,"title":{},"body":{"classes/ExportModule.html":{}}}],["complex",{"_index":489,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["compodoc",{"_index":1523,"title":{},"body":{"components/DocsComponent.html":{}}}],["compodoc/compodoc",{"_index":3778,"title":{},"body":{"dependencies.html":{}}}],["compodoc_index_html",{"_index":1528,"title":{},"body":{"components/DocsComponent.html":{}}}],["component",{"_index":57,"title":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"classes/HostNode.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"classes/NetworkNode.html":{},"components/OffcanvasComponent.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"components/SubnetComponent.html":{},"classes/SubnetNode.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{},"index.html":{}}}],["component.name",{"_index":3309,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["component_template",{"_index":169,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["componente",{"_index":32,"title":{},"body":{"classes/Aoption.html":{},"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputReturnedV2.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/ModalButton.html":{},"components/ModalComponent.html":{},"classes/ModalItem.html":{},"components/NavbarComponent.html":{},"classes/NavbarElement.html":{},"components/NavbarElementComponent.html":{},"classes/NavbarItem.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"classes/TabnavElement.html":{},"classes/TabnavItem.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{},"miscellaneous/functions.html":{}}}],["componenti",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"injectables/StorageService.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"overview.html":{}}}],["components",{"_index":170,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["components/data",{"_index":311,"title":{},"body":{"modules/AppModule.html":{}}}],["components/modal/modal.component",{"_index":314,"title":{},"body":{"modules/AppModule.html":{}}}],["components/modal/modaltype",{"_index":131,"title":{},"body":{"components/AppComponent.html":{}}}],["components/navbar/navbar.component",{"_index":307,"title":{},"body":{"modules/AppModule.html":{}}}],["components/offcanvas/offcanvas.component",{"_index":306,"title":{},"body":{"modules/AppModule.html":{}}}],["components/tabnav/tabnav.component",{"_index":318,"title":{},"body":{"modules/AppModule.html":{}}}],["components/underbar/underbar.component",{"_index":315,"title":{},"body":{"modules/AppModule.html":{}}}],["componete",{"_index":1533,"title":{},"body":{"components/DocsComponent.html":{}}}],["comporta",{"_index":2474,"title":{},"body":{"injectables/ModalService.html":{}}}],["comportamento",{"_index":1248,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["composer",{"_index":274,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ComposerComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"components/HomeComponent.html":{}}}],["composer'},{'name",{"_index":174,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["composer.component",{"_index":276,"title":{},"body":{"modules/AppModule.html":{}}}],["composer.component.html",{"_index":807,"title":{},"body":{"components/ComposerComponent.html":{}}}],["composer.component.sass",{"_index":806,"title":{},"body":{"components/ComposerComponent.html":{}}}],["composer/rete",{"_index":275,"title":{},"body":{"modules/AppModule.html":{}}}],["composercomponent",{"_index":173,"title":{"components/ComposerComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"overview.html":{}}}],["composervisualizertype",{"_index":1429,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"components/HomeComponent.html":{}}}],["composervisualizertype.composer",{"_index":2072,"title":{},"body":{"components/HomeComponent.html":{}}}],["composervisualizertype.visualizer",{"_index":2095,"title":{},"body":{"components/HomeComponent.html":{}}}],["composizione",{"_index":3080,"title":{},"body":{"injectables/ParseService.html":{}}}],["comprensibile",{"_index":3065,"title":{},"body":{"injectables/ParseService.html":{}}}],["computazioni",{"_index":2317,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["con",{"_index":166,"title":{},"body":{"components/AppComponent.html":{},"classes/AreaExport.html":{},"components/ComposerComponent.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"classes/ExportModule.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"classes/HostNode.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"classes/ModuleInstanceSimpleData.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"classes/NetworkNode.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesTSD.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SourceExport.html":{},"components/SubnetComponent.html":{},"classes/SubnetNode.html":{},"components/TabnavComponent.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/TheaterSimpleData.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["condivisibili",{"_index":3445,"title":{},"body":{"injectables/StorageService.html":{}}}],["conf",{"_index":2101,"title":{},"body":{"components/HomeComponent.html":{}}}],["conferma",{"_index":2501,"title":{},"body":{"injectables/ModalService.html":{}}}],["conferma/cancellazione",{"_index":2478,"title":{},"body":{"injectables/ModalService.html":{}}}],["conferma/non",{"_index":2500,"title":{},"body":{"injectables/ModalService.html":{}}}],["configurationtemplate",{"_index":570,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["configurationtemplatedto",{"_index":531,"title":{"classes/ConfigurationTemplateDTO.html":{}},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["configurazione",{"_index":529,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"components/ModalComponent.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["confirm",{"_index":2513,"title":{},"body":{"injectables/ModalService.html":{}}}],["conivolgono",{"_index":2316,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["connect",{"_index":2947,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["connection",{"_index":469,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteConnection.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"dependencies.html":{}}}],["connectionpathplugin",{"_index":3268,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{}}}],["connectionplugin",{"_index":3267,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["connections_list",{"_index":3013,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["connections_list.push",{"_index":3018,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["connesisoni",{"_index":1691,"title":{},"body":{"classes/ExportModule.html":{}}}],["connessa",{"_index":1004,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["connesse",{"_index":1803,"title":{},"body":{"classes/ExportModule.html":{}}}],["connessione",{"_index":956,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["connessioni",{"_index":581,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["connesso",{"_index":1766,"title":{},"body":{"classes/ExportModule.html":{}}}],["consente",{"_index":2498,"title":{},"body":{"injectables/ModalService.html":{},"injectables/StorageService.html":{},"components/UnderbarComponent.html":{}}}],["considerare",{"_index":2479,"title":{},"body":{"injectables/ModalService.html":{}}}],["considerata",{"_index":3042,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["console.error(\"problema",{"_index":1329,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["console.error(\"underbaritem",{"_index":3714,"title":{},"body":{"components/UnderbarComponent.html":{}}}],["console.error('[ngdobootstrap",{"_index":350,"title":{},"body":{"modules/AppModule.html":{}}}],["console.error(e",{"_index":2994,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["console.log(json.stringify(this.editor.tojson",{"_index":3304,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["console.warn(\"module",{"_index":1719,"title":{},"body":{"classes/ExportModule.html":{}}}],["console.warn(\"only",{"_index":2530,"title":{},"body":{"injectables/ModalService.html":{}}}],["console.warn(\"root",{"_index":3003,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["console.warn(\"theater",{"_index":2968,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["console.warn(\"type",{"_index":1798,"title":{},"body":{"classes/ExportModule.html":{}}}],["const",{"_index":331,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AttachmentsService.html":{},"injectables/AuthGuard.html":{},"components/DocsComponent.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"injectables/FileService.html":{},"injectables/FlavorService.html":{},"injectables/ModuleService.html":{},"injectables/TheaterService.html":{}}}],["constraints",{"_index":982,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/ExportModule.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["constraintsmsd",{"_index":953,"title":{"classes/ConstraintsMSD.html":{}},"body":{"classes/ConstraintsMSD.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["constructor",{"_index":137,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"components/ComposerComponent.html":{},"components/DocsComponent.html":{},"injectables/ExportService.html":{},"injectables/FileService.html":{},"components/HostComponent.html":{},"classes/HostNode.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"classes/NetworkNode.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"injectables/StorageService.html":{},"components/SubnetComponent.html":{},"classes/SubnetNode.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"injectables/TokenService.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["constructor(cdr",{"_index":1152,"title":{},"body":{"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/OffcanvasComponent.html":{},"components/TabnavComponent.html":{}}}],["constructor(container",{"_index":3257,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["constructor(emitter",{"_index":3766,"title":{},"body":{"classes/_Control.html":{}}}],["constructor(flavorservice",{"_index":3104,"title":{},"body":{"classes/PerseDataForModuleComposer.html":{}}}],["constructor(http",{"_index":656,"title":{},"body":{"injectables/AttachmentsService.html":{},"injectables/FlavorService.html":{},"injectables/ModuleService.html":{},"injectables/TheaterService.html":{}}}],["constructor(module",{"_index":1641,"title":{},"body":{"classes/ExportModule.html":{}}}],["constructor(moduleservice",{"_index":3124,"title":{},"body":{"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["constructor(private",{"_index":675,"title":{},"body":{"injectables/AttachmentsService.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"injectables/FlavorService.html":{},"components/HomeComponent.html":{},"injectables/ModuleService.html":{},"components/OffcanvasComponent.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"components/TabnavComponent.html":{},"injectables/TheaterService.html":{}}}],["constructor(public",{"_index":1052,"title":{},"body":{"components/ControlTemplate.html":{},"classes/_Control.html":{}}}],["constructor(router",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"components/ComposerComponent.html":{},"components/HomeComponent.html":{},"components/VisualizerComponent.html":{}}}],["constructor(sanitizer",{"_index":1530,"title":{},"body":{"components/DocsComponent.html":{}}}],["constructor(service",{"_index":2205,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["constructor(ss",{"_index":3436,"title":{},"body":{"injectables/SpinnerService.html":{}}}],["constructor(theater",{"_index":1868,"title":{},"body":{"classes/ExportTheater.html":{}}}],["constructor(theaterservice",{"_index":2871,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{}}}],["consumer",{"_index":995,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["consumer/privisor",{"_index":1791,"title":{},"body":{"classes/ExportModule.html":{}}}],["consumer/provisor",{"_index":1685,"title":{},"body":{"classes/ExportModule.html":{}}}],["consumer_interface_link",{"_index":638,"title":{},"body":{"classes/AreaExport.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/ExportTheater.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesTSD.html":{},"classes/SourceExport.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{}}}],["consumer_interfaces_link",{"_index":591,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/TypesCatalogueDTO.html":{},"classes/reteBasicModuleInfo.html":{}}}],["consumerif",{"_index":1898,"title":{},"body":{"classes/ExportTheater.html":{}}}],["consumerif.connections.foreach(c",{"_index":1900,"title":{},"body":{"classes/ExportTheater.html":{}}}],["consumerinterfacelinkdto",{"_index":583,"title":{"classes/ConsumerInterfaceLinkDTO.html":{}},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{},"classes/reteBasicModuleInfo.html":{}}}],["consumerinterfacelinkexport",{"_index":639,"title":{"classes/ConsumerInterfaceLinkExport.html":{}},"body":{"classes/AreaExport.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesTSD.html":{},"classes/SourceExport.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{}}}],["consumers",{"_index":985,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/ExportModule.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["consumo",{"_index":914,"title":{},"body":{"components/ComposerComponent.html":{}}}],["contain",{"_index":2158,"title":{},"body":{"components/HomeComponent.html":{}}}],["contained",{"_index":1779,"title":{},"body":{"classes/ExportModule.html":{}}}],["contained_in",{"_index":1677,"title":{},"body":{"classes/ExportModule.html":{}}}],["container",{"_index":3253,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["contenente",{"_index":420,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/SelectOption.html":{},"classes/SimpleModuleApplication.html":{},"classes/SingleDataInputReturned.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["contenenti",{"_index":1600,"title":{},"body":{"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{}}}],["content",{"_index":504,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"components/DataItemComponent.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"components/NetworkComponent.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"injectables/TokenService.html":{},"classes/TypesCatalogueDTO.html":{}}}],["contenuto",{"_index":2421,"title":{},"body":{"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/OffcanvasComponent.html":{},"components/TabnavComponent.html":{}}}],["conterr",{"_index":2066,"title":{},"body":{"components/HomeComponent.html":{}}}],["context",{"_index":3270,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"dependencies.html":{}}}],["contextmenuplugin",{"_index":3269,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["contiene",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"classes/BlueprintFileDTO.html":{},"classes/BorderNetworkDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/DeployInstanceDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"classes/HostModuleDTO.html":{},"classes/HostPortModuleDTO.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"classes/NameMappingDTO.html":{},"classes/NetOSRouterDTO.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkDTO.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PageableDTO.html":{},"injectables/ParseService.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/SortDTO.html":{},"classes/SourceExport.html":{},"classes/StatisticItemDTO.html":{},"classes/SubnetDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"components/TabnavComponent.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterDTO.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheaterSimpleData.html":{},"classes/TheatreStatusDTO.html":{},"classes/TypesCatalogueDTO.html":{},"components/UnderbarComponent.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{}}}],["continue",{"_index":1721,"title":{},"body":{"classes/ExportModule.html":{}}}],["control",{"_index":1029,"title":{},"body":{"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/_Control.html":{}}}],["control.css",{"_index":1032,"title":{},"body":{"components/ControlTemplate.html":{},"classes/_Control.html":{}}}],["control.html",{"_index":1033,"title":{},"body":{"components/ControlTemplate.html":{},"classes/_Control.html":{}}}],["control_parameters",{"_index":536,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["controlla",{"_index":1280,"title":{},"body":{"components/DataInputV2Component.html":{},"classes/ExportModule.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"components/TabnavComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"components/UnderbarComponent.html":{},"miscellaneous/functions.html":{}}}],["controllare",{"_index":1937,"title":{},"body":{"injectables/FileService.html":{},"classes/ParseDataForTheaterVisualizer.html":{}}}],["controlli",{"_index":1166,"title":{},"body":{"components/DataInputComponent.html":{}}}],["controllo",{"_index":1753,"title":{},"body":{"classes/ExportModule.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["controls/control",{"_index":2321,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["controltemplate",{"_index":175,"title":{"components/ControlTemplate.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{},"overview.html":{}}}],["convalida",{"_index":1162,"title":{},"body":{"components/DataInputComponent.html":{}}}],["converte",{"_index":1874,"title":{},"body":{"classes/ExportTheater.html":{}}}],["convertire",{"_index":1631,"title":{},"body":{"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["convertirli",{"_index":3064,"title":{},"body":{"injectables/ParseService.html":{}}}],["convertmodule",{"_index":1635,"title":{},"body":{"classes/ExportModule.html":{}}}],["converttheater",{"_index":1865,"title":{},"body":{"classes/ExportTheater.html":{}}}],["correct",{"_index":2999,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["corretta",{"_index":1509,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["correttamente",{"_index":1361,"title":{},"body":{"components/DataItemComponent.html":{},"components/HomeComponent.html":{}}}],["corretto",{"_index":2059,"title":{},"body":{"components/HomeComponent.html":{}}}],["corrispondente",{"_index":56,"title":{},"body":{"classes/Aoption.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"injectables/AttachmentsService.html":{},"injectables/AuthGuard.html":{},"classes/BlueprintFileDTO.html":{},"classes/BorderNetworkDTO.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"components/ControlTemplate.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputReturnedV2.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/DeployInstanceDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"classes/FlavorApplication.html":{},"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"injectables/FlavorService.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"classes/HostModuleDTO.html":{},"classes/HostNode.html":{},"classes/HostPortModuleDTO.html":{},"components/HowToUseComponent.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModalButton.html":{},"components/ModalComponent.html":{},"classes/ModalItem.html":{},"injectables/ModalService.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"injectables/ModuleService.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"interfaces/ModuleTopology.html":{},"classes/NameMappingDTO.html":{},"components/NavbarComponent.html":{},"classes/NavbarElement.html":{},"components/NavbarElementComponent.html":{},"classes/NavbarItem.html":{},"classes/NetOSRouterDTO.html":{},"components/NetworkComponent.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkDTO.html":{},"classes/NetworkNode.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/NodeTopologyElement.html":{},"components/OffcanvasComponent.html":{},"classes/PageableDTO.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SelectOption.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/SingleDataInputReturned.html":{},"classes/SortDTO.html":{},"classes/SourceExport.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"classes/StatisticItemDTO.html":{},"injectables/StorageService.html":{},"components/SubnetComponent.html":{},"classes/SubnetDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"components/TabnavComponent.html":{},"classes/TabnavElement.html":{},"classes/TabnavItem.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"injectables/TheaterService.html":{},"classes/TheaterSimpleData.html":{},"interfaces/TheaterTopology.html":{},"classes/TheatreStatusDTO.html":{},"injectables/TokenService.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/TypesCatalogueDTO.html":{},"components/UnderbarComponent.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{},"routes.html":{}}}],["corrispondenza",{"_index":53,"title":{},"body":{"classes/Aoption.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"injectables/AttachmentsService.html":{},"injectables/AuthGuard.html":{},"classes/BlueprintFileDTO.html":{},"classes/BorderNetworkDTO.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"components/ControlTemplate.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputReturnedV2.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/DeployInstanceDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"classes/FlavorApplication.html":{},"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"injectables/FlavorService.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"classes/HostModuleDTO.html":{},"classes/HostNode.html":{},"classes/HostPortModuleDTO.html":{},"components/HowToUseComponent.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModalButton.html":{},"components/ModalComponent.html":{},"classes/ModalItem.html":{},"injectables/ModalService.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"injectables/ModuleService.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"interfaces/ModuleTopology.html":{},"classes/NameMappingDTO.html":{},"components/NavbarComponent.html":{},"classes/NavbarElement.html":{},"components/NavbarElementComponent.html":{},"classes/NavbarItem.html":{},"classes/NetOSRouterDTO.html":{},"components/NetworkComponent.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkDTO.html":{},"classes/NetworkNode.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/NodeTopologyElement.html":{},"components/OffcanvasComponent.html":{},"classes/PageableDTO.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SelectOption.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/SingleDataInputReturned.html":{},"classes/SortDTO.html":{},"classes/SourceExport.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"classes/StatisticItemDTO.html":{},"injectables/StorageService.html":{},"components/SubnetComponent.html":{},"classes/SubnetDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"components/TabnavComponent.html":{},"classes/TabnavElement.html":{},"classes/TabnavItem.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"injectables/TheaterService.html":{},"classes/TheaterSimpleData.html":{},"interfaces/TheaterTopology.html":{},"classes/TheatreStatusDTO.html":{},"injectables/TokenService.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/TypesCatalogueDTO.html":{},"components/UnderbarComponent.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{},"routes.html":{}}}],["costruire",{"_index":2069,"title":{},"body":{"components/HomeComponent.html":{}}}],["costruttore",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"injectables/AttachmentsService.html":{},"injectables/AuthGuard.html":{},"components/ComposerComponent.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"injectables/FlavorService.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"classes/HostNode.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"injectables/ModuleService.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"classes/NetworkNode.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"injectables/StorageService.html":{},"components/SubnetComponent.html":{},"classes/SubnetNode.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"injectables/TheaterService.html":{},"injectables/TokenService.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{}}}],["costrutture",{"_index":2431,"title":{},"body":{"components/ModalComponent.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"components/TabnavComponent.html":{}}}],["costruzione",{"_index":799,"title":{},"body":{"components/ComposerComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"components/VisualizerComponent.html":{},"miscellaneous/functions.html":{}}}],["counter",{"_index":3032,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["cover",{"_index":2166,"title":{},"body":{"components/HomeComponent.html":{}}}],["cpu",{"_index":1973,"title":{},"body":{"classes/FlavorApplication.html":{},"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"components/HostComponent.html":{},"classes/HostNode.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/ReteHostInfo.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{}}}],["crea",{"_index":3139,"title":{},"body":{"classes/PerseDataForModuleVisualizer.html":{}}}],["creare",{"_index":1608,"title":{},"body":{"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"components/HomeComponent.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["crearne",{"_index":2287,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["create",{"_index":2138,"title":{},"body":{"components/HomeComponent.html":{},"components/NavbarElementComponent.html":{},"classes/ReteModuleComposerSettings.html":{}}}],["created",{"_index":2275,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["created(node",{"_index":2292,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["createdby",{"_index":551,"title":{},"body":{"classes/AreaDTO.html":{},"classes/BlueprintFileDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/NameMappingDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheatreStatusDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["createddate",{"_index":552,"title":{},"body":{"classes/AreaDTO.html":{},"classes/BlueprintFileDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/NameMappingDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheatreStatusDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["createhost",{"_index":2907,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"miscellaneous/functions.html":{}}}],["createhost(host_name",{"_index":3031,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["createhost(name",{"_index":3843,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createmodulenode",{"_index":2943,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"miscellaneous/functions.html":{}}}],["createmodulenode(moduleinstancename",{"_index":3011,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["createmodulenode(name",{"_index":3845,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createmodulenode(undefined",{"_index":3188,"title":{},"body":{"classes/PerseDataForTheaterComposer.html":{}}}],["createnetwork",{"_index":2909,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"miscellaneous/functions.html":{}}}],["createnetwork(name",{"_index":3849,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createnetwork(network_name",{"_index":3052,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["createnewnode",{"_index":2276,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["createnewnode(node",{"_index":2295,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["createsubnet",{"_index":2908,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"miscellaneous/functions.html":{}}}],["createsubnet(name",{"_index":3851,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createsubnet(subnet_name",{"_index":3045,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["creato",{"_index":2294,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["creazione",{"_index":1679,"title":{},"body":{"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"components/HomeComponent.html":{},"miscellaneous/functions.html":{}}}],["cui",{"_index":870,"title":{},"body":{"components/ComposerComponent.html":{},"components/HomeComponent.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"injectables/ModalService.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["currently",{"_index":716,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["currentpage",{"_index":2655,"title":{},"body":{"injectables/ModuleService.html":{}}}],["cursor",{"_index":1337,"title":{},"body":{"components/DataInputV2Component.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["custom",{"_index":2713,"title":{},"body":{"components/NavbarElementComponent.html":{}}}],["custom_elements_schema",{"_index":244,"title":{},"body":{"modules/AppModule.html":{}}}],["cyber",{"_index":2132,"title":{},"body":{"components/HomeComponent.html":{}}}],["cyberrange",{"_index":2139,"title":{},"body":{"components/HomeComponent.html":{}}}],["da",{"_index":376,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"components/ControlTemplate.html":{},"classes/DataInputCheck.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"components/DocsComponent.html":{},"classes/ElementIntoTheaterDTO.html":{},"injectables/ExportService.html":{},"injectables/FileService.html":{},"classes/FlavorApplication.html":{},"classes/FlavorDTO.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"injectables/ModalService.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"injectables/StorageService.html":{},"components/TabnavComponent.html":{},"classes/TagTIP.html":{},"classes/TheaterApplication.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/TypesCatalogueDTO.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{},"miscellaneous/functions.html":{},"classes/reteBasicModuleInfo.html":{}}}],["dai",{"_index":1046,"title":{},"body":{"components/ControlTemplate.html":{},"classes/_Control.html":{}}}],["dal",{"_index":442,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"interfaces/CommonModule.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"components/DataInputV2Component.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"classes/FlavorApplication.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/ReteConnection.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterApplication.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/TypesCatalogueDTO.html":{},"components/VisualizerComponent.html":{}}}],["dall'applicazione",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"injectables/FileService.html":{}}}],["dall'input",{"_index":1934,"title":{},"body":{"injectables/FileService.html":{}}}],["dalla",{"_index":454,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"components/DataInputComponent.html":{},"components/DocsComponent.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"components/TabnavComponent.html":{},"classes/TabnavElement.html":{},"classes/TabnavItem.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"components/VisualizerComponent.html":{}}}],["dalle",{"_index":1683,"title":{},"body":{"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"classes/PageableDTO.html":{},"classes/SortDTO.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{}}}],["danger",{"_index":2414,"title":{},"body":{"classes/ModalButton.html":{},"classes/ModalItem.html":{}}}],["dare",{"_index":1269,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["data",{"_index":177,"title":{},"body":{"components/AppComponent.html":{},"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"injectables/AttachmentsService.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"components/DocsComponent.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"classes/FlavorApplication.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"classes/HostNode.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"components/ModalComponent.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"classes/NetworkNode.html":{},"classes/NodeTopologyElement.html":{},"components/OffcanvasComponent.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SimpleModuleApplication.html":{},"injectables/StorageService.html":{},"components/SubnetComponent.html":{},"classes/SubnetNode.html":{},"components/TabnavComponent.html":{},"classes/TheaterApplication.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["data(data",{"_index":3455,"title":{},"body":{"injectables/StorageService.html":{}}}],["data_appended",{"_index":1086,"title":{},"body":{"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{}}}],["data_input_template",{"_index":2028,"title":{},"body":{"components/HomeComponent.html":{}}}],["data_prepended",{"_index":1087,"title":{},"body":{"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{}}}],["dataeditor",{"_index":1633,"title":{},"body":{"classes/ExportModule.html":{},"classes/ExportTheater.html":{}}}],["dataform",{"_index":1147,"title":{},"body":{"components/DataInputComponent.html":{}}}],["dataformrouter",{"_index":894,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["datafromrouter",{"_index":809,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["datainput",{"_index":1081,"title":{"classes/DataInput.html":{}},"body":{"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{}}}],["datainput:14",{"_index":1126,"title":{},"body":{"classes/DataInputCheck.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{}}}],["datainput:15",{"_index":1128,"title":{},"body":{"classes/DataInputCheck.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{}}}],["datainput:16",{"_index":1129,"title":{},"body":{"classes/DataInputCheck.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{}}}],["datainput:17",{"_index":1125,"title":{},"body":{"classes/DataInputCheck.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{}}}],["datainput:18",{"_index":1124,"title":{},"body":{"classes/DataInputCheck.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{}}}],["datainput:19",{"_index":1127,"title":{},"body":{"classes/DataInputCheck.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{}}}],["datainputcheck",{"_index":1108,"title":{"classes/DataInputCheck.html":{}},"body":{"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{}}}],["datainputcomponent",{"_index":176,"title":{"components/DataInputComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"overview.html":{}}}],["datainputcomponet",{"_index":1085,"title":{},"body":{"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{}}}],["datainputelement",{"_index":1097,"title":{"classes/DataInputElement.html":{}},"body":{"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"components/HomeComponent.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{}}}],["datainputelement.element",{"_index":1330,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["datainputreturned",{"_index":1115,"title":{"classes/DataInputReturned.html":{}},"body":{"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"components/HomeComponent.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{}}}],["datainputreturned(val",{"_index":1289,"title":{},"body":{"components/DataInputV2Component.html":{},"components/HomeComponent.html":{}}}],["datainputreturnedv2",{"_index":1208,"title":{"classes/DataInputReturnedV2.html":{}},"body":{"classes/DataInputReturnedV2.html":{},"components/DataInputV2Component.html":{}}}],["datainputselection",{"_index":1102,"title":{"classes/DataInputSelection.html":{}},"body":{"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{}}}],["datainputtext",{"_index":1100,"title":{"classes/DataInputText.html":{}},"body":{"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{}}}],["datainputtype",{"_index":1179,"title":{},"body":{"components/DataInputComponent.html":{}}}],["datainputtypev2",{"_index":1306,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["datainputv2",{"_index":1210,"title":{},"body":{"classes/DataInputReturnedV2.html":{}}}],["datainputv2component",{"_index":179,"title":{"components/DataInputV2Component.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"overview.html":{}}}],["datainputv2componet",{"_index":1211,"title":{},"body":{"classes/DataInputReturnedV2.html":{}}}],["dataitemcomponent",{"_index":182,"title":{"components/DataItemComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"overview.html":{}}}],["datamodal",{"_index":2029,"title":{},"body":{"components/HomeComponent.html":{}}}],["dataroutecomposer",{"_index":860,"title":{"classes/DataRouteComposer.html":{}},"body":{"components/ComposerComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"components/HomeComponent.html":{},"components/VisualizerComponent.html":{}}}],["dataroutevisualizer",{"_index":1452,"title":{"classes/DataRouteVisualizer.html":{}},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"components/HomeComponent.html":{},"components/VisualizerComponent.html":{}}}],["datasubmitted",{"_index":1151,"title":{},"body":{"components/DataInputComponent.html":{}}}],["dati",{"_index":802,"title":{},"body":{"components/ComposerComponent.html":{},"classes/ConstraintsMSD.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"components/HomeComponent.html":{},"classes/HostNode.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/MirroringModuleInstanceNode.html":{},"injectables/ModalService.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkNode.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"injectables/StorageService.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"components/VisualizerComponent.html":{},"miscellaneous/functions.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["dato",{"_index":1084,"title":{},"body":{"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"components/HomeComponent.html":{},"classes/ModalButton.html":{},"classes/ModalItem.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{},"miscellaneous/functions.html":{}}}],["dc3545",{"_index":2168,"title":{},"body":{"components/HomeComponent.html":{}}}],["declarations",{"_index":341,"title":{},"body":{"modules/AppModule.html":{}}}],["declared",{"_index":3006,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["decoration",{"_index":1339,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["decorators",{"_index":2074,"title":{},"body":{"components/HomeComponent.html":{}}}],["dedicata",{"_index":126,"title":{},"body":{"components/AppComponent.html":{}}}],["dedotte",{"_index":1660,"title":{},"body":{"classes/ExportModule.html":{},"classes/ExportTheater.html":{}}}],["default",{"_index":528,"title":{},"body":{"classes/AreaDTO.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"injectables/ModalService.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"components/SubnetComponent.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TypesCatalogueDTO.html":{},"components/VisualizerComponent.html":{}}}],["definiti",{"_index":3184,"title":{},"body":{"classes/PerseDataForTheaterComposer.html":{}}}],["definito",{"_index":21,"title":{},"body":{"classes/Aoption.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"injectables/AttachmentsService.html":{},"injectables/AuthGuard.html":{},"classes/BlueprintFileDTO.html":{},"classes/BorderNetworkDTO.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"components/ControlTemplate.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputReturnedV2.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/DeployInstanceDTO.html":{},"components/DocsComponent.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"classes/FlavorApplication.html":{},"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"injectables/FlavorService.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"classes/HostModuleDTO.html":{},"classes/HostNode.html":{},"classes/HostPortModuleDTO.html":{},"components/HowToUseComponent.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModalButton.html":{},"components/ModalComponent.html":{},"classes/ModalItem.html":{},"injectables/ModalService.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"injectables/ModuleService.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"classes/NameMappingDTO.html":{},"components/NavbarComponent.html":{},"classes/NavbarElement.html":{},"components/NavbarElementComponent.html":{},"classes/NavbarItem.html":{},"classes/NetOSRouterDTO.html":{},"components/NetworkComponent.html":{},"classes/NetworkDTO.html":{},"classes/NetworkNode.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/NodeTopologyElement.html":{},"components/OffcanvasComponent.html":{},"classes/PageableDTO.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SelectOption.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/SingleDataInputReturned.html":{},"classes/SortDTO.html":{},"classes/SourceExport.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"classes/StatisticItemDTO.html":{},"injectables/StorageService.html":{},"components/SubnetComponent.html":{},"classes/SubnetDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"components/TabnavComponent.html":{},"classes/TabnavElement.html":{},"classes/TabnavItem.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"injectables/TheaterService.html":{},"classes/TheaterSimpleData.html":{},"classes/TheatreStatusDTO.html":{},"injectables/TokenService.html":{},"classes/TopologyElement.html":{},"classes/TypesCatalogueDTO.html":{},"components/UnderbarComponent.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["degli",{"_index":1599,"title":{},"body":{"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"components/HomeComponent.html":{},"classes/HostModuleDTO.html":{},"classes/HostPortModuleDTO.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["dei",{"_index":501,"title":{},"body":{"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"classes/BlueprintFileDTO.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/DeployInstanceDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"classes/HostNode.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/MirroringModuleInstanceNode.html":{},"components/ModalComponent.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"classes/NameMappingDTO.html":{},"components/NavbarComponent.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkNode.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/SourceExport.html":{},"classes/StatisticItemDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"components/TabnavComponent.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterDTO.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/TheaterSimpleData.html":{},"classes/TheatreStatusDTO.html":{},"classes/TypesCatalogueDTO.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"components/VisualizerComponent.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["del",{"_index":444,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"components/ControlTemplate.html":{},"components/DataInputV2Component.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"classes/FlavorApplication.html":{},"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"classes/HostNode.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/MirroringModuleInstanceNode.html":{},"components/ModalComponent.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"interfaces/ModuleTopology.html":{},"components/NavbarComponent.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkNode.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/NodeTopologyElement.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/SourceExport.html":{},"classes/StatisticItemDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"components/TabnavComponent.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterApplication.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/TheaterSimpleData.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/TypesCatalogueDTO.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{},"classes/_Control.html":{},"miscellaneous/functions.html":{}}}],["delete",{"_index":2975,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["deleted",{"_index":371,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["dell",{"_index":1543,"title":{},"body":{"components/DocsComponent.html":{}}}],["dell'applicazione",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{}}}],["dell'editor",{"_index":1645,"title":{},"body":{"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"classes/PerseDataForModuleVisualizer.html":{}}}],["dell'elemento",{"_index":1273,"title":{},"body":{"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"components/HomeComponent.html":{}}}],["dell'evento",{"_index":2408,"title":{},"body":{"classes/ModalButton.html":{},"classes/ModalItem.html":{}}}],["dell'hide",{"_index":2434,"title":{},"body":{"components/ModalComponent.html":{},"components/OffcanvasComponent.html":{}}}],["dell'host",{"_index":1005,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/ExportModule.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["dell'input",{"_index":1941,"title":{},"body":{"injectables/FileService.html":{}}}],["dell'inserimento",{"_index":2084,"title":{},"body":{"components/HomeComponent.html":{}}}],["dell'ip",{"_index":1445,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["dell'istanza",{"_index":587,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["dell'offcanvas",{"_index":2801,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["dell'oggetto",{"_index":1356,"title":{},"body":{"components/DataItemComponent.html":{}}}],["dell'underbar",{"_index":3703,"title":{},"body":{"components/UnderbarComponent.html":{}}}],["dell'upload",{"_index":2053,"title":{},"body":{"components/HomeComponent.html":{}}}],["dell'utente",{"_index":2481,"title":{},"body":{"injectables/ModalService.html":{}}}],["della",{"_index":47,"title":{},"body":{"classes/Aoption.html":{},"components/AppComponent.html":{},"components/ComposerComponent.html":{},"classes/ConstraintsMSD.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputReturnedV2.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"components/DocsComponent.html":{},"classes/ExportModule.html":{},"components/HomeComponent.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"components/NavbarComponent.html":{},"classes/NavbarElement.html":{},"components/NavbarElementComponent.html":{},"classes/NavbarItem.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"components/TabnavComponent.html":{},"injectables/TokenService.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"components/VisualizerComponent.html":{}}}],["delle",{"_index":1011,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"components/HomeComponent.html":{},"classes/HostNode.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/MirroringModuleInstanceNode.html":{},"injectables/ModalService.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkNode.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"injectables/TokenService.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["dello",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"injectables/StorageService.html":{}}}],["dependencies",{"_index":220,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dependes_on",{"_index":1755,"title":{},"body":{"classes/ExportModule.html":{}}}],["depends_on",{"_index":1676,"title":{},"body":{"classes/ExportModule.html":{}}}],["deploy",{"_index":750,"title":{},"body":{"classes/BlueprintFileDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/NameMappingDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TheaterDTO.html":{},"classes/TheatreStatusDTO.html":{}}}],["deployinstancedto",{"_index":751,"title":{"classes/DeployInstanceDTO.html":{}},"body":{"classes/BlueprintFileDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/NameMappingDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TheaterDTO.html":{},"classes/TheatreStatusDTO.html":{}}}],["deploymentsequence",{"_index":769,"title":{},"body":{"classes/BlueprintFileDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/NameMappingDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheatreStatusDTO.html":{}}}],["deps",{"_index":339,"title":{},"body":{"modules/AppModule.html":{}}}],["depth",{"_index":3324,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["description",{"_index":372,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"classes/BlueprintFileDTO.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/DeployInstanceDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"classes/NameMappingDTO.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/SourceExport.html":{},"classes/StatisticItemDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/TheaterSimpleData.html":{},"classes/TheatreStatusDTO.html":{},"classes/TypesCatalogueDTO.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{},"classes/reteBasicModuleInfo.html":{}}}],["descriptioncode",{"_index":544,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["descrittiva",{"_index":1456,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["descrizione",{"_index":7,"title":{},"body":{"classes/Aoption.html":{},"components/AppComponent.html":{},"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"classes/BlueprintFileDTO.html":{},"classes/BorderNetworkDTO.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"components/ControlTemplate.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputReturnedV2.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/DeployInstanceDTO.html":{},"components/DocsComponent.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"classes/HostModuleDTO.html":{},"classes/HostNode.html":{},"classes/HostPortModuleDTO.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModalButton.html":{},"components/ModalComponent.html":{},"classes/ModalItem.html":{},"injectables/ModalService.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"classes/NameMappingDTO.html":{},"components/NavbarComponent.html":{},"classes/NavbarElement.html":{},"components/NavbarElementComponent.html":{},"classes/NavbarItem.html":{},"classes/NetOSRouterDTO.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkDTO.html":{},"classes/NetworkNode.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"components/OffcanvasComponent.html":{},"classes/PageableDTO.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SelectOption.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/SingleDataInputReturned.html":{},"classes/SortDTO.html":{},"classes/SourceExport.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"classes/StatisticItemDTO.html":{},"injectables/StorageService.html":{},"classes/SubnetDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"components/TabnavComponent.html":{},"classes/TabnavElement.html":{},"classes/TabnavItem.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterDTO.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/TheaterSimpleData.html":{},"classes/TheatreStatusDTO.html":{},"injectables/TokenService.html":{},"classes/TypesCatalogueDTO.html":{},"components/UnderbarComponent.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{},"classes/_Control.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["design",{"_index":853,"title":{},"body":{"components/ComposerComponent.html":{},"components/HomeComponent.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["designer",{"_index":937,"title":{},"body":{"components/ComposerComponent.html":{},"components/HomeComponent.html":{}}}],["designer/visualize",{"_index":2043,"title":{},"body":{"components/HomeComponent.html":{}}}],["destra",{"_index":2782,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["destroyed",{"_index":2277,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["destroyed(node",{"_index":2297,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["detailjson",{"_index":1992,"title":{},"body":{"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{}}}],["detailproperties",{"_index":571,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["determinate",{"_index":1275,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["determinati",{"_index":1351,"title":{},"body":{"components/DataItemComponent.html":{}}}],["determinato",{"_index":1223,"title":{},"body":{"components/DataInputV2Component.html":{},"injectables/ModalService.html":{}}}],["dettagli",{"_index":2918,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["dettaglio",{"_index":3143,"title":{},"body":{"classes/PerseDataForModuleVisualizer.html":{}}}],["dev",{"_index":3887,"title":{},"body":{"index.html":{}}}],["deve",{"_index":596,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/ExportModule.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["development",{"_index":3884,"title":{},"body":{"index.html":{}}}],["devono",{"_index":623,"title":{},"body":{"classes/AreaExport.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"components/HomeComponent.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/SourceExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["dhcp",{"_index":3469,"title":{},"body":{"components/SubnetComponent.html":{}}}],["di",{"_index":487,"title":{},"body":{"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"classes/BlueprintFileDTO.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"components/ControlTemplate.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputReturnedV2.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/DeployInstanceDTO.html":{},"components/DocsComponent.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"classes/HostNode.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModalButton.html":{},"components/ModalComponent.html":{},"classes/ModalItem.html":{},"injectables/ModalService.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"classes/NameMappingDTO.html":{},"components/NavbarComponent.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkNode.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"components/OffcanvasComponent.html":{},"classes/PageableDTO.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SelectOption.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/SingleDataInputReturned.html":{},"classes/SortDTO.html":{},"classes/SourceExport.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"classes/StatisticItemDTO.html":{},"injectables/StorageService.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterDTO.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/TheaterSimpleData.html":{},"classes/TheatreStatusDTO.html":{},"injectables/TokenService.html":{},"classes/TypesCatalogueDTO.html":{},"components/UnderbarComponent.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{},"miscellaneous/functions.html":{}}}],["dichiarata",{"_index":2326,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"miscellaneous/functions.html":{}}}],["dichiarazioni",{"_index":237,"title":{},"body":{"modules/AppModule.html":{}}}],["dipendenza",{"_index":550,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["direct",{"_index":1245,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["directchange",{"_index":1237,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["directives",{"_index":216,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":3895,"title":{},"body":{"index.html":{}}}],["directory",{"_index":3900,"title":{},"body":{"index.html":{}}}],["direttamente",{"_index":451,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"components/DataInputV2Component.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"classes/FlavorApplication.html":{},"injectables/ModalService.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["direttive",{"_index":167,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["diretto",{"_index":1283,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["disk",{"_index":1974,"title":{},"body":{"classes/FlavorApplication.html":{},"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"components/HostComponent.html":{},"classes/HostNode.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/ReteHostInfo.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{}}}],["display",{"_index":1561,"title":{},"body":{"components/DocsComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["display_name",{"_index":759,"title":{},"body":{"classes/BlueprintFileDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/NameMappingDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TheaterDTO.html":{},"classes/TheatreStatusDTO.html":{}}}],["displayed",{"_index":1556,"title":{},"body":{"components/DocsComponent.html":{}}}],["displayer",{"_index":215,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["disponibile",{"_index":1878,"title":{},"body":{"classes/ExportTheater.html":{},"modules.html":{}}}],["disponibili",{"_index":1141,"title":{},"body":{"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["dist",{"_index":3899,"title":{},"body":{"index.html":{}}}],["div",{"_index":1404,"title":{},"body":{"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/NetworkComponent.html":{}}}],["diverga",{"_index":2876,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["diverse",{"_index":3425,"title":{},"body":{"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{}}}],["diversi",{"_index":1136,"title":{},"body":{"components/DataInputComponent.html":{},"components/UnderbarComponent.html":{}}}],["dizionario",{"_index":880,"title":{},"body":{"components/ComposerComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["dns",{"_index":790,"title":{},"body":{"classes/BorderNetworkDTO.html":{},"classes/NetOSRouterDTO.html":{},"classes/NetworkDTO.html":{},"classes/SubnetDTO.html":{}}}],["dobootstrap",{"_index":257,"title":{},"body":{"modules/AppModule.html":{}}}],["dock",{"_index":3279,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"dependencies.html":{}}}],["dockplugin",{"_index":3278,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{}}}],["docs",{"_index":1525,"title":{},"body":{"components/DocsComponent.html":{}}}],["docs'},{'name",{"_index":186,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["docs.component.html",{"_index":1527,"title":{},"body":{"components/DocsComponent.html":{}}}],["docs.component.sass",{"_index":1526,"title":{},"body":{"components/DocsComponent.html":{}}}],["docscomponent",{"_index":185,"title":{"components/DocsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"overview.html":{}}}],["document.body.appendchild(a",{"_index":690,"title":{},"body":{"injectables/AttachmentsService.html":{}}}],["document.body.style.background",{"_index":143,"title":{},"body":{"components/AppComponent.html":{}}}],["document.body.style.overflow",{"_index":139,"title":{},"body":{"components/AppComponent.html":{}}}],["document.createelement('a",{"_index":689,"title":{},"body":{"injectables/AttachmentsService.html":{}}}],["document.getelementbyid(el.id",{"_index":1188,"title":{},"body":{"components/DataInputComponent.html":{},"components/NavbarComponent.html":{}}}],["documentation",{"_index":363,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/NavbarElementComponent.html":{}}}],["documentazione",{"_index":1521,"title":{},"body":{"components/DocsComponent.html":{}}}],["doesn't",{"_index":2969,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["dom",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["domsanitizer",{"_index":1531,"title":{},"body":{"components/DocsComponent.html":{}}}],["dopo",{"_index":1725,"title":{},"body":{"classes/ExportModule.html":{},"components/HomeComponent.html":{}}}],["dovesse",{"_index":1843,"title":{},"body":{"injectables/ExportService.html":{},"injectables/FileService.html":{}}}],["dovute",{"_index":3847,"title":{},"body":{"miscellaneous/functions.html":{}}}],["dovuti",{"_index":3249,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["down",{"_index":1397,"title":{},"body":{"components/DataItemComponent.html":{},"components/NavbarElementComponent.html":{},"components/OffcanvasComponent.html":{}}}],["down:hover",{"_index":2719,"title":{},"body":{"components/NavbarElementComponent.html":{}}}],["download",{"_index":3855,"title":{},"body":{"miscellaneous/functions.html":{}}}],["dsl_definition",{"_index":977,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["due",{"_index":2485,"title":{},"body":{"injectables/ModalService.html":{}}}],["duplicated",{"_index":3715,"title":{},"body":{"components/UnderbarComponent.html":{}}}],["dx",{"_index":2803,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["dynamic",{"_index":3321,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"dependencies.html":{}}}],["e",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaExport.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"classes/FlavorApplication.html":{},"components/HomeComponent.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceSimpleData.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesTSD.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/SourceExport.html":{},"classes/TagsExport.html":{},"classes/TheaterApplication.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"components/VisualizerComponent.html":{},"index.html":{}}}],["e.required",{"_index":1182,"title":{},"body":{"components/DataInputComponent.html":{}}}],["e2e",{"_index":3910,"title":{},"body":{"index.html":{}}}],["ed",{"_index":2857,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["edito",{"_index":3258,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["editor",{"_index":1606,"title":{},"body":{"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"injectables/ExportService.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["editor).convertmodule",{"_index":1857,"title":{},"body":{"injectables/ExportService.html":{}}}],["editor).converttheater",{"_index":1861,"title":{},"body":{"injectables/ExportService.html":{}}}],["editoruse",{"_index":3256,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["editoruse_simple",{"_index":3328,"title":{},"body":{"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["effettivo",{"_index":3856,"title":{},"body":{"miscellaneous/functions.html":{}}}],["el",{"_index":149,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/DataInputComponent.html":{},"components/NavbarComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["el.a_option",{"_index":2695,"title":{},"body":{"components/NavbarComponent.html":{}}}],["el.a_option.foreach",{"_index":2696,"title":{},"body":{"components/NavbarComponent.html":{}}}],["el.element.foreach(e",{"_index":3712,"title":{},"body":{"components/UnderbarComponent.html":{}}}],["el.id",{"_index":1191,"title":{},"body":{"components/DataInputComponent.html":{}}}],["el.show",{"_index":151,"title":{},"body":{"components/AppComponent.html":{}}}],["el.text",{"_index":153,"title":{},"body":{"components/AppComponent.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{}}}],["el.type",{"_index":1189,"title":{},"body":{"components/DataInputComponent.html":{}}}],["el.value",{"_index":1335,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["elaborare",{"_index":1175,"title":{},"body":{"components/DataInputComponent.html":{}}}],["element",{"_index":41,"title":{},"body":{"classes/Aoption.html":{},"components/ComposerComponent.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"components/HomeComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"classes/NavbarElement.html":{},"components/NavbarElementComponent.html":{},"classes/NavbarItem.html":{},"components/OffcanvasComponent.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{},"components/TabnavComponent.html":{},"classes/TabnavElement.html":{},"classes/TabnavItem.html":{},"components/UnderbarComponent.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{}}}],["element'},{'name",{"_index":197,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["element.component",{"_index":310,"title":{},"body":{"modules/AppModule.html":{}}}],["element.component.css",{"_index":2709,"title":{},"body":{"components/NavbarElementComponent.html":{}}}],["element.component.html",{"_index":2710,"title":{},"body":{"components/NavbarElementComponent.html":{}}}],["element.component.ts",{"_index":2707,"title":{},"body":{"components/NavbarElementComponent.html":{}}}],["element.component.ts:11",{"_index":2711,"title":{},"body":{"components/NavbarElementComponent.html":{}}}],["element.data.type",{"_index":1711,"title":{},"body":{"classes/ExportModule.html":{}}}],["element.text_content",{"_index":2459,"title":{},"body":{"components/ModalComponent.html":{}}}],["element.title",{"_index":2457,"title":{},"body":{"components/ModalComponent.html":{}}}],["element.type",{"_index":2701,"title":{},"body":{"components/NavbarComponent.html":{}}}],["element/navbar",{"_index":309,"title":{},"body":{"modules/AppModule.html":{},"components/NavbarElementComponent.html":{}}}],["elementdto",{"_index":498,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["elementi",{"_index":1137,"title":{},"body":{"components/DataInputComponent.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"components/UnderbarComponent.html":{},"index.html":{}}}],["elementintotheaterdto",{"_index":600,"title":{"classes/ElementIntoTheaterDTO.html":{}},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["elemento",{"_index":27,"title":{},"body":{"classes/Aoption.html":{},"components/AppComponent.html":{},"classes/AreaDTO.html":{},"classes/BlueprintFileDTO.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"components/ControlTemplate.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/DeployInstanceDTO.html":{},"components/DocsComponent.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/ModalButton.html":{},"components/ModalComponent.html":{},"classes/ModalItem.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/NameMappingDTO.html":{},"components/NavbarComponent.html":{},"classes/NavbarElement.html":{},"components/NavbarElementComponent.html":{},"classes/NavbarItem.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/SelectOption.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/SingleDataInputReturned.html":{},"classes/StatisticItemDTO.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"classes/TabnavElement.html":{},"classes/TabnavItem.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterDTO.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheatreStatusDTO.html":{},"classes/TypesCatalogueDTO.html":{},"components/UnderbarComponent.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["elements",{"_index":468,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["elements[host_name",{"_index":3030,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["elements[host_name].output.push(port_name",{"_index":3056,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["elements[moduleinstancename",{"_index":3012,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["elements[network_name",{"_index":3051,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["elements[network_name].input.push(subnet_name",{"_index":3055,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["elements[subnet_name",{"_index":3044,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["elements[subnet_name].output.push(network_name",{"_index":3049,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["elimina",{"_index":1381,"title":{},"body":{"components/DataItemComponent.html":{}}}],["eliminazione",{"_index":1386,"title":{},"body":{"components/DataItemComponent.html":{}}}],["ellipsis",{"_index":1412,"title":{},"body":{"components/DataItemComponent.html":{},"components/OffcanvasComponent.html":{}}}],["embedded",{"_index":1555,"title":{},"body":{"components/DocsComponent.html":{}}}],["emette",{"_index":1384,"title":{},"body":{"components/DataItemComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/OffcanvasComponent.html":{},"components/UnderbarComponent.html":{}}}],["emettere",{"_index":1172,"title":{},"body":{"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{}}}],["emitter",{"_index":1053,"title":{},"body":{"components/ControlTemplate.html":{},"components/ModalComponent.html":{},"classes/_Control.html":{}}}],["empty",{"_index":513,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/NetworkNode.html":{},"classes/PageableDTO.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/SortDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/SubnetNode.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/TypesCatalogueDTO.html":{},"miscellaneous/functions.html":{}}}],["emptymoduleinfo",{"_index":1575,"title":{"classes/EmptyModuleInfo.html":{}},"body":{"classes/EmptyModuleInfo.html":{}}}],["emptynodeinfo",{"_index":1611,"title":{"classes/EmptyNodeInfo.html":{}},"body":{"classes/EmptyNodeInfo.html":{}}}],["enable_dhcp",{"_index":1018,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/ExportModule.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["end",{"_index":2249,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"index.html":{}}}],["endpage",{"_index":2656,"title":{},"body":{"injectables/ModuleService.html":{}}}],["ends",{"_index":2129,"title":{},"body":{"components/HomeComponent.html":{}}}],["engine",{"_index":3254,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["entitynamemappingfile",{"_index":772,"title":{},"body":{"classes/BlueprintFileDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/NameMappingDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheatreStatusDTO.html":{}}}],["entitynamemappingfiledto",{"_index":764,"title":{"classes/EntityNameMappingFileDTO.html":{}},"body":{"classes/BlueprintFileDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/NameMappingDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheatreStatusDTO.html":{}}}],["entrycomponents",{"_index":238,"title":{},"body":{"modules/AppModule.html":{}}}],["enum",{"_index":1428,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{}}}],["enummoduletype",{"_index":1458,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["enummoduletype.mirroringmoduleinstance",{"_index":2404,"title":{},"body":{"classes/MirroringModuleInstanceNode.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{}}}],["enummoduletype.theaterinternalservicemoduleinstance",{"_index":3358,"title":{},"body":{"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{}}}],["enummoduletype.theatermoduleinstance",{"_index":3362,"title":{},"body":{"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["enummoduletypedescription",{"_index":1468,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["enumnodetype",{"_index":1453,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/ExportModule.html":{},"components/HostComponent.html":{},"classes/HostNode.html":{},"components/NetworkComponent.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"components/SubnetComponent.html":{},"classes/SubnetNode.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["enumnodetype.host",{"_index":1712,"title":{},"body":{"classes/ExportModule.html":{},"classes/HostNode.html":{},"classes/ReteHostInfo.html":{}}}],["enumnodetype.network",{"_index":1717,"title":{},"body":{"classes/ExportModule.html":{},"classes/NetworkNode.html":{},"classes/ReteNetworkInfo.html":{}}}],["enumnodetype.subnet",{"_index":1715,"title":{},"body":{"classes/ExportModule.html":{},"classes/ReteSubnetInfo.html":{},"classes/SubnetNode.html":{}}}],["enumnodetypedescription",{"_index":1457,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["environment",{"_index":326,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AttachmentsService.html":{},"injectables/FlavorService.html":{},"injectables/ModuleService.html":{},"injectables/ParseService.html":{},"injectables/TheaterService.html":{}}}],["environment.getallflavor",{"_index":2007,"title":{},"body":{"injectables/FlavorService.html":{}}}],["environment.getallflavor+'/'+id",{"_index":2015,"title":{},"body":{"injectables/FlavorService.html":{}}}],["environment.getallmodules",{"_index":2654,"title":{},"body":{"injectables/ModuleService.html":{}}}],["environment.getmoduleattachment(module_id",{"_index":677,"title":{},"body":{"injectables/AttachmentsService.html":{}}}],["environment.getmoduleinterfacesbymoduleid",{"_index":2660,"title":{},"body":{"injectables/ModuleService.html":{}}}],["environment.getmoduleshostsbytheateruuid",{"_index":2658,"title":{},"body":{"injectables/ModuleService.html":{}}}],["environment.gettheaterattachment(theater_id",{"_index":699,"title":{},"body":{"injectables/AttachmentsService.html":{}}}],["environment.gettheaterbyid",{"_index":3644,"title":{},"body":{"injectables/TheaterService.html":{}}}],["environment.gettheatermodulesbyuuid",{"_index":3646,"title":{},"body":{"injectables/TheaterService.html":{}}}],["environment.gmhhost",{"_index":2659,"title":{},"body":{"injectables/ModuleService.html":{}}}],["environment.mocked",{"_index":334,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/ParseService.html":{}}}],["eport",{"_index":1816,"title":{},"body":{"injectables/ExportService.html":{}}}],["ereditato",{"_index":375,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/DataInputCheck.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"classes/FlavorApplication.html":{},"classes/FlavorDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstance.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"classes/reteBasicModuleInfo.html":{}}}],["error",{"_index":352,"title":{},"body":{"modules/AppModule.html":{},"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DocsComponent.html":{},"classes/ElementIntoTheaterDTO.html":{},"injectables/FileService.html":{},"injectables/FlavorService.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"injectables/ModuleService.html":{},"classes/ModuleStatusDTO.html":{},"classes/SelectOption.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/SingleDataInputReturned.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"injectables/TheaterService.html":{},"classes/TypesCatalogueDTO.html":{}}}],["errore",{"_index":876,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["esclusiva",{"_index":455,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["esclusivamente",{"_index":2477,"title":{},"body":{"injectables/ModalService.html":{}}}],["esegue",{"_index":827,"title":{},"body":{"components/ComposerComponent.html":{},"components/DataInputComponent.html":{},"components/DataItemComponent.html":{},"injectables/ExportService.html":{},"components/HomeComponent.html":{},"components/ModalComponent.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"components/VisualizerComponent.html":{},"miscellaneous/functions.html":{}}}],["eseguire",{"_index":1276,"title":{},"body":{"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"components/DocsComponent.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"injectables/ModalService.html":{},"classes/NetworkNode.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"miscellaneous/functions.html":{}}}],["esporta",{"_index":2971,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["esportare",{"_index":2880,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["esposte",{"_index":577,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["espresse",{"_index":1477,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["essa",{"_index":1249,"title":{},"body":{"components/DataInputV2Component.html":{},"injectables/ExportService.html":{},"injectables/FileService.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"injectables/ModalService.html":{},"classes/NetworkNode.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"miscellaneous/functions.html":{}}}],["esserci",{"_index":624,"title":{},"body":{"classes/AreaExport.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"components/HomeComponent.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/SourceExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["essere",{"_index":597,"title":{},"body":{"classes/AreaDTO.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"classes/GenericParameterDTO.html":{},"injectables/ModalService.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"components/TabnavComponent.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{},"components/VisualizerComponent.html":{}}}],["esso",{"_index":1802,"title":{},"body":{"classes/ExportModule.html":{},"classes/ModalButton.html":{},"classes/ModalItem.html":{},"classes/PerseDataForModuleVisualizer.html":{}}}],["estende",{"_index":1099,"title":{},"body":{"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{}}}],["event",{"_index":1194,"title":{},"body":{"components/DataInputComponent.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"components/UnderbarComponent.html":{}}}],["event.d.ts",{"_index":3880,"title":{},"body":{"index.html":{}}}],["event.target.files[0",{"_index":1947,"title":{},"body":{"injectables/FileService.html":{}}}],["eventemitter",{"_index":1156,"title":{},"body":{"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/OffcanvasComponent.html":{},"components/UnderbarComponent.html":{}}}],["example",{"_index":1853,"title":{},"body":{"injectables/ExportService.html":{},"injectables/FileService.html":{}}}],["execute",{"_index":3908,"title":{},"body":{"index.html":{}}}],["exists",{"_index":3004,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["exit",{"_index":1148,"title":{},"body":{"components/DataInputComponent.html":{}}}],["exitstatus",{"_index":1119,"title":{},"body":{"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{}}}],["expectedinstancetype",{"_index":524,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["export",{"_index":34,"title":{},"body":{"classes/Aoption.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"injectables/AttachmentsService.html":{},"injectables/AuthGuard.html":{},"classes/BlueprintFileDTO.html":{},"classes/BorderNetworkDTO.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"components/ControlTemplate.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputReturnedV2.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/DeployInstanceDTO.html":{},"components/DocsComponent.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"classes/FlavorApplication.html":{},"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"injectables/FlavorService.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"classes/HostModuleDTO.html":{},"classes/HostNode.html":{},"classes/HostPortModuleDTO.html":{},"components/HowToUseComponent.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModalButton.html":{},"components/ModalComponent.html":{},"classes/ModalItem.html":{},"injectables/ModalService.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"injectables/ModuleService.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"interfaces/ModuleTopology.html":{},"classes/NameMappingDTO.html":{},"components/NavbarComponent.html":{},"classes/NavbarElement.html":{},"components/NavbarElementComponent.html":{},"classes/NavbarItem.html":{},"classes/NetOSRouterDTO.html":{},"components/NetworkComponent.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkDTO.html":{},"classes/NetworkNode.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/NodeTopologyElement.html":{},"components/OffcanvasComponent.html":{},"classes/PageableDTO.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SelectOption.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/SingleDataInputReturned.html":{},"classes/SortDTO.html":{},"classes/SourceExport.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"classes/StatisticItemDTO.html":{},"injectables/StorageService.html":{},"components/SubnetComponent.html":{},"classes/SubnetDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"components/TabnavComponent.html":{},"classes/TabnavElement.html":{},"classes/TabnavItem.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"injectables/TheaterService.html":{},"classes/TheaterSimpleData.html":{},"interfaces/TheaterTopology.html":{},"classes/TheatreStatusDTO.html":{},"injectables/TokenService.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/TypesCatalogueDTO.html":{},"components/UnderbarComponent.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["exportmodule",{"_index":1629,"title":{"classes/ExportModule.html":{}},"body":{"classes/ExportModule.html":{},"injectables/ExportService.html":{}}}],["exportmodule(module",{"_index":1856,"title":{},"body":{"injectables/ExportService.html":{}}}],["exportmoduletojson",{"_index":1822,"title":{},"body":{"injectables/ExportService.html":{}}}],["exportmoduletojson(module",{"_index":1827,"title":{},"body":{"injectables/ExportService.html":{}}}],["exportmoduletoyaml",{"_index":1823,"title":{},"body":{"injectables/ExportService.html":{}}}],["exportmoduletoyaml(module",{"_index":1831,"title":{},"body":{"injectables/ExportService.html":{}}}],["exports",{"_index":241,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["exportservice",{"_index":1813,"title":{"injectables/ExportService.html":{}},"body":{"injectables/ExportService.html":{}}}],["exporttheater",{"_index":1839,"title":{"classes/ExportTheater.html":{}},"body":{"injectables/ExportService.html":{},"classes/ExportTheater.html":{}}}],["exporttheater(theater",{"_index":1860,"title":{},"body":{"injectables/ExportService.html":{}}}],["exporttheatertojson",{"_index":1824,"title":{},"body":{"injectables/ExportService.html":{}}}],["exporttheatertojson(theater",{"_index":1835,"title":{},"body":{"injectables/ExportService.html":{}}}],["exporttheatertoyaml",{"_index":1825,"title":{},"body":{"injectables/ExportService.html":{}}}],["exporttheatertoyaml(theater",{"_index":1837,"title":{},"body":{"injectables/ExportService.html":{}}}],["exportto",{"_index":1852,"title":{},"body":{"injectables/ExportService.html":{}}}],["exporttojson",{"_index":1830,"title":{},"body":{"injectables/ExportService.html":{},"miscellaneous/functions.html":{}}}],["exporttojson(fn",{"_index":3853,"title":{},"body":{"miscellaneous/functions.html":{}}}],["exporttojson(module.name+this.moduletype",{"_index":1859,"title":{},"body":{"injectables/ExportService.html":{}}}],["exporttojson(theater.name+this.theatertype",{"_index":1863,"title":{},"body":{"injectables/ExportService.html":{}}}],["exporttoyaml",{"_index":1834,"title":{},"body":{"injectables/ExportService.html":{},"miscellaneous/functions.html":{}}}],["exporttoyaml(fn",{"_index":3858,"title":{},"body":{"miscellaneous/functions.html":{}}}],["exporttoyaml(module.name",{"_index":1858,"title":{},"body":{"injectables/ExportService.html":{}}}],["exporttoyaml(theater.name",{"_index":1862,"title":{},"body":{"injectables/ExportService.html":{}}}],["extends",{"_index":369,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"injectables/AuthGuard.html":{},"interfaces/CommonModule.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"components/ControlTemplate.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/FlavorApplication.html":{},"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"classes/GenericParameterDTO.html":{},"components/HostComponent.html":{},"classes/HostNode.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"interfaces/ModuleTopology.html":{},"components/NetworkComponent.html":{},"classes/NetworkNode.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SelectOption.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/SingleDataInputReturned.html":{},"classes/StatisticItemDTO.html":{},"components/SubnetComponent.html":{},"classes/SubnetNode.html":{},"classes/TagTIP.html":{},"classes/TheaterApplication.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/TypesCatalogueDTO.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{},"classes/_Control.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["external",{"_index":1474,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"components/NetworkComponent.html":{}}}],["external_virtual_machine",{"_index":1501,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["externalinterfacename",{"_index":2762,"title":{},"body":{"classes/NetworkNode.html":{},"classes/ReteNetworkInfo.html":{}}}],["externalinterfacetype",{"_index":2763,"title":{},"body":{"classes/NetworkNode.html":{},"classes/ReteNetworkInfo.html":{}}}],["externalvirtualmachine",{"_index":1466,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/EmptyModuleInfo.html":{}}}],["f.cpu",{"_index":3115,"title":{},"body":{"classes/PerseDataForModuleComposer.html":{}}}],["f.disk",{"_index":3117,"title":{},"body":{"classes/PerseDataForModuleComposer.html":{}}}],["f.name",{"_index":3114,"title":{},"body":{"classes/PerseDataForModuleComposer.html":{}}}],["f.ram",{"_index":3116,"title":{},"body":{"classes/PerseDataForModuleComposer.html":{}}}],["f124",{"_index":2235,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["f9fafb24",{"_index":2111,"title":{},"body":{"components/HomeComponent.html":{}}}],["fa",{"_index":3111,"title":{},"body":{"classes/PerseDataForModuleComposer.html":{}}}],["fa.push",{"_index":3113,"title":{},"body":{"classes/PerseDataForModuleComposer.html":{}}}],["failed",{"_index":351,"title":{},"body":{"modules/AppModule.html":{}}}],["false",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"classes/ConstraintsMSD.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/ExportModule.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"components/NetworkComponent.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"components/OffcanvasComponent.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"components/TabnavComponent.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{}}}],["fam",{"_index":2245,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["family",{"_index":2244,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["fare",{"_index":2483,"title":{},"body":{"injectables/ModalService.html":{}}}],["farlo",{"_index":117,"title":{},"body":{"components/AppComponent.html":{}}}],["fase",{"_index":2284,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"injectables/ModalService.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["fatto",{"_index":1724,"title":{},"body":{"classes/ExportModule.html":{}}}],["fetch",{"_index":2896,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["fetching",{"_index":2856,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["ff0000",{"_index":2243,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["fff",{"_index":2175,"title":{},"body":{"components/HomeComponent.html":{}}}],["ffff",{"_index":1560,"title":{},"body":{"components/DocsComponent.html":{}}}],["ffffff5e",{"_index":2419,"title":{},"body":{"classes/ModalButton.html":{},"classes/ModalItem.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/Aoption.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"injectables/AttachmentsService.html":{},"injectables/AuthGuard.html":{},"classes/BlueprintFileDTO.html":{},"classes/BorderNetworkDTO.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"components/ControlTemplate.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputReturnedV2.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/DeployInstanceDTO.html":{},"components/DocsComponent.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"classes/FlavorApplication.html":{},"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"injectables/FlavorService.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"classes/HostModuleDTO.html":{},"classes/HostNode.html":{},"classes/HostPortModuleDTO.html":{},"components/HowToUseComponent.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModalButton.html":{},"components/ModalComponent.html":{},"classes/ModalItem.html":{},"injectables/ModalService.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"injectables/ModuleService.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"interfaces/ModuleTopology.html":{},"classes/NameMappingDTO.html":{},"components/NavbarComponent.html":{},"classes/NavbarElement.html":{},"components/NavbarElementComponent.html":{},"classes/NavbarItem.html":{},"classes/NetOSRouterDTO.html":{},"components/NetworkComponent.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkDTO.html":{},"classes/NetworkNode.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/NodeTopologyElement.html":{},"components/OffcanvasComponent.html":{},"classes/PageableDTO.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SelectOption.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/SingleDataInputReturned.html":{},"classes/SortDTO.html":{},"classes/SourceExport.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"classes/StatisticItemDTO.html":{},"injectables/StorageService.html":{},"components/SubnetComponent.html":{},"classes/SubnetDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"components/TabnavComponent.html":{},"classes/TabnavElement.html":{},"classes/TabnavItem.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"injectables/TheaterService.html":{},"classes/TheaterSimpleData.html":{},"interfaces/TheaterTopology.html":{},"classes/TheatreStatusDTO.html":{},"injectables/TokenService.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/TypesCatalogueDTO.html":{},"components/UnderbarComponent.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["file.name.includes(this.moduletype",{"_index":1971,"title":{},"body":{"injectables/FileService.html":{}}}],["file.name.includes(this.theatertype",{"_index":1969,"title":{},"body":{"injectables/FileService.html":{}}}],["file.type",{"_index":1967,"title":{},"body":{"injectables/FileService.html":{}}}],["filejson",{"_index":2030,"title":{},"body":{"components/HomeComponent.html":{}}}],["fileloaded",{"_index":2031,"title":{},"body":{"components/HomeComponent.html":{}}}],["filereader",{"_index":1948,"title":{},"body":{"injectables/FileService.html":{}}}],["filereader.onerror",{"_index":1964,"title":{},"body":{"injectables/FileService.html":{}}}],["filereader.onload",{"_index":1954,"title":{},"body":{"injectables/FileService.html":{}}}],["filereader.readastext(this.selectedfile",{"_index":1949,"title":{},"body":{"injectables/FileService.html":{}}}],["files",{"_index":3892,"title":{},"body":{"index.html":{}}}],["fileservice",{"_index":1918,"title":{"injectables/FileService.html":{}},"body":{"injectables/FileService.html":{},"components/HomeComponent.html":{}}}],["filtraggio",{"_index":836,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["findnode",{"_index":1636,"title":{},"body":{"classes/ExportModule.html":{}}}],["findnode(name",{"_index":1665,"title":{},"body":{"classes/ExportModule.html":{}}}],["first",{"_index":512,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"injectables/ModalService.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["fix",{"_index":2875,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["fixare",{"_index":2937,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["fixed_parameters",{"_index":535,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["fixtheatername",{"_index":2858,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["fixtheatername(rowtheater",{"_index":2873,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["flag",{"_index":3902,"title":{},"body":{"index.html":{}}}],["flavor",{"_index":810,"title":{},"body":{"components/ComposerComponent.html":{},"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{}}}],["flavorapplication",{"_index":478,"title":{"classes/FlavorApplication.html":{}},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["flavorbasicinfo",{"_index":398,"title":{"classes/FlavorBasicInfo.html":{}},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{}}}],["flavorbasicinfo:5",{"_index":1977,"title":{},"body":{"classes/FlavorApplication.html":{},"classes/FlavorDTO.html":{}}}],["flavorbasicinfo:6",{"_index":1978,"title":{},"body":{"classes/FlavorApplication.html":{},"classes/FlavorDTO.html":{}}}],["flavorbasicinfo:7",{"_index":1979,"title":{},"body":{"classes/FlavorApplication.html":{},"classes/FlavorDTO.html":{}}}],["flavordto",{"_index":1991,"title":{"classes/FlavorDTO.html":{}},"body":{"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"injectables/FlavorService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{}}}],["flavordto.foreach(f",{"_index":3112,"title":{},"body":{"classes/PerseDataForModuleComposer.html":{}}}],["flavorname",{"_index":479,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/HostNode.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["flavorservice",{"_index":1999,"title":{"injectables/FlavorService.html":{}},"body":{"injectables/FlavorService.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{}}}],["flex",{"_index":1562,"title":{},"body":{"components/DocsComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["flow",{"_index":1563,"title":{},"body":{"components/DocsComponent.html":{}}}],["fn",{"_index":3857,"title":{},"body":{"miscellaneous/functions.html":{}}}],["fonr",{"_index":2838,"title":{},"body":{"components/OffcanvasComponent.html":{},"components/TabnavComponent.html":{}}}],["font",{"_index":1075,"title":{},"body":{"components/ControlTemplate.html":{},"components/DataInputV2Component.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["footer",{"_index":2461,"title":{},"body":{"components/ModalComponent.html":{}}}],["force",{"_index":713,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["foreach",{"_index":1741,"title":{},"body":{"classes/ExportModule.html":{}}}],["form",{"_index":1139,"title":{},"body":{"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/HomeComponent.html":{}}}],["formato",{"_index":1632,"title":{},"body":{"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/ParseService.html":{},"miscellaneous/functions.html":{}}}],["formcontrol",{"_index":1169,"title":{},"body":{"components/DataInputComponent.html":{}}}],["formelementcomposer",{"_index":2032,"title":{},"body":{"components/HomeComponent.html":{}}}],["formelementmodal",{"_index":2033,"title":{},"body":{"components/HomeComponent.html":{}}}],["formelementvisualizer",{"_index":2034,"title":{},"body":{"components/HomeComponent.html":{}}}],["formgroup",{"_index":1168,"title":{},"body":{"components/DataInputComponent.html":{}}}],["formsmodule",{"_index":320,"title":{},"body":{"modules/AppModule.html":{}}}],["formtype",{"_index":1238,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["fornire",{"_index":2931,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["fornisce",{"_index":2682,"title":{},"body":{"components/NavbarComponent.html":{}}}],["forniti",{"_index":1661,"title":{},"body":{"classes/ExportModule.html":{},"classes/ExportTheater.html":{}}}],["fornito",{"_index":1646,"title":{},"body":{"classes/ExportModule.html":{},"classes/ExportTheater.html":{}}}],["found",{"_index":1202,"title":{},"body":{"components/DataInputComponent.html":{}}}],["four",{"_index":1447,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["full",{"_index":2778,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["full/mid",{"_index":2813,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["function",{"_index":1036,"title":{},"body":{"components/ControlTemplate.html":{},"components/DataInputV2Component.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/_Control.html":{}}}],["functions",{"_index":3823,"title":{"miscellaneous/functions.html":{}},"body":{}}],["funzione",{"_index":826,"title":{},"body":{"components/ComposerComponent.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"components/NavbarComponent.html":{},"classes/NetworkNode.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"injectables/StorageService.html":{},"classes/SubnetNode.html":{},"components/TabnavComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"injectables/TokenService.html":{},"components/UnderbarComponent.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{},"components/VisualizerComponent.html":{},"miscellaneous/functions.html":{}}}],["funzioni",{"_index":833,"title":{},"body":{"components/ComposerComponent.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"components/VisualizerComponent.html":{},"miscellaneous/functions.html":{}}}],["funzone",{"_index":1667,"title":{},"body":{"classes/ExportModule.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{}}}],["further",{"_index":3912,"title":{},"body":{"index.html":{}}}],["future",{"_index":448,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/ConstraintsMSD.html":{},"classes/FlavorApplication.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleApplication.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstance.html":{},"classes/ModuleSimpleData.html":{},"interfaces/ModuleTopology.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/NodeTopologyElement.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["gateway",{"_index":791,"title":{},"body":{"classes/BorderNetworkDTO.html":{},"classes/NetOSRouterDTO.html":{},"classes/NetworkDTO.html":{},"classes/SubnetDTO.html":{}}}],["gateway_ip",{"_index":1019,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/ExportModule.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["genera",{"_index":2671,"title":{},"body":{"components/NavbarComponent.html":{}}}],["general",{"_index":134,"title":{},"body":{"components/AppComponent.html":{}}}],["generale",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["generali",{"_index":622,"title":{},"body":{"classes/AreaExport.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"classes/FlavorBasicInfo.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{},"classes/SourceExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["generare",{"_index":2327,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"miscellaneous/functions.html":{}}}],["generata",{"_index":1522,"title":{},"body":{"components/DocsComponent.html":{}}}],["generate",{"_index":3894,"title":{},"body":{"index.html":{}}}],["generated",{"_index":3873,"title":{},"body":{"index.html":{}}}],["generiche",{"_index":2469,"title":{},"body":{"injectables/ModalService.html":{}}}],["generici",{"_index":3694,"title":{},"body":{"components/UnderbarComponent.html":{}}}],["generico",{"_index":526,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"components/ModalComponent.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"components/OffcanvasComponent.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"components/TabnavComponent.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["genericparameterdto",{"_index":527,"title":{"classes/GenericParameterDTO.html":{}},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["gestione",{"_index":1920,"title":{},"body":{"injectables/FileService.html":{},"components/HomeComponent.html":{},"injectables/ModalService.html":{},"injectables/TokenService.html":{}}}],["gestire",{"_index":1133,"title":{},"body":{"components/DataInputComponent.html":{},"components/DataItemComponent.html":{},"injectables/FileService.html":{}}}],["get_and_remove_theater_properties_from_blueprint",{"_index":2859,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["get_and_remove_theater_properties_from_blueprint(rowtheater",{"_index":2878,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["getallflavor",{"_index":2001,"title":{},"body":{"injectables/FlavorService.html":{}}}],["getallmodules",{"_index":2637,"title":{},"body":{"injectables/ModuleService.html":{}}}],["getallmodulespage",{"_index":2638,"title":{},"body":{"injectables/ModuleService.html":{}}}],["getallmodulespage(pageindex",{"_index":2644,"title":{},"body":{"injectables/ModuleService.html":{}}}],["getcheckbox",{"_index":1233,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["getdata",{"_index":3450,"title":{},"body":{"injectables/StorageService.html":{}}}],["getemptyhostinfo",{"_index":1614,"title":{},"body":{"classes/EmptyNodeInfo.html":{},"classes/HostNode.html":{},"classes/ReteHostInfo.html":{},"miscellaneous/functions.html":{}}}],["getemptynetworkinfo",{"_index":1616,"title":{},"body":{"classes/EmptyNodeInfo.html":{},"classes/NetworkNode.html":{},"classes/ReteNetworkInfo.html":{},"miscellaneous/functions.html":{}}}],["getemptynetworkinfo():retenetworkinfo",{"_index":2764,"title":{},"body":{"classes/NetworkNode.html":{},"classes/ReteNetworkInfo.html":{}}}],["getemptyretemirroringmoduleinstanceinfo",{"_index":1581,"title":{},"body":{"classes/EmptyModuleInfo.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"miscellaneous/functions.html":{}}}],["getemptyretetheaterinternalservicemoduleinstanceinfo",{"_index":1583,"title":{},"body":{"classes/EmptyModuleInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"miscellaneous/functions.html":{}}}],["getemptyretetheatermoduleinstanceinfo",{"_index":1582,"title":{},"body":{"classes/EmptyModuleInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/TheaterModuleInstanceNode.html":{},"miscellaneous/functions.html":{}}}],["getemptysubnetinfo",{"_index":1615,"title":{},"body":{"classes/EmptyNodeInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/SubnetNode.html":{},"miscellaneous/functions.html":{}}}],["getfile",{"_index":1925,"title":{},"body":{"injectables/FileService.html":{}}}],["getflavorbyid",{"_index":2002,"title":{},"body":{"injectables/FlavorService.html":{}}}],["getflavorbyid(id",{"_index":2005,"title":{},"body":{"injectables/FlavorService.html":{}}}],["getheaders",{"_index":3656,"title":{},"body":{"injectables/TokenService.html":{}}}],["gethostexport",{"_index":1637,"title":{},"body":{"classes/ExportModule.html":{}}}],["gethostexport(node",{"_index":1671,"title":{},"body":{"classes/ExportModule.html":{}}}],["gethttpgetoption",{"_index":3657,"title":{},"body":{"injectables/TokenService.html":{}}}],["getmainmoduledetails",{"_index":3119,"title":{},"body":{"classes/PerseDataForModuleVisualizer.html":{}}}],["getmainmoduledetails(module",{"_index":3126,"title":{},"body":{"classes/PerseDataForModuleVisualizer.html":{}}}],["getmainmoduleinterfaces",{"_index":3120,"title":{},"body":{"classes/PerseDataForModuleVisualizer.html":{}}}],["getmainmoduleinterfaces(module",{"_index":3129,"title":{},"body":{"classes/PerseDataForModuleVisualizer.html":{}}}],["getmainmodulenodes",{"_index":3121,"title":{},"body":{"classes/PerseDataForModuleVisualizer.html":{}}}],["getmainmodulenodes(module",{"_index":3133,"title":{},"body":{"classes/PerseDataForModuleVisualizer.html":{}}}],["getmainmoduletopology",{"_index":3122,"title":{},"body":{"classes/PerseDataForModuleVisualizer.html":{}}}],["getmainmoduletopology(moduleinfo",{"_index":3135,"title":{},"body":{"classes/PerseDataForModuleVisualizer.html":{}}}],["getmodal",{"_index":2487,"title":{},"body":{"injectables/ModalService.html":{}}}],["getmoduleattachment",{"_index":654,"title":{},"body":{"injectables/AttachmentsService.html":{}}}],["getmoduleattachment(module_id",{"_index":660,"title":{},"body":{"injectables/AttachmentsService.html":{}}}],["getmodulebyid",{"_index":2639,"title":{},"body":{"injectables/ModuleService.html":{},"classes/PerseDataForModuleVisualizer.html":{}}}],["getmodulebyid(id",{"_index":2647,"title":{},"body":{"injectables/ModuleService.html":{}}}],["getmoduleconnection",{"_index":2860,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["getmoduleconnection(theater",{"_index":2882,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["getmoduledict",{"_index":2861,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["getmoduledict(modules",{"_index":2884,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["getmoduleexport",{"_index":1638,"title":{},"body":{"classes/ExportModule.html":{}}}],["getmodulehostbytheateruuid",{"_index":2640,"title":{},"body":{"injectables/ModuleService.html":{}}}],["getmodulehostbytheateruuid(theater_uuid",{"_index":2649,"title":{},"body":{"injectables/ModuleService.html":{}}}],["getmoduleinstanceexport",{"_index":1866,"title":{},"body":{"classes/ExportTheater.html":{}}}],["getmoduleinstanceexport(module",{"_index":1872,"title":{},"body":{"classes/ExportTheater.html":{}}}],["getmoduleinterfacesbymoduleid",{"_index":2641,"title":{},"body":{"injectables/ModuleService.html":{}}}],["getmoduleinterfacesbymoduleid(module_id",{"_index":2652,"title":{},"body":{"injectables/ModuleService.html":{}}}],["getmodulesdetails",{"_index":2862,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["getmodulesdetails(modules",{"_index":2888,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["getmodulesinterfaces",{"_index":2863,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["getmodulesinterfaces(modules",{"_index":2894,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["getmodulesnodes",{"_index":2864,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["getmodulesnodes(modules",{"_index":2897,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["getmodulestopology",{"_index":2865,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["getmodulestopology(modulesinfo",{"_index":2899,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["getnetworkexport",{"_index":1639,"title":{},"body":{"classes/ExportModule.html":{}}}],["getnetworkexport(network",{"_index":1686,"title":{},"body":{"classes/ExportModule.html":{}}}],["getselection",{"_index":1234,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["getshow",{"_index":2447,"title":{},"body":{"components/ModalComponent.html":{},"components/OffcanvasComponent.html":{}}}],["getspinner",{"_index":3429,"title":{},"body":{"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{}}}],["getsubnetexport",{"_index":1640,"title":{},"body":{"classes/ExportModule.html":{}}}],["getsubnetexport(subnet",{"_index":1689,"title":{},"body":{"classes/ExportModule.html":{}}}],["gettext",{"_index":1235,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["gettheaterattachment",{"_index":655,"title":{},"body":{"injectables/AttachmentsService.html":{}}}],["gettheaterattachment(theater_id",{"_index":665,"title":{},"body":{"injectables/AttachmentsService.html":{}}}],["gettheaterexport",{"_index":1867,"title":{},"body":{"classes/ExportTheater.html":{}}}],["gettheaterinfobyid",{"_index":3637,"title":{},"body":{"injectables/TheaterService.html":{}}}],["gettheaterinfobyid(theater_id",{"_index":3640,"title":{},"body":{"injectables/TheaterService.html":{}}}],["gettheatermodulesbyuuid",{"_index":3638,"title":{},"body":{"injectables/TheaterService.html":{}}}],["gettheatermodulesbyuuid(theater_uuid",{"_index":3642,"title":{},"body":{"injectables/TheaterService.html":{}}}],["getting",{"_index":929,"title":{"index.html":{}},"body":{"components/ComposerComponent.html":{}}}],["gettoken",{"_index":3658,"title":{},"body":{"injectables/TokenService.html":{}}}],["getvalue",{"_index":1303,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["gi",{"_index":2905,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["giusta",{"_index":1259,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["gli",{"_index":421,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"classes/BlueprintFileDTO.html":{},"classes/BorderNetworkDTO.html":{},"interfaces/CommonModule.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"components/DataInputComponent.html":{},"classes/DeployInstanceDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/FlavorApplication.html":{},"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/HostModuleDTO.html":{},"classes/HostNode.html":{},"classes/HostPortModuleDTO.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"interfaces/ModuleTopology.html":{},"classes/NameMappingDTO.html":{},"components/NavbarComponent.html":{},"classes/NetOSRouterDTO.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkDTO.html":{},"classes/NetworkNode.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/NodeTopologyElement.html":{},"classes/PageableDTO.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/SortDTO.html":{},"classes/SourceExport.html":{},"classes/StatisticItemDTO.html":{},"classes/SubnetDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/TheaterSimpleData.html":{},"interfaces/TheaterTopology.html":{},"classes/TheatreStatusDTO.html":{},"injectables/TokenService.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/TypesCatalogueDTO.html":{},"components/UnderbarComponent.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{},"miscellaneous/functions.html":{}}}],["global",{"_index":135,"title":{},"body":{"components/AppComponent.html":{}}}],["go",{"_index":939,"title":{},"body":{"components/ComposerComponent.html":{},"components/HomeComponent.html":{},"components/VisualizerComponent.html":{},"index.html":{}}}],["goes",{"_index":601,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["gohome",{"_index":814,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["gradient(rgba(15",{"_index":2149,"title":{},"body":{"components/HomeComponent.html":{}}}],["grafico",{"_index":3919,"title":{},"body":{"modules.html":{}}}],["groove",{"_index":2749,"title":{},"body":{"components/NetworkComponent.html":{}}}],["group",{"_index":517,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["grow",{"_index":1568,"title":{},"body":{"components/DocsComponent.html":{}}}],["guardare",{"_index":1728,"title":{},"body":{"classes/ExportModule.html":{}}}],["h",{"_index":2985,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["h[key",{"_index":2991,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["ha",{"_index":795,"title":{},"body":{"components/ComposerComponent.html":{},"components/DataInputV2Component.html":{},"components/DocsComponent.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"classes/NetworkNode.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"injectables/TokenService.html":{},"components/VisualizerComponent.html":{},"miscellaneous/functions.html":{}}}],["hanno",{"_index":2061,"title":{},"body":{"components/HomeComponent.html":{}}}],["hard",{"_index":2162,"title":{},"body":{"components/HomeComponent.html":{}}}],["hasfile",{"_index":811,"title":{},"body":{"components/ComposerComponent.html":{}}}],["hasmultipletag",{"_index":3500,"title":{},"body":{"components/TabnavComponent.html":{}}}],["hasproblem",{"_index":812,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["hasquery",{"_index":2264,"title":{},"body":{"classes/HostModuleDTO.html":{},"classes/HostPortModuleDTO.html":{}}}],["header",{"_index":3676,"title":{},"body":{"injectables/TokenService.html":{}}}],["headers",{"_index":1548,"title":{},"body":{"components/DocsComponent.html":{},"injectables/TokenService.html":{}}}],["height",{"_index":1559,"title":{},"body":{"components/DocsComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["help",{"_index":3913,"title":{},"body":{"index.html":{}}}],["hidden",{"_index":140,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/DataItemComponent.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/VisualizerComponent.html":{}}}],["hide",{"_index":2815,"title":{},"body":{"components/OffcanvasComponent.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{}}}],["hide/show",{"_index":2512,"title":{},"body":{"injectables/ModalService.html":{}}}],["history",{"_index":3283,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"dependencies.html":{}}}],["historyplugin",{"_index":3282,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["hn",{"_index":3024,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["home",{"_index":361,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ComposerComponent.html":{},"components/HomeComponent.html":{},"components/NavbarElementComponent.html":{},"components/VisualizerComponent.html":{}}}],["home'},{'name",{"_index":188,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["home.component.html",{"_index":2026,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.sass",{"_index":2025,"title":{},"body":{"components/HomeComponent.html":{}}}],["homecomponent",{"_index":187,"title":{"components/HomeComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"overview.html":{}}}],["host",{"_index":996,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/EmptyNodeInfo.html":{},"classes/HostModuleDTO.html":{},"classes/HostNode.html":{},"classes/HostPortModuleDTO.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteHostInfo.html":{},"classes/SourceExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"miscellaneous/functions.html":{}}}],["host.component.html",{"_index":2198,"title":{},"body":{"components/HostComponent.html":{}}}],["host.component.sass",{"_index":2197,"title":{},"body":{"components/HostComponent.html":{}}}],["host/hostnode",{"_index":1622,"title":{},"body":{"classes/EmptyNodeInfo.html":{}}}],["host:string",{"_index":642,"title":{},"body":{"classes/AreaExport.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesTSD.html":{},"classes/SourceExport.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{}}}],["host_name",{"_index":3028,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["host_number",{"_index":414,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/ReteConnection.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["hostcomponent",{"_index":189,"title":{"components/HostComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"classes/HostNode.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"classes/ReteHostInfo.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"overview.html":{}}}],["hostdto",{"_index":3844,"title":{},"body":{"miscellaneous/functions.html":{}}}],["hosticon",{"_index":2199,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["hosticon=hosticon",{"_index":2386,"title":{},"body":{"components/MirroringModuleInstanceComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["hostmoduledto",{"_index":400,"title":{"classes/HostModuleDTO.html":{}},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/HostModuleDTO.html":{},"classes/HostPortModuleDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"injectables/ModuleService.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"miscellaneous/functions.html":{}}}],["hostname",{"_index":471,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["hostnode",{"_index":1621,"title":{"classes/HostNode.html":{}},"body":{"classes/EmptyNodeInfo.html":{},"classes/HostNode.html":{},"classes/ReteHostInfo.html":{},"miscellaneous/functions.html":{}}}],["hostos1",{"_index":1438,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["hostos2",{"_index":1440,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["hostos3",{"_index":1442,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["hostportmoduledto",{"_index":2268,"title":{"classes/HostPortModuleDTO.html":{}},"body":{"classes/HostModuleDTO.html":{},"classes/HostPortModuleDTO.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["hosts",{"_index":413,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["hover",{"_index":2240,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["howtousecomponent",{"_index":190,"title":{"components/HowToUseComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"overview.html":{}}}],["html",{"_index":165,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["htmlelement",{"_index":2694,"title":{},"body":{"components/NavbarComponent.html":{}}}],["htmlinputelement",{"_index":1187,"title":{},"body":{"components/DataInputComponent.html":{}}}],["http",{"_index":659,"title":{},"body":{"injectables/AttachmentsService.html":{},"components/DocsComponent.html":{},"injectables/FlavorService.html":{},"injectables/ModuleService.html":{},"injectables/TheaterService.html":{}}}],["http://localhost:4200",{"_index":3889,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":657,"title":{},"body":{"injectables/AttachmentsService.html":{},"components/DocsComponent.html":{},"injectables/FlavorService.html":{},"injectables/ModuleService.html":{},"injectables/TheaterService.html":{}}}],["httpclientmodule",{"_index":294,"title":{},"body":{"modules/AppModule.html":{}}}],["httpgetoption",{"_index":3654,"title":{},"body":{"injectables/TokenService.html":{}}}],["httpheaders",{"_index":1546,"title":{},"body":{"components/DocsComponent.html":{},"injectables/TokenService.html":{}}}],["httpheaders().set('content",{"_index":1549,"title":{},"body":{"components/DocsComponent.html":{}}}],["httpoption",{"_index":3677,"title":{},"body":{"injectables/TokenService.html":{}}}],["httpresponse",{"_index":668,"title":{},"body":{"injectables/AttachmentsService.html":{}}}],["i.length",{"_index":2340,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["i.network.name",{"_index":1801,"title":{},"body":{"classes/ExportModule.html":{}}}],["i.nodename",{"_index":1800,"title":{},"body":{"classes/ExportModule.html":{}}}],["i.type",{"_index":1795,"title":{},"body":{"classes/ExportModule.html":{}}}],["i/o",{"_index":1675,"title":{},"body":{"classes/ExportModule.html":{}}}],["i[key",{"_index":2992,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["icon",{"_index":1401,"title":{},"body":{"components/DataItemComponent.html":{}}}],["icona",{"_index":1400,"title":{},"body":{"components/DataItemComponent.html":{}}}],["iconclass",{"_index":3722,"title":{},"body":{"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{}}}],["icone",{"_index":2819,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["icons",{"_index":3786,"title":{},"body":{"dependencies.html":{}}}],["id",{"_index":49,"title":{},"body":{"classes/Aoption.html":{},"classes/AreaApplication.html":{},"classes/AreaDTO.html":{},"classes/BlueprintFileDTO.html":{},"classes/BorderNetworkDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/DeployInstanceDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"injectables/FlavorService.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"classes/HostModuleDTO.html":{},"classes/HostPortModuleDTO.html":{},"classes/ModalButton.html":{},"classes/ModalItem.html":{},"injectables/ModalService.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"injectables/ModuleService.html":{},"classes/ModuleStatusDTO.html":{},"classes/NameMappingDTO.html":{},"classes/NavbarElement.html":{},"classes/NavbarItem.html":{},"classes/NetOSRouterDTO.html":{},"classes/NetworkDTO.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/SelectOption.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/SingleDataInputReturned.html":{},"classes/StatisticItemDTO.html":{},"classes/SubnetDTO.html":{},"classes/TabnavElement.html":{},"classes/TabnavItem.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheatreStatusDTO.html":{},"classes/TypesCatalogueDTO.html":{},"components/UnderbarComponent.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{},"components/VisualizerComponent.html":{}}}],["idforchanges",{"_index":1239,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["if(!this.name",{"_index":916,"title":{},"body":{"components/ComposerComponent.html":{}}}],["if(!val",{"_index":2525,"title":{},"body":{"injectables/ModalService.html":{}}}],["if(val.id===\"no",{"_index":2528,"title":{},"body":{"injectables/ModalService.html":{}}}],["if(val.id===\"yes",{"_index":2526,"title":{},"body":{"injectables/ModalService.html":{}}}],["iframe",{"_index":1557,"title":{},"body":{"components/DocsComponent.html":{}}}],["iframevisibility",{"_index":1529,"title":{},"body":{"components/DocsComponent.html":{}}}],["il",{"_index":12,"title":{},"body":{"classes/Aoption.html":{},"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"classes/BlueprintFileDTO.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/DeployInstanceDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"classes/FlavorApplication.html":{},"classes/FlavorBasicInfo.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"classes/HostNode.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModalButton.html":{},"classes/ModalItem.html":{},"injectables/ModalService.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"interfaces/ModuleTopology.html":{},"classes/NameMappingDTO.html":{},"components/NavbarComponent.html":{},"classes/NavbarElement.html":{},"classes/NavbarItem.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkNode.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/NodeTopologyElement.html":{},"components/OffcanvasComponent.html":{},"classes/PageableDTO.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/SortDTO.html":{},"classes/SourceExport.html":{},"classes/StatisticItemDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"components/TabnavComponent.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/TheaterSimpleData.html":{},"interfaces/TheaterTopology.html":{},"classes/TheatreStatusDTO.html":{},"injectables/TokenService.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/TypesCatalogueDTO.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{},"miscellaneous/functions.html":{},"modules.html":{}}}],["image",{"_index":2147,"title":{},"body":{"components/HomeComponent.html":{}}}],["images/bg",{"_index":2154,"title":{},"body":{"components/HomeComponent.html":{}}}],["images/node",{"_index":2164,"title":{},"body":{"components/HomeComponent.html":{}}}],["img",{"_index":2155,"title":{},"body":{"components/HomeComponent.html":{}}}],["immediatamente",{"_index":1877,"title":{},"body":{"classes/ExportTheater.html":{}}}],["imp",{"_index":941,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["implementa",{"_index":804,"title":{},"body":{"components/ComposerComponent.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DocsComponent.html":{},"classes/HostNode.html":{},"components/HowToUseComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"components/NavbarComponent.html":{},"classes/NetworkNode.html":{},"classes/NodeTopologyElement.html":{},"classes/SimpleModuleApplication.html":{},"classes/SubnetNode.html":{},"components/TabnavComponent.html":{},"classes/TheaterApplication.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{}}}],["implementazioni",{"_index":447,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["implements",{"_index":343,"title":{},"body":{"modules/AppModule.html":{},"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DocsComponent.html":{},"classes/FlavorApplication.html":{},"classes/HostNode.html":{},"components/HowToUseComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"components/NavbarComponent.html":{},"classes/NetworkNode.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SimpleModuleApplication.html":{},"classes/SubnetNode.html":{},"components/TabnavComponent.html":{},"classes/TheaterApplication.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{}}}],["import",{"_index":24,"title":{},"body":{"classes/Aoption.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"injectables/AttachmentsService.html":{},"injectables/AuthGuard.html":{},"classes/BlueprintFileDTO.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/DeployInstanceDTO.html":{},"components/DocsComponent.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"classes/FlavorApplication.html":{},"injectables/FlavorService.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"classes/HostModuleDTO.html":{},"classes/HostNode.html":{},"classes/HostPortModuleDTO.html":{},"components/HowToUseComponent.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModalButton.html":{},"components/ModalComponent.html":{},"classes/ModalItem.html":{},"injectables/ModalService.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"injectables/ModuleService.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"interfaces/ModuleTopology.html":{},"classes/NameMappingDTO.html":{},"components/NavbarComponent.html":{},"classes/NavbarElement.html":{},"components/NavbarElementComponent.html":{},"classes/NavbarItem.html":{},"components/NetworkComponent.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkNode.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/NodeTopologyElement.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/SourceExport.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"classes/StatisticItemDTO.html":{},"injectables/StorageService.html":{},"components/SubnetComponent.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"components/TabnavComponent.html":{},"classes/TabnavElement.html":{},"classes/TabnavItem.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"injectables/TheaterService.html":{},"classes/TheaterSimpleData.html":{},"interfaces/TheaterTopology.html":{},"classes/TheatreStatusDTO.html":{},"injectables/TokenService.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/TypesCatalogueDTO.html":{},"components/UnderbarComponent.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["importa",{"_index":240,"title":{},"body":{"modules/AppModule.html":{}}}],["important",{"_index":163,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/OffcanvasComponent.html":{},"components/TabnavComponent.html":{},"components/VisualizerComponent.html":{}}}],["importato",{"_index":859,"title":{},"body":{"components/ComposerComponent.html":{}}}],["importing",{"_index":1921,"title":{},"body":{"injectables/FileService.html":{}}}],["imports",{"_index":342,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaExport.html":{},"classes/BlueprintFileDTO.html":{},"interfaces/CommonModule.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/DeployInstanceDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/FlavorApplication.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleApplication.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleSimpleData.html":{},"interfaces/ModuleTopology.html":{},"classes/NameMappingDTO.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/NodeTopologyElement.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/SourceExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagsExport.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{},"interfaces/TheaterTopology.html":{},"classes/TheatreStatusDTO.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["incoerenza",{"_index":2959,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["index",{"_index":1734,"title":{"index.html":{}},"body":{"classes/ExportModule.html":{},"components/HostComponent.html":{},"classes/HostNode.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"components/NetworkComponent.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"components/SubnetComponent.html":{},"classes/SubnetNode.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["index:string]:deployinstancedto",{"_index":770,"title":{},"body":{"classes/BlueprintFileDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/NameMappingDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TheaterDTO.html":{},"classes/TheatreStatusDTO.html":{}}}],["index_selected",{"_index":1333,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["indexc",{"_index":1792,"title":{},"body":{"classes/ExportModule.html":{}}}],["indexmodulecomponent",{"_index":1602,"title":{},"body":{"classes/EmptyModuleInfo.html":{}}}],["indexnodecomponent",{"_index":1627,"title":{},"body":{"classes/EmptyNodeInfo.html":{}}}],["indexp",{"_index":1793,"title":{},"body":{"classes/ExportModule.html":{}}}],["indica",{"_index":514,"title":{},"body":{"classes/AreaDTO.html":{},"classes/BlueprintFileDTO.html":{},"classes/BorderNetworkDTO.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"components/ControlTemplate.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/DeployInstanceDTO.html":{},"components/DocsComponent.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"injectables/ExportService.html":{},"injectables/FileService.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModalButton.html":{},"classes/ModalItem.html":{},"injectables/ModalService.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"classes/NameMappingDTO.html":{},"classes/NetOSRouterDTO.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkDTO.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"components/OffcanvasComponent.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/SubnetDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"components/TabnavComponent.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterDTO.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheatreStatusDTO.html":{},"classes/TypesCatalogueDTO.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{}}}],["indicano",{"_index":485,"title":{},"body":{"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"classes/BlueprintFileDTO.html":{},"classes/BorderNetworkDTO.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/DeployInstanceDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/HostModuleDTO.html":{},"classes/HostPortModuleDTO.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"classes/NameMappingDTO.html":{},"classes/NetOSRouterDTO.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkDTO.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PageableDTO.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/SortDTO.html":{},"classes/SourceExport.html":{},"classes/StatisticItemDTO.html":{},"classes/SubnetDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterDTO.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheaterSimpleData.html":{},"classes/TheatreStatusDTO.html":{},"classes/TypesCatalogueDTO.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{}}}],["indicare",{"_index":1430,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["indicato",{"_index":2328,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"miscellaneous/functions.html":{}}}],["indicatrici",{"_index":1479,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["indicazione",{"_index":1495,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["indice",{"_index":14,"title":{},"body":{"classes/Aoption.html":{},"components/AppComponent.html":{},"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"injectables/AttachmentsService.html":{},"injectables/AuthGuard.html":{},"classes/BlueprintFileDTO.html":{},"classes/BorderNetworkDTO.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"components/ControlTemplate.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputReturnedV2.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/DeployInstanceDTO.html":{},"components/DocsComponent.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"classes/FlavorApplication.html":{},"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"injectables/FlavorService.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"classes/HostModuleDTO.html":{},"classes/HostNode.html":{},"classes/HostPortModuleDTO.html":{},"components/HowToUseComponent.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModalButton.html":{},"components/ModalComponent.html":{},"classes/ModalItem.html":{},"injectables/ModalService.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"injectables/ModuleService.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"interfaces/ModuleTopology.html":{},"classes/NameMappingDTO.html":{},"components/NavbarComponent.html":{},"classes/NavbarElement.html":{},"classes/NavbarItem.html":{},"classes/NetOSRouterDTO.html":{},"components/NetworkComponent.html":{},"classes/NetworkDTO.html":{},"classes/NetworkNode.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/NodeTopologyElement.html":{},"components/OffcanvasComponent.html":{},"classes/PageableDTO.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SelectOption.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/SingleDataInputReturned.html":{},"classes/SortDTO.html":{},"classes/SourceExport.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"classes/StatisticItemDTO.html":{},"injectables/StorageService.html":{},"components/SubnetComponent.html":{},"classes/SubnetDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"components/TabnavComponent.html":{},"classes/TabnavElement.html":{},"classes/TabnavItem.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"injectables/TheaterService.html":{},"classes/TheaterSimpleData.html":{},"interfaces/TheaterTopology.html":{},"classes/TheatreStatusDTO.html":{},"injectables/TokenService.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/TypesCatalogueDTO.html":{},"components/UnderbarComponent.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{},"miscellaneous/functions.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["indipendentemente",{"_index":120,"title":{},"body":{"components/AppComponent.html":{}}}],["indiretto",{"_index":1284,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/Aoption.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"injectables/AttachmentsService.html":{},"injectables/AuthGuard.html":{},"classes/BlueprintFileDTO.html":{},"classes/BorderNetworkDTO.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"components/ControlTemplate.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputReturnedV2.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/DeployInstanceDTO.html":{},"components/DocsComponent.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"classes/FlavorApplication.html":{},"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"injectables/FlavorService.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"classes/HostModuleDTO.html":{},"classes/HostNode.html":{},"classes/HostPortModuleDTO.html":{},"components/HowToUseComponent.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModalButton.html":{},"components/ModalComponent.html":{},"classes/ModalItem.html":{},"injectables/ModalService.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"injectables/ModuleService.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"interfaces/ModuleTopology.html":{},"classes/NameMappingDTO.html":{},"components/NavbarComponent.html":{},"classes/NavbarElement.html":{},"components/NavbarElementComponent.html":{},"classes/NavbarItem.html":{},"classes/NetOSRouterDTO.html":{},"components/NetworkComponent.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkDTO.html":{},"classes/NetworkNode.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/NodeTopologyElement.html":{},"components/OffcanvasComponent.html":{},"classes/PageableDTO.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SelectOption.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/SingleDataInputReturned.html":{},"classes/SortDTO.html":{},"classes/SourceExport.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"classes/StatisticItemDTO.html":{},"injectables/StorageService.html":{},"components/SubnetComponent.html":{},"classes/SubnetDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"components/TabnavComponent.html":{},"classes/TabnavElement.html":{},"classes/TabnavItem.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"injectables/TheaterService.html":{},"classes/TheaterSimpleData.html":{},"interfaces/TheaterTopology.html":{},"classes/TheatreStatusDTO.html":{},"injectables/TokenService.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/TypesCatalogueDTO.html":{},"components/UnderbarComponent.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["informazione",{"_index":2893,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["informazioni",{"_index":621,"title":{},"body":{"classes/AreaExport.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/SourceExport.html":{},"injectables/StorageService.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["informmazioni",{"_index":2077,"title":{},"body":{"components/HomeComponent.html":{}}}],["infra",{"_index":2728,"title":{},"body":{"components/NavbarElementComponent.html":{}}}],["infracreate",{"_index":124,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["infrastructure_parameters",{"_index":537,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["infrastructured",{"_index":2137,"title":{},"body":{"components/HomeComponent.html":{}}}],["ingrandisci",{"_index":233,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["ingresso",{"_index":641,"title":{},"body":{"classes/AreaExport.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/ExportTheater.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesTSD.html":{},"classes/SourceExport.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{}}}],["init",{"_index":347,"title":{},"body":{"modules/AppModule.html":{}}}],["initemptymoduleinstance",{"_index":3158,"title":{},"body":{"classes/PerseDataForTheaterComposer.html":{}}}],["initemptymoduleinstance(modules",{"_index":3170,"title":{},"body":{"classes/PerseDataForTheaterComposer.html":{}}}],["initializekeycloak",{"_index":292,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["initializekeycloak(keycloak",{"_index":3860,"title":{},"body":{"miscellaneous/functions.html":{}}}],["initmodule",{"_index":815,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["inittheater",{"_index":816,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["inittheaterafterfetch",{"_index":2866,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["inittheaterafterfetch(rowtheater",{"_index":2911,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["inizia",{"_index":1655,"title":{},"body":{"classes/ExportModule.html":{},"classes/ExportTheater.html":{}}}],["iniziale",{"_index":2307,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"miscellaneous/functions.html":{}}}],["inizializza",{"_index":2904,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["inizializzare",{"_index":3137,"title":{},"body":{"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["inizializzata",{"_index":1165,"title":{},"body":{"components/DataInputComponent.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{}}}],["inizializzato",{"_index":906,"title":{},"body":{"components/ComposerComponent.html":{}}}],["inizializzazione",{"_index":834,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["inizializzazioni",{"_index":1167,"title":{},"body":{"components/DataInputComponent.html":{}}}],["injectable",{"_index":649,"title":{"injectables/AttachmentsService.html":{},"injectables/AuthGuard.html":{},"injectables/ExportService.html":{},"injectables/FileService.html":{},"injectables/FlavorService.html":{},"injectables/ModalService.html":{},"injectables/ModuleService.html":{},"injectables/ParseService.html":{},"injectables/SpinnerService.html":{},"injectables/StorageService.html":{},"injectables/TheaterService.html":{},"injectables/TokenService.html":{}},"body":{"injectables/AttachmentsService.html":{},"injectables/AuthGuard.html":{},"injectables/ExportService.html":{},"injectables/FileService.html":{},"injectables/FlavorService.html":{},"injectables/ModalService.html":{},"injectables/ModuleService.html":{},"injectables/ParseService.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"injectables/StorageService.html":{},"injectables/TheaterService.html":{},"injectables/TokenService.html":{}}}],["injectables",{"_index":651,"title":{},"body":{"injectables/AttachmentsService.html":{},"injectables/AuthGuard.html":{},"injectables/ExportService.html":{},"injectables/FileService.html":{},"injectables/FlavorService.html":{},"injectables/ModalService.html":{},"injectables/ModuleService.html":{},"injectables/ParseService.html":{},"injectables/SpinnerService.html":{},"injectables/StorageService.html":{},"injectables/TheaterService.html":{},"injectables/TokenService.html":{},"overview.html":{}}}],["inline",{"_index":2255,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["input",{"_index":180,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AreaDTO.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"components/ControlTemplate.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputReturnedV2.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/ExportTheater.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"classes/HostNode.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"components/ModalComponent.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"classes/NetworkNode.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SelectOption.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/SingleDataInputReturned.html":{},"classes/StatisticItemDTO.html":{},"components/SubnetComponent.html":{},"classes/SubnetNode.html":{},"components/TabnavComponent.html":{},"classes/TabnavElement.html":{},"classes/TabnavItem.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/TypesCatalogueDTO.html":{},"components/UnderbarComponent.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["input'},{'name",{"_index":178,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["input.component",{"_index":313,"title":{},"body":{"modules/AppModule.html":{}}}],["input.component.html",{"_index":1146,"title":{},"body":{"components/DataInputComponent.html":{}}}],["input.component.sass",{"_index":1145,"title":{},"body":{"components/DataInputComponent.html":{}}}],["input.component.ts",{"_index":1130,"title":{},"body":{"components/DataInputComponent.html":{}}}],["input.component.ts:21",{"_index":1154,"title":{},"body":{"components/DataInputComponent.html":{}}}],["input.component.ts:27",{"_index":1157,"title":{},"body":{"components/DataInputComponent.html":{}}}],["input.component.ts:33",{"_index":1153,"title":{},"body":{"components/DataInputComponent.html":{}}}],["input.component.ts:48",{"_index":1163,"title":{},"body":{"components/DataInputComponent.html":{}}}],["input.component.ts:62",{"_index":1174,"title":{},"body":{"components/DataInputComponent.html":{}}}],["input.component.ts:85",{"_index":1159,"title":{},"body":{"components/DataInputComponent.html":{}}}],["input.component.ts:99",{"_index":1171,"title":{},"body":{"components/DataInputComponent.html":{}}}],["input.name",{"_index":2233,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["input.value",{"_index":2131,"title":{},"body":{"components/HomeComponent.html":{}}}],["input/data",{"_index":312,"title":{},"body":{"modules/AppModule.html":{},"components/DataInputComponent.html":{}}}],["input/datainputtype",{"_index":1305,"title":{},"body":{"components/DataInputV2Component.html":{},"components/HomeComponent.html":{}}}],["input/datainputtype.ts",{"_index":1083,"title":{},"body":{"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{}}}],["input/datainputtype.ts:14",{"_index":1090,"title":{},"body":{"classes/DataInput.html":{}}}],["input/datainputtype.ts:15",{"_index":1092,"title":{},"body":{"classes/DataInput.html":{}}}],["input/datainputtype.ts:16",{"_index":1096,"title":{},"body":{"classes/DataInput.html":{}}}],["input/datainputtype.ts:17",{"_index":1089,"title":{},"body":{"classes/DataInput.html":{}}}],["input/datainputtype.ts:18",{"_index":1088,"title":{},"body":{"classes/DataInput.html":{}}}],["input/datainputtype.ts:19",{"_index":1091,"title":{},"body":{"classes/DataInput.html":{}}}],["input/datainputtype.ts:27",{"_index":1220,"title":{},"body":{"classes/DataInputText.html":{}}}],["input/datainputtype.ts:35",{"_index":1217,"title":{},"body":{"classes/DataInputSelection.html":{}}}],["input/datainputtype.ts:36",{"_index":1218,"title":{},"body":{"classes/DataInputSelection.html":{}}}],["input/datainputtype.ts:37",{"_index":1219,"title":{},"body":{"classes/DataInputSelection.html":{}}}],["input/datainputtype.ts:45",{"_index":1123,"title":{},"body":{"classes/DataInputCheck.html":{}}}],["input/datainputtype.ts:53",{"_index":3377,"title":{},"body":{"classes/SelectOption.html":{}}}],["input/datainputtype.ts:54",{"_index":3376,"title":{},"body":{"classes/SelectOption.html":{}}}],["input/datainputtype.ts:55",{"_index":3375,"title":{},"body":{"classes/SelectOption.html":{}}}],["input/datainputtype.ts:6",{"_index":1204,"title":{},"body":{"classes/DataInputElement.html":{}}}],["input/datainputtype.ts:63",{"_index":1205,"title":{},"body":{"classes/DataInputReturned.html":{}}}],["input/datainputtype.ts:64",{"_index":1207,"title":{},"body":{"classes/DataInputReturned.html":{}}}],["input/datainputtype.ts:65",{"_index":1206,"title":{},"body":{"classes/DataInputReturned.html":{}}}],["input/datainputtype.ts:72",{"_index":3401,"title":{},"body":{"classes/SingleDataInputReturned.html":{}}}],["input/datainputtype.ts:73",{"_index":3402,"title":{},"body":{"classes/SingleDataInputReturned.html":{}}}],["input/datainputtype.ts:74",{"_index":3403,"title":{},"body":{"classes/SingleDataInputReturned.html":{}}}],["input/datainputtype.ts:75",{"_index":3404,"title":{},"body":{"classes/SingleDataInputReturned.html":{}}}],["input/output",{"_index":2309,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["inputdata",{"_index":1693,"title":{},"body":{"classes/ExportModule.html":{},"classes/ExportTheater.html":{}}}],["inputs",{"_index":2311,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["inserimento",{"_index":1651,"title":{},"body":{"classes/ExportModule.html":{}}}],["inserire",{"_index":2901,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["inserisco",{"_index":1790,"title":{},"body":{"classes/ExportModule.html":{}}}],["inseriti",{"_index":2906,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["inserito",{"_index":2920,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["inserted",{"_index":548,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["installare",{"_index":3883,"title":{},"body":{"index.html":{}}}],["instance",{"_index":2948,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["instance_parameters",{"_index":533,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["instanceof",{"_index":732,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["instanzia",{"_index":3168,"title":{},"body":{"classes/PerseDataForTheaterComposer.html":{}}}],["instanziamento",{"_index":2308,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["instanziare",{"_index":2286,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"miscellaneous/functions.html":{}}}],["intefracce",{"_index":3132,"title":{},"body":{"classes/PerseDataForModuleVisualizer.html":{}}}],["interfacce",{"_index":576,"title":{},"body":{"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"interfaces/CommonModule.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/ExportModule.html":{},"classes/GenericParameterDTO.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"interfaces/ModuleTopology.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/SourceExport.html":{},"classes/StatisticItemDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheaterSimpleData.html":{},"interfaces/TheaterTopology.html":{},"interfaces/TopologyList.html":{},"classes/TypesCatalogueDTO.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"overview.html":{}}}],["interfaccia",{"_index":582,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["interface",{"_index":411,"title":{"interfaces/CommonModule.html":{},"interfaces/ModuleTopology.html":{},"interfaces/TheaterTopology.html":{},"interfaces/TopologyList.html":{}},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/ConstraintsMSD.html":{},"classes/ExportModule.html":{},"classes/FlavorApplication.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleApplication.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstance.html":{},"classes/ModuleSimpleData.html":{},"interfaces/ModuleTopology.html":{},"components/NetworkComponent.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/NodeTopologyElement.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["interface_constraints",{"_index":957,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/ExportModule.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["interface_networks",{"_index":983,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/ExportModule.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["interfaceconstraints",{"_index":960,"title":{"classes/InterfaceConstraints.html":{}},"body":{"classes/ConstraintsMSD.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["interfacenetworksconsumer",{"_index":986,"title":{"classes/InterfaceNetworksConsumer.html":{}},"body":{"classes/ConstraintsMSD.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["interfacenetworksprovider",{"_index":984,"title":{"classes/InterfaceNetworksProvider.html":{}},"body":{"classes/ConstraintsMSD.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["interfaceporttype",{"_index":1431,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/ExportModule.html":{},"classes/NetworkNode.html":{},"classes/ReteNetworkInfo.html":{}}}],["interfaceporttype.consumer",{"_index":1796,"title":{},"body":{"classes/ExportModule.html":{}}}],["interfaceporttype.producer",{"_index":1797,"title":{},"body":{"classes/ExportModule.html":{}}}],["interfaces",{"_index":412,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaExport.html":{},"interfaces/CommonModule.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/ExportModule.html":{},"classes/FlavorApplication.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleApplication.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleSimpleData.html":{},"interfaces/ModuleTopology.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/SourceExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/TagsExport.html":{},"classes/TheaterApplication.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["internal",{"_index":1469,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["internal_theatre_service",{"_index":1499,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["intramodulo",{"_index":645,"title":{},"body":{"classes/AreaExport.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesTSD.html":{},"classes/SourceExport.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{}}}],["invalid.\\n",{"_index":3005,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["inversa",{"_index":1491,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["ip_version",{"_index":1017,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/ExportModule.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["ipversiontype",{"_index":1446,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["ir",{"_index":3266,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["isaccessallowed",{"_index":702,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["isaccessallowed(route",{"_index":704,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["isdhcp",{"_index":792,"title":{},"body":{"classes/BorderNetworkDTO.html":{},"classes/NetOSRouterDTO.html":{},"classes/NetworkDTO.html":{},"classes/ReteSubnetInfo.html":{},"classes/SubnetDTO.html":{},"classes/SubnetNode.html":{}}}],["isenabled",{"_index":1987,"title":{},"body":{"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{}}}],["isfilevalid",{"_index":1926,"title":{},"body":{"injectables/FileService.html":{}}}],["isfilevalid(file",{"_index":1935,"title":{},"body":{"injectables/FileService.html":{}}}],["isfull",{"_index":1372,"title":{},"body":{"components/DataItemComponent.html":{},"components/OffcanvasComponent.html":{}}}],["islocked",{"_index":553,"title":{},"body":{"classes/AreaDTO.html":{},"classes/BlueprintFileDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/NameMappingDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheatreStatusDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["ismodalactive",{"_index":2035,"title":{},"body":{"components/HomeComponent.html":{}}}],["istanze",{"_index":2917,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["istanziate",{"_index":891,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["isupdatetime",{"_index":1232,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["isvalid",{"_index":1118,"title":{},"body":{"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{}}}],["italic",{"_index":1348,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["item",{"_index":1364,"title":{},"body":{"components/DataItemComponent.html":{}}}],["item'},{'name",{"_index":184,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["item.component",{"_index":325,"title":{},"body":{"modules/AppModule.html":{}}}],["item.component.html",{"_index":1366,"title":{},"body":{"components/DataItemComponent.html":{}}}],["item.component.sass",{"_index":1365,"title":{},"body":{"components/DataItemComponent.html":{}}}],["item.component.ts",{"_index":1349,"title":{},"body":{"components/DataItemComponent.html":{}}}],["item.component.ts:21",{"_index":1382,"title":{},"body":{"components/DataItemComponent.html":{}}}],["item.component.ts:26",{"_index":1375,"title":{},"body":{"components/DataItemComponent.html":{}}}],["item.component.ts:31",{"_index":1378,"title":{},"body":{"components/DataItemComponent.html":{}}}],["item.component.ts:37",{"_index":1383,"title":{},"body":{"components/DataItemComponent.html":{}}}],["item.component.ts:40",{"_index":1399,"title":{},"body":{"components/DataItemComponent.html":{}}}],["item.component.ts:41",{"_index":1395,"title":{},"body":{"components/DataItemComponent.html":{}}}],["item.component.ts:42",{"_index":1374,"title":{},"body":{"components/DataItemComponent.html":{}}}],["item.component.ts:54",{"_index":1387,"title":{},"body":{"components/DataItemComponent.html":{}}}],["item.component.ts:63",{"_index":1389,"title":{},"body":{"components/DataItemComponent.html":{}}}],["item.data_appended",{"_index":1203,"title":{},"body":{"components/DataInputComponent.html":{}}}],["item.data_prepended",{"_index":1198,"title":{},"body":{"components/DataInputComponent.html":{}}}],["item.text",{"_index":1197,"title":{},"body":{"components/DataInputComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/TabnavComponent.html":{}}}],["item/data",{"_index":324,"title":{},"body":{"modules/AppModule.html":{},"components/DataItemComponent.html":{}}}],["itemclicked",{"_index":3697,"title":{},"body":{"components/UnderbarComponent.html":{}}}],["itemclicked(event",{"_index":3705,"title":{},"body":{"components/UnderbarComponent.html":{}}}],["items",{"_index":3296,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["itemselected",{"_index":2677,"title":{},"body":{"components/NavbarComponent.html":{},"components/UnderbarComponent.html":{}}}],["itemselected:eventemitter",{"_index":3709,"title":{},"body":{"components/UnderbarComponent.html":{}}}],["itera",{"_index":1662,"title":{},"body":{"classes/ExportModule.html":{},"classes/ExportTheater.html":{}}}],["jquery",{"_index":3788,"title":{},"body":{"dependencies.html":{}}}],["js",{"_index":3792,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":440,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"injectables/AttachmentsService.html":{},"interfaces/CommonModule.html":{},"injectables/ExportService.html":{},"injectables/FileService.html":{},"classes/FlavorApplication.html":{},"components/HomeComponent.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"dependencies.html":{},"miscellaneous/functions.html":{}}}],["json.parse(filereader.result",{"_index":1956,"title":{},"body":{"injectables/FileService.html":{}}}],["justify",{"_index":2144,"title":{},"body":{"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["karma",{"_index":3909,"title":{},"body":{"index.html":{}}}],["key",{"_index":1051,"title":{},"body":{"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"classes/DataInputReturnedV2.html":{},"components/DataInputV2Component.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/_Control.html":{}}}],["key.tolowercase().includes(moduleinstance.properties.module.tolowercase",{"_index":3000,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["key:string",{"_index":1116,"title":{},"body":{"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{}}}],["keyboard",{"_index":3293,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["keycloak",{"_index":291,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthGuard.html":{},"dependencies.html":{},"miscellaneous/functions.html":{}}}],["keycloakangularmodule",{"_index":289,"title":{},"body":{"modules/AppModule.html":{}}}],["keycloakauthguard",{"_index":701,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["keycloakservice",{"_index":290,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthGuard.html":{},"miscellaneous/functions.html":{}}}],["keyframes",{"_index":2722,"title":{},"body":{"components/NavbarElementComponent.html":{}}}],["l'ambiente",{"_index":798,"title":{},"body":{"components/ComposerComponent.html":{}}}],["l'appcomponent",{"_index":2471,"title":{},"body":{"injectables/ModalService.html":{}}}],["l'application",{"_index":1845,"title":{},"body":{"injectables/ExportService.html":{},"injectables/FileService.html":{}}}],["l'applicazione",{"_index":2913,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["l'area",{"_index":486,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["l'array",{"_index":763,"title":{},"body":{"classes/BlueprintFileDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/NameMappingDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TheaterDTO.html":{},"classes/TheatreStatusDTO.html":{}}}],["l'autore",{"_index":2067,"title":{},"body":{"components/HomeComponent.html":{}}}],["l'editor",{"_index":3265,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["l'effettivo",{"_index":1277,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["l'elaborazione",{"_index":2417,"title":{},"body":{"classes/ModalButton.html":{},"classes/ModalItem.html":{}}}],["l'elemento",{"_index":915,"title":{},"body":{"components/ComposerComponent.html":{},"components/HomeComponent.html":{},"components/UnderbarComponent.html":{}}}],["l'environment",{"_index":1984,"title":{},"body":{"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{}}}],["l'estensione",{"_index":1841,"title":{},"body":{"injectables/ExportService.html":{},"injectables/FileService.html":{}}}],["l'evento",{"_index":1385,"title":{},"body":{"components/DataItemComponent.html":{},"injectables/FileService.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/UnderbarComponent.html":{}}}],["l'export",{"_index":620,"title":{},"body":{"classes/AreaExport.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"injectables/ExportService.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/SourceExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["l'header",{"_index":3664,"title":{},"body":{"injectables/TokenService.html":{}}}],["l'hide",{"_index":2446,"title":{},"body":{"components/ModalComponent.html":{}}}],["l'html",{"_index":1538,"title":{},"body":{"components/DocsComponent.html":{}}}],["l'http",{"_index":3667,"title":{},"body":{"injectables/TokenService.html":{}}}],["l'id",{"_index":2088,"title":{},"body":{"components/HomeComponent.html":{},"components/TabnavComponent.html":{}}}],["l'indicazione",{"_index":1454,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["l'indice",{"_index":1598,"title":{},"body":{"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{}}}],["l'insieme",{"_index":500,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["l'instanziazione",{"_index":3175,"title":{},"body":{"classes/PerseDataForTheaterComposer.html":{}}}],["l'isieme",{"_index":2079,"title":{},"body":{"components/HomeComponent.html":{}}}],["l'observable",{"_index":3428,"title":{},"body":{"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{}}}],["l'occorrenza",{"_index":3048,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["l'operazione",{"_index":1161,"title":{},"body":{"components/DataInputComponent.html":{}}}],["l'opzione",{"_index":3085,"title":{},"body":{"injectables/ParseService.html":{}}}],["l'underbar",{"_index":3720,"title":{},"body":{"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{}}}],["l'unsibscribe",{"_index":2486,"title":{},"body":{"injectables/ModalService.html":{}}}],["l'update",{"_index":2435,"title":{},"body":{"components/ModalComponent.html":{},"components/OffcanvasComponent.html":{}}}],["la",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"classes/AreaDTO.html":{},"classes/BorderNetworkDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"components/DocsComponent.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/ExportModule.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"classes/HostNode.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/MirroringModuleInstanceNode.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"components/NavbarComponent.html":{},"classes/NetOSRouterDTO.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkDTO.html":{},"classes/NetworkNode.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/SubnetDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"components/TabnavComponent.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"injectables/TokenService.html":{},"classes/TypesCatalogueDTO.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{},"miscellaneous/functions.html":{}}}],["label",{"_index":578,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["landing",{"_index":2021,"title":{},"body":{"components/HomeComponent.html":{},"components/NavbarElementComponent.html":{}}}],["large",{"_index":2185,"title":{},"body":{"components/HomeComponent.html":{}}}],["last",{"_index":506,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["lastmodifiedby",{"_index":554,"title":{},"body":{"classes/AreaDTO.html":{},"classes/BlueprintFileDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/NameMappingDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheatreStatusDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["lastmodifieddate",{"_index":555,"title":{},"body":{"classes/AreaDTO.html":{},"classes/BlueprintFileDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/NameMappingDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheatreStatusDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["le",{"_index":9,"title":{},"body":{"classes/Aoption.html":{},"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"classes/BorderNetworkDTO.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"classes/FlavorApplication.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"classes/HostModuleDTO.html":{},"classes/HostPortModuleDTO.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"injectables/ModalService.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"interfaces/ModuleTopology.html":{},"components/NavbarComponent.html":{},"classes/NavbarElement.html":{},"components/NavbarElementComponent.html":{},"classes/NavbarItem.html":{},"classes/NetOSRouterDTO.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkDTO.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteConnection.html":{},"classes/SelectOption.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/SingleDataInputReturned.html":{},"classes/SourceExport.html":{},"classes/StatisticItemDTO.html":{},"injectables/StorageService.html":{},"classes/SubnetDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"components/TabnavComponent.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterApplication.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheaterSimpleData.html":{},"interfaces/TheaterTopology.html":{},"injectables/TokenService.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/TypesCatalogueDTO.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"components/VisualizerComponent.html":{},"miscellaneous/functions.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["left",{"_index":2250,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["legenda",{"_index":164,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["lg",{"_index":1393,"title":{},"body":{"components/DataItemComponent.html":{},"components/OffcanvasComponent.html":{}}}],["li",{"_index":2890,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["libreria",{"_index":1030,"title":{},"body":{"components/ControlTemplate.html":{},"classes/_Control.html":{},"index.html":{}}}],["light",{"_index":2163,"title":{},"body":{"components/HomeComponent.html":{}}}],["lighten($node",{"_index":2241,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["line",{"_index":2258,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["linear",{"_index":2148,"title":{},"body":{"components/HomeComponent.html":{},"components/NavbarElementComponent.html":{}}}],["link",{"_index":676,"title":{},"body":{"injectables/AttachmentsService.html":{},"components/DataInputV2Component.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"injectables/FlavorService.html":{},"injectables/ModuleService.html":{},"injectables/TheaterService.html":{}}}],["link:hover",{"_index":1346,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["linux",{"_index":1439,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["list",{"_index":1201,"title":{},"body":{"components/DataInputComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{}}}],["literal",{"_index":743,"title":{},"body":{"classes/BlueprintFileDTO.html":{},"classes/BorderNetworkDTO.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/DataInputReturned.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"classes/FlavorDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/NetOSRouterDTO.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesSSD.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterExport.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"classes/TypesCatalogueDTO.html":{},"classes/UnderbarItem.html":{},"classes/_Control.html":{},"miscellaneous/functions.html":{}}}],["livelli",{"_index":1352,"title":{},"body":{"components/DataItemComponent.html":{}}}],["lo",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"classes/AreaDTO.html":{},"classes/BlueprintFileDTO.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/DeployInstanceDTO.html":{},"components/DocsComponent.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/NameMappingDTO.html":{},"components/NavbarComponent.html":{},"classes/NetworkNode.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"classes/StatisticItemDTO.html":{},"classes/SubnetNode.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterDTO.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/TheatreStatusDTO.html":{},"classes/TypesCatalogueDTO.html":{},"components/VisualizerComponent.html":{},"miscellaneous/functions.html":{}}}],["loading",{"_index":841,"title":{},"body":{"components/ComposerComponent.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"components/VisualizerComponent.html":{}}}],["local_interface",{"_index":584,"title":{},"body":{"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/ExportTheater.html":{},"classes/GenericParameterDTO.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/SourceExport.html":{},"classes/StatisticItemDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheaterSimpleData.html":{},"classes/TypesCatalogueDTO.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["locale",{"_index":1922,"title":{},"body":{"injectables/FileService.html":{}}}],["lockacquiredtimestamp",{"_index":556,"title":{},"body":{"classes/AreaDTO.html":{},"classes/BlueprintFileDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/NameMappingDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheatreStatusDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["locklastuseracquiring",{"_index":557,"title":{},"body":{"classes/AreaDTO.html":{},"classes/BlueprintFileDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/NameMappingDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheatreStatusDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["lockreleasedtimestamp",{"_index":558,"title":{},"body":{"classes/AreaDTO.html":{},"classes/BlueprintFileDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/NameMappingDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheatreStatusDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["log",{"_index":715,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["logo_img",{"_index":40,"title":{},"body":{"classes/Aoption.html":{},"classes/NavbarElement.html":{},"classes/NavbarItem.html":{}}}],["loro",{"_index":3700,"title":{},"body":{"components/UnderbarComponent.html":{}}}],["ma",{"_index":3187,"title":{},"body":{"classes/PerseDataForTheaterComposer.html":{}}}],["machine",{"_index":1475,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/ExportModule.html":{}}}],["make",{"_index":2127,"title":{},"body":{"components/HomeComponent.html":{}}}],["map",{"_index":602,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["mapping",{"_index":757,"title":{},"body":{"classes/BlueprintFileDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/NameMappingDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TheaterDTO.html":{},"classes/TheatreStatusDTO.html":{}}}],["margin",{"_index":1343,"title":{},"body":{"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["match",{"_index":2970,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["max",{"_index":3315,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["mb",{"_index":2222,"title":{},"body":{"components/HostComponent.html":{}}}],["mcclass",{"_index":525,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["me.description",{"_index":1703,"title":{},"body":{"classes/ExportModule.html":{}}}],["me.imports",{"_index":1705,"title":{},"body":{"classes/ExportModule.html":{}}}],["me.node_templates",{"_index":1731,"title":{},"body":{"classes/ExportModule.html":{}}}],["me.tosca_definitions_version",{"_index":1701,"title":{},"body":{"classes/ExportModule.html":{}}}],["memorizza",{"_index":858,"title":{},"body":{"components/ComposerComponent.html":{},"injectables/ModalService.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"injectables/StorageService.html":{},"components/VisualizerComponent.html":{}}}],["memorizzare",{"_index":1644,"title":{},"body":{"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"injectables/TokenService.html":{}}}],["memorizzati",{"_index":3452,"title":{},"body":{"injectables/StorageService.html":{}}}],["meno",{"_index":1281,"title":{},"body":{"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"injectables/FileService.html":{},"injectables/ParseService.html":{}}}],["menu",{"_index":3271,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"dependencies.html":{}}}],["messaggio",{"_index":2495,"title":{},"body":{"injectables/ModalService.html":{}}}],["messo",{"_index":2808,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["metadati",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["metodi",{"_index":245,"title":{},"body":{"modules/AppModule.html":{},"injectables/AttachmentsService.html":{},"injectables/AuthGuard.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"injectables/FlavorService.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"classes/HostNode.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"injectables/ModuleService.html":{},"components/NavbarComponent.html":{},"components/NetworkComponent.html":{},"classes/NetworkNode.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"injectables/SpinnerService.html":{},"components/SubnetComponent.html":{},"classes/SubnetNode.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"injectables/TheaterService.html":{},"injectables/TokenService.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{}}}],["mi",{"_index":1890,"title":{},"body":{"classes/ExportTheater.html":{}}}],["mi[module.data.name",{"_index":1905,"title":{},"body":{"classes/ExportTheater.html":{}}}],["mid",{"_index":2780,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["middle",{"_index":2254,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["min",{"_index":2237,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["minimap",{"_index":3275,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"dependencies.html":{},"index.html":{}}}],["minimapplugin",{"_index":3274,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["mirroring",{"_index":1471,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["mirroringmoduleinstance",{"_index":1463,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/EmptyModuleInfo.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{}}}],["mirroringmoduleinstance.component",{"_index":2403,"title":{},"body":{"classes/MirroringModuleInstanceNode.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{}}}],["mirroringmoduleinstance.component.html",{"_index":2368,"title":{},"body":{"components/MirroringModuleInstanceComponent.html":{}}}],["mirroringmoduleinstance.component.sass",{"_index":2367,"title":{},"body":{"components/MirroringModuleInstanceComponent.html":{}}}],["mirroringmoduleinstance/mirroringmoduleinstancenode",{"_index":1592,"title":{},"body":{"classes/EmptyModuleInfo.html":{}}}],["mirroringmoduleinstance_icon",{"_index":2375,"title":{},"body":{"components/MirroringModuleInstanceComponent.html":{}}}],["mirroringmoduleinstancecomponent",{"_index":192,"title":{"components/MirroringModuleInstanceComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"overview.html":{}}}],["mirroringmoduleinstanceicon",{"_index":2369,"title":{},"body":{"components/MirroringModuleInstanceComponent.html":{}}}],["mirroringmoduleinstancenode",{"_index":1591,"title":{"classes/MirroringModuleInstanceNode.html":{}},"body":{"classes/EmptyModuleInfo.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/TheaterModuleInstanceNode.html":{},"miscellaneous/functions.html":{}}}],["miscellaneous",{"_index":3822,"title":{"miscellaneous/functions.html":{}},"body":{}}],["mit",{"_index":3185,"title":{},"body":{"classes/PerseDataForTheaterComposer.html":{}}}],["mock",{"_index":3086,"title":{},"body":{"injectables/ParseService.html":{}}}],["mock/dataset",{"_index":3088,"title":{},"body":{"injectables/ParseService.html":{}}}],["mockato",{"_index":346,"title":{},"body":{"modules/AppModule.html":{}}}],["mocked",{"_index":3067,"title":{},"body":{"injectables/ParseService.html":{}}}],["mocked?=environment.mocked",{"_index":3093,"title":{},"body":{"injectables/ParseService.html":{}}}],["mockedallflavors",{"_index":3074,"title":{},"body":{"injectables/ParseService.html":{}}}],["mockedallmodules",{"_index":3082,"title":{},"body":{"injectables/ParseService.html":{}}}],["mockedmodule",{"_index":3078,"title":{},"body":{"injectables/ParseService.html":{}}}],["mockedmodule(id",{"_index":3099,"title":{},"body":{"injectables/ParseService.html":{}}}],["mockedtheater",{"_index":3084,"title":{},"body":{"injectables/ParseService.html":{}}}],["mockedtheater(id",{"_index":3095,"title":{},"body":{"injectables/ParseService.html":{}}}],["modal",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"classes/ModalButton.html":{},"components/ModalComponent.html":{},"classes/ModalItem.html":{}}}],["modal'},{'name",{"_index":194,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["modal.component.html",{"_index":2423,"title":{},"body":{"components/ModalComponent.html":{}}}],["modal.component.sass",{"_index":2422,"title":{},"body":{"components/ModalComponent.html":{}}}],["modalbutton",{"_index":2406,"title":{"classes/ModalButton.html":{}},"body":{"classes/ModalButton.html":{},"components/ModalComponent.html":{},"classes/ModalItem.html":{},"injectables/ModalService.html":{}}}],["modalcomponent",{"_index":193,"title":{"components/ModalComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/ModalButton.html":{},"components/ModalComponent.html":{},"classes/ModalItem.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"overview.html":{}}}],["modaldata",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"injectables/ModalService.html":{}}}],["modale",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{}}}],["modalit",{"_index":540,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["modalitem",{"_index":100,"title":{"classes/ModalItem.html":{}},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"classes/ModalButton.html":{},"components/ModalComponent.html":{},"classes/ModalItem.html":{},"injectables/ModalService.html":{}}}],["modalitem.text_content",{"_index":2522,"title":{},"body":{"injectables/ModalService.html":{}}}],["modalservice",{"_index":89,"title":{"injectables/ModalService.html":{}},"body":{"components/AppComponent.html":{},"injectables/ModalService.html":{}}}],["modaltype",{"_index":2450,"title":{},"body":{"components/ModalComponent.html":{}}}],["mode",{"_index":573,"title":{},"body":{"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/SourceExport.html":{},"classes/StatisticItemDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheaterSimpleData.html":{},"classes/TypesCatalogueDTO.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["modelsapplication/applicationmodels",{"_index":1697,"title":{},"body":{"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["modelsdto/falvordto",{"_index":399,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"injectables/FlavorService.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["modelsdto/hostdto",{"_index":401,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"injectables/ModuleService.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["modelsdto/moduledto",{"_index":409,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"injectables/ModuleService.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"injectables/TheaterService.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["modelsdto/networkdto",{"_index":2942,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["modelsdto/theaterdto",{"_index":410,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"injectables/TheaterService.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["modelsexport/moduleexport",{"_index":1698,"title":{},"body":{"classes/ExportModule.html":{},"injectables/ExportService.html":{}}}],["modelsexport/theaterexport",{"_index":1851,"title":{},"body":{"injectables/ExportService.html":{},"classes/ExportTheater.html":{}}}],["modelsexport/typeexport",{"_index":1699,"title":{},"body":{"classes/ExportModule.html":{},"classes/ExportTheater.html":{}}}],["modetypeexport",{"_index":615,"title":{},"body":{"classes/AreaExport.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/SourceExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["modetypeexport.managed",{"_index":1788,"title":{},"body":{"classes/ExportModule.html":{},"classes/ExportTheater.html":{}}}],["modifica",{"_index":1226,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["modifiche",{"_index":1257,"title":{},"body":{"components/DataInputV2Component.html":{},"index.html":{}}}],["modo",{"_index":1134,"title":{},"body":{"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"injectables/ModalService.html":{},"components/TabnavComponent.html":{}}}],["module",{"_index":38,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"classes/Aoption.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"classes/FlavorApplication.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"components/ModalComponent.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"interfaces/ModuleTopology.html":{},"components/NavbarComponent.html":{},"classes/NavbarElement.html":{},"components/NavbarElementComponent.html":{},"classes/NavbarItem.html":{},"components/NetworkComponent.html":{},"classes/NodeTopologyElement.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesTSD.html":{},"classes/ReteConnection.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/SourceExport.html":{},"classes/StatisticItemDTO.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterApplication.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/TheaterSimpleData.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/TypesCatalogueDTO.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"miscellaneous/functions.html":{},"classes/reteBasicModuleInfo.html":{}}}],["module.data.area",{"_index":1895,"title":{},"body":{"classes/ExportTheater.html":{}}}],["module.data.module",{"_index":1893,"title":{},"body":{"classes/ExportTheater.html":{}}}],["module.data.sequence",{"_index":1896,"title":{},"body":{"classes/ExportTheater.html":{}}}],["module.data.version",{"_index":1894,"title":{},"body":{"classes/ExportTheater.html":{}}}],["module.inputs",{"_index":1897,"title":{},"body":{"classes/ExportTheater.html":{}}}],["module.inputs[key",{"_index":1899,"title":{},"body":{"classes/ExportTheater.html":{}}}],["module/theater",{"_index":2044,"title":{},"body":{"components/HomeComponent.html":{}}}],["module_constraints",{"_index":958,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/ExportModule.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["module_content",{"_index":3015,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["module_content.properties.consumer_interfaces_link",{"_index":3016,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["module_id",{"_index":663,"title":{},"body":{"injectables/AttachmentsService.html":{},"injectables/ModuleService.html":{}}}],["module_instance",{"_index":585,"title":{},"body":{"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesTSD.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/SourceExport.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheaterSimpleData.html":{},"classes/TypesCatalogueDTO.html":{}}}],["module_instance_name",{"_index":760,"title":{},"body":{"classes/BlueprintFileDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/NameMappingDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TheaterDTO.html":{},"classes/TheatreStatusDTO.html":{}}}],["module_interface",{"_index":1023,"title":{},"body":{"classes/ConsumerInterfaceLinkExport.html":{},"classes/ExportTheater.html":{}}}],["module_interface:string",{"_index":647,"title":{},"body":{"classes/AreaExport.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesTSD.html":{},"classes/SourceExport.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{}}}],["module_name",{"_index":761,"title":{},"body":{"classes/BlueprintFileDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/DeployInstanceDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NameMappingDTO.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/TagCatalogueDTO.html":{},"classes/TheaterDTO.html":{},"classes/TheatreStatusDTO.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["moduleapplication",{"_index":434,"title":{"classes/ModuleApplication.html":{}},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"injectables/FileService.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"components/VisualizerComponent.html":{},"miscellaneous/functions.html":{}}}],["moduleapplication).validateobject",{"_index":1972,"title":{},"body":{"injectables/FileService.html":{}}}],["moduleclassificationdto",{"_index":521,"title":{"classes/ModuleClassificationDTO.html":{}},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["modulecomponents",{"_index":1610,"title":{},"body":{"classes/EmptyModuleInfo.html":{}}}],["modulecomposer",{"_index":838,"title":{},"body":{"components/ComposerComponent.html":{}}}],["moduleconnected",{"_index":1901,"title":{},"body":{"classes/ExportTheater.html":{}}}],["moduleconnected.data.name",{"_index":1903,"title":{},"body":{"classes/ExportTheater.html":{}}}],["moduleconstraints",{"_index":962,"title":{"classes/ModuleConstraints.html":{}},"body":{"classes/ConstraintsMSD.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["moduledesigner/mddata",{"_index":3091,"title":{},"body":{"injectables/ParseService.html":{}}}],["moduledict",{"_index":2980,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["moduledict[value.name",{"_index":2984,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["moduledto",{"_index":407,"title":{"classes/ModuleDTO.html":{}},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"classes/BlueprintFileDTO.html":{},"interfaces/CommonModule.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/FlavorApplication.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"injectables/ModuleService.html":{},"classes/ModuleStatusDTO.html":{},"interfaces/ModuleTopology.html":{},"classes/NameMappingDTO.html":{},"classes/NodeTopologyElement.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/ReteConnection.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"interfaces/TheaterTopology.html":{},"classes/TheatreStatusDTO.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/TypesCatalogueDTO.html":{}}}],["moduledto:124",{"_index":2543,"title":{},"body":{"classes/ModuleApplication.html":{}}}],["moduledto:125",{"_index":2544,"title":{},"body":{"classes/ModuleApplication.html":{}}}],["moduledto:126",{"_index":2545,"title":{},"body":{"classes/ModuleApplication.html":{}}}],["moduledto:127",{"_index":2546,"title":{},"body":{"classes/ModuleApplication.html":{}}}],["moduledto:128",{"_index":2547,"title":{},"body":{"classes/ModuleApplication.html":{}}}],["moduledto:129",{"_index":2548,"title":{},"body":{"classes/ModuleApplication.html":{}}}],["moduledto:130",{"_index":2549,"title":{},"body":{"classes/ModuleApplication.html":{}}}],["moduledto:131",{"_index":2550,"title":{},"body":{"classes/ModuleApplication.html":{}}}],["moduledto:132",{"_index":2551,"title":{},"body":{"classes/ModuleApplication.html":{}}}],["moduledto:133",{"_index":2552,"title":{},"body":{"classes/ModuleApplication.html":{}}}],["moduledto:134",{"_index":2554,"title":{},"body":{"classes/ModuleApplication.html":{}}}],["moduledto:135",{"_index":2553,"title":{},"body":{"classes/ModuleApplication.html":{}}}],["moduledto:136",{"_index":2555,"title":{},"body":{"classes/ModuleApplication.html":{}}}],["moduledto:137",{"_index":2556,"title":{},"body":{"classes/ModuleApplication.html":{}}}],["moduleexport",{"_index":971,"title":{"classes/ModuleExport.html":{}},"body":{"classes/ConstraintsMSD.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["moduleexport[this.module.name",{"_index":1811,"title":{},"body":{"classes/ExportModule.html":{}}}],["moduleinfo",{"_index":474,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["moduleinfo.host_number",{"_index":3059,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["moduleinfo.hosts.foreach",{"_index":3027,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["moduleinfo.interfaces",{"_index":3053,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["moduleinfo.network_number",{"_index":3061,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["moduleinfo.subnet_number",{"_index":3060,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["moduleinfo.topology",{"_index":3058,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["moduleinfo2",{"_index":3154,"title":{},"body":{"classes/PerseDataForModuleVisualizer.html":{}}}],["moduleinfo[key",{"_index":2990,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["moduleinstance",{"_index":473,"title":{"classes/ModuleInstance.html":{}},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"miscellaneous/functions.html":{}}}],["moduleinstance.properties.module",{"_index":3007,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["moduleinstanceconfigurationuuid",{"_index":752,"title":{},"body":{"classes/BlueprintFileDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/NameMappingDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TheaterDTO.html":{},"classes/TheatreStatusDTO.html":{}}}],["moduleinstancedto",{"_index":406,"title":{"classes/ModuleInstanceDTO.html":{}},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"classes/BlueprintFileDTO.html":{},"interfaces/CommonModule.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/FlavorApplication.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"interfaces/ModuleTopology.html":{},"classes/NameMappingDTO.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteConnection.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"interfaces/TheaterTopology.html":{},"classes/TheatreStatusDTO.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/TypesCatalogueDTO.html":{},"miscellaneous/functions.html":{}}}],["moduleinstancedto:227",{"_index":2603,"title":{},"body":{"classes/ModuleInstance.html":{}}}],["moduleinstancedto:228",{"_index":2604,"title":{},"body":{"classes/ModuleInstance.html":{}}}],["moduleinstancename",{"_index":753,"title":{},"body":{"classes/BlueprintFileDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/NameMappingDTO.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/TagCatalogueDTO.html":{},"classes/TheaterDTO.html":{},"classes/TheatreStatusDTO.html":{}}}],["moduleinstancepropertiesdto",{"_index":403,"title":{"classes/ModuleInstancePropertiesDTO.html":{}},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"interfaces/CommonModule.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/FlavorApplication.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterApplication.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/TypesCatalogueDTO.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["moduleinstancepropertiesdto:166",{"_index":3240,"title":{},"body":{"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/reteBasicModuleInfo.html":{}}}],["moduleinstancepropertiesdto:167",{"_index":3242,"title":{},"body":{"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/reteBasicModuleInfo.html":{}}}],["moduleinstancepropertiesdto:168",{"_index":3243,"title":{},"body":{"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/reteBasicModuleInfo.html":{}}}],["moduleinstancepropertiesdto:169",{"_index":3245,"title":{},"body":{"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/reteBasicModuleInfo.html":{}}}],["moduleinstancepropertiesdto:170",{"_index":3244,"title":{},"body":{"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/reteBasicModuleInfo.html":{}}}],["moduleinstancepropertiesdto:171",{"_index":3241,"title":{},"body":{"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/reteBasicModuleInfo.html":{}}}],["moduleinstances",{"_index":2949,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["moduleinstancesimpledata",{"_index":631,"title":{"classes/ModuleInstanceSimpleData.html":{}},"body":{"classes/AreaExport.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/ExportTheater.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesTSD.html":{},"classes/SourceExport.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{}}}],["moduleinstancesimpledata.properties.consumer_interface_link.push",{"_index":1902,"title":{},"body":{"classes/ExportTheater.html":{}}}],["moduleinstanceuuid",{"_index":754,"title":{},"body":{"classes/BlueprintFileDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/NameMappingDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TheaterDTO.html":{},"classes/TheatreStatusDTO.html":{}}}],["moduleinterfacedto",{"_index":3850,"title":{},"body":{"miscellaneous/functions.html":{}}}],["moduleintotheater",{"_index":2965,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["moduleintotheater.properties",{"_index":2974,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["moduleintotheater.type.tolowercase().includes(theatertype.theater.tolowercase",{"_index":2966,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["modulelistdto",{"_index":503,"title":{"classes/ModuleListDTO.html":{}},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"injectables/ModuleService.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["modulemodedto",{"_index":541,"title":{"classes/ModuleModeDTO.html":{}},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["modulenetworkinterfacedto",{"_index":402,"title":{"classes/ModuleNetworkInterfaceDTO.html":{}},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"interfaces/CommonModule.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/FlavorApplication.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"injectables/ModuleService.html":{},"classes/ModuleStatusDTO.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteConnection.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterApplication.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/TypesCatalogueDTO.html":{}}}],["modules",{"_index":930,"title":{"modules.html":{}},"body":{"components/ComposerComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["modules.ts",{"_index":1577,"title":{},"body":{"classes/EmptyModuleInfo.html":{}}}],["modules.ts:38",{"_index":1589,"title":{},"body":{"classes/EmptyModuleInfo.html":{}}}],["modules.ts:39",{"_index":1588,"title":{},"body":{"classes/EmptyModuleInfo.html":{}}}],["modules.ts:40",{"_index":1587,"title":{},"body":{"classes/EmptyModuleInfo.html":{}}}],["modules.ts:41",{"_index":1590,"title":{},"body":{"classes/EmptyModuleInfo.html":{}}}],["modules.ts:42",{"_index":1586,"title":{},"body":{"classes/EmptyModuleInfo.html":{}}}],["modules.ts:43",{"_index":1584,"title":{},"body":{"classes/EmptyModuleInfo.html":{}}}],["modules.ts:44",{"_index":1585,"title":{},"body":{"classes/EmptyModuleInfo.html":{}}}],["modules/export",{"_index":1576,"title":{},"body":{"classes/EmptyModuleInfo.html":{}}}],["modules/mirroringmoduleinstance/mirroringmoduleinstance.component",{"_index":281,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/mirroringmoduleinstance/mirroringmoduleinstance.component.ts",{"_index":2366,"title":{},"body":{"components/MirroringModuleInstanceComponent.html":{}}}],["modules/mirroringmoduleinstance/mirroringmoduleinstance.component.ts:17",{"_index":2382,"title":{},"body":{"components/MirroringModuleInstanceComponent.html":{}}}],["modules/mirroringmoduleinstance/mirroringmoduleinstance.component.ts:18",{"_index":2381,"title":{},"body":{"components/MirroringModuleInstanceComponent.html":{}}}],["modules/mirroringmoduleinstance/mirroringmoduleinstance.component.ts:19",{"_index":2380,"title":{},"body":{"components/MirroringModuleInstanceComponent.html":{}}}],["modules/mirroringmoduleinstance/mirroringmoduleinstance.component.ts:20",{"_index":2379,"title":{},"body":{"components/MirroringModuleInstanceComponent.html":{}}}],["modules/mirroringmoduleinstance/mirroringmoduleinstance.component.ts:22",{"_index":2376,"title":{},"body":{"components/MirroringModuleInstanceComponent.html":{}}}],["modules/mirroringmoduleinstance/mirroringmoduleinstance.component.ts:23",{"_index":2377,"title":{},"body":{"components/MirroringModuleInstanceComponent.html":{}}}],["modules/mirroringmoduleinstance/mirroringmoduleinstance.component.ts:24",{"_index":2383,"title":{},"body":{"components/MirroringModuleInstanceComponent.html":{}}}],["modules/mirroringmoduleinstance/mirroringmoduleinstance.component.ts:25",{"_index":2378,"title":{},"body":{"components/MirroringModuleInstanceComponent.html":{}}}],["modules/mirroringmoduleinstance/mirroringmoduleinstance.component.ts:26",{"_index":2373,"title":{},"body":{"components/MirroringModuleInstanceComponent.html":{}}}],["modules/mirroringmoduleinstance/mirroringmoduleinstance.component.ts:34",{"_index":2374,"title":{},"body":{"components/MirroringModuleInstanceComponent.html":{}}}],["modules/mirroringmoduleinstance/mirroringmoduleinstancenode",{"_index":393,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["modules/mirroringmoduleinstance/mirroringmoduleinstancenode.ts",{"_index":2395,"title":{},"body":{"classes/MirroringModuleInstanceNode.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"miscellaneous/functions.html":{}}}],["modules/mirroringmoduleinstance/mirroringmoduleinstancenode.ts:122",{"_index":2402,"title":{},"body":{"classes/MirroringModuleInstanceNode.html":{}}}],["modules/mirroringmoduleinstance/mirroringmoduleinstancenode.ts:130",{"_index":2398,"title":{},"body":{"classes/MirroringModuleInstanceNode.html":{}}}],["modules/mirroringmoduleinstance/mirroringmoduleinstancenode.ts:138",{"_index":2400,"title":{},"body":{"classes/MirroringModuleInstanceNode.html":{}}}],["modules/mirroringmoduleinstance/mirroringmoduleinstancenode.ts:49",{"_index":2396,"title":{},"body":{"classes/MirroringModuleInstanceNode.html":{}}}],["modules/mirroringmoduleinstance/mirroringmoduleinstancenode.ts:67",{"_index":2397,"title":{},"body":{"classes/MirroringModuleInstanceNode.html":{}}}],["modules/mirroringmoduleinstance/mirroringmoduleinstancenode.ts:79",{"_index":2399,"title":{},"body":{"classes/MirroringModuleInstanceNode.html":{}}}],["modules/mirroringmoduleinstance/mirroringmoduleinstancenode.ts:92",{"_index":2401,"title":{},"body":{"classes/MirroringModuleInstanceNode.html":{}}}],["modules/theaterinternalservicemoduleinstance/theaterinternalservicemoduleinstance.component",{"_index":282,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/theaterinternalservicemoduleinstance/theaterinternalservicemoduleinstance.component.ts",{"_index":3590,"title":{},"body":{"components/TheaterInternalServiceModuleInstanceComponent.html":{}}}],["modules/theaterinternalservicemoduleinstance/theaterinternalservicemoduleinstance.component.ts:16",{"_index":3601,"title":{},"body":{"components/TheaterInternalServiceModuleInstanceComponent.html":{}}}],["modules/theaterinternalservicemoduleinstance/theaterinternalservicemoduleinstance.component.ts:17",{"_index":3600,"title":{},"body":{"components/TheaterInternalServiceModuleInstanceComponent.html":{}}}],["modules/theaterinternalservicemoduleinstance/theaterinternalservicemoduleinstance.component.ts:18",{"_index":3599,"title":{},"body":{"components/TheaterInternalServiceModuleInstanceComponent.html":{}}}],["modules/theaterinternalservicemoduleinstance/theaterinternalservicemoduleinstance.component.ts:19",{"_index":3598,"title":{},"body":{"components/TheaterInternalServiceModuleInstanceComponent.html":{}}}],["modules/theaterinternalservicemoduleinstance/theaterinternalservicemoduleinstance.component.ts:21",{"_index":3604,"title":{},"body":{"components/TheaterInternalServiceModuleInstanceComponent.html":{}}}],["modules/theaterinternalservicemoduleinstance/theaterinternalservicemoduleinstance.component.ts:22",{"_index":3596,"title":{},"body":{"components/TheaterInternalServiceModuleInstanceComponent.html":{}}}],["modules/theaterinternalservicemoduleinstance/theaterinternalservicemoduleinstance.component.ts:23",{"_index":3602,"title":{},"body":{"components/TheaterInternalServiceModuleInstanceComponent.html":{}}}],["modules/theaterinternalservicemoduleinstance/theaterinternalservicemoduleinstance.component.ts:24",{"_index":3597,"title":{},"body":{"components/TheaterInternalServiceModuleInstanceComponent.html":{}}}],["modules/theaterinternalservicemoduleinstance/theaterinternalservicemoduleinstance.component.ts:25",{"_index":3594,"title":{},"body":{"components/TheaterInternalServiceModuleInstanceComponent.html":{}}}],["modules/theaterinternalservicemoduleinstance/theaterinternalservicemoduleinstance.component.ts:33",{"_index":3595,"title":{},"body":{"components/TheaterInternalServiceModuleInstanceComponent.html":{}}}],["modules/theaterinternalservicemoduleinstance/theaterinternalservicemoduleinstancenode",{"_index":395,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["modules/theaterinternalservicemoduleinstance/theaterinternalservicemoduleinstancenode.ts",{"_index":3357,"title":{},"body":{"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"miscellaneous/functions.html":{}}}],["modules/theaterinternalservicemoduleinstance/theaterinternalservicemoduleinstancenode.ts:122",{"_index":3612,"title":{},"body":{"classes/TheaterInternalServiceModuleInstanceNode.html":{}}}],["modules/theaterinternalservicemoduleinstance/theaterinternalservicemoduleinstancenode.ts:130",{"_index":3608,"title":{},"body":{"classes/TheaterInternalServiceModuleInstanceNode.html":{}}}],["modules/theaterinternalservicemoduleinstance/theaterinternalservicemoduleinstancenode.ts:138",{"_index":3610,"title":{},"body":{"classes/TheaterInternalServiceModuleInstanceNode.html":{}}}],["modules/theaterinternalservicemoduleinstance/theaterinternalservicemoduleinstancenode.ts:49",{"_index":3606,"title":{},"body":{"classes/TheaterInternalServiceModuleInstanceNode.html":{}}}],["modules/theaterinternalservicemoduleinstance/theaterinternalservicemoduleinstancenode.ts:67",{"_index":3607,"title":{},"body":{"classes/TheaterInternalServiceModuleInstanceNode.html":{}}}],["modules/theaterinternalservicemoduleinstance/theaterinternalservicemoduleinstancenode.ts:79",{"_index":3609,"title":{},"body":{"classes/TheaterInternalServiceModuleInstanceNode.html":{}}}],["modules/theaterinternalservicemoduleinstance/theaterinternalservicemoduleinstancenode.ts:92",{"_index":3611,"title":{},"body":{"classes/TheaterInternalServiceModuleInstanceNode.html":{}}}],["modules/theatermoduleinstance/theatermoduleinstance.component",{"_index":283,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/theatermoduleinstance/theatermoduleinstance.component.ts",{"_index":3613,"title":{},"body":{"components/TheaterModuleInstanceComponent.html":{}}}],["modules/theatermoduleinstance/theatermoduleinstance.component.ts:16",{"_index":3624,"title":{},"body":{"components/TheaterModuleInstanceComponent.html":{}}}],["modules/theatermoduleinstance/theatermoduleinstance.component.ts:17",{"_index":3623,"title":{},"body":{"components/TheaterModuleInstanceComponent.html":{}}}],["modules/theatermoduleinstance/theatermoduleinstance.component.ts:18",{"_index":3622,"title":{},"body":{"components/TheaterModuleInstanceComponent.html":{}}}],["modules/theatermoduleinstance/theatermoduleinstance.component.ts:19",{"_index":3621,"title":{},"body":{"components/TheaterModuleInstanceComponent.html":{}}}],["modules/theatermoduleinstance/theatermoduleinstance.component.ts:21",{"_index":3627,"title":{},"body":{"components/TheaterModuleInstanceComponent.html":{}}}],["modules/theatermoduleinstance/theatermoduleinstance.component.ts:22",{"_index":3619,"title":{},"body":{"components/TheaterModuleInstanceComponent.html":{}}}],["modules/theatermoduleinstance/theatermoduleinstance.component.ts:23",{"_index":3625,"title":{},"body":{"components/TheaterModuleInstanceComponent.html":{}}}],["modules/theatermoduleinstance/theatermoduleinstance.component.ts:24",{"_index":3620,"title":{},"body":{"components/TheaterModuleInstanceComponent.html":{}}}],["modules/theatermoduleinstance/theatermoduleinstance.component.ts:25",{"_index":3617,"title":{},"body":{"components/TheaterModuleInstanceComponent.html":{}}}],["modules/theatermoduleinstance/theatermoduleinstance.component.ts:33",{"_index":3618,"title":{},"body":{"components/TheaterModuleInstanceComponent.html":{}}}],["modules/theatermoduleinstance/theatermoduleinstancenode",{"_index":397,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["modules/theatermoduleinstance/theatermoduleinstancenode.ts",{"_index":3361,"title":{},"body":{"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/TheaterModuleInstanceNode.html":{},"miscellaneous/functions.html":{}}}],["modules/theatermoduleinstance/theatermoduleinstancenode.ts:122",{"_index":3635,"title":{},"body":{"classes/TheaterModuleInstanceNode.html":{}}}],["modules/theatermoduleinstance/theatermoduleinstancenode.ts:130",{"_index":3631,"title":{},"body":{"classes/TheaterModuleInstanceNode.html":{}}}],["modules/theatermoduleinstance/theatermoduleinstancenode.ts:138",{"_index":3633,"title":{},"body":{"classes/TheaterModuleInstanceNode.html":{}}}],["modules/theatermoduleinstance/theatermoduleinstancenode.ts:49",{"_index":3629,"title":{},"body":{"classes/TheaterModuleInstanceNode.html":{}}}],["modules/theatermoduleinstance/theatermoduleinstancenode.ts:67",{"_index":3630,"title":{},"body":{"classes/TheaterModuleInstanceNode.html":{}}}],["modules/theatermoduleinstance/theatermoduleinstancenode.ts:79",{"_index":3632,"title":{},"body":{"classes/TheaterModuleInstanceNode.html":{}}}],["modules/theatermoduleinstance/theatermoduleinstancenode.ts:92",{"_index":3634,"title":{},"body":{"classes/TheaterModuleInstanceNode.html":{}}}],["modules[key",{"_index":3001,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["modules[moduleinstance.properties.module",{"_index":2998,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["modulesapplication",{"_index":2981,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["modulesdict",{"_index":813,"title":{},"body":{"components/ComposerComponent.html":{}}}],["moduleservice",{"_index":229,"title":{"injectables/ModuleService.html":{}},"body":{"modules/AppModule.html":{},"injectables/ModuleService.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"overview.html":{}}}],["modulesimpledata",{"_index":972,"title":{"classes/ModuleSimpleData.html":{}},"body":{"classes/ConstraintsMSD.html":{},"classes/ExportModule.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["modulesimpledata.properties.interface_networks[type].push",{"_index":1799,"title":{},"body":{"classes/ExportModule.html":{}}}],["modulesimpledata.properties.interface_networks[type][index].subnets.push",{"_index":1809,"title":{},"body":{"classes/ExportModule.html":{}}}],["modulesinfo",{"_index":2910,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["modulestatusdto",{"_index":543,"title":{"classes/ModuleStatusDTO.html":{}},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["moduletopology",{"_index":472,"title":{"interfaces/ModuleTopology.html":{}},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["moduletype",{"_index":1821,"title":{},"body":{"injectables/ExportService.html":{},"injectables/FileService.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["moduletype.mirroringmoduleinstance",{"_index":2387,"title":{},"body":{"components/MirroringModuleInstanceComponent.html":{}}}],["moduletype.theaterinternalservicemoduleinstance",{"_index":3605,"title":{},"body":{"components/TheaterInternalServiceModuleInstanceComponent.html":{}}}],["moduletype.theatermoduleinstance",{"_index":3628,"title":{},"body":{"components/TheaterModuleInstanceComponent.html":{}}}],["moduletype1",{"_index":1492,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["moduletype2",{"_index":1503,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["moduletype2[smr.type",{"_index":3182,"title":{},"body":{"classes/PerseDataForTheaterComposer.html":{}}}],["moduletype=\".\"+subjecttype.module.tolowercase",{"_index":1855,"title":{},"body":{"injectables/ExportService.html":{}}}],["moduletypeexport",{"_index":616,"title":{},"body":{"classes/AreaExport.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/SourceExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["moduletypeexport[0",{"_index":1892,"title":{},"body":{"classes/ExportTheater.html":{}}}],["moduletypeexport[module.data.type",{"_index":1891,"title":{},"body":{"classes/ExportTheater.html":{}}}],["moduletypeexport[this.module.type]?moduletypeexport[this.module.type]:moduletypeexport[0",{"_index":1787,"title":{},"body":{"classes/ExportModule.html":{}}}],["moduletypelink",{"_index":1498,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["moduletypetheater",{"_index":1483,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["moduletypetheater[moduletype2[value.type",{"_index":3186,"title":{},"body":{"classes/PerseDataForTheaterComposer.html":{}}}],["moduleuuid",{"_index":755,"title":{},"body":{"classes/BlueprintFileDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/NameMappingDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TheaterDTO.html":{},"classes/TheatreStatusDTO.html":{}}}],["modulevisualizer/mvdata",{"_index":3090,"title":{},"body":{"injectables/ParseService.html":{}}}],["moduli",{"_index":219,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"classes/FlavorApplication.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteConnection.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterApplication.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/TypesCatalogueDTO.html":{},"miscellaneous/functions.html":{},"modules.html":{},"overview.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["modulo",{"_index":433,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"classes/BlueprintFileDTO.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/DeployInstanceDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"classes/FlavorApplication.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"classes/HostNode.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"interfaces/ModuleTopology.html":{},"classes/NameMappingDTO.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkNode.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/SourceExport.html":{},"classes/StatisticItemDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/TheaterSimpleData.html":{},"interfaces/TheaterTopology.html":{},"classes/TheatreStatusDTO.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/TypesCatalogueDTO.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"components/VisualizerComponent.html":{},"miscellaneous/functions.html":{}}}],["modulo/teatro",{"_index":2068,"title":{},"body":{"components/HomeComponent.html":{}}}],["modulto",{"_index":530,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["momento",{"_index":869,"title":{},"body":{"components/ComposerComponent.html":{},"components/HomeComponent.html":{}}}],["more",{"_index":3914,"title":{},"body":{"index.html":{}}}],["mostra",{"_index":2506,"title":{},"body":{"injectables/ModalService.html":{}}}],["mostrare",{"_index":1222,"title":{},"body":{"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"components/HomeComponent.html":{},"components/NavbarElementComponent.html":{},"components/UnderbarComponent.html":{}}}],["mostrare/nascondere",{"_index":118,"title":{},"body":{"components/AppComponent.html":{}}}],["mostrata",{"_index":3512,"title":{},"body":{"components/TabnavComponent.html":{}}}],["motivo",{"_index":1507,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["mounted",{"_index":1035,"title":{},"body":{"components/ControlTemplate.html":{},"classes/_Control.html":{}}}],["mouseevent",{"_index":3882,"title":{},"body":{"index.html":{}}}],["moz",{"_index":2193,"title":{},"body":{"components/HomeComponent.html":{}}}],["msdvm",{"_index":1732,"title":{},"body":{"classes/ExportModule.html":{}}}],["msdvm.ports[++index",{"_index":1748,"title":{},"body":{"classes/ExportModule.html":{}}}],["msdvm.ports[index].network",{"_index":1771,"title":{},"body":{"classes/ExportModule.html":{}}}],["msdvm.ports[index].subnets.push",{"_index":1762,"title":{},"body":{"classes/ExportModule.html":{}}}],["multi",{"_index":337,"title":{},"body":{"modules/AppModule.html":{}}}],["multi)selection",{"_index":1142,"title":{},"body":{"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{}}}],["multiple",{"_index":1103,"title":{},"body":{"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{}}}],["multiple_mode",{"_index":990,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["multiselect",{"_index":1112,"title":{},"body":{"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{}}}],["mynodecomponent",{"_index":3290,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["n",{"_index":1812,"title":{},"body":{"classes/ExportModule.html":{},"components/HomeComponent.html":{}}}],["name",{"_index":171,"title":{},"body":{"components/AppComponent.html":{},"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"classes/BlueprintFileDTO.html":{},"classes/BorderNetworkDTO.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/DeployInstanceDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"classes/FlavorApplication.html":{},"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"classes/HostModuleDTO.html":{},"classes/HostNode.html":{},"classes/HostPortModuleDTO.html":{},"components/HowToUseComponent.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"components/ModalComponent.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"interfaces/ModuleTopology.html":{},"classes/NameMappingDTO.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"classes/NetOSRouterDTO.html":{},"components/NetworkComponent.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkDTO.html":{},"classes/NetworkNode.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/NodeTopologyElement.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/SourceExport.html":{},"classes/StatisticItemDTO.html":{},"components/SubnetComponent.html":{},"classes/SubnetDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"components/TabnavComponent.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/TheaterSimpleData.html":{},"interfaces/TheaterTopology.html":{},"classes/TheatreStatusDTO.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/TypesCatalogueDTO.html":{},"components/UnderbarComponent.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{},"components/VisualizerComponent.html":{},"miscellaneous/functions.html":{},"index.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["name:string",{"_index":604,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["name:string]:moduleinstancedto|theaterinstancedto",{"_index":756,"title":{},"body":{"classes/BlueprintFileDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/NameMappingDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TheaterDTO.html":{},"classes/TheatreStatusDTO.html":{}}}],["name_mapping",{"_index":765,"title":{},"body":{"classes/BlueprintFileDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/NameMappingDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TheaterDTO.html":{},"classes/TheatreStatusDTO.html":{}}}],["namealias",{"_index":1988,"title":{},"body":{"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{}}}],["namemappingdto",{"_index":758,"title":{"classes/NameMappingDTO.html":{}},"body":{"classes/BlueprintFileDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/NameMappingDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TheaterDTO.html":{},"classes/TheatreStatusDTO.html":{}}}],["nav",{"_index":2685,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar",{"_index":48,"title":{},"body":{"classes/Aoption.html":{},"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"classes/NavbarElement.html":{},"components/NavbarElementComponent.html":{},"classes/NavbarItem.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["navbar'},{'name",{"_index":195,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["navbar.component.html",{"_index":2674,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.component.sass",{"_index":2673,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbarcomonent",{"_index":2679,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbarcomponent",{"_index":33,"title":{"components/NavbarComponent.html":{}},"body":{"classes/Aoption.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"classes/NavbarElement.html":{},"components/NavbarElementComponent.html":{},"classes/NavbarItem.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"overview.html":{}}}],["navbarelement",{"_index":35,"title":{"classes/NavbarElement.html":{}},"body":{"classes/Aoption.html":{},"components/NavbarComponent.html":{},"classes/NavbarElement.html":{},"classes/NavbarItem.html":{}}}],["navbarelementcomponent",{"_index":196,"title":{"components/NavbarElementComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"overview.html":{}}}],["navbaritem",{"_index":42,"title":{"classes/NavbarItem.html":{}},"body":{"classes/Aoption.html":{},"classes/NavbarElement.html":{},"classes/NavbarItem.html":{}}}],["navbartype",{"_index":2692,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navigate",{"_index":3888,"title":{},"body":{"index.html":{}}}],["nbsp",{"_index":3717,"title":{},"body":{"components/UnderbarComponent.html":{}}}],["nbsp;infra",{"_index":2712,"title":{},"body":{"components/NavbarElementComponent.html":{}}}],["necessari",{"_index":2318,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["negli",{"_index":1605,"title":{},"body":{"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{}}}],["nei",{"_index":1722,"title":{},"body":{"classes/ExportModule.html":{}}}],["nel",{"_index":599,"title":{},"body":{"classes/AreaDTO.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"components/DataInputV2Component.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"classes/ModalButton.html":{},"classes/ModalItem.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["nell'appcomponent",{"_index":2472,"title":{},"body":{"injectables/ModalService.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{}}}],["nell'applicazione",{"_index":1820,"title":{},"body":{"injectables/ExportService.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["nell'export",{"_index":436,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["nell'offcanvas",{"_index":2797,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["nella",{"_index":430,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/BlueprintFileDTO.html":{},"interfaces/CommonModule.html":{},"classes/DeployInstanceDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/FlavorApplication.html":{},"components/HomeComponent.html":{},"injectables/ModalService.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NameMappingDTO.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TagCatalogueDTO.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"interfaces/TheaterTopology.html":{},"classes/TheatreStatusDTO.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"miscellaneous/functions.html":{}}}],["nelle",{"_index":609,"title":{},"body":{"classes/AreaExport.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"components/HomeComponent.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesTSD.html":{},"classes/SourceExport.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{}}}],["nello",{"_index":625,"title":{},"body":{"classes/AreaExport.html":{},"components/ComposerComponent.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/SourceExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["nessun",{"_index":54,"title":{},"body":{"classes/Aoption.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"injectables/AttachmentsService.html":{},"injectables/AuthGuard.html":{},"classes/BlueprintFileDTO.html":{},"classes/BorderNetworkDTO.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"components/ControlTemplate.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputReturnedV2.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/DeployInstanceDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"classes/FlavorApplication.html":{},"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"injectables/FlavorService.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"classes/HostModuleDTO.html":{},"classes/HostNode.html":{},"classes/HostPortModuleDTO.html":{},"components/HowToUseComponent.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModalButton.html":{},"components/ModalComponent.html":{},"classes/ModalItem.html":{},"injectables/ModalService.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"injectables/ModuleService.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"interfaces/ModuleTopology.html":{},"classes/NameMappingDTO.html":{},"components/NavbarComponent.html":{},"classes/NavbarElement.html":{},"components/NavbarElementComponent.html":{},"classes/NavbarItem.html":{},"classes/NetOSRouterDTO.html":{},"components/NetworkComponent.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkDTO.html":{},"classes/NetworkNode.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/NodeTopologyElement.html":{},"components/OffcanvasComponent.html":{},"classes/PageableDTO.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SelectOption.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/SingleDataInputReturned.html":{},"classes/SortDTO.html":{},"classes/SourceExport.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"classes/StatisticItemDTO.html":{},"injectables/StorageService.html":{},"components/SubnetComponent.html":{},"classes/SubnetDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"components/TabnavComponent.html":{},"classes/TabnavElement.html":{},"classes/TabnavItem.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"injectables/TheaterService.html":{},"classes/TheaterSimpleData.html":{},"interfaces/TheaterTopology.html":{},"classes/TheatreStatusDTO.html":{},"injectables/TokenService.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/TypesCatalogueDTO.html":{},"components/UnderbarComponent.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{},"routes.html":{}}}],["net",{"_index":783,"title":{},"body":{"classes/BorderNetworkDTO.html":{},"classes/ExportModule.html":{},"classes/NetOSRouterDTO.html":{},"classes/NetworkDTO.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/SubnetDTO.html":{}}}],["netosrouterdto",{"_index":785,"title":{"classes/NetOSRouterDTO.html":{}},"body":{"classes/BorderNetworkDTO.html":{},"classes/NetOSRouterDTO.html":{},"classes/NetworkDTO.html":{},"classes/SubnetDTO.html":{}}}],["network",{"_index":579,"title":{},"body":{"classes/AreaDTO.html":{},"classes/BorderNetworkDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EmptyNodeInfo.html":{},"classes/ExportModule.html":{},"classes/GenericParameterDTO.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"classes/NetOSRouterDTO.html":{},"components/NetworkComponent.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkDTO.html":{},"classes/NetworkNode.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteNetworkInfo.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/SubnetDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"miscellaneous/functions.html":{}}}],["network.component",{"_index":2761,"title":{},"body":{"classes/NetworkNode.html":{},"classes/ReteNetworkInfo.html":{}}}],["network.component.html",{"_index":2739,"title":{},"body":{"components/NetworkComponent.html":{}}}],["network.component.sass",{"_index":2738,"title":{},"body":{"components/NetworkComponent.html":{}}}],["network.inputs",{"_index":1805,"title":{},"body":{"classes/ExportModule.html":{}}}],["network.inputs[key",{"_index":1807,"title":{},"body":{"classes/ExportModule.html":{}}}],["network/networknode",{"_index":1624,"title":{},"body":{"classes/EmptyNodeInfo.html":{}}}],["network_constraints",{"_index":959,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/ExportModule.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["network_name",{"_index":3039,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["network_number",{"_index":416,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/ReteConnection.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["networkcomponent",{"_index":198,"title":{"components/NetworkComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"classes/NetworkNode.html":{},"components/OffcanvasComponent.html":{},"classes/ReteNetworkInfo.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"overview.html":{}}}],["networkconnectedtosubnet",{"_index":1768,"title":{},"body":{"classes/ExportModule.html":{}}}],["networkconnectedtosubnet.data.name",{"_index":1770,"title":{},"body":{"classes/ExportModule.html":{}}}],["networkconstraints",{"_index":964,"title":{"classes/NetworkConstraints.html":{}},"body":{"classes/ConstraintsMSD.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["networkdto",{"_index":499,"title":{"classes/NetworkDTO.html":{}},"body":{"classes/AreaDTO.html":{},"classes/BorderNetworkDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/HostModuleDTO.html":{},"classes/HostPortModuleDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/NetOSRouterDTO.html":{},"classes/NetworkDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/SubnetDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["networkicon",{"_index":2370,"title":{},"body":{"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["networkicon=networkicon",{"_index":2385,"title":{},"body":{"components/MirroringModuleInstanceComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["networkinputport",{"_index":1806,"title":{},"body":{"classes/ExportModule.html":{}}}],["networkinputport.connections.foreach(c",{"_index":1808,"title":{},"body":{"classes/ExportModule.html":{}}}],["networknode",{"_index":1623,"title":{"classes/NetworkNode.html":{}},"body":{"classes/EmptyNodeInfo.html":{},"classes/NetworkNode.html":{},"classes/ReteNetworkInfo.html":{},"miscellaneous/functions.html":{}}}],["networks",{"_index":2271,"title":{},"body":{"classes/HostModuleDTO.html":{},"classes/HostPortModuleDTO.html":{}}}],["networksimpledata",{"_index":975,"title":{"classes/NetworkSimpleData.html":{}},"body":{"classes/ConstraintsMSD.html":{},"classes/ExportModule.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["networktypeexport",{"_index":966,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/ExportModule.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["networktypeexport.network",{"_index":1784,"title":{},"body":{"classes/ExportModule.html":{}}}],["new",{"_index":332,"title":{},"body":{"modules/AppModule.html":{},"injectables/AttachmentsService.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"injectables/FlavorService.html":{},"components/HomeComponent.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"injectables/ModuleService.html":{},"components/NavbarComponent.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"injectables/TheaterService.html":{},"injectables/TokenService.html":{},"components/UnderbarComponent.html":{},"index.html":{}}}],["new_value",{"_index":1212,"title":{},"body":{"classes/DataInputReturnedV2.html":{},"components/DataInputV2Component.html":{}}}],["newmodule",{"_index":3010,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["ng",{"_index":3886,"title":{},"body":{"index.html":{}}}],["ngafterviewinit",{"_index":2675,"title":{},"body":{"components/NavbarComponent.html":{}}}],["ngdobootstrap",{"_index":246,"title":{},"body":{"modules/AppModule.html":{}}}],["ngdobootstrap(appref",{"_index":247,"title":{},"body":{"modules/AppModule.html":{}}}],["ngform",{"_index":321,"title":{},"body":{"modules/AppModule.html":{}}}],["ngmodule",{"_index":258,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngoninit",{"_index":817,"title":{},"body":{"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DocsComponent.html":{},"components/HowToUseComponent.html":{},"components/TabnavComponent.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{}}}],["ngx",{"_index":297,"title":{},"body":{"modules/AppModule.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"dependencies.html":{}}}],["ngxpopper",{"_index":228,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["ngxspinnermodule",{"_index":296,"title":{},"body":{"modules/AppModule.html":{}}}],["ngxspinnerservice",{"_index":3416,"title":{},"body":{"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{}}}],["ngxtypeaheadmodule",{"_index":298,"title":{},"body":{"modules/AppModule.html":{}}}],["nlinked",{"_index":3008,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["nn",{"_index":3026,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["node",{"_index":1609,"title":{},"body":{"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/ExportModule.html":{},"components/HostComponent.html":{},"classes/HostNode.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"components/NetworkComponent.html":{},"classes/NetworkNode.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"components/SubnetComponent.html":{},"classes/SubnetNode.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["node.data",{"_index":2337,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["node.data.area",{"_index":2388,"title":{},"body":{"components/MirroringModuleInstanceComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["node.data.cidr",{"_index":3467,"title":{},"body":{"components/SubnetComponent.html":{}}}],["node.data.cpu",{"_index":2224,"title":{},"body":{"components/HostComponent.html":{}}}],["node.data.disk",{"_index":2223,"title":{},"body":{"components/HostComponent.html":{}}}],["node.data.externalinterfacename",{"_index":2747,"title":{},"body":{"components/NetworkComponent.html":{}}}],["node.data.externalinterfacetype",{"_index":2748,"title":{},"body":{"components/NetworkComponent.html":{}}}],["node.data.host_number",{"_index":2392,"title":{},"body":{"components/MirroringModuleInstanceComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["node.data.isdhcp",{"_index":3468,"title":{},"body":{"components/SubnetComponent.html":{}}}],["node.data.isdhcp?\"true\":\"false",{"_index":3470,"title":{},"body":{"components/SubnetComponent.html":{}}}],["node.data.name",{"_index":1733,"title":{},"body":{"classes/ExportModule.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["node.data.network_number",{"_index":2394,"title":{},"body":{"components/MirroringModuleInstanceComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["node.data.os",{"_index":2220,"title":{},"body":{"components/HostComponent.html":{}}}],["node.data.output",{"_index":1740,"title":{},"body":{"classes/ExportModule.html":{}}}],["node.data.ram",{"_index":2221,"title":{},"body":{"components/HostComponent.html":{}}}],["node.data.subnet_number",{"_index":2393,"title":{},"body":{"components/MirroringModuleInstanceComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["node.data.version",{"_index":2389,"title":{},"body":{"components/MirroringModuleInstanceComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["node.data['input",{"_index":2338,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["node.data['output",{"_index":2339,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["node.name",{"_index":3029,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["node.outputs",{"_index":1747,"title":{},"body":{"classes/ExportModule.html":{}}}],["node.outputs[portname",{"_index":1750,"title":{},"body":{"classes/ExportModule.html":{}}}],["node.ports.foreach",{"_index":3033,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["node_modules",{"_index":633,"title":{},"body":{"classes/AreaExport.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesTSD.html":{},"classes/SourceExport.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{}}}],["node_tempates",{"_index":1707,"title":{},"body":{"classes/ExportModule.html":{}}}],["node_template",{"_index":1680,"title":{},"body":{"classes/ExportModule.html":{},"classes/ExportTheater.html":{}}}],["node_template_name",{"_index":762,"title":{},"body":{"classes/BlueprintFileDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/NameMappingDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TheaterDTO.html":{},"classes/TheatreStatusDTO.html":{}}}],["node_templates",{"_index":589,"title":{},"body":{"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"classes/BlueprintFileDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/DeployInstanceDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"classes/NameMappingDTO.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/SourceExport.html":{},"classes/StatisticItemDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterDTO.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheaterSimpleData.html":{},"classes/TheatreStatusDTO.html":{},"classes/TypesCatalogueDTO.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["nodecomponent",{"_index":2195,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["nodecomponents",{"_index":1601,"title":{},"body":{"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{}}}],["nodedata",{"_index":1670,"title":{},"body":{"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["nodeeditor",{"_index":1042,"title":{},"body":{"components/ControlTemplate.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/_Control.html":{}}}],["nodename",{"_index":580,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["nodeport",{"_index":1749,"title":{},"body":{"classes/ExportModule.html":{}}}],["nodeport.connections.foreach(c",{"_index":1756,"title":{},"body":{"classes/ExportModule.html":{}}}],["nodeporttype",{"_index":1433,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["nodes",{"_index":3301,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["nodes.ts",{"_index":1613,"title":{},"body":{"classes/EmptyNodeInfo.html":{}}}],["nodes.ts:32",{"_index":1618,"title":{},"body":{"classes/EmptyNodeInfo.html":{}}}],["nodes.ts:33",{"_index":1620,"title":{},"body":{"classes/EmptyNodeInfo.html":{}}}],["nodes.ts:34",{"_index":1619,"title":{},"body":{"classes/EmptyNodeInfo.html":{}}}],["nodes/export",{"_index":1612,"title":{},"body":{"classes/EmptyNodeInfo.html":{}}}],["nodes/host/host.component",{"_index":278,"title":{},"body":{"modules/AppModule.html":{},"classes/HostNode.html":{},"classes/ReteHostInfo.html":{}}}],["nodes/host/host.component.ts",{"_index":2194,"title":{},"body":{"components/HostComponent.html":{}}}],["nodes/host/host.component.ts:17",{"_index":2211,"title":{},"body":{"components/HostComponent.html":{}}}],["nodes/host/host.component.ts:18",{"_index":2210,"title":{},"body":{"components/HostComponent.html":{}}}],["nodes/host/host.component.ts:19",{"_index":2209,"title":{},"body":{"components/HostComponent.html":{}}}],["nodes/host/host.component.ts:20",{"_index":2208,"title":{},"body":{"components/HostComponent.html":{}}}],["nodes/host/host.component.ts:21",{"_index":2206,"title":{},"body":{"components/HostComponent.html":{}}}],["nodes/host/host.component.ts:29",{"_index":2207,"title":{},"body":{"components/HostComponent.html":{}}}],["nodes/host/hostnode",{"_index":387,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["nodes/host/hostnode.ts",{"_index":2272,"title":{},"body":{"classes/HostNode.html":{},"classes/ReteHostInfo.html":{},"miscellaneous/functions.html":{}}}],["nodes/host/hostnode.ts:124",{"_index":2314,"title":{},"body":{"classes/HostNode.html":{}}}],["nodes/host/hostnode.ts:132",{"_index":2293,"title":{},"body":{"classes/HostNode.html":{}}}],["nodes/host/hostnode.ts:140",{"_index":2298,"title":{},"body":{"classes/HostNode.html":{}}}],["nodes/host/hostnode.ts:15",{"_index":3227,"title":{},"body":{"classes/ReteHostInfo.html":{}}}],["nodes/host/hostnode.ts:16",{"_index":3226,"title":{},"body":{"classes/ReteHostInfo.html":{}}}],["nodes/host/hostnode.ts:17",{"_index":3224,"title":{},"body":{"classes/ReteHostInfo.html":{}}}],["nodes/host/hostnode.ts:18",{"_index":3225,"title":{},"body":{"classes/ReteHostInfo.html":{}}}],["nodes/host/hostnode.ts:19",{"_index":3228,"title":{},"body":{"classes/ReteHostInfo.html":{}}}],["nodes/host/hostnode.ts:49",{"_index":2280,"title":{},"body":{"classes/HostNode.html":{}}}],["nodes/host/hostnode.ts:67",{"_index":2283,"title":{},"body":{"classes/HostNode.html":{}}}],["nodes/host/hostnode.ts:80",{"_index":2296,"title":{},"body":{"classes/HostNode.html":{}}}],["nodes/host/hostnode.ts:94",{"_index":2301,"title":{},"body":{"classes/HostNode.html":{}}}],["nodes/network/network.component",{"_index":280,"title":{},"body":{"modules/AppModule.html":{}}}],["nodes/network/network.component.ts",{"_index":2737,"title":{},"body":{"components/NetworkComponent.html":{}}}],["nodes/network/network.component.ts:16",{"_index":2745,"title":{},"body":{"components/NetworkComponent.html":{}}}],["nodes/network/network.component.ts:17",{"_index":2744,"title":{},"body":{"components/NetworkComponent.html":{}}}],["nodes/network/network.component.ts:18",{"_index":2743,"title":{},"body":{"components/NetworkComponent.html":{}}}],["nodes/network/network.component.ts:19",{"_index":2742,"title":{},"body":{"components/NetworkComponent.html":{}}}],["nodes/network/network.component.ts:20",{"_index":2740,"title":{},"body":{"components/NetworkComponent.html":{}}}],["nodes/network/network.component.ts:29",{"_index":2741,"title":{},"body":{"components/NetworkComponent.html":{}}}],["nodes/network/networknode",{"_index":389,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["nodes/network/networknode.ts",{"_index":2753,"title":{},"body":{"classes/NetworkNode.html":{},"classes/ReteNetworkInfo.html":{},"miscellaneous/functions.html":{}}}],["nodes/network/networknode.ts:119",{"_index":2760,"title":{},"body":{"classes/NetworkNode.html":{}}}],["nodes/network/networknode.ts:127",{"_index":2756,"title":{},"body":{"classes/NetworkNode.html":{}}}],["nodes/network/networknode.ts:135",{"_index":2758,"title":{},"body":{"classes/NetworkNode.html":{}}}],["nodes/network/networknode.ts:16",{"_index":3339,"title":{},"body":{"classes/ReteNetworkInfo.html":{}}}],["nodes/network/networknode.ts:17",{"_index":3340,"title":{},"body":{"classes/ReteNetworkInfo.html":{}}}],["nodes/network/networknode.ts:45",{"_index":2754,"title":{},"body":{"classes/NetworkNode.html":{}}}],["nodes/network/networknode.ts:63",{"_index":2755,"title":{},"body":{"classes/NetworkNode.html":{}}}],["nodes/network/networknode.ts:75",{"_index":2757,"title":{},"body":{"classes/NetworkNode.html":{}}}],["nodes/network/networknode.ts:88",{"_index":2759,"title":{},"body":{"classes/NetworkNode.html":{}}}],["nodes/rete",{"_index":2322,"title":{},"body":{"classes/HostNode.html":{},"classes/ReteHostInfo.html":{}}}],["nodes/subnet/subnet.component",{"_index":279,"title":{},"body":{"modules/AppModule.html":{}}}],["nodes/subnet/subnet.component.ts",{"_index":3457,"title":{},"body":{"components/SubnetComponent.html":{}}}],["nodes/subnet/subnet.component.ts:16",{"_index":3465,"title":{},"body":{"components/SubnetComponent.html":{}}}],["nodes/subnet/subnet.component.ts:17",{"_index":3464,"title":{},"body":{"components/SubnetComponent.html":{}}}],["nodes/subnet/subnet.component.ts:18",{"_index":3463,"title":{},"body":{"components/SubnetComponent.html":{}}}],["nodes/subnet/subnet.component.ts:19",{"_index":3462,"title":{},"body":{"components/SubnetComponent.html":{}}}],["nodes/subnet/subnet.component.ts:20",{"_index":3460,"title":{},"body":{"components/SubnetComponent.html":{}}}],["nodes/subnet/subnet.component.ts:28",{"_index":3461,"title":{},"body":{"components/SubnetComponent.html":{}}}],["nodes/subnet/subnetnode",{"_index":391,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["nodes/subnet/subnetnode.ts",{"_index":3342,"title":{},"body":{"classes/ReteSubnetInfo.html":{},"classes/SubnetNode.html":{},"miscellaneous/functions.html":{}}}],["nodes/subnet/subnetnode.ts:119",{"_index":3490,"title":{},"body":{"classes/SubnetNode.html":{}}}],["nodes/subnet/subnetnode.ts:127",{"_index":3486,"title":{},"body":{"classes/SubnetNode.html":{}}}],["nodes/subnet/subnetnode.ts:135",{"_index":3488,"title":{},"body":{"classes/SubnetNode.html":{}}}],["nodes/subnet/subnetnode.ts:15",{"_index":3343,"title":{},"body":{"classes/ReteSubnetInfo.html":{}}}],["nodes/subnet/subnetnode.ts:16",{"_index":3346,"title":{},"body":{"classes/ReteSubnetInfo.html":{}}}],["nodes/subnet/subnetnode.ts:17",{"_index":3344,"title":{},"body":{"classes/ReteSubnetInfo.html":{}}}],["nodes/subnet/subnetnode.ts:46",{"_index":3484,"title":{},"body":{"classes/SubnetNode.html":{}}}],["nodes/subnet/subnetnode.ts:64",{"_index":3485,"title":{},"body":{"classes/SubnetNode.html":{}}}],["nodes/subnet/subnetnode.ts:76",{"_index":3487,"title":{},"body":{"classes/SubnetNode.html":{}}}],["nodes/subnet/subnetnode.ts:89",{"_index":3489,"title":{},"body":{"classes/SubnetNode.html":{}}}],["nodesdata",{"_index":1694,"title":{},"body":{"classes/ExportModule.html":{}}}],["nodeselected",{"_index":3255,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["nodeservice",{"_index":2196,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["nodesimpledata",{"_index":973,"title":{"classes/NodeSimpleData.html":{}},"body":{"classes/ConstraintsMSD.html":{},"classes/ExportModule.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["nodesimpledata.relationships.push",{"_index":1743,"title":{},"body":{"classes/ExportModule.html":{}}}],["nodetopologyelement",{"_index":418,"title":{"classes/NodeTopologyElement.html":{}},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["nodetype",{"_index":2200,"title":{},"body":{"components/HostComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{}}}],["nodetype.host",{"_index":2219,"title":{},"body":{"components/HostComponent.html":{}}}],["nodetype.network",{"_index":2746,"title":{},"body":{"components/NetworkComponent.html":{}}}],["nodetype.subnet",{"_index":3466,"title":{},"body":{"components/SubnetComponent.html":{}}}],["nodetypeexport",{"_index":967,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/ExportModule.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["nodetypeexport.host",{"_index":1736,"title":{},"body":{"classes/ExportModule.html":{}}}],["nodi",{"_index":453,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"components/ControlTemplate.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/ExportModule.html":{},"classes/FlavorApplication.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NetworkNode.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/SubnetNode.html":{},"classes/TheaterApplication.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/_Control.html":{},"miscellaneous/functions.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["nodi/moduli",{"_index":1048,"title":{},"body":{"components/ControlTemplate.html":{},"classes/_Control.html":{}}}],["nodo",{"_index":1006,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"classes/HostNode.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkNode.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"miscellaneous/functions.html":{}}}],["nome",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AttachmentsService.html":{},"injectables/AuthGuard.html":{},"classes/BlueprintFileDTO.html":{},"components/ComposerComponent.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/DeployInstanceDTO.html":{},"components/DocsComponent.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"injectables/FlavorService.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"classes/HostNode.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"injectables/ModuleService.html":{},"classes/NameMappingDTO.html":{},"components/NavbarComponent.html":{},"components/NetworkComponent.html":{},"classes/NetworkNode.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"injectables/SpinnerService.html":{},"injectables/StorageService.html":{},"components/SubnetComponent.html":{},"classes/SubnetNode.html":{},"components/TabnavComponent.html":{},"classes/TagCatalogueDTO.html":{},"classes/TheaterDTO.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"injectables/TheaterService.html":{},"classes/TheatreStatusDTO.html":{},"injectables/TokenService.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{},"miscellaneous/functions.html":{}}}],["nomemosulo.module.json",{"_index":1847,"title":{},"body":{"injectables/ExportService.html":{},"injectables/FileService.html":{}}}],["nometeatro.theater.json",{"_index":1850,"title":{},"body":{"injectables/ExportService.html":{},"injectables/FileService.html":{}}}],["non",{"_index":345,"title":{},"body":{"modules/AppModule.html":{},"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"classes/FlavorApplication.html":{},"components/HomeComponent.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"injectables/ModalService.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"components/NavbarComponent.html":{},"classes/NetworkNode.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SimpleModuleApplication.html":{},"classes/SubnetNode.html":{},"classes/TheaterApplication.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"modules.html":{}}}],["none",{"_index":692,"title":{},"body":{"injectables/AttachmentsService.html":{},"components/DataInputV2Component.html":{},"components/DocsComponent.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["normal",{"_index":1341,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["normalizzazione",{"_index":2953,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["note",{"_index":2184,"title":{},"body":{"components/HomeComponent.html":{}}}],["notifica",{"_index":1315,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["nowrap",{"_index":1414,"title":{},"body":{"components/DataItemComponent.html":{}}}],["nt",{"_index":1708,"title":{},"body":{"classes/ExportModule.html":{},"classes/ExportTheater.html":{}}}],["null",{"_index":780,"title":{},"body":{"classes/BorderNetworkDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"injectables/ModalService.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetOSRouterDTO.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkDTO.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SubnetDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["number",{"_index":379,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"injectables/AttachmentsService.html":{},"classes/BlueprintFileDTO.html":{},"classes/BorderNetworkDTO.html":{},"interfaces/CommonModule.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"components/ControlTemplate.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/DeployInstanceDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"classes/FlavorApplication.html":{},"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"injectables/FlavorService.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"classes/HostModuleDTO.html":{},"classes/HostNode.html":{},"classes/HostPortModuleDTO.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"injectables/ModuleService.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"interfaces/ModuleTopology.html":{},"classes/NameMappingDTO.html":{},"classes/NetOSRouterDTO.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkDTO.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/NodeTopologyElement.html":{},"classes/PageableDTO.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SelectOption.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/SingleDataInputReturned.html":{},"classes/SortDTO.html":{},"classes/SourceExport.html":{},"classes/StatisticItemDTO.html":{},"classes/SubnetDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"injectables/TheaterService.html":{},"classes/TheaterSimpleData.html":{},"interfaces/TheaterTopology.html":{},"classes/TheatreStatusDTO.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/TypesCatalogueDTO.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["numberofelements",{"_index":511,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["number|string",{"_index":2014,"title":{},"body":{"injectables/FlavorService.html":{}}}],["nuovo",{"_index":2288,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["nvm",{"_index":3874,"title":{},"body":{"index.html":{}}}],["o",{"_index":851,"title":{},"body":{"components/ComposerComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"injectables/ParseService.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"components/TabnavComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"components/VisualizerComponent.html":{}}}],["o.length",{"_index":2342,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["object.assign",{"_index":1713,"title":{},"body":{"classes/ExportModule.html":{},"classes/ExportTheater.html":{}}}],["object.entries(module_content.properties.consumer_interfaces_link).map(([key",{"_index":3017,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["object.entries(modules).map(async",{"_index":2989,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["object.entries(modulesapplication).map(async",{"_index":2983,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["object.entries(modulesinfo).map(([key",{"_index":3022,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["object.entries(rowtheater.blueprintfile.node_templates).map(([key",{"_index":2964,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["object.entries(theater.blueprintfile.node_templates).map(([key",{"_index":3014,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["object.entries(theater.blueprintfile.node_templates).map(async",{"_index":2996,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["object.keys(node.data).length",{"_index":2333,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["objectdata",{"_index":3854,"title":{},"body":{"miscellaneous/functions.html":{}}}],["observable",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"injectables/ModalService.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{}}}],["observe",{"_index":3684,"title":{},"body":{"injectables/TokenService.html":{}}}],["occourence",{"_index":3023,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["occourence.get(network_name",{"_index":3050,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["occourence.get(subnet_name",{"_index":3041,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["occourence.set(network_name",{"_index":3054,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["occourence.set(subnet_name",{"_index":3046,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["occpa",{"_index":1028,"title":{},"body":{"components/ControlTemplate.html":{},"classes/_Control.html":{}}}],["occupa",{"_index":821,"title":{},"body":{"components/ComposerComponent.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForTheaterComposer.html":{},"injectables/StorageService.html":{},"injectables/TokenService.html":{},"components/VisualizerComponent.html":{},"miscellaneous/functions.html":{}}}],["occurred",{"_index":936,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["offcanvas",{"_index":2776,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["offcanvas'},{'name",{"_index":200,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["offcanvas.component.html",{"_index":2787,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["offcanvas.component.sass",{"_index":2786,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["offcanvascomponent",{"_index":199,"title":{"components/OffcanvasComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"overview.html":{}}}],["offcavanvascomponent",{"_index":2792,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["offset",{"_index":2841,"title":{},"body":{"classes/PageableDTO.html":{},"classes/SortDTO.html":{}}}],["oggetto",{"_index":43,"title":{},"body":{"classes/Aoption.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"classes/NavbarElement.html":{},"classes/NavbarItem.html":{},"classes/ParseDataForTheaterVisualizer.html":{}}}],["ogni",{"_index":2903,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["oh",{"_index":940,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["ol",{"_index":2341,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["old",{"_index":2520,"title":{},"body":{"injectables/ModalService.html":{}}}],["old_value",{"_index":1213,"title":{},"body":{"classes/DataInputReturnedV2.html":{},"components/DataInputV2Component.html":{}}}],["onbuttonpressed",{"_index":2428,"title":{},"body":{"components/ModalComponent.html":{}}}],["onchange",{"_index":1240,"title":{},"body":{"components/DataInputV2Component.html":{},"classes/_Control.html":{}}}],["onchange(val",{"_index":1059,"title":{},"body":{"components/ControlTemplate.html":{},"classes/_Control.html":{}}}],["one",{"_index":1416,"title":{},"body":{"components/DataItemComponent.html":{}}}],["onfileselected",{"_index":1927,"title":{},"body":{"injectables/FileService.html":{},"components/HomeComponent.html":{}}}],["onfileselected(event",{"_index":1939,"title":{},"body":{"injectables/FileService.html":{},"components/HomeComponent.html":{}}}],["oninit",{"_index":805,"title":{},"body":{"components/ComposerComponent.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DocsComponent.html":{},"components/HomeComponent.html":{},"components/HowToUseComponent.html":{},"components/TabnavComponent.html":{},"components/VisualizerComponent.html":{}}}],["onlyresize",{"_index":1373,"title":{},"body":{"components/DataItemComponent.html":{}}}],["onremove",{"_index":1363,"title":{},"body":{"components/DataItemComponent.html":{}}}],["onreset",{"_index":2037,"title":{},"body":{"components/HomeComponent.html":{}}}],["onreset(input",{"_index":2054,"title":{},"body":{"components/HomeComponent.html":{}}}],["onupload",{"_index":2038,"title":{},"body":{"components/HomeComponent.html":{}}}],["op",{"_index":1409,"title":{},"body":{"components/DataItemComponent.html":{}}}],["opacity",{"_index":2830,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["openstack_config",{"_index":1013,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/ExportModule.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["operation",{"_index":2514,"title":{},"body":{"injectables/ModalService.html":{}}}],["operativo",{"_index":1435,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["operazione",{"_index":1176,"title":{},"body":{"components/DataInputComponent.html":{},"components/HomeComponent.html":{}}}],["operazioni",{"_index":424,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"components/DataInputV2Component.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/FlavorApplication.html":{},"components/HomeComponent.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"injectables/ModalService.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NetworkNode.html":{},"classes/NodeTopologyElement.html":{},"components/OffcanvasComponent.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"classes/SubnetNode.html":{},"classes/TheaterApplication.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["opportune",{"_index":2049,"title":{},"body":{"components/HomeComponent.html":{}}}],["oppure",{"_index":1173,"title":{},"body":{"components/DataInputComponent.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["opt",{"_index":2697,"title":{},"body":{"components/NavbarComponent.html":{},"components/OffcanvasComponent.html":{}}}],["opt.attr_val",{"_index":2699,"title":{},"body":{"components/NavbarComponent.html":{}}}],["opt.text",{"_index":1199,"title":{},"body":{"components/DataInputComponent.html":{}}}],["option",{"_index":1113,"title":{},"body":{"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{},"injectables/TokenService.html":{}}}],["opzionale",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AreaApplication.html":{},"injectables/AttachmentsService.html":{},"injectables/AuthGuard.html":{},"components/ComposerComponent.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/DeployInstanceDTO.html":{},"components/DocsComponent.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"injectables/FlavorService.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"classes/HostNode.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"components/ModalComponent.html":{},"classes/ModalItem.html":{},"injectables/ModalService.html":{},"classes/ModuleApplication.html":{},"classes/ModuleDTO.html":{},"injectables/ModuleService.html":{},"components/NavbarComponent.html":{},"classes/NavbarElement.html":{},"classes/NavbarItem.html":{},"components/NetworkComponent.html":{},"classes/NetworkNode.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SelectOption.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"injectables/SpinnerService.html":{},"injectables/StorageService.html":{},"components/SubnetComponent.html":{},"classes/SubnetNode.html":{},"components/TabnavComponent.html":{},"classes/TheaterApplication.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"injectables/TheaterService.html":{},"injectables/TokenService.html":{},"interfaces/TopologyList.html":{},"components/UnderbarComponent.html":{},"classes/UnderbarItem.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{},"miscellaneous/functions.html":{}}}],["opzioni",{"_index":10,"title":{},"body":{"classes/Aoption.html":{},"components/HomeComponent.html":{},"classes/NavbarElement.html":{},"classes/NavbarItem.html":{}}}],["ora",{"_index":1738,"title":{},"body":{"classes/ExportModule.html":{}}}],["orchestrator",{"_index":2136,"title":{},"body":{"components/HomeComponent.html":{}}}],["organizzare",{"_index":2924,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["organizzata",{"_index":2887,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["os",{"_index":784,"title":{},"body":{"classes/BorderNetworkDTO.html":{},"components/HostComponent.html":{},"classes/HostNode.html":{},"classes/NetOSRouterDTO.html":{},"classes/NetworkDTO.html":{},"classes/ReteHostInfo.html":{},"classes/SubnetDTO.html":{}}}],["ottimizzare",{"_index":1649,"title":{},"body":{"classes/ExportModule.html":{}}}],["out",{"_index":1742,"title":{},"body":{"classes/ExportModule.html":{},"index.html":{}}}],["output",{"_index":572,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/ExportModule.html":{},"classes/GenericParameterDTO.html":{},"components/HostComponent.html":{},"classes/HostNode.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"components/ModalComponent.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"components/NavbarComponent.html":{},"components/NetworkComponent.html":{},"classes/NetworkNode.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"components/SubnetComponent.html":{},"classes/SubnetNode.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/TypesCatalogueDTO.html":{},"components/UnderbarComponent.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["output.name",{"_index":2232,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["outputdata",{"_index":1695,"title":{},"body":{"classes/ExportModule.html":{}}}],["outputs",{"_index":979,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/HostNode.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkNode.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["outside",{"_index":2186,"title":{},"body":{"components/HomeComponent.html":{}}}],["overflow",{"_index":161,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/DataItemComponent.html":{},"components/OffcanvasComponent.html":{},"components/TabnavComponent.html":{},"components/VisualizerComponent.html":{}}}],["overview",{"_index":3920,"title":{"overview.html":{}},"body":{}}],["p",{"_index":2390,"title":{},"body":{"components/MirroringModuleInstanceComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["p,h4,h5",{"_index":2836,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["package",{"_index":3772,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padding",{"_index":1069,"title":{},"body":{"components/ControlTemplate.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["page",{"_index":2657,"title":{},"body":{"injectables/ModuleService.html":{}}}],["pageable",{"_index":505,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["pageabledto",{"_index":496,"title":{"classes/PageableDTO.html":{}},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/PageableDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/SortDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["paged",{"_index":2842,"title":{},"body":{"classes/PageableDTO.html":{},"classes/SortDTO.html":{}}}],["pageindex",{"_index":2646,"title":{},"body":{"injectables/ModuleService.html":{}}}],["pagenumber",{"_index":2843,"title":{},"body":{"classes/PageableDTO.html":{},"classes/SortDTO.html":{}}}],["pages/docs/docs.component",{"_index":328,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["pages/elements/navbar",{"_index":308,"title":{},"body":{"modules/AppModule.html":{}}}],["pages/home/home.component",{"_index":262,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["pages/how",{"_index":263,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["pagesize",{"_index":2844,"title":{},"body":{"classes/PageableDTO.html":{},"classes/SortDTO.html":{}}}],["pagina",{"_index":1520,"title":{},"body":{"components/DocsComponent.html":{},"components/HomeComponent.html":{}}}],["pagine",{"_index":830,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["paging",{"_index":2840,"title":{},"body":{"classes/PageableDTO.html":{},"classes/SortDTO.html":{}}}],["panel",{"_index":2227,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["param",{"_index":136,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/DataInputComponent.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"components/NavbarComponent.html":{},"classes/NetworkNode.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"classes/SubnetNode.html":{},"components/TabnavComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"injectables/TokenService.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["parameters",{"_index":862,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["parametri",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AreaDTO.html":{},"injectables/AttachmentsService.html":{},"injectables/AuthGuard.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"injectables/FlavorService.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"classes/HostNode.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"injectables/ModuleService.html":{},"classes/ModuleStatusDTO.html":{},"components/NavbarComponent.html":{},"components/NetworkComponent.html":{},"classes/NetworkNode.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"injectables/SpinnerService.html":{},"classes/StatisticItemDTO.html":{},"injectables/StorageService.html":{},"components/SubnetComponent.html":{},"classes/SubnetNode.html":{},"components/TabnavComponent.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"injectables/TheaterService.html":{},"injectables/TokenService.html":{},"classes/TypesCatalogueDTO.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{},"miscellaneous/functions.html":{}}}],["parametro",{"_index":30,"title":{},"body":{"classes/Aoption.html":{},"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/NavbarElement.html":{},"classes/NavbarItem.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["parentid",{"_index":518,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["pareserizzato",{"_index":2932,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["parsecommonelement",{"_index":2944,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["parsed",{"_index":1664,"title":{},"body":{"classes/ExportModule.html":{},"classes/ExportTheater.html":{}}}],["parsedatafortheatervisualizer",{"_index":2854,"title":{"classes/ParseDataForTheaterVisualizer.html":{}},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{}}}],["parsedatafortheatervisualizer(this.theaterservice",{"_index":3096,"title":{},"body":{"injectables/ParseService.html":{}}}],["parsedmodule",{"_index":3149,"title":{},"body":{"classes/PerseDataForModuleVisualizer.html":{}}}],["parseflavor",{"_index":3103,"title":{},"body":{"classes/PerseDataForModuleComposer.html":{}}}],["parseflavor(flavordto",{"_index":3106,"title":{},"body":{"classes/PerseDataForModuleComposer.html":{}}}],["parseflavorformodulecomposer",{"_index":3068,"title":{},"body":{"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{}}}],["parsemainmodule",{"_index":3123,"title":{},"body":{"classes/PerseDataForModuleVisualizer.html":{}}}],["parsemainmodule(id",{"_index":3140,"title":{},"body":{"classes/PerseDataForModuleVisualizer.html":{}}}],["parsemoduleformodulevisualizer",{"_index":3069,"title":{},"body":{"injectables/ParseService.html":{},"classes/PerseDataForModuleVisualizer.html":{}}}],["parsemoduleformodulevisualizer(id",{"_index":3075,"title":{},"body":{"injectables/ParseService.html":{},"classes/PerseDataForModuleVisualizer.html":{}}}],["parsemodulefortheatercomposer",{"_index":3070,"title":{},"body":{"injectables/ParseService.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["parsemoduleinstance",{"_index":2867,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["parsemoduleinstance(theater",{"_index":2914,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["parsemodulelist",{"_index":3159,"title":{},"body":{"classes/PerseDataForTheaterComposer.html":{}}}],["parsemodulesfromtheater",{"_index":2868,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["parsemodulesfromtheater(theateruuid",{"_index":2921,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["parser",{"_index":3756,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["parserizza",{"_index":2891,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["parserizzare",{"_index":1943,"title":{},"body":{"injectables/FileService.html":{},"classes/PerseDataForModuleVisualizer.html":{}}}],["parserizzati",{"_index":2886,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["parserizzato",{"_index":1932,"title":{},"body":{"injectables/FileService.html":{},"classes/PerseDataForModuleVisualizer.html":{}}}],["parseservice",{"_index":230,"title":{"injectables/ParseService.html":{}},"body":{"modules/AppModule.html":{},"components/ComposerComponent.html":{},"injectables/ParseService.html":{},"components/VisualizerComponent.html":{},"overview.html":{}}}],["parsetheater",{"_index":2869,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["parsetheater(id",{"_index":2926,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["parsetheaterfortheatervisualizer",{"_index":2870,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{}}}],["parsetheaterfortheatervisualizer(id",{"_index":2929,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{}}}],["parsing",{"_index":443,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["parte",{"_index":1650,"title":{},"body":{"classes/ExportModule.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["partendo",{"_index":1669,"title":{},"body":{"classes/ExportModule.html":{}}}],["particolare",{"_index":1279,"title":{},"body":{"components/DataInputV2Component.html":{},"components/HomeComponent.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["passaggio",{"_index":2064,"title":{},"body":{"components/HomeComponent.html":{}}}],["passare",{"_index":1301,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["passata",{"_index":2681,"title":{},"body":{"components/NavbarComponent.html":{}}}],["passati",{"_index":803,"title":{},"body":{"components/ComposerComponent.html":{},"components/NavbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["passato",{"_index":28,"title":{},"body":{"classes/Aoption.html":{},"classes/DataInputElement.html":{},"components/DataInputV2Component.html":{},"classes/ModalButton.html":{},"classes/ModalItem.html":{},"classes/NavbarElement.html":{},"classes/NavbarItem.html":{}}}],["path",{"_index":360,"title":{},"body":{"modules/AppRoutingModule.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"dependencies.html":{}}}],["per",{"_index":11,"title":{},"body":{"classes/Aoption.html":{},"components/AppComponent.html":{},"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaExport.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"components/ControlTemplate.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"components/DocsComponent.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/ExportModule.html":{},"injectables/FileService.html":{},"classes/FlavorApplication.html":{},"components/HomeComponent.html":{},"classes/HostNode.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModalButton.html":{},"components/ModalComponent.html":{},"classes/ModalItem.html":{},"injectables/ModalService.html":{},"classes/ModuleApplication.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleSimpleData.html":{},"interfaces/ModuleTopology.html":{},"classes/NavbarElement.html":{},"components/NavbarElementComponent.html":{},"classes/NavbarItem.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkNode.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/NodeTopologyElement.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SelectOption.html":{},"classes/SimpleModuleApplication.html":{},"classes/SingleDataInputReturned.html":{},"classes/SourceExport.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"components/TabnavComponent.html":{},"classes/TagsExport.html":{},"classes/TheaterApplication.html":{},"classes/TheaterExport.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/TheaterSimpleData.html":{},"interfaces/TheaterTopology.html":{},"injectables/TokenService.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{},"miscellaneous/functions.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["perch",{"_index":435,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["permette",{"_index":1358,"title":{},"body":{"components/DataItemComponent.html":{}}}],["permettono",{"_index":2935,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["persedataformodulecomposer",{"_index":3073,"title":{"classes/PerseDataForModuleComposer.html":{}},"body":{"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{}}}],["persedataformodulecomposer(this.flavorservice).parseflavorformodulecomposer",{"_index":3101,"title":{},"body":{"injectables/ParseService.html":{}}}],["persedataformodulevisualizer",{"_index":3077,"title":{"classes/PerseDataForModuleVisualizer.html":{}},"body":{"injectables/ParseService.html":{},"classes/PerseDataForModuleVisualizer.html":{}}}],["persedataformodulevisualizer(this.moduleservice).parsemoduleformodulevisualizer(id",{"_index":3100,"title":{},"body":{"injectables/ParseService.html":{}}}],["persedatafortheatercomposer",{"_index":3081,"title":{"classes/PerseDataForTheaterComposer.html":{}},"body":{"injectables/ParseService.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["persedatafortheatercomposer(this.moduleservice).parsemodulefortheatercomposer",{"_index":3098,"title":{},"body":{"injectables/ParseService.html":{}}}],["pi",{"_index":2214,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["picker",{"_index":330,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["place",{"_index":1227,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["placeholder",{"_index":1101,"title":{},"body":{"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["platform",{"_index":539,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["plugin",{"_index":269,"title":{},"body":{"modules/AppModule.html":{},"components/ControlTemplate.html":{},"components/HostComponent.html":{},"classes/HostNode.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"components/NetworkComponent.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"components/SubnetComponent.html":{},"classes/SubnetNode.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/_Control.html":{},"dependencies.html":{},"index.html":{}}}],["poi",{"_index":1314,"title":{},"body":{"components/DataInputV2Component.html":{},"classes/ExportModule.html":{},"injectables/ModalService.html":{}}}],["pointer",{"_index":1338,"title":{},"body":{"components/DataInputV2Component.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["popper",{"_index":300,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["popper.js",{"_index":3798,"title":{},"body":{"dependencies.html":{}}}],["popperjs/core",{"_index":3780,"title":{},"body":{"dependencies.html":{}}}],["port",{"_index":1003,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/ExportModule.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["port.name",{"_index":3035,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["port.subnets.foreach",{"_index":3036,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["port_dst",{"_index":465,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["port_name",{"_index":3034,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["port_src",{"_index":464,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["porta",{"_index":1010,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["portare",{"_index":1422,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["porte",{"_index":640,"title":{},"body":{"classes/AreaExport.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/ExportModule.html":{},"classes/HostModuleDTO.html":{},"classes/HostNode.html":{},"classes/HostPortModuleDTO.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkNode.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SourceExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/TheaterSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["portname",{"_index":1746,"title":{},"body":{"classes/ExportModule.html":{}}}],["ports",{"_index":999,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/ExportModule.html":{},"classes/HostModuleDTO.html":{},"classes/HostPortModuleDTO.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["ports[portname",{"_index":1772,"title":{},"body":{"classes/ExportModule.html":{}}}],["portsimpledata",{"_index":974,"title":{"classes/PortSimpleData.html":{}},"body":{"classes/ConstraintsMSD.html":{},"classes/ExportModule.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["portsimpledata.relationships.push",{"_index":1759,"title":{},"body":{"classes/ExportModule.html":{}}}],["porttypeexport",{"_index":968,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/ExportModule.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["porttypeexport.port",{"_index":1751,"title":{},"body":{"classes/ExportModule.html":{}}}],["position",{"_index":2238,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["posizione",{"_index":2800,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["posizioni",{"_index":2781,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["possesso",{"_index":2304,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["possibile",{"_index":1225,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["possibilit",{"_index":1379,"title":{},"body":{"components/DataItemComponent.html":{},"injectables/ModalService.html":{},"components/OffcanvasComponent.html":{}}}],["possono",{"_index":1658,"title":{},"body":{"classes/ExportModule.html":{},"classes/ExportTheater.html":{}}}],["posto",{"_index":2809,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["poter",{"_index":837,"title":{},"body":{"components/ComposerComponent.html":{},"injectables/ExportService.html":{},"injectables/ModalService.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"components/VisualizerComponent.html":{}}}],["poterli",{"_index":3169,"title":{},"body":{"classes/PerseDataForTheaterComposer.html":{}}}],["potr",{"_index":2023,"title":{},"body":{"components/HomeComponent.html":{}}}],["predefinito",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"classes/InterfaceConstraints.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/ModalItem.html":{},"injectables/ModalService.html":{},"classes/ModuleApplication.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"injectables/ParseService.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"injectables/SpinnerService.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"classes/TheaterApplication.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/VisualizerComponent.html":{}}}],["predilige",{"_index":1251,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["predispone",{"_index":1274,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["preferisce",{"_index":2962,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["prende",{"_index":460,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"classes/FlavorApplication.html":{},"components/HomeComponent.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["prendere",{"_index":450,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"components/VisualizerComponent.html":{}}}],["present",{"_index":736,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["presenta",{"_index":871,"title":{},"body":{"components/ComposerComponent.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["presente",{"_index":598,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"components/OffcanvasComponent.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["presenti",{"_index":997,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["preso",{"_index":873,"title":{},"body":{"components/ComposerComponent.html":{}}}],["prettamente",{"_index":429,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["pretty",{"_index":673,"title":{},"body":{"injectables/AttachmentsService.html":{},"dependencies.html":{}}}],["prevede",{"_index":1536,"title":{},"body":{"components/DocsComponent.html":{},"injectables/ExportService.html":{}}}],["prevenire",{"_index":141,"title":{},"body":{"components/AppComponent.html":{}}}],["previsto",{"_index":438,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["prima",{"_index":855,"title":{},"body":{"components/ComposerComponent.html":{},"components/DataInputV2Component.html":{},"classes/ExportModule.html":{},"components/TabnavComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"miscellaneous/functions.html":{}}}],["primary",{"_index":2412,"title":{},"body":{"classes/ModalButton.html":{},"classes/ModalItem.html":{},"injectables/ModalService.html":{}}}],["principale",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"injectables/ModalService.html":{}}}],["private",{"_index":138,"title":{},"body":{"components/AppComponent.html":{},"injectables/AttachmentsService.html":{},"components/ComposerComponent.html":{},"components/DocsComponent.html":{},"injectables/FlavorService.html":{},"components/HomeComponent.html":{},"injectables/ModuleService.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"injectables/StorageService.html":{},"injectables/TheaterService.html":{},"injectables/TokenService.html":{},"components/VisualizerComponent.html":{}}}],["probabile",{"_index":3002,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["problem",{"_index":935,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["procedere",{"_index":3699,"title":{},"body":{"components/UnderbarComponent.html":{}}}],["proceed",{"_index":729,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["processare",{"_index":1607,"title":{},"body":{"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{}}}],["processato",{"_index":1155,"title":{},"body":{"components/DataInputComponent.html":{}}}],["procura",{"_index":3142,"title":{},"body":{"classes/PerseDataForModuleVisualizer.html":{}}}],["prod",{"_index":3901,"title":{},"body":{"index.html":{}}}],["produce",{"_index":2919,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["producendo",{"_index":1353,"title":{},"body":{"components/DataItemComponent.html":{}}}],["producer",{"_index":1432,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["production",{"_index":3903,"title":{},"body":{"index.html":{}}}],["project",{"_index":3872,"title":{},"body":{"index.html":{}}}],["promise",{"_index":710,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/FileService.html":{},"injectables/FlavorService.html":{},"injectables/ModuleService.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"injectables/TheaterService.html":{},"miscellaneous/functions.html":{}}}],["promise((resolve",{"_index":1952,"title":{},"body":{"injectables/FileService.html":{},"injectables/FlavorService.html":{},"injectables/ModuleService.html":{},"injectables/TheaterService.html":{}}}],["promise.all",{"_index":2988,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["propeit",{"_index":635,"title":{},"body":{"classes/AreaExport.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesTSD.html":{},"classes/SourceExport.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{}}}],["properties",{"_index":476,"title":{"properties.html":{}},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"interfaces/CommonModule.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"classes/FlavorApplication.html":{},"classes/GenericParameterDTO.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"interfaces/ModuleTopology.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteConnection.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/SourceExport.html":{},"classes/StatisticItemDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterApplication.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheaterSimpleData.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/TypesCatalogueDTO.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["propertiesmisd",{"_index":634,"title":{"classes/PropertiesMISD.html":{}},"body":{"classes/AreaExport.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/ExportTheater.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesTSD.html":{},"classes/SourceExport.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{}}}],["propertiesmsd",{"_index":981,"title":{"classes/PropertiesMSD.html":{}},"body":{"classes/ConstraintsMSD.html":{},"classes/ExportModule.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["propertiesnsd",{"_index":1012,"title":{"classes/PropertiesNSD.html":{}},"body":{"classes/ConstraintsMSD.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["propertiesssd",{"_index":1016,"title":{"classes/PropertiesSSD.html":{}},"body":{"classes/ConstraintsMSD.html":{},"classes/ExportModule.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["propertiestsd",{"_index":612,"title":{"classes/PropertiesTSD.html":{}},"body":{"classes/AreaExport.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesTSD.html":{},"classes/SourceExport.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{}}}],["propriet",{"_index":15,"title":{},"body":{"classes/Aoption.html":{},"components/AppComponent.html":{},"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"classes/BlueprintFileDTO.html":{},"classes/BorderNetworkDTO.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputReturnedV2.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/DeployInstanceDTO.html":{},"components/DocsComponent.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"classes/FlavorApplication.html":{},"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"classes/HostModuleDTO.html":{},"classes/HostNode.html":{},"classes/HostPortModuleDTO.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModalButton.html":{},"components/ModalComponent.html":{},"classes/ModalItem.html":{},"injectables/ModalService.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"interfaces/ModuleTopology.html":{},"classes/NameMappingDTO.html":{},"classes/NavbarElement.html":{},"classes/NavbarItem.html":{},"classes/NetOSRouterDTO.html":{},"components/NetworkComponent.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkDTO.html":{},"classes/NetworkNode.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/NodeTopologyElement.html":{},"components/OffcanvasComponent.html":{},"classes/PageableDTO.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SelectOption.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/SingleDataInputReturned.html":{},"classes/SortDTO.html":{},"classes/SourceExport.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"classes/StatisticItemDTO.html":{},"injectables/StorageService.html":{},"components/SubnetComponent.html":{},"classes/SubnetDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"components/TabnavComponent.html":{},"classes/TabnavElement.html":{},"classes/TabnavItem.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/TheaterSimpleData.html":{},"interfaces/TheaterTopology.html":{},"classes/TheatreStatusDTO.html":{},"injectables/TokenService.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/TypesCatalogueDTO.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{},"properties.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["props",{"_index":1050,"title":{},"body":{"components/ControlTemplate.html":{},"classes/_Control.html":{}}}],["protected",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"components/ComposerComponent.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/VisualizerComponent.html":{}}}],["protractor",{"_index":3911,"title":{},"body":{"index.html":{}}}],["proveniente",{"_index":893,"title":{},"body":{"components/ComposerComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"components/VisualizerComponent.html":{}}}],["provenienti",{"_index":3063,"title":{},"body":{"injectables/ParseService.html":{}}}],["provide",{"_index":335,"title":{},"body":{"modules/AppModule.html":{}}}],["providedin",{"_index":674,"title":{},"body":{"injectables/AttachmentsService.html":{},"injectables/AuthGuard.html":{},"injectables/ExportService.html":{},"injectables/FileService.html":{},"injectables/FlavorService.html":{},"injectables/ModalService.html":{},"injectables/ModuleService.html":{},"injectables/ParseService.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"injectables/StorageService.html":{},"injectables/TheaterService.html":{},"injectables/TokenService.html":{}}}],["provider",{"_index":259,"title":{},"body":{"modules/AppModule.html":{},"classes/ConstraintsMSD.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["providerinitkeycloak",{"_index":333,"title":{},"body":{"modules/AppModule.html":{}}}],["providers",{"_index":239,"title":{},"body":{"modules/AppModule.html":{},"classes/ConstraintsMSD.html":{},"classes/ExportModule.html":{},"components/HostComponent.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"components/NetworkComponent.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"components/SubnetComponent.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["provvede",{"_index":3174,"title":{},"body":{"classes/PerseDataForTheaterComposer.html":{}}}],["provveder",{"_index":1258,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["ps",{"_index":426,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["pu",{"_index":1250,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["public",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"injectables/ModalService.html":{},"classes/ReteTheaterComposerSettings.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{}}}],["pulsante",{"_index":1380,"title":{},"body":{"components/DataItemComponent.html":{},"classes/ModalButton.html":{},"components/ModalComponent.html":{},"classes/ModalItem.html":{}}}],["pulsanti",{"_index":2436,"title":{},"body":{"components/ModalComponent.html":{}}}],["qs",{"_index":3800,"title":{},"body":{"dependencies.html":{}}}],["qualche",{"_index":1506,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["quando",{"_index":1164,"title":{},"body":{"components/DataInputComponent.html":{},"components/HomeComponent.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"components/OffcanvasComponent.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"components/TabnavComponent.html":{}}}],["quasi",{"_index":2476,"title":{},"body":{"injectables/ModalService.html":{}}}],["quasta",{"_index":2305,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["quattro",{"_index":2802,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["quei",{"_index":2934,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["quella",{"_index":456,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["quello",{"_index":2960,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["questa",{"_index":427,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"components/DataInputV2Component.html":{},"classes/FlavorApplication.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NetworkNode.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteConnection.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SimpleModuleApplication.html":{},"classes/SubnetNode.html":{},"classes/TheaterApplication.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["questi",{"_index":1663,"title":{},"body":{"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"injectables/ModalService.html":{}}}],["questo",{"_index":1362,"title":{},"body":{"components/DataItemComponent.html":{},"injectables/ModalService.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{}}}],["qui",{"_index":1508,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["radius",{"_index":1066,"title":{},"body":{"components/ControlTemplate.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["raggiungibile",{"_index":3423,"title":{},"body":{"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{}}}],["ram",{"_index":1975,"title":{},"body":{"classes/FlavorApplication.html":{},"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"components/HostComponent.html":{},"classes/HostNode.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/ReteHostInfo.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{}}}],["range",{"_index":2133,"title":{},"body":{"components/HomeComponent.html":{}}}],["rappresenta",{"_index":8,"title":{},"body":{"classes/Aoption.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"classes/NavbarElement.html":{},"classes/NavbarItem.html":{},"classes/NetworkNode.html":{},"components/OffcanvasComponent.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"components/TabnavComponent.html":{},"classes/TabnavElement.html":{},"classes/TabnavItem.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["rappresentazione",{"_index":980,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["rappresente",{"_index":2794,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["rc.1",{"_index":3807,"title":{},"body":{"dependencies.html":{}}}],["rc.2",{"_index":3804,"title":{},"body":{"dependencies.html":{}}}],["rc2",{"_index":3810,"title":{},"body":{"dependencies.html":{}}}],["reactiveformsmodule",{"_index":322,"title":{},"body":{"modules/AppModule.html":{}}}],["read",{"_index":1966,"title":{},"body":{"injectables/FileService.html":{}}}],["readme",{"_index":3915,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":711,"title":{},"body":{"injectables/AuthGuard.html":{},"components/ControlTemplate.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/_Control.html":{},"dependencies.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["readonlyplugin",{"_index":3337,"title":{},"body":{"classes/ReteModuleVisualizerSettings.html":{}}}],["recognized",{"_index":1720,"title":{},"body":{"classes/ExportModule.html":{}}}],["redirecturi",{"_index":721,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["redirezionamento",{"_index":2063,"title":{},"body":{"components/HomeComponent.html":{}}}],["redirezione",{"_index":829,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["redo",{"_index":3299,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"index.html":{}}}],["reduce",{"_index":1370,"title":{},"body":{"components/DataItemComponent.html":{},"components/OffcanvasComponent.html":{}}}],["reject",{"_index":1953,"title":{},"body":{"injectables/FileService.html":{},"injectables/FlavorService.html":{},"injectables/ModuleService.html":{},"injectables/TheaterService.html":{}}}],["reject(\"the",{"_index":1959,"title":{},"body":{"injectables/FileService.html":{}}}],["reject(\"unable",{"_index":1965,"title":{},"body":{"injectables/FileService.html":{}}}],["reject(e",{"_index":1963,"title":{},"body":{"injectables/FileService.html":{}}}],["reject(error",{"_index":2013,"title":{},"body":{"injectables/FlavorService.html":{},"injectables/ModuleService.html":{},"injectables/TheaterService.html":{}}}],["relation",{"_index":1737,"title":{},"body":{"classes/ExportModule.html":{}}}],["relationships",{"_index":1007,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/ExportModule.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["relationshipsexport",{"_index":1008,"title":{"classes/RelationshipsExport.html":{}},"body":{"classes/ConstraintsMSD.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["relationshipstypeexport",{"_index":969,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/ExportModule.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["relationshipstypeexport.connect_port",{"_index":1744,"title":{},"body":{"classes/ExportModule.html":{}}}],["relationshipstypeexport.contained_in",{"_index":1769,"title":{},"body":{"classes/ExportModule.html":{}}}],["relationshipstypeexport.depends_on",{"_index":1760,"title":{},"body":{"classes/ExportModule.html":{}}}],["relativa",{"_index":432,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["relative",{"_index":2239,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["relazioni",{"_index":644,"title":{},"body":{"classes/AreaExport.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/ExportModule.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/SourceExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["relevant",{"_index":2230,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["reload",{"_index":3891,"title":{},"body":{"index.html":{}}}],["remote_interface",{"_index":586,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/ExportTheater.html":{},"classes/GenericParameterDTO.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["remote_interface:string",{"_index":648,"title":{},"body":{"classes/AreaExport.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesTSD.html":{},"classes/SourceExport.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{}}}],["remove",{"_index":1371,"title":{},"body":{"components/DataItemComponent.html":{}}}],["rename(component",{"_index":3308,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["rende",{"_index":3422,"title":{},"body":{"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{}}}],["render",{"_index":268,"title":{},"body":{"modules/AppModule.html":{},"components/ControlTemplate.html":{},"components/HostComponent.html":{},"classes/HostNode.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"components/NetworkComponent.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"components/SubnetComponent.html":{},"classes/SubnetNode.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/_Control.html":{},"dependencies.html":{}}}],["rendering",{"_index":2775,"title":{},"body":{"components/OffcanvasComponent.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["renderizza",{"_index":3336,"title":{},"body":{"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["renderizzare",{"_index":1132,"title":{},"body":{"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{}}}],["repeat",{"_index":2159,"title":{},"body":{"components/HomeComponent.html":{}}}],["reperibili",{"_index":1682,"title":{},"body":{"classes/ExportModule.html":{},"classes/ExportTheater.html":{}}}],["reperimento",{"_index":835,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["reperire",{"_index":1537,"title":{},"body":{"components/DocsComponent.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["reperiti",{"_index":867,"title":{},"body":{"components/ComposerComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/ParseDataForTheaterVisualizer.html":{}}}],["reperito",{"_index":1541,"title":{},"body":{"components/DocsComponent.html":{},"classes/ExportModule.html":{}}}],["required",{"_index":725,"title":{},"body":{"injectables/AuthGuard.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"components/HomeComponent.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{}}}],["requiredroles",{"_index":726,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["requiredroles.every((role",{"_index":737,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["requiredroles.length",{"_index":734,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["res",{"_index":2011,"title":{},"body":{"injectables/FlavorService.html":{},"injectables/ModuleService.html":{},"injectables/TheaterService.html":{}}}],["reset",{"_index":234,"title":{},"body":{"modules/AppModule.html":{},"components/HomeComponent.html":{},"overview.html":{}}}],["resolve",{"_index":3645,"title":{},"body":{"injectables/TheaterService.html":{}}}],["resolve(data",{"_index":1958,"title":{},"body":{"injectables/FileService.html":{}}}],["resolve(res",{"_index":2012,"title":{},"body":{"injectables/FlavorService.html":{},"injectables/ModuleService.html":{},"injectables/TheaterService.html":{}}}],["resource_id",{"_index":1015,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["responsetype",{"_index":680,"title":{},"body":{"injectables/AttachmentsService.html":{},"components/DocsComponent.html":{}}}],["resposnse",{"_index":2521,"title":{},"body":{"injectables/ModalService.html":{}}}],["restituire",{"_index":2936,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["restituisce",{"_index":457,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["restituiscono",{"_index":1579,"title":{},"body":{"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{}}}],["restituzione",{"_index":1482,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["rete",{"_index":202,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/FlavorApplication.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"classes/HostNode.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"components/ModalComponent.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"classes/NetworkNode.html":{},"classes/NodeTopologyElement.html":{},"components/OffcanvasComponent.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SimpleModuleApplication.html":{},"components/SubnetComponent.html":{},"classes/SubnetNode.html":{},"components/TabnavComponent.html":{},"classes/TheaterApplication.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{},"dependencies.html":{}}}],["rete/types/core/data",{"_index":1696,"title":{},"body":{"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["retebasic",{"_index":2324,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["retebasicmoduleinfo",{"_index":2325,"title":{"classes/reteBasicModuleInfo.html":{}},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["retebasicmoduleinfo:15",{"_index":3233,"title":{},"body":{"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{}}}],["retebasicmoduleinfo:20",{"_index":3235,"title":{},"body":{"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{}}}],["retebasicmoduleinfo:21",{"_index":3238,"title":{},"body":{"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{}}}],["retebasicmoduleinfo:22",{"_index":3236,"title":{},"body":{"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{}}}],["retebasicmoduleinfo:23",{"_index":3234,"title":{},"body":{"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{}}}],["retebasicmoduleinfo:24",{"_index":3237,"title":{},"body":{"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{}}}],["retebasicmoduleinfo:25",{"_index":3239,"title":{},"body":{"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{}}}],["retebasicnodeinfo",{"_index":2323,"title":{"classes/reteBasicNodeInfo.html":{}},"body":{"classes/HostNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/SubnetNode.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["retebasicnodeinfo:10",{"_index":3231,"title":{},"body":{"classes/ReteHostInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{}}}],["retebasicnodeinfo:15",{"_index":3341,"title":{},"body":{"classes/ReteNetworkInfo.html":{}}}],["retebasicnodeinfo:18",{"_index":3345,"title":{},"body":{"classes/ReteSubnetInfo.html":{}}}],["retebasicnodeinfo:20",{"_index":3229,"title":{},"body":{"classes/ReteHostInfo.html":{}}}],["retebasicnodeinfo:8",{"_index":3230,"title":{},"body":{"classes/ReteHostInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{}}}],["retebasicnodeinfo:9",{"_index":3232,"title":{},"body":{"classes/ReteHostInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{}}}],["reteconnection",{"_index":463,"title":{"classes/ReteConnection.html":{}},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["retedisplaymoduledatamc",{"_index":3833,"title":{},"body":{"miscellaneous/functions.html":{}}}],["retedisplaymoduledatamc(module",{"_index":3862,"title":{},"body":{"miscellaneous/functions.html":{}}}],["retedisplaymoduledatamv",{"_index":3835,"title":{},"body":{"miscellaneous/functions.html":{}}}],["retedisplaymoduledatamv(module",{"_index":3863,"title":{},"body":{"miscellaneous/functions.html":{}}}],["retedisplaymoduledatatc",{"_index":3836,"title":{},"body":{"miscellaneous/functions.html":{}}}],["retedisplaymoduledatatc(module",{"_index":3864,"title":{},"body":{"miscellaneous/functions.html":{}}}],["retedisplaymoduledatatv",{"_index":3837,"title":{},"body":{"miscellaneous/functions.html":{}}}],["retedisplaymoduledatatv(module",{"_index":3865,"title":{},"body":{"miscellaneous/functions.html":{}}}],["retedisplaymoduleinstancetc",{"_index":3838,"title":{},"body":{"miscellaneous/functions.html":{}}}],["retedisplaymoduleinstancetc(node",{"_index":3866,"title":{},"body":{"miscellaneous/functions.html":{}}}],["retedisplaynodedatamv",{"_index":3839,"title":{},"body":{"miscellaneous/functions.html":{}}}],["retedisplaynodedatamv(node",{"_index":3868,"title":{},"body":{"miscellaneous/functions.html":{}}}],["retedisplaytheaterdatatc",{"_index":3840,"title":{},"body":{"miscellaneous/functions.html":{}}}],["retedisplaytheaterdatatc(theater",{"_index":3869,"title":{},"body":{"miscellaneous/functions.html":{}}}],["retedisplaytheaterdatatv",{"_index":3841,"title":{},"body":{"miscellaneous/functions.html":{}}}],["retedisplaytheaterdatatv(theater",{"_index":3870,"title":{},"body":{"miscellaneous/functions.html":{}}}],["retehostinfo",{"_index":385,"title":{"classes/ReteHostInfo.html":{}},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/EmptyNodeInfo.html":{},"classes/FlavorApplication.html":{},"classes/HostNode.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"miscellaneous/functions.html":{}}}],["retejs",{"_index":1031,"title":{},"body":{"components/ControlTemplate.html":{},"classes/_Control.html":{}}}],["retemirroringmoduleinstanceinfo",{"_index":392,"title":{"classes/ReteMirroringModuleInstanceInfo.html":{}},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/EmptyModuleInfo.html":{},"classes/FlavorApplication.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"miscellaneous/functions.html":{}}}],["retemodule",{"_index":266,"title":{},"body":{"modules/AppModule.html":{}}}],["retemodulecomposer",{"_index":842,"title":{},"body":{"components/ComposerComponent.html":{},"classes/ReteModuleComposerSettings.html":{},"components/VisualizerComponent.html":{}}}],["retemodulecomposercomponent",{"_index":201,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"overview.html":{}}}],["retemodulecomposersettings",{"_index":3246,"title":{"classes/ReteModuleComposerSettings.html":{}},"body":{"classes/ReteModuleComposerSettings.html":{}}}],["retemodulenodeinfo",{"_index":3934,"title":{},"body":{"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["retemodulevisualizer",{"_index":3327,"title":{},"body":{"classes/ReteModuleVisualizerSettings.html":{}}}],["retemodulevisualizercomponent",{"_index":203,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"overview.html":{}}}],["retemodulevisualizersettings",{"_index":3325,"title":{"classes/ReteModuleVisualizerSettings.html":{}},"body":{"classes/ReteModuleVisualizerSettings.html":{}}}],["retenetworkinfo",{"_index":388,"title":{"classes/ReteNetworkInfo.html":{}},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/EmptyNodeInfo.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NetworkNode.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteConnection.html":{},"classes/ReteNetworkInfo.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"miscellaneous/functions.html":{}}}],["retesubnetinfo",{"_index":390,"title":{"classes/ReteSubnetInfo.html":{}},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/EmptyNodeInfo.html":{},"classes/FlavorApplication.html":{},"classes/HostNode.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NetworkNode.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/SimpleModuleApplication.html":{},"classes/SubnetNode.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"miscellaneous/functions.html":{}}}],["retetheatercomposer",{"_index":845,"title":{},"body":{"components/ComposerComponent.html":{},"classes/ReteTheaterComposerSettings.html":{},"components/VisualizerComponent.html":{}}}],["retetheatercomposercomponent",{"_index":205,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"overview.html":{}}}],["retetheatercomposersettings",{"_index":3349,"title":{"classes/ReteTheaterComposerSettings.html":{}},"body":{"classes/ReteTheaterComposerSettings.html":{}}}],["retetheaterinternalservicemoduleinstanceinfo",{"_index":394,"title":{"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{}},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/EmptyModuleInfo.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"miscellaneous/functions.html":{}}}],["retetheatermoduleinstanceinfo",{"_index":396,"title":{"classes/ReteTheaterModuleInstanceInfo.html":{}},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/EmptyModuleInfo.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"classes/TheaterModuleInstanceNode.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"miscellaneous/functions.html":{}}}],["retetheatervisualizer",{"_index":3367,"title":{},"body":{"classes/ReteTheaterVisualizerSettings.html":{}}}],["retetheatervisualizercomponent",{"_index":206,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"overview.html":{}}}],["retetheatervisualizersettings",{"_index":3365,"title":{"classes/ReteTheaterVisualizerSettings.html":{}},"body":{"classes/ReteTheaterVisualizerSettings.html":{}}}],["return",{"_index":697,"title":{},"body":{"injectables/AttachmentsService.html":{},"injectables/AuthGuard.html":{},"components/DataInputV2Component.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"injectables/FlavorService.html":{},"components/HomeComponent.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"injectables/ModuleService.html":{},"classes/NetworkNode.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"injectables/StorageService.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"injectables/TheaterService.html":{},"injectables/TokenService.html":{},"components/UnderbarComponent.html":{}}}],["returnoutput",{"_index":1149,"title":{},"body":{"components/DataInputComponent.html":{}}}],["returnoutput(val",{"_index":1170,"title":{},"body":{"components/DataInputComponent.html":{}}}],["returns",{"_index":251,"title":{},"body":{"modules/AppModule.html":{},"injectables/AttachmentsService.html":{},"injectables/AuthGuard.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"injectables/FlavorService.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"classes/HostNode.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"injectables/ModuleService.html":{},"components/NavbarComponent.html":{},"components/NetworkComponent.html":{},"classes/NetworkNode.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"injectables/StorageService.html":{},"components/SubnetComponent.html":{},"classes/SubnetNode.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"injectables/TheaterService.html":{},"injectables/TokenService.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{},"miscellaneous/functions.html":{}}}],["revealed",{"_index":2228,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["rgb(41",{"_index":2714,"title":{},"body":{"components/NavbarElementComponent.html":{}}}],["rgba(0,0,0,.53)!important",{"_index":2824,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["ricavato",{"_index":3755,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["ricevere",{"_index":2484,"title":{},"body":{"injectables/ModalService.html":{}}}],["richiama",{"_index":849,"title":{},"body":{"components/ComposerComponent.html":{},"classes/ExportModule.html":{},"components/HomeComponent.html":{},"components/VisualizerComponent.html":{}}}],["richiamata",{"_index":847,"title":{},"body":{"components/ComposerComponent.html":{},"components/DataInputV2Component.html":{},"components/DocsComponent.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"components/NavbarComponent.html":{},"classes/NetworkNode.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SubnetNode.html":{},"components/TabnavComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"components/VisualizerComponent.html":{}}}],["richiamta",{"_index":2315,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["riconoscimento",{"_index":1263,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["riferimento",{"_index":746,"title":{},"body":{"classes/BlueprintFileDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/NameMappingDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TheaterDTO.html":{},"classes/TheatreStatusDTO.html":{}}}],["righe",{"_index":3311,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["right",{"_index":1398,"title":{},"body":{"components/DataItemComponent.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["riguarda",{"_index":3252,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["rimpocciolisci",{"_index":235,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["rimuove",{"_index":2972,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["riporato",{"_index":2961,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["rispettivamente",{"_index":1544,"title":{},"body":{"components/DocsComponent.html":{}}}],["rispettive",{"_index":823,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["risultante",{"_index":441,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["risultato",{"_index":55,"title":{},"body":{"classes/Aoption.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"injectables/AttachmentsService.html":{},"injectables/AuthGuard.html":{},"classes/BlueprintFileDTO.html":{},"classes/BorderNetworkDTO.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"components/ControlTemplate.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputReturnedV2.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/DeployInstanceDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"classes/FlavorApplication.html":{},"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"injectables/FlavorService.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"classes/HostModuleDTO.html":{},"classes/HostNode.html":{},"classes/HostPortModuleDTO.html":{},"components/HowToUseComponent.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModalButton.html":{},"components/ModalComponent.html":{},"classes/ModalItem.html":{},"injectables/ModalService.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"injectables/ModuleService.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"interfaces/ModuleTopology.html":{},"classes/NameMappingDTO.html":{},"components/NavbarComponent.html":{},"classes/NavbarElement.html":{},"components/NavbarElementComponent.html":{},"classes/NavbarItem.html":{},"classes/NetOSRouterDTO.html":{},"components/NetworkComponent.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkDTO.html":{},"classes/NetworkNode.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/NodeTopologyElement.html":{},"components/OffcanvasComponent.html":{},"classes/PageableDTO.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SelectOption.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/SingleDataInputReturned.html":{},"classes/SortDTO.html":{},"classes/SourceExport.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"classes/StatisticItemDTO.html":{},"injectables/StorageService.html":{},"components/SubnetComponent.html":{},"classes/SubnetDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"components/TabnavComponent.html":{},"classes/TabnavElement.html":{},"classes/TabnavItem.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"injectables/TheaterService.html":{},"classes/TheaterSimpleData.html":{},"interfaces/TheaterTopology.html":{},"classes/TheatreStatusDTO.html":{},"injectables/TokenService.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/TypesCatalogueDTO.html":{},"components/UnderbarComponent.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{},"routes.html":{}}}],["ritorato",{"_index":560,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["ritorna",{"_index":1295,"title":{},"body":{"components/DataInputV2Component.html":{},"injectables/ModalService.html":{},"components/NavbarComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"injectables/StorageService.html":{},"injectables/TokenService.html":{},"components/UnderbarComponent.html":{},"miscellaneous/functions.html":{}}}],["ritornare",{"_index":1931,"title":{},"body":{"injectables/FileService.html":{},"injectables/TokenService.html":{}}}],["ritornata",{"_index":1158,"title":{},"body":{"components/DataInputComponent.html":{}}}],["ritornati",{"_index":502,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["ritornato",{"_index":1287,"title":{},"body":{"components/DataInputV2Component.html":{},"classes/PageableDTO.html":{},"classes/SortDTO.html":{}}}],["ritorno",{"_index":1114,"title":{},"body":{"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputReturnedV2.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"components/HomeComponent.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModalButton.html":{},"classes/ModalItem.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{},"miscellaneous/functions.html":{}}}],["roles",{"_index":724,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["root",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"injectables/AttachmentsService.html":{},"injectables/AuthGuard.html":{},"injectables/ExportService.html":{},"injectables/FileService.html":{},"injectables/FlavorService.html":{},"injectables/ModalService.html":{},"injectables/ModuleService.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"injectables/StorageService.html":{},"injectables/TheaterService.html":{},"injectables/TokenService.html":{}}}],["root'},{'name",{"_index":172,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["rotate",{"_index":2717,"title":{},"body":{"components/NavbarElementComponent.html":{}}}],["rotatez(0",{"_index":2724,"title":{},"body":{"components/NavbarElementComponent.html":{}}}],["rotatez(180deg",{"_index":2726,"title":{},"body":{"components/NavbarElementComponent.html":{}}}],["rotatez(360deg",{"_index":2727,"title":{},"body":{"components/NavbarElementComponent.html":{}}}],["round",{"_index":2160,"title":{},"body":{"components/HomeComponent.html":{}}}],["rounded",{"_index":1418,"title":{},"body":{"components/DataItemComponent.html":{}}}],["route",{"_index":709,"title":{},"body":{"injectables/AuthGuard.html":{},"components/ComposerComponent.html":{},"components/HomeComponent.html":{},"components/VisualizerComponent.html":{}}}],["route.data.roles",{"_index":727,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["router",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"classes/BorderNetworkDTO.html":{},"components/ComposerComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"components/HomeComponent.html":{},"classes/NetOSRouterDTO.html":{},"classes/NetworkDTO.html":{},"classes/SubnetDTO.html":{},"components/VisualizerComponent.html":{}}}],["routermodule",{"_index":355,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":366,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":707,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["routes",{"_index":356,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"routes.html":{}}}],["routesguard",{"_index":359,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routessimple",{"_index":365,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routing",{"_index":2050,"title":{},"body":{"components/HomeComponent.html":{}}}],["routing.module",{"_index":261,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":354,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["rowmodules",{"_index":2976,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["rowtheater",{"_index":2877,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["rowtheater.blueprintfile.node_templates[rowtheater.name",{"_index":2963,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["rowtheater.name",{"_index":2967,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["rox.content",{"_index":1571,"title":{},"body":{"components/DocsComponent.html":{}}}],["rox.footer",{"_index":1572,"title":{},"body":{"components/DocsComponent.html":{}}}],["rox.header",{"_index":1565,"title":{},"body":{"components/DocsComponent.html":{}}}],["rpt",{"_index":2156,"title":{},"body":{"components/HomeComponent.html":{}}}],["run",{"_index":3885,"title":{},"body":{"index.html":{}}}],["running",{"_index":3904,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":130,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"injectables/ModalService.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"components/VisualizerComponent.html":{},"dependencies.html":{}}}],["salva",{"_index":1684,"title":{},"body":{"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"components/HomeComponent.html":{},"injectables/TokenService.html":{}}}],["salvare",{"_index":3449,"title":{},"body":{"injectables/StorageService.html":{},"injectables/TokenService.html":{}}}],["salvataggio",{"_index":1278,"title":{},"body":{"components/DataInputV2Component.html":{},"injectables/FileService.html":{}}}],["salvato",{"_index":3665,"title":{},"body":{"injectables/TokenService.html":{}}}],["sanitized",{"_index":1540,"title":{},"body":{"components/DocsComponent.html":{}}}],["sanitizer",{"_index":1534,"title":{},"body":{"components/DocsComponent.html":{}}}],["sarebbe",{"_index":1846,"title":{},"body":{"injectables/ExportService.html":{},"injectables/FileService.html":{}}}],["save",{"_index":1150,"title":{},"body":{"components/DataInputComponent.html":{}}}],["scaffolding",{"_index":3893,"title":{},"body":{"index.html":{}}}],["scale",{"_index":2718,"title":{},"body":{"components/NavbarElementComponent.html":{}}}],["scale(0.5",{"_index":2725,"title":{},"body":{"components/NavbarElementComponent.html":{}}}],["scale(1",{"_index":2723,"title":{},"body":{"components/NavbarElementComponent.html":{}}}],["scale(1.5",{"_index":2182,"title":{},"body":{"components/HomeComponent.html":{}}}],["scaleextent",{"_index":3313,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["scaricabile",{"_index":1819,"title":{},"body":{"injectables/ExportService.html":{}}}],["scaricare",{"_index":1844,"title":{},"body":{"injectables/ExportService.html":{},"injectables/FileService.html":{}}}],["sceglie",{"_index":2502,"title":{},"body":{"injectables/ModalService.html":{}}}],["scegliere",{"_index":2024,"title":{},"body":{"components/HomeComponent.html":{}}}],["scelta",{"_index":1260,"title":{},"body":{"components/DataInputV2Component.html":{},"components/HomeComponent.html":{},"injectables/ModalService.html":{}}}],["scelto",{"_index":852,"title":{},"body":{"components/ComposerComponent.html":{},"components/DataInputV2Component.html":{},"components/HomeComponent.html":{},"components/VisualizerComponent.html":{}}}],["schemas",{"_index":243,"title":{},"body":{"modules/AppModule.html":{}}}],["schermate",{"_index":2708,"title":{},"body":{"components/NavbarElementComponent.html":{}}}],["scopo",{"_index":796,"title":{},"body":{"components/ComposerComponent.html":{},"components/DataInputV2Component.html":{},"components/DocsComponent.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"classes/NetworkNode.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"injectables/TokenService.html":{},"components/VisualizerComponent.html":{},"miscellaneous/functions.html":{}}}],["screen",{"_index":2779,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["scrolling",{"_index":142,"title":{},"body":{"components/AppComponent.html":{}}}],["se",{"_index":344,"title":{},"body":{"modules/AppModule.html":{},"components/ComposerComponent.html":{},"components/DataInputV2Component.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"components/TabnavComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"components/VisualizerComponent.html":{}}}],["searchbar",{"_index":3295,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["secondary",{"_index":2413,"title":{},"body":{"classes/ModalButton.html":{},"classes/ModalItem.html":{},"injectables/ModalService.html":{}}}],["secondo",{"_index":2480,"title":{},"body":{"injectables/ModalService.html":{}}}],["see",{"_index":611,"title":{},"body":{"classes/AreaExport.html":{},"components/ComposerComponent.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputReturnedV2.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"components/DocsComponent.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"components/HomeComponent.html":{},"classes/HostNode.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModalButton.html":{},"components/ModalComponent.html":{},"classes/ModalItem.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleSimpleData.html":{},"components/NavbarComponent.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkNode.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{},"classes/SourceExport.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"components/TabnavComponent.html":{},"classes/TabnavElement.html":{},"classes/TabnavItem.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/TheaterSimpleData.html":{},"components/UnderbarComponent.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"components/VisualizerComponent.html":{}}}],["segno",{"_index":3047,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["segue",{"_index":3131,"title":{},"body":{"classes/PerseDataForModuleVisualizer.html":{}}}],["seguito",{"_index":2928,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["select",{"_index":2142,"title":{},"body":{"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["select_item",{"_index":2676,"title":{},"body":{"components/NavbarComponent.html":{}}}],["select_item(val",{"_index":2690,"title":{},"body":{"components/NavbarComponent.html":{}}}],["selectable",{"_index":1200,"title":{},"body":{"components/DataInputComponent.html":{}}}],["selected",{"_index":1960,"title":{},"body":{"injectables/FileService.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["selected_number",{"_index":1104,"title":{},"body":{"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{}}}],["selectedfile",{"_index":1924,"title":{},"body":{"injectables/FileService.html":{}}}],["selection",{"_index":1094,"title":{},"body":{"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{}}}],["selectoption",{"_index":1105,"title":{"classes/SelectOption.html":{}},"body":{"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{}}}],["selector",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["seleziona",{"_index":2052,"title":{},"body":{"components/HomeComponent.html":{},"components/TabnavComponent.html":{},"components/UnderbarComponent.html":{}}}],["selezionata",{"_index":2071,"title":{},"body":{"components/HomeComponent.html":{},"components/TabnavComponent.html":{}}}],["selezionato",{"_index":2686,"title":{},"body":{"components/NavbarComponent.html":{}}}],["selezionatp",{"_index":3704,"title":{},"body":{"components/UnderbarComponent.html":{}}}],["selezioni",{"_index":1111,"title":{},"body":{"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{}}}],["semplicemente",{"_index":1659,"title":{},"body":{"classes/ExportModule.html":{},"classes/ExportTheater.html":{}}}],["senza",{"_index":2329,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"miscellaneous/functions.html":{}}}],["separator",{"_index":3721,"title":{},"body":{"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{}}}],["sequence",{"_index":590,"title":{},"body":{"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/ExportTheater.html":{},"classes/GenericParameterDTO.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesTSD.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/SourceExport.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/TheaterSimpleData.html":{},"classes/TypesCatalogueDTO.html":{},"classes/reteBasicModuleInfo.html":{}}}],["sequenza",{"_index":749,"title":{},"body":{"classes/BlueprintFileDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/NameMappingDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TheaterDTO.html":{},"classes/TheatreStatusDTO.html":{}}}],["serivizio",{"_index":3419,"title":{},"body":{"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{}}}],["serve",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"components/DataInputV2Component.html":{},"classes/ExportModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"injectables/TokenService.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"index.html":{}}}],["server",{"_index":1473,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"injectables/TokenService.html":{},"index.html":{}}}],["service",{"_index":1470,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"injectables/StorageService.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["services/api/module.service",{"_index":304,"title":{},"body":{"modules/AppModule.html":{}}}],["services/api/theater.service",{"_index":305,"title":{},"body":{"modules/AppModule.html":{}}}],["services/application/modal/modal.service",{"_index":132,"title":{},"body":{"components/AppComponent.html":{}}}],["services/application/parse/parse.service",{"_index":319,"title":{},"body":{"modules/AppModule.html":{}}}],["services/application/spinner/spinner.service",{"_index":133,"title":{},"body":{"components/AppComponent.html":{}}}],["services/token/token.service",{"_index":303,"title":{},"body":{"modules/AppModule.html":{}}}],["servita",{"_index":1524,"title":{},"body":{"components/DocsComponent.html":{}}}],["servizio",{"_index":1815,"title":{},"body":{"injectables/ExportService.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"injectables/ModalService.html":{},"injectables/ParseService.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"injectables/TokenService.html":{}}}],["set",{"_index":1271,"title":{},"body":{"components/DataInputV2Component.html":{},"components/ModalComponent.html":{},"components/OffcanvasComponent.html":{},"injectables/StorageService.html":{}}}],["setconfirmationmodal",{"_index":2488,"title":{},"body":{"injectables/ModalService.html":{}}}],["setconfirmationmodal(text_content",{"_index":2493,"title":{},"body":{"injectables/ModalService.html":{}}}],["setdata(data",{"_index":3453,"title":{},"body":{"injectables/StorageService.html":{}}}],["setheaders",{"_index":3659,"title":{},"body":{"injectables/TokenService.html":{}}}],["setheaders(val",{"_index":3669,"title":{},"body":{"injectables/TokenService.html":{}}}],["sethttpgetoption",{"_index":3660,"title":{},"body":{"injectables/TokenService.html":{}}}],["sethttpgetoption(val",{"_index":3671,"title":{},"body":{"injectables/TokenService.html":{}}}],["setresponse",{"_index":2489,"title":{},"body":{"injectables/ModalService.html":{}}}],["setresponse(val",{"_index":2496,"title":{},"body":{"injectables/ModalService.html":{}}}],["setshow(val",{"_index":2449,"title":{},"body":{"components/ModalComponent.html":{},"components/OffcanvasComponent.html":{}}}],["setspinner",{"_index":3435,"title":{},"body":{"injectables/SpinnerService.html":{}}}],["setspinner(show",{"_index":3431,"title":{},"body":{"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{}}}],["setta",{"_index":2443,"title":{},"body":{"components/ModalComponent.html":{},"injectables/ModalService.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"components/TabnavComponent.html":{},"injectables/TokenService.html":{}}}],["settaggi",{"_index":3250,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["settaggio",{"_index":3418,"title":{},"body":{"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"miscellaneous/functions.html":{}}}],["settare",{"_index":2499,"title":{},"body":{"injectables/ModalService.html":{},"injectables/StorageService.html":{},"injectables/TokenService.html":{}}}],["settings/controls/control",{"_index":288,"title":{},"body":{"modules/AppModule.html":{}}}],["settings/controls/control.ts",{"_index":1027,"title":{},"body":{"components/ControlTemplate.html":{},"classes/_Control.html":{}}}],["settings/controls/control.ts:15",{"_index":1040,"title":{},"body":{"components/ControlTemplate.html":{}}}],["settings/controls/control.ts:16",{"_index":1039,"title":{},"body":{"components/ControlTemplate.html":{}}}],["settings/controls/control.ts:17",{"_index":1037,"title":{},"body":{"components/ControlTemplate.html":{}}}],["settings/controls/control.ts:18",{"_index":1038,"title":{},"body":{"components/ControlTemplate.html":{}}}],["settings/controls/control.ts:20",{"_index":1041,"title":{},"body":{"components/ControlTemplate.html":{}}}],["settings/controls/control.ts:31",{"_index":3768,"title":{},"body":{"classes/_Control.html":{}}}],["settings/controls/control.ts:32",{"_index":3767,"title":{},"body":{"classes/_Control.html":{}}}],["settings/controls/control.ts:34",{"_index":3769,"title":{},"body":{"classes/_Control.html":{}}}],["settings/controls/control.ts:50",{"_index":3770,"title":{},"body":{"classes/_Control.html":{}}}],["settings/controls/control.ts:55",{"_index":3771,"title":{},"body":{"classes/_Control.html":{}}}],["settings/models/retemodeltype",{"_index":2213,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["settings/nodes/rete",{"_index":277,"title":{},"body":{"modules/AppModule.html":{},"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/FlavorApplication.html":{},"components/HostComponent.html":{},"classes/HostNode.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"components/NetworkComponent.html":{},"classes/NetworkNode.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SimpleModuleApplication.html":{},"components/SubnetComponent.html":{},"classes/SubnetNode.html":{},"classes/TheaterApplication.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"miscellaneous/functions.html":{}}}],["settings/nodes/retebasic.ts",{"_index":3925,"title":{},"body":{"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["settings/nodes/retebasic.ts:10",{"_index":3936,"title":{},"body":{"classes/reteBasicNodeInfo.html":{}}}],["settings/nodes/retebasic.ts:11",{"_index":3938,"title":{},"body":{"classes/reteBasicNodeInfo.html":{}}}],["settings/nodes/retebasic.ts:20",{"_index":3927,"title":{},"body":{"classes/reteBasicModuleInfo.html":{}}}],["settings/nodes/retebasic.ts:21",{"_index":3930,"title":{},"body":{"classes/reteBasicModuleInfo.html":{}}}],["settings/nodes/retebasic.ts:22",{"_index":3928,"title":{},"body":{"classes/reteBasicModuleInfo.html":{}}}],["settings/nodes/retebasic.ts:23",{"_index":3926,"title":{},"body":{"classes/reteBasicModuleInfo.html":{}}}],["settings/nodes/retebasic.ts:24",{"_index":3929,"title":{},"body":{"classes/reteBasicModuleInfo.html":{}}}],["settings/nodes/retebasic.ts:25",{"_index":3931,"title":{},"body":{"classes/reteBasicModuleInfo.html":{}}}],["settings/nodes/retebasic.ts:26",{"_index":3932,"title":{},"body":{"classes/reteBasicModuleInfo.html":{}}}],["settings/nodes/retebasic.ts:8",{"_index":3935,"title":{},"body":{"classes/reteBasicNodeInfo.html":{}}}],["settings/nodes/retebasic.ts:9",{"_index":3937,"title":{},"body":{"classes/reteBasicNodeInfo.html":{}}}],["settings/retemodulecomposersettings.ts",{"_index":3248,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{}}}],["settings/retemodulecomposersettings.ts:20",{"_index":3261,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{}}}],["settings/retemodulecomposersettings.ts:21",{"_index":3262,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{}}}],["settings/retemodulecomposersettings.ts:22",{"_index":3260,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{}}}],["settings/retemodulecomposersettings.ts:23",{"_index":3263,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{}}}],["settings/retemodulecomposersettings.ts:24",{"_index":3259,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{}}}],["settings/retemodulecomposersettings.ts:43",{"_index":3264,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{}}}],["settings/retemodulevisualizersettings.ts",{"_index":3326,"title":{},"body":{"classes/ReteModuleVisualizerSettings.html":{}}}],["settings/retemodulevisualizersettings.ts:107",{"_index":3335,"title":{},"body":{"classes/ReteModuleVisualizerSettings.html":{}}}],["settings/retemodulevisualizersettings.ts:21",{"_index":3331,"title":{},"body":{"classes/ReteModuleVisualizerSettings.html":{}}}],["settings/retemodulevisualizersettings.ts:22",{"_index":3332,"title":{},"body":{"classes/ReteModuleVisualizerSettings.html":{}}}],["settings/retemodulevisualizersettings.ts:23",{"_index":3330,"title":{},"body":{"classes/ReteModuleVisualizerSettings.html":{}}}],["settings/retemodulevisualizersettings.ts:24",{"_index":3333,"title":{},"body":{"classes/ReteModuleVisualizerSettings.html":{}}}],["settings/retemodulevisualizersettings.ts:25",{"_index":3329,"title":{},"body":{"classes/ReteModuleVisualizerSettings.html":{}}}],["settings/retemodulevisualizersettings.ts:44",{"_index":3334,"title":{},"body":{"classes/ReteModuleVisualizerSettings.html":{}}}],["settings/retetheatercomposersettings.ts",{"_index":3350,"title":{},"body":{"classes/ReteTheaterComposerSettings.html":{}}}],["settings/retetheatercomposersettings.ts:17",{"_index":3353,"title":{},"body":{"classes/ReteTheaterComposerSettings.html":{}}}],["settings/retetheatercomposersettings.ts:18",{"_index":3354,"title":{},"body":{"classes/ReteTheaterComposerSettings.html":{}}}],["settings/retetheatercomposersettings.ts:19",{"_index":3352,"title":{},"body":{"classes/ReteTheaterComposerSettings.html":{}}}],["settings/retetheatercomposersettings.ts:20",{"_index":3355,"title":{},"body":{"classes/ReteTheaterComposerSettings.html":{}}}],["settings/retetheatercomposersettings.ts:21",{"_index":3351,"title":{},"body":{"classes/ReteTheaterComposerSettings.html":{}}}],["settings/retetheatercomposersettings.ts:42",{"_index":3356,"title":{},"body":{"classes/ReteTheaterComposerSettings.html":{}}}],["settings/retetheatervisualizersettings.ts",{"_index":3366,"title":{},"body":{"classes/ReteTheaterVisualizerSettings.html":{}}}],["settings/retetheatervisualizersettings.ts:108",{"_index":3374,"title":{},"body":{"classes/ReteTheaterVisualizerSettings.html":{}}}],["settings/retetheatervisualizersettings.ts:18",{"_index":3370,"title":{},"body":{"classes/ReteTheaterVisualizerSettings.html":{}}}],["settings/retetheatervisualizersettings.ts:19",{"_index":3371,"title":{},"body":{"classes/ReteTheaterVisualizerSettings.html":{}}}],["settings/retetheatervisualizersettings.ts:20",{"_index":3369,"title":{},"body":{"classes/ReteTheaterVisualizerSettings.html":{}}}],["settings/retetheatervisualizersettings.ts:21",{"_index":3372,"title":{},"body":{"classes/ReteTheaterVisualizerSettings.html":{}}}],["settings/retetheatervisualizersettings.ts:22",{"_index":3368,"title":{},"body":{"classes/ReteTheaterVisualizerSettings.html":{}}}],["settings/retetheatervisualizersettings.ts:42",{"_index":3373,"title":{},"body":{"classes/ReteTheaterVisualizerSettings.html":{}}}],["settings/settings/displaydata.ts",{"_index":3861,"title":{},"body":{"miscellaneous/functions.html":{}}}],["settings/settings/editor",{"_index":3247,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["settings/style/styleiconconfig",{"_index":2212,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["settoken",{"_index":3661,"title":{},"body":{"injectables/TokenService.html":{}}}],["settoken(val",{"_index":3673,"title":{},"body":{"injectables/TokenService.html":{}}}],["setvalue",{"_index":3765,"title":{},"body":{"classes/_Control.html":{}}}],["setvalue(val",{"_index":1062,"title":{},"body":{"components/ControlTemplate.html":{},"components/DataInputV2Component.html":{},"classes/_Control.html":{}}}],["shadow",{"_index":2189,"title":{},"body":{"components/HomeComponent.html":{},"components/OffcanvasComponent.html":{}}}],["show",{"_index":2427,"title":{},"body":{"components/ModalComponent.html":{},"injectables/ModalService.html":{},"components/OffcanvasComponent.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{}}}],["show(val",{"_index":2451,"title":{},"body":{"components/ModalComponent.html":{},"components/OffcanvasComponent.html":{}}}],["show/hide",{"_index":2090,"title":{},"body":{"components/HomeComponent.html":{},"injectables/ModalService.html":{}}}],["showchange",{"_index":2429,"title":{},"body":{"components/ModalComponent.html":{},"components/OffcanvasComponent.html":{}}}],["showconfirmationmodal",{"_index":2490,"title":{},"body":{"injectables/ModalService.html":{}}}],["showconfirmationmodal(text_content",{"_index":2504,"title":{},"body":{"injectables/ModalService.html":{}}}],["showcontextmenu",{"_index":3881,"title":{},"body":{"index.html":{}}}],["showfooter",{"_index":2371,"title":{},"body":{"components/MirroringModuleInstanceComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["showhidesocket",{"_index":2204,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["showinputoutlet",{"_index":2201,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["showmodal",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"components/ModalComponent.html":{}}}],["showoutputoutlet",{"_index":2202,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["showports",{"_index":2203,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["showspinner",{"_index":79,"title":{},"body":{"components/AppComponent.html":{}}}],["shrink",{"_index":1569,"title":{},"body":{"components/DocsComponent.html":{}}}],["si",{"_index":820,"title":{},"body":{"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputV2Component.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"injectables/ModalService.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"injectables/StorageService.html":{},"components/TabnavComponent.html":{},"injectables/TokenService.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{},"miscellaneous/functions.html":{}}}],["siano",{"_index":3510,"title":{},"body":{"components/TabnavComponent.html":{},"components/UnderbarComponent.html":{}}}],["side",{"_index":1417,"title":{},"body":{"components/DataItemComponent.html":{},"components/OffcanvasComponent.html":{}}}],["simple",{"_index":549,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["simpleareadto",{"_index":408,"title":{"classes/SimpleAreaDTO.html":{}},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"interfaces/CommonModule.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/FlavorApplication.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterApplication.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/TypesCatalogueDTO.html":{}}}],["simpleareadto:191",{"_index":482,"title":{},"body":{"classes/AreaColorDTO.html":{}}}],["simpleareadto:192",{"_index":483,"title":{},"body":{"classes/AreaColorDTO.html":{}}}],["simplemoduleapplication",{"_index":462,"title":{"classes/SimpleModuleApplication.html":{}},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"miscellaneous/functions.html":{}}}],["simplemoduledto",{"_index":404,"title":{"classes/SimpleModuleDTO.html":{}},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"interfaces/CommonModule.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/FlavorApplication.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"injectables/ModuleService.html":{},"classes/ModuleStatusDTO.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteConnection.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterApplication.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"injectables/TheaterService.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/TypesCatalogueDTO.html":{}}}],["simplemoduledto:102",{"_index":2557,"title":{},"body":{"classes/ModuleApplication.html":{},"classes/ModuleDTO.html":{},"classes/SimpleModuleApplication.html":{}}}],["simplemoduledto:103",{"_index":2558,"title":{},"body":{"classes/ModuleApplication.html":{},"classes/ModuleDTO.html":{},"classes/SimpleModuleApplication.html":{}}}],["simplemoduledto:104",{"_index":2559,"title":{},"body":{"classes/ModuleApplication.html":{},"classes/ModuleDTO.html":{},"classes/SimpleModuleApplication.html":{}}}],["simplemoduledto:105",{"_index":2560,"title":{},"body":{"classes/ModuleApplication.html":{},"classes/ModuleDTO.html":{},"classes/SimpleModuleApplication.html":{}}}],["simplemoduledto:106",{"_index":2561,"title":{},"body":{"classes/ModuleApplication.html":{},"classes/ModuleDTO.html":{},"classes/SimpleModuleApplication.html":{}}}],["simplemoduledto:107",{"_index":2562,"title":{},"body":{"classes/ModuleApplication.html":{},"classes/ModuleDTO.html":{},"classes/SimpleModuleApplication.html":{}}}],["simplemoduledto:108",{"_index":2563,"title":{},"body":{"classes/ModuleApplication.html":{},"classes/ModuleDTO.html":{},"classes/SimpleModuleApplication.html":{}}}],["simplemoduledto:109",{"_index":2564,"title":{},"body":{"classes/ModuleApplication.html":{},"classes/ModuleDTO.html":{},"classes/SimpleModuleApplication.html":{}}}],["simplemoduledto:110",{"_index":2565,"title":{},"body":{"classes/ModuleApplication.html":{},"classes/ModuleDTO.html":{},"classes/SimpleModuleApplication.html":{}}}],["simplemoduledto:111",{"_index":2566,"title":{},"body":{"classes/ModuleApplication.html":{},"classes/ModuleDTO.html":{},"classes/SimpleModuleApplication.html":{}}}],["simplemoduledto:112",{"_index":2567,"title":{},"body":{"classes/ModuleApplication.html":{},"classes/ModuleDTO.html":{},"classes/SimpleModuleApplication.html":{}}}],["simplemoduledto:113",{"_index":2568,"title":{},"body":{"classes/ModuleApplication.html":{},"classes/ModuleDTO.html":{},"classes/SimpleModuleApplication.html":{}}}],["simplemoduledto:114",{"_index":2569,"title":{},"body":{"classes/ModuleApplication.html":{},"classes/ModuleDTO.html":{},"classes/SimpleModuleApplication.html":{}}}],["simplemoduledto:115",{"_index":2570,"title":{},"body":{"classes/ModuleApplication.html":{},"classes/ModuleDTO.html":{},"classes/SimpleModuleApplication.html":{}}}],["simplemoduledto:116",{"_index":2571,"title":{},"body":{"classes/ModuleApplication.html":{},"classes/ModuleDTO.html":{},"classes/SimpleModuleApplication.html":{}}}],["simplemoduleroot",{"_index":3846,"title":{},"body":{"miscellaneous/functions.html":{}}}],["singledatainputreturned",{"_index":1117,"title":{"classes/SingleDataInputReturned.html":{}},"body":{"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{}}}],["singlenetwork",{"_index":1783,"title":{},"body":{"classes/ExportModule.html":{}}}],["singlenetwork[network.data.name",{"_index":1785,"title":{},"body":{"classes/ExportModule.html":{}}}],["singlenode",{"_index":1735,"title":{},"body":{"classes/ExportModule.html":{}}}],["singlenode[node.data.name",{"_index":1745,"title":{},"body":{"classes/ExportModule.html":{}}}],["singlesubnet",{"_index":1774,"title":{},"body":{"classes/ExportModule.html":{}}}],["singlesubnet[subnet.data.name",{"_index":1782,"title":{},"body":{"classes/ExportModule.html":{}}}],["singola",{"_index":3524,"title":{},"body":{"classes/TabnavElement.html":{},"classes/TabnavItem.html":{}}}],["singoli",{"_index":452,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"components/NavbarComponent.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["singolo",{"_index":46,"title":{},"body":{"classes/Aoption.html":{},"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NavbarElement.html":{},"classes/NavbarItem.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/SelectOption.html":{},"classes/SimpleModuleApplication.html":{},"classes/SingleDataInputReturned.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{}}}],["sinistra",{"_index":2783,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["sinonimi",{"_index":1460,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["sinonimo",{"_index":1603,"title":{},"body":{"classes/EmptyModuleInfo.html":{}}}],["sistma",{"_index":1434,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["situate",{"_index":2973,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["situato",{"_index":3421,"title":{},"body":{"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{}}}],["sixsteen",{"_index":1449,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["size",{"_index":509,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"components/ControlTemplate.html":{},"components/DataInputV2Component.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TypesCatalogueDTO.html":{}}}],["size/2",{"_index":2262,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["sizing",{"_index":1080,"title":{},"body":{"components/ControlTemplate.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["small",{"_index":1342,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["smr",{"_index":2997,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["smr.name",{"_index":3009,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["sn",{"_index":3025,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["snap",{"_index":3312,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["socket",{"_index":2257,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["sockets/socket",{"_index":2320,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["solamente",{"_index":1688,"title":{},"body":{"classes/ExportModule.html":{}}}],["solid",{"_index":1073,"title":{},"body":{"components/ControlTemplate.html":{},"components/DataItemComponent.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["solo",{"_index":1739,"title":{},"body":{"classes/ExportModule.html":{}}}],["sommario",{"_index":3921,"title":{},"body":{"overview.html":{}}}],["sono",{"_index":908,"title":{},"body":{"components/ComposerComponent.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"components/OffcanvasComponent.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["sopra",{"_index":2785,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["sort",{"_index":510,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/PageableDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/SortDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["sortdto",{"_index":497,"title":{"classes/SortDTO.html":{}},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/PageableDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/SortDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["sorted",{"_index":2852,"title":{},"body":{"classes/PageableDTO.html":{},"classes/SortDTO.html":{}}}],["sorting",{"_index":3405,"title":{},"body":{"classes/SortDTO.html":{}}}],["sotto",{"_index":2784,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["sottoforma",{"_index":1818,"title":{},"body":{"injectables/ExportService.html":{},"injectables/FileService.html":{},"classes/ParseDataForTheaterVisualizer.html":{}}}],["sottoposta",{"_index":3693,"title":{},"body":{"components/UnderbarComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/Aoption.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"injectables/AttachmentsService.html":{},"injectables/AuthGuard.html":{},"classes/BlueprintFileDTO.html":{},"classes/BorderNetworkDTO.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"components/ControlTemplate.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputReturnedV2.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/DeployInstanceDTO.html":{},"components/DocsComponent.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"classes/FlavorApplication.html":{},"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"injectables/FlavorService.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"classes/HostModuleDTO.html":{},"classes/HostNode.html":{},"classes/HostPortModuleDTO.html":{},"components/HowToUseComponent.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModalButton.html":{},"components/ModalComponent.html":{},"classes/ModalItem.html":{},"injectables/ModalService.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"injectables/ModuleService.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"interfaces/ModuleTopology.html":{},"classes/NameMappingDTO.html":{},"components/NavbarComponent.html":{},"classes/NavbarElement.html":{},"components/NavbarElementComponent.html":{},"classes/NavbarItem.html":{},"classes/NetOSRouterDTO.html":{},"components/NetworkComponent.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkDTO.html":{},"classes/NetworkNode.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/NodeTopologyElement.html":{},"components/OffcanvasComponent.html":{},"classes/PageableDTO.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SelectOption.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/SingleDataInputReturned.html":{},"classes/SortDTO.html":{},"classes/SourceExport.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"classes/StatisticItemDTO.html":{},"injectables/StorageService.html":{},"components/SubnetComponent.html":{},"classes/SubnetDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"components/TabnavComponent.html":{},"classes/TabnavElement.html":{},"classes/TabnavItem.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"injectables/TheaterService.html":{},"classes/TheaterSimpleData.html":{},"interfaces/TheaterTopology.html":{},"classes/TheatreStatusDTO.html":{},"injectables/TokenService.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/TypesCatalogueDTO.html":{},"components/UnderbarComponent.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{},"index.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["sourceexport",{"_index":637,"title":{"classes/SourceExport.html":{}},"body":{"classes/AreaExport.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesTSD.html":{},"classes/SourceExport.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{}}}],["sources",{"_index":636,"title":{},"body":{"classes/AreaExport.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/ExportTheater.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesTSD.html":{},"classes/SourceExport.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{}}}],["space",{"_index":1413,"title":{},"body":{"components/DataItemComponent.html":{}}}],["specifiche",{"_index":1321,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["spinner",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ComposerComponent.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"components/VisualizerComponent.html":{},"dependencies.html":{}}}],["spinnerdata",{"_index":3412,"title":{"classes/SpinnerData.html":{}},"body":{"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{}}}],["spinnerservice",{"_index":81,"title":{"injectables/SpinnerService.html":{}},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"components/VisualizerComponent.html":{}}}],["spinnerservice.getspinner",{"_index":147,"title":{},"body":{"components/AppComponent.html":{}}}],["square",{"_index":1394,"title":{},"body":{"components/DataItemComponent.html":{},"components/OffcanvasComponent.html":{}}}],["src/.../app.init.ts",{"_index":3832,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../displaydata.ts",{"_index":3834,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../exportto.ts",{"_index":3825,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../hostnode.ts",{"_index":3826,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../mirroringmoduleinstancenode.ts",{"_index":3828,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../networknode.ts",{"_index":3827,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../parsecommonelement.ts",{"_index":3824,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../subnetnode.ts",{"_index":3831,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../theaterinternalservicemoduleinstancenode.ts",{"_index":3829,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../theatermoduleinstancenode.ts",{"_index":3830,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/app",{"_index":353,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":63,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:22",{"_index":125,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:29",{"_index":112,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:30",{"_index":110,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:31",{"_index":123,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:36",{"_index":101,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:37",{"_index":90,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:48",{"_index":105,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:49",{"_index":122,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":236,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/app.module.ts:160",{"_index":249,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/components/data",{"_index":1082,"title":{},"body":{"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputReturnedV2.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{}}}],["src/app/components/modal/modal.component.ts",{"_index":2420,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/components/modal/modal.component.ts:20",{"_index":2432,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/components/modal/modal.component.ts:26",{"_index":2445,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/components/modal/modal.component.ts:33",{"_index":2433,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/components/modal/modal.component.ts:37",{"_index":2448,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/components/modal/modal.component.ts:40",{"_index":2437,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/components/modal/modal.component.ts:46",{"_index":2430,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/components/modal/modal.component.ts:58",{"_index":2442,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/components/modal/modal.component.ts:66",{"_index":2444,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/components/modal/modal.component.ts:75",{"_index":2439,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/components/modal/modaltype",{"_index":2098,"title":{},"body":{"components/HomeComponent.html":{},"injectables/ModalService.html":{}}}],["src/app/components/modal/modaltype.ts",{"_index":2407,"title":{},"body":{"classes/ModalButton.html":{},"classes/ModalItem.html":{}}}],["src/app/components/modal/modaltype.ts:10",{"_index":2464,"title":{},"body":{"classes/ModalItem.html":{}}}],["src/app/components/modal/modaltype.ts:11",{"_index":2463,"title":{},"body":{"classes/ModalItem.html":{}}}],["src/app/components/modal/modaltype.ts:12",{"_index":2462,"title":{},"body":{"classes/ModalItem.html":{}}}],["src/app/components/modal/modaltype.ts:20",{"_index":2410,"title":{},"body":{"classes/ModalButton.html":{}}}],["src/app/components/modal/modaltype.ts:21",{"_index":2411,"title":{},"body":{"classes/ModalButton.html":{}}}],["src/app/components/modal/modaltype.ts:22",{"_index":2416,"title":{},"body":{"classes/ModalButton.html":{}}}],["src/app/components/modal/modaltype.ts:8",{"_index":2466,"title":{},"body":{"classes/ModalItem.html":{}}}],["src/app/components/modal/modaltype.ts:9",{"_index":2465,"title":{},"body":{"classes/ModalItem.html":{}}}],["src/app/components/navbar/navbar.component.ts",{"_index":2670,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:19",{"_index":2680,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:23",{"_index":2684,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:27",{"_index":2678,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:39",{"_index":2687,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:57",{"_index":2691,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbartype.ts",{"_index":6,"title":{},"body":{"classes/Aoption.html":{},"classes/NavbarElement.html":{},"classes/NavbarItem.html":{}}}],["src/app/components/navbar/navbartype.ts:10",{"_index":2702,"title":{},"body":{"classes/NavbarElement.html":{}}}],["src/app/components/navbar/navbartype.ts:17",{"_index":2730,"title":{},"body":{"classes/NavbarItem.html":{}}}],["src/app/components/navbar/navbartype.ts:18",{"_index":2732,"title":{},"body":{"classes/NavbarItem.html":{}}}],["src/app/components/navbar/navbartype.ts:19",{"_index":2729,"title":{},"body":{"classes/NavbarItem.html":{}}}],["src/app/components/navbar/navbartype.ts:20",{"_index":2731,"title":{},"body":{"classes/NavbarItem.html":{}}}],["src/app/components/navbar/navbartype.ts:27",{"_index":22,"title":{},"body":{"classes/Aoption.html":{}}}],["src/app/components/navbar/navbartype.ts:28",{"_index":23,"title":{},"body":{"classes/Aoption.html":{}}}],["src/app/components/navbar/navbartype.ts:7",{"_index":2704,"title":{},"body":{"classes/NavbarElement.html":{}}}],["src/app/components/navbar/navbartype.ts:8",{"_index":2705,"title":{},"body":{"classes/NavbarElement.html":{}}}],["src/app/components/navbar/navbartype.ts:9",{"_index":2703,"title":{},"body":{"classes/NavbarElement.html":{}}}],["src/app/components/offcanvas/offcanvas.component.ts",{"_index":2774,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["src/app/components/offcanvas/offcanvas.component.ts:100",{"_index":2812,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["src/app/components/offcanvas/offcanvas.component.ts:19",{"_index":2814,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["src/app/components/offcanvas/offcanvas.component.ts:25",{"_index":2805,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["src/app/components/offcanvas/offcanvas.component.ts:29",{"_index":2818,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["src/app/components/offcanvas/offcanvas.component.ts:32",{"_index":2810,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["src/app/components/offcanvas/offcanvas.component.ts:38",{"_index":2806,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["src/app/components/offcanvas/offcanvas.component.ts:43",{"_index":2793,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["src/app/components/offcanvas/offcanvas.component.ts:48",{"_index":2807,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["src/app/components/offcanvas/offcanvas.component.ts:54",{"_index":2796,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["src/app/components/offcanvas/offcanvas.component.ts:64",{"_index":2799,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["src/app/components/offcanvas/offcanvas.component.ts:71",{"_index":2798,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["src/app/components/offcanvas/offcanvas.component.ts:74",{"_index":2817,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["src/app/components/offcanvas/offcanvas.component.ts:75",{"_index":2816,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["src/app/components/offcanvas/offcanvas.component.ts:76",{"_index":2791,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["src/app/components/offcanvas/offcanvas.component.ts:91",{"_index":2811,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["src/app/components/tabnav/tabnav.component.ts",{"_index":3494,"title":{},"body":{"components/TabnavComponent.html":{}}}],["src/app/components/tabnav/tabnav.component.ts:18",{"_index":3506,"title":{},"body":{"components/TabnavComponent.html":{}}}],["src/app/components/tabnav/tabnav.component.ts:23",{"_index":3502,"title":{},"body":{"components/TabnavComponent.html":{}}}],["src/app/components/tabnav/tabnav.component.ts:28",{"_index":3504,"title":{},"body":{"components/TabnavComponent.html":{}}}],["src/app/components/tabnav/tabnav.component.ts:34",{"_index":3513,"title":{},"body":{"components/TabnavComponent.html":{}}}],["src/app/components/tabnav/tabnav.component.ts:40",{"_index":3501,"title":{},"body":{"components/TabnavComponent.html":{}}}],["src/app/components/tabnav/tabnav.component.ts:53",{"_index":3509,"title":{},"body":{"components/TabnavComponent.html":{}}}],["src/app/components/tabnav/tabnav.component.ts:63",{"_index":3508,"title":{},"body":{"components/TabnavComponent.html":{}}}],["src/app/components/tabnav/tabnavtype.ts",{"_index":3521,"title":{},"body":{"classes/TabnavElement.html":{},"classes/TabnavItem.html":{}}}],["src/app/components/tabnav/tabnavtype.ts:16",{"_index":3525,"title":{},"body":{"classes/TabnavItem.html":{}}}],["src/app/components/tabnav/tabnavtype.ts:17",{"_index":3527,"title":{},"body":{"classes/TabnavItem.html":{}}}],["src/app/components/tabnav/tabnavtype.ts:18",{"_index":3526,"title":{},"body":{"classes/TabnavItem.html":{}}}],["src/app/components/tabnav/tabnavtype.ts:8",{"_index":3523,"title":{},"body":{"classes/TabnavElement.html":{}}}],["src/app/components/underbar/underbar.component.ts",{"_index":3691,"title":{},"body":{"components/UnderbarComponent.html":{}}}],["src/app/components/underbar/underbar.component.ts:19",{"_index":3702,"title":{},"body":{"components/UnderbarComponent.html":{}}}],["src/app/components/underbar/underbar.component.ts:23",{"_index":3698,"title":{},"body":{"components/UnderbarComponent.html":{}}}],["src/app/components/underbar/underbar.component.ts:54",{"_index":3707,"title":{},"body":{"components/UnderbarComponent.html":{}}}],["src/app/components/underbar/underbartype.ts",{"_index":3718,"title":{},"body":{"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{}}}],["src/app/components/underbar/underbartype.ts:16",{"_index":3725,"title":{},"body":{"classes/UnderbarItem.html":{}}}],["src/app/components/underbar/underbartype.ts:17",{"_index":3727,"title":{},"body":{"classes/UnderbarItem.html":{}}}],["src/app/components/underbar/underbartype.ts:18",{"_index":3724,"title":{},"body":{"classes/UnderbarItem.html":{}}}],["src/app/components/underbar/underbartype.ts:22",{"_index":3726,"title":{},"body":{"classes/UnderbarItem.html":{}}}],["src/app/components/underbar/underbartype.ts:7",{"_index":3719,"title":{},"body":{"classes/UnderbarElement.html":{}}}],["src/app/composer",{"_index":793,"title":{},"body":{"components/ComposerComponent.html":{}}}],["src/app/models/apptype",{"_index":886,"title":{},"body":{"components/ComposerComponent.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"classes/HostNode.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"components/NetworkComponent.html":{},"classes/NetworkNode.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"components/SubnetComponent.html":{},"classes/SubnetNode.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"components/VisualizerComponent.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["src/app/models/apptype.ts",{"_index":1421,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["src/app/models/apptype.ts:58",{"_index":1513,"title":{},"body":{"classes/DataRouteVisualizer.html":{}}}],["src/app/models/apptype.ts:59",{"_index":1514,"title":{},"body":{"classes/DataRouteVisualizer.html":{}}}],["src/app/models/apptype.ts:65",{"_index":1426,"title":{},"body":{"classes/DataRouteComposer.html":{}}}],["src/app/models/apptype.ts:66",{"_index":1425,"title":{},"body":{"classes/DataRouteComposer.html":{}}}],["src/app/models/apptype.ts:67",{"_index":1424,"title":{},"body":{"classes/DataRouteComposer.html":{}}}],["src/app/models/apptype.ts:68",{"_index":1427,"title":{},"body":{"classes/DataRouteComposer.html":{}}}],["src/app/pages/docs/docs.component.ts",{"_index":1519,"title":{},"body":{"components/DocsComponent.html":{}}}],["src/app/pages/docs/docs.component.ts:20",{"_index":1539,"title":{},"body":{"components/DocsComponent.html":{}}}],["src/app/pages/docs/docs.component.ts:25",{"_index":1532,"title":{},"body":{"components/DocsComponent.html":{}}}],["src/app/pages/docs/docs.component.ts:42",{"_index":1535,"title":{},"body":{"components/DocsComponent.html":{}}}],["src/app/pages/elements/navbar",{"_index":2706,"title":{},"body":{"components/NavbarElementComponent.html":{}}}],["src/app/pages/home/home.component.ts",{"_index":2019,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:108",{"_index":2083,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:134",{"_index":2086,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:154",{"_index":2089,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:158",{"_index":2078,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:167",{"_index":2081,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:173",{"_index":2040,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:197",{"_index":2042,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:225",{"_index":2045,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:246",{"_index":2060,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:289",{"_index":2051,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:30",{"_index":2087,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:306",{"_index":2056,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:315",{"_index":2055,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:35",{"_index":2092,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:40",{"_index":2080,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:45",{"_index":2065,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:53",{"_index":2076,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:63",{"_index":2073,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:68",{"_index":2096,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:73",{"_index":2091,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:78",{"_index":2093,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:88",{"_index":2070,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:93",{"_index":2094,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:98",{"_index":2085,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/how",{"_index":2347,"title":{},"body":{"components/HowToUseComponent.html":{}}}],["src/app/rete",{"_index":386,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"components/ControlTemplate.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/FlavorApplication.html":{},"components/HostComponent.html":{},"classes/HostNode.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"components/NetworkComponent.html":{},"classes/NetworkNode.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SimpleModuleApplication.html":{},"components/SubnetComponent.html":{},"classes/SubnetNode.html":{},"classes/TheaterApplication.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/_Control.html":{},"miscellaneous/functions.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["src/app/services/api/attachments.service.ts",{"_index":652,"title":{},"body":{"injectables/AttachmentsService.html":{}}}],["src/app/services/api/attachments.service.ts:11",{"_index":658,"title":{},"body":{"injectables/AttachmentsService.html":{}}}],["src/app/services/api/attachments.service.ts:15",{"_index":662,"title":{},"body":{"injectables/AttachmentsService.html":{}}}],["src/app/services/api/attachments.service.ts:37",{"_index":666,"title":{},"body":{"injectables/AttachmentsService.html":{}}}],["src/app/services/api/flavor.service.ts",{"_index":2000,"title":{},"body":{"injectables/FlavorService.html":{}}}],["src/app/services/api/flavor.service.ts:10",{"_index":2003,"title":{},"body":{"injectables/FlavorService.html":{}}}],["src/app/services/api/flavor.service.ts:14",{"_index":2004,"title":{},"body":{"injectables/FlavorService.html":{}}}],["src/app/services/api/flavor.service.ts:40",{"_index":2006,"title":{},"body":{"injectables/FlavorService.html":{}}}],["src/app/services/api/module.service.ts",{"_index":2636,"title":{},"body":{"injectables/ModuleService.html":{}}}],["src/app/services/api/module.service.ts:108",{"_index":2645,"title":{},"body":{"injectables/ModuleService.html":{}}}],["src/app/services/api/module.service.ts:11",{"_index":2642,"title":{},"body":{"injectables/ModuleService.html":{}}}],["src/app/services/api/module.service.ts:15",{"_index":2648,"title":{},"body":{"injectables/ModuleService.html":{}}}],["src/app/services/api/module.service.ts:41",{"_index":2643,"title":{},"body":{"injectables/ModuleService.html":{}}}],["src/app/services/api/module.service.ts:56",{"_index":2650,"title":{},"body":{"injectables/ModuleService.html":{}}}],["src/app/services/api/module.service.ts:82",{"_index":2653,"title":{},"body":{"injectables/ModuleService.html":{}}}],["src/app/services/api/theater.service.ts",{"_index":3636,"title":{},"body":{"injectables/TheaterService.html":{}}}],["src/app/services/api/theater.service.ts:11",{"_index":3639,"title":{},"body":{"injectables/TheaterService.html":{}}}],["src/app/services/api/theater.service.ts:15",{"_index":3641,"title":{},"body":{"injectables/TheaterService.html":{}}}],["src/app/services/api/theater.service.ts:43",{"_index":3643,"title":{},"body":{"injectables/TheaterService.html":{}}}],["src/app/services/application/export/export.service.ts",{"_index":1814,"title":{},"body":{"injectables/ExportService.html":{}}}],["src/app/services/application/export/export.service.ts:26",{"_index":1849,"title":{},"body":{"injectables/ExportService.html":{}}}],["src/app/services/application/export/export.service.ts:32",{"_index":1826,"title":{},"body":{"injectables/ExportService.html":{}}}],["src/app/services/application/export/export.service.ts:43",{"_index":1832,"title":{},"body":{"injectables/ExportService.html":{}}}],["src/app/services/application/export/export.service.ts:54",{"_index":1828,"title":{},"body":{"injectables/ExportService.html":{}}}],["src/app/services/application/export/export.service.ts:66",{"_index":1838,"title":{},"body":{"injectables/ExportService.html":{}}}],["src/app/services/application/export/export.service.ts:77",{"_index":1836,"title":{},"body":{"injectables/ExportService.html":{}}}],["src/app/services/application/export/exportmodule.ts",{"_index":1630,"title":{},"body":{"classes/ExportModule.html":{}}}],["src/app/services/application/export/exportmodule.ts:17",{"_index":1647,"title":{},"body":{"classes/ExportModule.html":{}}}],["src/app/services/application/export/exportmodule.ts:180",{"_index":1690,"title":{},"body":{"classes/ExportModule.html":{}}}],["src/app/services/application/export/exportmodule.ts:217",{"_index":1687,"title":{},"body":{"classes/ExportModule.html":{}}}],["src/app/services/application/export/exportmodule.ts:22",{"_index":1643,"title":{},"body":{"classes/ExportModule.html":{}}}],["src/app/services/application/export/exportmodule.ts:241",{"_index":1678,"title":{},"body":{"classes/ExportModule.html":{}}}],["src/app/services/application/export/exportmodule.ts:28",{"_index":1642,"title":{},"body":{"classes/ExportModule.html":{}}}],["src/app/services/application/export/exportmodule.ts:316",{"_index":1666,"title":{},"body":{"classes/ExportModule.html":{}}}],["src/app/services/application/export/exportmodule.ts:50",{"_index":1652,"title":{},"body":{"classes/ExportModule.html":{}}}],["src/app/services/application/export/exportmodule.ts:92",{"_index":1672,"title":{},"body":{"classes/ExportModule.html":{}}}],["src/app/services/application/export/exporttheater.ts",{"_index":1864,"title":{},"body":{"classes/ExportTheater.html":{}}}],["src/app/services/application/export/exporttheater.ts:101",{"_index":1880,"title":{},"body":{"classes/ExportTheater.html":{}}}],["src/app/services/application/export/exporttheater.ts:14",{"_index":1870,"title":{},"body":{"classes/ExportTheater.html":{}}}],["src/app/services/application/export/exporttheater.ts:19",{"_index":1869,"title":{},"body":{"classes/ExportTheater.html":{}}}],["src/app/services/application/export/exporttheater.ts:37",{"_index":1871,"title":{},"body":{"classes/ExportTheater.html":{}}}],["src/app/services/application/export/exporttheater.ts:62",{"_index":1873,"title":{},"body":{"classes/ExportTheater.html":{}}}],["src/app/services/application/export/exportto.ts",{"_index":3852,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/services/application/file/file.service",{"_index":2099,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/services/application/file/file.service.ts",{"_index":1919,"title":{},"body":{"injectables/FileService.html":{}}}],["src/app/services/application/file/file.service.ts:18",{"_index":1945,"title":{},"body":{"injectables/FileService.html":{}}}],["src/app/services/application/file/file.service.ts:24",{"_index":1944,"title":{},"body":{"injectables/FileService.html":{}}}],["src/app/services/application/file/file.service.ts:31",{"_index":1928,"title":{},"body":{"injectables/FileService.html":{}}}],["src/app/services/application/file/file.service.ts:41",{"_index":1940,"title":{},"body":{"injectables/FileService.html":{}}}],["src/app/services/application/file/file.service.ts:69",{"_index":1929,"title":{},"body":{"injectables/FileService.html":{}}}],["src/app/services/application/file/file.service.ts:79",{"_index":1936,"title":{},"body":{"injectables/FileService.html":{}}}],["src/app/services/application/modal/modal.service.ts",{"_index":2467,"title":{},"body":{"injectables/ModalService.html":{}}}],["src/app/services/application/modal/modal.service.ts:106",{"_index":2505,"title":{},"body":{"injectables/ModalService.html":{}}}],["src/app/services/application/modal/modal.service.ts:44",{"_index":2509,"title":{},"body":{"injectables/ModalService.html":{}}}],["src/app/services/application/modal/modal.service.ts:50",{"_index":2511,"title":{},"body":{"injectables/ModalService.html":{}}}],["src/app/services/application/modal/modal.service.ts:56",{"_index":2491,"title":{},"body":{"injectables/ModalService.html":{}}}],["src/app/services/application/modal/modal.service.ts:66",{"_index":2492,"title":{},"body":{"injectables/ModalService.html":{}}}],["src/app/services/application/modal/modal.service.ts:74",{"_index":2494,"title":{},"body":{"injectables/ModalService.html":{}}}],["src/app/services/application/modal/modal.service.ts:86",{"_index":2497,"title":{},"body":{"injectables/ModalService.html":{}}}],["src/app/services/application/parse/parse.service",{"_index":887,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["src/app/services/application/parse/parse.service.ts",{"_index":3062,"title":{},"body":{"injectables/ParseService.html":{}}}],["src/app/services/application/parse/parse.service.ts:113",{"_index":3072,"title":{},"body":{"injectables/ParseService.html":{}}}],["src/app/services/application/parse/parse.service.ts:27",{"_index":3071,"title":{},"body":{"injectables/ParseService.html":{}}}],["src/app/services/application/parse/parse.service.ts:63",{"_index":3083,"title":{},"body":{"injectables/ParseService.html":{}}}],["src/app/services/application/parse/parse.service.ts:79",{"_index":3079,"title":{},"body":{"injectables/ParseService.html":{}}}],["src/app/services/application/parse/parse.service.ts:96",{"_index":3076,"title":{},"body":{"injectables/ParseService.html":{}}}],["src/app/services/application/parse/parsecommonelement.ts",{"_index":3842,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/services/application/parse/parsedatafortheatervisualizer.ts",{"_index":2855,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["src/app/services/application/parse/parsedatafortheatervisualizer.ts:112",{"_index":2874,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["src/app/services/application/parse/parsedatafortheatervisualizer.ts:135",{"_index":2879,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["src/app/services/application/parse/parsedatafortheatervisualizer.ts:156",{"_index":2922,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["src/app/services/application/parse/parsedatafortheatervisualizer.ts:174",{"_index":2885,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["src/app/services/application/parse/parsedatafortheatervisualizer.ts:18",{"_index":2872,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["src/app/services/application/parse/parsedatafortheatervisualizer.ts:193",{"_index":2889,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["src/app/services/application/parse/parsedatafortheatervisualizer.ts:219",{"_index":2898,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["src/app/services/application/parse/parsedatafortheatervisualizer.ts:244",{"_index":2895,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["src/app/services/application/parse/parsedatafortheatervisualizer.ts:269",{"_index":2915,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["src/app/services/application/parse/parsedatafortheatervisualizer.ts:299",{"_index":2883,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["src/app/services/application/parse/parsedatafortheatervisualizer.ts:331",{"_index":2900,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["src/app/services/application/parse/parsedatafortheatervisualizer.ts:44",{"_index":2930,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["src/app/services/application/parse/parsedatafortheatervisualizer.ts:75",{"_index":2927,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["src/app/services/application/parse/parsedatafortheatervisualizer.ts:91",{"_index":2912,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["src/app/services/application/parse/persedataformodulecomposer.ts",{"_index":3102,"title":{},"body":{"classes/PerseDataForModuleComposer.html":{}}}],["src/app/services/application/parse/persedataformodulecomposer.ts:27",{"_index":3108,"title":{},"body":{"classes/PerseDataForModuleComposer.html":{}}}],["src/app/services/application/parse/persedataformodulecomposer.ts:41",{"_index":3107,"title":{},"body":{"classes/PerseDataForModuleComposer.html":{}}}],["src/app/services/application/parse/persedataformodulecomposer.ts:9",{"_index":3105,"title":{},"body":{"classes/PerseDataForModuleComposer.html":{}}}],["src/app/services/application/parse/persedataformodulevisualizer.ts",{"_index":3118,"title":{},"body":{"classes/PerseDataForModuleVisualizer.html":{}}}],["src/app/services/application/parse/persedataformodulevisualizer.ts:115",{"_index":3130,"title":{},"body":{"classes/PerseDataForModuleVisualizer.html":{}}}],["src/app/services/application/parse/persedataformodulevisualizer.ts:136",{"_index":3136,"title":{},"body":{"classes/PerseDataForModuleVisualizer.html":{}}}],["src/app/services/application/parse/persedataformodulevisualizer.ts:16",{"_index":3125,"title":{},"body":{"classes/PerseDataForModuleVisualizer.html":{}}}],["src/app/services/application/parse/persedataformodulevisualizer.ts:35",{"_index":3146,"title":{},"body":{"classes/PerseDataForModuleVisualizer.html":{}}}],["src/app/services/application/parse/persedataformodulevisualizer.ts:54",{"_index":3141,"title":{},"body":{"classes/PerseDataForModuleVisualizer.html":{}}}],["src/app/services/application/parse/persedataformodulevisualizer.ts:71",{"_index":3127,"title":{},"body":{"classes/PerseDataForModuleVisualizer.html":{}}}],["src/app/services/application/parse/persedataformodulevisualizer.ts:96",{"_index":3134,"title":{},"body":{"classes/PerseDataForModuleVisualizer.html":{}}}],["src/app/services/application/parse/persedatafortheatercomposer.ts",{"_index":3157,"title":{},"body":{"classes/PerseDataForTheaterComposer.html":{}}}],["src/app/services/application/parse/persedatafortheatercomposer.ts:114",{"_index":3165,"title":{},"body":{"classes/PerseDataForTheaterComposer.html":{}}}],["src/app/services/application/parse/persedatafortheatercomposer.ts:138",{"_index":3164,"title":{},"body":{"classes/PerseDataForTheaterComposer.html":{}}}],["src/app/services/application/parse/persedatafortheatercomposer.ts:164",{"_index":3167,"title":{},"body":{"classes/PerseDataForTheaterComposer.html":{}}}],["src/app/services/application/parse/persedatafortheatercomposer.ts:18",{"_index":3160,"title":{},"body":{"classes/PerseDataForTheaterComposer.html":{}}}],["src/app/services/application/parse/persedatafortheatercomposer.ts:240",{"_index":3171,"title":{},"body":{"classes/PerseDataForTheaterComposer.html":{}}}],["src/app/services/application/parse/persedatafortheatercomposer.ts:36",{"_index":3173,"title":{},"body":{"classes/PerseDataForTheaterComposer.html":{}}}],["src/app/services/application/parse/persedatafortheatercomposer.ts:53",{"_index":3176,"title":{},"body":{"classes/PerseDataForTheaterComposer.html":{}}}],["src/app/services/application/parse/persedatafortheatercomposer.ts:70",{"_index":3161,"title":{},"body":{"classes/PerseDataForTheaterComposer.html":{}}}],["src/app/services/application/parse/persedatafortheatercomposer.ts:89",{"_index":3163,"title":{},"body":{"classes/PerseDataForTheaterComposer.html":{}}}],["src/app/services/application/spinner/spinner.service",{"_index":888,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["src/app/services/application/spinner/spinner.service.ts",{"_index":3413,"title":{},"body":{"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{}}}],["src/app/services/application/spinner/spinner.service.ts:10",{"_index":3414,"title":{},"body":{"classes/SpinnerData.html":{}}}],["src/app/services/application/spinner/spinner.service.ts:11",{"_index":3415,"title":{},"body":{"classes/SpinnerData.html":{}}}],["src/app/services/application/spinner/spinner.service.ts:28",{"_index":3437,"title":{},"body":{"injectables/SpinnerService.html":{}}}],["src/app/services/application/spinner/spinner.service.ts:43",{"_index":3438,"title":{},"body":{"injectables/SpinnerService.html":{}}}],["src/app/services/application/spinner/spinner.service.ts:52",{"_index":3439,"title":{},"body":{"injectables/SpinnerService.html":{}}}],["src/app/services/application/storage/storage.service",{"_index":889,"title":{},"body":{"components/ComposerComponent.html":{},"components/HomeComponent.html":{}}}],["src/app/services/application/storage/storage.service.ts",{"_index":3443,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/services/application/storage/storage.service.ts:14",{"_index":3448,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/services/application/storage/storage.service.ts:19",{"_index":3454,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/services/application/storage/storage.service.ts:25",{"_index":3451,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/services/application/storage/storage.service.ts:27",{"_index":3447,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/services/modelsapplication/applicationmodels",{"_index":890,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["src/app/services/modelsapplication/applicationmodels.ts",{"_index":368,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["src/app/services/modelsapplication/applicationmodels.ts:101",{"_index":3535,"title":{},"body":{"classes/TheaterApplication.html":{}}}],["src/app/services/modelsapplication/applicationmodels.ts:102",{"_index":3536,"title":{},"body":{"classes/TheaterApplication.html":{}}}],["src/app/services/modelsapplication/applicationmodels.ts:104",{"_index":3537,"title":{},"body":{"classes/TheaterApplication.html":{}}}],["src/app/services/modelsapplication/applicationmodels.ts:108",{"_index":374,"title":{},"body":{"classes/AreaApplication.html":{}}}],["src/app/services/modelsapplication/applicationmodels.ts:111",{"_index":481,"title":{},"body":{"classes/AreaColorDTO.html":{}}}],["src/app/services/modelsapplication/applicationmodels.ts:116",{"_index":1976,"title":{},"body":{"classes/FlavorApplication.html":{}}}],["src/app/services/modelsapplication/applicationmodels.ts:28",{"_index":2537,"title":{},"body":{"classes/ModuleApplication.html":{}}}],["src/app/services/modelsapplication/applicationmodels.ts:29",{"_index":2538,"title":{},"body":{"classes/ModuleApplication.html":{}}}],["src/app/services/modelsapplication/applicationmodels.ts:30",{"_index":2536,"title":{},"body":{"classes/ModuleApplication.html":{}}}],["src/app/services/modelsapplication/applicationmodels.ts:31",{"_index":2535,"title":{},"body":{"classes/ModuleApplication.html":{}}}],["src/app/services/modelsapplication/applicationmodels.ts:32",{"_index":2540,"title":{},"body":{"classes/ModuleApplication.html":{}}}],["src/app/services/modelsapplication/applicationmodels.ts:33",{"_index":2539,"title":{},"body":{"classes/ModuleApplication.html":{}}}],["src/app/services/modelsapplication/applicationmodels.ts:34",{"_index":2541,"title":{},"body":{"classes/ModuleApplication.html":{}}}],["src/app/services/modelsapplication/applicationmodels.ts:36",{"_index":2542,"title":{},"body":{"classes/ModuleApplication.html":{}}}],["src/app/services/modelsapplication/applicationmodels.ts:44",{"_index":3382,"title":{},"body":{"classes/SimpleModuleApplication.html":{}}}],["src/app/services/modelsapplication/applicationmodels.ts:45",{"_index":3381,"title":{},"body":{"classes/SimpleModuleApplication.html":{}}}],["src/app/services/modelsapplication/applicationmodels.ts:46",{"_index":3380,"title":{},"body":{"classes/SimpleModuleApplication.html":{}}}],["src/app/services/modelsapplication/applicationmodels.ts:47",{"_index":3384,"title":{},"body":{"classes/SimpleModuleApplication.html":{}}}],["src/app/services/modelsapplication/applicationmodels.ts:48",{"_index":3383,"title":{},"body":{"classes/SimpleModuleApplication.html":{}}}],["src/app/services/modelsapplication/applicationmodels.ts:49",{"_index":3385,"title":{},"body":{"classes/SimpleModuleApplication.html":{}}}],["src/app/services/modelsapplication/applicationmodels.ts:54",{"_index":3220,"title":{},"body":{"classes/ReteConnection.html":{}}}],["src/app/services/modelsapplication/applicationmodels.ts:55",{"_index":3222,"title":{},"body":{"classes/ReteConnection.html":{}}}],["src/app/services/modelsapplication/applicationmodels.ts:56",{"_index":3223,"title":{},"body":{"classes/ReteConnection.html":{}}}],["src/app/services/modelsapplication/applicationmodels.ts:57",{"_index":3221,"title":{},"body":{"classes/ReteConnection.html":{}}}],["src/app/services/modelsapplication/applicationmodels.ts:65",{"_index":3686,"title":{},"body":{"classes/TopologyElement.html":{}}}],["src/app/services/modelsapplication/applicationmodels.ts:66",{"_index":3685,"title":{},"body":{"classes/TopologyElement.html":{}}}],["src/app/services/modelsapplication/applicationmodels.ts:72",{"_index":2773,"title":{},"body":{"classes/NodeTopologyElement.html":{}}}],["src/app/services/modelsapplication/applicationmodels.ts:73",{"_index":2772,"title":{},"body":{"classes/NodeTopologyElement.html":{}}}],["src/app/services/modelsapplication/applicationmodels.ts:83",{"_index":2601,"title":{},"body":{"classes/ModuleInstance.html":{}}}],["src/app/services/modelsapplication/applicationmodels.ts:84",{"_index":2602,"title":{},"body":{"classes/ModuleInstance.html":{}}}],["src/app/services/modelsapplication/applicationmodels.ts:86",{"_index":2600,"title":{},"body":{"classes/ModuleInstance.html":{}}}],["src/app/services/modelsapplication/applicationmodels.ts:98",{"_index":3534,"title":{},"body":{"classes/TheaterApplication.html":{}}}],["src/app/services/modelsapplication/applicationmodels.ts:99",{"_index":3533,"title":{},"body":{"classes/TheaterApplication.html":{}}}],["src/app/services/modelsdto/elementdto.ts",{"_index":2839,"title":{},"body":{"classes/PageableDTO.html":{},"classes/SortDTO.html":{}}}],["src/app/services/modelsdto/elementdto.ts:13",{"_index":2846,"title":{},"body":{"classes/PageableDTO.html":{}}}],["src/app/services/modelsdto/elementdto.ts:14",{"_index":2848,"title":{},"body":{"classes/PageableDTO.html":{}}}],["src/app/services/modelsdto/elementdto.ts:15",{"_index":2849,"title":{},"body":{"classes/PageableDTO.html":{}}}],["src/app/services/modelsdto/elementdto.ts:16",{"_index":2847,"title":{},"body":{"classes/PageableDTO.html":{}}}],["src/app/services/modelsdto/elementdto.ts:17",{"_index":2850,"title":{},"body":{"classes/PageableDTO.html":{}}}],["src/app/services/modelsdto/elementdto.ts:18",{"_index":2851,"title":{},"body":{"classes/PageableDTO.html":{}}}],["src/app/services/modelsdto/elementdto.ts:5",{"_index":3406,"title":{},"body":{"classes/SortDTO.html":{}}}],["src/app/services/modelsdto/elementdto.ts:6",{"_index":3407,"title":{},"body":{"classes/SortDTO.html":{}}}],["src/app/services/modelsdto/elementdto.ts:7",{"_index":3408,"title":{},"body":{"classes/SortDTO.html":{}}}],["src/app/services/modelsdto/falvordto.ts",{"_index":1980,"title":{},"body":{"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{}}}],["src/app/services/modelsdto/falvordto.ts:14",{"_index":3733,"title":{},"body":{"classes/VirtualizationEnvironmentTypeDTO.html":{}}}],["src/app/services/modelsdto/falvordto.ts:15",{"_index":3734,"title":{},"body":{"classes/VirtualizationEnvironmentTypeDTO.html":{}}}],["src/app/services/modelsdto/falvordto.ts:16",{"_index":3735,"title":{},"body":{"classes/VirtualizationEnvironmentTypeDTO.html":{}}}],["src/app/services/modelsdto/falvordto.ts:17",{"_index":3736,"title":{},"body":{"classes/VirtualizationEnvironmentTypeDTO.html":{}}}],["src/app/services/modelsdto/falvordto.ts:18",{"_index":3737,"title":{},"body":{"classes/VirtualizationEnvironmentTypeDTO.html":{}}}],["src/app/services/modelsdto/falvordto.ts:19",{"_index":3738,"title":{},"body":{"classes/VirtualizationEnvironmentTypeDTO.html":{}}}],["src/app/services/modelsdto/falvordto.ts:20",{"_index":3739,"title":{},"body":{"classes/VirtualizationEnvironmentTypeDTO.html":{}}}],["src/app/services/modelsdto/falvordto.ts:29",{"_index":1996,"title":{},"body":{"classes/FlavorDTO.html":{}}}],["src/app/services/modelsdto/falvordto.ts:30",{"_index":1994,"title":{},"body":{"classes/FlavorDTO.html":{}}}],["src/app/services/modelsdto/falvordto.ts:31",{"_index":1995,"title":{},"body":{"classes/FlavorDTO.html":{}}}],["src/app/services/modelsdto/falvordto.ts:32",{"_index":1997,"title":{},"body":{"classes/FlavorDTO.html":{}}}],["src/app/services/modelsdto/falvordto.ts:33",{"_index":1998,"title":{},"body":{"classes/FlavorDTO.html":{}}}],["src/app/services/modelsdto/falvordto.ts:5",{"_index":1981,"title":{},"body":{"classes/FlavorBasicInfo.html":{}}}],["src/app/services/modelsdto/falvordto.ts:6",{"_index":1982,"title":{},"body":{"classes/FlavorBasicInfo.html":{}}}],["src/app/services/modelsdto/falvordto.ts:7",{"_index":1983,"title":{},"body":{"classes/FlavorBasicInfo.html":{}}}],["src/app/services/modelsdto/hostdto.ts",{"_index":2263,"title":{},"body":{"classes/HostModuleDTO.html":{},"classes/HostPortModuleDTO.html":{}}}],["src/app/services/modelsdto/hostdto.ts:10",{"_index":2346,"title":{},"body":{"classes/HostPortModuleDTO.html":{}}}],["src/app/services/modelsdto/hostdto.ts:17",{"_index":2265,"title":{},"body":{"classes/HostModuleDTO.html":{}}}],["src/app/services/modelsdto/hostdto.ts:18",{"_index":2266,"title":{},"body":{"classes/HostModuleDTO.html":{}}}],["src/app/services/modelsdto/hostdto.ts:19",{"_index":2267,"title":{},"body":{"classes/HostModuleDTO.html":{}}}],["src/app/services/modelsdto/hostdto.ts:20",{"_index":2269,"title":{},"body":{"classes/HostModuleDTO.html":{}}}],["src/app/services/modelsdto/hostdto.ts:21",{"_index":2270,"title":{},"body":{"classes/HostModuleDTO.html":{}}}],["src/app/services/modelsdto/hostdto.ts:7",{"_index":2343,"title":{},"body":{"classes/HostPortModuleDTO.html":{}}}],["src/app/services/modelsdto/hostdto.ts:8",{"_index":2344,"title":{},"body":{"classes/HostPortModuleDTO.html":{}}}],["src/app/services/modelsdto/hostdto.ts:9",{"_index":2345,"title":{},"body":{"classes/HostPortModuleDTO.html":{}}}],["src/app/services/modelsdto/moduledto",{"_index":3933,"title":{},"body":{"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["src/app/services/modelsdto/moduledto.ts",{"_index":484,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:10",{"_index":2621,"title":{},"body":{"classes/ModuleListDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:102",{"_index":3386,"title":{},"body":{"classes/SimpleModuleDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:103",{"_index":3387,"title":{},"body":{"classes/SimpleModuleDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:104",{"_index":3388,"title":{},"body":{"classes/SimpleModuleDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:105",{"_index":3389,"title":{},"body":{"classes/SimpleModuleDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:106",{"_index":3390,"title":{},"body":{"classes/SimpleModuleDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:107",{"_index":3391,"title":{},"body":{"classes/SimpleModuleDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:108",{"_index":3392,"title":{},"body":{"classes/SimpleModuleDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:109",{"_index":3393,"title":{},"body":{"classes/SimpleModuleDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:11",{"_index":2618,"title":{},"body":{"classes/ModuleListDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:110",{"_index":3394,"title":{},"body":{"classes/SimpleModuleDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:111",{"_index":3395,"title":{},"body":{"classes/SimpleModuleDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:112",{"_index":3396,"title":{},"body":{"classes/SimpleModuleDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:113",{"_index":3397,"title":{},"body":{"classes/SimpleModuleDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:114",{"_index":3398,"title":{},"body":{"classes/SimpleModuleDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:115",{"_index":3399,"title":{},"body":{"classes/SimpleModuleDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:116",{"_index":3400,"title":{},"body":{"classes/SimpleModuleDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:12",{"_index":2625,"title":{},"body":{"classes/ModuleListDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:124",{"_index":2579,"title":{},"body":{"classes/ModuleDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:125",{"_index":2580,"title":{},"body":{"classes/ModuleDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:126",{"_index":2581,"title":{},"body":{"classes/ModuleDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:127",{"_index":2582,"title":{},"body":{"classes/ModuleDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:128",{"_index":2583,"title":{},"body":{"classes/ModuleDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:129",{"_index":2584,"title":{},"body":{"classes/ModuleDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:13",{"_index":2624,"title":{},"body":{"classes/ModuleListDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:130",{"_index":2585,"title":{},"body":{"classes/ModuleDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:131",{"_index":2586,"title":{},"body":{"classes/ModuleDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:132",{"_index":2587,"title":{},"body":{"classes/ModuleDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:133",{"_index":2588,"title":{},"body":{"classes/ModuleDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:134",{"_index":2590,"title":{},"body":{"classes/ModuleDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:135",{"_index":2589,"title":{},"body":{"classes/ModuleDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:136",{"_index":2591,"title":{},"body":{"classes/ModuleDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:137",{"_index":2592,"title":{},"body":{"classes/ModuleDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:14",{"_index":2622,"title":{},"body":{"classes/ModuleListDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:144",{"_index":2629,"title":{},"body":{"classes/ModuleNetworkInterfaceDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:145",{"_index":2630,"title":{},"body":{"classes/ModuleNetworkInterfaceDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:146",{"_index":2631,"title":{},"body":{"classes/ModuleNetworkInterfaceDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:147",{"_index":2632,"title":{},"body":{"classes/ModuleNetworkInterfaceDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:148",{"_index":2633,"title":{},"body":{"classes/ModuleNetworkInterfaceDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:149",{"_index":2634,"title":{},"body":{"classes/ModuleNetworkInterfaceDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:15",{"_index":2619,"title":{},"body":{"classes/ModuleListDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:150",{"_index":2635,"title":{},"body":{"classes/ModuleNetworkInterfaceDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:157",{"_index":1020,"title":{},"body":{"classes/ConsumerInterfaceLinkDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:158",{"_index":1021,"title":{},"body":{"classes/ConsumerInterfaceLinkDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:159",{"_index":1022,"title":{},"body":{"classes/ConsumerInterfaceLinkDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:16",{"_index":2623,"title":{},"body":{"classes/ModuleListDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:166",{"_index":2607,"title":{},"body":{"classes/ModuleInstancePropertiesDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:167",{"_index":2609,"title":{},"body":{"classes/ModuleInstancePropertiesDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:168",{"_index":2610,"title":{},"body":{"classes/ModuleInstancePropertiesDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:169",{"_index":2612,"title":{},"body":{"classes/ModuleInstancePropertiesDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:17",{"_index":2620,"title":{},"body":{"classes/ModuleListDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:170",{"_index":2611,"title":{},"body":{"classes/ModuleInstancePropertiesDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:171",{"_index":2608,"title":{},"body":{"classes/ModuleInstancePropertiesDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:179",{"_index":492,"title":{},"body":{"classes/AreaDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:18",{"_index":2617,"title":{},"body":{"classes/ModuleListDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:180",{"_index":495,"title":{},"body":{"classes/AreaDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:181",{"_index":493,"title":{},"body":{"classes/AreaDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:182",{"_index":491,"title":{},"body":{"classes/AreaDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:183",{"_index":494,"title":{},"body":{"classes/AreaDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:184",{"_index":490,"title":{},"body":{"classes/AreaDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:19",{"_index":2616,"title":{},"body":{"classes/ModuleListDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:191",{"_index":3378,"title":{},"body":{"classes/SimpleAreaDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:192",{"_index":3379,"title":{},"body":{"classes/SimpleAreaDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:199",{"_index":3587,"title":{},"body":{"classes/TheaterInstancePropertiesDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:200",{"_index":3588,"title":{},"body":{"classes/TheaterInstancePropertiesDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:201",{"_index":3584,"title":{},"body":{"classes/TheaterInstancePropertiesDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:202",{"_index":3585,"title":{},"body":{"classes/TheaterInstancePropertiesDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:203",{"_index":3589,"title":{},"body":{"classes/TheaterInstancePropertiesDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:204",{"_index":3586,"title":{},"body":{"classes/TheaterInstancePropertiesDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:211",{"_index":3531,"title":{},"body":{"classes/TagTIP.html":{}}}],["src/app/services/modelsdto/moduledto.ts:218",{"_index":1573,"title":{},"body":{"classes/ElementIntoTheaterDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:219",{"_index":1574,"title":{},"body":{"classes/ElementIntoTheaterDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:227",{"_index":2605,"title":{},"body":{"classes/ModuleInstanceDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:228",{"_index":2606,"title":{},"body":{"classes/ModuleInstanceDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:234",{"_index":3582,"title":{},"body":{"classes/TheaterInstanceDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:235",{"_index":3583,"title":{},"body":{"classes/TheaterInstanceDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:26",{"_index":3687,"title":{},"body":{"classes/TypesCatalogueDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:27",{"_index":3688,"title":{},"body":{"classes/TypesCatalogueDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:28",{"_index":3689,"title":{},"body":{"classes/TypesCatalogueDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:29",{"_index":3690,"title":{},"body":{"classes/TypesCatalogueDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:36",{"_index":2572,"title":{},"body":{"classes/ModuleClassificationDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:37",{"_index":2573,"title":{},"body":{"classes/ModuleClassificationDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:38",{"_index":2574,"title":{},"body":{"classes/ModuleClassificationDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:39",{"_index":2575,"title":{},"body":{"classes/ModuleClassificationDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:40",{"_index":2576,"title":{},"body":{"classes/ModuleClassificationDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:41",{"_index":2577,"title":{},"body":{"classes/ModuleClassificationDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:42",{"_index":2578,"title":{},"body":{"classes/ModuleClassificationDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:49",{"_index":2018,"title":{},"body":{"classes/GenericParameterDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:50",{"_index":2016,"title":{},"body":{"classes/GenericParameterDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:51",{"_index":2017,"title":{},"body":{"classes/GenericParameterDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:58",{"_index":942,"title":{},"body":{"classes/ConfigurationTemplateDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:59",{"_index":948,"title":{},"body":{"classes/ConfigurationTemplateDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:60",{"_index":951,"title":{},"body":{"classes/ConfigurationTemplateDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:61",{"_index":946,"title":{},"body":{"classes/ConfigurationTemplateDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:62",{"_index":944,"title":{},"body":{"classes/ConfigurationTemplateDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:63",{"_index":947,"title":{},"body":{"classes/ConfigurationTemplateDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:64",{"_index":949,"title":{},"body":{"classes/ConfigurationTemplateDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:65",{"_index":945,"title":{},"body":{"classes/ConfigurationTemplateDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:66",{"_index":943,"title":{},"body":{"classes/ConfigurationTemplateDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:67",{"_index":952,"title":{},"body":{"classes/ConfigurationTemplateDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:68",{"_index":950,"title":{},"body":{"classes/ConfigurationTemplateDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:75",{"_index":2626,"title":{},"body":{"classes/ModuleModeDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:76",{"_index":2627,"title":{},"body":{"classes/ModuleModeDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:77",{"_index":2628,"title":{},"body":{"classes/ModuleModeDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:84",{"_index":2663,"title":{},"body":{"classes/ModuleStatusDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:85",{"_index":2664,"title":{},"body":{"classes/ModuleStatusDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:86",{"_index":2665,"title":{},"body":{"classes/ModuleStatusDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:9",{"_index":2615,"title":{},"body":{"classes/ModuleListDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:93",{"_index":3440,"title":{},"body":{"classes/StatisticItemDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:94",{"_index":3442,"title":{},"body":{"classes/StatisticItemDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:95",{"_index":3441,"title":{},"body":{"classes/StatisticItemDTO.html":{}}}],["src/app/services/modelsdto/networkdto.ts",{"_index":774,"title":{},"body":{"classes/BorderNetworkDTO.html":{},"classes/NetOSRouterDTO.html":{},"classes/NetworkDTO.html":{},"classes/SubnetDTO.html":{}}}],["src/app/services/modelsdto/networkdto.ts:14",{"_index":778,"title":{},"body":{"classes/BorderNetworkDTO.html":{}}}],["src/app/services/modelsdto/networkdto.ts:15",{"_index":779,"title":{},"body":{"classes/BorderNetworkDTO.html":{}}}],["src/app/services/modelsdto/networkdto.ts:16",{"_index":781,"title":{},"body":{"classes/BorderNetworkDTO.html":{}}}],["src/app/services/modelsdto/networkdto.ts:17",{"_index":782,"title":{},"body":{"classes/BorderNetworkDTO.html":{}}}],["src/app/services/modelsdto/networkdto.ts:24",{"_index":2733,"title":{},"body":{"classes/NetOSRouterDTO.html":{}}}],["src/app/services/modelsdto/networkdto.ts:25",{"_index":2734,"title":{},"body":{"classes/NetOSRouterDTO.html":{}}}],["src/app/services/modelsdto/networkdto.ts:26",{"_index":2735,"title":{},"body":{"classes/NetOSRouterDTO.html":{}}}],["src/app/services/modelsdto/networkdto.ts:27",{"_index":2736,"title":{},"body":{"classes/NetOSRouterDTO.html":{}}}],["src/app/services/modelsdto/networkdto.ts:35",{"_index":3471,"title":{},"body":{"classes/SubnetDTO.html":{}}}],["src/app/services/modelsdto/networkdto.ts:36",{"_index":3472,"title":{},"body":{"classes/SubnetDTO.html":{}}}],["src/app/services/modelsdto/networkdto.ts:37",{"_index":3473,"title":{},"body":{"classes/SubnetDTO.html":{}}}],["src/app/services/modelsdto/networkdto.ts:38",{"_index":3474,"title":{},"body":{"classes/SubnetDTO.html":{}}}],["src/app/services/modelsdto/networkdto.ts:39",{"_index":3475,"title":{},"body":{"classes/SubnetDTO.html":{}}}],["src/app/services/modelsdto/networkdto.ts:40",{"_index":3476,"title":{},"body":{"classes/SubnetDTO.html":{}}}],["src/app/services/modelsdto/networkdto.ts:41",{"_index":3477,"title":{},"body":{"classes/SubnetDTO.html":{}}}],["src/app/services/modelsdto/networkdto.ts:42",{"_index":3478,"title":{},"body":{"classes/SubnetDTO.html":{}}}],["src/app/services/modelsdto/networkdto.ts:43",{"_index":3479,"title":{},"body":{"classes/SubnetDTO.html":{}}}],["src/app/services/modelsdto/networkdto.ts:44",{"_index":3480,"title":{},"body":{"classes/SubnetDTO.html":{}}}],["src/app/services/modelsdto/networkdto.ts:45",{"_index":3481,"title":{},"body":{"classes/SubnetDTO.html":{}}}],["src/app/services/modelsdto/networkdto.ts:46",{"_index":3482,"title":{},"body":{"classes/SubnetDTO.html":{}}}],["src/app/services/modelsdto/networkdto.ts:5",{"_index":2750,"title":{},"body":{"classes/NetworkDTO.html":{}}}],["src/app/services/modelsdto/networkdto.ts:6",{"_index":2751,"title":{},"body":{"classes/NetworkDTO.html":{}}}],["src/app/services/modelsdto/networkdto.ts:7",{"_index":2752,"title":{},"body":{"classes/NetworkDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts",{"_index":740,"title":{},"body":{"classes/BlueprintFileDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/NameMappingDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TheaterDTO.html":{},"classes/TheatreStatusDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts:16",{"_index":3649,"title":{},"body":{"classes/TheatreStatusDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts:17",{"_index":3650,"title":{},"body":{"classes/TheatreStatusDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts:18",{"_index":3651,"title":{},"body":{"classes/TheatreStatusDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts:25",{"_index":1515,"title":{},"body":{"classes/DeployInstanceDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts:26",{"_index":1516,"title":{},"body":{"classes/DeployInstanceDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts:27",{"_index":1517,"title":{},"body":{"classes/DeployInstanceDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts:28",{"_index":1518,"title":{},"body":{"classes/DeployInstanceDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts:35",{"_index":741,"title":{},"body":{"classes/BlueprintFileDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts:36",{"_index":742,"title":{},"body":{"classes/BlueprintFileDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts:37",{"_index":744,"title":{},"body":{"classes/BlueprintFileDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts:38",{"_index":745,"title":{},"body":{"classes/BlueprintFileDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts:45",{"_index":2666,"title":{},"body":{"classes/NameMappingDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts:46",{"_index":2667,"title":{},"body":{"classes/NameMappingDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts:47",{"_index":2668,"title":{},"body":{"classes/NameMappingDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts:48",{"_index":2669,"title":{},"body":{"classes/NameMappingDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts:54",{"_index":1628,"title":{},"body":{"classes/EntityNameMappingFileDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts:61",{"_index":3558,"title":{},"body":{"classes/TheaterDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts:62",{"_index":3559,"title":{},"body":{"classes/TheaterDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts:63",{"_index":3560,"title":{},"body":{"classes/TheaterDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts:64",{"_index":3561,"title":{},"body":{"classes/TheaterDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts:65",{"_index":3562,"title":{},"body":{"classes/TheaterDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts:66",{"_index":3563,"title":{},"body":{"classes/TheaterDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts:67",{"_index":3564,"title":{},"body":{"classes/TheaterDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts:68",{"_index":3565,"title":{},"body":{"classes/TheaterDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts:69",{"_index":3566,"title":{},"body":{"classes/TheaterDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts:7",{"_index":3528,"title":{},"body":{"classes/TagCatalogueDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts:70",{"_index":3567,"title":{},"body":{"classes/TheaterDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts:71",{"_index":3568,"title":{},"body":{"classes/TheaterDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts:72",{"_index":3569,"title":{},"body":{"classes/TheaterDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts:73",{"_index":3570,"title":{},"body":{"classes/TheaterDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts:74",{"_index":3571,"title":{},"body":{"classes/TheaterDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts:75",{"_index":3572,"title":{},"body":{"classes/TheaterDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts:76",{"_index":3573,"title":{},"body":{"classes/TheaterDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts:77",{"_index":3574,"title":{},"body":{"classes/TheaterDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts:78",{"_index":3575,"title":{},"body":{"classes/TheaterDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts:79",{"_index":3576,"title":{},"body":{"classes/TheaterDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts:8",{"_index":3529,"title":{},"body":{"classes/TagCatalogueDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts:80",{"_index":3577,"title":{},"body":{"classes/TheaterDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts:9",{"_index":3530,"title":{},"body":{"classes/TagCatalogueDTO.html":{}}}],["src/app/services/modelsexport/moduleexport.ts",{"_index":954,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:10",{"_index":2594,"title":{},"body":{"classes/ModuleExport.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:106",{"_index":3483,"title":{},"body":{"classes/SubnetExport.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:11",{"_index":2596,"title":{},"body":{"classes/ModuleExport.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:114",{"_index":2771,"title":{},"body":{"classes/NodeSimpleData.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:115",{"_index":2769,"title":{},"body":{"classes/NodeSimpleData.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:116",{"_index":2768,"title":{},"body":{"classes/NodeSimpleData.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:117",{"_index":2770,"title":{},"body":{"classes/NodeSimpleData.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:12",{"_index":2597,"title":{},"body":{"classes/ModuleExport.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:124",{"_index":3219,"title":{},"body":{"classes/RelationshipsExport.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:125",{"_index":3218,"title":{},"body":{"classes/RelationshipsExport.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:13",{"_index":2595,"title":{},"body":{"classes/ModuleExport.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:131",{"_index":3192,"title":{},"body":{"classes/PortSimpleData.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:132",{"_index":3191,"title":{},"body":{"classes/PortSimpleData.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:138",{"_index":2767,"title":{},"body":{"classes/NetworkSimpleData.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:139",{"_index":2766,"title":{},"body":{"classes/NetworkSimpleData.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:14",{"_index":2593,"title":{},"body":{"classes/ModuleExport.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:146",{"_index":3205,"title":{},"body":{"classes/PropertiesNSD.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:147",{"_index":3207,"title":{},"body":{"classes/PropertiesNSD.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:148",{"_index":3206,"title":{},"body":{"classes/PropertiesNSD.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:15",{"_index":2598,"title":{},"body":{"classes/ModuleExport.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:155",{"_index":3493,"title":{},"body":{"classes/SubnetSimpleData.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:156",{"_index":3492,"title":{},"body":{"classes/SubnetSimpleData.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:157",{"_index":3491,"title":{},"body":{"classes/SubnetSimpleData.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:164",{"_index":3210,"title":{},"body":{"classes/PropertiesSSD.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:170",{"_index":3208,"title":{},"body":{"classes/PropertiesSSD.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:171",{"_index":3211,"title":{},"body":{"classes/PropertiesSSD.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:172",{"_index":3209,"title":{},"body":{"classes/PropertiesSSD.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:22",{"_index":2662,"title":{},"body":{"classes/ModuleSimpleData.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:23",{"_index":2661,"title":{},"body":{"classes/ModuleSimpleData.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:30",{"_index":3202,"title":{},"body":{"classes/PropertiesMSD.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:31",{"_index":3200,"title":{},"body":{"classes/PropertiesMSD.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:32",{"_index":3203,"title":{},"body":{"classes/PropertiesMSD.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:33",{"_index":3199,"title":{},"body":{"classes/PropertiesMSD.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:34",{"_index":3201,"title":{},"body":{"classes/PropertiesMSD.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:38",{"_index":3204,"title":{},"body":{"classes/PropertiesMSD.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:44",{"_index":961,"title":{},"body":{"classes/ConstraintsMSD.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:45",{"_index":963,"title":{},"body":{"classes/ConstraintsMSD.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:46",{"_index":965,"title":{},"body":{"classes/ConstraintsMSD.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:52",{"_index":2354,"title":{},"body":{"classes/InterfaceConstraints.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:53",{"_index":2356,"title":{},"body":{"classes/InterfaceConstraints.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:54",{"_index":2355,"title":{},"body":{"classes/InterfaceConstraints.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:55",{"_index":2353,"title":{},"body":{"classes/InterfaceConstraints.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:56",{"_index":2357,"title":{},"body":{"classes/InterfaceConstraints.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:72",{"_index":2362,"title":{},"body":{"classes/InterfaceNetworksProvider.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:73",{"_index":2363,"title":{},"body":{"classes/InterfaceNetworksProvider.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:74",{"_index":2365,"title":{},"body":{"classes/InterfaceNetworksProvider.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:75",{"_index":2364,"title":{},"body":{"classes/InterfaceNetworksProvider.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:81",{"_index":2358,"title":{},"body":{"classes/InterfaceNetworksConsumer.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:82",{"_index":2359,"title":{},"body":{"classes/InterfaceNetworksConsumer.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:83",{"_index":2361,"title":{},"body":{"classes/InterfaceNetworksConsumer.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:84",{"_index":2360,"title":{},"body":{"classes/InterfaceNetworksConsumer.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:9",{"_index":2599,"title":{},"body":{"classes/ModuleExport.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:90",{"_index":3729,"title":{},"body":{"classes/VirtualMachine.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:91",{"_index":3728,"title":{},"body":{"classes/VirtualMachine.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:97",{"_index":3731,"title":{},"body":{"classes/VirtualMachinePorts.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:98",{"_index":3730,"title":{},"body":{"classes/VirtualMachinePorts.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:99",{"_index":3732,"title":{},"body":{"classes/VirtualMachinePorts.html":{}}}],["src/app/services/modelsexport/theaterexport.ts",{"_index":607,"title":{},"body":{"classes/AreaExport.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesTSD.html":{},"classes/SourceExport.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{}}}],["src/app/services/modelsexport/theaterexport.ts:10",{"_index":3579,"title":{},"body":{"classes/TheaterExport.html":{}}}],["src/app/services/modelsexport/theaterexport.ts:11",{"_index":3580,"title":{},"body":{"classes/TheaterExport.html":{}}}],["src/app/services/modelsexport/theaterexport.ts:17",{"_index":3648,"title":{},"body":{"classes/TheaterSimpleData.html":{}}}],["src/app/services/modelsexport/theaterexport.ts:18",{"_index":3647,"title":{},"body":{"classes/TheaterSimpleData.html":{}}}],["src/app/services/modelsexport/theaterexport.ts:24",{"_index":3217,"title":{},"body":{"classes/PropertiesTSD.html":{}}}],["src/app/services/modelsexport/theaterexport.ts:25",{"_index":3214,"title":{},"body":{"classes/PropertiesTSD.html":{}}}],["src/app/services/modelsexport/theaterexport.ts:26",{"_index":3215,"title":{},"body":{"classes/PropertiesTSD.html":{}}}],["src/app/services/modelsexport/theaterexport.ts:27",{"_index":3213,"title":{},"body":{"classes/PropertiesTSD.html":{}}}],["src/app/services/modelsexport/theaterexport.ts:28",{"_index":3216,"title":{},"body":{"classes/PropertiesTSD.html":{}}}],["src/app/services/modelsexport/theaterexport.ts:29",{"_index":3212,"title":{},"body":{"classes/PropertiesTSD.html":{}}}],["src/app/services/modelsexport/theaterexport.ts:36",{"_index":3532,"title":{},"body":{"classes/TagsExport.html":{}}}],["src/app/services/modelsexport/theaterexport.ts:43",{"_index":613,"title":{},"body":{"classes/AreaExport.html":{}}}],["src/app/services/modelsexport/theaterexport.ts:44",{"_index":614,"title":{},"body":{"classes/AreaExport.html":{}}}],["src/app/services/modelsexport/theaterexport.ts:51",{"_index":2614,"title":{},"body":{"classes/ModuleInstanceSimpleData.html":{}}}],["src/app/services/modelsexport/theaterexport.ts:52",{"_index":2613,"title":{},"body":{"classes/ModuleInstanceSimpleData.html":{}}}],["src/app/services/modelsexport/theaterexport.ts:58",{"_index":3195,"title":{},"body":{"classes/PropertiesMISD.html":{}}}],["src/app/services/modelsexport/theaterexport.ts:59",{"_index":3198,"title":{},"body":{"classes/PropertiesMISD.html":{}}}],["src/app/services/modelsexport/theaterexport.ts:60",{"_index":3193,"title":{},"body":{"classes/PropertiesMISD.html":{}}}],["src/app/services/modelsexport/theaterexport.ts:61",{"_index":3196,"title":{},"body":{"classes/PropertiesMISD.html":{}}}],["src/app/services/modelsexport/theaterexport.ts:62",{"_index":3197,"title":{},"body":{"classes/PropertiesMISD.html":{}}}],["src/app/services/modelsexport/theaterexport.ts:63",{"_index":3194,"title":{},"body":{"classes/PropertiesMISD.html":{}}}],["src/app/services/modelsexport/theaterexport.ts:69",{"_index":3411,"title":{},"body":{"classes/SourceExport.html":{}}}],["src/app/services/modelsexport/theaterexport.ts:70",{"_index":3409,"title":{},"body":{"classes/SourceExport.html":{}}}],["src/app/services/modelsexport/theaterexport.ts:71",{"_index":3410,"title":{},"body":{"classes/SourceExport.html":{}}}],["src/app/services/modelsexport/theaterexport.ts:77",{"_index":1024,"title":{},"body":{"classes/ConsumerInterfaceLinkExport.html":{}}}],["src/app/services/modelsexport/theaterexport.ts:78",{"_index":1025,"title":{},"body":{"classes/ConsumerInterfaceLinkExport.html":{}}}],["src/app/services/modelsexport/theaterexport.ts:79",{"_index":1026,"title":{},"body":{"classes/ConsumerInterfaceLinkExport.html":{}}}],["src/app/services/modelsexport/theaterexport.ts:8",{"_index":3581,"title":{},"body":{"classes/TheaterExport.html":{}}}],["src/app/services/modelsexport/theaterexport.ts:9",{"_index":3578,"title":{},"body":{"classes/TheaterExport.html":{}}}],["src/app/services/token/token.service.ts",{"_index":3652,"title":{},"body":{"injectables/TokenService.html":{}}}],["src/app/services/token/token.service.ts:16",{"_index":3678,"title":{},"body":{"injectables/TokenService.html":{}}}],["src/app/services/token/token.service.ts:20",{"_index":3675,"title":{},"body":{"injectables/TokenService.html":{}}}],["src/app/services/token/token.service.ts:24",{"_index":3662,"title":{},"body":{"injectables/TokenService.html":{}}}],["src/app/services/token/token.service.ts:32",{"_index":3674,"title":{},"body":{"injectables/TokenService.html":{}}}],["src/app/services/token/token.service.ts:46",{"_index":3668,"title":{},"body":{"injectables/TokenService.html":{}}}],["src/app/services/token/token.service.ts:54",{"_index":3670,"title":{},"body":{"injectables/TokenService.html":{}}}],["src/app/services/token/token.service.ts:60",{"_index":3663,"title":{},"body":{"injectables/TokenService.html":{}}}],["src/app/services/token/token.service.ts:67",{"_index":3672,"title":{},"body":{"injectables/TokenService.html":{}}}],["src/app/services/token/token.service.ts:74",{"_index":3666,"title":{},"body":{"injectables/TokenService.html":{}}}],["src/app/utility/app.guard.ts",{"_index":700,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["src/app/utility/app.guard.ts:12",{"_index":703,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["src/app/utility/app.guard.ts:20",{"_index":708,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["src/app/utility/app.init.ts",{"_index":3859,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/visualizer",{"_index":3740,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["src/environments/environment",{"_index":327,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AttachmentsService.html":{},"injectables/FlavorService.html":{},"injectables/ModuleService.html":{},"injectables/ParseService.html":{},"injectables/TheaterService.html":{}}}],["ss",{"_index":3426,"title":{},"body":{"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{}}}],["sta",{"_index":1255,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["standard",{"_index":626,"title":{},"body":{"classes/AreaExport.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/SourceExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["standrard",{"_index":1833,"title":{},"body":{"injectables/ExportService.html":{}}}],["start",{"_index":2251,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["startapplication",{"_index":2039,"title":{},"body":{"components/HomeComponent.html":{}}}],["started",{"_index":3871,"title":{"index.html":{}},"body":{}}],["stata",{"_index":2047,"title":{},"body":{"components/HomeComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["state",{"_index":706,"title":{},"body":{"injectables/AuthGuard.html":{},"components/HomeComponent.html":{}}}],["state.url",{"_index":723,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["stati",{"_index":1726,"title":{},"body":{"classes/ExportModule.html":{}}}],["static",{"_index":1617,"title":{},"body":{"classes/EmptyNodeInfo.html":{}}}],["staticvalue",{"_index":1436,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["staticvalue.subnetoutput",{"_index":3057,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["statisticitemdto",{"_index":546,"title":{"classes/StatisticItemDTO.html":{}},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["statistics",{"_index":574,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["statitistiche",{"_index":545,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["stato",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"classes/AreaDTO.html":{},"classes/BlueprintFileDTO.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"components/DataItemComponent.html":{},"classes/DeployInstanceDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/NameMappingDTO.html":{},"components/NavbarComponent.html":{},"components/OffcanvasComponent.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"classes/StatisticItemDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterDTO.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheatreStatusDTO.html":{},"classes/TypesCatalogueDTO.html":{},"components/VisualizerComponent.html":{}}}],["status",{"_index":559,"title":{},"body":{"classes/AreaDTO.html":{},"classes/BlueprintFileDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/NameMappingDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheatreStatusDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["stessi",{"_index":3177,"title":{},"body":{"classes/PerseDataForTheaterComposer.html":{}}}],["stesso",{"_index":3424,"title":{},"body":{"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{}}}],["storage",{"_index":909,"title":{},"body":{"components/ComposerComponent.html":{}}}],["storageservice",{"_index":818,"title":{"injectables/StorageService.html":{}},"body":{"components/ComposerComponent.html":{},"components/HomeComponent.html":{},"injectables/StorageService.html":{}}}],["storaging",{"_index":3444,"title":{},"body":{"injectables/StorageService.html":{}}}],["stored",{"_index":3898,"title":{},"body":{"index.html":{}}}],["string",{"_index":20,"title":{},"body":{"classes/Aoption.html":{},"components/AppComponent.html":{},"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"injectables/AttachmentsService.html":{},"classes/BlueprintFileDTO.html":{},"classes/BorderNetworkDTO.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"components/ControlTemplate.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputReturnedV2.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/DeployInstanceDTO.html":{},"components/DocsComponent.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"classes/FlavorApplication.html":{},"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"injectables/FlavorService.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"classes/HostModuleDTO.html":{},"classes/HostNode.html":{},"classes/HostPortModuleDTO.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModalButton.html":{},"classes/ModalItem.html":{},"injectables/ModalService.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"injectables/ModuleService.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"interfaces/ModuleTopology.html":{},"classes/NameMappingDTO.html":{},"components/NavbarComponent.html":{},"classes/NavbarElement.html":{},"classes/NavbarItem.html":{},"classes/NetOSRouterDTO.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkDTO.html":{},"classes/NetworkNode.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/NodeTopologyElement.html":{},"components/OffcanvasComponent.html":{},"classes/PageableDTO.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SelectOption.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/SingleDataInputReturned.html":{},"classes/SortDTO.html":{},"classes/SourceExport.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"classes/StatisticItemDTO.html":{},"classes/SubnetDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"components/TabnavComponent.html":{},"classes/TabnavElement.html":{},"classes/TabnavItem.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"injectables/TheaterService.html":{},"classes/TheaterSimpleData.html":{},"interfaces/TheaterTopology.html":{},"classes/TheatreStatusDTO.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/TypesCatalogueDTO.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{},"miscellaneous/functions.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["stringify",{"_index":671,"title":{},"body":{"injectables/AttachmentsService.html":{}}}],["string|number",{"_index":698,"title":{},"body":{"injectables/AttachmentsService.html":{}}}],["structural_parameters",{"_index":534,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["struttura",{"_index":428,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/FlavorApplication.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NetworkNode.html":{},"classes/NodeTopologyElement.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SimpleModuleApplication.html":{},"classes/SubnetNode.html":{},"classes/TheaterApplication.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"miscellaneous/functions.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["strutturare",{"_index":3138,"title":{},"body":{"classes/PerseDataForModuleVisualizer.html":{}}}],["style",{"_index":1340,"title":{},"body":{"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/NetworkComponent.html":{}}}],["styles",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["styleurls",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{}}}],["su",{"_index":1252,"title":{},"body":{"components/DataInputV2Component.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"classes/PerseDataForModuleVisualizer.html":{}}}],["sua",{"_index":1480,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/ParseDataForTheaterVisualizer.html":{}}}],["sub",{"_index":1752,"title":{},"body":{"classes/ExportModule.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["subject",{"_index":3417,"title":{},"body":{"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{}}}],["subjecttype",{"_index":884,"title":{},"body":{"components/ComposerComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"injectables/ExportService.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"components/VisualizerComponent.html":{}}}],["subjecttype.module",{"_index":877,"title":{},"body":{"components/ComposerComponent.html":{},"components/HomeComponent.html":{},"components/VisualizerComponent.html":{}}}],["subjecttype.module.tolowercase",{"_index":1840,"title":{},"body":{"injectables/ExportService.html":{},"injectables/FileService.html":{}}}],["subjecttype.theater",{"_index":882,"title":{},"body":{"components/ComposerComponent.html":{},"components/HomeComponent.html":{},"components/VisualizerComponent.html":{}}}],["subjecttype.theater.tolowercase",{"_index":1848,"title":{},"body":{"injectables/ExportService.html":{},"injectables/FileService.html":{}}}],["submit",{"_index":1122,"title":{},"body":{"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{}}}],["submitted",{"_index":1120,"title":{},"body":{"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{}}}],["subnet",{"_index":777,"title":{},"body":{"classes/BorderNetworkDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/EmptyNodeInfo.html":{},"classes/ExportModule.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetOSRouterDTO.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkDTO.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteSubnetInfo.html":{},"classes/SubnetDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"miscellaneous/functions.html":{}}}],["subnet.component",{"_index":3347,"title":{},"body":{"classes/ReteSubnetInfo.html":{},"classes/SubnetNode.html":{}}}],["subnet.component.html",{"_index":3459,"title":{},"body":{"components/SubnetComponent.html":{}}}],["subnet.component.sass",{"_index":3458,"title":{},"body":{"components/SubnetComponent.html":{}}}],["subnet.data.cidr",{"_index":1777,"title":{},"body":{"classes/ExportModule.html":{}}}],["subnet.data.isdhcp",{"_index":1778,"title":{},"body":{"classes/ExportModule.html":{}}}],["subnet.data.name",{"_index":1810,"title":{},"body":{"classes/ExportModule.html":{}}}],["subnet.data.output",{"_index":1780,"title":{},"body":{"classes/ExportModule.html":{}}}],["subnet.data.version",{"_index":1776,"title":{},"body":{"classes/ExportModule.html":{}}}],["subnet.name",{"_index":3038,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["subnet.network.name",{"_index":3040,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["subnet/subnetnode",{"_index":1626,"title":{},"body":{"classes/EmptyNodeInfo.html":{}}}],["subnet_name",{"_index":3037,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["subnet_number",{"_index":415,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/ReteConnection.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["subnetcomponent",{"_index":207,"title":{"components/SubnetComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"classes/ReteSubnetInfo.html":{},"components/SubnetComponent.html":{},"classes/SubnetNode.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"overview.html":{}}}],["subnetdto",{"_index":787,"title":{"classes/SubnetDTO.html":{}},"body":{"classes/BorderNetworkDTO.html":{},"classes/HostModuleDTO.html":{},"classes/HostPortModuleDTO.html":{},"classes/NetOSRouterDTO.html":{},"classes/NetworkDTO.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/SubnetDTO.html":{},"miscellaneous/functions.html":{}}}],["subnetexport",{"_index":994,"title":{"classes/SubnetExport.html":{}},"body":{"classes/ConstraintsMSD.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["subneticon",{"_index":2372,"title":{},"body":{"components/MirroringModuleInstanceComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["subneticon=subneticon",{"_index":2384,"title":{},"body":{"components/MirroringModuleInstanceComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["subnetlinkedtoport",{"_index":1757,"title":{},"body":{"classes/ExportModule.html":{}}}],["subnetlinkedtoport.data.name",{"_index":1761,"title":{},"body":{"classes/ExportModule.html":{}}}],["subnetlinkedtoport.outputs",{"_index":1763,"title":{},"body":{"classes/ExportModule.html":{}}}],["subnetlinkedtoport.outputs[key",{"_index":1765,"title":{},"body":{"classes/ExportModule.html":{}}}],["subnetnode",{"_index":1625,"title":{"classes/SubnetNode.html":{}},"body":{"classes/EmptyNodeInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/SubnetNode.html":{},"miscellaneous/functions.html":{}}}],["subnetoutput",{"_index":1437,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["subnetport",{"_index":1764,"title":{},"body":{"classes/ExportModule.html":{}}}],["subnetport.connections.foreach(c",{"_index":1767,"title":{},"body":{"classes/ExportModule.html":{}}}],["subnets",{"_index":993,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/ExportModule.html":{},"classes/HostModuleDTO.html":{},"classes/HostPortModuleDTO.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["subnetsimpledata",{"_index":976,"title":{"classes/SubnetSimpleData.html":{}},"body":{"classes/ConstraintsMSD.html":{},"classes/ExportModule.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["subnetsimpledata.relationships.push",{"_index":1781,"title":{},"body":{"classes/ExportModule.html":{}}}],["subnettypeexport",{"_index":970,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/ExportModule.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["subnettypeexport.subnet",{"_index":1775,"title":{},"body":{"classes/ExportModule.html":{}}}],["subscribe",{"_index":932,"title":{},"body":{"components/ComposerComponent.html":{},"injectables/ModalService.html":{}}}],["subscribe(data",{"_index":1552,"title":{},"body":{"components/DocsComponent.html":{}}}],["subscribe(el",{"_index":925,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["subscriber",{"_index":92,"title":{},"body":{"components/AppComponent.html":{}}}],["success",{"_index":2415,"title":{},"body":{"classes/ModalButton.html":{},"classes/ModalItem.html":{}}}],["suddivisione",{"_index":3495,"title":{},"body":{"components/TabnavComponent.html":{}}}],["sugli",{"_index":3166,"title":{},"body":{"classes/PerseDataForTheaterComposer.html":{}}}],["sui",{"_index":3144,"title":{},"body":{"classes/PerseDataForModuleVisualizer.html":{}}}],["sul",{"_index":1390,"title":{},"body":{"components/DataItemComponent.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["sulle",{"_index":1674,"title":{},"body":{"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["suo",{"_index":2303,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["suoi",{"_index":1357,"title":{},"body":{"components/DataItemComponent.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["super(enummoduletype.mirroringmoduleinstance",{"_index":2405,"title":{},"body":{"classes/MirroringModuleInstanceNode.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{}}}],["super(enummoduletype.theaterinternalservicemoduleinstance",{"_index":3360,"title":{},"body":{"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{}}}],["super(enummoduletype.theatermoduleinstance",{"_index":3364,"title":{},"body":{"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["super(enumnodetype.host",{"_index":2330,"title":{},"body":{"classes/HostNode.html":{},"classes/ReteHostInfo.html":{}}}],["super(enumnodetype.network",{"_index":2765,"title":{},"body":{"classes/NetworkNode.html":{},"classes/ReteNetworkInfo.html":{}}}],["super(enumnodetype.subnet",{"_index":3348,"title":{},"body":{"classes/ReteSubnetInfo.html":{},"classes/SubnetNode.html":{}}}],["super(key",{"_index":1054,"title":{},"body":{"components/ControlTemplate.html":{},"classes/_Control.html":{}}}],["super(router",{"_index":712,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["super(service",{"_index":2216,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["support",{"_index":2100,"title":{},"body":{"components/HomeComponent.html":{}}}],["supporta",{"_index":2777,"title":{},"body":{"components/OffcanvasComponent.html":{},"modules.html":{}}}],["supportmachineid",{"_index":1989,"title":{},"body":{"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{}}}],["supporto",{"_index":1648,"title":{},"body":{"classes/ExportModule.html":{},"components/HomeComponent.html":{}}}],["sure",{"_index":2128,"title":{},"body":{"components/HomeComponent.html":{}}}],["svg",{"_index":3917,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":1298,"title":{},"body":{"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{}}}],["switchare",{"_index":797,"title":{},"body":{"components/ComposerComponent.html":{}}}],["sx",{"_index":2804,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["sysman.creo.nodes.automaticsystem",{"_index":1489,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["sysman.creo.nodes.border",{"_index":1490,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["sysman.creo.nodes.externalvirtualmachine",{"_index":1488,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["sysman.creo.nodes.mirroringmoduleinstance",{"_index":1485,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["sysman.creo.nodes.theater",{"_index":1512,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["sysman.creo.nodes.theaterinternalservicemoduleinstance",{"_index":1486,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["sysman.creo.nodes.theatermoduleinstance",{"_index":1484,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["sysman.creo.nodes.theatremoduleinstance",{"_index":1493,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["sysman.creo.nodes.virtualservermoduleinstance",{"_index":1487,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["system",{"_index":938,"title":{},"body":{"components/ComposerComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"components/HomeComponent.html":{},"components/VisualizerComponent.html":{}}}],["system/composer/composer.component",{"_index":285,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["system/composer/composer.component.ts",{"_index":794,"title":{},"body":{"components/ComposerComponent.html":{}}}],["system/composer/composer.component.ts:118",{"_index":846,"title":{},"body":{"components/ComposerComponent.html":{}}}],["system/composer/composer.component.ts:140",{"_index":831,"title":{},"body":{"components/ComposerComponent.html":{}}}],["system/composer/composer.component.ts:162",{"_index":843,"title":{},"body":{"components/ComposerComponent.html":{}}}],["system/composer/composer.component.ts:182",{"_index":825,"title":{},"body":{"components/ComposerComponent.html":{}}}],["system/composer/composer.component.ts:25",{"_index":861,"title":{},"body":{"components/ComposerComponent.html":{}}}],["system/composer/composer.component.ts:27",{"_index":881,"title":{},"body":{"components/ComposerComponent.html":{}}}],["system/composer/composer.component.ts:28",{"_index":863,"title":{},"body":{"components/ComposerComponent.html":{}}}],["system/composer/composer.component.ts:29",{"_index":857,"title":{},"body":{"components/ComposerComponent.html":{}}}],["system/composer/composer.component.ts:30",{"_index":885,"title":{},"body":{"components/ComposerComponent.html":{}}}],["system/composer/composer.component.ts:32",{"_index":878,"title":{},"body":{"components/ComposerComponent.html":{}}}],["system/composer/composer.component.ts:33",{"_index":883,"title":{},"body":{"components/ComposerComponent.html":{}}}],["system/composer/composer.component.ts:40",{"_index":874,"title":{},"body":{"components/ComposerComponent.html":{}}}],["system/composer/composer.component.ts:47",{"_index":854,"title":{},"body":{"components/ComposerComponent.html":{}}}],["system/composer/composer.component.ts:54",{"_index":864,"title":{},"body":{"components/ComposerComponent.html":{}}}],["system/composer/composer.component.ts:61",{"_index":879,"title":{},"body":{"components/ComposerComponent.html":{}}}],["system/composer/composer.component.ts:67",{"_index":868,"title":{},"body":{"components/ComposerComponent.html":{}}}],["system/composer/composer.component.ts:74",{"_index":819,"title":{},"body":{"components/ComposerComponent.html":{}}}],["system/rete",{"_index":271,"title":{},"body":{"modules/AppModule.html":{}}}],["system/visualizer/visualizer.component",{"_index":284,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["system/visualizer/visualizer.component.ts",{"_index":3741,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["system/visualizer/visualizer.component.ts:110",{"_index":3746,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["system/visualizer/visualizer.component.ts:135",{"_index":3748,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["system/visualizer/visualizer.component.ts:156",{"_index":3745,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["system/visualizer/visualizer.component.ts:23",{"_index":3751,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["system/visualizer/visualizer.component.ts:25",{"_index":3753,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["system/visualizer/visualizer.component.ts:26",{"_index":3759,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["system/visualizer/visualizer.component.ts:29",{"_index":3757,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["system/visualizer/visualizer.component.ts:30",{"_index":3758,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["system/visualizer/visualizer.component.ts:38",{"_index":3752,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["system/visualizer/visualizer.component.ts:45",{"_index":3750,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["system/visualizer/visualizer.component.ts:52",{"_index":3754,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["system/visualizer/visualizer.component.ts:59",{"_index":3744,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["system/visualizer/visualizer.component.ts:90",{"_index":3749,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["t",{"_index":2336,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["t.name",{"_index":1916,"title":{},"body":{"classes/ExportTheater.html":{}}}],["tab",{"_index":2825,"title":{},"body":{"components/OffcanvasComponent.html":{},"components/TabnavComponent.html":{},"classes/TabnavElement.html":{},"classes/TabnavItem.html":{}}}],["tabnav",{"_index":3496,"title":{},"body":{"components/TabnavComponent.html":{}}}],["tabnav'},{'name",{"_index":209,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["tabnav.component.html",{"_index":3498,"title":{},"body":{"components/TabnavComponent.html":{}}}],["tabnav.component.sass",{"_index":3497,"title":{},"body":{"components/TabnavComponent.html":{}}}],["tabnavcomponent",{"_index":208,"title":{"components/TabnavComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"classes/TabnavElement.html":{},"classes/TabnavItem.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"overview.html":{}}}],["tabnavelement",{"_index":3503,"title":{"classes/TabnavElement.html":{}},"body":{"components/TabnavComponent.html":{},"classes/TabnavElement.html":{},"classes/TabnavItem.html":{}}}],["tabnavitem",{"_index":3522,"title":{"classes/TabnavItem.html":{}},"body":{"classes/TabnavElement.html":{},"classes/TabnavItem.html":{}}}],["tabnavtype",{"_index":3514,"title":{},"body":{"components/TabnavComponent.html":{}}}],["tag",{"_index":13,"title":{},"body":{"classes/Aoption.html":{},"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"classes/GenericParameterDTO.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"classes/NavbarElement.html":{},"classes/NavbarItem.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/SourceExport.html":{},"classes/StatisticItemDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheaterSimpleData.html":{},"classes/TypesCatalogueDTO.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["tagcataloguedto",{"_index":747,"title":{"classes/TagCatalogueDTO.html":{}},"body":{"classes/BlueprintFileDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/NameMappingDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheatreStatusDTO.html":{}}}],["tags",{"_index":575,"title":{},"body":{"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"classes/BlueprintFileDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/DeployInstanceDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/ExportTheater.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/NameMappingDTO.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesTSD.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/SourceExport.html":{},"classes/StatisticItemDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheaterSimpleData.html":{},"classes/TheatreStatusDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["tagsexport",{"_index":632,"title":{"classes/TagsExport.html":{}},"body":{"classes/AreaExport.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesTSD.html":{},"classes/SourceExport.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{}}}],["tagtip",{"_index":592,"title":{"classes/TagTIP.html":{}},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["take(2",{"_index":2482,"title":{},"body":{"injectables/ModalService.html":{}}}],["tale",{"_index":2022,"title":{},"body":{"components/HomeComponent.html":{}}}],["target",{"_index":1009,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/ExportModule.html":{},"components/HostComponent.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"components/NetworkComponent.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"components/SubnetComponent.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["tasto",{"_index":1391,"title":{},"body":{"components/DataItemComponent.html":{}}}],["te",{"_index":1881,"title":{},"body":{"classes/ExportTheater.html":{}}}],["te.description",{"_index":1883,"title":{},"body":{"classes/ExportTheater.html":{}}}],["te.imports",{"_index":1885,"title":{},"body":{"classes/ExportTheater.html":{}}}],["te.node_templates",{"_index":1889,"title":{},"body":{"classes/ExportTheater.html":{}}}],["te.tosca_definitions_version",{"_index":1882,"title":{},"body":{"classes/ExportTheater.html":{}}}],["teaatro",{"_index":766,"title":{},"body":{"classes/BlueprintFileDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/NameMappingDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TheaterDTO.html":{},"classes/TheatreStatusDTO.html":{}}}],["teatr",{"_index":610,"title":{},"body":{"classes/AreaExport.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesTSD.html":{},"classes/SourceExport.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{}}}],["teatre",{"_index":1510,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["teatri",{"_index":459,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["teatro",{"_index":461,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"classes/BlueprintFileDTO.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/DeployInstanceDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"classes/FlavorApplication.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"interfaces/ModuleTopology.html":{},"classes/NameMappingDTO.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesTSD.html":{},"classes/ReteConnection.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/SourceExport.html":{},"classes/StatisticItemDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheaterSimpleData.html":{},"interfaces/TheaterTopology.html":{},"classes/TheatreStatusDTO.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/TypesCatalogueDTO.html":{},"components/VisualizerComponent.html":{},"miscellaneous/functions.html":{}}}],["template",{"_index":52,"title":{},"body":{"classes/Aoption.html":{},"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/ModalButton.html":{},"components/ModalComponent.html":{},"classes/ModalItem.html":{},"components/NavbarComponent.html":{},"classes/NavbarElement.html":{},"components/NavbarElementComponent.html":{},"classes/NavbarItem.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"classes/TabnavElement.html":{},"classes/TabnavItem.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{},"components/VisualizerComponent.html":{}}}],["template_title",{"_index":36,"title":{},"body":{"classes/Aoption.html":{},"classes/NavbarElement.html":{},"classes/NavbarItem.html":{}}}],["templateref",{"_index":25,"title":{},"body":{"classes/Aoption.html":{},"components/HomeComponent.html":{},"classes/ModalButton.html":{},"classes/ModalItem.html":{},"classes/NavbarElement.html":{},"classes/NavbarItem.html":{},"components/OffcanvasComponent.html":{},"classes/TabnavElement.html":{},"classes/TabnavItem.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{}}}],["templates",{"_index":1723,"title":{},"body":{"classes/ExportModule.html":{}}}],["templateurl",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{}}}],["termini",{"_index":1478,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["test",{"_index":3907,"title":{},"body":{"index.html":{}}}],["tests",{"_index":3906,"title":{},"body":{"index.html":{}}}],["testuale",{"_index":1455,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["text",{"_index":50,"title":{},"body":{"classes/Aoption.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/ModalButton.html":{},"classes/ModalItem.html":{},"injectables/ModalService.html":{},"classes/NavbarElement.html":{},"classes/NavbarItem.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"classes/TabnavElement.html":{},"classes/TabnavItem.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["text/html",{"_index":1550,"title":{},"body":{"components/DocsComponent.html":{}}}],["text_content",{"_index":2418,"title":{},"body":{"classes/ModalButton.html":{},"classes/ModalItem.html":{},"injectables/ModalService.html":{}}}],["textarea",{"_index":1093,"title":{},"body":{"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"components/HomeComponent.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{}}}],["textspinner",{"_index":82,"title":{},"body":{"components/AppComponent.html":{}}}],["theater",{"_index":39,"title":{},"body":{"classes/Aoption.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/ElementIntoTheaterDTO.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"classes/FlavorApplication.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"interfaces/ModuleTopology.html":{},"components/NavbarComponent.html":{},"classes/NavbarElement.html":{},"components/NavbarElementComponent.html":{},"classes/NavbarItem.html":{},"components/NetworkComponent.html":{},"classes/NodeTopologyElement.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/ReteConnection.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"classes/TagTIP.html":{},"classes/TheaterApplication.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/TypesCatalogueDTO.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"miscellaneous/functions.html":{}}}],["theater.service",{"_index":670,"title":{},"body":{"injectables/AttachmentsService.html":{}}}],["theater.topology",{"_index":2951,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["theater_id",{"_index":667,"title":{},"body":{"injectables/AttachmentsService.html":{},"injectables/TheaterService.html":{}}}],["theater_uuid",{"_index":2651,"title":{},"body":{"injectables/ModuleService.html":{},"injectables/TheaterService.html":{}}}],["theaterapplication",{"_index":445,"title":{"classes/TheaterApplication.html":{}},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"components/VisualizerComponent.html":{},"miscellaneous/functions.html":{}}}],["theaterapplication).validateobject",{"_index":1970,"title":{},"body":{"injectables/FileService.html":{}}}],["theatercomposer",{"_index":844,"title":{},"body":{"components/ComposerComponent.html":{}}}],["theaterdesigner/tddata",{"_index":3092,"title":{},"body":{"injectables/ParseService.html":{}}}],["theaterdto",{"_index":382,"title":{"classes/TheaterDTO.html":{}},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"classes/BlueprintFileDTO.html":{},"interfaces/CommonModule.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/FlavorApplication.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"interfaces/ModuleTopology.html":{},"classes/NameMappingDTO.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/ReteConnection.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"injectables/TheaterService.html":{},"interfaces/TheaterTopology.html":{},"classes/TheatreStatusDTO.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/TypesCatalogueDTO.html":{}}}],["theaterdto:61",{"_index":3538,"title":{},"body":{"classes/TheaterApplication.html":{}}}],["theaterdto:62",{"_index":3539,"title":{},"body":{"classes/TheaterApplication.html":{}}}],["theaterdto:63",{"_index":3540,"title":{},"body":{"classes/TheaterApplication.html":{}}}],["theaterdto:64",{"_index":3541,"title":{},"body":{"classes/TheaterApplication.html":{}}}],["theaterdto:65",{"_index":3542,"title":{},"body":{"classes/TheaterApplication.html":{}}}],["theaterdto:66",{"_index":3543,"title":{},"body":{"classes/TheaterApplication.html":{}}}],["theaterdto:67",{"_index":3544,"title":{},"body":{"classes/TheaterApplication.html":{}}}],["theaterdto:68",{"_index":3545,"title":{},"body":{"classes/TheaterApplication.html":{}}}],["theaterdto:69",{"_index":3546,"title":{},"body":{"classes/TheaterApplication.html":{}}}],["theaterdto:70",{"_index":3547,"title":{},"body":{"classes/TheaterApplication.html":{}}}],["theaterdto:71",{"_index":3548,"title":{},"body":{"classes/TheaterApplication.html":{}}}],["theaterdto:72",{"_index":3549,"title":{},"body":{"classes/TheaterApplication.html":{}}}],["theaterdto:73",{"_index":3550,"title":{},"body":{"classes/TheaterApplication.html":{}}}],["theaterdto:74",{"_index":3551,"title":{},"body":{"classes/TheaterApplication.html":{}}}],["theaterdto:75",{"_index":3552,"title":{},"body":{"classes/TheaterApplication.html":{}}}],["theaterdto:76",{"_index":3553,"title":{},"body":{"classes/TheaterApplication.html":{}}}],["theaterdto:77",{"_index":3554,"title":{},"body":{"classes/TheaterApplication.html":{}}}],["theaterdto:78",{"_index":3555,"title":{},"body":{"classes/TheaterApplication.html":{}}}],["theaterdto:79",{"_index":3556,"title":{},"body":{"classes/TheaterApplication.html":{}}}],["theaterdto:80",{"_index":3557,"title":{},"body":{"classes/TheaterApplication.html":{}}}],["theaterexport",{"_index":628,"title":{"classes/TheaterExport.html":{}},"body":{"classes/AreaExport.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesTSD.html":{},"classes/SourceExport.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{}}}],["theaterinstancedto",{"_index":605,"title":{"classes/TheaterInstanceDTO.html":{}},"body":{"classes/AreaDTO.html":{},"classes/BlueprintFileDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/NameMappingDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterDTO.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheatreStatusDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["theaterinstancepropertiesdto",{"_index":405,"title":{"classes/TheaterInstancePropertiesDTO.html":{}},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"interfaces/CommonModule.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/FlavorApplication.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/ReteConnection.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterApplication.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/TypesCatalogueDTO.html":{}}}],["theaterinternalservicemoduleinstance",{"_index":1462,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/EmptyModuleInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{}}}],["theaterinternalservicemoduleinstance.component",{"_index":3359,"title":{},"body":{"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{}}}],["theaterinternalservicemoduleinstance.component.html",{"_index":3592,"title":{},"body":{"components/TheaterInternalServiceModuleInstanceComponent.html":{}}}],["theaterinternalservicemoduleinstance.component.sass",{"_index":3591,"title":{},"body":{"components/TheaterInternalServiceModuleInstanceComponent.html":{}}}],["theaterinternalservicemoduleinstance/theaterinternalservicemoduleinstancenode",{"_index":1594,"title":{},"body":{"classes/EmptyModuleInfo.html":{}}}],["theaterinternalservicemoduleinstance_icon",{"_index":3603,"title":{},"body":{"components/TheaterInternalServiceModuleInstanceComponent.html":{}}}],["theaterinternalservicemoduleinstancecomponent",{"_index":210,"title":{"components/TheaterInternalServiceModuleInstanceComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"overview.html":{}}}],["theaterinternalservicemoduleinstanceicon",{"_index":3593,"title":{},"body":{"components/TheaterInternalServiceModuleInstanceComponent.html":{}}}],["theaterinternalservicemoduleinstancenode",{"_index":1593,"title":{"classes/TheaterInternalServiceModuleInstanceNode.html":{}},"body":{"classes/EmptyModuleInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"miscellaneous/functions.html":{}}}],["theatermoduleinstance",{"_index":1459,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/EmptyModuleInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["theatermoduleinstance.component",{"_index":3363,"title":{},"body":{"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["theatermoduleinstance.component.html",{"_index":3615,"title":{},"body":{"components/TheaterModuleInstanceComponent.html":{}}}],["theatermoduleinstance.component.sass",{"_index":3614,"title":{},"body":{"components/TheaterModuleInstanceComponent.html":{}}}],["theatermoduleinstance/theatermoduleinstancenode",{"_index":1596,"title":{},"body":{"classes/EmptyModuleInfo.html":{}}}],["theatermoduleinstance_icon",{"_index":3626,"title":{},"body":{"components/TheaterModuleInstanceComponent.html":{}}}],["theatermoduleinstancecomponent",{"_index":211,"title":{"components/TheaterModuleInstanceComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"overview.html":{}}}],["theatermoduleinstanceicon",{"_index":3616,"title":{},"body":{"components/TheaterModuleInstanceComponent.html":{}}}],["theatermoduleinstancenode",{"_index":1595,"title":{"classes/TheaterModuleInstanceNode.html":{}},"body":{"classes/EmptyModuleInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/TheaterModuleInstanceNode.html":{},"miscellaneous/functions.html":{}}}],["theaterproperties",{"_index":2957,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["theaterservice",{"_index":231,"title":{"injectables/TheaterService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AttachmentsService.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"injectables/TheaterService.html":{},"overview.html":{}}}],["theatersimpledata",{"_index":630,"title":{"classes/TheaterSimpleData.html":{}},"body":{"classes/AreaExport.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/ExportTheater.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesTSD.html":{},"classes/SourceExport.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{}}}],["theatersimpledata.properties.areas.push",{"_index":1911,"title":{},"body":{"classes/ExportTheater.html":{}}}],["theatersimpledata.properties.tags.push",{"_index":1915,"title":{},"body":{"classes/ExportTheater.html":{}}}],["theatertopology",{"_index":475,"title":{"interfaces/TheaterTopology.html":{}},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["theatertype",{"_index":1511,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"injectables/ExportService.html":{},"injectables/FileService.html":{},"classes/ParseDataForTheaterVisualizer.html":{}}}],["theatertype=\".\"+subjecttype.theater.tolowercase",{"_index":1854,"title":{},"body":{"injectables/ExportService.html":{}}}],["theatertypeexport",{"_index":617,"title":{},"body":{"classes/AreaExport.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/ExportTheater.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesTSD.html":{},"classes/SourceExport.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{}}}],["theatertypeexport.theater",{"_index":1907,"title":{},"body":{"classes/ExportTheater.html":{}}}],["theateruuid",{"_index":2925,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["theatervisualizer",{"_index":3747,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["theatervisualizer/tvdata",{"_index":3089,"title":{},"body":{"injectables/ParseService.html":{}}}],["theatre",{"_index":1504,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["theatremoduleinstance",{"_index":1461,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/EmptyModuleInfo.html":{}}}],["theatrestatusdto",{"_index":748,"title":{"classes/TheatreStatusDTO.html":{}},"body":{"classes/BlueprintFileDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/NameMappingDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheatreStatusDTO.html":{}}}],["then((v",{"_index":2122,"title":{},"body":{"components/HomeComponent.html":{}}}],["this._data",{"_index":3456,"title":{},"body":{"injectables/StorageService.html":{}}}],["this._show",{"_index":2453,"title":{},"body":{"components/ModalComponent.html":{},"components/OffcanvasComponent.html":{}}}],["this._value",{"_index":1313,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["this.active",{"_index":928,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["this.active(this.element.element[0].id",{"_index":3517,"title":{},"body":{"components/TabnavComponent.html":{}}}],["this.activetab",{"_index":3518,"title":{},"body":{"components/TabnavComponent.html":{}}}],["this.authenticated",{"_index":718,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["this.author",{"_index":902,"title":{},"body":{"components/ComposerComponent.html":{},"components/HomeComponent.html":{}}}],["this.branch",{"_index":2102,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.cdr.detectchanges",{"_index":154,"title":{},"body":{"components/AppComponent.html":{},"components/DataInputComponent.html":{},"components/DataItemComponent.html":{},"components/OffcanvasComponent.html":{},"components/TabnavComponent.html":{}}}],["this.compodoc_index_html",{"_index":1553,"title":{},"body":{"components/DocsComponent.html":{}}}],["this.component",{"_index":1055,"title":{},"body":{"components/ControlTemplate.html":{},"classes/_Control.html":{}}}],["this.components",{"_index":3286,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["this.container",{"_index":3284,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["this.createnewnode(node",{"_index":2334,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["this.data",{"_index":912,"title":{},"body":{"components/ComposerComponent.html":{}}}],["this.data.component",{"_index":2332,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["this.data.render",{"_index":2331,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["this.data_input_template",{"_index":2107,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.dataeditor",{"_index":1700,"title":{},"body":{"classes/ExportModule.html":{},"classes/ExportTheater.html":{}}}],["this.dataeditor.nodes",{"_index":1709,"title":{},"body":{"classes/ExportModule.html":{},"classes/ExportTheater.html":{}}}],["this.dataeditor.nodes[c.node",{"_index":1758,"title":{},"body":{"classes/ExportModule.html":{},"classes/ExportTheater.html":{}}}],["this.dataeditor.nodes[key",{"_index":1710,"title":{},"body":{"classes/ExportModule.html":{},"classes/ExportTheater.html":{}}}],["this.dataform",{"_index":1180,"title":{},"body":{"components/DataInputComponent.html":{}}}],["this.dataform.addcontrol(e.id",{"_index":1183,"title":{},"body":{"components/DataInputComponent.html":{}}}],["this.datafromrouter",{"_index":896,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["this.datafromrouter.author",{"_index":903,"title":{},"body":{"components/ComposerComponent.html":{}}}],["this.datafromrouter.description",{"_index":901,"title":{},"body":{"components/ComposerComponent.html":{}}}],["this.datafromrouter.id",{"_index":3760,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.datafromrouter.name",{"_index":899,"title":{},"body":{"components/ComposerComponent.html":{}}}],["this.datafromrouter.type",{"_index":905,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["this.datainputelement",{"_index":1324,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["this.datainputelement.element",{"_index":1322,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["this.datamodal",{"_index":2106,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.datasubmitted.emit(val",{"_index":1196,"title":{},"body":{"components/DataInputComponent.html":{}}}],["this.description",{"_index":900,"title":{},"body":{"components/ComposerComponent.html":{},"components/HomeComponent.html":{}}}],["this.directchange",{"_index":1308,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["this.editor",{"_index":3285,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["this.editor.nodes",{"_index":3303,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["this.editor.tojson",{"_index":3305,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["this.editor.trigger(\"redo",{"_index":3300,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["this.editor.trigger(\"undo",{"_index":3298,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["this.editor.use(angularrenderplugin",{"_index":3289,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["this.editor.use(areaplugin",{"_index":3310,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["this.editor.use(autoarrangeplugin",{"_index":3319,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["this.editor.use(connectionplugin",{"_index":3288,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["this.editor.use(contextmenuplugin",{"_index":3294,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["this.editor.use(historyplugin",{"_index":3292,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["this.editor.use(minimapplugin",{"_index":3291,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["this.element",{"_index":3710,"title":{},"body":{"components/UnderbarComponent.html":{}}}],["this.element.element.foreach",{"_index":1186,"title":{},"body":{"components/DataInputComponent.html":{},"components/NavbarComponent.html":{}}}],["this.element.element.foreach(e",{"_index":1181,"title":{},"body":{"components/DataInputComponent.html":{}}}],["this.element.element.length",{"_index":3516,"title":{},"body":{"components/TabnavComponent.html":{}}}],["this.element.foreach",{"_index":3711,"title":{},"body":{"components/UnderbarComponent.html":{}}}],["this.emitter.trigger('process",{"_index":1061,"title":{},"body":{"components/ControlTemplate.html":{},"classes/_Control.html":{}}}],["this.engine",{"_index":3287,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["this.filejson",{"_index":2123,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.fileloaded",{"_index":2124,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.fileservice.onfileselected(event",{"_index":2121,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.findnode(i.network.name",{"_index":1804,"title":{},"body":{"classes/ExportModule.html":{}}}],["this.fixtheatername(rowtheater",{"_index":2956,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["this.flavor",{"_index":926,"title":{},"body":{"components/ComposerComponent.html":{}}}],["this.flavorservice.getallflavor",{"_index":3109,"title":{},"body":{"classes/PerseDataForModuleComposer.html":{}}}],["this.formelementcomposer",{"_index":2104,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.formelementmodal",{"_index":2103,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.formelementvisualizer",{"_index":2105,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.formtype",{"_index":1323,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["this.get_and_remove_theater_properties_from_blueprint(rowtheater",{"_index":2958,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["this.getcheckbox",{"_index":1326,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["this.gethostexport(element",{"_index":1714,"title":{},"body":{"classes/ExportModule.html":{}}}],["this.getmainmoduledetails(module",{"_index":3150,"title":{},"body":{"classes/PerseDataForModuleVisualizer.html":{}}}],["this.getmainmoduleinterfaces(module",{"_index":3153,"title":{},"body":{"classes/PerseDataForModuleVisualizer.html":{}}}],["this.getmainmodulenodes(module",{"_index":3152,"title":{},"body":{"classes/PerseDataForModuleVisualizer.html":{}}}],["this.getmainmoduletopology(parsedmodule",{"_index":3151,"title":{},"body":{"classes/PerseDataForModuleVisualizer.html":{}}}],["this.getmodal",{"_index":2534,"title":{},"body":{"injectables/ModalService.html":{}}}],["this.getmoduleconnection(theater",{"_index":2952,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["this.getmoduledict(rowmodules",{"_index":2978,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["this.getmoduleexport",{"_index":1730,"title":{},"body":{"classes/ExportModule.html":{}}}],["this.getmoduleinstanceexport(element",{"_index":1887,"title":{},"body":{"classes/ExportTheater.html":{}}}],["this.getmodulesdetails(modules",{"_index":2982,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["this.getmodulesinterfaces(modules",{"_index":2987,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["this.getmodulesnodes(modules",{"_index":2986,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["this.getmodulestopology(modules",{"_index":2979,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["this.getnetworkexport(element",{"_index":1718,"title":{},"body":{"classes/ExportModule.html":{}}}],["this.getselection",{"_index":1328,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["this.getsubnetexport(element",{"_index":1716,"title":{},"body":{"classes/ExportModule.html":{}}}],["this.gettext",{"_index":1325,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["this.gettheaterexport",{"_index":1888,"title":{},"body":{"classes/ExportTheater.html":{}}}],["this.hasfile",{"_index":911,"title":{},"body":{"components/ComposerComponent.html":{}}}],["this.hasmultipletag",{"_index":3515,"title":{},"body":{"components/TabnavComponent.html":{}}}],["this.hasproblem",{"_index":917,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["this.headers",{"_index":3680,"title":{},"body":{"injectables/TokenService.html":{}}}],["this.http.get",{"_index":2008,"title":{},"body":{"injectables/FlavorService.html":{},"injectables/ModuleService.html":{},"injectables/TheaterService.html":{}}}],["this.http.get('assets/documentation/index.html",{"_index":1551,"title":{},"body":{"components/DocsComponent.html":{}}}],["this.http.get(link",{"_index":679,"title":{},"body":{"injectables/AttachmentsService.html":{}}}],["this.httpgetoption",{"_index":3683,"title":{},"body":{"injectables/TokenService.html":{}}}],["this.id",{"_index":2114,"title":{},"body":{"components/HomeComponent.html":{},"components/VisualizerComponent.html":{}}}],["this.idforchanges",{"_index":1311,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["this.initemptymoduleinstance(modules",{"_index":3180,"title":{},"body":{"classes/PerseDataForTheaterComposer.html":{}}}],["this.initmodule",{"_index":919,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["this.inittheater",{"_index":921,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["this.inittheaterafterfetch(rowtheater",{"_index":2955,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["this.isfilevalid(this.selectedfile",{"_index":1957,"title":{},"body":{"injectables/FileService.html":{}}}],["this.isfull",{"_index":1402,"title":{},"body":{"components/DataItemComponent.html":{},"components/OffcanvasComponent.html":{}}}],["this.ismodalactive",{"_index":2112,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.itemselected.emit(event",{"_index":3716,"title":{},"body":{"components/UnderbarComponent.html":{}}}],["this.itemselected.emit(val",{"_index":2700,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.keycloak.login",{"_index":720,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["this.mocked",{"_index":3094,"title":{},"body":{"injectables/ParseService.html":{}}}],["this.modal.modaldata.asobservable().subscribe(v",{"_index":155,"title":{},"body":{"components/AppComponent.html":{}}}],["this.modal.show.asobservable().subscribe(v",{"_index":158,"title":{},"body":{"components/AppComponent.html":{}}}],["this.modaldata",{"_index":156,"title":{},"body":{"components/AppComponent.html":{}}}],["this.modaldata.next(modalitem",{"_index":2523,"title":{},"body":{"injectables/ModalService.html":{}}}],["this.module",{"_index":918,"title":{},"body":{"components/ComposerComponent.html":{},"classes/ExportModule.html":{},"components/VisualizerComponent.html":{}}}],["this.module.description",{"_index":1704,"title":{},"body":{"classes/ExportModule.html":{}}}],["this.module.imports",{"_index":1706,"title":{},"body":{"classes/ExportModule.html":{}}}],["this.module.interfaces.foreach(i",{"_index":1794,"title":{},"body":{"classes/ExportModule.html":{}}}],["this.module.version",{"_index":1789,"title":{},"body":{"classes/ExportModule.html":{}}}],["this.modulesdict",{"_index":933,"title":{},"body":{"components/ComposerComponent.html":{}}}],["this.moduleservice).parsetheaterfortheatervisualizer(id",{"_index":3097,"title":{},"body":{"injectables/ParseService.html":{}}}],["this.moduleservice.getallmodules",{"_index":3181,"title":{},"body":{"classes/PerseDataForTheaterComposer.html":{}}}],["this.moduleservice.getmodulebyid(id",{"_index":3148,"title":{},"body":{"classes/PerseDataForModuleVisualizer.html":{}}}],["this.moduleservice.getmodulehostbytheateruuid(module.uuid",{"_index":3155,"title":{},"body":{"classes/PerseDataForModuleVisualizer.html":{}}}],["this.moduleservice.getmodulehostbytheateruuid(simplemoduledto.uuid",{"_index":2993,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["this.moduleservice.getmoduleinterfacesbymoduleid(module.id",{"_index":3156,"title":{},"body":{"classes/PerseDataForModuleVisualizer.html":{}}}],["this.moduleservice.getmoduleinterfacesbymoduleid(simplemoduledto.id",{"_index":2995,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["this.mounted",{"_index":1044,"title":{},"body":{"components/ControlTemplate.html":{},"classes/_Control.html":{}}}],["this.name",{"_index":898,"title":{},"body":{"components/ComposerComponent.html":{},"components/HomeComponent.html":{}}}],["this.onbuttonpressed.emit(val",{"_index":2456,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.onchange(v",{"_index":1057,"title":{},"body":{"components/ControlTemplate.html":{},"classes/_Control.html":{}}}],["this.onchange.emit",{"_index":1310,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["this.onremove.emit(null",{"_index":1403,"title":{},"body":{"components/DataItemComponent.html":{}}}],["this.parseflavor(flavordto",{"_index":3110,"title":{},"body":{"classes/PerseDataForModuleComposer.html":{}}}],["this.parsemainmodule(id",{"_index":3147,"title":{},"body":{"classes/PerseDataForModuleVisualizer.html":{}}}],["this.parsemoduleinstance(theater",{"_index":2950,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["this.parsemodulelist",{"_index":3179,"title":{},"body":{"classes/PerseDataForTheaterComposer.html":{}}}],["this.parsemodulesfromtheater(theater.uuid",{"_index":2946,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["this.parseservice.parseflavorformodulecomposer",{"_index":924,"title":{},"body":{"components/ComposerComponent.html":{}}}],["this.parseservice.parsemoduleformodulevisualizer(this.id",{"_index":3761,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.parseservice.parsemodulefortheatercomposer",{"_index":931,"title":{},"body":{"components/ComposerComponent.html":{}}}],["this.parseservice.parsetheaterfortheatervisualizer(this.id",{"_index":3763,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.parsetheater(id",{"_index":2945,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["this.props",{"_index":1056,"title":{},"body":{"components/ControlTemplate.html":{},"classes/_Control.html":{}}}],["this.props.value",{"_index":1063,"title":{},"body":{"components/ControlTemplate.html":{},"classes/_Control.html":{}}}],["this.putdata(this.key",{"_index":1065,"title":{},"body":{"components/ControlTemplate.html":{},"classes/_Control.html":{}}}],["this.required",{"_index":1332,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["this.returnoutput(event",{"_index":1195,"title":{},"body":{"components/DataInputComponent.html":{}}}],["this.roles.includes(role",{"_index":738,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["this.router.getcurrentnavigation().extras.state",{"_index":897,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["this.router.navigate(['/home",{"_index":934,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["this.router.navigatebyurl",{"_index":2120,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.sanitizer.bypasssecuritytrusthtml(data",{"_index":1554,"title":{},"body":{"components/DocsComponent.html":{}}}],["this.selectedfile",{"_index":1946,"title":{},"body":{"injectables/FileService.html":{}}}],["this.selectoption",{"_index":1327,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["this.selectoption.findindex((el",{"_index":1334,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["this.setconfirmationmodal",{"_index":2516,"title":{},"body":{"injectables/ModalService.html":{}}}],["this.setconfirmationmodal(text_content",{"_index":2533,"title":{},"body":{"injectables/ModalService.html":{}}}],["this.setspinner(false",{"_index":3427,"title":{},"body":{"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{}}}],["this.setvalue(+(this.getdata(key",{"_index":1058,"title":{},"body":{"components/ControlTemplate.html":{},"classes/_Control.html":{}}}],["this.setvalue(val",{"_index":1060,"title":{},"body":{"components/ControlTemplate.html":{},"classes/_Control.html":{}}}],["this.show",{"_index":2820,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["this.show.next(false",{"_index":2532,"title":{},"body":{"injectables/ModalService.html":{}}}],["this.show.next(true",{"_index":2524,"title":{},"body":{"injectables/ModalService.html":{}}}],["this.show=false",{"_index":2454,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.show=true",{"_index":2455,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.showchange.emit(val",{"_index":2452,"title":{},"body":{"components/ModalComponent.html":{},"components/OffcanvasComponent.html":{}}}],["this.showmodal",{"_index":159,"title":{},"body":{"components/AppComponent.html":{}}}],["this.showports",{"_index":2217,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["this.showspinner",{"_index":150,"title":{},"body":{"components/AppComponent.html":{}}}],["this.spinner",{"_index":146,"title":{},"body":{"components/AppComponent.html":{}}}],["this.spinner.subscribe",{"_index":148,"title":{},"body":{"components/AppComponent.html":{}}}],["this.spinnerdata.asobservable",{"_index":3430,"title":{},"body":{"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{}}}],["this.spinnerdata.next",{"_index":3432,"title":{},"body":{"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{}}}],["this.spinnerservice.setspinner(false",{"_index":927,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["this.spinnerservice.setspinner(true",{"_index":922,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["this.ss.hide",{"_index":3434,"title":{},"body":{"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{}}}],["this.ss.show",{"_index":3433,"title":{},"body":{"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{}}}],["this.startapplication",{"_index":2119,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.storageservice.data",{"_index":910,"title":{},"body":{"components/ComposerComponent.html":{},"components/HomeComponent.html":{}}}],["this.textspinner",{"_index":152,"title":{},"body":{"components/AppComponent.html":{}}}],["this.theater",{"_index":920,"title":{},"body":{"components/ComposerComponent.html":{},"classes/ExportTheater.html":{},"components/VisualizerComponent.html":{}}}],["this.theater.author",{"_index":1909,"title":{},"body":{"classes/ExportTheater.html":{}}}],["this.theater.blueprintfile.imports",{"_index":1886,"title":{},"body":{"classes/ExportTheater.html":{}}}],["this.theater.description",{"_index":1884,"title":{},"body":{"classes/ExportTheater.html":{}}}],["this.theater.properties.areas.foreach(a",{"_index":1910,"title":{},"body":{"classes/ExportTheater.html":{}}}],["this.theater.tags.foreach(t",{"_index":1914,"title":{},"body":{"classes/ExportTheater.html":{}}}],["this.theater.version",{"_index":1908,"title":{},"body":{"classes/ExportTheater.html":{}}}],["this.theaterservice.gettheaterinfobyid(id",{"_index":2954,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["this.theaterservice.gettheatermodulesbyuuid(theateruuid",{"_index":2977,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["this.title",{"_index":1312,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["this.token",{"_index":3679,"title":{},"body":{"injectables/TokenService.html":{}}}],["this.tokenservice.gethttpgetoption",{"_index":2009,"title":{},"body":{"injectables/FlavorService.html":{},"injectables/ModuleService.html":{},"injectables/TheaterService.html":{}}}],["this.type",{"_index":904,"title":{},"body":{"components/ComposerComponent.html":{},"components/HomeComponent.html":{},"components/VisualizerComponent.html":{}}}],["this.type.tolowercase",{"_index":2130,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.valorizenode(node",{"_index":2335,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["this.value",{"_index":1331,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["this.value.asobservable",{"_index":2517,"title":{},"body":{"injectables/ModalService.html":{}}}],["this.value.next(false",{"_index":2529,"title":{},"body":{"injectables/ModalService.html":{}}}],["this.value.next(null",{"_index":2518,"title":{},"body":{"injectables/ModalService.html":{}}}],["this.value.next(true",{"_index":2527,"title":{},"body":{"injectables/ModalService.html":{}}}],["this.valuechange.emit(val",{"_index":1309,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["this.virtualmachines",{"_index":1729,"title":{},"body":{"classes/ExportModule.html":{}}}],["this.virtualmachines.push(msdvm",{"_index":1773,"title":{},"body":{"classes/ExportModule.html":{}}}],["ti",{"_index":1906,"title":{},"body":{"classes/ExportTheater.html":{}}}],["ti[this.theater.name",{"_index":1917,"title":{},"body":{"classes/ExportTheater.html":{}}}],["times",{"_index":2458,"title":{},"body":{"components/ModalComponent.html":{}}}],["tipi",{"_index":895,"title":{},"body":{"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"components/HomeComponent.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/_Control.html":{}}}],["tipo",{"_index":18,"title":{},"body":{"classes/Aoption.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"injectables/AttachmentsService.html":{},"injectables/AuthGuard.html":{},"classes/BlueprintFileDTO.html":{},"classes/BorderNetworkDTO.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"components/ControlTemplate.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputReturnedV2.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/DeployInstanceDTO.html":{},"components/DocsComponent.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"classes/FlavorApplication.html":{},"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"injectables/FlavorService.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"classes/HostModuleDTO.html":{},"classes/HostNode.html":{},"classes/HostPortModuleDTO.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModalButton.html":{},"components/ModalComponent.html":{},"classes/ModalItem.html":{},"injectables/ModalService.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"injectables/ModuleService.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"interfaces/ModuleTopology.html":{},"classes/NameMappingDTO.html":{},"components/NavbarComponent.html":{},"classes/NavbarElement.html":{},"classes/NavbarItem.html":{},"classes/NetOSRouterDTO.html":{},"components/NetworkComponent.html":{},"classes/NetworkDTO.html":{},"classes/NetworkNode.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/NodeTopologyElement.html":{},"components/OffcanvasComponent.html":{},"classes/PageableDTO.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SelectOption.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/SingleDataInputReturned.html":{},"classes/SortDTO.html":{},"classes/SourceExport.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"classes/StatisticItemDTO.html":{},"injectables/StorageService.html":{},"components/SubnetComponent.html":{},"classes/SubnetDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"components/TabnavComponent.html":{},"classes/TabnavElement.html":{},"classes/TabnavItem.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"injectables/TheaterService.html":{},"classes/TheaterSimpleData.html":{},"interfaces/TheaterTopology.html":{},"classes/TheatreStatusDTO.html":{},"injectables/TokenService.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/TypesCatalogueDTO.html":{},"components/UnderbarComponent.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{},"miscellaneous/functions.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["title",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/ModalButton.html":{},"classes/ModalItem.html":{},"injectables/ModalService.html":{},"components/NavbarComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["title,.output",{"_index":2252,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["title_template",{"_index":2790,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["titolo",{"_index":128,"title":{},"body":{"components/AppComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/NavbarComponent.html":{},"components/OffcanvasComponent.html":{},"components/TabnavComponent.html":{}}}],["todo",{"_index":1465,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/EmptyModuleInfo.html":{}}}],["toggle",{"_index":1107,"title":{},"body":{"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{}}}],["token",{"_index":3655,"title":{},"body":{"injectables/TokenService.html":{}}}],["token/token.service",{"_index":669,"title":{},"body":{"injectables/AttachmentsService.html":{},"injectables/FlavorService.html":{},"injectables/ModuleService.html":{},"injectables/TheaterService.html":{}}}],["tokenservice",{"_index":232,"title":{"injectables/TokenService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AttachmentsService.html":{},"injectables/FlavorService.html":{},"injectables/ModuleService.html":{},"injectables/TheaterService.html":{},"injectables/TokenService.html":{},"overview.html":{}}}],["toker",{"_index":3653,"title":{},"body":{"injectables/TokenService.html":{}}}],["tooltiptext",{"_index":3723,"title":{},"body":{"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{}}}],["toopeniconclass",{"_index":1368,"title":{},"body":{"components/DataItemComponent.html":{},"components/OffcanvasComponent.html":{}}}],["top",{"_index":1415,"title":{},"body":{"components/DataItemComponent.html":{},"components/OffcanvasComponent.html":{}}}],["topologia",{"_index":2902,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["topologie",{"_index":3145,"title":{},"body":{"classes/PerseDataForModuleVisualizer.html":{}}}],["topology",{"_index":417,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["topologyelement",{"_index":467,"title":{"classes/TopologyElement.html":{}},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["topologylist",{"_index":466,"title":{"interfaces/TopologyList.html":{}},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["topromise",{"_index":2010,"title":{},"body":{"injectables/FlavorService.html":{},"injectables/ModuleService.html":{},"injectables/TheaterService.html":{}}}],["toreduceiconclass",{"_index":1369,"title":{},"body":{"components/DataItemComponent.html":{},"components/OffcanvasComponent.html":{}}}],["tosca",{"_index":627,"title":{},"body":{"classes/AreaExport.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/SourceExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["tosca_definitions_version",{"_index":629,"title":{},"body":{"classes/AreaExport.html":{},"classes/BlueprintFileDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/DeployInstanceDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleSimpleData.html":{},"classes/NameMappingDTO.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/SourceExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagsExport.html":{},"classes/TheaterDTO.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{},"classes/TheatreStatusDTO.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["toscadefinitiontype",{"_index":618,"title":{},"body":{"classes/AreaExport.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/SourceExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["toscadefinitiontype.cloudify",{"_index":1702,"title":{},"body":{"classes/ExportModule.html":{},"classes/ExportTheater.html":{}}}],["tosee",{"_index":771,"title":{},"body":{"classes/BlueprintFileDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/NameMappingDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TheaterDTO.html":{},"classes/TheatreStatusDTO.html":{}}}],["totalelements",{"_index":508,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["totalpages",{"_index":507,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["tra",{"_index":3183,"title":{},"body":{"classes/PerseDataForTheaterComposer.html":{}}}],["transform",{"_index":2178,"title":{},"body":{"components/HomeComponent.html":{},"components/NavbarElementComponent.html":{}}}],["transition",{"_index":2177,"title":{},"body":{"components/HomeComponent.html":{},"components/NavbarElementComponent.html":{}}}],["translateextent",{"_index":3316,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["trattando",{"_index":1256,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["tratti",{"_index":1423,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["tree",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["trigger",{"_index":2231,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["trova",{"_index":2473,"title":{},"body":{"injectables/ModalService.html":{}}}],["trovare",{"_index":1668,"title":{},"body":{"classes/ExportModule.html":{}}}],["true",{"_index":338,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthGuard.html":{},"components/ComposerComponent.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"injectables/FileService.html":{},"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NetworkComponent.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{},"components/VisualizerComponent.html":{}}}],["try",{"_index":1955,"title":{},"body":{"injectables/FileService.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["tslib",{"_index":3818,"title":{},"body":{"dependencies.html":{}}}],["tuo",{"_index":3916,"title":{},"body":{"modules.html":{}}}],["tutte",{"_index":832,"title":{},"body":{"components/ComposerComponent.html":{},"injectables/ModalService.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"components/VisualizerComponent.html":{}}}],["tutti",{"_index":458,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/ExportModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"components/UnderbarComponent.html":{}}}],["two",{"_index":1420,"title":{},"body":{"components/DataItemComponent.html":{}}}],["type",{"_index":37,"title":{},"body":{"classes/Aoption.html":{},"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"injectables/AttachmentsService.html":{},"classes/BlueprintFileDTO.html":{},"classes/BorderNetworkDTO.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"components/ControlTemplate.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"components/DocsComponent.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"classes/FlavorDTO.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"classes/HostNode.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModalButton.html":{},"components/ModalComponent.html":{},"classes/ModalItem.html":{},"injectables/ModalService.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"classes/NavbarElement.html":{},"classes/NavbarItem.html":{},"classes/NetOSRouterDTO.html":{},"components/NetworkComponent.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkNode.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/NodeTopologyElement.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SelectOption.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/SingleDataInputReturned.html":{},"classes/SourceExport.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"classes/StatisticItemDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"components/TabnavComponent.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/TheaterSimpleData.html":{},"interfaces/TheaterTopology.html":{},"injectables/TokenService.html":{},"classes/TopologyElement.html":{},"classes/TypesCatalogueDTO.html":{},"components/UnderbarComponent.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{},"miscellaneous/functions.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["typeahead",{"_index":299,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["typeexport",{"_index":619,"title":{},"body":{"classes/AreaExport.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/SourceExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["typescataloguedto",{"_index":516,"title":{"classes/TypesCatalogueDTO.html":{}},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["ubuntu",{"_index":1441,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["un",{"_index":45,"title":{},"body":{"classes/Aoption.html":{},"classes/AreaDTO.html":{},"classes/BlueprintFileDTO.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"components/DataInputV2Component.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/DeployInstanceDTO.html":{},"components/DocsComponent.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"classes/HostNode.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/MirroringModuleInstanceNode.html":{},"injectables/ModalService.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"classes/NameMappingDTO.html":{},"components/NavbarComponent.html":{},"classes/NavbarElement.html":{},"classes/NavbarItem.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkNode.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterDTO.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/TheatreStatusDTO.html":{},"injectables/TokenService.html":{},"classes/TypesCatalogueDTO.html":{},"components/UnderbarComponent.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"components/VisualizerComponent.html":{},"miscellaneous/functions.html":{}}}],["un'instanza",{"_index":3867,"title":{},"body":{"miscellaneous/functions.html":{}}}],["una",{"_index":828,"title":{},"body":{"components/ComposerComponent.html":{},"components/DataItemComponent.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SubnetNode.html":{},"components/TabnavComponent.html":{},"classes/TabnavElement.html":{},"classes/TabnavItem.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"miscellaneous/functions.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["unauthenticated",{"_index":717,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["undefined",{"_index":913,"title":{},"body":{"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"classes/ExportModule.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"classes/NetworkNode.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteNetworkInfo.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/_Control.html":{}}}],["underbar",{"_index":3692,"title":{},"body":{"components/UnderbarComponent.html":{}}}],["underbar'},{'name",{"_index":213,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["underbar.component.html",{"_index":3696,"title":{},"body":{"components/UnderbarComponent.html":{}}}],["underbar.component.sass",{"_index":3695,"title":{},"body":{"components/UnderbarComponent.html":{}}}],["underbarcomponent",{"_index":212,"title":{"components/UnderbarComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{},"components/VisualizerComponent.html":{},"overview.html":{}}}],["underbarelement",{"_index":3701,"title":{"classes/UnderbarElement.html":{}},"body":{"components/UnderbarComponent.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{}}}],["underbaritem",{"_index":3706,"title":{"classes/UnderbarItem.html":{}},"body":{"components/UnderbarComponent.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{}}}],["underbartype",{"_index":3708,"title":{},"body":{"components/UnderbarComponent.html":{}}}],["underline",{"_index":1347,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["undo",{"_index":3297,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"index.html":{}}}],["unit",{"_index":3905,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":664,"title":{},"body":{"injectables/AttachmentsService.html":{},"components/ControlTemplate.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"injectables/ModuleService.html":{},"injectables/ParseService.html":{},"injectables/TheaterService.html":{},"injectables/TokenService.html":{},"classes/_Control.html":{}}}],["uno",{"_index":1388,"title":{},"body":{"components/DataItemComponent.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["unpaged",{"_index":2845,"title":{},"body":{"classes/PageableDTO.html":{},"classes/SortDTO.html":{}}}],["unselected",{"_index":2826,"title":{},"body":{"components/OffcanvasComponent.html":{},"components/TabnavComponent.html":{}}}],["unsorted",{"_index":2853,"title":{},"body":{"classes/PageableDTO.html":{},"classes/SortDTO.html":{}}}],["update/install",{"_index":3876,"title":{},"body":{"index.html":{}}}],["updated",{"_index":547,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["updatetime",{"_index":1236,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["upload",{"_index":2143,"title":{},"body":{"components/HomeComponent.html":{}}}],["url",{"_index":686,"title":{},"body":{"injectables/AttachmentsService.html":{},"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["url(/../assets/images/bg",{"_index":2153,"title":{},"body":{"components/HomeComponent.html":{}}}],["usare",{"_index":3172,"title":{},"body":{"classes/PerseDataForTheaterComposer.html":{}}}],["usata",{"_index":1131,"title":{},"body":{"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/ExportModule.html":{},"components/ModalComponent.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{},"miscellaneous/functions.html":{}}}],["usato",{"_index":1110,"title":{},"body":{"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/ModalButton.html":{},"classes/ModalItem.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{}}}],["uscita",{"_index":1673,"title":{},"body":{"classes/ExportModule.html":{}}}],["use",{"_index":362,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/HowToUseComponent.html":{},"components/NavbarElementComponent.html":{},"index.html":{}}}],["use'},{'name",{"_index":191,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["use.component",{"_index":265,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["use.component.css",{"_index":2349,"title":{},"body":{"components/HowToUseComponent.html":{}}}],["use.component.html",{"_index":2350,"title":{},"body":{"components/HowToUseComponent.html":{}}}],["use.component.ts",{"_index":2348,"title":{},"body":{"components/HowToUseComponent.html":{}}}],["use.component.ts:12",{"_index":2352,"title":{},"body":{"components/HowToUseComponent.html":{}}}],["use.component.ts:8",{"_index":2351,"title":{},"body":{"components/HowToUseComponent.html":{}}}],["use/how",{"_index":264,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/HowToUseComponent.html":{}}}],["use_external_resource",{"_index":1014,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/ExportModule.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["usefactory",{"_index":336,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":714,"title":{},"body":{"injectables/AuthGuard.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["usevalue",{"_index":340,"title":{},"body":{"modules/AppModule.html":{}}}],["utf",{"_index":1950,"title":{},"body":{"injectables/FileService.html":{}}}],["utility/app.guard",{"_index":358,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["utility/app.init",{"_index":293,"title":{},"body":{"modules/AppModule.html":{}}}],["utilizzabili",{"_index":1990,"title":{},"body":{"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{}}}],["utilizzare",{"_index":1045,"title":{},"body":{"components/ControlTemplate.html":{},"injectables/ExportService.html":{},"classes/_Control.html":{}}}],["utilizzata",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaExport.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/FlavorApplication.html":{},"components/HomeComponent.html":{},"classes/HostNode.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/MirroringModuleInstanceNode.html":{},"injectables/ModalService.html":{},"classes/ModuleApplication.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleSimpleData.html":{},"interfaces/ModuleTopology.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkNode.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/NodeTopologyElement.html":{},"components/OffcanvasComponent.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SimpleModuleApplication.html":{},"classes/SourceExport.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"components/TabnavComponent.html":{},"classes/TagsExport.html":{},"classes/TheaterApplication.html":{},"classes/TheaterExport.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/TheaterSimpleData.html":{},"interfaces/TheaterTopology.html":{},"injectables/TokenService.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"miscellaneous/functions.html":{}}}],["utilizzati",{"_index":423,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["utilizzato",{"_index":1597,"title":{},"body":{"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/TabnavElement.html":{},"classes/TabnavItem.html":{}}}],["uuid",{"_index":373,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaDTO.html":{},"classes/BlueprintFileDTO.html":{},"classes/BorderNetworkDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/HostModuleDTO.html":{},"classes/HostPortModuleDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/NameMappingDTO.html":{},"classes/NetOSRouterDTO.html":{},"classes/NetworkDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/SubnetDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheatreStatusDTO.html":{},"classes/TypesCatalogueDTO.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{}}}],["v",{"_index":157,"title":{},"body":{"components/AppComponent.html":{},"components/ControlTemplate.html":{},"components/HomeComponent.html":{},"classes/_Control.html":{}}}],["v2",{"_index":1228,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["v2'},{'name",{"_index":181,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["v2.component",{"_index":317,"title":{},"body":{"modules/AppModule.html":{}}}],["v2.component.html",{"_index":1230,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["v2.component.sass",{"_index":1229,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["v2.component.ts",{"_index":1221,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["v2.component.ts:107",{"_index":1294,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["v2.component.ts:123",{"_index":1293,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["v2.component.ts:136",{"_index":1292,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["v2.component.ts:152",{"_index":1291,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["v2.component.ts:169",{"_index":1297,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["v2.component.ts:181",{"_index":1290,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["v2.component.ts:21",{"_index":1299,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["v2.component.ts:30",{"_index":1270,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["v2.component.ts:37",{"_index":1304,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["v2.component.ts:40",{"_index":1288,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["v2.component.ts:46",{"_index":1285,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["v2.component.ts:54",{"_index":1261,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["v2.component.ts:62",{"_index":1246,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["v2.component.ts:68",{"_index":1268,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["v2.component.ts:78",{"_index":1253,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["v2.component.ts:81",{"_index":1267,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["v2.component.ts:82",{"_index":1244,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["v2.component.ts:83",{"_index":1266,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["v2.component.ts:89",{"_index":1302,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["v2.component.ts:94",{"_index":1243,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["v2/data",{"_index":316,"title":{},"body":{"modules/AppModule.html":{},"components/DataInputV2Component.html":{}}}],["v2/datainputtypev2.ts",{"_index":1209,"title":{},"body":{"classes/DataInputReturnedV2.html":{}}}],["v2/datainputtypev2.ts:6",{"_index":1214,"title":{},"body":{"classes/DataInputReturnedV2.html":{}}}],["v2/datainputtypev2.ts:7",{"_index":1216,"title":{},"body":{"classes/DataInputReturnedV2.html":{}}}],["v2/datainputtypev2.ts:8",{"_index":1215,"title":{},"body":{"classes/DataInputReturnedV2.html":{}}}],["va",{"_index":2290,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"injectables/ModalService.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["val",{"_index":1064,"title":{},"body":{"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/HomeComponent.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"components/NavbarComponent.html":{},"components/OffcanvasComponent.html":{},"components/TabnavComponent.html":{},"injectables/TokenService.html":{},"classes/_Control.html":{}}}],["val.checked",{"_index":1192,"title":{},"body":{"components/DataInputComponent.html":{}}}],["val.element[\"id\"].value",{"_index":2115,"title":{},"body":{"components/HomeComponent.html":{}}}],["val.element['author'].value",{"_index":2118,"title":{},"body":{"components/HomeComponent.html":{}}}],["val.element['description'].value",{"_index":2117,"title":{},"body":{"components/HomeComponent.html":{}}}],["val.element['name'].value",{"_index":2116,"title":{},"body":{"components/HomeComponent.html":{}}}],["val.isvalid",{"_index":2113,"title":{},"body":{"components/HomeComponent.html":{}}}],["val.value",{"_index":1193,"title":{},"body":{"components/DataInputComponent.html":{}}}],["valid",{"_index":1961,"title":{},"body":{"injectables/FileService.html":{}}}],["validare",{"_index":439,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["validata",{"_index":2048,"title":{},"body":{"components/HomeComponent.html":{}}}],["validateobject",{"_index":446,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["validators",{"_index":1178,"title":{},"body":{"components/DataInputComponent.html":{}}}],["validators.required",{"_index":1184,"title":{},"body":{"components/DataInputComponent.html":{}}}],["valore",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"classes/InterfaceConstraints.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"classes/ModalItem.html":{},"injectables/ModalService.html":{},"classes/ModuleApplication.html":{},"components/NavbarComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"injectables/ParseService.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"injectables/SpinnerService.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"classes/TheaterApplication.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/VisualizerComponent.html":{}}}],["valori",{"_index":892,"title":{},"body":{"components/ComposerComponent.html":{},"components/DataInputV2Component.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"injectables/ModalService.html":{},"classes/PerseDataForTheaterComposer.html":{},"components/VisualizerComponent.html":{}}}],["valorizenode",{"_index":2278,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["valorizenode(node",{"_index":2300,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["valorizza",{"_index":1681,"title":{},"body":{"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"components/HomeComponent.html":{}}}],["valorizzando",{"_index":1876,"title":{},"body":{"classes/ExportTheater.html":{}}}],["valorizzare",{"_index":822,"title":{},"body":{"components/ComposerComponent.html":{},"components/NavbarComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"components/VisualizerComponent.html":{}}}],["valorizzata",{"_index":866,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["valorizzati",{"_index":2062,"title":{},"body":{"components/HomeComponent.html":{}}}],["valorizzato",{"_index":2291,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["valorizzazione",{"_index":2302,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["value",{"_index":519,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"components/ControlTemplate.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"injectables/ModalService.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SelectOption.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/SingleDataInputReturned.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{},"classes/_Control.html":{}}}],["value(val",{"_index":1307,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["value.local_interface",{"_index":3019,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["value.module_instance",{"_index":3020,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["value.remote_interface",{"_index":3021,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["valuechange",{"_index":1241,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["values",{"_index":1185,"title":{},"body":{"components/DataInputComponent.html":{}}}],["values[el.id",{"_index":1190,"title":{},"body":{"components/DataInputComponent.html":{}}}],["var",{"_index":168,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"classes/HostNode.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"classes/NetworkNode.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"components/SubnetComponent.html":{},"classes/SubnetNode.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["vari",{"_index":1047,"title":{},"body":{"components/ControlTemplate.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/_Control.html":{}}}],["variabile",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"components/NavbarComponent.html":{},"components/OffcanvasComponent.html":{},"injectables/ParseService.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"injectables/StorageService.html":{},"components/TabnavComponent.html":{},"injectables/TokenService.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["variabili",{"_index":824,"title":{},"body":{"components/ComposerComponent.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataItemComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"components/HomeComponent.html":{},"components/OffcanvasComponent.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{},"components/VisualizerComponent.html":{}}}],["varibile",{"_index":1247,"title":{},"body":{"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{}}}],["varibili",{"_index":1320,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["varie",{"_index":646,"title":{},"body":{"classes/AreaExport.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/ExportTheater.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesTSD.html":{},"classes/SourceExport.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{},"miscellaneous/functions.html":{}}}],["vars",{"_index":2234,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["veloce",{"_index":2215,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["verificato",{"_index":875,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["version",{"_index":538,"title":{},"body":{"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"classes/BlueprintFileDTO.html":{},"classes/BorderNetworkDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/DeployInstanceDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"classes/GenericParameterDTO.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"classes/NameMappingDTO.html":{},"classes/NetOSRouterDTO.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkDTO.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/SourceExport.html":{},"classes/StatisticItemDTO.html":{},"components/SubnetComponent.html":{},"classes/SubnetDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/TheaterSimpleData.html":{},"classes/TheatreStatusDTO.html":{},"classes/TypesCatalogueDTO.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"index.html":{},"properties.html":{},"classes/reteBasicModuleInfo.html":{}}}],["versione",{"_index":1444,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"index.html":{}}}],["verso",{"_index":2470,"title":{},"body":{"injectables/ModalService.html":{}}}],["vertical",{"_index":2253,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["via",{"_index":594,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{},"index.html":{}}}],["viconli",{"_index":989,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["viene",{"_index":865,"title":{},"body":{"components/ComposerComponent.html":{},"components/DataInputComponent.html":{},"injectables/FileService.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"components/VisualizerComponent.html":{},"miscellaneous/functions.html":{}}}],["viewchild",{"_index":2097,"title":{},"body":{"components/HomeComponent.html":{}}}],["viewchild('data_input_template",{"_index":2075,"title":{},"body":{"components/HomeComponent.html":{}}}],["viewport",{"_index":2187,"title":{},"body":{"components/HomeComponent.html":{}}}],["vincoli",{"_index":955,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["virtual",{"_index":1472,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/ExportModule.html":{}}}],["virtual_machine",{"_index":998,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/ExportModule.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["virtual_machines",{"_index":987,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/ExportModule.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["virtual_server",{"_index":1500,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["virtualizationenvironmenttype",{"_index":1993,"title":{},"body":{"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{}}}],["virtualizationenvironmenttypedto",{"_index":1986,"title":{"classes/VirtualizationEnvironmentTypeDTO.html":{}},"body":{"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{}}}],["virtualizzato",{"_index":1985,"title":{},"body":{"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{}}}],["virtualmachine",{"_index":988,"title":{"classes/VirtualMachine.html":{}},"body":{"classes/ConstraintsMSD.html":{},"classes/ExportModule.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["virtualmachineports",{"_index":1000,"title":{"classes/VirtualMachinePorts.html":{}},"body":{"classes/ConstraintsMSD.html":{},"classes/ExportModule.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["virtualmachines",{"_index":1634,"title":{},"body":{"classes/ExportModule.html":{}}}],["virtualservermoduleinstance",{"_index":1464,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/EmptyModuleInfo.html":{}}}],["visibile",{"_index":2688,"title":{},"body":{"components/NavbarComponent.html":{}}}],["visibilit",{"_index":1542,"title":{},"body":{"components/DocsComponent.html":{}}}],["visibility",{"_index":2832,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["visible",{"_index":1547,"title":{},"body":{"components/DocsComponent.html":{},"components/OffcanvasComponent.html":{}}}],["vista",{"_index":1354,"title":{},"body":{"components/DataItemComponent.html":{}}}],["visual",{"_index":2135,"title":{},"body":{"components/HomeComponent.html":{}}}],["visualization/constructor",{"_index":2134,"title":{},"body":{"components/HomeComponent.html":{}}}],["visualize",{"_index":2140,"title":{},"body":{"components/HomeComponent.html":{}}}],["visualizer",{"_index":270,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"components/HomeComponent.html":{},"components/VisualizerComponent.html":{}}}],["visualizer'},{'name",{"_index":204,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["visualizer.component",{"_index":273,"title":{},"body":{"modules/AppModule.html":{}}}],["visualizer.component.html",{"_index":3743,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["visualizer.component.sass",{"_index":3742,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["visualizer/rete",{"_index":272,"title":{},"body":{"modules/AppModule.html":{}}}],["visualizercomponent",{"_index":214,"title":{"components/VisualizerComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"overview.html":{}}}],["visualizing",{"_index":2289,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["visualizzare",{"_index":856,"title":{},"body":{"components/ComposerComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/OffcanvasComponent.html":{},"components/VisualizerComponent.html":{},"miscellaneous/functions.html":{}}}],["visualizzazione",{"_index":1451,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"components/HomeComponent.html":{},"components/ModalComponent.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleVisualizer.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"miscellaneous/functions.html":{}}}],["voglia",{"_index":1317,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["void",{"_index":252,"title":{},"body":{"modules/AppModule.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"classes/HostNode.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"components/NavbarComponent.html":{},"components/NetworkComponent.html":{},"classes/NetworkNode.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"injectables/SpinnerService.html":{},"injectables/StorageService.html":{},"components/SubnetComponent.html":{},"classes/SubnetNode.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"injectables/TokenService.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{},"index.html":{}}}],["volta",{"_index":1942,"title":{},"body":{"injectables/FileService.html":{},"components/HomeComponent.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["vue",{"_index":3280,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["vue/dist/vue.esm",{"_index":3281,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["vuole",{"_index":1319,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["vuota",{"_index":1580,"title":{},"body":{"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["webkit",{"_index":2188,"title":{},"body":{"components/HomeComponent.html":{},"components/NavbarElementComponent.html":{}}}],["weight",{"_index":2173,"title":{},"body":{"components/HomeComponent.html":{},"components/OffcanvasComponent.html":{},"components/TabnavComponent.html":{}}}],["white",{"_index":1068,"title":{},"body":{"components/ControlTemplate.html":{},"components/DataItemComponent.html":{},"components/OffcanvasComponent.html":{},"components/TabnavComponent.html":{}}}],["width",{"_index":1077,"title":{},"body":{"components/ControlTemplate.html":{},"components/DocsComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["window",{"_index":183,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["window.location.origin",{"_index":722,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["window.open(url",{"_index":688,"title":{},"body":{"injectables/AttachmentsService.html":{}}}],["window.url.createobjecturl(blob",{"_index":687,"title":{},"body":{"injectables/AttachmentsService.html":{}}}],["window.url.revokeobjecturl(url",{"_index":695,"title":{},"body":{"injectables/AttachmentsService.html":{}}}],["word",{"_index":1405,"title":{},"body":{"components/DataItemComponent.html":{},"components/TabnavComponent.html":{}}}],["worker",{"_index":2279,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["worker(node",{"_index":2310,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["workerinputs",{"_index":2312,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["workeroutputs",{"_index":2313,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["wrapper",{"_index":2828,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["x",{"_index":678,"title":{},"body":{"injectables/AttachmentsService.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"injectables/ModuleService.html":{},"classes/NetworkNode.html":{},"components/OffcanvasComponent.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["x.jpg",{"_index":2165,"title":{},"body":{"components/HomeComponent.html":{}}}],["x.subscribe",{"_index":682,"title":{},"body":{"injectables/AttachmentsService.html":{}}}],["x[\"instance",{"_index":3189,"title":{},"body":{"classes/PerseDataForTheaterComposer.html":{}}}],["x[key",{"_index":3190,"title":{},"body":{"classes/PerseDataForTheaterComposer.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["xy.png",{"_index":2157,"title":{},"body":{"components/HomeComponent.html":{}}}],["y",{"_index":3323,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["yaml",{"_index":437,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"injectables/AttachmentsService.html":{},"interfaces/CommonModule.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"dependencies.html":{},"miscellaneous/functions.html":{}}}],["yamlstringfy",{"_index":672,"title":{},"body":{"injectables/AttachmentsService.html":{}}}],["yes",{"_index":2515,"title":{},"body":{"injectables/ModalService.html":{}}}],["z",{"_index":2259,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["z.push(value",{"_index":3306,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["zone.js",{"_index":3820,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":2176,"title":{},"body":{"components/HomeComponent.html":{}}}],["zoom:hover",{"_index":2181,"title":{},"body":{"components/HomeComponent.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/Aoption.html":{"url":"classes/Aoption.html","title":"class - Aoption","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  Aoption\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/navbar/navbarType.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Rappresenta le opzioni per il tag \n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                attr_key\n                            \n                            \n                                attr_val\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        attr_key\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/navbar/navbarType.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        attr_val\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/navbar/navbarType.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { TemplateRef } from \"@angular/core\";\n\n/**\n * Elemento passato come parametro alla componente NavbarComponent\n */\nexport class NavbarElement {\n    template_title?: TemplateRef;\n    type: \"module\" | \"theater\";\n    logo_img?: any;\n    element: NavbarItem[];\n}\n\n/**\n * Oggetto che rappresenta un singolo elemento della Navbar\n */\nexport class NavbarItem{\n    id: string;\n    text: string;\n    a_option?: Aoption[];\n    template?: TemplateRef;\n}\n\n/**\n * Rappresenta le opzioni per il tag \n */\nexport class Aoption {\n    attr_key: string;\n    attr_val: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Componenti\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n    \n        Descrizione\n    \n    \n        Componente principale dell'applicazione.\n\n    \n\n\n\n\n\n    Metadati\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                modalData\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                    Protected\n                                showmodal\n                            \n                            \n                                    Protected\n                                showspinner\n                            \n                            \n                                    Protected\n                                spinner\n                            \n                            \n                                    Public\n                                spinnerService\n                            \n                            \n                                    Protected\n                                textspinner\n                            \n                            \n                                    Protected\n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Costruttore\n        \n            \n                \n                    \nconstructor(router: Router, spinnerService: SpinnerService, cdr: ChangeDetectorRef, modal: ModalService)\n                    \n                \n                        \n                            \n                                Definito in src/app/app.component.ts:37\n                            \n                        \n\n                \n                    \n                            Costruttore della componente principale dell'applicazione.\nContiene i subscriber dello spinner e modale generale\n\n                            \n                                    Parametri :\n                                    \n                                        \n                                            \n                                                Nome\n                                                    Tipo\n                                                Opzionale\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        spinnerService\n                                                  \n                                                        \n                                                                        SpinnerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modal\n                                                  \n                                                        \n                                                                        ModalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        modalData\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ModalItem\n\n                    \n                \n                    \n                        \n                                Definito in src/app/app.component.ts:36\n                        \n                    \n\n            \n                \n                    Variabile utilizzata per la modale generale.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         Router\n\n                    \n                \n                    \n                        \n                                Definito in src/app/app.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        showmodal\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                    \n                        \n                                Definito in src/app/app.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        showspinner\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                \n                    \n                        Valore predefinito : false\n                    \n                \n                    \n                        \n                                Definito in src/app/app.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        spinner\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     Observable\n\n                    \n                \n                    \n                        \n                                Definito in src/app/app.component.ts:29\n                        \n                    \n\n            \n                \n                    Variabile utilizzata per captare lo stato dello spinner generale.\nServe a farlo mostrare/nascondere all'occorrenza, indipendentemente dall'applicazione\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        spinnerService\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         SpinnerService\n\n                    \n                \n                    \n                        \n                                Definito in src/app/app.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        textspinner\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                \n                    \n                        Valore predefinito : \"\"\n                    \n                \n                    \n                        \n                                Definito in src/app/app.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                \n                    \n                        Valore predefinito : 'InfraCreate'\n                    \n                \n                    \n                        \n                                Definito in src/app/app.component.ts:22\n                        \n                    \n\n            \n                \n                    Variabile dedicata al titolo dell'applicazione\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectorRef, Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { ModalItem } from './components/modal/modalType';\nimport { ModalService } from './services/application/modal/modal.service';\nimport { SpinnerService } from './services/application/spinner/spinner.service';\n\n/**\n * Componente principale dell'applicazione.\n */\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.sass']\n})\nexport class AppComponent {\n\n  // general\n  /**\n   * Variabile dedicata al titolo dell'applicazione\n   */\n  protected title = 'InfraCreate';\n\n  // global spinner\n  /**\n   * Variabile utilizzata per captare lo stato dello spinner generale.\n   * Serve a farlo mostrare/nascondere all'occorrenza, indipendentemente dall'applicazione\n   */\n  protected spinner: Observable;\n  protected showspinner: boolean = false;\n  protected textspinner: string = \"\";\n\n  /**\n   * Variabile utilizzata per la modale generale.\n   */\n  protected modalData: ModalItem;\n  protected showmodal: boolean;\n\n  /**\n   * Costruttore della componente principale dell'applicazione.\n   * Contiene i subscriber dello spinner e modale generale\n   * @param router \n   * @param spinnerService \n   * @param cdr \n   * @param modal \n   */\n  constructor(\n    public router: Router,\n    public spinnerService: SpinnerService,\n    private cdr: ChangeDetectorRef,\n    protected modal: ModalService\n  ) {\n\n    document.body.style.overflow = 'hidden'; // per prevenire lo scrolling\n    document.body.style.background = '#0f131a'; // per background\n\n    this.spinner = spinnerService.getSpinner();\n    this.spinner.subscribe(\n      el => {\n        this.showspinner = el.show;\n        this.textspinner = el.text;\n        this.cdr.detectChanges();\n      }\n    )\n\n    this.modal.modalData.asObservable().subscribe(v => this.modalData = v);\n    this.modal.show.asObservable().subscribe(v => this.showmodal = v);\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n    {{textspinner}}...\n \n\n\n\n\n\n    \n\n    \n                \n                    ./app.component.sass\n                \n                body\n    overflow: hidden\n    background-color: '#0f131a' !important\n    \n\n    \n        \n        \n            \n                Legenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento html con direttive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{textspinner}}... '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ComposerComponent', 'selector': 'app-composer'},{'name': 'ControlTemplate', 'selector': ''},{'name': 'DataInputComponent', 'selector': 'app-data-input'},{'name': 'DataInputV2Component', 'selector': 'app-data-input-v2'},{'name': 'DataItemComponent', 'selector': 'app-window-item'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HostComponent', 'selector': ''},{'name': 'HowToUseComponent', 'selector': 'app-how-to-use'},{'name': 'MirroringModuleInstanceComponent', 'selector': ''},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavbarElementComponent', 'selector': 'app-navbar-element'},{'name': 'NetworkComponent', 'selector': ''},{'name': 'OffcanvasComponent', 'selector': 'app-offcanvas'},{'name': 'ReteModuleComposerComponent', 'selector': 'app-rete-module-composer'},{'name': 'ReteModuleVisualizerComponent', 'selector': 'app-rete-module-visualizer'},{'name': 'ReteTheaterComposerComponent', 'selector': 'app-rete-theater-composer'},{'name': 'ReteTheaterVisualizerComponent', 'selector': 'app-rete-theater-visualizer'},{'name': 'SubnetComponent', 'selector': ''},{'name': 'TabnavComponent', 'selector': 'app-tabnav'},{'name': 'TheaterInternalServiceModuleInstanceComponent', 'selector': ''},{'name': 'TheaterModuleInstanceComponent', 'selector': ''},{'name': 'UnderbarComponent', 'selector': 'app-underbar'},{'name': 'VisualizerComponent', 'selector': 'app-displayer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Moduli\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_exports\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nComposerComponent\n\nComposerComponent\n\nAppModule -->\n\nComposerComponent->AppModule\n\n\n\nAppModule -->\n\nComposerComponent->AppModule\n\n\n\n\n\nControlTemplate\n\nControlTemplate\n\nAppModule -->\n\nControlTemplate->AppModule\n\n\n\n\n\nDataInputComponent\n\nDataInputComponent\n\nAppModule -->\n\nDataInputComponent->AppModule\n\n\n\n\n\nDataInputV2Component\n\nDataInputV2Component\n\nAppModule -->\n\nDataInputV2Component->AppModule\n\n\n\n\n\nDataItemComponent\n\nDataItemComponent\n\nAppModule -->\n\nDataItemComponent->AppModule\n\n\n\n\n\nDocsComponent\n\nDocsComponent\n\nAppModule -->\n\nDocsComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nHostComponent\n\nHostComponent\n\nAppModule -->\n\nHostComponent->AppModule\n\n\n\n\n\nHowToUseComponent\n\nHowToUseComponent\n\nAppModule -->\n\nHowToUseComponent->AppModule\n\n\n\n\n\nMirroringModuleInstanceComponent\n\nMirroringModuleInstanceComponent\n\nAppModule -->\n\nMirroringModuleInstanceComponent->AppModule\n\n\n\n\n\nModalComponent\n\nModalComponent\n\nAppModule -->\n\nModalComponent->AppModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nAppModule -->\n\nNavbarComponent->AppModule\n\n\n\n\n\nNavbarElementComponent\n\nNavbarElementComponent\n\nAppModule -->\n\nNavbarElementComponent->AppModule\n\n\n\n\n\nNetworkComponent\n\nNetworkComponent\n\nAppModule -->\n\nNetworkComponent->AppModule\n\n\n\n\n\nOffcanvasComponent\n\nOffcanvasComponent\n\nAppModule -->\n\nOffcanvasComponent->AppModule\n\n\n\n\n\nReteModuleComposerComponent\n\nReteModuleComposerComponent\n\nAppModule -->\n\nReteModuleComposerComponent->AppModule\n\n\n\n\n\nReteModuleVisualizerComponent\n\nReteModuleVisualizerComponent\n\nAppModule -->\n\nReteModuleVisualizerComponent->AppModule\n\n\n\n\n\nReteTheaterComposerComponent\n\nReteTheaterComposerComponent\n\nAppModule -->\n\nReteTheaterComposerComponent->AppModule\n\n\n\n\n\nReteTheaterVisualizerComponent\n\nReteTheaterVisualizerComponent\n\nAppModule -->\n\nReteTheaterVisualizerComponent->AppModule\n\n\n\n\n\nSubnetComponent\n\nSubnetComponent\n\nAppModule -->\n\nSubnetComponent->AppModule\n\n\n\n\n\nTabnavComponent\n\nTabnavComponent\n\nAppModule -->\n\nTabnavComponent->AppModule\n\n\n\n\n\nTheaterInternalServiceModuleInstanceComponent\n\nTheaterInternalServiceModuleInstanceComponent\n\nAppModule -->\n\nTheaterInternalServiceModuleInstanceComponent->AppModule\n\n\n\n\n\nTheaterModuleInstanceComponent\n\nTheaterModuleInstanceComponent\n\nAppModule -->\n\nTheaterModuleInstanceComponent->AppModule\n\n\n\n\n\nUnderbarComponent\n\nUnderbarComponent\n\nAppModule -->\n\nUnderbarComponent->AppModule\n\n\n\n\n\nVisualizerComponent\n\nVisualizerComponent\n\nAppModule -->\n\nVisualizerComponent->AppModule\n\n\n\nAppModule -->\n\nVisualizerComponent->AppModule\n\n\n\n\n\nDataInputComponent \n\nDataInputComponent \n\nDataInputComponent  -->\n\nAppModule->DataInputComponent \n\n\n\n\n\nNavbarComponent \n\nNavbarComponent \n\nNavbarComponent  -->\n\nAppModule->NavbarComponent \n\n\n\n\n\nNavbarElementComponent \n\nNavbarElementComponent \n\nNavbarElementComponent  -->\n\nAppModule->NavbarElementComponent \n\n\n\n\n\nOffcanvasComponent \n\nOffcanvasComponent \n\nOffcanvasComponent  -->\n\nAppModule->OffcanvasComponent \n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nNgxPopper\n\nNgxPopper\n\nAppModule -->\n\nNgxPopper->AppModule\n\n\n\n\n\nModuleService\n\nModuleService\n\nAppModule -->\n\nModuleService->AppModule\n\n\n\n\n\nParseService\n\nParseService\n\nAppModule -->\n\nParseService->AppModule\n\n\n\n\n\nTheaterService\n\nTheaterService\n\nAppModule -->\n\nTheaterService->AppModule\n\n\n\n\n\nTokenService\n\nTokenService\n\nAppModule -->\n\nTokenService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Ingrandisci\n        Reset\n        Rimpocciolisci\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Dichiarazioni\n                    \n                        \n                            AppComponent\n                        \n                        \n                            AppComponent\n                        \n                        \n                            ComposerComponent\n                        \n                        \n                            ComposerComponent\n                        \n                        \n                            ControlTemplate\n                        \n                        \n                            DataInputComponent\n                        \n                        \n                            DataInputV2Component\n                        \n                        \n                            DataItemComponent\n                        \n                        \n                            DocsComponent\n                        \n                        \n                            HomeComponent\n                        \n                        \n                            HostComponent\n                        \n                        \n                            HowToUseComponent\n                        \n                        \n                            MirroringModuleInstanceComponent\n                        \n                        \n                            ModalComponent\n                        \n                        \n                            NavbarComponent\n                        \n                        \n                            NavbarElementComponent\n                        \n                        \n                            NetworkComponent\n                        \n                        \n                            OffcanvasComponent\n                        \n                        \n                            ReteModuleComposerComponent\n                        \n                        \n                            ReteModuleVisualizerComponent\n                        \n                        \n                            ReteTheaterComposerComponent\n                        \n                        \n                            ReteTheaterVisualizerComponent\n                        \n                        \n                            SubnetComponent\n                        \n                        \n                            TabnavComponent\n                        \n                        \n                            TheaterInternalServiceModuleInstanceComponent\n                        \n                        \n                            TheaterModuleInstanceComponent\n                        \n                        \n                            UnderbarComponent\n                        \n                        \n                            VisualizerComponent\n                        \n                        \n                            VisualizerComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            HostComponent\n                        \n                        \n                            MirroringModuleInstanceComponent\n                        \n                        \n                            NetworkComponent\n                        \n                        \n                            SubnetComponent\n                        \n                        \n                            TheaterInternalServiceModuleInstanceComponent\n                        \n                        \n                            TheaterModuleInstanceComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ModuleService\n                        \n                        \n                            ParseService\n                        \n                        \n                            TheaterService\n                        \n                        \n                            TokenService\n                        \n                    \n                \n                \n                    Importa\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            NgxPopper\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DataInputComponent\n                        \n                        \n                            NavbarComponent\n                        \n                        \n                            NavbarElementComponent\n                        \n                        \n                            OffcanvasComponent\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Schemas\n                    \n                        \n                            CUSTOM_ELEMENTS_SCHEMA\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        ngDoBootstrap\n                        \n                    \n                \n            \n            \n                \nngDoBootstrap(appRef: ApplicationRef)\n                \n            \n\n\n            \n                \n                    Definito in src/app/app.module.ts:160\n                \n            \n\n\n            \n                \n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    appRef\n                                    \n                                                ApplicationRef\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { ApplicationRef, APP_INITIALIZER, CUSTOM_ELEMENTS_SCHEMA, DoBootstrap, NgModule, Provider } from '@angular/core';\n\nimport { AppComponent } from './app.component';\n\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { HomeComponent } from './pages/home/home.component';\nimport { HowToUseComponent } from './pages/how-to-use/how-to-use.component';\n\nimport { ReteModule } from 'rete-angular-render-plugin';\n\nimport { ReteTheaterVisualizerComponent } from './visualizer-system/rete-theater-visualizer/rete-theater-visualizer.component';\nimport { ReteModuleVisualizerComponent } from './visualizer-system/rete-module-visualizer/rete-module-visualizer.component';\n\nimport { ReteModuleComposerComponent } from './composer-system/rete-module-composer/rete-module-composer.component';\nimport { ReteTheaterComposerComponent } from './composer-system/rete-theater-composer/rete-theater-composer.component';\n\n\nimport { HostComponent } from './rete-settings/nodes/rete-nodes/host/host.component';\nimport { SubnetComponent } from './rete-settings/nodes/rete-nodes/subnet/subnet.component';\nimport { NetworkComponent } from './rete-settings/nodes/rete-nodes/network/network.component';\nimport { MirroringModuleInstanceComponent } from './rete-settings/nodes/rete-modules/mirroringModuleInstance/mirroringModuleInstance.component';\nimport { TheaterInternalServiceModuleInstanceComponent } from './rete-settings/nodes/rete-modules/theaterInternalServiceModuleInstance/theaterInternalServiceModuleInstance.component';\nimport { TheaterModuleInstanceComponent } from './rete-settings/nodes/rete-modules/theaterModuleInstance/theaterModuleInstance.component';\n\nimport { VisualizerComponent } from './visualizer-system/visualizer/visualizer.component';\nimport { ComposerComponent } from './composer-system/composer/composer.component';\n\nimport { CommonModule } from '@angular/common';\n\nimport { ControlTemplate } from './rete-settings/controls/control'; \n\nimport { KeycloakAngularModule, KeycloakService } from 'keycloak-angular';\nimport { initializeKeycloak } from './utility/app.init';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { NgxSpinnerModule } from 'ngx-spinner';\nimport { NgxTypeaheadModule } from \"ngx-typeahead\";\nimport { NgxPopper } from 'angular-popper';\n\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { TokenService } from './services/token/token.service';\nimport { ModuleService } from './services/api/module.service';\nimport { TheaterService } from './services/api/theater.service';\n\nimport { OffcanvasComponent } from './components/offcanvas/offcanvas.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\n\nimport { NavbarElementComponent } from './pages/elements/navbar-element/navbar-element.component';\nimport { DataInputComponent } from './components/data-input/data-input.component';\nimport { ModalComponent } from './components/modal/modal.component';\nimport { UnderbarComponent } from './components/underbar/underbar.component';\nimport { DataInputV2Component } from './components/data-input-v2/data-input-v2.component';\nimport { TabnavComponent } from './components/tabnav/tabnav.component';\nimport { ParseService } from './services/application/parse/parse.service';\nimport { FormsModule, NgForm, ReactiveFormsModule } from '@angular/forms';\nimport { DataItemComponent } from './components/data-item/data-item.component';\nimport { environment } from 'src/environments/environment';\nimport { DocsComponent } from './pages/docs/docs.component';\n// import { ColorPickerModule } from 'ngx-color-picker';\n\nconst keycloakService = new KeycloakService();\nlet providerInitKeycloak: Provider = (!environment.mocked)\n  ? {\n    provide: APP_INITIALIZER,\n    useFactory: initializeKeycloak,\n    multi: true,\n    deps: [KeycloakService],\n    // provide: KeycloakService,\n    // useValue: keycloakService,\n  }\n  : [];\n\n\n@NgModule({\n  declarations: [\n\n    AppComponent,\n\n    VisualizerComponent,\n    ComposerComponent,\n\n    ReteTheaterVisualizerComponent,\n    ReteModuleVisualizerComponent,\n    ReteModuleComposerComponent,\n    ReteTheaterComposerComponent,\n\n    HostComponent,\n    SubnetComponent,\n    NetworkComponent,\n    MirroringModuleInstanceComponent,\n    TheaterInternalServiceModuleInstanceComponent,\n    TheaterModuleInstanceComponent,\n\n    AppComponent,\n    HomeComponent,\n    HowToUseComponent,\n    NavbarElementComponent,\n\n    VisualizerComponent,\n    ComposerComponent,\n    OffcanvasComponent,\n    NavbarComponent,\n    DataInputComponent,\n    ModalComponent,\n    UnderbarComponent,\n    DataInputV2Component,\n    TabnavComponent,\n    DataItemComponent,\n    DocsComponent,\n\n    ControlTemplate\n  ],\n  imports: [\n    BrowserModule,\n\n    AppRoutingModule,\n\n    ReteModule,\n\n    NgxPopper,\n\n    CommonModule,\n\n    KeycloakAngularModule,\n\n    HttpClientModule,\n\n    NgxSpinnerModule,\n    NgxTypeaheadModule,\n\n    BrowserAnimationsModule,\n\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [\n    providerInitKeycloak,\n    TokenService,\n    ModuleService,\n    TheaterService,\n    ParseService\n  ],\n  exports: [OffcanvasComponent, NavbarComponent, NavbarElementComponent, DataInputComponent],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\n  bootstrap: [AppComponent],\n  entryComponents: [\n    MirroringModuleInstanceComponent,\n    TheaterInternalServiceModuleInstanceComponent,\n    TheaterModuleInstanceComponent,\n    SubnetComponent,\n    NetworkComponent,\n    HostComponent\n  ]\n})\n\nexport class AppModule implements DoBootstrap {\n  ngDoBootstrap(appRef: ApplicationRef) {\n    if (!environment.mocked) { // se non è mockato\n      keycloakService\n        .init()\n        .then(() => {\n          appRef.bootstrap(AppComponent);\n        })\n        .catch((error) =>\n          console.error('[ngDoBootstrap] init Keycloak failed', error)\n        );\n    }\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Moduli\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomeComponent } from './pages/home/home.component';\nimport { HowToUseComponent } from './pages/how-to-use/how-to-use.component';\nimport { VisualizerComponent } from './visualizer-system/visualizer/visualizer.component';\nimport { ComposerComponent } from './composer-system/composer/composer.component';\nimport { AuthGuard } from './utility/app.guard';\nimport { environment } from 'src/environments/environment';\nimport { DocsComponent } from './pages/docs/docs.component';\n\nconst routesGuard: Routes = [\n  {\n    path: \"\",\n    component: HomeComponent,\n  },\n  {\n    path: \"home\",\n    component: HomeComponent,\n  },\n  {\n    path: \"how-to-use\",\n    component: HowToUseComponent,\n  },\n  {\n    path: \"documentation\",\n    component: DocsComponent,\n  },\n  {\n    path: \"visualizer\",\n    component: VisualizerComponent,\n    canActivate: [AuthGuard]\n  },\n  {\n    path: \"composer\",\n    component: ComposerComponent,\n    canActivate: [AuthGuard]\n\n  },\n  {\n    path: \"**\",\n    component: HomeComponent,\n  },\n];\n\nconst routesSimple: Routes = [\n  {\n    path: \"\",\n    component: HomeComponent,\n  },\n  {\n    path: \"home\",\n    component: HomeComponent,\n  },\n  {\n    path: \"how-to-use\",\n    component: HowToUseComponent,\n  },\n  {\n    path: \"documentation\",\n    component: DocsComponent,\n  },\n  {\n    path: \"visualizer\",\n    component: VisualizerComponent,\n  },\n  {\n    path: \"composer\",\n    component: ComposerComponent,\n  },\n  {\n    path: \"**\",\n    component: HomeComponent,\n  },\n];\n\nlet ROUTES: Routes = environment.mocked ? routesSimple : routesGuard;\n\n@NgModule({\n  imports: [RouterModule.forRoot(ROUTES)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/AreaApplication.html":{"url":"classes/AreaApplication.html","title":"class - AreaApplication","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  AreaApplication\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsApplication/applicationModels.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AreaDTO\n            \n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                    Opzionale\n                                color\n                            \n                            \n                                deleted\n                            \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                theater\n                            \n                            \n                                uuid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        color\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsApplication/applicationModels.ts:108\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleted\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     boolean | string\n\n                    \n                \n                        \n                            \n                                ereditato da         AreaDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         AreaDTO:184\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         AreaDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         AreaDTO:182\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                        \n                            \n                                ereditato da         AreaDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         AreaDTO:179\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         AreaDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         AreaDTO:181\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        theater\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         TheaterDTO\n\n                    \n                \n                        \n                            \n                                ereditato da         AreaDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         AreaDTO:183\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uuid\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         AreaDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         AreaDTO:180\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ReteHostInfo } from \"src/app/rete-settings/nodes/rete-nodes/host/hostNode\";\nimport { ReteNetworkInfo } from \"src/app/rete-settings/nodes/rete-nodes/network/networkNode\";\nimport { ReteSubnetInfo } from \"src/app/rete-settings/nodes/rete-nodes/subnet/subnetNode\";\nimport { ReteMirroringModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/mirroringModuleInstance/mirroringModuleInstanceNode\";\nimport { ReteTheaterInternalServiceModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/theaterInternalServiceModuleInstance/theaterInternalServiceModuleInstanceNode\";\nimport { ReteTheaterModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/theaterModuleInstance/theaterModuleInstanceNode\";\nimport { FlavorBasicInfo } from \"../modelsDTO/falvorDTO\";\nimport { HostModuleDTO } from \"../modelsDTO/hostDTO\";\nimport { ModuleNetworkInterfaceDTO, ModuleInstancePropertiesDTO, SimpleModuleDTO, TheaterInstancePropertiesDTO, ModuleInstanceDTO, ModuleDTO, SimpleAreaDTO, AreaDTO } from \"../modelsDTO/moduleDTO\";\nimport { TheaterDTO } from \"../modelsDTO/theaterDTO\";\n\n\nexport interface CommonModule {\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n}\n\n\n/**\n * Classe contenente gli attributi utilizzati per le operazioni che coinvolgono i moduli.\n * ps. Questa struttura è prettamente utilizzata nella chiamata relativa al singolo modulo.\n */\nexport class ModuleApplication extends ModuleDTO implements CommonModule {\n    imports: string[] // perchè nell'export yaml è previsto\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n    // serve per validare il json risultante dal parsing del theaterApplication\n    validateObject?: string = \"module\";\n}\n// PER IMPLEMENTAZIONI FUTURE, PER COERENZA, PRENDERE DIRETTAMENTE I SINGOLI NODI DALLA CHIAMATA ESCLUSIVA E NON DA QUELLA CHE RESTITUISCE TUTTI I TEATRI\n/**\n * Classe contenente gli attributi utilizzati per le operazioni che coinvolgono i moduli.\n * ps. Questa struttura è prettamente utilizzata nella chiamata che prende tutti i moduli del teatro.\n */\nexport class SimpleModuleApplication extends SimpleModuleDTO implements CommonModule {\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n}\n\n\nexport class ReteConnection {\n    from: string;\n    port_src: string;\n    to: string;\n    port_dst: string;\n}\n\nexport interface TopologyList {\n    rete: any;\n    topology?: TopologyElement\n}\nexport class TopologyElement {\n    elements: { [name: string]: any };\n    connection: ReteConnection[]\n}\n\n// apptype module topology\n\nexport class NodeTopologyElement implements TopologyElement {\n    elements: { [hostName: string]: ReteHostInfo | ReteSubnetInfo | ReteNetworkInfo };\n    connection: ReteConnection[]\n}\n\nexport interface ModuleTopology extends TopologyList {\n    rete: ReteMirroringModuleInstanceInfo | ReteTheaterInternalServiceModuleInstanceInfo | ReteTheaterModuleInstanceInfo\n    topology: NodeTopologyElement;\n}\n\nexport class ModuleInstance extends ModuleInstanceDTO implements ModuleTopology {\n    // moduleTopology data\n    rete: ReteTheaterModuleInstanceInfo | ReteTheaterInternalServiceModuleInstanceInfo | ReteMirroringModuleInstanceInfo;\n    topology: NodeTopologyElement;\n    // other data\n    moduleInfo: SimpleModuleApplication\n}\n\n// apptype theater theater\n\nexport interface TheaterTopology extends TopologyElement {\n    elements: { [hostName: string]: ModuleInstance };\n    connection: ReteConnection[];\n}\n\nexport class TheaterApplication extends TheaterDTO implements TheaterTopology {\n    // theaterTopology data\n    elements: { [hostName: string]: ModuleInstance; };\n    connection: ReteConnection[];\n    // other data\n    properties: TheaterInstancePropertiesDTO;\n    topology: TheaterTopology;\n    // serve per validare il json risultante dal parsing del theaterApplication\n    validateObject?: string = \"theater\";\n}\n\nexport class AreaApplication extends AreaDTO {\n    color?: string;\n}\nexport class AreaColorDTO extends SimpleAreaDTO {\n    color: string;\n}\n\n\nexport class FlavorApplication extends FlavorBasicInfo {\n    flavorName: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/AreaColorDTO.html":{"url":"classes/AreaColorDTO.html","title":"class - AreaColorDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  AreaColorDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsApplication/applicationModels.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        SimpleAreaDTO\n            \n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                area\n                            \n                            \n                                description\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        color\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsApplication/applicationModels.ts:111\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        area\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleAreaDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleAreaDTO:191\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleAreaDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleAreaDTO:192\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ReteHostInfo } from \"src/app/rete-settings/nodes/rete-nodes/host/hostNode\";\nimport { ReteNetworkInfo } from \"src/app/rete-settings/nodes/rete-nodes/network/networkNode\";\nimport { ReteSubnetInfo } from \"src/app/rete-settings/nodes/rete-nodes/subnet/subnetNode\";\nimport { ReteMirroringModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/mirroringModuleInstance/mirroringModuleInstanceNode\";\nimport { ReteTheaterInternalServiceModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/theaterInternalServiceModuleInstance/theaterInternalServiceModuleInstanceNode\";\nimport { ReteTheaterModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/theaterModuleInstance/theaterModuleInstanceNode\";\nimport { FlavorBasicInfo } from \"../modelsDTO/falvorDTO\";\nimport { HostModuleDTO } from \"../modelsDTO/hostDTO\";\nimport { ModuleNetworkInterfaceDTO, ModuleInstancePropertiesDTO, SimpleModuleDTO, TheaterInstancePropertiesDTO, ModuleInstanceDTO, ModuleDTO, SimpleAreaDTO, AreaDTO } from \"../modelsDTO/moduleDTO\";\nimport { TheaterDTO } from \"../modelsDTO/theaterDTO\";\n\n\nexport interface CommonModule {\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n}\n\n\n/**\n * Classe contenente gli attributi utilizzati per le operazioni che coinvolgono i moduli.\n * ps. Questa struttura è prettamente utilizzata nella chiamata relativa al singolo modulo.\n */\nexport class ModuleApplication extends ModuleDTO implements CommonModule {\n    imports: string[] // perchè nell'export yaml è previsto\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n    // serve per validare il json risultante dal parsing del theaterApplication\n    validateObject?: string = \"module\";\n}\n// PER IMPLEMENTAZIONI FUTURE, PER COERENZA, PRENDERE DIRETTAMENTE I SINGOLI NODI DALLA CHIAMATA ESCLUSIVA E NON DA QUELLA CHE RESTITUISCE TUTTI I TEATRI\n/**\n * Classe contenente gli attributi utilizzati per le operazioni che coinvolgono i moduli.\n * ps. Questa struttura è prettamente utilizzata nella chiamata che prende tutti i moduli del teatro.\n */\nexport class SimpleModuleApplication extends SimpleModuleDTO implements CommonModule {\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n}\n\n\nexport class ReteConnection {\n    from: string;\n    port_src: string;\n    to: string;\n    port_dst: string;\n}\n\nexport interface TopologyList {\n    rete: any;\n    topology?: TopologyElement\n}\nexport class TopologyElement {\n    elements: { [name: string]: any };\n    connection: ReteConnection[]\n}\n\n// apptype module topology\n\nexport class NodeTopologyElement implements TopologyElement {\n    elements: { [hostName: string]: ReteHostInfo | ReteSubnetInfo | ReteNetworkInfo };\n    connection: ReteConnection[]\n}\n\nexport interface ModuleTopology extends TopologyList {\n    rete: ReteMirroringModuleInstanceInfo | ReteTheaterInternalServiceModuleInstanceInfo | ReteTheaterModuleInstanceInfo\n    topology: NodeTopologyElement;\n}\n\nexport class ModuleInstance extends ModuleInstanceDTO implements ModuleTopology {\n    // moduleTopology data\n    rete: ReteTheaterModuleInstanceInfo | ReteTheaterInternalServiceModuleInstanceInfo | ReteMirroringModuleInstanceInfo;\n    topology: NodeTopologyElement;\n    // other data\n    moduleInfo: SimpleModuleApplication\n}\n\n// apptype theater theater\n\nexport interface TheaterTopology extends TopologyElement {\n    elements: { [hostName: string]: ModuleInstance };\n    connection: ReteConnection[];\n}\n\nexport class TheaterApplication extends TheaterDTO implements TheaterTopology {\n    // theaterTopology data\n    elements: { [hostName: string]: ModuleInstance; };\n    connection: ReteConnection[];\n    // other data\n    properties: TheaterInstancePropertiesDTO;\n    topology: TheaterTopology;\n    // serve per validare il json risultante dal parsing del theaterApplication\n    validateObject?: string = \"theater\";\n}\n\nexport class AreaApplication extends AreaDTO {\n    color?: string;\n}\nexport class AreaColorDTO extends SimpleAreaDTO {\n    color: string;\n}\n\n\nexport class FlavorApplication extends FlavorBasicInfo {\n    flavorName: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/AreaDTO.html":{"url":"classes/AreaDTO.html","title":"class - AreaDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  AreaDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsDTO/moduleDTO.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano l'area di appartenenza di un modulo (complex).\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                deleted\n                            \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                theater\n                            \n                            \n                                uuid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        deleted\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     boolean | string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:184\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:182\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:179\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:181\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        theater\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         TheaterDTO\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:183\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uuid\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:180\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PageableDTO, SortDTO } from './elementDTO';\nimport { NetworkDTO } from './networkDTO';\nimport { TheaterDTO } from './theaterDTO';\n\n/**\n * Classe che contiene gli attributi che indicano l'insieme dei moduli ritornati dal teatro.\n */\nexport class ModuleListDTO {\n    content: SimpleModuleDTO[]\n    pageable: PageableDTO\n    last: boolean\n    totalPages: string | number\n    totalElements: string | number\n    size: string | number\n    number: string | number\n    sort: SortDTO\n    numberOfElements: string | number\n    first: boolean\n    empty: boolean\n}\n\n/**\n * Classe che contiene gli attributi che indica il catalogo del tipo.\n */\nexport class TypesCatalogueDTO {\n    group: string\n    id: string | number\n    parentId: {}\n    value: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano la classificazione del modulo.\n */\nexport class ModuleClassificationDTO {\n    blueprintType: string\n    category: string\n    expectedInstanceType: string\n    id: string | number\n    mcClass: string\n    type: string\n    uuid: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano un parametro generico.\n */\nexport class GenericParameterDTO {\n    type: string\n    default: string\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano i parametri di configurazione di un modulto.\n */\nexport class ConfigurationTemplateDTO {\n    anchor_parameters: { [name: string]: GenericParameterDTO | string }\n    instance_parameters: { [name: string]: GenericParameterDTO }\n    structural_parameters: { [name: string]: GenericParameterDTO }\n    fixed_parameters: { [name: string]: GenericParameterDTO }\n    control_parameters: { [name: string]: GenericParameterDTO }\n    infrastructure_parameters: { [name: string]: GenericParameterDTO }\n    module: string\n    description: string\n    category: string\n    version: string | number\n    platform: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano la modalità di un modulo.\n */\nexport class ModuleModeDTO {\n    code: string\n    id: string | number\n    name: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano lo stato di un modulo.\n */\nexport class ModuleStatusDTO {\n    descriptionCode: string\n    id: string | number\n    name: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le statitistiche di un modulo.\n */\nexport class StatisticItemDTO {\n    error: string | number\n    updated: string | number\n    inserted: string | number\n}\n\n/**\n * Classe che contiene gli attributi che indicano il modulo (simple - in dipendenza del teatro).\n */\nexport class SimpleModuleDTO {\n    createdBy: string\n    createdDate: string\n    description: string\n    id: string | number\n    isLocked: boolean\n    lastModifiedBy: string\n    lastModifiedDate: string\n    lockAcquiredTimestamp: string\n    lockLastUserAcquiring: string\n    lockReleasedTimestamp: string\n    name: string\n    status: ModuleStatusDTO\n    type?: string | any\n    uuid: string\n    version: string | number\n}\n\n/**\n * Classe che contiene gli attributi che indicano il modulo (complex - ritorato da call appostita).\n * @extends {SimpleModuleDTO}\n */\nexport class ModuleDTO extends SimpleModuleDTO {\n    attachments: string[]\n    author: string\n    capabilities: { [name: string]: string }\n    catalog1: TypesCatalogueDTO\n    catalog2: TypesCatalogueDTO\n    catalog3: TypesCatalogueDTO\n    classification: ModuleClassificationDTO\n    configurationTemplate: ConfigurationTemplateDTO\n    detailProperties: {}\n    input: { [name: string]: string }\n    output: { [name: string]: string }\n    mode: ModuleModeDTO\n    statistics: { [name: string]: StatisticItemDTO | string | number }\n    tags: []\n}\n\n/**\n * Classe che contiene gli attributi che indicano le interfacce esposte da un modulo.\n */\nexport class ModuleNetworkInterfaceDTO {\n    id: string | number\n    label: string\n    module: ModuleDTO\n    network: NetworkDTO\n    nodeName: string\n    type: string\n    uuid: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le connessioni interfaccia-modulo.\n */\nexport class ConsumerInterfaceLinkDTO {\n    local_interface: string\n    module_instance: string\n    remote_interface: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà dell'istanza di un modulo all'interno del node_templates.\n */\nexport class ModuleInstancePropertiesDTO {\n    area: string\n    description: string\n    module: string\n    version: string | number\n    sequence: string | number\n    consumer_interfaces_link: ConsumerInterfaceLinkDTO[]\n}\n\n\n/**\n * Classe che contiene gli attributi che indicano l'area di appartenenza di un modulo (complex).\n */\nexport class AreaDTO {\n    id: string | number;\n    uuid: string;\n    name: string;\n    description: string;\n    theater: TheaterDTO;\n    deleted: boolean | string;\n}\n\n/**\n * Classe che contiene gli attributi che indicano l'area di appartenenza di un modulo (simple).\n */\nexport class SimpleAreaDTO {\n    area: string\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà dell'istanza di un teatro all'interno del node_templates.\n */\nexport class TheaterInstancePropertiesDTO {\n    mode: string\n    tags: TagTIP[]\n    areas: SimpleAreaDTO[]\n    author: string\n    version: string | number\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano un tag.\n */\nexport class TagTIP{\n    tag: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano in via generale le caratteristiche di un elemento che deve essere presente nel node_templates.\n */\nexport class ElementIntoTheaterDTO {  // goes into map in blueprint [name:string]: Module...\n    properties: ModuleInstancePropertiesDTO | TheaterInstancePropertiesDTO\n    type: string\n}\n\n\n/**\n * Classe che contiene gli attributi che indicano le caratteristiche di un teatro presente nel node_templates.\n */\nexport class ModuleInstanceDTO {\n    properties: ModuleInstancePropertiesDTO\n    type: string\n}\n/**\n * Classe che contiene gli attributi che indicano le caratteristiche di un modulo presente nel node_templates.\n */\nexport class TheaterInstanceDTO {\n    properties: TheaterInstancePropertiesDTO\n    type: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/AreaExport.html":{"url":"classes/AreaExport.html","title":"class - AreaExport","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  AreaExport\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsExport/theaterExport.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano le aree nelle proprietà del teatr.\nSee {PropertiesTSD}\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                area\n                            \n                            \n                                description\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        area\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/theaterExport.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/theaterExport.ts:44\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ModeTypeExport, ModuleTypeExport, TheaterTypeExport, ToscaDefinitionType } from \"./TypeExport\"\n\n/**\n * Classe utilizzata per l'export. \n * Contiene le informazioni generali per il teatro che devono esserci nello standard Tosca.\n */\nexport class TheaterExport {\n    tosca_definitions_version: ToscaDefinitionType\n    description: string\n    imports: string[]\n    node_templates: { [name: string]: TheaterSimpleData | ModuleInstanceSimpleData }\n}\n/**\n * Classe che contiene gli attributi che indicano il teatro all'interno dei node_templates.\n */\nexport class TheaterSimpleData {\n    type: TheaterTypeExport\n    properties: PropertiesTSD\n}\n/**\n * Classe che contiene gli attributi che indicano le proprietà del teatro.\n */\nexport class PropertiesTSD {\n    version: string | number\n    description: string\n    mode: ModeTypeExport\n    author: string\n    tags: TagsExport[]\n    areas: AreaExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano i tag nelle proprietà del teatro.\n * @see {PropertiesTSD}\n */\nexport class TagsExport {\n    tag: string\n}\n/**\n * Classe che contiene gli attributi che indicano le aree nelle proprietà del teatr.\n * @see {PropertiesTSD}\n */\nexport class AreaExport {\n    area: string\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano il modulo all'interno dei node_modules.\n */\nexport class ModuleInstanceSimpleData {\n    type: ModuleTypeExport\n    properties: PropertiesMISD\n}\n/**\n * Classe che contiene gli attributi che indicano le propeitò del modulo all'interno dei node_templates.\n */\nexport class PropertiesMISD{\n    module: string\n    version: string | number\n    area: string\n    sequence: number\n    sources?: SourceExport[]\n    consumer_interface_link: ConsumerInterfaceLinkExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano le porte di ingresso del modulo all'interno dei node_templates.\n */\nexport class SourceExport{\n    module_instance: string\n    host:string\n    interfaces: string[]\n}\n/**\n * Classe che contiene gli attributi che indicano i collegamenti e relazioni intramodulo con le varie interfacce.\n */\nexport class ConsumerInterfaceLinkExport{\n    local_interface: string\n    module_interface:string\n    remote_interface:string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"injectables/AttachmentsService.html":{"url":"injectables/AttachmentsService.html","title":"injectable - AttachmentsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AttachmentsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/api/attachments.service.ts\n        \n\n\n\n\n\n            \n    Indice\n    \n        \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getModuleAttachment\n                            \n                            \n                                    Async\n                                getTheaterAttachment\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Costruttore\n        \n            \n                \n                    \nconstructor(http: HttpClient, tokenService: TokenService, theaterService: TheaterService)\n                    \n                \n                        \n                            \n                                Definito in src/app/services/api/attachments.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parametri :\n                                    \n                                        \n                                            \n                                                Nome\n                                                    Tipo\n                                                Opzionale\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tokenService\n                                                  \n                                                        \n                                                                        TokenService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        theaterService\n                                                  \n                                                        \n                                                                        TheaterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getModuleAttachment\n                        \n                    \n                \n            \n            \n                \n                    \n                    getModuleAttachment(module_id: string | number, attachments_uuid: string | number)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/api/attachments.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    module_id\n                                    \n                                            string | number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    attachments_uuid\n                                    \n                                            string | number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getTheaterAttachment\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTheaterAttachment(theater_id: string | number)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/api/attachments.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    theater_id\n                                    \n                                            string | number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { TokenService } from '../token/token.service';\nimport { TheaterService } from './theater.service';\nimport { stringify as YAMLstringfy } from \"json-to-pretty-yaml\"\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AttachmentsService {\n\n  constructor(private http: HttpClient, private tokenService: TokenService, private theaterService: TheaterService) { }\n\n  async getModuleAttachment(module_id: string | number, attachments_uuid: string | number) {\n    let link: string = environment.getModuleAttachment(module_id, attachments_uuid);\n    let x = this.http.get(link, { responseType: 'arraybuffer' });\n    x.subscribe(\n      data => {\n        const blob = new Blob([data], {\n          type: 'application/zip'\n        });\n        const url = window.URL.createObjectURL(blob);\n        // window.open(url);\n        const a = document.createElement('a');\n        document.body.appendChild(a);\n        a.classList.add('d-none');\n        a.href = url;\n        a.click();\n        window.URL.revokeObjectURL(url);\n        a.remove();\n      }\n    )\n    return x;\n  }\n\n  async getTheaterAttachment(theater_id: string|number){\n    let link: string = environment.getTheaterAttachment(theater_id);\n    let x = this.http.get(link, { responseType: 'arraybuffer' });\n    x.subscribe(\n      data => {\n        const blob = new Blob([data], {\n          type: 'application/zip'\n        });\n        const url = window.URL.createObjectURL(blob);\n        // window.open(url);\n        const a = document.createElement('a');\n        document.body.appendChild(a);\n        a.classList.add('d-none');\n        a.href = url;\n        a.click();\n        window.URL.revokeObjectURL(url);\n        a.remove();\n      }\n    )\n    return x;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"injectables/AuthGuard.html":{"url":"injectables/AuthGuard.html","title":"injectable - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/utility/app.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        KeycloakAuthGuard\n            \n\n\n            \n    Indice\n    \n        \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                isAccessAllowed\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Costruttore\n        \n            \n                \n                    \nconstructor(router: Router, keycloak: KeycloakService)\n                    \n                \n                        \n                            \n                                Definito in src/app/utility/app.guard.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parametri :\n                                    \n                                        \n                                            \n                                                Nome\n                                                    Tipo\n                                                Opzionale\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        keycloak\n                                                  \n                                                        \n                                                                    KeycloakService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        isAccessAllowed\n                        \n                    \n                \n            \n            \n                \n                    \n                    isAccessAllowed(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Definito in src/app/utility/app.guard.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n    ActivatedRouteSnapshot,\n    Router,\n    RouterStateSnapshot,\n} from '@angular/router';\nimport { KeycloakAuthGuard, KeycloakService } from 'keycloak-angular';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AuthGuard extends KeycloakAuthGuard {\n    constructor(\n        protected readonly router: Router,\n        protected readonly keycloak: KeycloakService\n    ) {\n        super(router, keycloak);\n    }\n\n    public async isAccessAllowed(\n        route: ActivatedRouteSnapshot,\n        state: RouterStateSnapshot\n    ): Promise {\n        // Force the user to log in if currently unauthenticated.\n        if (!this.authenticated) {\n            await this.keycloak.login({\n                redirectUri: window.location.origin + state.url,\n            });\n        }\n\n        // Get the roles required from the route.\n        const requiredRoles = route.data.roles;\n\n        // Allow the user to to proceed if no additional roles are required to access the route.\n        if (!(requiredRoles instanceof Array) || requiredRoles.length === 0) {\n            return true;\n        }\n\n        // Allow the user to proceed if all the required roles are present.\n        return requiredRoles.every((role) => this.roles.includes(role));\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/BlueprintFileDTO.html":{"url":"classes/BlueprintFileDTO.html","title":"class - BlueprintFileDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  BlueprintFileDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsDTO/theaterDTO.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano il blueprint di un teatro.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                imports\n                            \n                            \n                                node_templates\n                            \n                            \n                                tosca_definitions_version\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/theaterDTO.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        imports\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/theaterDTO.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        node_templates\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     literal type\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/theaterDTO.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tosca_definitions_version\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/theaterDTO.ts:38\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ModuleInstanceDTO, TheaterInstanceDTO } from \"./moduleDTO\"\n\n/**\n * Classe che contiene gli attributi che indicano il catalogo di riferimento di un teatro.\n */\nexport class TagCatalogueDTO {\n    description: string\n    id: string | number\n    name: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano lo stato di un teatro.\n */\nexport class TheatreStatusDTO {\n    code: string\n    id: string | number\n    name: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano un elemento nella sequenza di deploy.\n */\nexport class DeployInstanceDTO {\n    moduleInstanceConfigurationUUID?: string\n    moduleInstanceName: string\n    moduleInstanceUUID: string\n    moduleUUID: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano il blueprint di un teatro.\n */\nexport class BlueprintFileDTO {\n    description: string\n    imports: string[]\n    node_templates: {[name:string]:ModuleInstanceDTO|TheaterInstanceDTO}\n    tosca_definitions_version: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano il mapping nome-modulo.\n */\nexport class NameMappingDTO {\n    display_name: string\n    module_instance_name: string\n    module_name: string\n    node_template_name: string\n}\n/**\n * Classe che contiene gli attributi che indica l'array dei mapping nome-modulo.\n */\nexport class EntityNameMappingFileDTO {\n    name_mapping: NameMappingDTO[]\n}\n\n/**\n * Classe che contiene gli attributi che indicano il teaatro.\n */\nexport class TheaterDTO {\n    author: string\n    blueprintFile: BlueprintFileDTO\n    blueprintUUID: string | number\n    createdBy: string\n    createdDate: string\n    deploymentSequence: {[index:string]:DeployInstanceDTO} //tosee\n    description: string\n    entityNameMappingFile: EntityNameMappingFileDTO\n    id: string | number\n    isLocked: boolean\n    lastModifiedBy: string\n    lastModifiedDate: string\n    lockAcquiredTimestamp: string\n    lockLastUserAcquiring: string\n    lockReleasedTimestamp: string\n    name: string\n    status: TheatreStatusDTO\n    tags: TagCatalogueDTO[]\n    uuid: string\n    version: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/BorderNetworkDTO.html":{"url":"classes/BorderNetworkDTO.html","title":"class - BorderNetworkDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  BorderNetworkDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsDTO/networkDTO.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indica la border network.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                bnName\n                            \n                            \n                                id\n                            \n                            \n                                subnet\n                            \n                            \n                                uuid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        bnName\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/networkDTO.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/networkDTO.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subnet\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     literal type | null\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/networkDTO.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uuid\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/networkDTO.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class NetworkDTO {\n    id: string | number\n    name: string\n    uuid: string\n}\n\n/**\n * Classe che contiene gli attributi che indica la border network.\n */\nexport class BorderNetworkDTO {\n    bnName: string\n    id: string | number\n    subnet: {} | null\n    uuid: string | number\n}\n\n/**\n * Classe che contiene gli attributi che indicano le net os.\n */\nexport class NetOSRouterDTO {\n    borderNetwork: BorderNetworkDTO\n    id: string | number\n    subnet: {} | null\n    uuid: string | number\n}\n\n\n/**\n * Classe che contiene gli attributi che indicano le subnet.\n */\nexport class SubnetDTO {\n    allocationPool: string\n    borderNetwork: BorderNetworkDTO\n    cidr: string\n    dns: string\n    gateway: string\n    id: string | number\n    isDhcp: boolean\n    name: string\n    network: NetworkDTO\n    router: NetOSRouterDTO\n    uuid: string\n    version: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"interfaces/CommonModule.html":{"url":"interfaces/CommonModule.html","title":"interface - CommonModule","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfacce\n  \n  CommonModule\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsApplication/applicationModels.ts\n        \n\n\n\n\n        \n            Indice\n            \n                \n                    \n                        \n                            Proprietà\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            host_number\n                                        \n                                \n                                \n                                        \n                                            hosts\n                                        \n                                \n                                \n                                        \n                                            interfaces\n                                        \n                                \n                                \n                                        \n                                            network_number\n                                        \n                                \n                                \n                                        \n                                            subnet_number\n                                        \n                                \n                                \n                                        \n                                            topology\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Proprietà\n                    \n                        \n                                \n                                    \n                                        \n                                        host_number\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        host_number:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hosts\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hosts:     HostModuleDTO[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :     HostModuleDTO[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        interfaces\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        interfaces:         ModuleNetworkInterfaceDTO[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         ModuleNetworkInterfaceDTO[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        network_number\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        network_number:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subnet_number\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subnet_number:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        topology\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        topology:         NodeTopologyElement\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         NodeTopologyElement\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ReteHostInfo } from \"src/app/rete-settings/nodes/rete-nodes/host/hostNode\";\nimport { ReteNetworkInfo } from \"src/app/rete-settings/nodes/rete-nodes/network/networkNode\";\nimport { ReteSubnetInfo } from \"src/app/rete-settings/nodes/rete-nodes/subnet/subnetNode\";\nimport { ReteMirroringModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/mirroringModuleInstance/mirroringModuleInstanceNode\";\nimport { ReteTheaterInternalServiceModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/theaterInternalServiceModuleInstance/theaterInternalServiceModuleInstanceNode\";\nimport { ReteTheaterModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/theaterModuleInstance/theaterModuleInstanceNode\";\nimport { FlavorBasicInfo } from \"../modelsDTO/falvorDTO\";\nimport { HostModuleDTO } from \"../modelsDTO/hostDTO\";\nimport { ModuleNetworkInterfaceDTO, ModuleInstancePropertiesDTO, SimpleModuleDTO, TheaterInstancePropertiesDTO, ModuleInstanceDTO, ModuleDTO, SimpleAreaDTO, AreaDTO } from \"../modelsDTO/moduleDTO\";\nimport { TheaterDTO } from \"../modelsDTO/theaterDTO\";\n\n\nexport interface CommonModule {\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n}\n\n\n/**\n * Classe contenente gli attributi utilizzati per le operazioni che coinvolgono i moduli.\n * ps. Questa struttura è prettamente utilizzata nella chiamata relativa al singolo modulo.\n */\nexport class ModuleApplication extends ModuleDTO implements CommonModule {\n    imports: string[] // perchè nell'export yaml è previsto\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n    // serve per validare il json risultante dal parsing del theaterApplication\n    validateObject?: string = \"module\";\n}\n// PER IMPLEMENTAZIONI FUTURE, PER COERENZA, PRENDERE DIRETTAMENTE I SINGOLI NODI DALLA CHIAMATA ESCLUSIVA E NON DA QUELLA CHE RESTITUISCE TUTTI I TEATRI\n/**\n * Classe contenente gli attributi utilizzati per le operazioni che coinvolgono i moduli.\n * ps. Questa struttura è prettamente utilizzata nella chiamata che prende tutti i moduli del teatro.\n */\nexport class SimpleModuleApplication extends SimpleModuleDTO implements CommonModule {\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n}\n\n\nexport class ReteConnection {\n    from: string;\n    port_src: string;\n    to: string;\n    port_dst: string;\n}\n\nexport interface TopologyList {\n    rete: any;\n    topology?: TopologyElement\n}\nexport class TopologyElement {\n    elements: { [name: string]: any };\n    connection: ReteConnection[]\n}\n\n// apptype module topology\n\nexport class NodeTopologyElement implements TopologyElement {\n    elements: { [hostName: string]: ReteHostInfo | ReteSubnetInfo | ReteNetworkInfo };\n    connection: ReteConnection[]\n}\n\nexport interface ModuleTopology extends TopologyList {\n    rete: ReteMirroringModuleInstanceInfo | ReteTheaterInternalServiceModuleInstanceInfo | ReteTheaterModuleInstanceInfo\n    topology: NodeTopologyElement;\n}\n\nexport class ModuleInstance extends ModuleInstanceDTO implements ModuleTopology {\n    // moduleTopology data\n    rete: ReteTheaterModuleInstanceInfo | ReteTheaterInternalServiceModuleInstanceInfo | ReteMirroringModuleInstanceInfo;\n    topology: NodeTopologyElement;\n    // other data\n    moduleInfo: SimpleModuleApplication\n}\n\n// apptype theater theater\n\nexport interface TheaterTopology extends TopologyElement {\n    elements: { [hostName: string]: ModuleInstance };\n    connection: ReteConnection[];\n}\n\nexport class TheaterApplication extends TheaterDTO implements TheaterTopology {\n    // theaterTopology data\n    elements: { [hostName: string]: ModuleInstance; };\n    connection: ReteConnection[];\n    // other data\n    properties: TheaterInstancePropertiesDTO;\n    topology: TheaterTopology;\n    // serve per validare il json risultante dal parsing del theaterApplication\n    validateObject?: string = \"theater\";\n}\n\nexport class AreaApplication extends AreaDTO {\n    color?: string;\n}\nexport class AreaColorDTO extends SimpleAreaDTO {\n    color: string;\n}\n\n\nexport class FlavorApplication extends FlavorBasicInfo {\n    flavorName: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"components/ComposerComponent.html":{"url":"components/ComposerComponent.html","title":"component - ComposerComponent","body":"\n                   \n\n\n\n\n\n  Componenti\n  \n  ComposerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/composer-system/composer/composer.component.ts\n\n\n\n    \n        Descrizione\n    \n    \n        Componente che ha come scopo di switchare l'ambiente di costruzione moduli e teatri in base ai dati passati.\n\n    \n\n\n    \n        Implementa\n    \n    \n                    OnInit\n    \n\n\n\n    Metadati\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-composer\n            \n\n            \n                styleUrls\n                ./composer.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./composer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                active\n                            \n                            \n                                    Protected\n                                author\n                            \n                            \n                                    Protected\n                                data\n                            \n                            \n                                    Protected\n                                dataFromRouter\n                            \n                            \n                                    Protected\n                                description\n                            \n                            \n                                    Protected\n                                flavor\n                            \n                            \n                                    Protected\n                                hasFile\n                            \n                            \n                                    Protected\n                                hasproblem\n                            \n                            \n                                    Protected\n                                MODULE\n                            \n                            \n                                    Protected\n                                modulesDict\n                            \n                            \n                                    Protected\n                                name\n                            \n                            \n                                    Protected\n                                THEATER\n                            \n                            \n                                    Protected\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                gohome\n                            \n                            \n                                    Async\n                                initMODULE\n                            \n                            \n                                    Async\n                                initTHEATER\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Costruttore\n        \n            \n                \n                    \nconstructor(router: Router, parseService: ParseService, spinnerService: SpinnerService, storageService: StorageService)\n                    \n                \n                        \n                            \n                                Definito in src/app/composer-system/composer/composer.component.ts:74\n                            \n                        \n\n                \n                    \n                            Costruttore di ComposerComponent.\nSi occupa di prendere i dati di route url e valorizzare le rispettive variabili.\n\n                            \n                                    Parametri :\n                                    \n                                        \n                                            \n                                                Nome\n                                                    Tipo\n                                                Opzionale\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parseService\n                                                  \n                                                        \n                                                                        ParseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        spinnerService\n                                                  \n                                                        \n                                                                        SpinnerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        gohome\n                        \n                    \n                \n            \n            \n                \n                    \n                    gohome()\n                \n            \n\n\n            \n                \n                    Definito in src/app/composer-system/composer/composer.component.ts:182\n                \n            \n\n\n            \n                \n                    Funzione che esegue una redirezione alla pagine home\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        initMODULE\n                        \n                    \n                \n            \n            \n                \n                    \n                    initMODULE()\n                \n            \n\n\n            \n                \n                    Definito in src/app/composer-system/composer/composer.component.ts:140\n                \n            \n\n\n            \n                \n                    Funzione che esegue tutte le funzioni di inizializzazione, reperimento e filtraggio dati da poter essere passati alla componente di ModuleComposer.\nEsegue anche le attività di spinner-loading.\nSee {ReteModuleComposer}\nSee {SpinnerService}\nSee {parseService}\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        initTHEATER\n                        \n                    \n                \n            \n            \n                \n                    \n                    initTHEATER()\n                \n            \n\n\n            \n                \n                    Definito in src/app/composer-system/composer/composer.component.ts:162\n                \n            \n\n\n            \n                \n                    Funzione che esegue tutte le funzioni di inizializzazione, reperimento e filtraggio dati da poter essere passati alla componente di TheaterComposer.\nEsegue anche le attività di spinner-loading.\nSee {ReteTheaterComposer}\nSee {SpinnerService}\nSee {parseService}\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Definito in src/app/composer-system/composer/composer.component.ts:118\n                \n            \n\n\n            \n                \n                    Funzione richiamata all'inizializzazione della componente ComposerComponent.\nRichiama le funzioni adeguate in base al tipo di componente Modulo o Teatro scelto per il design.\nSee {initMODULE}\nSee {initTHEATER}\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        active\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                \n                    \n                        Valore predefinito : false\n                    \n                \n                    \n                        \n                                Definito in src/app/composer-system/composer/composer.component.ts:47\n                        \n                    \n\n            \n                \n                    Variabile che indica lo stato di reperimento dei dati prima di visualizzare le componenti di costruzione\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        author\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/composer-system/composer/composer.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     TheaterApplication | ModuleApplication\n\n                    \n                \n                    \n                        \n                                Definito in src/app/composer-system/composer/composer.component.ts:74\n                        \n                    \n\n            \n                \n                    Variabile che memorizza il teatro o il modulo importato da un file\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        dataFromRouter\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         DataRouteComposer\n\n                    \n                \n                    \n                        \n                                Definito in src/app/composer-system/composer/composer.component.ts:25\n                        \n                    \n\n            \n                \n                    Variabile che ha come scopo prendere i dati passati come url-parameters\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/composer-system/composer/composer.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        flavor\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         FlavorApplication[]\n\n                    \n                \n                \n                    \n                        Valore predefinito : []\n                    \n                \n                    \n                        \n                                Definito in src/app/composer-system/composer/composer.component.ts:54\n                        \n                    \n\n            \n                \n                    Variabile che viene valorizzata con i flavor reperiti per poter essere utilizzata dalla componente di costruzione del moduli\nSee {ReteModuleComposer}\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        hasFile\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                \n                    \n                        Valore predefinito : false\n                    \n                \n                    \n                        \n                                Definito in src/app/composer-system/composer/composer.component.ts:67\n                        \n                    \n\n            \n                \n                    Variabile che viene valorizzata nel momento in cui si presenta il caso di design da un file preso in input\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        hasproblem\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                \n                    \n                        Valore predefinito : false\n                    \n                \n                    \n                        \n                                Definito in src/app/composer-system/composer/composer.component.ts:40\n                        \n                    \n\n            \n                \n                    Variabile che viene valorizzata a true se si è verificato un errore.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        MODULE\n                        \n                    \n                \n            \n                \n                    \n                        Valore predefinito : SubjectType.MODULE\n                    \n                \n                    \n                        \n                                Definito in src/app/composer-system/composer/composer.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        modulesDict\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     literal type\n\n                    \n                \n                    \n                        \n                                Definito in src/app/composer-system/composer/composer.component.ts:61\n                        \n                    \n\n            \n                \n                    Variabile che viene valorizzata come dizionario di moduli utilizzata dalla componente di costruzione del teatro.\nSee {ReteTheaterComposer}\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/composer-system/composer/composer.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        THEATER\n                        \n                    \n                \n            \n                \n                    \n                        Valore predefinito : SubjectType.THEATER\n                    \n                \n                    \n                        \n                                Definito in src/app/composer-system/composer/composer.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         SubjectType\n\n                    \n                \n                    \n                        \n                                Definito in src/app/composer-system/composer/composer.component.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { from } from 'rxjs';\nimport { DataRouteComposer, SubjectType } from 'src/app/models/appType';\nimport { ParseService } from 'src/app/services/application/parse/parse.service';\nimport { SpinnerService } from 'src/app/services/application/spinner/spinner.service';\nimport { StorageService } from 'src/app/services/application/storage/storage.service';\nimport { FlavorApplication, ModuleApplication, ModuleInstance, TheaterApplication } from 'src/app/services/modelsApplication/applicationModels';\n\n\n/**\n * Componente che ha come scopo di switchare l'ambiente di costruzione moduli e teatri in base ai dati passati.\n */\n@Component({\n  selector: 'app-composer',\n  templateUrl: './composer.component.html',\n  styleUrls: ['./composer.component.sass']\n})\nexport class ComposerComponent implements OnInit {\n\n  /**\n   * Variabile che ha come scopo prendere i dati passati come url-parameters\n   * @type {DataRouteComposer} \n   */\n  protected dataFromRouter: DataRouteComposer;\n  // variabili istanziate come valori proveniente dalla dataFormRouter\n  protected name: string;\n  protected description: string;\n  protected author: string;\n  protected type: SubjectType;\n  // variabili che indicano i tipi - moduli e teatro\n  protected MODULE = SubjectType.MODULE;\n  protected THEATER = SubjectType.THEATER;\n\n  /**\n   * Variabile che viene valorizzata a true se si è verificato un errore.\n   * @type {boolean}\n   * @default false\n   */\n  protected hasproblem: boolean = false;\n\n  /**\n   * Variabile che indica lo stato di reperimento dei dati prima di visualizzare le componenti di costruzione\n   * @type  {boolean}\n   * @default false\n   */\n  protected active: boolean = false;\n\n  /**\n   * Variabile che viene valorizzata con i flavor reperiti per poter essere utilizzata dalla componente di costruzione del moduli\n   * @type {FlavorApplication}\n   * @see {ReteModuleComposer}\n   */\n  protected flavor: FlavorApplication[] = [];\n\n  /**\n   * Variabile che viene valorizzata come dizionario di moduli utilizzata dalla componente di costruzione del teatro.\n   * @type { [name: string]: ModuleInstance }\n   * @see {ReteTheaterComposer}\n   */\n  protected modulesDict: { [name: string]: ModuleInstance };\n\n  /**\n   * Variabile che viene valorizzata nel momento in cui si presenta il caso di design da un file preso in input\n   * @type {boolean} \n   */\n  protected hasFile: boolean = false;\n\n  /**\n   * Variabile che memorizza il teatro o il modulo importato da un file\n   * @type {TheaterApplication}\n   * @type {ModuleApplication}\n   */\n  protected data: TheaterApplication | ModuleApplication;\n\n\n  /**\n   * Costruttore di ComposerComponent.\n   * Si occupa di prendere i dati di route url e valorizzare le rispettive variabili.\n   * @param router \n   * @param parseService \n   * @param spinnerService \n   * @param storageService \n   */\n  constructor(\n    private router: Router,\n    private parseService: ParseService,\n    private spinnerService: SpinnerService,\n    private storageService: StorageService\n  ) {\n\n    this.dataFromRouter = this.router.getCurrentNavigation().extras.state as DataRouteComposer\n    if (this.dataFromRouter) {\n      this.name = this.dataFromRouter.name as string;\n      this.description = this.dataFromRouter.description as string;\n      this.author = this.dataFromRouter.author as string;\n      this.type = this.dataFromRouter.type as SubjectType;\n    }\n    // se non è stato inizializzato il nome e ci sono dati nello storage\n    if (!this.name && this.storageService.data) {\n      this.hasFile = true;\n      this.data = this.storageService.data;\n      this.storageService.data = undefined; // consumo l'elemento\n    }\n    \n    if(!this.name && !this.data){\n      this.hasproblem = true;\n    }\n\n  }\n\n  /**\n   * Funzione richiamata all'inizializzazione della componente ComposerComponent.\n   * Richiama le funzioni adeguate in base al tipo di componente Modulo o Teatro scelto per il design.\n   * @see {initMODULE}\n   * @see {initTHEATER}\n   */\n  ngOnInit() {\n\n    if (this.type === this.MODULE) {\n      this.initMODULE();\n    }\n    else if (this.type === this.THEATER) {\n      this.initTHEATER();\n    }\n    else {\n      this.hasproblem = true;\n    }\n\n  }\n\n\n  /**\n   * Funzione che esegue tutte le funzioni di inizializzazione, reperimento e filtraggio dati da poter essere passati alla componente di ModuleComposer.\n   * Esegue anche le attività di spinner-loading.\n   * @see {ReteModuleComposer}\n   * @see {SpinnerService}\n   * @see {parseService}\n   */\n  async initMODULE() {\n    this.spinnerService.setSpinner(true, \"Loading canvas element\");\n    if (this.hasFile) {\n      this.data = this.data as ModuleApplication;\n    }\n    from(\n      this.parseService.parseFlavorForModuleComposer()\n    )\n      .subscribe(el => {\n        this.flavor = el\n        this.spinnerService.setSpinner(false);\n        this.active = true;\n      });\n  }\n\n  /**\n   * Funzione che esegue tutte le funzioni di inizializzazione, reperimento e filtraggio dati da poter essere passati alla componente di TheaterComposer.\n   * Esegue anche le attività di spinner-loading.\n   * @see {ReteTheaterComposer}\n   * @see {SpinnerService}\n   * @see {parseService}\n   */\n  async initTHEATER() {\n    this.spinnerService.setSpinner(true, \"Getting Theater modules\")\n    if (this.hasFile) {\n      this.data = this.data as TheaterApplication;\n    }\n    from(\n      this.parseService.parseModuleForTheaterComposer()\n    )\n      .subscribe(\n        el => {\n          this.modulesDict = el;\n          this.spinnerService.setSpinner(false);\n          this.active = true;\n        }\n      )\n  }\n\n  /**\n   * Funzione che esegue una redirezione alla pagine home\n   */\n  public gohome() {\n    this.router.navigate(['/home']);\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n\n\n\n\n    \n        \n            \n                \n                 A Problem occurred when loading designer system \n            \n            \n                \n                     Go home \n            \n        \n    \n\n    \n\n    \n                \n                    ./composer.component.sass\n                \n                .oh-imp\n    overflow: hidden !important\n    \n\n    \n        \n        \n            \n                Legenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento html con direttive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                         A Problem occurred when loading designer system                                                              Go home                         '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ComposerComponent', 'selector': 'app-composer'},{'name': 'ControlTemplate', 'selector': ''},{'name': 'DataInputComponent', 'selector': 'app-data-input'},{'name': 'DataInputV2Component', 'selector': 'app-data-input-v2'},{'name': 'DataItemComponent', 'selector': 'app-window-item'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HostComponent', 'selector': ''},{'name': 'HowToUseComponent', 'selector': 'app-how-to-use'},{'name': 'MirroringModuleInstanceComponent', 'selector': ''},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavbarElementComponent', 'selector': 'app-navbar-element'},{'name': 'NetworkComponent', 'selector': ''},{'name': 'OffcanvasComponent', 'selector': 'app-offcanvas'},{'name': 'ReteModuleComposerComponent', 'selector': 'app-rete-module-composer'},{'name': 'ReteModuleVisualizerComponent', 'selector': 'app-rete-module-visualizer'},{'name': 'ReteTheaterComposerComponent', 'selector': 'app-rete-theater-composer'},{'name': 'ReteTheaterVisualizerComponent', 'selector': 'app-rete-theater-visualizer'},{'name': 'SubnetComponent', 'selector': ''},{'name': 'TabnavComponent', 'selector': 'app-tabnav'},{'name': 'TheaterInternalServiceModuleInstanceComponent', 'selector': ''},{'name': 'TheaterModuleInstanceComponent', 'selector': ''},{'name': 'UnderbarComponent', 'selector': 'app-underbar'},{'name': 'VisualizerComponent', 'selector': 'app-displayer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ComposerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/ConfigurationTemplateDTO.html":{"url":"classes/ConfigurationTemplateDTO.html","title":"class - ConfigurationTemplateDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  ConfigurationTemplateDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsDTO/moduleDTO.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano i parametri di configurazione di un modulto.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                anchor_parameters\n                            \n                            \n                                category\n                            \n                            \n                                control_parameters\n                            \n                            \n                                description\n                            \n                            \n                                fixed_parameters\n                            \n                            \n                                infrastructure_parameters\n                            \n                            \n                                instance_parameters\n                            \n                            \n                                module\n                            \n                            \n                                platform\n                            \n                            \n                                structural_parameters\n                            \n                            \n                                version\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        anchor_parameters\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     literal type\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        control_parameters\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     literal type\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fixed_parameters\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     literal type\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        infrastructure_parameters\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     literal type\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        instance_parameters\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     literal type\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        platform\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        structural_parameters\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     literal type\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:67\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PageableDTO, SortDTO } from './elementDTO';\nimport { NetworkDTO } from './networkDTO';\nimport { TheaterDTO } from './theaterDTO';\n\n/**\n * Classe che contiene gli attributi che indicano l'insieme dei moduli ritornati dal teatro.\n */\nexport class ModuleListDTO {\n    content: SimpleModuleDTO[]\n    pageable: PageableDTO\n    last: boolean\n    totalPages: string | number\n    totalElements: string | number\n    size: string | number\n    number: string | number\n    sort: SortDTO\n    numberOfElements: string | number\n    first: boolean\n    empty: boolean\n}\n\n/**\n * Classe che contiene gli attributi che indica il catalogo del tipo.\n */\nexport class TypesCatalogueDTO {\n    group: string\n    id: string | number\n    parentId: {}\n    value: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano la classificazione del modulo.\n */\nexport class ModuleClassificationDTO {\n    blueprintType: string\n    category: string\n    expectedInstanceType: string\n    id: string | number\n    mcClass: string\n    type: string\n    uuid: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano un parametro generico.\n */\nexport class GenericParameterDTO {\n    type: string\n    default: string\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano i parametri di configurazione di un modulto.\n */\nexport class ConfigurationTemplateDTO {\n    anchor_parameters: { [name: string]: GenericParameterDTO | string }\n    instance_parameters: { [name: string]: GenericParameterDTO }\n    structural_parameters: { [name: string]: GenericParameterDTO }\n    fixed_parameters: { [name: string]: GenericParameterDTO }\n    control_parameters: { [name: string]: GenericParameterDTO }\n    infrastructure_parameters: { [name: string]: GenericParameterDTO }\n    module: string\n    description: string\n    category: string\n    version: string | number\n    platform: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano la modalità di un modulo.\n */\nexport class ModuleModeDTO {\n    code: string\n    id: string | number\n    name: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano lo stato di un modulo.\n */\nexport class ModuleStatusDTO {\n    descriptionCode: string\n    id: string | number\n    name: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le statitistiche di un modulo.\n */\nexport class StatisticItemDTO {\n    error: string | number\n    updated: string | number\n    inserted: string | number\n}\n\n/**\n * Classe che contiene gli attributi che indicano il modulo (simple - in dipendenza del teatro).\n */\nexport class SimpleModuleDTO {\n    createdBy: string\n    createdDate: string\n    description: string\n    id: string | number\n    isLocked: boolean\n    lastModifiedBy: string\n    lastModifiedDate: string\n    lockAcquiredTimestamp: string\n    lockLastUserAcquiring: string\n    lockReleasedTimestamp: string\n    name: string\n    status: ModuleStatusDTO\n    type?: string | any\n    uuid: string\n    version: string | number\n}\n\n/**\n * Classe che contiene gli attributi che indicano il modulo (complex - ritorato da call appostita).\n * @extends {SimpleModuleDTO}\n */\nexport class ModuleDTO extends SimpleModuleDTO {\n    attachments: string[]\n    author: string\n    capabilities: { [name: string]: string }\n    catalog1: TypesCatalogueDTO\n    catalog2: TypesCatalogueDTO\n    catalog3: TypesCatalogueDTO\n    classification: ModuleClassificationDTO\n    configurationTemplate: ConfigurationTemplateDTO\n    detailProperties: {}\n    input: { [name: string]: string }\n    output: { [name: string]: string }\n    mode: ModuleModeDTO\n    statistics: { [name: string]: StatisticItemDTO | string | number }\n    tags: []\n}\n\n/**\n * Classe che contiene gli attributi che indicano le interfacce esposte da un modulo.\n */\nexport class ModuleNetworkInterfaceDTO {\n    id: string | number\n    label: string\n    module: ModuleDTO\n    network: NetworkDTO\n    nodeName: string\n    type: string\n    uuid: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le connessioni interfaccia-modulo.\n */\nexport class ConsumerInterfaceLinkDTO {\n    local_interface: string\n    module_instance: string\n    remote_interface: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà dell'istanza di un modulo all'interno del node_templates.\n */\nexport class ModuleInstancePropertiesDTO {\n    area: string\n    description: string\n    module: string\n    version: string | number\n    sequence: string | number\n    consumer_interfaces_link: ConsumerInterfaceLinkDTO[]\n}\n\n\n/**\n * Classe che contiene gli attributi che indicano l'area di appartenenza di un modulo (complex).\n */\nexport class AreaDTO {\n    id: string | number;\n    uuid: string;\n    name: string;\n    description: string;\n    theater: TheaterDTO;\n    deleted: boolean | string;\n}\n\n/**\n * Classe che contiene gli attributi che indicano l'area di appartenenza di un modulo (simple).\n */\nexport class SimpleAreaDTO {\n    area: string\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà dell'istanza di un teatro all'interno del node_templates.\n */\nexport class TheaterInstancePropertiesDTO {\n    mode: string\n    tags: TagTIP[]\n    areas: SimpleAreaDTO[]\n    author: string\n    version: string | number\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano un tag.\n */\nexport class TagTIP{\n    tag: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano in via generale le caratteristiche di un elemento che deve essere presente nel node_templates.\n */\nexport class ElementIntoTheaterDTO {  // goes into map in blueprint [name:string]: Module...\n    properties: ModuleInstancePropertiesDTO | TheaterInstancePropertiesDTO\n    type: string\n}\n\n\n/**\n * Classe che contiene gli attributi che indicano le caratteristiche di un teatro presente nel node_templates.\n */\nexport class ModuleInstanceDTO {\n    properties: ModuleInstancePropertiesDTO\n    type: string\n}\n/**\n * Classe che contiene gli attributi che indicano le caratteristiche di un modulo presente nel node_templates.\n */\nexport class TheaterInstanceDTO {\n    properties: TheaterInstancePropertiesDTO\n    type: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/ConstraintsMSD.html":{"url":"classes/ConstraintsMSD.html","title":"class - ConstraintsMSD","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  ConstraintsMSD\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsExport/moduleExport.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano i vincoli di connessione del modulo per l'export.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                interface_constraints\n                            \n                            \n                                module_constraints\n                            \n                            \n                                network_constraints\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        interface_constraints\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         InterfaceConstraints[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        module_constraints\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ModuleConstraints[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        network_constraints\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         NetworkConstraints[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:46\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ModeTypeExport, ModuleTypeExport, NetworkTypeExport, NodeTypeExport, PortTypeExport, RelationshipsTypeExport, SubnetTypeExport, ToscaDefinitionType } from \"./TypeExport\"\n\n\n/**\n * Classe utilizzata per l'export. \n * Contiene le informazioni generali per il modulo che devono esserci nello standard Tosca.\n */\nexport class ModuleExport {\n    tosca_definitions_version: ToscaDefinitionType\n    description: string\n    imports: string[]\n    node_templates: { [name: string]: ModuleSimpleData | NodeSimpleData | PortSimpleData | NetworkSimpleData | SubnetSimpleData }\n    dsl_definition: any | null; //future\n    capabilites: any | null //future\n    outputs: any | null //future\n}\n\n/**\n * Classe che contiene gli attributi che indicano la rappresentazione del modulo per l'export.\n */\nexport class ModuleSimpleData {\n    type: ModuleTypeExport\n    properties: PropertiesMSD\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà del modulo per l'export.\n */\nexport class PropertiesMSD {\n    mode: ModeTypeExport\n    description: string\n    version: string | number\n    constraints: ConstraintsMSD\n    interface_networks: {\n        providers: InterfaceNetworksProvider[]\n        consumers: InterfaceNetworksConsumer[]\n    }\n    virtual_machines: VirtualMachine[]\n}\n/**\n * Classe che contiene gli attributi che indicano i vincoli di connessione del modulo per l'export.\n */\nexport class ConstraintsMSD {\n    interface_constraints: InterfaceConstraints[]\n    module_constraints: ModuleConstraints[]\n    network_constraints: NetworkConstraints[]\n}\n/**\n * Classe che contiene gli attributi che indicano i viconli per le interfacce di connessione del modulo.\n */\nexport class InterfaceConstraints {\n    local_interface: string\n    multiple_mode: boolean = false //future\n    module_name: string\n    compatibility: string = \"1.0\" // future\n    remote_interface: string\n}\n/**\n * Classe che contiene gli attributi che indicano i viconli del modulo.\n */\nexport class ModuleConstraints {\n}\n/**\n * Classe che contiene gli attributi che indicano i viconli dei network del modulo.\n */\nexport class NetworkConstraints {\n}\n/**\n * Classe che contiene gli attributi che indicano le interfacce provider del modulo.\n */\nexport class InterfaceNetworksProvider {\n    interface: string\n    network: string\n    tag: string\n    subnets: SubnetExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano le interfacce consumer del modulo.\n */\nexport class InterfaceNetworksConsumer {\n    interface: string\n    network: string\n    tag: string\n    subnets: SubnetExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano l'insieme di host presenti in un modulo.\n */\nexport class VirtualMachine {\n    virtual_machine: string\n    ports: VirtualMachinePorts[]\n}\n/**\n * Classe che contiene gli attributi che indicano le porte associate ad un host di un modulo.\n */\nexport class VirtualMachinePorts {\n    port: string\n    network: string\n    subnets: SubnetExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano la subnet connessa alla porte dell'host.\n * @see {VirtualMachinePorts}\n */\nexport class SubnetExport {\n    subnet: string;\n}\n\n/**\n * Classe che contiene gli attributi che indica un nodo all'interno dei node_templates.\n * @see {ModuleExport}\n */\nexport class NodeSimpleData {\n    type: NodeTypeExport\n    properties: any | null // future\n    interfaces: any | null // future\n    relationships: RelationshipsExport[]\n}\n\n/**\n * Classe che contiene gli attributi che indicano le relazioni generali.\n */\nexport class RelationshipsExport {\n    type: RelationshipsTypeExport\n    target: string\n}\n/**\n * Classe che contiene gli attributi che indicano i dati della porta all'interno dei node_templates.\n */\nexport class PortSimpleData {\n    type: PortTypeExport\n    relationships: RelationshipsExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano i dati delle network all'interno dei node_templates.\n */\nexport class NetworkSimpleData {\n    type: NetworkTypeExport\n    properties: PropertiesNSD\n}\n/**\n * Classe che contiene gli attributi che indicano le proprietà della network all'interno dei node_templates.\n * @see {NetworkSimpleData}\n */\nexport class PropertiesNSD {\n    openstack_config?: any | null // future\n    use_external_resource?: boolean | null // future\n    resource_id?: any | null // future\n}\n\n/**\n * Classe che contiene gli attributi che indicano i dati delle subnet all'interno dei node_templates.\n */\nexport class SubnetSimpleData {\n    type: SubnetTypeExport\n    relationships: RelationshipsExport[]\n    properties: PropertiesSSD\n}\n/**\n * Classe che contiene gli attributi che indicano le proprietà della subnet all'interno dei node_templates.\n * @see {NetworkSimpleData}\n */\nexport class PropertiesSSD {\n    subnet?: {\n        ip_version: string | number\n        cidr: string\n        enable_dhcp: boolean\n        gateway_ip?: any | null // future\n    }\n    openstack_config?: any | null // future\n    use_external_resource?: boolean | null // future\n    resource_id?: any | null // future\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/ConsumerInterfaceLinkDTO.html":{"url":"classes/ConsumerInterfaceLinkDTO.html","title":"class - ConsumerInterfaceLinkDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  ConsumerInterfaceLinkDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsDTO/moduleDTO.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano le connessioni interfaccia-modulo.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                local_interface\n                            \n                            \n                                module_instance\n                            \n                            \n                                remote_interface\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        local_interface\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:157\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        module_instance\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:158\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remote_interface\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:159\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PageableDTO, SortDTO } from './elementDTO';\nimport { NetworkDTO } from './networkDTO';\nimport { TheaterDTO } from './theaterDTO';\n\n/**\n * Classe che contiene gli attributi che indicano l'insieme dei moduli ritornati dal teatro.\n */\nexport class ModuleListDTO {\n    content: SimpleModuleDTO[]\n    pageable: PageableDTO\n    last: boolean\n    totalPages: string | number\n    totalElements: string | number\n    size: string | number\n    number: string | number\n    sort: SortDTO\n    numberOfElements: string | number\n    first: boolean\n    empty: boolean\n}\n\n/**\n * Classe che contiene gli attributi che indica il catalogo del tipo.\n */\nexport class TypesCatalogueDTO {\n    group: string\n    id: string | number\n    parentId: {}\n    value: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano la classificazione del modulo.\n */\nexport class ModuleClassificationDTO {\n    blueprintType: string\n    category: string\n    expectedInstanceType: string\n    id: string | number\n    mcClass: string\n    type: string\n    uuid: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano un parametro generico.\n */\nexport class GenericParameterDTO {\n    type: string\n    default: string\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano i parametri di configurazione di un modulto.\n */\nexport class ConfigurationTemplateDTO {\n    anchor_parameters: { [name: string]: GenericParameterDTO | string }\n    instance_parameters: { [name: string]: GenericParameterDTO }\n    structural_parameters: { [name: string]: GenericParameterDTO }\n    fixed_parameters: { [name: string]: GenericParameterDTO }\n    control_parameters: { [name: string]: GenericParameterDTO }\n    infrastructure_parameters: { [name: string]: GenericParameterDTO }\n    module: string\n    description: string\n    category: string\n    version: string | number\n    platform: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano la modalità di un modulo.\n */\nexport class ModuleModeDTO {\n    code: string\n    id: string | number\n    name: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano lo stato di un modulo.\n */\nexport class ModuleStatusDTO {\n    descriptionCode: string\n    id: string | number\n    name: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le statitistiche di un modulo.\n */\nexport class StatisticItemDTO {\n    error: string | number\n    updated: string | number\n    inserted: string | number\n}\n\n/**\n * Classe che contiene gli attributi che indicano il modulo (simple - in dipendenza del teatro).\n */\nexport class SimpleModuleDTO {\n    createdBy: string\n    createdDate: string\n    description: string\n    id: string | number\n    isLocked: boolean\n    lastModifiedBy: string\n    lastModifiedDate: string\n    lockAcquiredTimestamp: string\n    lockLastUserAcquiring: string\n    lockReleasedTimestamp: string\n    name: string\n    status: ModuleStatusDTO\n    type?: string | any\n    uuid: string\n    version: string | number\n}\n\n/**\n * Classe che contiene gli attributi che indicano il modulo (complex - ritorato da call appostita).\n * @extends {SimpleModuleDTO}\n */\nexport class ModuleDTO extends SimpleModuleDTO {\n    attachments: string[]\n    author: string\n    capabilities: { [name: string]: string }\n    catalog1: TypesCatalogueDTO\n    catalog2: TypesCatalogueDTO\n    catalog3: TypesCatalogueDTO\n    classification: ModuleClassificationDTO\n    configurationTemplate: ConfigurationTemplateDTO\n    detailProperties: {}\n    input: { [name: string]: string }\n    output: { [name: string]: string }\n    mode: ModuleModeDTO\n    statistics: { [name: string]: StatisticItemDTO | string | number }\n    tags: []\n}\n\n/**\n * Classe che contiene gli attributi che indicano le interfacce esposte da un modulo.\n */\nexport class ModuleNetworkInterfaceDTO {\n    id: string | number\n    label: string\n    module: ModuleDTO\n    network: NetworkDTO\n    nodeName: string\n    type: string\n    uuid: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le connessioni interfaccia-modulo.\n */\nexport class ConsumerInterfaceLinkDTO {\n    local_interface: string\n    module_instance: string\n    remote_interface: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà dell'istanza di un modulo all'interno del node_templates.\n */\nexport class ModuleInstancePropertiesDTO {\n    area: string\n    description: string\n    module: string\n    version: string | number\n    sequence: string | number\n    consumer_interfaces_link: ConsumerInterfaceLinkDTO[]\n}\n\n\n/**\n * Classe che contiene gli attributi che indicano l'area di appartenenza di un modulo (complex).\n */\nexport class AreaDTO {\n    id: string | number;\n    uuid: string;\n    name: string;\n    description: string;\n    theater: TheaterDTO;\n    deleted: boolean | string;\n}\n\n/**\n * Classe che contiene gli attributi che indicano l'area di appartenenza di un modulo (simple).\n */\nexport class SimpleAreaDTO {\n    area: string\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà dell'istanza di un teatro all'interno del node_templates.\n */\nexport class TheaterInstancePropertiesDTO {\n    mode: string\n    tags: TagTIP[]\n    areas: SimpleAreaDTO[]\n    author: string\n    version: string | number\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano un tag.\n */\nexport class TagTIP{\n    tag: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano in via generale le caratteristiche di un elemento che deve essere presente nel node_templates.\n */\nexport class ElementIntoTheaterDTO {  // goes into map in blueprint [name:string]: Module...\n    properties: ModuleInstancePropertiesDTO | TheaterInstancePropertiesDTO\n    type: string\n}\n\n\n/**\n * Classe che contiene gli attributi che indicano le caratteristiche di un teatro presente nel node_templates.\n */\nexport class ModuleInstanceDTO {\n    properties: ModuleInstancePropertiesDTO\n    type: string\n}\n/**\n * Classe che contiene gli attributi che indicano le caratteristiche di un modulo presente nel node_templates.\n */\nexport class TheaterInstanceDTO {\n    properties: TheaterInstancePropertiesDTO\n    type: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/ConsumerInterfaceLinkExport.html":{"url":"classes/ConsumerInterfaceLinkExport.html","title":"class - ConsumerInterfaceLinkExport","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  ConsumerInterfaceLinkExport\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsExport/theaterExport.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano i collegamenti e relazioni intramodulo con le varie interfacce.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                local_interface\n                            \n                            \n                                module_interface\n                            \n                            \n                                remote_interface\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        local_interface\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/theaterExport.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        module_interface\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/theaterExport.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remote_interface\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/theaterExport.ts:79\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ModeTypeExport, ModuleTypeExport, TheaterTypeExport, ToscaDefinitionType } from \"./TypeExport\"\n\n/**\n * Classe utilizzata per l'export. \n * Contiene le informazioni generali per il teatro che devono esserci nello standard Tosca.\n */\nexport class TheaterExport {\n    tosca_definitions_version: ToscaDefinitionType\n    description: string\n    imports: string[]\n    node_templates: { [name: string]: TheaterSimpleData | ModuleInstanceSimpleData }\n}\n/**\n * Classe che contiene gli attributi che indicano il teatro all'interno dei node_templates.\n */\nexport class TheaterSimpleData {\n    type: TheaterTypeExport\n    properties: PropertiesTSD\n}\n/**\n * Classe che contiene gli attributi che indicano le proprietà del teatro.\n */\nexport class PropertiesTSD {\n    version: string | number\n    description: string\n    mode: ModeTypeExport\n    author: string\n    tags: TagsExport[]\n    areas: AreaExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano i tag nelle proprietà del teatro.\n * @see {PropertiesTSD}\n */\nexport class TagsExport {\n    tag: string\n}\n/**\n * Classe che contiene gli attributi che indicano le aree nelle proprietà del teatr.\n * @see {PropertiesTSD}\n */\nexport class AreaExport {\n    area: string\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano il modulo all'interno dei node_modules.\n */\nexport class ModuleInstanceSimpleData {\n    type: ModuleTypeExport\n    properties: PropertiesMISD\n}\n/**\n * Classe che contiene gli attributi che indicano le propeitò del modulo all'interno dei node_templates.\n */\nexport class PropertiesMISD{\n    module: string\n    version: string | number\n    area: string\n    sequence: number\n    sources?: SourceExport[]\n    consumer_interface_link: ConsumerInterfaceLinkExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano le porte di ingresso del modulo all'interno dei node_templates.\n */\nexport class SourceExport{\n    module_instance: string\n    host:string\n    interfaces: string[]\n}\n/**\n * Classe che contiene gli attributi che indicano i collegamenti e relazioni intramodulo con le varie interfacce.\n */\nexport class ConsumerInterfaceLinkExport{\n    local_interface: string\n    module_interface:string\n    remote_interface:string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"components/ControlTemplate.html":{"url":"components/ControlTemplate.html","title":"component - ControlTemplate","body":"\n                   \n\n\n\n\n\n  Componenti\n  \n  ControlTemplate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/rete-settings/controls/control.ts\n\n\n\n    \n        Descrizione\n    \n    \n        Componente che si occpa del control per i nodi la libreria retejs\n\n    \n\n\n\n\n\n    Metadati\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                styleUrls\n                ./control.css\n            \n\n\n\n            \n                templateUrl\n                ./control.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Indice\n    \n        \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Input\n                    \n                \n                \n                    \n                        \n                            \n                                change\n                            \n                            \n                                mounted\n                            \n                            \n                                readonly\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Input\n        \n            \n                \n                    \n                        \n                        change\n                    \n                \n                \n                    \n                        Tipo :         Function\n\n                    \n                \n                        \n                            \n                                    Definito in src/app/rete-settings/controls/control.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mounted\n                    \n                \n                \n                    \n                        Tipo :         Function\n\n                    \n                \n                        \n                            \n                                    Definito in src/app/rete-settings/controls/control.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        readonly\n                    \n                \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                        \n                            \n                                    Definito in src/app/rete-settings/controls/control.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Tipo :         number\n\n                    \n                \n                        \n                            \n                                    Definito in src/app/rete-settings/controls/control.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/controls/control.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Type } from '@angular/core';\nimport { Control, NodeEditor } from 'rete';\nimport { AngularControl } from 'rete-angular-render-plugin';\n\n\n/**\n * Componente che si occpa del control per i nodi la libreria retejs\n */\n@Component({\n  templateUrl: './control.html',\n  styleUrls:  ['./control.css'],\n})\nexport class ControlTemplate {\n\n  @Input() value!: number;\n  @Input() readonly!: boolean;\n  @Input() change!: Function;\n  @Input() mounted!: Function;\n\n  ngOnInit() {\n    this.mounted();\n  }\n}\n\n\n/**\n * Elemento indica il control da utilizzare dai vari tipi di nodi/moduli \n */\nexport class _Control extends Control implements AngularControl {\n  \n  component: Type\n  props: { [key: string]: unknown }\n\n  constructor(public emitter: NodeEditor, public key: string, readonly = false) {\n    \n    super(key);\n\n    this.component = ControlTemplate;\n    this.props = {\n      readonly,\n      change: (v: undefined) => this.onChange(v),\n      value: 0,\n      mounted: () => {\n        this.setValue(+(this.getData(key) as any) || 0)\n      },\n  };\n    \n  }\n\n  onChange(val: number) {\n    this.setValue(val);\n    this.emitter.trigger('process');\n  }\n\n  setValue(val: number) {\n    this.props.value = +val;\n    this.putData(this.key, this.props.value)\n  }\n\n}\n\n    \n\n    \n        \n    \n\n    \n                \n                    ./control.css\n                \n                input {\n    border-radius: 30px;\n    background-color: white;\n    padding: 2px 6px;\n    border: 1px solid #999;\n    font-size: 110%;\n    width: 140px;\n    box-sizing: border-box;\n  }\n    \n\n    \n        \n        \n            \n                Legenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento html con direttive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ComposerComponent', 'selector': 'app-composer'},{'name': 'ControlTemplate', 'selector': ''},{'name': 'DataInputComponent', 'selector': 'app-data-input'},{'name': 'DataInputV2Component', 'selector': 'app-data-input-v2'},{'name': 'DataItemComponent', 'selector': 'app-window-item'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HostComponent', 'selector': ''},{'name': 'HowToUseComponent', 'selector': 'app-how-to-use'},{'name': 'MirroringModuleInstanceComponent', 'selector': ''},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavbarElementComponent', 'selector': 'app-navbar-element'},{'name': 'NetworkComponent', 'selector': ''},{'name': 'OffcanvasComponent', 'selector': 'app-offcanvas'},{'name': 'ReteModuleComposerComponent', 'selector': 'app-rete-module-composer'},{'name': 'ReteModuleVisualizerComponent', 'selector': 'app-rete-module-visualizer'},{'name': 'ReteTheaterComposerComponent', 'selector': 'app-rete-theater-composer'},{'name': 'ReteTheaterVisualizerComponent', 'selector': 'app-rete-theater-visualizer'},{'name': 'SubnetComponent', 'selector': ''},{'name': 'TabnavComponent', 'selector': 'app-tabnav'},{'name': 'TheaterInternalServiceModuleInstanceComponent', 'selector': ''},{'name': 'TheaterModuleInstanceComponent', 'selector': ''},{'name': 'UnderbarComponent', 'selector': 'app-underbar'},{'name': 'VisualizerComponent', 'selector': 'app-displayer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ControlTemplate'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/DataInput.html":{"url":"classes/DataInput.html","title":"class - DataInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  DataInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/data-input/dataInputType.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Tipo di dato Input contenente variabili generali.\nSee {DataInputComponet}\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                    Opzionale\n                                data_appended\n                            \n                            \n                                    Opzionale\n                                data_prepended\n                            \n                            \n                                id\n                            \n                            \n                                required\n                            \n                            \n                                    Opzionale\n                                text\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        data_appended\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/data-input/dataInputType.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        data_prepended\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/data-input/dataInputType.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/data-input/dataInputType.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        required\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/data-input/dataInputType.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        text\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/data-input/dataInputType.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     \"textarea\" | \"text\" | \"selection\" | \"checkbox\"\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/data-input/dataInputType.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class DataInputElement{\n    element: Array;\n}\n\n/**\n * Tipo di dato Input contenente variabili generali.\n * @see {DataInputComponet}\n */\nexport class DataInput{\n    id: string;\n    text?: string;\n    type: \"textarea\" | \"text\" | \"selection\" | \"checkbox\";\n    data_prepended?: string;\n    data_appended?: string;\n    required: boolean;\n}\n/**\n * Tipo input text base/area.\n * Estende DataInput.\n  * @see {DataInputComponet}\n */\nexport class DataInputText extends DataInput{\n    placeholder?: string;\n}\n/**\n * Tipo input selection.\n * Estende DataInput.\n  * @see {DataInputComponet}\n */\nexport class DataInputSelection extends DataInput{\n    multiple?: boolean;\n    selected_number: number;\n    selection: SelectOption[];\n}\n/**\n * Tipo input check (toggle).\n * Estende DataInput.\n * @see {DataInputComponet}\n */\nexport class DataInputCheck  extends DataInput{\n    checked?: boolean;\n}\n\n/**\n * Tipo usato per le selezioni (multiselect option).\n  * @see {DataInputComponet}\n */\nexport class SelectOption{\n    value: string;\n    text: string;\n    other?: any;\n}\n\n/**\n * Tipo di ritorno della componente DataInputReturned.\n  * @see {DataInputComponet}\n */\nexport class DataInputReturned{\n    element: { [key:string]: SingleDataInputReturned};\n    isValid: boolean;\n    exitStatus?: 'submitted' | 'cancel' | 'error';\n}\n/**\n * Singolo elemento dato in ritorno al submit.\n  * @see {DataInputComponet}\n */\nexport class SingleDataInputReturned{\n    id: string;\n    text: string;\n    type: string;\n    value: any;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/DataInputCheck.html":{"url":"classes/DataInputCheck.html","title":"class - DataInputCheck","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  DataInputCheck\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/data-input/dataInputType.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Tipo input check (toggle).\nEstende DataInput.\nSee {DataInputComponet}\n\n            \n\n            \n                Extends\n            \n            \n                        DataInput\n            \n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                    Opzionale\n                                checked\n                            \n                            \n                                    Opzionale\n                                data_appended\n                            \n                            \n                                    Opzionale\n                                data_prepended\n                            \n                            \n                                id\n                            \n                            \n                                required\n                            \n                            \n                                    Opzionale\n                                text\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        checked\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/data-input/dataInputType.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        data_appended\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         DataInput\n\n                            \n                        \n                    \n                        \n                                Definito in         DataInput:18\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        data_prepended\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         DataInput\n\n                            \n                        \n                    \n                        \n                                Definito in         DataInput:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         DataInput\n\n                            \n                        \n                    \n                        \n                                Definito in         DataInput:14\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        required\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                        \n                            \n                                ereditato da         DataInput\n\n                            \n                        \n                    \n                        \n                                Definito in         DataInput:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        text\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         DataInput\n\n                            \n                        \n                    \n                        \n                                Definito in         DataInput:15\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     \"textarea\" | \"text\" | \"selection\" | \"checkbox\"\n\n                    \n                \n                        \n                            \n                                ereditato da         DataInput\n\n                            \n                        \n                    \n                        \n                                Definito in         DataInput:16\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class DataInputElement{\n    element: Array;\n}\n\n/**\n * Tipo di dato Input contenente variabili generali.\n * @see {DataInputComponet}\n */\nexport class DataInput{\n    id: string;\n    text?: string;\n    type: \"textarea\" | \"text\" | \"selection\" | \"checkbox\";\n    data_prepended?: string;\n    data_appended?: string;\n    required: boolean;\n}\n/**\n * Tipo input text base/area.\n * Estende DataInput.\n  * @see {DataInputComponet}\n */\nexport class DataInputText extends DataInput{\n    placeholder?: string;\n}\n/**\n * Tipo input selection.\n * Estende DataInput.\n  * @see {DataInputComponet}\n */\nexport class DataInputSelection extends DataInput{\n    multiple?: boolean;\n    selected_number: number;\n    selection: SelectOption[];\n}\n/**\n * Tipo input check (toggle).\n * Estende DataInput.\n * @see {DataInputComponet}\n */\nexport class DataInputCheck  extends DataInput{\n    checked?: boolean;\n}\n\n/**\n * Tipo usato per le selezioni (multiselect option).\n  * @see {DataInputComponet}\n */\nexport class SelectOption{\n    value: string;\n    text: string;\n    other?: any;\n}\n\n/**\n * Tipo di ritorno della componente DataInputReturned.\n  * @see {DataInputComponet}\n */\nexport class DataInputReturned{\n    element: { [key:string]: SingleDataInputReturned};\n    isValid: boolean;\n    exitStatus?: 'submitted' | 'cancel' | 'error';\n}\n/**\n * Singolo elemento dato in ritorno al submit.\n  * @see {DataInputComponet}\n */\nexport class SingleDataInputReturned{\n    id: string;\n    text: string;\n    type: string;\n    value: any;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"components/DataInputComponent.html":{"url":"components/DataInputComponent.html","title":"component - DataInputComponent","body":"\n                   \n\n\n\n\n\n  Componenti\n  \n  DataInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/data-input/data-input.component.ts\n\n\n\n    \n        Descrizione\n    \n    \n        Componente usata per renderizzare e gestire in modo automatico diversi elementi di input attraverso form.\nAttualmente disponibili sono: text, textarea, (multi)selection e checkbox.\n\n    \n\n\n    \n        Implementa\n    \n    \n                    OnInit\n    \n\n\n\n    Metadati\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-data-input\n            \n\n            \n                styleUrls\n                ./data-input.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./data-input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                dataForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                exit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                returnOutput\n                            \n                            \n                                save\n                            \n                        \n                    \n                \n\n                \n                    \n                        Input\n                    \n                \n                \n                    \n                        \n                            \n                                element\n                            \n                        \n                    \n                \n\n                \n                    \n                        Output\n                    \n                \n                \n                    \n                        \n                            \n                                dataSubmitted\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Costruttore\n        \n            \n                \n                    \nconstructor(cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Definito in src/app/components/data-input/data-input.component.ts:33\n                            \n                        \n\n                \n                    \n                            Costruttore di DataInputComponent.\n\n                            \n                                    Parametri :\n                                    \n                                        \n                                            \n                                                Nome\n                                                    Tipo\n                                                Opzionale\n                                            \n                                        \n                                        \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Input\n        \n            \n                \n                    \n                        \n                        element\n                    \n                \n                \n                    \n                        Tipo :         DataInputElement\n\n                    \n                \n                        \n                            \n                                    Definito in src/app/components/data-input/data-input.component.ts:21\n                            \n                        \n                \n                    \n                        Variabile dato in input per essere processato.\n\n                    \n                \n            \n        \n\n    \n    Output\n        \n            \n                \n                    \n                        \n                        dataSubmitted\n                    \n                \n                \n                    \n                        Tipo :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Definito in src/app/components/data-input/data-input.component.ts:27\n                            \n                        \n                \n                    \n                        Variabile ritornata in output.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        exit\n                        \n                    \n                \n            \n            \n                \nexit()\n                \n            \n\n\n            \n                \n                    Definito in src/app/components/data-input/data-input.component.ts:85\n                \n            \n\n\n            \n                \n                    Funzione usata per annullare l'operazione di convalida di risultato.\nSee {returnOutput}\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Definito in src/app/components/data-input/data-input.component.ts:48\n                \n            \n\n\n            \n                \n                    Funzione chiamata quando la componente viene inizializzata.\nEsegue controlli e inizializzazioni dei Form element e Form control.\nSee {dataForm}\nSee {FormGroup}\nSee {FormControl}\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        returnOutput\n                        \n                    \n                \n            \n            \n                \nreturnOutput(val: DataInputReturned)\n                \n            \n\n\n            \n                \n                    Definito in src/app/components/data-input/data-input.component.ts:99\n                \n            \n\n\n            \n                \n                    Funzione usata per emettere il valore processato dalla exit() oppure dalla save().\nSee {dataSubmitted}\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                DataInputReturned\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        save\n                        \n                    \n                \n            \n            \n                \nsave()\n                \n            \n\n\n            \n                \n                    Definito in src/app/components/data-input/data-input.component.ts:62\n                \n            \n\n\n            \n                \n                    Funzione usata per elaborare gli elementi della form.\nSee {returnOutput}\nSee {SingleDataInputReturned}\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        dataForm\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         FormGroup\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/data-input/data-input.component.ts:33\n                        \n                    \n\n            \n                \n                    Variabile usata per le operazione form.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output, OnInit, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { DataInputElement, DataInputReturned, SingleDataInputReturned } from './dataInputType';\n\n/**\n * Componente usata per renderizzare e gestire in modo automatico diversi elementi di input attraverso form.\n * Attualmente disponibili sono: text, textarea, (multi)selection e checkbox.  \n */\n@Component({\n  selector: 'app-data-input',\n  templateUrl: './data-input.component.html',\n  styleUrls: ['./data-input.component.sass'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DataInputComponent implements OnInit {\n\n  /**\n   * Variabile dato in input per essere processato.\n   * @type {DataInputElement}\n   */\n  @Input() element: DataInputElement;\n  \n  /**\n   * Variabile ritornata in output.\n   * @type {EventEmitter}\n   */\n  @Output() dataSubmitted = new EventEmitter();\n\n  /**\n   * Variabile usata per le operazione form.\n   * @type {FormGroup}\n   */\n  protected dataForm: FormGroup;\n\n  /**\n   * Costruttore di DataInputComponent.\n   */\n  constructor(private cdr: ChangeDetectorRef) {\n  }\n\n  /**\n   * Funzione chiamata quando la componente viene inizializzata.\n   * Esegue controlli e inizializzazioni dei Form element e Form control.\n   * @see {dataForm}\n   * @see {FormGroup}\n   * @see {FormControl}\n   */\n  ngOnInit(): void {\n    this.dataForm = new FormGroup({});\n    this.element.element.forEach(e => {\n      e.required\n        ? this.dataForm.addControl(e.id, new FormControl('', Validators.required))\n        : this.dataForm.addControl(e.id, new FormControl())\n    })\n  }\n\n  /**\n   * Funzione usata per elaborare gli elementi della form.\n   * @see {returnOutput}\n   * @see {SingleDataInputReturned}\n   */\n  save() {\n    let values: { [key: string]: SingleDataInputReturned } = {};\n    this.element.element.forEach(\n      (el) => {\n        let val: HTMLInputElement = document.getElementById(el.id) as HTMLInputElement;\n        if (el.type === 'checkbox')\n          values[el.id] = { id: el.id, text: el.text, type: el.type, value: val.checked };\n        else\n          values[el.id] = { id: el.id, text: el.text, type: el.type, value: val ? val.value : undefined };\n      }\n    )\n    let event: DataInputReturned = {\n      element: values,\n      isValid: true,\n      exitStatus: 'submitted'\n    }\n    this.returnOutput(event);\n  }\n\n  /**\n   * Funzione usata per annullare l'operazione di convalida di risultato.\n   * @see {returnOutput}\n   */\n  exit() {\n    let event: DataInputReturned = {\n      element: {},\n      isValid: false,\n      exitStatus: 'cancel'\n    }\n    this.returnOutput(event);\n  }\n\n  /**\n   * Funzione usata per emettere il valore processato dalla exit() oppure dalla save().\n   * @param val \n   * @see {dataSubmitted}\n   */\n  returnOutput(val: DataInputReturned) {\n    this.dataSubmitted.emit(val);\n    this.cdr.detectChanges();\n  }\n\n\n}\n\n    \n\n    \n        \n    \n        \n            \n                 - {{item.text}} \n            \n            \n                \n                \n                     {{item.data_prepended}} \n                \n                \n                \n                \n                    \n                \n                \n                \n                    \n                \n                \n                \n                    \n                        \n                            {{opt.text}}\n                        \n                    \n                     No selectable list found \n                \n                \n                \n                    \n                        \n                        {{item.text}}\n                    \n                \n                \n                \n                     {{item.data_appended}} \n                \n            \n        \n        \n            \n                Save\n            \n            \n                Cancel\n            \n        \n    \n\n    \n\n    \n                \n                    ./data-input.component.sass\n                \n                \n    \n\n    \n        \n        \n            \n                Legenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento html con direttive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                         - {{item.text}}                                                                              {{item.data_prepended}}                                                                                                                                                                                                                                                                                 {{opt.text}}                                                                 No selectable list found                                                                                                                     {{item.text}}                                                                                         {{item.data_appended}}                                                                         Save                                        Cancel                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ComposerComponent', 'selector': 'app-composer'},{'name': 'ControlTemplate', 'selector': ''},{'name': 'DataInputComponent', 'selector': 'app-data-input'},{'name': 'DataInputV2Component', 'selector': 'app-data-input-v2'},{'name': 'DataItemComponent', 'selector': 'app-window-item'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HostComponent', 'selector': ''},{'name': 'HowToUseComponent', 'selector': 'app-how-to-use'},{'name': 'MirroringModuleInstanceComponent', 'selector': ''},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavbarElementComponent', 'selector': 'app-navbar-element'},{'name': 'NetworkComponent', 'selector': ''},{'name': 'OffcanvasComponent', 'selector': 'app-offcanvas'},{'name': 'ReteModuleComposerComponent', 'selector': 'app-rete-module-composer'},{'name': 'ReteModuleVisualizerComponent', 'selector': 'app-rete-module-visualizer'},{'name': 'ReteTheaterComposerComponent', 'selector': 'app-rete-theater-composer'},{'name': 'ReteTheaterVisualizerComponent', 'selector': 'app-rete-theater-visualizer'},{'name': 'SubnetComponent', 'selector': ''},{'name': 'TabnavComponent', 'selector': 'app-tabnav'},{'name': 'TheaterInternalServiceModuleInstanceComponent', 'selector': ''},{'name': 'TheaterModuleInstanceComponent', 'selector': ''},{'name': 'UnderbarComponent', 'selector': 'app-underbar'},{'name': 'VisualizerComponent', 'selector': 'app-displayer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DataInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/DataInputElement.html":{"url":"classes/DataInputElement.html","title":"class - DataInputElement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  DataInputElement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/data-input/dataInputType.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Tipo di dato passato alla componente DataInput\nSee {DataInputComponet}\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                element\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        element\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     Array\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/data-input/dataInputType.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class DataInputElement{\n    element: Array;\n}\n\n/**\n * Tipo di dato Input contenente variabili generali.\n * @see {DataInputComponet}\n */\nexport class DataInput{\n    id: string;\n    text?: string;\n    type: \"textarea\" | \"text\" | \"selection\" | \"checkbox\";\n    data_prepended?: string;\n    data_appended?: string;\n    required: boolean;\n}\n/**\n * Tipo input text base/area.\n * Estende DataInput.\n  * @see {DataInputComponet}\n */\nexport class DataInputText extends DataInput{\n    placeholder?: string;\n}\n/**\n * Tipo input selection.\n * Estende DataInput.\n  * @see {DataInputComponet}\n */\nexport class DataInputSelection extends DataInput{\n    multiple?: boolean;\n    selected_number: number;\n    selection: SelectOption[];\n}\n/**\n * Tipo input check (toggle).\n * Estende DataInput.\n * @see {DataInputComponet}\n */\nexport class DataInputCheck  extends DataInput{\n    checked?: boolean;\n}\n\n/**\n * Tipo usato per le selezioni (multiselect option).\n  * @see {DataInputComponet}\n */\nexport class SelectOption{\n    value: string;\n    text: string;\n    other?: any;\n}\n\n/**\n * Tipo di ritorno della componente DataInputReturned.\n  * @see {DataInputComponet}\n */\nexport class DataInputReturned{\n    element: { [key:string]: SingleDataInputReturned};\n    isValid: boolean;\n    exitStatus?: 'submitted' | 'cancel' | 'error';\n}\n/**\n * Singolo elemento dato in ritorno al submit.\n  * @see {DataInputComponet}\n */\nexport class SingleDataInputReturned{\n    id: string;\n    text: string;\n    type: string;\n    value: any;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/DataInputReturned.html":{"url":"classes/DataInputReturned.html","title":"class - DataInputReturned","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  DataInputReturned\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/data-input/dataInputType.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Tipo di ritorno della componente DataInputReturned.\nSee {DataInputComponet}\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                element\n                            \n                            \n                                    Opzionale\n                                exitStatus\n                            \n                            \n                                isValid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        element\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     literal type\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/data-input/dataInputType.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        exitStatus\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     \"submitted\" | \"cancel\" | \"error\"\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/data-input/dataInputType.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isValid\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/data-input/dataInputType.ts:64\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class DataInputElement{\n    element: Array;\n}\n\n/**\n * Tipo di dato Input contenente variabili generali.\n * @see {DataInputComponet}\n */\nexport class DataInput{\n    id: string;\n    text?: string;\n    type: \"textarea\" | \"text\" | \"selection\" | \"checkbox\";\n    data_prepended?: string;\n    data_appended?: string;\n    required: boolean;\n}\n/**\n * Tipo input text base/area.\n * Estende DataInput.\n  * @see {DataInputComponet}\n */\nexport class DataInputText extends DataInput{\n    placeholder?: string;\n}\n/**\n * Tipo input selection.\n * Estende DataInput.\n  * @see {DataInputComponet}\n */\nexport class DataInputSelection extends DataInput{\n    multiple?: boolean;\n    selected_number: number;\n    selection: SelectOption[];\n}\n/**\n * Tipo input check (toggle).\n * Estende DataInput.\n * @see {DataInputComponet}\n */\nexport class DataInputCheck  extends DataInput{\n    checked?: boolean;\n}\n\n/**\n * Tipo usato per le selezioni (multiselect option).\n  * @see {DataInputComponet}\n */\nexport class SelectOption{\n    value: string;\n    text: string;\n    other?: any;\n}\n\n/**\n * Tipo di ritorno della componente DataInputReturned.\n  * @see {DataInputComponet}\n */\nexport class DataInputReturned{\n    element: { [key:string]: SingleDataInputReturned};\n    isValid: boolean;\n    exitStatus?: 'submitted' | 'cancel' | 'error';\n}\n/**\n * Singolo elemento dato in ritorno al submit.\n  * @see {DataInputComponet}\n */\nexport class SingleDataInputReturned{\n    id: string;\n    text: string;\n    type: string;\n    value: any;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/DataInputReturnedV2.html":{"url":"classes/DataInputReturnedV2.html","title":"class - DataInputReturnedV2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  DataInputReturnedV2\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/data-input-v2/dataInputTypeV2.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Tipo di ritorno della componente DataInputV2\nSee {DataInputV2Componet}\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                key\n                            \n                            \n                                new_value\n                            \n                            \n                                old_value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/data-input-v2/dataInputTypeV2.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        new_value\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         any\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/data-input-v2/dataInputTypeV2.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        old_value\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         any\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/data-input-v2/dataInputTypeV2.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class DataInputReturnedV2{\n    key: string;\n    old_value: any;\n    new_value: any;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/DataInputSelection.html":{"url":"classes/DataInputSelection.html","title":"class - DataInputSelection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  DataInputSelection\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/data-input/dataInputType.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Tipo input selection.\nEstende DataInput.\nSee {DataInputComponet}\n\n            \n\n            \n                Extends\n            \n            \n                        DataInput\n            \n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                    Opzionale\n                                multiple\n                            \n                            \n                                selected_number\n                            \n                            \n                                selection\n                            \n                            \n                                    Opzionale\n                                data_appended\n                            \n                            \n                                    Opzionale\n                                data_prepended\n                            \n                            \n                                id\n                            \n                            \n                                required\n                            \n                            \n                                    Opzionale\n                                text\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        multiple\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/data-input/dataInputType.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selected_number\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/data-input/dataInputType.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selection\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         SelectOption[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/data-input/dataInputType.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        data_appended\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         DataInput\n\n                            \n                        \n                    \n                        \n                                Definito in         DataInput:18\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        data_prepended\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         DataInput\n\n                            \n                        \n                    \n                        \n                                Definito in         DataInput:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         DataInput\n\n                            \n                        \n                    \n                        \n                                Definito in         DataInput:14\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        required\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                        \n                            \n                                ereditato da         DataInput\n\n                            \n                        \n                    \n                        \n                                Definito in         DataInput:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        text\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         DataInput\n\n                            \n                        \n                    \n                        \n                                Definito in         DataInput:15\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     \"textarea\" | \"text\" | \"selection\" | \"checkbox\"\n\n                    \n                \n                        \n                            \n                                ereditato da         DataInput\n\n                            \n                        \n                    \n                        \n                                Definito in         DataInput:16\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class DataInputElement{\n    element: Array;\n}\n\n/**\n * Tipo di dato Input contenente variabili generali.\n * @see {DataInputComponet}\n */\nexport class DataInput{\n    id: string;\n    text?: string;\n    type: \"textarea\" | \"text\" | \"selection\" | \"checkbox\";\n    data_prepended?: string;\n    data_appended?: string;\n    required: boolean;\n}\n/**\n * Tipo input text base/area.\n * Estende DataInput.\n  * @see {DataInputComponet}\n */\nexport class DataInputText extends DataInput{\n    placeholder?: string;\n}\n/**\n * Tipo input selection.\n * Estende DataInput.\n  * @see {DataInputComponet}\n */\nexport class DataInputSelection extends DataInput{\n    multiple?: boolean;\n    selected_number: number;\n    selection: SelectOption[];\n}\n/**\n * Tipo input check (toggle).\n * Estende DataInput.\n * @see {DataInputComponet}\n */\nexport class DataInputCheck  extends DataInput{\n    checked?: boolean;\n}\n\n/**\n * Tipo usato per le selezioni (multiselect option).\n  * @see {DataInputComponet}\n */\nexport class SelectOption{\n    value: string;\n    text: string;\n    other?: any;\n}\n\n/**\n * Tipo di ritorno della componente DataInputReturned.\n  * @see {DataInputComponet}\n */\nexport class DataInputReturned{\n    element: { [key:string]: SingleDataInputReturned};\n    isValid: boolean;\n    exitStatus?: 'submitted' | 'cancel' | 'error';\n}\n/**\n * Singolo elemento dato in ritorno al submit.\n  * @see {DataInputComponet}\n */\nexport class SingleDataInputReturned{\n    id: string;\n    text: string;\n    type: string;\n    value: any;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/DataInputText.html":{"url":"classes/DataInputText.html","title":"class - DataInputText","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  DataInputText\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/data-input/dataInputType.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Tipo input text base/area.\nEstende DataInput.\nSee {DataInputComponet}\n\n            \n\n            \n                Extends\n            \n            \n                        DataInput\n            \n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                    Opzionale\n                                placeholder\n                            \n                            \n                                    Opzionale\n                                data_appended\n                            \n                            \n                                    Opzionale\n                                data_prepended\n                            \n                            \n                                id\n                            \n                            \n                                required\n                            \n                            \n                                    Opzionale\n                                text\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        placeholder\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/data-input/dataInputType.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        data_appended\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         DataInput\n\n                            \n                        \n                    \n                        \n                                Definito in         DataInput:18\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        data_prepended\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         DataInput\n\n                            \n                        \n                    \n                        \n                                Definito in         DataInput:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         DataInput\n\n                            \n                        \n                    \n                        \n                                Definito in         DataInput:14\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        required\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                        \n                            \n                                ereditato da         DataInput\n\n                            \n                        \n                    \n                        \n                                Definito in         DataInput:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        text\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         DataInput\n\n                            \n                        \n                    \n                        \n                                Definito in         DataInput:15\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     \"textarea\" | \"text\" | \"selection\" | \"checkbox\"\n\n                    \n                \n                        \n                            \n                                ereditato da         DataInput\n\n                            \n                        \n                    \n                        \n                                Definito in         DataInput:16\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class DataInputElement{\n    element: Array;\n}\n\n/**\n * Tipo di dato Input contenente variabili generali.\n * @see {DataInputComponet}\n */\nexport class DataInput{\n    id: string;\n    text?: string;\n    type: \"textarea\" | \"text\" | \"selection\" | \"checkbox\";\n    data_prepended?: string;\n    data_appended?: string;\n    required: boolean;\n}\n/**\n * Tipo input text base/area.\n * Estende DataInput.\n  * @see {DataInputComponet}\n */\nexport class DataInputText extends DataInput{\n    placeholder?: string;\n}\n/**\n * Tipo input selection.\n * Estende DataInput.\n  * @see {DataInputComponet}\n */\nexport class DataInputSelection extends DataInput{\n    multiple?: boolean;\n    selected_number: number;\n    selection: SelectOption[];\n}\n/**\n * Tipo input check (toggle).\n * Estende DataInput.\n * @see {DataInputComponet}\n */\nexport class DataInputCheck  extends DataInput{\n    checked?: boolean;\n}\n\n/**\n * Tipo usato per le selezioni (multiselect option).\n  * @see {DataInputComponet}\n */\nexport class SelectOption{\n    value: string;\n    text: string;\n    other?: any;\n}\n\n/**\n * Tipo di ritorno della componente DataInputReturned.\n  * @see {DataInputComponet}\n */\nexport class DataInputReturned{\n    element: { [key:string]: SingleDataInputReturned};\n    isValid: boolean;\n    exitStatus?: 'submitted' | 'cancel' | 'error';\n}\n/**\n * Singolo elemento dato in ritorno al submit.\n  * @see {DataInputComponet}\n */\nexport class SingleDataInputReturned{\n    id: string;\n    text: string;\n    type: string;\n    value: any;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"components/DataInputV2Component.html":{"url":"components/DataInputV2Component.html","title":"component - DataInputV2Component","body":"\n                   \n\n\n\n\n\n  Componenti\n  \n  DataInputV2Component\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/data-input-v2/data-input-v2.component.ts\n\n\n\n    \n        Descrizione\n    \n    \n        Componente usata per mostrare il valore di un determinato elemento.\nAttraverso un click, è possibile visualizzare un form di modifica in place.\nI form attualmente disponibili sono: text, textarea, (multi)selection e checkbox.\n\n    \n\n\n    \n        Implementa\n    \n    \n                    OnInit\n    \n\n\n\n    Metadati\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-data-input-v2\n            \n\n            \n                styleUrls\n                ./data-input-v2.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./data-input-v2.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _value\n                            \n                            \n                                    Protected\n                                dataInputElement\n                            \n                            \n                                    Protected\n                                isUpdateTime\n                            \n                        \n                    \n                \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                dataInputReturned\n                            \n                            \n                                getCheckbox\n                            \n                            \n                                getSelection\n                            \n                            \n                                getText\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                updateTime\n                            \n                        \n                    \n                \n\n                \n                    \n                        Input\n                    \n                \n                \n                    \n                        \n                            \n                                checked\n                            \n                            \n                                directChange\n                            \n                            \n                                formType\n                            \n                            \n                                idForChanges\n                            \n                            \n                                required\n                            \n                            \n                                selectOption\n                            \n                            \n                                title\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Output\n                    \n                \n                \n                    \n                        \n                            \n                                onChange\n                            \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessori\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Costruttore\n        \n            \n                \n                    \nconstructor(cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Definito in src/app/components/data-input-v2/data-input-v2.component.ts:94\n                            \n                        \n\n                \n                    \n                            Costruttore di DataInputV2Component.\n\n                            \n                                    Parametri :\n                                    \n                                        \n                                            \n                                                Nome\n                                                    Tipo\n                                                Opzionale\n                                            \n                                        \n                                        \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Input\n        \n            \n                \n                    \n                        \n                        checked\n                    \n                \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                        \n                            \n                                    Definito in src/app/components/data-input-v2/data-input-v2.component.ts:82\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        directChange\n                    \n                \n                \n                    \n                        Tipo :     \"function\" | \"direct\"\n\n                    \n                \n                        \n                            \n                                    Definito in src/app/components/data-input-v2/data-input-v2.component.ts:62\n                            \n                        \n                \n                    \n                        Varibile (opzionale) data in input che serve per il comportamento della componente.\nEssa può essere:\nLa funzione di base predilige un comportamento su \"direct\".\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        formType\n                    \n                \n                \n                    \n                        Tipo :     \"textarea\" | \"text\" | \"selection\" | \"checkbox\"\n\n                    \n                \n                        \n                            \n                                    Definito in src/app/components/data-input-v2/data-input-v2.component.ts:78\n                            \n                        \n                \n                    \n                        Variabile data in input che serve per capire che tipo di elemento sta trattando.\nNel caso di modifiche si provvederà a renderizzare la giusta scelta.\nEssa può essere:\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        idForChanges\n                    \n                \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                    Definito in src/app/components/data-input-v2/data-input-v2.component.ts:54\n                            \n                        \n                \n                    \n                        Varibile (opzionale) data in input per assegnare un \"riconoscimento\" all'elemento di ritorno.\nSee {DataInputReturnedV2} per il campo \"key\".\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                        \n                            \n                                    Definito in src/app/components/data-input-v2/data-input-v2.component.ts:83\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selectOption\n                    \n                \n                \n                    \n                        Tipo :         SelectOption[]\n\n                    \n                \n                        \n                            \n                                    Definito in src/app/components/data-input-v2/data-input-v2.component.ts:81\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                    Definito in src/app/components/data-input-v2/data-input-v2.component.ts:68\n                            \n                        \n                \n                    \n                        Variabile data in input che serve per dare un titolo all'elemento\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Tipo :         any\n\n                    \n                \n                        \n                            \n                                    Definito in src/app/components/data-input-v2/data-input-v2.component.ts:30\n                            \n                        \n                \n                    \n                        Variabile (set) in input che rappresenta il valore attuale dell'elemento passato.\nQuesta variabile predispone di determinate operazioni prima di eseguire l'effettivo salvataggio del valore.\nIn particolare controlla se emettere o meno il cambiamento della variabile in modo diretto o indiretto\nSee {directChange}\nSee {_value}\n\n                    \n                \n            \n        \n\n    \n    Output\n        \n            \n                \n                    \n                        \n                        onChange\n                    \n                \n                \n                    \n                        Tipo :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Definito in src/app/components/data-input-v2/data-input-v2.component.ts:46\n                            \n                        \n                \n                    \n                        Attributo ritornato in output.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Tipo :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Definito in src/app/components/data-input-v2/data-input-v2.component.ts:40\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        dataInputReturned\n                        \n                    \n                \n            \n            \n                \ndataInputReturned(val: DataInputReturned)\n                \n            \n\n\n            \n                \n                    Definito in src/app/components/data-input-v2/data-input-v2.component.ts:181\n                \n            \n\n\n            \n                \n                    Funzione usata per emettere il valore di ritorno dal form.\nSee {dataInputElement}\nSee {updateTime}\nSee {onChange}\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                DataInputReturned\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCheckbox\n                        \n                    \n                \n            \n            \n                \ngetCheckbox()\n                \n            \n\n\n            \n                \n                    Definito in src/app/components/data-input-v2/data-input-v2.component.ts:152\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         DataInputElement\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSelection\n                        \n                    \n                \n            \n            \n                \ngetSelection()\n                \n            \n\n\n            \n                \n                    Definito in src/app/components/data-input-v2/data-input-v2.component.ts:136\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         DataInputElement\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getText\n                        \n                    \n                \n            \n            \n                \ngetText()\n                \n            \n\n\n            \n                \n                    Definito in src/app/components/data-input-v2/data-input-v2.component.ts:123\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         DataInputElement\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Definito in src/app/components/data-input-v2/data-input-v2.component.ts:107\n                \n            \n\n\n            \n                \n                    Funzione richiamata all'inizializzazione della componente e ritorna il form adeguato scelto.\nSee {getSelection}\nSee {getCheckbox}\nSee {getText}\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateTime\n                        \n                    \n                \n            \n            \n                \nupdateTime()\n                \n            \n\n\n            \n                \n                    Definito in src/app/components/data-input-v2/data-input-v2.component.ts:169\n                \n            \n\n\n            \n                \n                    Funzione che ha come scopo lo switch della variabile di modifica.\nSee {isUpdateTime}\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _value\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         any\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/data-input-v2/data-input-v2.component.ts:21\n                        \n                    \n\n            \n                \n                    Variabile di appoggio per value\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        dataInputElement\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         DataInputElement\n\n                    \n                \n                \n                    \n                        Valore predefinito : new DataInputElement()\n                    \n                \n                    \n                        \n                                Definito in src/app/components/data-input-v2/data-input-v2.component.ts:94\n                        \n                    \n\n            \n                \n                    Variabile usata per passare i valori alla componente @see {DataInputComponent}.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        isUpdateTime\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                \n                    \n                        Valore predefinito : false\n                    \n                \n                    \n                        \n                                Definito in src/app/components/data-input-v2/data-input-v2.component.ts:89\n                        \n                    \n\n            \n                \n                    Variabile usata per eseguire la modifica del valore.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessori\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Definito in src/app/components/data-input-v2/data-input-v2.component.ts:37\n                                \n                            \n\n                \n                    \n                        setvalue(val: any)\n                    \n                \n                            \n                                \n                                    Definito in src/app/components/data-input-v2/data-input-v2.component.ts:30\n                                \n                            \n                    \n                        \n                                Variabile (set) in input che rappresenta il valore attuale dell'elemento passato.\nQuesta variabile predispone di determinate operazioni prima di eseguire l'effettivo salvataggio del valore.\nIn particolare controlla se emettere o meno il cambiamento della variabile in modo diretto o indiretto\nSee {directChange}\nSee {_value}\n\n\n                                \n                                        Parametri :\n                                        \n                                            \n                                                \n                                                    Nome\n                                                        Tipo\n                                                    Opzionale\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                            any\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { DataInputElement, DataInputReturned, SelectOption, SingleDataInputReturned } from '../data-input/dataInputType';\nimport { DataInputReturnedV2 } from './dataInputTypeV2';\n\n/**\n * Componente usata per mostrare il valore di un determinato elemento. \n * Attraverso un click, è possibile visualizzare un form di modifica in place.\n * I form attualmente disponibili sono: text, textarea, (multi)selection e checkbox. \n */\n@Component({\n  selector: 'app-data-input-v2',\n  templateUrl: './data-input-v2.component.html',\n  styleUrls: ['./data-input-v2.component.sass'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DataInputV2Component implements OnInit {\n\n  /**\n   * Variabile di appoggio per value\n   */\n  protected _value: any;\n  /**\n   * Variabile (set) in input che rappresenta il valore attuale dell'elemento passato.\n   * Questa variabile predispone di determinate operazioni prima di eseguire l'effettivo salvataggio del valore.\n   * In particolare controlla se emettere o meno il cambiamento della variabile in modo diretto o indiretto\n   * @see {directChange}\n   * @see {_value}\n   */\n  @Input()\n  set value(val: any) {\n    if (!this.directChange || this.directChange === \"direct\") {\n      this.valueChange.emit(val);\n      this.onChange.emit({ key: this.idForChanges ? this.idForChanges : this.title, old_value: this._value, new_value: val }); // poi notifica aggiornamento\n    }\n    this._value = val;\n  }\n  get value() {\n    return this._value;\n  }\n  @Output() valueChange: EventEmitter = new EventEmitter();\n  \n  /**\n   * Attributo ritornato in output.\n   * @type {EventEmitter}\n   */\n  @Output() onChange: EventEmitter = new EventEmitter();\n\n\n  /**\n   * Varibile (opzionale) data in input per assegnare un \"riconoscimento\" all'elemento di ritorno.\n   * @see {DataInputReturnedV2} per il campo \"key\".\n   * @type {string}\n   */\n  @Input() idForChanges?: string;\n  /**\n   * Varibile (opzionale) data in input che serve per il comportamento della componente.\n   * Essa può essere: \n   * @type {\"function\"} : nel caso si voglia aggiornare il valore passato in input alla funzione.\n   * @type {\"direct\"} : nel caso si vuole aggiornare direttamente il valore.\n   * La funzione di base predilige un comportamento su \"direct\".\n   */\n  @Input() directChange?: \"function\" | \"direct\";\n\n  /**\n   * Variabile data in input che serve per dare un titolo all'elemento\n   * @type {string}\n   */\n  @Input() title: string;\n  /**\n   * Variabile data in input che serve per capire che tipo di elemento sta trattando.\n   * Nel caso di modifiche si provvederà a renderizzare la giusta scelta. \n   * Essa può essere:\n   * @type {\"text\"} : nel caso si voglia un input text base.\n   * @type {\"textarea\"} : nel caso si voglia un input text-area.\n   * @type {\"selection\"} : nel caso si voglia un input selection.\n   * @type {\"checkbox\"} : nel caso si voglia un input checkbox.\n   */\n  @Input() formType: \"textarea\" | \"text\" | \"selection\" | \"checkbox\";\n\n  // varibili specifiche dei form.\n  @Input() selectOption?: SelectOption[];\n  @Input() checked?: boolean;\n  @Input() required?: boolean;\n\n  /**\n   * Variabile usata per eseguire la modifica del valore.\n   * @type {boolean}\n   */\n  protected isUpdateTime: boolean = false;\n  /**\n   * Variabile usata per passare i valori alla componente @see {DataInputComponent}.\n   * @type {DataInputElement}\n   */\n  protected dataInputElement: DataInputElement = new DataInputElement();;\n\n  /**\n   * Costruttore di DataInputV2Component.\n   */\n  constructor(private cdr: ChangeDetectorRef) { }\n\n  /**\n   * Funzione richiamata all'inizializzazione della componente e ritorna il form adeguato scelto.\n   * @see {getSelection}\n   * @see {getCheckbox}\n   * @see {getText}\n   */\n  ngOnInit(): void {\n    this.dataInputElement.element = [];\n    if (this.formType === 'text' || this.formType === 'textarea') {\n      this.dataInputElement = this.getText();\n    }\n    else if (this.formType === 'checkbox') {\n      this.dataInputElement = this.getCheckbox();\n    }\n    else if (this.formType === 'selection' && this.selectOption) {\n      this.dataInputElement = this.getSelection();\n    }\n    else {\n      console.error(\"PROBLEMA CON TIPO O DATO PASSATO\");\n    }\n  }\n\n  getText(): DataInputElement {\n    let dataInputElement: DataInputElement = new DataInputElement;\n    dataInputElement.element = [\n      {\n        id: this.idForChanges ? this.idForChanges : this.title,\n        placeholder: this.value ? this.value as string : '',\n        type: this.formType,\n        required: this.required ? true : false\n      }\n    ];\n    return dataInputElement;\n  }\n\n  getSelection(): DataInputElement {\n    let index_selected = this.selectOption.findIndex((el) => el.value === this.value || el.text === this.value)\n    index_selected = (index_selected \n    \n\n    \n        \n    {{title}}:\n    \n         {{value}} \n        click to change\n    \n    \n        \n        \n        \n        \n    \n\n\n    \n\n    \n                \n                    ./data-input-v2.component.sass\n                \n                .btn-text-link\n    cursor: pointer\n    text-decoration: none\n    font-style: normal\n    font-size: small\n    margin-bottom: 0!important\n.btn-text-link:hover\n    text-decoration: underline\n    font-style: italic\n\n.title-element\n    margin: 0\n    font-style: italic\n    font-size: small\n\n    \n\n    \n        \n        \n            \n                Legenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento html con direttive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{title}}:             {{value}}         click to change                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ComposerComponent', 'selector': 'app-composer'},{'name': 'ControlTemplate', 'selector': ''},{'name': 'DataInputComponent', 'selector': 'app-data-input'},{'name': 'DataInputV2Component', 'selector': 'app-data-input-v2'},{'name': 'DataItemComponent', 'selector': 'app-window-item'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HostComponent', 'selector': ''},{'name': 'HowToUseComponent', 'selector': 'app-how-to-use'},{'name': 'MirroringModuleInstanceComponent', 'selector': ''},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavbarElementComponent', 'selector': 'app-navbar-element'},{'name': 'NetworkComponent', 'selector': ''},{'name': 'OffcanvasComponent', 'selector': 'app-offcanvas'},{'name': 'ReteModuleComposerComponent', 'selector': 'app-rete-module-composer'},{'name': 'ReteModuleVisualizerComponent', 'selector': 'app-rete-module-visualizer'},{'name': 'ReteTheaterComposerComponent', 'selector': 'app-rete-theater-composer'},{'name': 'ReteTheaterVisualizerComponent', 'selector': 'app-rete-theater-visualizer'},{'name': 'SubnetComponent', 'selector': ''},{'name': 'TabnavComponent', 'selector': 'app-tabnav'},{'name': 'TheaterInternalServiceModuleInstanceComponent', 'selector': ''},{'name': 'TheaterModuleInstanceComponent', 'selector': ''},{'name': 'UnderbarComponent', 'selector': 'app-underbar'},{'name': 'VisualizerComponent', 'selector': 'app-displayer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DataInputV2Component'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"components/DataItemComponent.html":{"url":"components/DataItemComponent.html","title":"component - DataItemComponent","body":"\n                   \n\n\n\n\n\n  Componenti\n  \n  DataItemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/data-item/data-item.component.ts\n\n\n\n    \n        Descrizione\n    \n    \n        Componente usata per mostrare, tipo accordion, determinati livelli.\nProducendo una vista \"astratta\" dell'oggetto e i suoi elementi.\nPermette di eseguire il collapse.\nPermette di mostrare la cancellazione. Gestire correttamente questo caso.\nSee {onRemove}\n\n    \n\n\n\n\n\n    Metadati\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-window-item\n            \n\n            \n                styleUrls\n                ./data-item.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./data-item.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                closeIconClass\n                            \n                            \n                                    Protected\n                                toOpenIconClass\n                            \n                            \n                                    Protected\n                                toReduceIconClass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                reduce\n                            \n                            \n                                remove\n                            \n                        \n                    \n                \n\n                \n                    \n                        Input\n                    \n                \n                \n                    \n                        \n                            \n                                isfull\n                            \n                            \n                                onlyResize\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Output\n                    \n                \n                \n                    \n                        \n                            \n                                onRemove\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Costruttore\n        \n            \n                \n                    \nconstructor(cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Definito in src/app/components/data-item/data-item.component.ts:42\n                            \n                        \n\n                \n                    \n                            Costruttore componente DataItemComponent.\n\n                            \n                                    Parametri :\n                                    \n                                        \n                                            \n                                                Nome\n                                                    Tipo\n                                                Opzionale\n                                            \n                                        \n                                        \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Input\n        \n            \n                \n                    \n                        \n                        isfull\n                    \n                \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                \n                    \n                        Valore predefinito : false\n                    \n                \n                        \n                            \n                                    Definito in src/app/components/data-item/data-item.component.ts:26\n                            \n                        \n                \n                    \n                        Varibile in input che rappresenta lo stato \"aperto\" o \"chiuso\" della componente\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        onlyResize\n                    \n                \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                \n                    \n                        Valore predefinito : false\n                    \n                \n                        \n                            \n                                    Definito in src/app/components/data-item/data-item.component.ts:31\n                            \n                        \n                \n                    \n                        Variabile di input che permette o meno la possibilità di visualizzare il pulsante di elimina.\nSee {remove}\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                    Definito in src/app/components/data-item/data-item.component.ts:21\n                            \n                        \n                \n                    \n                        Varibile di input che rappresenta il titolo della componente\n\n                    \n                \n            \n        \n\n    \n    Output\n        \n            \n                \n                    \n                        \n                        onRemove\n                    \n                \n                \n                    \n                        Tipo :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Definito in src/app/components/data-item/data-item.component.ts:37\n                            \n                        \n                \n                    \n                        Variabile di output che emette l'evento di eliminazione elemento.\nSee {remove}\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        reduce\n                        \n                    \n                \n            \n            \n                \nreduce()\n                \n            \n\n\n            \n                \n                    Definito in src/app/components/data-item/data-item.component.ts:54\n                \n            \n\n\n            \n                \n                    Funzione che esegue uno switch di valore della variabile che rappresenta il collapse dell'elemento.\nSee {isfull}\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove()\n                \n            \n\n\n            \n                \n                    Definito in src/app/components/data-item/data-item.component.ts:63\n                \n            \n\n\n            \n                \n                    Funzione che emette l'evento di click sul tasto di cancellazione.\nSee {onRemove}\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        closeIconClass\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                \n                    \n                        Valore predefinito : \"bi bi-x-lg\"\n                    \n                \n                    \n                        \n                                Definito in src/app/components/data-item/data-item.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        toOpenIconClass\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                \n                    \n                        Valore predefinito : \"bi bi-square\"\n                    \n                \n                    \n                        \n                                Definito in src/app/components/data-item/data-item.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        toReduceIconClass\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                \n                    \n                        Valore predefinito : \"bi bi-box-arrow-in-down-right\"\n                    \n                \n                    \n                        \n                                Definito in src/app/components/data-item/data-item.component.ts:40\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, Input, Output } from '@angular/core';\n\n/**\n * Componente usata per mostrare, tipo accordion, determinati livelli.\n * Producendo una vista \"astratta\" dell'oggetto e i suoi elementi.\n * Permette di eseguire il collapse.\n * Permette di mostrare la cancellazione. Gestire correttamente questo caso.\n * @see {onRemove}\n */\n@Component({\n  selector: 'app-window-item',\n  templateUrl: './data-item.component.html',\n  styleUrls: ['./data-item.component.sass'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DataItemComponent{\n  /**\n   * Varibile di input che rappresenta il titolo della componente\n   * @type {string}\n   */\n  @Input() title?: string;\n  /**\n   * Varibile in input che rappresenta lo stato \"aperto\" o \"chiuso\" della componente\n   * @type {boolean}\n   */\n  @Input() isfull?: boolean = false;\n  /**\n   * Variabile di input che permette o meno la possibilità di visualizzare il pulsante di elimina.\n   * @see {remove}\n   */\n  @Input() onlyResize?: boolean = false;\n\n  /**\n   * Variabile di output che emette l'evento di eliminazione elemento.\n   * @see {remove}\n   */\n  @Output() onRemove: EventEmitter = new EventEmitter();\n\n  // variabili classi icona -> bootstrap-icon\n  protected toReduceIconClass: string = \"bi bi-box-arrow-in-down-right\";\n  protected toOpenIconClass: string = \"bi bi-square\";\n  protected closeIconClass: string = \"bi bi-x-lg\";\n\n  /**\n   * Costruttore componente DataItemComponent.\n   * @param cdr \n   */\n  constructor(private cdr: ChangeDetectorRef) { }\n\n  /**\n   * Funzione che esegue uno switch di valore della variabile che rappresenta il collapse dell'elemento.\n   * @see {isfull} \n  */\n  reduce() {\n    this.isfull = !this.isfull;\n    this.cdr.detectChanges();\n  }\n  \n  /**\n   * Funzione che emette l'evento di click sul tasto di cancellazione.\n   * @see {onRemove} \n   */\n  remove(){\n    this.onRemove.emit(null);\n    this.cdr.detectChanges();\n  }\n\n\n}\n\n\n    \n\n    \n        \n    \n        \n            {{title}}\n        \n        \n            \n                  \n                 \n                \n            \n            \n                \n                    \n                \n            \n        \n    \n    \n        \n        \n    \n\n    \n\n    \n                \n                    ./data-item.component.sass\n                \n                .div-data-item\n    word-break: break-all\n    border-color: #626a71\n    border-radius: 1em\n    border-style: solid\n    margin: 1em\n\n.op-bar\n    padding: 1px!important\n\n.text-break\n    text-overflow: ellipsis\n    white-space: nowrap\n    overflow: hidden\n\n.content-div\n    padding-top: 0!important\n    padding: 1em\n\n.one-side-rounded\n    border-top-right-radius: 0.9em\n\n.two-side-rounded\n     border-top-right-radius: 0.9em\n     border-bottom-right-radius: 0.9em\n\n    \n    \n\n    \n        \n        \n            \n                Legenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento html con direttive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        {{title}}                                                                                                                                                                                                           '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ComposerComponent', 'selector': 'app-composer'},{'name': 'ControlTemplate', 'selector': ''},{'name': 'DataInputComponent', 'selector': 'app-data-input'},{'name': 'DataInputV2Component', 'selector': 'app-data-input-v2'},{'name': 'DataItemComponent', 'selector': 'app-window-item'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HostComponent', 'selector': ''},{'name': 'HowToUseComponent', 'selector': 'app-how-to-use'},{'name': 'MirroringModuleInstanceComponent', 'selector': ''},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavbarElementComponent', 'selector': 'app-navbar-element'},{'name': 'NetworkComponent', 'selector': ''},{'name': 'OffcanvasComponent', 'selector': 'app-offcanvas'},{'name': 'ReteModuleComposerComponent', 'selector': 'app-rete-module-composer'},{'name': 'ReteModuleVisualizerComponent', 'selector': 'app-rete-module-visualizer'},{'name': 'ReteTheaterComposerComponent', 'selector': 'app-rete-theater-composer'},{'name': 'ReteTheaterVisualizerComponent', 'selector': 'app-rete-theater-visualizer'},{'name': 'SubnetComponent', 'selector': ''},{'name': 'TabnavComponent', 'selector': 'app-tabnav'},{'name': 'TheaterInternalServiceModuleInstanceComponent', 'selector': ''},{'name': 'TheaterModuleInstanceComponent', 'selector': ''},{'name': 'UnderbarComponent', 'selector': 'app-underbar'},{'name': 'VisualizerComponent', 'selector': 'app-displayer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DataItemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/DataRouteComposer.html":{"url":"classes/DataRouteComposer.html","title":"class - DataRouteComposer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  DataRouteComposer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/appType.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Elemento che contiene le variabili da portare al router nel caso si tratti della costruzione.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                author\n                            \n                            \n                                description\n                            \n                            \n                                name\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        author\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/models/appType.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/models/appType.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/models/appType.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         SubjectType\n\n                    \n                \n                    \n                        \n                                Definito in src/app/models/appType.ts:68\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export enum SubjectType {\n    MODULE = \"Module\",\n    THEATER = \"Theater\"\n}\n\n/**\n * Enum per eseguire le operazioni in base al tipo\n */\nexport enum ComposerVisualizerType {\n    COMPOSER = \"Composer\",\n    VISUALIZER = \"Visualizer\"\n}\n\n/**\n * Enum per indicare il tipo di interfaccia\n */\nexport enum InterfacePortType {\n    CONSUMER = \"CONSUMER\",\n    PRODUCER = \"PRODUCER\"\n}\n\n/**\n * Enum per indicare il tipo di porta\n */\nexport enum NodePortType {\n    INPUT = \"input\",\n    OUTPUT = \"output\"\n}\n\n/**\n * Enum per indicare il tipo di sistma operativo\n */\nexport enum StaticValue {\n    SubnetOutput = \"Link\",\n    hostOS1 = \"Linux\",\n    hostOS2 = \"Ubuntu\",\n    hostOS3 = \"CentOS\",\n}\n\n/**\n * Enum per indicare la versione dell'ip\n */\nexport enum IpVersionType {\n    FOUR = \"4\",\n    SIXSTEEN = \"16\"\n}\n\n\n//// Router data\n\n/**\n * Elemento che contiene le variabili da portare al router nel caso si tratti della visualizzazione.\n */\nexport class DataRouteVisualizer {\n    id: number;\n    type: SubjectType;\n}\n/**\n * Elemento che contiene le variabili da portare al router nel caso si tratti della costruzione.\n */\nexport class DataRouteComposer {\n    name: string;\n    description: string;\n    author: string;\n    type: SubjectType;\n}\n\n\n/**\n * Enum per indicare i tipi di nodi nel modulo.\n */\nexport enum EnumNodeType {\n    Host = \"Host\",\n    Subnet = \"Subnet\",\n    Network = \"Network\",\n}\n/**\n * Enum per l'indicazione testuale descrittiva dei tipi di nodi nel modulo.\n */\nexport enum EnumNodeTypeDescription {\n    Host = \"Nodo Host\",\n    Subnet = \"Nodo Subnet\",\n    Network = \"Nodo Network\",\n}\n\n/**\n * Enum per indicare i tipi di moduli nel teatro.\n */\nexport enum EnumModuleType {\n    TheaterModuleInstance = \"TheaterModuleInstance\", // SINONIMI -> TheatreModuleInstance = \"TheatreModuleInstance\",\n    TheaterInternalServiceModuleInstance = \"TheaterInternalServiceModuleInstance\",\n    MirroringModuleInstance = \"MirroringModuleInstance\",\n    VirtualServerModuleInstance = \"VirtualServerModuleInstance\", //TODO\n    ExternalVirtualMachine = \"ExternalVirtualMachine\", //TODO\n    AutomaticSystem = \"AutomaticSystem\", //TODO\n    Border = \"Border\", //TODO\n}\n/**\n * Enum per l'indicazione testuale descrittiva dei tipi di modulo nel teatro.\n */\nexport enum EnumModuleTypeDescription {\n    TheaterModuleInstance = \"Module\", // SINONIMI -> TheatreModuleInstance = \"Module\",\n    TheaterInternalServiceModuleInstance = \"Internal Service\",\n    MirroringModuleInstance = \"Mirroring Module\",\n    VirtualServerModuleInstance = \"Virtual Server\", // TODO\n    ExternalVirtualMachine = \"External Virtual Machine\", // TODO\n    AutomaticSystem = \"Automatic System\", //TODO\n    Border = \"Border\", //TODO\n}\n\n\n// MODULES PROPERTIES\n\n\n/**\n * Enum che restituisce delle proprietà, espresse in termini di variabili indicatrici dei moduli.\n * Indica il tipo di un modulo e la sua rappresentazione. (api-restituzione moduli da teatro)\n */\nexport enum ModuleTypeTheater {\n    TheaterModuleInstance = \"sysman.creo.nodes.TheaterModuleInstance\",\n    MirroringModuleInstance = \"sysman.creo.nodes.MirroringModuleInstance\",\n    TheaterInternalServiceModuleInstance = \"sysman.creo.nodes.TheaterInternalServiceModuleInstance\",\n    VirtualServerModuleInstance = \"sysman.creo.nodes.VirtualServerModuleInstance\", //TODO\n    ExternalVirtualMachine = \"sysman.creo.nodes.ExternalVirtualMachine\", //TODO\n    AutomaticSystem = \"sysman.creo.nodes.AutomaticSystem\", //TODO\n    Border = \"sysman.creo.nodes.Border\", //TODO\n}\n/**\n * Rappresentazione inversa di @see {ModuleTypeTheater}\n */\nexport enum ModuleType1 {\n    \"sysman.creo.nodes.TheaterModuleInstance\" = \"TheaterModuleInstance\", // SINONIMI -> \"sysman.creo.nodes.TheatreModuleInstance\" = \"TheaterModuleInstance\",\n    \"sysman.creo.nodes.MirroringModuleInstance\" = \"MirroringModuleInstance\",\n    \"sysman.creo.nodes.TheaterInternalServiceModuleInstance\" = \"TheaterInternalServiceModuleInstance\",\n    \"sysman.creo.nodes.VirtualServerModuleInstance\" = \"VirtualServerModuleInstance\", //TODO\n    \"sysman.creo.nodes.ExternalVirtualMachine\" = \"ExternalVirtualMachine\", //TODO\n    \"sysman.creo.nodes.AutomaticSystem\" = \"AutomaticSystem\", //TODO\n    \"sysman.creo.nodes.Border\" = \"Border\", //TODO\n}\n\n\n/**\n * Enum che restituisce delle proprietà, espresse in termini di variabili indicatrici dei moduli.\n * Indica il tipo di un modulo e la sua altra indicazione in altri tipi di dati reperiti. (api-restituzione moduli da chiamata apposita)\n */\nexport enum ModuleTypeLink {\n    TheaterModuleInstance = \"THEATER\",\n    MirroringModuleInstance = \"MIRRORING\",\n    TheaterInternalServiceModuleInstance = \"INTERNAL_THEATRE_SERVICE\",\n    VirtualServerModuleInstance = \"VIRTUAL_SERVER\", // TODO\n    ExternalVirtualMachine = \"EXTERNAL_VIRTUAL_MACHINE\", // TODO\n    AutomaticSystem = \"AUTOMATIC_SYSTEM\", //TODO\n    Border = \"BORDER\", //TODO\n}\n/**\n * Rappresentazione inversa di @see {ModuleTypeLink}\n */\nexport enum ModuleType2 {\n    \"THEATRE\" = \"TheaterModuleInstance\", //Attenzione, per qualche motivo qui la corretta è teatRE. SINONIMI -> \"THEATRE\" = \"TheaterModuleInstance\",\n    \"MIRRORING\" = \"MirroringModuleInstance\",\n    \"INTERNAL_THEATRE_SERVICE\" = \"TheaterInternalServiceModuleInstance\",\n    \"VIRTUAL_SERVER\" = \"VirtualServerModuleInstance\", // TODO\n    \"EXTERNAL_VIRTUAL_MACHINE\" = \"ExternalVirtualMachine\", // TODO\n    \"AUTOMATIC_SYSTEM\" = \"AutomaticSystem\", // TODO\n    \"BORDER\" = \"Border\", // TODO\n}\n\n\n/**\n * Enum che restituisce il tipi (type) di un teatro (api-restituzione moduli da teatro)\n */\nexport enum TheaterType {\n    theater = \"sysman.creo.nodes.Theater\"\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/DataRouteVisualizer.html":{"url":"classes/DataRouteVisualizer.html","title":"class - DataRouteVisualizer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  DataRouteVisualizer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/appType.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Elemento che contiene le variabili da portare al router nel caso si tratti della visualizzazione.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/models/appType.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         SubjectType\n\n                    \n                \n                    \n                        \n                                Definito in src/app/models/appType.ts:59\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export enum SubjectType {\n    MODULE = \"Module\",\n    THEATER = \"Theater\"\n}\n\n/**\n * Enum per eseguire le operazioni in base al tipo\n */\nexport enum ComposerVisualizerType {\n    COMPOSER = \"Composer\",\n    VISUALIZER = \"Visualizer\"\n}\n\n/**\n * Enum per indicare il tipo di interfaccia\n */\nexport enum InterfacePortType {\n    CONSUMER = \"CONSUMER\",\n    PRODUCER = \"PRODUCER\"\n}\n\n/**\n * Enum per indicare il tipo di porta\n */\nexport enum NodePortType {\n    INPUT = \"input\",\n    OUTPUT = \"output\"\n}\n\n/**\n * Enum per indicare il tipo di sistma operativo\n */\nexport enum StaticValue {\n    SubnetOutput = \"Link\",\n    hostOS1 = \"Linux\",\n    hostOS2 = \"Ubuntu\",\n    hostOS3 = \"CentOS\",\n}\n\n/**\n * Enum per indicare la versione dell'ip\n */\nexport enum IpVersionType {\n    FOUR = \"4\",\n    SIXSTEEN = \"16\"\n}\n\n\n//// Router data\n\n/**\n * Elemento che contiene le variabili da portare al router nel caso si tratti della visualizzazione.\n */\nexport class DataRouteVisualizer {\n    id: number;\n    type: SubjectType;\n}\n/**\n * Elemento che contiene le variabili da portare al router nel caso si tratti della costruzione.\n */\nexport class DataRouteComposer {\n    name: string;\n    description: string;\n    author: string;\n    type: SubjectType;\n}\n\n\n/**\n * Enum per indicare i tipi di nodi nel modulo.\n */\nexport enum EnumNodeType {\n    Host = \"Host\",\n    Subnet = \"Subnet\",\n    Network = \"Network\",\n}\n/**\n * Enum per l'indicazione testuale descrittiva dei tipi di nodi nel modulo.\n */\nexport enum EnumNodeTypeDescription {\n    Host = \"Nodo Host\",\n    Subnet = \"Nodo Subnet\",\n    Network = \"Nodo Network\",\n}\n\n/**\n * Enum per indicare i tipi di moduli nel teatro.\n */\nexport enum EnumModuleType {\n    TheaterModuleInstance = \"TheaterModuleInstance\", // SINONIMI -> TheatreModuleInstance = \"TheatreModuleInstance\",\n    TheaterInternalServiceModuleInstance = \"TheaterInternalServiceModuleInstance\",\n    MirroringModuleInstance = \"MirroringModuleInstance\",\n    VirtualServerModuleInstance = \"VirtualServerModuleInstance\", //TODO\n    ExternalVirtualMachine = \"ExternalVirtualMachine\", //TODO\n    AutomaticSystem = \"AutomaticSystem\", //TODO\n    Border = \"Border\", //TODO\n}\n/**\n * Enum per l'indicazione testuale descrittiva dei tipi di modulo nel teatro.\n */\nexport enum EnumModuleTypeDescription {\n    TheaterModuleInstance = \"Module\", // SINONIMI -> TheatreModuleInstance = \"Module\",\n    TheaterInternalServiceModuleInstance = \"Internal Service\",\n    MirroringModuleInstance = \"Mirroring Module\",\n    VirtualServerModuleInstance = \"Virtual Server\", // TODO\n    ExternalVirtualMachine = \"External Virtual Machine\", // TODO\n    AutomaticSystem = \"Automatic System\", //TODO\n    Border = \"Border\", //TODO\n}\n\n\n// MODULES PROPERTIES\n\n\n/**\n * Enum che restituisce delle proprietà, espresse in termini di variabili indicatrici dei moduli.\n * Indica il tipo di un modulo e la sua rappresentazione. (api-restituzione moduli da teatro)\n */\nexport enum ModuleTypeTheater {\n    TheaterModuleInstance = \"sysman.creo.nodes.TheaterModuleInstance\",\n    MirroringModuleInstance = \"sysman.creo.nodes.MirroringModuleInstance\",\n    TheaterInternalServiceModuleInstance = \"sysman.creo.nodes.TheaterInternalServiceModuleInstance\",\n    VirtualServerModuleInstance = \"sysman.creo.nodes.VirtualServerModuleInstance\", //TODO\n    ExternalVirtualMachine = \"sysman.creo.nodes.ExternalVirtualMachine\", //TODO\n    AutomaticSystem = \"sysman.creo.nodes.AutomaticSystem\", //TODO\n    Border = \"sysman.creo.nodes.Border\", //TODO\n}\n/**\n * Rappresentazione inversa di @see {ModuleTypeTheater}\n */\nexport enum ModuleType1 {\n    \"sysman.creo.nodes.TheaterModuleInstance\" = \"TheaterModuleInstance\", // SINONIMI -> \"sysman.creo.nodes.TheatreModuleInstance\" = \"TheaterModuleInstance\",\n    \"sysman.creo.nodes.MirroringModuleInstance\" = \"MirroringModuleInstance\",\n    \"sysman.creo.nodes.TheaterInternalServiceModuleInstance\" = \"TheaterInternalServiceModuleInstance\",\n    \"sysman.creo.nodes.VirtualServerModuleInstance\" = \"VirtualServerModuleInstance\", //TODO\n    \"sysman.creo.nodes.ExternalVirtualMachine\" = \"ExternalVirtualMachine\", //TODO\n    \"sysman.creo.nodes.AutomaticSystem\" = \"AutomaticSystem\", //TODO\n    \"sysman.creo.nodes.Border\" = \"Border\", //TODO\n}\n\n\n/**\n * Enum che restituisce delle proprietà, espresse in termini di variabili indicatrici dei moduli.\n * Indica il tipo di un modulo e la sua altra indicazione in altri tipi di dati reperiti. (api-restituzione moduli da chiamata apposita)\n */\nexport enum ModuleTypeLink {\n    TheaterModuleInstance = \"THEATER\",\n    MirroringModuleInstance = \"MIRRORING\",\n    TheaterInternalServiceModuleInstance = \"INTERNAL_THEATRE_SERVICE\",\n    VirtualServerModuleInstance = \"VIRTUAL_SERVER\", // TODO\n    ExternalVirtualMachine = \"EXTERNAL_VIRTUAL_MACHINE\", // TODO\n    AutomaticSystem = \"AUTOMATIC_SYSTEM\", //TODO\n    Border = \"BORDER\", //TODO\n}\n/**\n * Rappresentazione inversa di @see {ModuleTypeLink}\n */\nexport enum ModuleType2 {\n    \"THEATRE\" = \"TheaterModuleInstance\", //Attenzione, per qualche motivo qui la corretta è teatRE. SINONIMI -> \"THEATRE\" = \"TheaterModuleInstance\",\n    \"MIRRORING\" = \"MirroringModuleInstance\",\n    \"INTERNAL_THEATRE_SERVICE\" = \"TheaterInternalServiceModuleInstance\",\n    \"VIRTUAL_SERVER\" = \"VirtualServerModuleInstance\", // TODO\n    \"EXTERNAL_VIRTUAL_MACHINE\" = \"ExternalVirtualMachine\", // TODO\n    \"AUTOMATIC_SYSTEM\" = \"AutomaticSystem\", // TODO\n    \"BORDER\" = \"Border\", // TODO\n}\n\n\n/**\n * Enum che restituisce il tipi (type) di un teatro (api-restituzione moduli da teatro)\n */\nexport enum TheaterType {\n    theater = \"sysman.creo.nodes.Theater\"\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/DeployInstanceDTO.html":{"url":"classes/DeployInstanceDTO.html","title":"class - DeployInstanceDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  DeployInstanceDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsDTO/theaterDTO.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano un elemento nella sequenza di deploy.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                    Opzionale\n                                moduleInstanceConfigurationUUID\n                            \n                            \n                                moduleInstanceName\n                            \n                            \n                                moduleInstanceUUID\n                            \n                            \n                                moduleUUID\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        moduleInstanceConfigurationUUID\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/theaterDTO.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        moduleInstanceName\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/theaterDTO.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        moduleInstanceUUID\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/theaterDTO.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        moduleUUID\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/theaterDTO.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ModuleInstanceDTO, TheaterInstanceDTO } from \"./moduleDTO\"\n\n/**\n * Classe che contiene gli attributi che indicano il catalogo di riferimento di un teatro.\n */\nexport class TagCatalogueDTO {\n    description: string\n    id: string | number\n    name: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano lo stato di un teatro.\n */\nexport class TheatreStatusDTO {\n    code: string\n    id: string | number\n    name: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano un elemento nella sequenza di deploy.\n */\nexport class DeployInstanceDTO {\n    moduleInstanceConfigurationUUID?: string\n    moduleInstanceName: string\n    moduleInstanceUUID: string\n    moduleUUID: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano il blueprint di un teatro.\n */\nexport class BlueprintFileDTO {\n    description: string\n    imports: string[]\n    node_templates: {[name:string]:ModuleInstanceDTO|TheaterInstanceDTO}\n    tosca_definitions_version: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano il mapping nome-modulo.\n */\nexport class NameMappingDTO {\n    display_name: string\n    module_instance_name: string\n    module_name: string\n    node_template_name: string\n}\n/**\n * Classe che contiene gli attributi che indica l'array dei mapping nome-modulo.\n */\nexport class EntityNameMappingFileDTO {\n    name_mapping: NameMappingDTO[]\n}\n\n/**\n * Classe che contiene gli attributi che indicano il teaatro.\n */\nexport class TheaterDTO {\n    author: string\n    blueprintFile: BlueprintFileDTO\n    blueprintUUID: string | number\n    createdBy: string\n    createdDate: string\n    deploymentSequence: {[index:string]:DeployInstanceDTO} //tosee\n    description: string\n    entityNameMappingFile: EntityNameMappingFileDTO\n    id: string | number\n    isLocked: boolean\n    lastModifiedBy: string\n    lastModifiedDate: string\n    lockAcquiredTimestamp: string\n    lockLastUserAcquiring: string\n    lockReleasedTimestamp: string\n    name: string\n    status: TheatreStatusDTO\n    tags: TagCatalogueDTO[]\n    uuid: string\n    version: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"components/DocsComponent.html":{"url":"components/DocsComponent.html","title":"component - DocsComponent","body":"\n                   \n\n\n\n\n\n  Componenti\n  \n  DocsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/docs/docs.component.ts\n\n\n\n    \n        Descrizione\n    \n    \n        Componente (pagina) che ha lo scopo di mostrare la documentazione generata da compodoc.\n\nServita come html in un .\n\n\n    \n\n\n    \n        Implementa\n    \n    \n                    OnInit\n    \n\n\n\n    Metadati\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-docs\n            \n\n            \n                styleUrls\n                ./docs.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./docs.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                compodoc_index_html\n                            \n                            \n                                    Protected\n                                IFRAMEvisibility\n                            \n                        \n                    \n                \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Costruttore\n        \n            \n                \n                    \nconstructor(sanitizer: DomSanitizer, http: HttpClient)\n                    \n                \n                        \n                            \n                                Definito in src/app/pages/docs/docs.component.ts:25\n                            \n                        \n\n                \n                    \n                            Costruttore componete DocsComponent\n\n                            \n                                    Parametri :\n                                    \n                                        \n                                            \n                                                Nome\n                                                    Tipo\n                                                Opzionale\n                                            \n                                        \n                                        \n                                                \n                                                        sanitizer\n                                                  \n                                                        \n                                                                        DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Definito in src/app/pages/docs/docs.component.ts:42\n                \n            \n\n\n            \n                \n                    Funzione richiamata all'inizializzazione della componente.\nPrevede di eseguire la chiamata per reperire l'html della documentazione.\nSee {compodoc_index_html}\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        compodoc_index_html\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         any\n\n                    \n                \n                    \n                        \n                                Definito in src/app/pages/docs/docs.component.ts:20\n                        \n                    \n\n            \n                \n                    Variabile che indica l'html (sanitized) reperito dalla documentazione.\nSee {DomSanitizer}\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        IFRAMEvisibility\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                \n                    \n                        Valore predefinito : 'none'\n                    \n                \n                    \n                        \n                                Definito in src/app/pages/docs/docs.component.ts:25\n                        \n                    \n\n            \n                \n                    Variabile che indica la visibilit o meno dell' rispettivamente: \"none\" \"block\".\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { DomSanitizer} from '@angular/platform-browser';\n\n/**\n * Componente (pagina) che ha lo scopo di mostrare la documentazione generata da compodoc.\n * - Servita come html in un .\n */\n@Component({\n  selector: 'app-docs',\n  templateUrl: './docs.component.html',\n  styleUrls: ['./docs.component.sass']\n})\nexport class DocsComponent implements OnInit {\n\n  /**\n   * Variabile che indica l'html (sanitized) reperito dalla documentazione.\n   * @see {DomSanitizer}\n   */\n  protected compodoc_index_html: any;\n  /**\n   * Variabile che indica la visibilit o meno dell' rispettivamente: \"none\" \"block\".\n   * @type {string} -> \"none\" | \"visible\".\n  */\n  protected IFRAMEvisibility: string = 'none';\n\n  /**\n   * Costruttore componete DocsComponent\n   * @param sanitizer \n   * @param http \n   */\n  constructor(\n    private sanitizer: DomSanitizer,\n    private http: HttpClient\n  ) {}\n\n  /**\n   * Funzione richiamata all'inizializzazione della componente.\n   * Prevede di eseguire la chiamata per reperire l'html della documentazione.\n   * @see {compodoc_index_html}\n   */\n  ngOnInit(): void {\n    const headers = new HttpHeaders().set('Content-Type', 'text/html');\n    this.http.get('assets/documentation/index.html', {headers, responseType: 'text'})\n    .subscribe(data => {\n      this.compodoc_index_html = this.sanitizer.bypassSecurityTrustHtml(data as string);\n    })\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n    \n    \n        \n             \n                \n                    \n                    Error: Embedded data could not be displayed.\n                 -->\n        \n    \n    \n    \n\n    \n\n    \n                \n                    ./docs.component.sass\n                \n                iframe\n    width: 100%\n    height: 100%\n    background-color: #ffff\n\n.box\n    display: flex\n    flex-flow: column\n    height: 100%\n    width: 100%\n\n.box .rox.header\n    flex: 0 1 auto\n//   flex-grow: 0,\n//   flex-shrink: 1,\n//   flex-basis: auto\n\n.box .rox.content\n    flex: 1 1 auto\n\n.box .rox.footer\n    flex: 0 1 1px\n    \n\n    \n        \n        \n            \n                Legenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento html con direttive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                 Error: Embedded data could not be displayed.                 -->                    "},"classes/ElementIntoTheaterDTO.html":{"url":"classes/ElementIntoTheaterDTO.html","title":"class - ElementIntoTheaterDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  ElementIntoTheaterDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsDTO/moduleDTO.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano in via generale le caratteristiche di un elemento che deve essere presente nel node_templates.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                properties\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        properties\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     ModuleInstancePropertiesDTO | TheaterInstancePropertiesDTO\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:218\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:219\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PageableDTO, SortDTO } from './elementDTO';\nimport { NetworkDTO } from './networkDTO';\nimport { TheaterDTO } from './theaterDTO';\n\n/**\n * Classe che contiene gli attributi che indicano l'insieme dei moduli ritornati dal teatro.\n */\nexport class ModuleListDTO {\n    content: SimpleModuleDTO[]\n    pageable: PageableDTO\n    last: boolean\n    totalPages: string | number\n    totalElements: string | number\n    size: string | number\n    number: string | number\n    sort: SortDTO\n    numberOfElements: string | number\n    first: boolean\n    empty: boolean\n}\n\n/**\n * Classe che contiene gli attributi che indica il catalogo del tipo.\n */\nexport class TypesCatalogueDTO {\n    group: string\n    id: string | number\n    parentId: {}\n    value: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano la classificazione del modulo.\n */\nexport class ModuleClassificationDTO {\n    blueprintType: string\n    category: string\n    expectedInstanceType: string\n    id: string | number\n    mcClass: string\n    type: string\n    uuid: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano un parametro generico.\n */\nexport class GenericParameterDTO {\n    type: string\n    default: string\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano i parametri di configurazione di un modulto.\n */\nexport class ConfigurationTemplateDTO {\n    anchor_parameters: { [name: string]: GenericParameterDTO | string }\n    instance_parameters: { [name: string]: GenericParameterDTO }\n    structural_parameters: { [name: string]: GenericParameterDTO }\n    fixed_parameters: { [name: string]: GenericParameterDTO }\n    control_parameters: { [name: string]: GenericParameterDTO }\n    infrastructure_parameters: { [name: string]: GenericParameterDTO }\n    module: string\n    description: string\n    category: string\n    version: string | number\n    platform: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano la modalità di un modulo.\n */\nexport class ModuleModeDTO {\n    code: string\n    id: string | number\n    name: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano lo stato di un modulo.\n */\nexport class ModuleStatusDTO {\n    descriptionCode: string\n    id: string | number\n    name: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le statitistiche di un modulo.\n */\nexport class StatisticItemDTO {\n    error: string | number\n    updated: string | number\n    inserted: string | number\n}\n\n/**\n * Classe che contiene gli attributi che indicano il modulo (simple - in dipendenza del teatro).\n */\nexport class SimpleModuleDTO {\n    createdBy: string\n    createdDate: string\n    description: string\n    id: string | number\n    isLocked: boolean\n    lastModifiedBy: string\n    lastModifiedDate: string\n    lockAcquiredTimestamp: string\n    lockLastUserAcquiring: string\n    lockReleasedTimestamp: string\n    name: string\n    status: ModuleStatusDTO\n    type?: string | any\n    uuid: string\n    version: string | number\n}\n\n/**\n * Classe che contiene gli attributi che indicano il modulo (complex - ritorato da call appostita).\n * @extends {SimpleModuleDTO}\n */\nexport class ModuleDTO extends SimpleModuleDTO {\n    attachments: string[]\n    author: string\n    capabilities: { [name: string]: string }\n    catalog1: TypesCatalogueDTO\n    catalog2: TypesCatalogueDTO\n    catalog3: TypesCatalogueDTO\n    classification: ModuleClassificationDTO\n    configurationTemplate: ConfigurationTemplateDTO\n    detailProperties: {}\n    input: { [name: string]: string }\n    output: { [name: string]: string }\n    mode: ModuleModeDTO\n    statistics: { [name: string]: StatisticItemDTO | string | number }\n    tags: []\n}\n\n/**\n * Classe che contiene gli attributi che indicano le interfacce esposte da un modulo.\n */\nexport class ModuleNetworkInterfaceDTO {\n    id: string | number\n    label: string\n    module: ModuleDTO\n    network: NetworkDTO\n    nodeName: string\n    type: string\n    uuid: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le connessioni interfaccia-modulo.\n */\nexport class ConsumerInterfaceLinkDTO {\n    local_interface: string\n    module_instance: string\n    remote_interface: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà dell'istanza di un modulo all'interno del node_templates.\n */\nexport class ModuleInstancePropertiesDTO {\n    area: string\n    description: string\n    module: string\n    version: string | number\n    sequence: string | number\n    consumer_interfaces_link: ConsumerInterfaceLinkDTO[]\n}\n\n\n/**\n * Classe che contiene gli attributi che indicano l'area di appartenenza di un modulo (complex).\n */\nexport class AreaDTO {\n    id: string | number;\n    uuid: string;\n    name: string;\n    description: string;\n    theater: TheaterDTO;\n    deleted: boolean | string;\n}\n\n/**\n * Classe che contiene gli attributi che indicano l'area di appartenenza di un modulo (simple).\n */\nexport class SimpleAreaDTO {\n    area: string\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà dell'istanza di un teatro all'interno del node_templates.\n */\nexport class TheaterInstancePropertiesDTO {\n    mode: string\n    tags: TagTIP[]\n    areas: SimpleAreaDTO[]\n    author: string\n    version: string | number\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano un tag.\n */\nexport class TagTIP{\n    tag: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano in via generale le caratteristiche di un elemento che deve essere presente nel node_templates.\n */\nexport class ElementIntoTheaterDTO {  // goes into map in blueprint [name:string]: Module...\n    properties: ModuleInstancePropertiesDTO | TheaterInstancePropertiesDTO\n    type: string\n}\n\n\n/**\n * Classe che contiene gli attributi che indicano le caratteristiche di un teatro presente nel node_templates.\n */\nexport class ModuleInstanceDTO {\n    properties: ModuleInstancePropertiesDTO\n    type: string\n}\n/**\n * Classe che contiene gli attributi che indicano le caratteristiche di un modulo presente nel node_templates.\n */\nexport class TheaterInstanceDTO {\n    properties: TheaterInstancePropertiesDTO\n    type: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/EmptyModuleInfo.html":{"url":"classes/EmptyModuleInfo.html","title":"class - EmptyModuleInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  EmptyModuleInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/rete-settings/nodes/rete-modules/export-rete-modules.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Elemento che assegna le variabili a funzioni che restituiscono una struttura inizializzata vuota dei singoli nodi.\nSee {getEmptyReteMirroringModuleInstanceInfo}\nSee {getEmptyReteTheaterModuleInstanceInfo}\nSee {getEmptyReteTheaterInternalServiceModuleInstanceInfo}\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                AutomaticSystem\n                            \n                            \n                                Border\n                            \n                            \n                                ExternalVirtualMachine\n                            \n                            \n                                MirroringModuleInstance\n                            \n                            \n                                TheaterInternalServiceModuleInstance\n                            \n                            \n                                TheaterModuleInstance\n                            \n                            \n                                VirtualServerModuleInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        AutomaticSystem\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ReteMirroringModuleInstanceInfo\n\n                    \n                \n                \n                    \n                        Valore predefinito : getEmptyReteMirroringModuleInstanceInfo()\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-modules/export-rete-modules.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Border\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ReteMirroringModuleInstanceInfo\n\n                    \n                \n                \n                    \n                        Valore predefinito : getEmptyReteMirroringModuleInstanceInfo()\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-modules/export-rete-modules.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ExternalVirtualMachine\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ReteMirroringModuleInstanceInfo\n\n                    \n                \n                \n                    \n                        Valore predefinito : getEmptyReteMirroringModuleInstanceInfo()\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-modules/export-rete-modules.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MirroringModuleInstance\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ReteMirroringModuleInstanceInfo\n\n                    \n                \n                \n                    \n                        Valore predefinito : getEmptyReteMirroringModuleInstanceInfo()\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-modules/export-rete-modules.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TheaterInternalServiceModuleInstance\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ReteTheaterInternalServiceModuleInstanceInfo\n\n                    \n                \n                \n                    \n                        Valore predefinito : getEmptyReteTheaterInternalServiceModuleInstanceInfo()\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-modules/export-rete-modules.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TheaterModuleInstance\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ReteTheaterModuleInstanceInfo\n\n                    \n                \n                \n                    \n                        Valore predefinito : getEmptyReteTheaterModuleInstanceInfo()\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-modules/export-rete-modules.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        VirtualServerModuleInstance\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ReteMirroringModuleInstanceInfo\n\n                    \n                \n                \n                    \n                        Valore predefinito : getEmptyReteMirroringModuleInstanceInfo()\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-modules/export-rete-modules.ts:41\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { getEmptyReteMirroringModuleInstanceInfo, MirroringModuleInstanceNode, ReteMirroringModuleInstanceInfo } from \"./mirroringModuleInstance/mirroringModuleInstanceNode\";\nimport { getEmptyReteTheaterInternalServiceModuleInstanceInfo, ReteTheaterInternalServiceModuleInstanceInfo, TheaterInternalServiceModuleInstanceNode } from \"./theaterInternalServiceModuleInstance/theaterInternalServiceModuleInstanceNode\";\nimport { getEmptyReteTheaterModuleInstanceInfo, ReteTheaterModuleInstanceInfo, TheaterModuleInstanceNode } from \"./theaterModuleInstance/theaterModuleInstanceNode\";\n\n/**\n * Enum utilizzato per indicare l'indice di riferimento degli array contenenti le informazioni.\n * @see {NodeComponents}\n */\nexport enum IndexModuleComponent {\n    TheaterModuleInstance = 0, //SINONIMO -> TheatreModuleInstance = 0, \n    MirroringModuleInstance = 1,\n    TheaterInternalServiceModuleInstance = 2,\n    VirtualServerModuleInstance = 1, //todo\n    ExternalVirtualMachine = 1, //todo\n    AutomaticSystem = 1, //todo\n    Border = 1 //todo\n}\n\n\n/**\n * Array utilizzato per assegnare i valori al component negli editor. \n * Usato per processare e creare i vari nodi (rete-node).\n */\nexport const ModuleComponents = [\n    new TheaterModuleInstanceNode(),\n    new MirroringModuleInstanceNode(),\n    new TheaterInternalServiceModuleInstanceNode()\n];\n\n\n/**\n * Elemento che assegna le variabili a funzioni che restituiscono una struttura inizializzata vuota dei singoli nodi.\n * @see {getEmptyReteMirroringModuleInstanceInfo}\n * @see {getEmptyReteTheaterModuleInstanceInfo}\n * @see {getEmptyReteTheaterInternalServiceModuleInstanceInfo}\n */\nexport class EmptyModuleInfo {\n    TheaterModuleInstance: ReteTheaterModuleInstanceInfo = getEmptyReteTheaterModuleInstanceInfo()\n    TheaterInternalServiceModuleInstance: ReteTheaterInternalServiceModuleInstanceInfo = getEmptyReteTheaterInternalServiceModuleInstanceInfo()\n    MirroringModuleInstance: ReteMirroringModuleInstanceInfo = getEmptyReteMirroringModuleInstanceInfo()\n    VirtualServerModuleInstance: ReteMirroringModuleInstanceInfo = getEmptyReteMirroringModuleInstanceInfo() // todo\n    ExternalVirtualMachine: ReteMirroringModuleInstanceInfo = getEmptyReteMirroringModuleInstanceInfo() // todo\n    AutomaticSystem: ReteMirroringModuleInstanceInfo = getEmptyReteMirroringModuleInstanceInfo() // todo\n    Border: ReteMirroringModuleInstanceInfo = getEmptyReteMirroringModuleInstanceInfo() // todo\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/EmptyNodeInfo.html":{"url":"classes/EmptyNodeInfo.html","title":"class - EmptyNodeInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  EmptyNodeInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/rete-settings/nodes/rete-nodes/export-rete-nodes.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Elemento che assegna le variabili a funzioni che restituiscono una struttura inizializzata vuota dei singoli nodi.\nSee {getEmptyHostInfo}\nSee {getEmptySubnetInfo}\nSee {getEmptyNetworkInfo}\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                Host\n                            \n                            \n                                    Static\n                                Network\n                            \n                            \n                                    Static\n                                Subnet\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        Host\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ReteHostInfo\n\n                    \n                \n                \n                    \n                        Valore predefinito : getEmptyHostInfo()\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-nodes/export-rete-nodes.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        Network\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ReteNetworkInfo\n\n                    \n                \n                \n                    \n                        Valore predefinito : getEmptyNetworkInfo()\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-nodes/export-rete-nodes.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        Subnet\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ReteSubnetInfo\n\n                    \n                \n                \n                    \n                        Valore predefinito : getEmptySubnetInfo()\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-nodes/export-rete-nodes.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { getEmptyHostInfo, HostNode, ReteHostInfo } from \"./host/hostNode\";\nimport { getEmptyNetworkInfo, NetworkNode, ReteNetworkInfo } from \"./network/networkNode\";\nimport { getEmptySubnetInfo, ReteSubnetInfo, SubnetNode } from \"./subnet/subnetNode\";\n\n/**\n * Enum utilizzato per indicare l'indice di riferimento degli array contenenti le informazioni.\n * @see {NodeComponents}\n */\nexport enum IndexNodeComponent {\n    Host = 0,\n    Subnet = 1,\n    Network = 2\n}\n\n/**\n * Array utilizzato per assegnare i valori al component negli editor. \n * Usato per processare e creare i vari nodi (rete-node).\n */\nexport const NodeComponents = [\n    new HostNode(),\n    new SubnetNode(),\n    new NetworkNode()\n];\n\n/**\n * Elemento che assegna le variabili a funzioni che restituiscono una struttura inizializzata vuota dei singoli nodi.\n * @see {getEmptyHostInfo}\n * @see {getEmptySubnetInfo}\n * @see {getEmptyNetworkInfo}\n */\nexport class EmptyNodeInfo {\n    static Host: ReteHostInfo = getEmptyHostInfo();\n    static Subnet: ReteSubnetInfo = getEmptySubnetInfo();\n    static Network: ReteNetworkInfo = getEmptyNetworkInfo();\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/EntityNameMappingFileDTO.html":{"url":"classes/EntityNameMappingFileDTO.html","title":"class - EntityNameMappingFileDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  EntityNameMappingFileDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsDTO/theaterDTO.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indica l'array dei mapping nome-modulo.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                name_mapping\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        name_mapping\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         NameMappingDTO[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/theaterDTO.ts:54\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ModuleInstanceDTO, TheaterInstanceDTO } from \"./moduleDTO\"\n\n/**\n * Classe che contiene gli attributi che indicano il catalogo di riferimento di un teatro.\n */\nexport class TagCatalogueDTO {\n    description: string\n    id: string | number\n    name: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano lo stato di un teatro.\n */\nexport class TheatreStatusDTO {\n    code: string\n    id: string | number\n    name: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano un elemento nella sequenza di deploy.\n */\nexport class DeployInstanceDTO {\n    moduleInstanceConfigurationUUID?: string\n    moduleInstanceName: string\n    moduleInstanceUUID: string\n    moduleUUID: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano il blueprint di un teatro.\n */\nexport class BlueprintFileDTO {\n    description: string\n    imports: string[]\n    node_templates: {[name:string]:ModuleInstanceDTO|TheaterInstanceDTO}\n    tosca_definitions_version: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano il mapping nome-modulo.\n */\nexport class NameMappingDTO {\n    display_name: string\n    module_instance_name: string\n    module_name: string\n    node_template_name: string\n}\n/**\n * Classe che contiene gli attributi che indica l'array dei mapping nome-modulo.\n */\nexport class EntityNameMappingFileDTO {\n    name_mapping: NameMappingDTO[]\n}\n\n/**\n * Classe che contiene gli attributi che indicano il teaatro.\n */\nexport class TheaterDTO {\n    author: string\n    blueprintFile: BlueprintFileDTO\n    blueprintUUID: string | number\n    createdBy: string\n    createdDate: string\n    deploymentSequence: {[index:string]:DeployInstanceDTO} //tosee\n    description: string\n    entityNameMappingFile: EntityNameMappingFileDTO\n    id: string | number\n    isLocked: boolean\n    lastModifiedBy: string\n    lastModifiedDate: string\n    lockAcquiredTimestamp: string\n    lockLastUserAcquiring: string\n    lockReleasedTimestamp: string\n    name: string\n    status: TheatreStatusDTO\n    tags: TagCatalogueDTO[]\n    uuid: string\n    version: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/ExportModule.html":{"url":"classes/ExportModule.html","title":"class - ExportModule","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  ExportModule\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/application/export/exportModule.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che ha lo scopo di convertire il modulo nel formato YAML (standard TOSCA).\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                dataEditor\n                            \n                            \n                                    Protected\n                                module\n                            \n                            \n                                    Protected\n                                virtualMachines\n                            \n                        \n                    \n                \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                convertModule\n                            \n                            \n                                findNode\n                            \n                            \n                                getHostExport\n                            \n                            \n                                getModuleExport\n                            \n                            \n                                getNetworkExport\n                            \n                            \n                                getSubnetExport\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Costruttore\n        \n            \n                \n                    \nconstructor(module: ModuleApplication, dataEditor: Data)\n                    \n                \n                        \n                            \n                                Definito in src/app/services/application/export/exportModule.ts:28\n                            \n                        \n\n                \n                    \n                            Costruttore classe ExportModule\n\n                            \n                                    Parametri :\n                                    \n                                        \n                                            \n                                                Nome\n                                                    Tipo\n                                                Opzionale\n                                            \n                                        \n                                        \n                                                \n                                                        module\n                                                  \n                                                        \n                                                                        ModuleApplication\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dataEditor\n                                                  \n                                                        \n                                                                        Data\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        dataEditor\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         Data\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/application/export/exportModule.ts:22\n                        \n                    \n\n            \n                \n                    Variabile che ha lo scopo di memorizzare i dati dell'editor fornito al costruttore.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ModuleApplication\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/application/export/exportModule.ts:17\n                        \n                    \n\n            \n                \n                    Variabile che ha lo scopo di memorizzare il modulo fornito al costruttore.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        virtualMachines\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         VirtualMachine[]\n\n                    \n                \n                \n                    \n                        Valore predefinito : []\n                    \n                \n                    \n                        \n                                Definito in src/app/services/application/export/exportModule.ts:28\n                        \n                    \n\n            \n                \n                    Variabile di supporto.\nUsata per ottimizzare la parte di inserimento delle virtual machine nel ModuleSimpleData.\nSee {getHostExport}\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        convertModule\n                        \n                    \n                \n            \n            \n                \nconvertModule()\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/export/exportModule.ts:50\n                \n            \n\n\n            \n                \n                    Funzione che si occupa del parsing del modulo in formato adattabile all'export dello YAML.\n\nInizia assegnando i valori alle variabili che possono essere semplicemente dedotte dal modulo fornito nel costruttore.\nPrende i dati forniti dell'editor e itera su questi: in base al tipo richiama la funzione che restituisce il nodo parsed come oggetto YAML.\nSee {ModuleExport}\nSee {getHostExport}\nSee {getSubnetExport}\nSee {getNetworkExport}\n\n\n\n                    \n                    \n                    \n                        Returns :         ModuleExport\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findNode\n                        \n                    \n                \n            \n            \n                \nfindNode(name: string)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/export/exportModule.ts:316\n                \n            \n\n\n            \n                \n                    Funzone che serve per trovare il nodo partendo dal nome all'interno dei dati del canvas.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     NodeData\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHostExport\n                        \n                    \n                \n            \n            \n                \ngetHostExport(node: NodeData)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/export/exportModule.ts:92\n                \n            \n\n\n            \n                \n                    Funzione di parsing dell'host e delle porte.\n\nControlla le porte di output per le connessioni in uscita.\nItera sulle connessioni (porte i/o) e controlla le connessioni depends_on (subnet) e contained_in (network)\nSee {virtualMachines}\n\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                            NodeData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getModuleExport\n                        \n                    \n                \n            \n            \n                \ngetModuleExport()\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/export/exportModule.ts:241\n                \n            \n\n\n            \n                \n                    Funzione di parsing del modulo. Creazione dell'elemento modulo nel node_template.\n\nValorizza i dati che sono direttamente reperibili dalle informazioni del Modulo.\nSalva le virtual_machine @see {virtualMachines}\nInserimento delle interfacce consumer/provisor del modulo.\n\n\n\n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        : ModuleSimpleData }\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNetworkExport\n                        \n                    \n                \n            \n            \n                \ngetNetworkExport(network: NodeData)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/export/exportModule.ts:217\n                \n            \n\n\n            \n                \n                    Funzione di parsing del network.\n\nValorizza solamente i dati che sono direttamente reperibili dalle informazioni del nodo.\n\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    network\n                                    \n                                            NodeData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSubnetExport\n                        \n                    \n                \n            \n            \n                \ngetSubnetExport(subnet: NodeData)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/export/exportModule.ts:180\n                \n            \n\n\n            \n                \n                    Funzione di parsing della subnet.\n\nValorizza i dati che sono direttamente reperibili dalle informazioni del nodo.\nControlla le porte di output (connesisoni) che si collegano con la network per le relazioni contained_in.\n\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    subnet\n                                    \n                                            NodeData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Data, InputData, NodeData, NodesData, OutputData } from \"rete/types/core/data\";\nimport { EnumNodeType, InterfacePortType } from \"src/app/models/appType\";\nimport { ModuleApplication } from \"../../modelsApplication/applicationModels\";\nimport { ModuleExport, ModuleSimpleData, NetworkSimpleData, NodeSimpleData, PortSimpleData, PropertiesMSD, PropertiesSSD, SubnetSimpleData, VirtualMachine, VirtualMachinePorts } from \"../../modelsExport/moduleExport\";\nimport { ModeTypeExport, ModuleTypeExport, NetworkTypeExport, NodeTypeExport, PortTypeExport, RelationshipsTypeExport, SubnetTypeExport, ToscaDefinitionType } from \"../../modelsExport/TypeExport\";\n\n\n/**\n * Classe che ha lo scopo di convertire il modulo nel formato YAML (standard TOSCA).\n */\nexport class ExportModule {\n\n    /**\n     * Variabile che ha lo scopo di memorizzare il modulo fornito al costruttore.\n     * @type {ModuleApplication}\n     */\n    protected module: ModuleApplication\n    /**\n     * Variabile che ha lo scopo di memorizzare i dati dell'editor fornito al costruttore.\n     * @type {Data}\n     */\n    protected dataEditor: Data\n    /**\n     * Variabile di supporto.\n     * Usata per ottimizzare la parte di inserimento delle virtual machine nel ModuleSimpleData. \n     * @see {getHostExport}\n     */\n    protected virtualMachines: VirtualMachine[] = []; \n\n    /**\n     * Costruttore classe ExportModule\n     * @param module \n     * @param dataEditor \n     */\n    constructor(module: ModuleApplication, dataEditor: Data) {\n        this.module = module;\n        this.dataEditor = dataEditor;\n    }\n\n    /**\n     * Funzione che si occupa del parsing del modulo in formato adattabile all'export dello YAML.\n     * 1) Inizia assegnando i valori alle variabili che possono essere semplicemente dedotte dal modulo fornito nel costruttore.\n     * 2) Prende i dati forniti dell'editor e itera su questi: in base al tipo richiama la funzione che restituisce il nodo parsed come oggetto YAML.\n     * @return {ModuleExport}\n     * @see {ModuleExport} \n     * @see {getHostExport}\n     * @see {getSubnetExport}\n     * @see {getNetworkExport}\n     */\n    convertModule(): ModuleExport {\n        let me: ModuleExport = new ModuleExport();\n        me.tosca_definitions_version = ToscaDefinitionType.cloudify;\n        me.description = this.module.description;\n        me.imports = this.module.imports;\n        // node_Tempates\n        let nt: { [name: string]: ModuleSimpleData | NodeSimpleData | PortSimpleData | NetworkSimpleData | SubnetSimpleData } = {};\n        // inizia a prendere i nodi del modulo\n        for (let key in this.dataEditor.nodes) {\n            let element: NodeData = this.dataEditor.nodes[key];\n            if (element.data.type === EnumNodeType.Host) {\n                nt = Object.assign({}, nt, this.getHostExport(element));\n            }\n            else if (element.data.type === EnumNodeType.Subnet) {\n                nt = { ...nt, ...this.getSubnetExport(element) }\n            }\n            else if (element.data.type === EnumNodeType.Network) {\n                nt = { ...nt, ...this.getNetworkExport(element) }\n            }\n            else {\n                console.warn(\"Module type not recognized\");\n                continue;\n            }\n        }\n        // inserimento del modulo nei templates // deve essere fatto dopo che tutti i moduli sono stati completati -> guardare this.virtualMachines\n        nt = { ...nt, ...this.getModuleExport() }\n\n        me.node_templates = nt;\n\n        return me;\n    }\n\n\n\n    /**\n     * Funzione di parsing dell'host e delle porte.\n     * 1) Controlla le porte di output per le connessioni in uscita.\n     * 2) Itera sulle connessioni (porte i/o) e controlla le connessioni depends_on (subnet) e contained_in (network)\n     * @param node \n     * @return { { [name: string]: NodeSimpleData | PortSimpleData }}\n     * @see {virtualMachines}\n     */\n    getHostExport(node: NodeData): { [name: string]: NodeSimpleData | PortSimpleData } {\n\n        //serve al ModuleSimpleData\n        let MSDvm: VirtualMachine = { \n            virtual_machine: node.data.name as unknown as string, \n            ports: [] \n        };\n        let index: number = -1;\n\n        // get node\n        let singleNode: { [name: string]: NodeSimpleData } = {}\n        let nodeSimpleData: NodeSimpleData = {\n            type: NodeTypeExport.Host,\n            properties: undefined,\n            interfaces: undefined,\n            relationships: []\n        };\n        // node relation -> port # per ora solo le connessioni con le porte\n        (node.data.Output as []).forEach(\n            (out) => {\n                nodeSimpleData.relationships.push(\n                    { type: RelationshipsTypeExport.connect_port, target: out }\n                )\n            }\n        )\n        singleNode[node.data.name as unknown as string] = nodeSimpleData;\n\n\n\n        // get node ports\n        let ports: { [name: string]: PortSimpleData } = {};\n        for (let portName in node.outputs) {\n\n            MSDvm.ports[++index] = {\n                port: portName,\n                network: \"\",\n                subnets: [],\n            };\n\n            let nodePort: OutputData = node.outputs[portName];\n            let portSimpleData: PortSimpleData = {\n                type: PortTypeExport.Port,\n                relationships: []\n            }\n            // port relation -> net & sub # controllo ambo contained_in (net) e dependes_on (sub)\n            nodePort.connections.forEach(c => {\n                // prima depends_on\n                let subnetLinkedToPort: NodeData = this.dataEditor.nodes[c.node];\n                portSimpleData.relationships.push(\n                    { type: RelationshipsTypeExport.depends_on, target: subnetLinkedToPort.data.name as unknown as string }\n                );\n                MSDvm.ports[index].subnets.push({ subnet: subnetLinkedToPort.data.name as unknown as string });\n                // poi contained_in\n                for (let key in subnetLinkedToPort.outputs) {\n                    let subnetPort: OutputData = subnetLinkedToPort.outputs[key];\n                    // controllo network connesso alla sub.\n                    subnetPort.connections.forEach(c => {\n                        let networkConnectedToSubnet: NodeData = this.dataEditor.nodes[c.node];\n                        portSimpleData.relationships.push(\n                            { type: RelationshipsTypeExport.contained_in, target: networkConnectedToSubnet.data.name as unknown as string }\n                        );\n                        MSDvm.ports[index].network = networkConnectedToSubnet.data.name as unknown as string;\n                    })\n                }\n\n            })\n\n            ports[portName] = portSimpleData;\n        }\n\n        let out: { [name: string]: NodeSimpleData | PortSimpleData } = {};\n        out = Object.assign({}, singleNode, ports);\n\n\n        this.virtualMachines.push(MSDvm);\n\n        return out;\n    }\n\n\n\n    /**\n     * Funzione di parsing della subnet.\n     * 1) Valorizza i dati che sono direttamente reperibili dalle informazioni del nodo.\n     * 2) Controlla le porte di output (connesisoni) che si collegano con la network per le relazioni contained_in.\n     * @param subnet \n     * @returns {{ [name: string]: SubnetSimpleData }}\n     */\n    getSubnetExport(subnet: NodeData): { [name: string]: SubnetSimpleData } {\n        // get subnet\n        let singleSubnet: { [name: string]: SubnetSimpleData } = {}\n        let subnetSimpleData: SubnetSimpleData = {\n            type: SubnetTypeExport.Subnet,\n            relationships: [],\n            properties: {\n                openstack_config: null,\n                use_external_resource: false,\n                subnet: {\n                    ip_version: subnet.data.version as unknown as number,\n                    cidr: subnet.data.cidr as unknown as string,\n                    enable_dhcp: subnet.data.isDhcp as unknown as boolean,\n                    gateway_ip: null\n                }\n            }\n        };\n        // subnet relation -> network (only contained in)\n        (subnet.data.Output as []).forEach(\n            (out) => {\n                subnetSimpleData.relationships.push(\n                    { type: RelationshipsTypeExport.contained_in, target: out }\n                )\n            }\n        )\n        singleSubnet[subnet.data.name as unknown as string] = subnetSimpleData;\n\n        return singleSubnet;\n    }\n\n\n    /**\n     * Funzione di parsing del network.\n     * 1) Valorizza solamente i dati che sono direttamente reperibili dalle informazioni del nodo.\n     * @param subnet \n     * @returns {{ [name: string]: NetworkSimpleData }}\n     */\n    getNetworkExport(network: NodeData): { [name: string]: NetworkSimpleData } {\n        // get subnet\n        let singleNetwork: { [name: string]: NetworkSimpleData } = {}\n        let networkSimpleData: NetworkSimpleData = {\n            type: NetworkTypeExport.Network,\n            properties: {\n                openstack_config: null,\n                use_external_resource: false,\n            }\n        };\n\n        singleNetwork[network.data.name as unknown as string] = networkSimpleData;\n\n        return singleNetwork;\n    }\n\n\n    /**\n     * Funzione di parsing del modulo. Creazione dell'elemento modulo nel node_template.\n     * 1) Valorizza i dati che sono direttamente reperibili dalle informazioni del Modulo.\n     * 2) Salva le virtual_machine @see {virtualMachines}\n     * 3) Inserimento delle interfacce consumer/provisor del modulo.\n     * @returns { [name: string]: ModuleSimpleData }\n     */\n    getModuleExport(): { [name: string]: ModuleSimpleData } {\n        let moduleExport: { [name: string]: ModuleSimpleData } = {}\n        let moduleSimpleData: ModuleSimpleData = {\n            type: ModuleTypeExport[this.module.type]?ModuleTypeExport[this.module.type]:ModuleTypeExport[0],\n            properties: {\n                mode: ModeTypeExport.managed,\n                description: this.module.description,\n                version: this.module.version as number,\n                constraints: {\n                    interface_constraints: [],\n                    module_constraints: [],\n                    network_constraints: []\n                },\n                interface_networks: {\n                    providers: [],\n                    consumers: []\n                },\n                virtual_machines: this.virtualMachines ? this.virtualMachines : null, // per il come si è reperito -> guardare this.virtualMachines\n            }\n        };\n\n        // inserisco interfacce consumer/privisor\n        let index: number = null;\n        let indexC: number = -1;\n        let indexP: number = -1;\n        let type: string = null;\n        this.module.interfaces.forEach(i => {\n            if (i.type === InterfacePortType.CONSUMER) {\n                type = \"consumers\";\n                index = ++indexC;\n            }\n            else if (i.type === InterfacePortType.PRODUCER) {\n                type = \"providers\"\n                index = ++indexP;\n            }\n            else {\n                type = null;\n                console.warn(\"type not recognized\")\n                index = null;\n                return;\n            };\n            moduleSimpleData.properties.interface_networks[type].push(\n                {\n                    interface: i.nodeName,\n                    tag: i.nodeName,\n                    network: i.network.name,\n                    subnets: []\n                }\n            )\n            // prende le network + subnet ad esso connesse (se sono connesse)\n            let network: NodeData = this.findNode(i.network.name);\n            if (network) {\n                for (let key in network.inputs) {\n                    let networkInputPort: InputData = network.inputs[key];\n                    networkInputPort.connections.forEach(c => {\n                        let subnet: NodeData = this.dataEditor.nodes[c.node];\n                        moduleSimpleData.properties.interface_networks[type][index].subnets.push(\n                            { subnet: subnet.data.name as unknown as string }\n                        )\n                    })\n                }\n            }\n            index++;\n        })\n\n        moduleExport[this.module.name] = moduleSimpleData;\n\n        return moduleExport;\n    }\n\n    /**\n     * Funzone che serve per trovare il nodo partendo dal nome all'interno dei dati del canvas.\n     * @param name \n     * @returns {NodeData}\n     */\n    findNode(name: string): NodeData {\n        let n: NodeData = undefined\n        for (let key in this.dataEditor.nodes) {\n            let node: NodeData = this.dataEditor.nodes[key];\n            if ((node.data.name as unknown as string) === name) {\n                n = node;\n                break;\n            }\n        }\n        return n\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"injectables/ExportService.html":{"url":"injectables/ExportService.html","title":"injectable - ExportService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ExportService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/application/export/export.service.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Servizio di eport del canvas/editor sottoforma di file (scaricabile)\n\nPrevede l'export del teatro e modulo sottoforma di JSON (da poter utilizzare nell'applicazione).\nPrevede l'export del teatro e modulo sottoforma di YAML (standard tosca).\n\n\n            \n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                moduleType\n                            \n                            \n                                    Protected\n                                theaterType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                exportModuleToJSON\n                            \n                            \n                                exportModuleToYAML\n                            \n                            \n                                exportTheaterToJSON\n                            \n                            \n                                exportTheaterToYAML\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Costruttore\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Definito in src/app/services/application/export/export.service.ts:32\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        exportModuleToJSON\n                        \n                    \n                \n            \n            \n                \nexportModuleToJSON(module: ModuleApplication, editor: Data)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/export/export.service.ts:54\n                \n            \n\n\n            \n                \n                    Funzione che esegue l'export di un modulo nel formato JSON (application).\nSee {exportToJson}\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    module\n                                    \n                                                ModuleApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    editor\n                                    \n                                                Data\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        exportModuleToYAML\n                        \n                    \n                \n            \n            \n                \nexportModuleToYAML(module: ModuleApplication, editor: Data)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/export/export.service.ts:43\n                \n            \n\n\n            \n                \n                    Funzione che esegue l'export di un modulo nel formato YAML standrard tosca.\nSee {ExportModule}\nSee {exportToYaml}\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    module\n                                    \n                                                ModuleApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    editor\n                                    \n                                                Data\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        exportTheaterToJSON\n                        \n                    \n                \n            \n            \n                \nexportTheaterToJSON(theater: TheaterApplication, editor: Data)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/export/export.service.ts:77\n                \n            \n\n\n            \n                \n                    Funzione che esegue l'export di un teatro nel formato JSON (application).\nSee {exportToJson}\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    theater\n                                    \n                                                TheaterApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    editor\n                                    \n                                                Data\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        exportTheaterToYAML\n                        \n                    \n                \n            \n            \n                \nexportTheaterToYAML(theater: TheaterApplication, editor: Data)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/export/export.service.ts:66\n                \n            \n\n\n            \n                \n                    Funzione che esegue l'export di un teatro nel formato YAML standrard tosca.\nSee {exportTheater}\nSee {exportToYaml}\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    theater\n                                    \n                                                TheaterApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    editor\n                                    \n                                                Data\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moduleType\n                        \n                    \n                \n            \n                \n                    \n                        Valore predefinito : \".\"+SubjectType.MODULE.toLowerCase()\n                    \n                \n                    \n                        \n                                Definito in src/app/services/application/export/export.service.ts:32\n                        \n                    \n\n            \n                \n                    Variabile che indica l'estensione aggiuntiva al nome e tipo del file\nSe si dovesse scaricare l'application (json) di un modulo, essa sarebbe: nomeMosulo.module.json\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        theaterType\n                        \n                    \n                \n            \n                \n                    \n                        Valore predefinito : \".\"+SubjectType.THEATER.toLowerCase()\n                    \n                \n                    \n                        \n                                Definito in src/app/services/application/export/export.service.ts:26\n                        \n                    \n\n            \n                \n                    Variabile che indica l'estensione aggiuntiva al nome e tipo del file\nSe si dovesse scaricare l'application (json) di un teatro, essa sarebbe: nomeTeatro.theater.json\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Data } from 'rete/types/core/data';\nimport { ModuleApplication, TheaterApplication } from '../../modelsApplication/applicationModels';\nimport { ModuleExport } from '../../modelsExport/moduleExport';\nimport { ExportModule } from './exportModule';\nimport { ExportTheater } from './exportTheater';\nimport { TheaterExport } from '../../modelsExport/theaterExport';\nimport { SubjectType } from 'src/app/models/appType';\nimport { exportToYaml, exportToJson } from './exportTo';\n\n/**\n * Servizio di eport del canvas/editor sottoforma di file (scaricabile)\n * - Prevede l'export del teatro e modulo sottoforma di JSON (da poter utilizzare nell'applicazione).\n * - Prevede l'export del teatro e modulo sottoforma di YAML (standard tosca).\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ExportService {\n\n  /**\n   * Variabile che indica l'estensione aggiuntiva al nome e tipo del file\n   * @example \n   * Se si dovesse scaricare l'application (json) di un teatro, essa sarebbe: nomeTeatro.theater.json \n   */\n  protected theaterType=\".\"+SubjectType.THEATER.toLowerCase();\n    /**\n   * Variabile che indica l'estensione aggiuntiva al nome e tipo del file\n   * @example \n   * Se si dovesse scaricare l'application (json) di un modulo, essa sarebbe: nomeMosulo.module.json \n   */\n  protected moduleType=\".\"+SubjectType.MODULE.toLowerCase();\n\n  constructor() { }\n\n  /**\n   * Funzione che esegue l'export di un modulo nel formato YAML standrard tosca.\n   * @param module \n   * @param editor \n   * @see {ExportModule}\n   * @see {exportToYaml}\n   */\n  exportModuleToYAML(module: ModuleApplication, editor: Data) {\n    let data: ModuleExport = new ExportModule(module, editor).convertModule();\n    return exportToYaml(module.name, data);\n  }\n\n  /**\n   * Funzione che esegue l'export di un modulo nel formato JSON (application).\n   * @param module \n   * @param editor \n   * @see {exportToJson} \n   */\n  exportModuleToJSON(module: ModuleApplication, editor: Data) {\n    return exportToJson(module.name+this.moduleType, module);\n  }\n\n\n  /**\n   * Funzione che esegue l'export di un teatro nel formato YAML standrard tosca.\n   * @param module \n   * @param editor \n   * @see {exportTheater}\n   * @see {exportToYaml}\n   */\n  exportTheaterToYAML(theater: TheaterApplication, editor: Data) {\n    let data: TheaterExport = new ExportTheater(theater, editor).convertTheater();\n    return exportToYaml(theater.name, data);\n  }\n\n  /**\n   * Funzione che esegue l'export di un teatro nel formato JSON (application).\n   * @param module \n   * @param editor \n   * @see {exportToJson} \n   */\n  exportTheaterToJSON(theater: TheaterApplication, editor: Data) {\n    return exportToJson(theater.name+this.theaterType, theater);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/ExportTheater.html":{"url":"classes/ExportTheater.html","title":"class - ExportTheater","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  ExportTheater\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/application/export/exportTheater.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che ha lo scopo di convertire il teatro nel formato YAML (standard TOSCA).\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                dataEditor\n                            \n                            \n                                theater\n                            \n                        \n                    \n                \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                convertTheater\n                            \n                            \n                                getModuleInstanceExport\n                            \n                            \n                                getTheaterExport\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Costruttore\n        \n            \n                \n                    \nconstructor(theater: TheaterApplication, dataEditor: Data)\n                    \n                \n                        \n                            \n                                Definito in src/app/services/application/export/exportTheater.ts:19\n                            \n                        \n\n                \n                    \n                            Costruttore classe ExportTheater\n\n                            \n                                    Parametri :\n                                    \n                                        \n                                            \n                                                Nome\n                                                    Tipo\n                                                Opzionale\n                                            \n                                        \n                                        \n                                                \n                                                        theater\n                                                  \n                                                        \n                                                                        TheaterApplication\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dataEditor\n                                                  \n                                                        \n                                                                        Data\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        dataEditor\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         Data\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/application/export/exportTheater.ts:19\n                        \n                    \n\n            \n                \n                    Variabile che ha lo scopo di memorizzare i dati dell'editor fornito al costruttore.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        theater\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         TheaterApplication\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/application/export/exportTheater.ts:14\n                        \n                    \n\n            \n                \n                    Variabile che ha lo scopo di memorizzare il teatro fornito al costruttore.\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        convertTheater\n                        \n                    \n                \n            \n            \n                \nconvertTheater()\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/export/exportTheater.ts:37\n                \n            \n\n\n            \n                \n                    Funzione che si occupa del parsing del modulo in formato adattabile all'export dello YAML.\n\nInizia assegnando i valori alle variabili che possono essere semplicemente dedotte dal teatro fornito nel costruttore.\nPrende i dati forniti dell'editor e itera su questi - restituisce il modulo parsed come oggetto YAML.\n\n\n\n                    \n                    \n                    \n                        Returns :         TheaterExport\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getModuleInstanceExport\n                        \n                    \n                \n            \n            \n                \ngetModuleInstanceExport(module: NodeData)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/export/exportTheater.ts:62\n                \n            \n\n\n            \n                \n                    Funzione che prende in input un nodo-modulo e lo converte in un oggetto adattabile allo YAML (TOSCA).\n\nInizia valorizzando i dati immediatamente disponibile dalle info del nodo.\nItera sulle connessioni in ingresso del nodo e salva le varie associazioni.\n\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    module\n                                    \n                                            NodeData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTheaterExport\n                        \n                    \n                \n            \n            \n                \ngetTheaterExport()\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/export/exportTheater.ts:101\n                \n            \n\n\n            \n                \n                    Funzione di parsing del teatro. Creazione dell'elemento teatro nel node_template.\n\nValorizza i dati che sono direttamente reperibili dalle informazioni del Modulo.\nSalva le informazioni delle aree e dei tag.\n\n\n\n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        : TheaterSimpleData }\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Data, InputData, NodeData } from \"rete/types/core/data\";\nimport { TheaterApplication } from \"../../modelsApplication/applicationModels\";\nimport { ModuleInstanceSimpleData, PropertiesMISD, TheaterExport, TheaterSimpleData } from \"../../modelsExport/theaterExport\";\nimport { ModeTypeExport, ModuleTypeExport, TheaterTypeExport, ToscaDefinitionType } from \"../../modelsExport/TypeExport\";\n\n/**\n * Classe che ha lo scopo di convertire il teatro nel formato YAML (standard TOSCA).\n */\nexport class ExportTheater {\n    /**\n     * Variabile che ha lo scopo di memorizzare il teatro fornito al costruttore.\n     * @type {TheaterApplication}\n     */\n    theater: TheaterApplication\n    /**\n     * Variabile che ha lo scopo di memorizzare i dati dell'editor fornito al costruttore.\n     * @type {Data}\n     */\n    dataEditor: Data\n\n    /**\n     * Costruttore classe ExportTheater\n     * @param theater \n     * @param dataEditor \n     */\n    constructor(theater: TheaterApplication, dataEditor: Data) {\n        this.theater = theater;\n        this.dataEditor = dataEditor;\n    }\n\n    /**\n     * Funzione che si occupa del parsing del modulo in formato adattabile all'export dello YAML.\n     * 1) Inizia assegnando i valori alle variabili che possono essere semplicemente dedotte dal teatro fornito nel costruttore.\n     * 2) Prende i dati forniti dell'editor e itera su questi - restituisce il modulo parsed come oggetto YAML.\n     * @returns {TheaterExport}\n     */\n    convertTheater(): TheaterExport {\n        let te: TheaterExport = new TheaterExport();\n        te.tosca_definitions_version = ToscaDefinitionType.cloudify\n        te.description = this.theater.description;\n        te.imports = this.theater.blueprintFile.imports;\n        let nt: { [name: string]: TheaterSimpleData | ModuleInstanceSimpleData } = {}\n        // inizia a prendere i moduli del teatro\n        for (let key in this.dataEditor.nodes) {\n            let element: NodeData = this.dataEditor.nodes[key];\n            nt = Object.assign({}, nt, this.getModuleInstanceExport(element));\n        }\n        nt = { ...nt, ...this.getTheaterExport() }\n        te.node_templates = nt;\n        return te;\n    }\n\n\n\n    /**\n     * Funzione che prende in input un nodo-modulo e lo converte in un oggetto adattabile allo YAML (TOSCA).\n     * 1) Inizia valorizzando i dati immediatamente disponibile dalle info del nodo.\n     * 2) Itera sulle connessioni in ingresso del nodo e salva le varie associazioni.\n     * @param module \n     * @returns  {{ [name: string]: ModuleInstanceSimpleData }}\n     */\n    getModuleInstanceExport(module: NodeData): { [name: string]: ModuleInstanceSimpleData } {\n        let mi: { [name: string]: ModuleInstanceSimpleData } = {};\n        let moduleInstanceSimpleData: ModuleInstanceSimpleData = {\n            type: ModuleTypeExport[module.data.type as unknown as string] ? ModuleTypeExport[module.data.type as unknown as string] : ModuleTypeExport[0],\n            properties: {\n                module: module.data.module as unknown as string,\n                version: module.data.version as unknown as string,\n                area: module.data.area as unknown as string,\n                sequence: module.data.sequence as unknown as number,\n                consumer_interface_link: [],\n                sources: null,\n            }\n        }\n\n        for (let key in module.inputs) {\n            let consumerIF: InputData = module.inputs[key];\n            consumerIF.connections.forEach(c => {\n                let moduleConnected: NodeData = this.dataEditor.nodes[c.node];\n                moduleInstanceSimpleData.properties.consumer_interface_link.push(\n                    {\n                        local_interface: key,\n                        module_interface: moduleConnected.data.name as unknown as string,\n                        remote_interface: c.output\n                    }\n                )\n            })\n        }\n\n        mi[module.data.name as unknown as string] = moduleInstanceSimpleData;\n        return mi;\n    }\n\n\n    /**\n     * Funzione di parsing del teatro. Creazione dell'elemento teatro nel node_template.\n     * 1) Valorizza i dati che sono direttamente reperibili dalle informazioni del Modulo.\n     * 3) Salva le informazioni delle aree e dei tag.\n     * @returns { [name: string]: TheaterSimpleData }\n     */\n    getTheaterExport(): { [name: string]: TheaterSimpleData } {\n        let ti: { [name: string]: TheaterSimpleData } = {};\n        let theaterSimpleData: TheaterSimpleData = {\n            type: TheaterTypeExport.Theater,\n            properties: {\n                version: this.theater.version,\n                description: this.theater.version,\n                mode: ModeTypeExport.managed,\n                author: this.theater.author,\n                areas: [],\n                tags: [],\n            }\n        }\n\n        this.theater.properties.areas.forEach(a => {\n            theaterSimpleData.properties.areas.push(\n                { area: a.area, description: a.description }\n            )\n        });\n\n        this.theater.tags.forEach(t => {\n            theaterSimpleData.properties.tags.push(\n                { tag: t.name }\n            )\n        });\n\n        ti[this.theater.name] = theaterSimpleData;\n        return ti\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"injectables/FileService.html":{"url":"injectables/FileService.html","title":"injectable - FileService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FileService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/application/file/file.service.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Servizio di gestione di importing file da locale all'app.\n\n            \n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                moduleType\n                            \n                            \n                                    Protected\n                                selectedFile\n                            \n                            \n                                    Protected\n                                theaterType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                getFile\n                            \n                            \n                                isFileValid\n                            \n                            \n                                    Async\n                                onFileSelected\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Costruttore\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Definito in src/app/services/application/file/file.service.ts:31\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        getFile\n                        \n                    \n                \n            \n            \n                \ngetFile()\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/file/file.service.ts:69\n                \n            \n\n\n            \n                \n                    Funzione cha come scopo ritornare il file (sottoforma di oggetto parserizzato) captato dall'input.\n\n\n                    \n                    \n                    \n                        Returns :     File\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isFileValid\n                        \n                    \n                \n            \n            \n                \nisFileValid(file: File, data: any)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/file/file.service.ts:79\n                \n            \n\n\n            \n                \n                    Funzione che ha lo scopo di controllare se il file è accettabile dall'applicazione o meno.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                            File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onFileSelected\n                        \n                    \n                \n            \n            \n                \n                    \n                    onFileSelected(event: any)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/file/file.service.ts:41\n                \n            \n\n\n            \n                \n                    Funzione che viene richiamata per gestire l'evento dell'input una volta captato il file.\nSi occupa anche di parserizzare il file sottoforma di oggetto (json).\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moduleType\n                        \n                    \n                \n            \n                \n                    \n                        Valore predefinito : \".\" + SubjectType.MODULE.toLowerCase() + \".json\"\n                    \n                \n                    \n                        \n                                Definito in src/app/services/application/file/file.service.ts:24\n                        \n                    \n\n            \n                \n                    Variabile che indica l'estensione aggiuntiva al nome e tipo del file\nSe si dovesse scaricare l'application (json) di un modulo, essa sarebbe: nomeMosulo.module.json\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        selectedFile\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     File\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/application/file/file.service.ts:31\n                        \n                    \n\n            \n                \n                    Variabile che ha come scopo il salvataggio di informazioni del file.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        theaterType\n                        \n                    \n                \n            \n                \n                    \n                        Valore predefinito : \".\" + SubjectType.THEATER.toLowerCase() + \".json\"\n                    \n                \n                    \n                        \n                                Definito in src/app/services/application/file/file.service.ts:18\n                        \n                    \n\n            \n                \n                    Variabile che indica l'estensione aggiuntiva al nome e tipo del file\nSe si dovesse scaricare l'application (json) di un teatro, essa sarebbe: nomeTeatro.theater.json\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { SubjectType } from 'src/app/models/appType';\nimport { ModuleApplication, TheaterApplication } from '../../modelsApplication/applicationModels';\n\n/**\n * Servizio di gestione di importing file da locale all'app.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class FileService {\n\n  /**\n * Variabile che indica l'estensione aggiuntiva al nome e tipo del file\n * @example \n * Se si dovesse scaricare l'application (json) di un teatro, essa sarebbe: nomeTeatro.theater.json \n */\n  protected theaterType = \".\" + SubjectType.THEATER.toLowerCase() + \".json\";\n  /**\n * Variabile che indica l'estensione aggiuntiva al nome e tipo del file\n * @example \n * Se si dovesse scaricare l'application (json) di un modulo, essa sarebbe: nomeMosulo.module.json \n */\n  protected moduleType = \".\" + SubjectType.MODULE.toLowerCase() + \".json\";\n\n\n  /**\n   * Variabile che ha come scopo il salvataggio di informazioni del file.\n   * @type {File}\n   */\n  protected selectedFile: File;\n\n  constructor() { }\n\n  /**\n   * Funzione che viene richiamata per gestire l'evento dell'input una volta captato il file.\n   * Si occupa anche di parserizzare il file sottoforma di oggetto (json).\n   * @param event \n   * @return {Promise}\n   */\n  async onFileSelected(event: any): Promise {\n    this.selectedFile = event.target.files[0];\n    const fileReader = new FileReader();\n    fileReader.readAsText(this.selectedFile, \"UTF-8\");\n    return new Promise((resolve, reject) => {\n      fileReader.onload = async () => {\n        try {\n          var data = JSON.parse(fileReader.result as string)\n          if (this.isFileValid(this.selectedFile, data))\n            resolve(data)\n          else\n            reject(\"The file selected is not valid\")\n        }\n        catch (e) {\n          reject(e);\n        }\n      }\n      fileReader.onerror = (error) => {\n        reject(\"Unable to read file.\");\n      }\n    }\n    )\n  }\n\n  /**\n   * Funzione cha come scopo ritornare il file (sottoforma di oggetto parserizzato) captato dall'input.\n   * @returns \n   */\n  getFile(): File {\n    return this.selectedFile;\n  }\n\n  /**\n   * Funzione che ha lo scopo di controllare se il file è accettabile dall'applicazione o meno.\n   * @param file \n   * @param data \n   * @returns {boolean}\n   */\n  isFileValid(file: File, data: any): boolean {\n    if (file.type !== \"application/json\")\n      return false\n    if (file.name.includes(this.theaterType)) {\n      if ((data as TheaterApplication).validateObject === \"theater\")\n        return true\n      else\n        return false\n    }\n    else if (file.name.includes(this.moduleType)) {\n      if ((data as ModuleApplication).validateObject === \"module\")\n        return true\n      else\n        return false\n    }\n    else\n      return false\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/FlavorApplication.html":{"url":"classes/FlavorApplication.html","title":"class - FlavorApplication","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  FlavorApplication\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsApplication/applicationModels.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        FlavorBasicInfo\n            \n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                flavorName\n                            \n                            \n                                cpu\n                            \n                            \n                                disk\n                            \n                            \n                                ram\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        flavorName\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsApplication/applicationModels.ts:116\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cpu\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     number | string\n\n                    \n                \n                        \n                            \n                                ereditato da         FlavorBasicInfo\n\n                            \n                        \n                    \n                        \n                                Definito in         FlavorBasicInfo:5\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        disk\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     number | string\n\n                    \n                \n                        \n                            \n                                ereditato da         FlavorBasicInfo\n\n                            \n                        \n                    \n                        \n                                Definito in         FlavorBasicInfo:6\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ram\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     number | string\n\n                    \n                \n                        \n                            \n                                ereditato da         FlavorBasicInfo\n\n                            \n                        \n                    \n                        \n                                Definito in         FlavorBasicInfo:7\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ReteHostInfo } from \"src/app/rete-settings/nodes/rete-nodes/host/hostNode\";\nimport { ReteNetworkInfo } from \"src/app/rete-settings/nodes/rete-nodes/network/networkNode\";\nimport { ReteSubnetInfo } from \"src/app/rete-settings/nodes/rete-nodes/subnet/subnetNode\";\nimport { ReteMirroringModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/mirroringModuleInstance/mirroringModuleInstanceNode\";\nimport { ReteTheaterInternalServiceModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/theaterInternalServiceModuleInstance/theaterInternalServiceModuleInstanceNode\";\nimport { ReteTheaterModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/theaterModuleInstance/theaterModuleInstanceNode\";\nimport { FlavorBasicInfo } from \"../modelsDTO/falvorDTO\";\nimport { HostModuleDTO } from \"../modelsDTO/hostDTO\";\nimport { ModuleNetworkInterfaceDTO, ModuleInstancePropertiesDTO, SimpleModuleDTO, TheaterInstancePropertiesDTO, ModuleInstanceDTO, ModuleDTO, SimpleAreaDTO, AreaDTO } from \"../modelsDTO/moduleDTO\";\nimport { TheaterDTO } from \"../modelsDTO/theaterDTO\";\n\n\nexport interface CommonModule {\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n}\n\n\n/**\n * Classe contenente gli attributi utilizzati per le operazioni che coinvolgono i moduli.\n * ps. Questa struttura è prettamente utilizzata nella chiamata relativa al singolo modulo.\n */\nexport class ModuleApplication extends ModuleDTO implements CommonModule {\n    imports: string[] // perchè nell'export yaml è previsto\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n    // serve per validare il json risultante dal parsing del theaterApplication\n    validateObject?: string = \"module\";\n}\n// PER IMPLEMENTAZIONI FUTURE, PER COERENZA, PRENDERE DIRETTAMENTE I SINGOLI NODI DALLA CHIAMATA ESCLUSIVA E NON DA QUELLA CHE RESTITUISCE TUTTI I TEATRI\n/**\n * Classe contenente gli attributi utilizzati per le operazioni che coinvolgono i moduli.\n * ps. Questa struttura è prettamente utilizzata nella chiamata che prende tutti i moduli del teatro.\n */\nexport class SimpleModuleApplication extends SimpleModuleDTO implements CommonModule {\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n}\n\n\nexport class ReteConnection {\n    from: string;\n    port_src: string;\n    to: string;\n    port_dst: string;\n}\n\nexport interface TopologyList {\n    rete: any;\n    topology?: TopologyElement\n}\nexport class TopologyElement {\n    elements: { [name: string]: any };\n    connection: ReteConnection[]\n}\n\n// apptype module topology\n\nexport class NodeTopologyElement implements TopologyElement {\n    elements: { [hostName: string]: ReteHostInfo | ReteSubnetInfo | ReteNetworkInfo };\n    connection: ReteConnection[]\n}\n\nexport interface ModuleTopology extends TopologyList {\n    rete: ReteMirroringModuleInstanceInfo | ReteTheaterInternalServiceModuleInstanceInfo | ReteTheaterModuleInstanceInfo\n    topology: NodeTopologyElement;\n}\n\nexport class ModuleInstance extends ModuleInstanceDTO implements ModuleTopology {\n    // moduleTopology data\n    rete: ReteTheaterModuleInstanceInfo | ReteTheaterInternalServiceModuleInstanceInfo | ReteMirroringModuleInstanceInfo;\n    topology: NodeTopologyElement;\n    // other data\n    moduleInfo: SimpleModuleApplication\n}\n\n// apptype theater theater\n\nexport interface TheaterTopology extends TopologyElement {\n    elements: { [hostName: string]: ModuleInstance };\n    connection: ReteConnection[];\n}\n\nexport class TheaterApplication extends TheaterDTO implements TheaterTopology {\n    // theaterTopology data\n    elements: { [hostName: string]: ModuleInstance; };\n    connection: ReteConnection[];\n    // other data\n    properties: TheaterInstancePropertiesDTO;\n    topology: TheaterTopology;\n    // serve per validare il json risultante dal parsing del theaterApplication\n    validateObject?: string = \"theater\";\n}\n\nexport class AreaApplication extends AreaDTO {\n    color?: string;\n}\nexport class AreaColorDTO extends SimpleAreaDTO {\n    color: string;\n}\n\n\nexport class FlavorApplication extends FlavorBasicInfo {\n    flavorName: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/FlavorBasicInfo.html":{"url":"classes/FlavorBasicInfo.html","title":"class - FlavorBasicInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  FlavorBasicInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsDTO/falvorDTO.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi generali che indicano il flavor.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                cpu\n                            \n                            \n                                disk\n                            \n                            \n                                ram\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        cpu\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     number | string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/falvorDTO.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        disk\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     number | string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/falvorDTO.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ram\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     number | string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/falvorDTO.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class FlavorBasicInfo {\n    cpu: number | string;\n    disk: number | string;\n    ram: number | string;\n}\n\n/**\n * Classe che contiene gli attributi che indicano l'environment virtualizzato del flavor.\n */\nexport class VirtualizationEnvironmentTypeDTO {\n    description: string\n    id: number\n    isEnabled: true\n    name: string\n    nameAlias: string\n    supportMachineId: number\n    uuid: string\n}\n\n\n/**\n * Classe che contiene gli attributi che indicano i flavor utilizzabili.\n * @extends {FlavorBasicInfo}\n */\nexport class FlavorDTO extends FlavorBasicInfo {\n    name: string;\n    detailJson: {};\n    id: number | string;\n    uuid: string;\n    virtualizationEnvironmentType: VirtualizationEnvironmentTypeDTO;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/FlavorDTO.html":{"url":"classes/FlavorDTO.html","title":"class - FlavorDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  FlavorDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsDTO/falvorDTO.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano i flavor utilizzabili.\n\n            \n\n            \n                Extends\n            \n            \n                        FlavorBasicInfo\n            \n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                detailJson\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                uuid\n                            \n                            \n                                virtualizationEnvironmentType\n                            \n                            \n                                cpu\n                            \n                            \n                                disk\n                            \n                            \n                                ram\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        detailJson\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     literal type\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/falvorDTO.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     number | string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/falvorDTO.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/falvorDTO.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uuid\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/falvorDTO.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        virtualizationEnvironmentType\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         VirtualizationEnvironmentTypeDTO\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/falvorDTO.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cpu\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     number | string\n\n                    \n                \n                        \n                            \n                                ereditato da         FlavorBasicInfo\n\n                            \n                        \n                    \n                        \n                                Definito in         FlavorBasicInfo:5\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        disk\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     number | string\n\n                    \n                \n                        \n                            \n                                ereditato da         FlavorBasicInfo\n\n                            \n                        \n                    \n                        \n                                Definito in         FlavorBasicInfo:6\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ram\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     number | string\n\n                    \n                \n                        \n                            \n                                ereditato da         FlavorBasicInfo\n\n                            \n                        \n                    \n                        \n                                Definito in         FlavorBasicInfo:7\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class FlavorBasicInfo {\n    cpu: number | string;\n    disk: number | string;\n    ram: number | string;\n}\n\n/**\n * Classe che contiene gli attributi che indicano l'environment virtualizzato del flavor.\n */\nexport class VirtualizationEnvironmentTypeDTO {\n    description: string\n    id: number\n    isEnabled: true\n    name: string\n    nameAlias: string\n    supportMachineId: number\n    uuid: string\n}\n\n\n/**\n * Classe che contiene gli attributi che indicano i flavor utilizzabili.\n * @extends {FlavorBasicInfo}\n */\nexport class FlavorDTO extends FlavorBasicInfo {\n    name: string;\n    detailJson: {};\n    id: number | string;\n    uuid: string;\n    virtualizationEnvironmentType: VirtualizationEnvironmentTypeDTO;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"injectables/FlavorService.html":{"url":"injectables/FlavorService.html","title":"injectable - FlavorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FlavorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/api/flavor.service.ts\n        \n\n\n\n\n\n            \n    Indice\n    \n        \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getAllFlavor\n                            \n                            \n                                    Async\n                                getFlavorByID\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Costruttore\n        \n            \n                \n                    \nconstructor(http: HttpClient, tokenService: TokenService)\n                    \n                \n                        \n                            \n                                Definito in src/app/services/api/flavor.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parametri :\n                                    \n                                        \n                                            \n                                                Nome\n                                                    Tipo\n                                                Opzionale\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tokenService\n                                                  \n                                                        \n                                                                        TokenService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllFlavor\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllFlavor()\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/api/flavor.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getFlavorByID\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFlavorByID(id: number | string)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/api/flavor.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            number | string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { FlavorDTO } from '../modelsDTO/falvorDTO';\nimport { TokenService } from '../token/token.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FlavorService {\n\n  constructor(private http: HttpClient, private tokenService: TokenService) { }\n\n  async getAllFlavor(): Promise {\n\n    let link: string = environment.getAllFlavor;\n\n    const promise = await new Promise((resolve, reject) => {\n      this.http.get\n        (\n          link,\n          this.tokenService.getHttpgetOption()\n        )\n        .toPromise()\n        .then(\n          (res: FlavorDTO[]) => {\n            resolve(res);\n          }\n        )\n        .catch(\n          error => {\n            reject(error);\n          }\n        );\n    }\n    );\n    return promise;\n  }\n  \n  async getFlavorByID(id: number|string): Promise {\n\n    let link: string = environment.getAllFlavor+'/'+id;\n\n    const promise = await new Promise((resolve, reject) => {\n      this.http.get\n        (\n          link,\n          this.tokenService.getHttpgetOption()\n        )\n        .toPromise()\n        .then(\n          (res: FlavorDTO) => {\n            resolve(res);\n          }\n        )\n        .catch(\n          error => {\n            reject(error);\n          }\n        );\n    }\n    );\n    return promise;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/GenericParameterDTO.html":{"url":"classes/GenericParameterDTO.html","title":"class - GenericParameterDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  GenericParameterDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsDTO/moduleDTO.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano un parametro generico.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                default\n                            \n                            \n                                description\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        default\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:49\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PageableDTO, SortDTO } from './elementDTO';\nimport { NetworkDTO } from './networkDTO';\nimport { TheaterDTO } from './theaterDTO';\n\n/**\n * Classe che contiene gli attributi che indicano l'insieme dei moduli ritornati dal teatro.\n */\nexport class ModuleListDTO {\n    content: SimpleModuleDTO[]\n    pageable: PageableDTO\n    last: boolean\n    totalPages: string | number\n    totalElements: string | number\n    size: string | number\n    number: string | number\n    sort: SortDTO\n    numberOfElements: string | number\n    first: boolean\n    empty: boolean\n}\n\n/**\n * Classe che contiene gli attributi che indica il catalogo del tipo.\n */\nexport class TypesCatalogueDTO {\n    group: string\n    id: string | number\n    parentId: {}\n    value: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano la classificazione del modulo.\n */\nexport class ModuleClassificationDTO {\n    blueprintType: string\n    category: string\n    expectedInstanceType: string\n    id: string | number\n    mcClass: string\n    type: string\n    uuid: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano un parametro generico.\n */\nexport class GenericParameterDTO {\n    type: string\n    default: string\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano i parametri di configurazione di un modulto.\n */\nexport class ConfigurationTemplateDTO {\n    anchor_parameters: { [name: string]: GenericParameterDTO | string }\n    instance_parameters: { [name: string]: GenericParameterDTO }\n    structural_parameters: { [name: string]: GenericParameterDTO }\n    fixed_parameters: { [name: string]: GenericParameterDTO }\n    control_parameters: { [name: string]: GenericParameterDTO }\n    infrastructure_parameters: { [name: string]: GenericParameterDTO }\n    module: string\n    description: string\n    category: string\n    version: string | number\n    platform: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano la modalità di un modulo.\n */\nexport class ModuleModeDTO {\n    code: string\n    id: string | number\n    name: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano lo stato di un modulo.\n */\nexport class ModuleStatusDTO {\n    descriptionCode: string\n    id: string | number\n    name: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le statitistiche di un modulo.\n */\nexport class StatisticItemDTO {\n    error: string | number\n    updated: string | number\n    inserted: string | number\n}\n\n/**\n * Classe che contiene gli attributi che indicano il modulo (simple - in dipendenza del teatro).\n */\nexport class SimpleModuleDTO {\n    createdBy: string\n    createdDate: string\n    description: string\n    id: string | number\n    isLocked: boolean\n    lastModifiedBy: string\n    lastModifiedDate: string\n    lockAcquiredTimestamp: string\n    lockLastUserAcquiring: string\n    lockReleasedTimestamp: string\n    name: string\n    status: ModuleStatusDTO\n    type?: string | any\n    uuid: string\n    version: string | number\n}\n\n/**\n * Classe che contiene gli attributi che indicano il modulo (complex - ritorato da call appostita).\n * @extends {SimpleModuleDTO}\n */\nexport class ModuleDTO extends SimpleModuleDTO {\n    attachments: string[]\n    author: string\n    capabilities: { [name: string]: string }\n    catalog1: TypesCatalogueDTO\n    catalog2: TypesCatalogueDTO\n    catalog3: TypesCatalogueDTO\n    classification: ModuleClassificationDTO\n    configurationTemplate: ConfigurationTemplateDTO\n    detailProperties: {}\n    input: { [name: string]: string }\n    output: { [name: string]: string }\n    mode: ModuleModeDTO\n    statistics: { [name: string]: StatisticItemDTO | string | number }\n    tags: []\n}\n\n/**\n * Classe che contiene gli attributi che indicano le interfacce esposte da un modulo.\n */\nexport class ModuleNetworkInterfaceDTO {\n    id: string | number\n    label: string\n    module: ModuleDTO\n    network: NetworkDTO\n    nodeName: string\n    type: string\n    uuid: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le connessioni interfaccia-modulo.\n */\nexport class ConsumerInterfaceLinkDTO {\n    local_interface: string\n    module_instance: string\n    remote_interface: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà dell'istanza di un modulo all'interno del node_templates.\n */\nexport class ModuleInstancePropertiesDTO {\n    area: string\n    description: string\n    module: string\n    version: string | number\n    sequence: string | number\n    consumer_interfaces_link: ConsumerInterfaceLinkDTO[]\n}\n\n\n/**\n * Classe che contiene gli attributi che indicano l'area di appartenenza di un modulo (complex).\n */\nexport class AreaDTO {\n    id: string | number;\n    uuid: string;\n    name: string;\n    description: string;\n    theater: TheaterDTO;\n    deleted: boolean | string;\n}\n\n/**\n * Classe che contiene gli attributi che indicano l'area di appartenenza di un modulo (simple).\n */\nexport class SimpleAreaDTO {\n    area: string\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà dell'istanza di un teatro all'interno del node_templates.\n */\nexport class TheaterInstancePropertiesDTO {\n    mode: string\n    tags: TagTIP[]\n    areas: SimpleAreaDTO[]\n    author: string\n    version: string | number\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano un tag.\n */\nexport class TagTIP{\n    tag: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano in via generale le caratteristiche di un elemento che deve essere presente nel node_templates.\n */\nexport class ElementIntoTheaterDTO {  // goes into map in blueprint [name:string]: Module...\n    properties: ModuleInstancePropertiesDTO | TheaterInstancePropertiesDTO\n    type: string\n}\n\n\n/**\n * Classe che contiene gli attributi che indicano le caratteristiche di un teatro presente nel node_templates.\n */\nexport class ModuleInstanceDTO {\n    properties: ModuleInstancePropertiesDTO\n    type: string\n}\n/**\n * Classe che contiene gli attributi che indicano le caratteristiche di un modulo presente nel node_templates.\n */\nexport class TheaterInstanceDTO {\n    properties: TheaterInstancePropertiesDTO\n    type: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Componenti\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/home/home.component.ts\n\n\n\n    \n        Descrizione\n    \n    \n        Componente (pagina) che ha lo scopo di mostrare all'utente una landing tale per cui potrà scegliere di:\n\nCreare un teatro.\nCreare un modulo.\nVisualizzare un teatro.\nVisualizzare un modulo.\n\n\n    \n\n\n\n\n\n    Metadati\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                ./home.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                author\n                            \n                            \n                                    Protected\n                                branch\n                            \n                            \n                                    Protected\n                                COMPOSER\n                            \n                            \n                                    Opzionale\n                                data_input_template\n                            \n                            \n                                    Protected\n                                dataModal\n                            \n                            \n                                    Protected\n                                description\n                            \n                            \n                                    Protected\n                                fileJSON\n                            \n                            \n                                    Protected\n                                fileLoaded\n                            \n                            \n                                    Protected\n                                formElementComposer\n                            \n                            \n                                    Protected\n                                formElementModal\n                            \n                            \n                                    Protected\n                                formElementVisualizer\n                            \n                            \n                                    Protected\n                                id\n                            \n                            \n                                    Protected\n                                isModalActive\n                            \n                            \n                                    Protected\n                                Module\n                            \n                            \n                                    Protected\n                                name\n                            \n                            \n                                    Protected\n                                Theater\n                            \n                            \n                                    Protected\n                                type\n                            \n                            \n                                    Protected\n                                VISUALIZER\n                            \n                        \n                    \n                \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                buttonClick\n                            \n                            \n                                dataInputReturned\n                            \n                            \n                                    Async\n                                onFileSelected\n                            \n                            \n                                onReset\n                            \n                            \n                                onUpload\n                            \n                            \n                                startapplication\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Costruttore\n        \n            \n                \n                    \nconstructor(router: Router, fileService: FileService, storageService: StorageService)\n                    \n                \n                        \n                            \n                                Definito in src/app/pages/home/home.component.ts:173\n                            \n                        \n\n                \n                    \n                            Costruttore componente HomeComponent\n\n                            \n                                    Parametri :\n                                    \n                                        \n                                            \n                                                Nome\n                                                    Tipo\n                                                Opzionale\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fileService\n                                                  \n                                                        \n                                                                        FileService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        buttonClick\n                        \n                    \n                \n            \n            \n                \nbuttonClick(branch: ComposerVisualizerType, type: SubjectType)\n                \n            \n\n\n            \n                \n                    Definito in src/app/pages/home/home.component.ts:197\n                \n            \n\n\n            \n                \n                    Funzione richiamata al momento del click su una scelta.\nValorizza il branch (designer/visualize) e tipo (module/theater) scelto.\nSee {dataModal}\nSee {branch}\nSee {type}\nSee {isModalActive}\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    branch\n                                    \n                                                ComposerVisualizerType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    type\n                                    \n                                                SubjectType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataInputReturned\n                        \n                    \n                \n            \n            \n                \ndataInputReturned(val: DataInputReturned)\n                \n            \n\n\n            \n                \n                    Definito in src/app/pages/home/home.component.ts:225\n                \n            \n\n\n            \n                \n                    Funzione richiamata non appena la form è stata validata.\n\nSalva i dati di ritorno nelle opportune variabili.\nEsegue le operazioni per il routing degli elementi.\nSee {startapplication}\n\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                DataInputReturned\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onFileSelected\n                        \n                    \n                \n            \n            \n                \n                    \n                    onFileSelected(event: any)\n                \n            \n\n\n            \n                \n                    Definito in src/app/pages/home/home.component.ts:289\n                \n            \n\n\n            \n                \n                    Funzione richiamata quando si seleziona il file.\nRichiama il servizio di gestione dell'upload file e prende il risultato.\nSee {fileService}\nSee {fileJSON}\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onReset\n                        \n                    \n                \n            \n            \n                \nonReset(input)\n                \n            \n\n\n            \n                \n                    Definito in src/app/pages/home/home.component.ts:315\n                \n            \n\n\n            \n                \n                    Funzione richiamata quando si esegue un reset dei dati del file dato in input.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    input\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onUpload\n                        \n                    \n                \n            \n            \n                \nonUpload()\n                \n            \n\n\n            \n                \n                    Definito in src/app/pages/home/home.component.ts:306\n                \n            \n\n\n            \n                \n                    Funzione richiamata dopo aver aggiunto il file.\nSe corretto, esegue la funzione di route dell'elemento scelto.\nSee {startapplication}\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startapplication\n                        \n                    \n                \n            \n            \n                \nstartapplication()\n                \n            \n\n\n            \n                \n                    Definito in src/app/pages/home/home.component.ts:246\n                \n            \n\n\n            \n                \n                    Funzione richiamata non appena i hanno i dati valorizzati.\nSi occupa del redirezionamento per il branch scelto con passaggio di variabili nella route.\nSee {router}\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        author\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/pages/home/home.component.ts:45\n                        \n                    \n\n            \n                \n                    Variabile di supporto che conterrà l'autore il nome del modulo/teatro da costruire\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        branch\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ComposerVisualizerType\n\n                    \n                \n                    \n                        \n                                Definito in src/app/pages/home/home.component.ts:88\n                        \n                    \n\n            \n                \n                    Variabile che indica il tipo di operazione selezionata al momento\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        COMPOSER\n                        \n                    \n                \n            \n                \n                    \n                        Valore predefinito : ComposerVisualizerType.COMPOSER\n                    \n                \n                    \n                        \n                                Definito in src/app/pages/home/home.component.ts:63\n                        \n                    \n\n            \n                \n                    Variabile di supporto che indica il composer\nSee {ComposerVisualizerType}\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        data_input_template\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     TemplateRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('data_input_template')\n                        \n                    \n                \n                    \n                        \n                                Definito in src/app/pages/home/home.component.ts:53\n                        \n                    \n\n            \n                \n                    Variabile che indica l'elemento del DOM.\nIn particolare contiene le informmazioni del form da visualizzare per la creazione / visualizzazione.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        dataModal\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ModalItem\n\n                    \n                \n                    \n                        \n                                Definito in src/app/pages/home/home.component.ts:158\n                        \n                    \n\n            \n                \n                    Variabile che contiene l'isieme delle opzioni per la modale.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/pages/home/home.component.ts:40\n                        \n                    \n\n            \n                \n                    Variabile di supporto che conterrà la descrizione del modulo/teatro da costruire\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        fileJSON\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         any\n\n                    \n                \n                \n                    \n                        Valore predefinito : undefined\n                    \n                \n                    \n                        \n                                Definito in src/app/pages/home/home.component.ts:167\n                        \n                    \n\n            \n                \n                    Variabile che contiene i dati del file dato in input.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        fileLoaded\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                \n                    \n                        Valore predefinito : false\n                    \n                \n                    \n                        \n                                Definito in src/app/pages/home/home.component.ts:173\n                        \n                    \n\n            \n                \n                    Variabile che indica se e quando il file è stato caricato (correttamente).\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        formElementComposer\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         DataInputElement\n\n                    \n                \n                \n                    \n                        Valore predefinito : {\n    element: [\n      {\n        id: \"author\",\n        text: \"Author\",\n        type: \"text\",\n        required: true\n      },\n      {\n        id: \"name\",\n        text: \"Name\",\n        type: \"text\",\n        required: true\n      },\n      {\n        id: \"description\",\n        text: \"Description\",\n        type: \"textarea\",\n        required: true\n      },\n    ]\n  }\n                    \n                \n                    \n                        \n                                Definito in src/app/pages/home/home.component.ts:108\n                        \n                    \n\n            \n                \n                    Variabile che indica i tipi di input che devono esserci nel form al momento dell'inserimento della creazione di un modulo/teatro.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        formElementModal\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         DataInputElement\n\n                    \n                \n                    \n                        \n                                Definito in src/app/pages/home/home.component.ts:98\n                        \n                    \n\n            \n                \n                    Variabile che indica il tipo di form da visualizzare, una volta scelto.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        formElementVisualizer\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         DataInputElement\n\n                    \n                \n                \n                    \n                        Valore predefinito : {\n    element: [\n      {\n        id: \"id\",\n        text: \"Id\",\n        type: \"text\",\n        required: true,\n      },\n    ]\n  }\n                    \n                \n                    \n                        \n                                Definito in src/app/pages/home/home.component.ts:134\n                        \n                    \n\n            \n                \n                    Variabile che indica i tipi di input che devono esserci nel form al momento dell'inserimento della visualizzazione di un modulo/teatro.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/pages/home/home.component.ts:30\n                        \n                    \n\n            \n                \n                    Variabile di supporto che conterrà l'id del modulo/teatro da visualizzare\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        isModalActive\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                \n                    \n                        Valore predefinito : false\n                    \n                \n                    \n                        \n                                Definito in src/app/pages/home/home.component.ts:154\n                        \n                    \n\n            \n                \n                    Variabile utilizzata per lo stato show/hide della modal.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        Module\n                        \n                    \n                \n            \n                \n                    \n                        Valore predefinito : SubjectType.MODULE\n                    \n                \n                    \n                        \n                                Definito in src/app/pages/home/home.component.ts:73\n                        \n                    \n\n            \n                \n                    Variabile di supporto che indica il modulo\nSee {SubjectType}\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/pages/home/home.component.ts:35\n                        \n                    \n\n            \n                \n                    Variabile di supporto che conterrà il nome del modulo/teatro da costruire\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        Theater\n                        \n                    \n                \n            \n                \n                    \n                        Valore predefinito : SubjectType.THEATER\n                    \n                \n                    \n                        \n                                Definito in src/app/pages/home/home.component.ts:78\n                        \n                    \n\n            \n                \n                    Variabile di supporto che indica il teatro\nSee {SubjectType}\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         SubjectType\n\n                    \n                \n                    \n                        \n                                Definito in src/app/pages/home/home.component.ts:93\n                        \n                    \n\n            \n                \n                    Variabile che indica il tipo di elemento selezionata al momento\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        VISUALIZER\n                        \n                    \n                \n            \n                \n                    \n                        Valore predefinito : ComposerVisualizerType.VISUALIZER\n                    \n                \n                    \n                        \n                                Definito in src/app/pages/home/home.component.ts:68\n                        \n                    \n\n            \n                \n                    Variabile di supporto che indica il visualizer\nSee {ComposerVisualizerType}\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { DataInputElement, DataInputReturned } from 'src/app/components/data-input/dataInputType';\nimport { ModalItem } from 'src/app/components/modal/modalType';\nimport { SubjectType, ComposerVisualizerType, DataRouteComposer, DataRouteVisualizer } from 'src/app/models/appType';\nimport { FileService } from 'src/app/services/application/file/file.service';\nimport { StorageService } from 'src/app/services/application/storage/storage.service';\n\n/**\n * Componente (pagina) che ha lo scopo di mostrare all'utente una landing tale per cui potrà scegliere di:\n * - Creare un teatro.\n * - Creare un modulo.\n * - Visualizzare un teatro.\n * - Visualizzare un modulo.\n */\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.sass']\n})\nexport class HomeComponent {\n\n\n  // support var\n\n  /**\n   * Variabile di supporto che conterrà l'id del modulo/teatro da visualizzare\n   * @type {number}\n   */\n  protected id: number;\n  /**\n   * Variabile di supporto che conterrà il nome del modulo/teatro da costruire\n   * @type {string}\n   */\n  protected name: string;\n  /**\n   * Variabile di supporto che conterrà la descrizione del modulo/teatro da costruire\n   * @type {string}\n   */\n  protected description: string;\n  /**\n   * Variabile di supporto che conterrà l'autore il nome del modulo/teatro da costruire\n   * @type {string}\n   */\n  protected author: string;\n\n\n  /**\n   * Variabile che indica l'elemento del DOM.\n   * In particolare contiene le informmazioni del form da visualizzare per la creazione / visualizzazione.\n   * @type {TemplateRef}\n   */\n  @ViewChild('data_input_template') data_input_template?: TemplateRef;\n\n\n\n  //support var\n\n  /**\n   * Variabile di supporto che indica il composer \n   * @see {ComposerVisualizerType}\n   */\n  protected COMPOSER = ComposerVisualizerType.COMPOSER;\n  /**\n   * Variabile di supporto che indica il visualizer \n   * @see {ComposerVisualizerType}\n   */\n  protected VISUALIZER = ComposerVisualizerType.VISUALIZER;\n  /**\n    * Variabile di supporto che indica il modulo \n    * @see {SubjectType}\n    */\n  protected Module = SubjectType.MODULE;\n  /**\n    * Variabile di supporto che indica il teatro \n    * @see {SubjectType}\n    */\n  protected Theater = SubjectType.THEATER;\n\n\n\n  // state var\n\n  /**\n   * Variabile che indica il tipo di operazione selezionata al momento\n   * @type {ComposerVisualizerType}\n   */\n  protected branch: ComposerVisualizerType;\n    /**\n   * Variabile che indica il tipo di elemento selezionata al momento\n   * @type {SubjectType}\n   */\n  protected type: SubjectType;\n  /**\n   * Variabile che indica il tipo di form da visualizzare, una volta scelto.\n   * @type {DataInputElement} \n   */\n  protected formElementModal: DataInputElement;\n\n\n\n  // input conf\n\n  /**\n   * Variabile che indica i tipi di input che devono esserci nel form al momento dell'inserimento della creazione di un modulo/teatro.\n   * @type {DataInputElement}\n   */\n  protected formElementComposer: DataInputElement = {\n    element: [\n      {\n        id: \"author\",\n        text: \"Author\",\n        type: \"text\",\n        required: true\n      },\n      {\n        id: \"name\",\n        text: \"Name\",\n        type: \"text\",\n        required: true\n      },\n      {\n        id: \"description\",\n        text: \"Description\",\n        type: \"textarea\",\n        required: true\n      },\n    ]\n  };\n    /**\n   * Variabile che indica i tipi di input che devono esserci nel form al momento dell'inserimento della visualizzazione di un modulo/teatro.\n   * @type {DataInputElement}\n   */\n  protected formElementVisualizer: DataInputElement = {\n    element: [\n      {\n        id: \"id\",\n        text: \"Id\",\n        type: \"text\",\n        required: true,\n      },\n    ]\n  };\n\n\n\n  // modal conf\n\n  /**\n   * Variabile utilizzata per lo stato show/hide della modal.\n   * @type {boolean}\n   * @default {false}\n   */\n  protected isModalActive: boolean = false;\n  /**\n   * Variabile che contiene l'isieme delle opzioni per la modale.\n   */\n  protected dataModal: ModalItem;\n\n\n\n  // file var\n\n  /**\n   * Variabile che contiene i dati del file dato in input.\n   */\n  protected fileJSON: any = undefined;\n  /**\n   * Variabile che indica se e quando il file è stato caricato (correttamente).\n   * @type {boolean}\n   * @default {false}\n   */\n  protected fileLoaded: boolean = false;\n\n\n\n  /**\n   * Costruttore componente HomeComponent\n   * @param router \n   * @param fileService \n   * @param storageService \n   */\n  constructor(private router: Router, private fileService: FileService, private storageService: StorageService) {\n  }\n\n\n  /**\n   * Funzione richiamata al momento del click su una scelta.\n   * Valorizza il branch (designer/visualize) e tipo (module/theater) scelto.\n   * @param branch \n   * @param type \n   * @see {dataModal}\n   * @see {branch}\n   * @see {type}\n   * @see {isModalActive}\n   */\n  buttonClick(branch: ComposerVisualizerType, type: SubjectType): void {\n    this.branch = branch;\n    this.type = type;\n    let title: string = type + \" \" + branch;\n    if (branch === ComposerVisualizerType.COMPOSER) {\n      this.formElementModal = this.formElementComposer\n    }\n    else {\n      this.formElementModal = this.formElementVisualizer\n    }\n    this.dataModal = {\n      title: title,\n      template: this.data_input_template,\n      buttons: [],\n      backgroundColor: \"#0000005e\",\n      //f9fafb24\n    };\n    this.isModalActive = true;\n  }\n\n\n  /**\n   * Funzione richiamata non appena la form è stata validata.\n   * - Salva i dati di ritorno nelle opportune variabili.\n   * - Esegue le operazioni per il routing degli elementi.\n   * @param val \n   * @see {startapplication}\n   */\n  dataInputReturned(val: DataInputReturned) {\n    this.isModalActive = false;\n    if (!val || !val.isValid) return;\n    if (this.branch === ComposerVisualizerType.VISUALIZER) {\n      this.id = val.element[\"id\"].value\n    }\n    if (this.branch === ComposerVisualizerType.COMPOSER) {\n      this.name = val.element['name'].value;\n      this.description = val.element['description'].value;\n      this.author = val.element['author'].value;\n    }\n    this.startapplication();\n  }\n\n\n\n  /**\n   * Funzione richiamata non appena i hanno i dati valorizzati. \n   * Si occupa del redirezionamento per il branch scelto con passaggio di variabili nella route.\n   * @see {router}\n   */\n  startapplication() {\n    var state: DataRouteComposer | DataRouteVisualizer;\n    if (this.branch === ComposerVisualizerType.VISUALIZER) {\n      var id = this.id;\n      state = {\n        id: id as number,\n        type: this.type\n      };\n      this.router.navigateByUrl(\n        '/visualizer',\n        {\n          state\n        }\n      );\n    }\n    else if (this.branch === ComposerVisualizerType.COMPOSER) {\n      var name = this.name;\n      var description = this.description;\n      var author = this.author;\n      state = {\n        name: name as string,\n        description: description as string,\n        author: author as string,\n        type: this.type\n      };\n      this.router.navigateByUrl(\n        '/composer',\n        {\n          state\n        }\n      );\n    }\n  }\n\n\n\n  /**\n   * Funzione richiamata quando si seleziona il file.\n   * Richiama il servizio di gestione dell'upload file e prende il risultato.\n   * @param event \n   * @see {fileService}\n   * @see {fileJSON}\n   */\n  async onFileSelected(event: any) {\n    await this.fileService.onFileSelected(event)\n      .then((v) => {\n        this.fileJSON = v; this.fileLoaded = true;\n      })\n      .catch((e) => {\n        alert(e + \"\\n Make sure it ends with \\\" .\" + this.type.toLowerCase() + \".json \\\"\")\n      })\n  }\n\n\n\n  /**\n   * Funzione richiamata dopo aver aggiunto il file. \n   * Se corretto, esegue la funzione di route dell'elemento scelto.\n   * @see {startapplication}\n   */\n  onUpload() {\n    this.storageService.data = this.fileJSON;\n    this.startapplication();\n  }\n\n  /**\n   * Funzione richiamata quando si esegue un reset dei dati del file dato in input.\n   * @param input \n   */\n  onReset(input) {\n    input.value = \"\"\n    this.fileLoaded = false;\n    this.fileJSON = undefined;\n  }\n\n}\n\n    \n\n    \n        \n    \n\n    \n        \n            \n                 Cyber Range Theater and Module Visualization/Constructor \n            \n            \n                 Visual design orchestrator for infrastructured system \n            \n            \n\n                \n                    \n                         Designer \n                    \n                    \n                        \n                            Create Theater\n                        \n                        \n                            Create Module\n                        \n                    \n                \n\n                \n                    \n                         CyberRange\n                    \n                    \n                        \n                            Visualize Theater\n                        \n                        \n                            Visualize Module\n                        \n                    \n                \n\n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n        \n            \n                \n                    {{branch===COMPOSER?\"Create new \":\"Visualize \"}}{{type}}\n                \n            \n            \n                \n                    \n                    \n                \n            \n        \n        \n            \n                \n                    Design {{type}} from file\n                \n            \n            \n                \n                    \n                    Select File\n                    Upload\n                    Cancel\n                \n            \n        \n    \n\n    \n\n    \n                \n                    ./home.component.sass\n                \n                .component-div\n    display: flex\n    justify-content: center\n    height: 100%\n\n.bg-component\n    // background-image: linear-gradient(rgba(15, 19, 26, 0.7), #0f131a), url(/../assets/images/bg-images/bg-img-rpt-xy.png)\n    // background-size: contain\n    // background-repeat: round\n    // background-blend-mode: hard-light\n    // height: 100%\n    background-image: linear-gradient(rgba(15, 19, 26, 0.7), #0f131a), url(/../assets/images/bg-images/node-x.jpg)\n    background-size: cover\n    background-repeat: repeat-x\n    background-blend-mode: color-burn\n    height: 100%\n\n.box-color-1\n    margin: 1em\n    padding: 1em\n    border-width: 1em\n    border-radius: 1em\n    background-color: #dc3545\n\n.box-color-2\n    margin: 1em\n    padding: 1em\n    border-width: 1em\n    border-radius: 1em\n    background-color: #0d6fd0\n\n.font-size-05\n    font-size: calc(0.5rem + 2.7vw)\n    font-weight: 1.2em\n    color: #fff\n\n.zoom\n    transition: transform 0.2s // Animation\n.zoom:hover\n    transform: scale(1.5) // (150% zoom - Note: if the zoom is too large, it will go outside of the viewport)\n    -webkit-box-shadow: 0px 0px 39px 0px #000000\n    -moz-box-shadow: 0px 0px 39px 0px #000000\n    -o-box-shadow: 0px 0px 39px 0px #000000\n    box-shadow: 0px 0px 39px 0px #000000\n\n    \n\n    \n        \n        \n            \n                Legenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento html con direttive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                             Cyber Range Theater and Module Visualization/Constructor                                          Visual design orchestrator for infrastructured system                                                                                      Designer                                                                                             Create Theater                                                                            Create Module                                                                                                                         CyberRange                                                                                            Visualize Theater                                                                            Visualize Module                                                                                                                                                {{branch===COMPOSER?\"Create new \":\"Visualize \"}}{{type}}                                                                                                                                                                                            Design {{type}} from file                                                                                                Select File                    Upload                    Cancel                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ComposerComponent', 'selector': 'app-composer'},{'name': 'ControlTemplate', 'selector': ''},{'name': 'DataInputComponent', 'selector': 'app-data-input'},{'name': 'DataInputV2Component', 'selector': 'app-data-input-v2'},{'name': 'DataItemComponent', 'selector': 'app-window-item'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HostComponent', 'selector': ''},{'name': 'HowToUseComponent', 'selector': 'app-how-to-use'},{'name': 'MirroringModuleInstanceComponent', 'selector': ''},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavbarElementComponent', 'selector': 'app-navbar-element'},{'name': 'NetworkComponent', 'selector': ''},{'name': 'OffcanvasComponent', 'selector': 'app-offcanvas'},{'name': 'ReteModuleComposerComponent', 'selector': 'app-rete-module-composer'},{'name': 'ReteModuleVisualizerComponent', 'selector': 'app-rete-module-visualizer'},{'name': 'ReteTheaterComposerComponent', 'selector': 'app-rete-theater-composer'},{'name': 'ReteTheaterVisualizerComponent', 'selector': 'app-rete-theater-visualizer'},{'name': 'SubnetComponent', 'selector': ''},{'name': 'TabnavComponent', 'selector': 'app-tabnav'},{'name': 'TheaterInternalServiceModuleInstanceComponent', 'selector': ''},{'name': 'TheaterModuleInstanceComponent', 'selector': ''},{'name': 'UnderbarComponent', 'selector': 'app-underbar'},{'name': 'VisualizerComponent', 'selector': 'app-displayer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"components/HostComponent.html":{"url":"components/HostComponent.html","title":"component - HostComponent","body":"\n                   \n\n\n\n\n\n  Componenti\n  \n  HostComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/rete-settings/nodes/rete-nodes/host/host.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n            NodeComponent\n    \n\n\n\n\n    Metadati\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            NodeService\n                \n            \n\n\n\n            \n                styleUrls\n                ./host.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./host.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                HostIcon\n                            \n                            \n                                NodeType\n                            \n                            \n                                showInputOutlet\n                            \n                            \n                                showOutputOutlet\n                            \n                            \n                                showPorts\n                            \n                        \n                    \n                \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                showhidesocket\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Costruttore\n        \n            \n                \n                    \nconstructor(service: NodeService, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Definito in src/app/rete-settings/nodes/rete-nodes/host/host.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parametri :\n                                    \n                                        \n                                            \n                                                Nome\n                                                    Tipo\n                                                Opzionale\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                    NodeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        showhidesocket\n                        \n                    \n                \n            \n            \n                \nshowhidesocket()\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-nodes/host/host.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        HostIcon\n                        \n                    \n                \n            \n                \n                    \n                        Valore predefinito : HostIcon\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-nodes/host/host.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        NodeType\n                        \n                    \n                \n            \n                \n                    \n                        Valore predefinito : EnumNodeType\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-nodes/host/host.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showInputOutlet\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                \n                    \n                        Valore predefinito : false\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-nodes/host/host.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showOutputOutlet\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                \n                    \n                        Valore predefinito : true\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-nodes/host/host.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showPorts\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                \n                    \n                        Valore predefinito : true\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-nodes/host/host.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, ChangeDetectorRef, ChangeDetectionStrategy } from '@angular/core';\nimport { NodeComponent, NodeService } from 'rete-angular-render-plugin';\nimport { EnumNodeType } from 'src/app/models/appType';\nimport { HostIcon } from 'src/app/rete-settings/style/styleIconConfig';\n// import { EnumNodeType } from 'src/app/rete-settings/models/reteModelType';\n\n\n@Component({\n  templateUrl: './host.component.html',\n  styleUrls: ['./host.component.sass',],\n  providers: [NodeService],\n  changeDetection: ChangeDetectionStrategy.OnPush, // render più veloce.\n})\n\nexport class HostComponent extends NodeComponent {\n\n  showPorts: boolean = true;\n  showOutputOutlet: boolean = true;\n  showInputOutlet: boolean = false;\n  NodeType = EnumNodeType;\n  HostIcon = HostIcon;\n  \n  constructor(\n    protected service: NodeService,\n    protected cdr: ChangeDetectorRef) {\n    super(service, cdr);\n  }\n\n  showhidesocket() {\n    this.showPorts = !this.showPorts;\n  }\n  \n}\n\n    \n\n    \n        \n\n  \n    \n      \n        \n          {{ node.data.name === \"\" || node.data.name === undefined ? \"Assign name\" : node.data.name }}\n        \n      \n      \n        \n          \n          \n        \n      \n    \n   -->\n\n\n  \n  \n    \n      \n        \n          \n            \n              \n                 \n              \n              \n                \n                  {{\n                  (node.data.name && node.data.name!=='')\n                  ?node.data.name\n                  :NodeType.HOST\n                  }}\n                \n                \n                  {{\n                  (node.data.os && node.data.os!=='')\n                  ?\"os: \"+node.data.os\n                  :''\n                  }}\n                \n                \n                  \n                    {{\n                    (node.data.ram && node.data.ram!=='')\n                    ?\"ram (MB): \"+node.data.ram\n                    :''\n                    }}\n                  \n                  \n                    {{\n                    (node.data.disk && node.data.disk!=='')\n                    ?\"disk (MB): \"+node.data.disk\n                    :''\n                    }}\n                  \n                  \n                    {{\n                    (node.data.cpu && node.data.cpu!=='')\n                    ?\"cpu (#): \"+node.data.cpu\n                    :''\n                    }}\n                  \n                \n              \n            \n          \n        \n      \n    \n  \n\n\n  \n    \n      Button with data-bs-target\n    \n  \n  \n    \n      Some placeholder content for the collapse component. This panel is hidden by default but revealed when the user\n      activates the relevant trigger.\n    \n   -->\n\n\n  \n\n    \n    \n      \n        {{output.name}}\n        \n          \n          \n        \n      \n    \n\n\n     -->\n\n    \n    \n      \n        \n          \n          \n          \n        \n        {{input.name}}\n        \n      \n    \n\n  \n\n    \n\n    \n                \n                    ./host.component.sass\n                \n                @import \"../vars\"\n\n.node\n  background: $node-color\n  border: 2px solid #f124\n  border-radius: 10px\n  cursor: pointer\n  min-width: $node-width\n  height: auto\n  padding-bottom: 6px\n  box-sizing: content-box\n  position: relative\n  user-select: none\n  &:hover\n    background: lighten($node-color,4%)\n  &.selected\n    background: $node-color-selected\n    border-color: #ff0000\n  .title\n    color: $text-color\n    font-family: $font-fam\n    font-size: 18px\n    padding: 8px\n  .output\n    text-align: right\n    display: flex\n    justify-content: flex-end\n  .input\n    text-align: left\n    display: flex\n    justify-content: flex-start\n  .input-title,.output-title\n    vertical-align: middle\n    color: $text-color\n    display: inline-block\n    font-family: $font-fam\n    font-size: 14px\n    margin: $socket-margin\n    line-height: $socket-size\n    &[hidden]\n      display: none\n  .input-control\n    z-index: 1\n    width: calc(100% - #{$socket-size + 2*$socket-margin})\n    vertical-align: middle\n    display: inline-block\n  .control\n    padding: $socket-margin $socket-size/2 + $socket-margin\n\n    \n\n    \n        \n        \n            \n                Legenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento html con direttive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              {{ node.data.name === \"\" || node.data.name === undefined ? \"Assign name\" : node.data.name }}                                                                     -->                                                                                                                                         {{                  (node.data.name && node.data.name!==\\'\\')                  ?node.data.name                  :NodeType.HOST                  }}                                                  {{                  (node.data.os && node.data.os!==\\'\\')                  ?\"os: \"+node.data.os                  :\\'\\'                  }}                                                                      {{                    (node.data.ram && node.data.ram!==\\'\\')                    ?\"ram (MB): \"+node.data.ram                    :\\'\\'                    }}                                                        {{                    (node.data.disk && node.data.disk!==\\'\\')                    ?\"disk (MB): \"+node.data.disk                    :\\'\\'                    }}                                                        {{                    (node.data.cpu && node.data.cpu!==\\'\\')                    ?\"cpu (#): \"+node.data.cpu                    :\\'\\'                    }}                                                                                                      Button with data-bs-target                  Some placeholder content for the collapse component. This panel is hidden by default but revealed when the user      activates the relevant trigger.       -->                        {{output.name}}                                                   -->                                                                    {{input.name}}                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ComposerComponent', 'selector': 'app-composer'},{'name': 'ControlTemplate', 'selector': ''},{'name': 'DataInputComponent', 'selector': 'app-data-input'},{'name': 'DataInputV2Component', 'selector': 'app-data-input-v2'},{'name': 'DataItemComponent', 'selector': 'app-window-item'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HostComponent', 'selector': ''},{'name': 'HowToUseComponent', 'selector': 'app-how-to-use'},{'name': 'MirroringModuleInstanceComponent', 'selector': ''},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavbarElementComponent', 'selector': 'app-navbar-element'},{'name': 'NetworkComponent', 'selector': ''},{'name': 'OffcanvasComponent', 'selector': 'app-offcanvas'},{'name': 'ReteModuleComposerComponent', 'selector': 'app-rete-module-composer'},{'name': 'ReteModuleVisualizerComponent', 'selector': 'app-rete-module-visualizer'},{'name': 'ReteTheaterComposerComponent', 'selector': 'app-rete-theater-composer'},{'name': 'ReteTheaterVisualizerComponent', 'selector': 'app-rete-theater-visualizer'},{'name': 'SubnetComponent', 'selector': ''},{'name': 'TabnavComponent', 'selector': 'app-tabnav'},{'name': 'TheaterInternalServiceModuleInstanceComponent', 'selector': ''},{'name': 'TheaterModuleInstanceComponent', 'selector': ''},{'name': 'UnderbarComponent', 'selector': 'app-underbar'},{'name': 'VisualizerComponent', 'selector': 'app-displayer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HostComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/HostModuleDTO.html":{"url":"classes/HostModuleDTO.html","title":"class - HostModuleDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  HostModuleDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsDTO/hostDTO.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano gli host.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                hasQuery\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                ports\n                            \n                            \n                                uuid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        hasQuery\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/hostDTO.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/hostDTO.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/hostDTO.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ports\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     HostPortModuleDTO[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/hostDTO.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uuid\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/hostDTO.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { NetworkDTO, SubnetDTO } from \"./networkDTO\"\n\n/**\n * Classe che contiene gli attributi che indicano le porte degli host.\n */\nexport class HostPortModuleDTO {\n    id: string | number\n    name: string\n    networks: NetworkDTO[]\n    subnets: SubnetDTO[]\n}\n\n/**\n * Classe che contiene gli attributi che indicano gli host.\n */\nexport class HostModuleDTO {\n    hasQuery: boolean\n    id: string | number\n    name: string\n    ports: HostPortModuleDTO[]\n    uuid: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/HostNode.html":{"url":"classes/HostNode.html","title":"class - HostNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  HostNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/rete-settings/nodes/rete-nodes/host/hostNode.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che rappresenta il nodo (rete-node) Host all'interno del canvas/editor di rete.\n\n            \n\n            \n                Extends\n            \n            \n                        Component\n            \n\n            \n                Implementa\n            \n            \n                        AngularComponent\n            \n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                builder\n                            \n                            \n                                created\n                            \n                            \n                                createNewNode\n                            \n                            \n                                destroyed\n                            \n                            \n                                valorizeNode\n                            \n                            \n                                worker\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Costruttore\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Definito in src/app/rete-settings/nodes/rete-nodes/host/hostNode.ts:49\n                            \n                        \n\n                \n                    \n                            Costruttore di HostNode\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     AngularComponentData\n\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-nodes/host/hostNode.ts:49\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        builder\n                        \n                    \n                \n            \n            \n                \n                    \n                    builder(node: Node)\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-nodes/host/hostNode.ts:67\n                \n            \n\n\n            \n                \n                    Funzione richiamata in fase di costruzione del nodo (rete-node).\nControlla se bisogna instanziare il nodo oppure crearne uno nuovo:\n\nIn fase di design, il nodo non ha dati, per cui bisogna crearne uno nuovo.\nIn fase di visualizing, il nodo presenta dei dati, per cui va valorizzato il nodo.\n\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        created\n                        \n                    \n                \n            \n            \n                \ncreated(node: Node)\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-nodes/host/hostNode.ts:132\n                \n            \n\n\n            \n                \n                    Funzione richiamata una volta in nodo creato.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createNewNode\n                        \n                    \n                \n            \n            \n                \ncreateNewNode(node: Node)\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-nodes/host/hostNode.ts:80\n                \n            \n\n\n            \n                \n                    Funzione che ha come scopo creare un nodo (rete-node).\nIn particolare gli assegna una struttura vuota.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destroyed\n                        \n                    \n                \n            \n            \n                \ndestroyed(node: Node)\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-nodes/host/hostNode.ts:140\n                \n            \n\n\n            \n                \n                    Funzione richiamata una volta in nodo cancellato.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        valorizeNode\n                        \n                    \n                \n            \n            \n                \nvalorizeNode(node: Node)\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-nodes/host/hostNode.ts:94\n                \n            \n\n\n            \n                \n                    Funzione che ha come scopo la valorizzazione del nodo (rete-node) con i dati in suo possesso.\nIn quasta fase avviene anche la fase iniziale di instanziamento delle porte input/output.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        worker\n                        \n                    \n                \n            \n            \n                \nworker(node: NodeData, inputs: WorkerInputs, outputs: WorkerOutputs)\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-nodes/host/hostNode.ts:124\n                \n            \n\n\n            \n                \n                    Funzione richiamta per eseguire operazioni che conivolgono computazioni dei nodi.\nNon sono necessari in questa versione.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                            NodeData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    inputs\n                                    \n                                            WorkerInputs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    outputs\n                                    \n                                            WorkerOutputs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Component, Input, Output, Node } from 'rete';\nimport { _Socket } from '../../../sockets/socket';\nimport { _Control } from '../../../controls/control';\nimport { AngularComponent, AngularComponentData } from 'rete-angular-render-plugin';\nimport { HostComponent } from '../../../nodes/rete-nodes/host/host.component'\nimport { NodeData, WorkerInputs, WorkerOutputs } from 'rete/types/core/data';\nimport {  reteBasicNodeInfo } from '../../reteBasic';\nimport { EnumNodeType } from 'src/app/models/appType';\n\n/**\n * Classe utilizzata per indicare il tipo di modulo HostNode.\n * @see {reteBasicModuleInfo}\n */\nexport class ReteHostInfo extends reteBasicNodeInfo {\n  os: string;\n  flavorName: string;\n  cpu: number | string;\n  disk: number | string;\n  ram: number | string;\n  type: EnumNodeType.Host\n}\n\n/**\n * Funzione dichiarata in HostNode. \n * Essa ha lo scopo di generare una struttura dati empty.\n * Viene utilizzata in per instanziare un nodo del tipo di ritorno indicato senza dati.\n * @returns {ReteSubnetInfo}\n */\nexport function getEmptyHostInfo(): ReteHostInfo {\n  let x: ReteHostInfo = {\n    os: \"\",\n    Input: [],\n    Output: [],\n    name: \"\",\n    type: EnumNodeType.Host,\n    cpu: '',\n    disk: '',\n    ram: '',\n    flavorName: ''\n  };\n  return x;\n}\n\n/**\n * Classe che rappresenta il nodo (rete-node) Host all'interno del canvas/editor di rete.\n */\nexport class HostNode extends Component implements AngularComponent {\n\n  data: AngularComponentData;\n\n    /**\n   * Costruttore di HostNode\n   */\n  constructor() {\n    super(EnumNodeType.Host);\n    this.data.render = 'angular';\n    this.data.component = HostComponent;\n  }\n\n  /**\n   * Funzione richiamata in fase di costruzione del nodo (rete-node).\n   * Controlla se bisogna instanziare il nodo oppure crearne uno nuovo:\n   * - In fase di design, il nodo non ha dati, per cui bisogna crearne uno nuovo.\n   * - In fase di visualizing, il nodo presenta dei dati, per cui va valorizzato il nodo.\n   * @param node \n   */\n  async builder(node: Node) {\n    if (Object.keys(node.data).length === 0)\n      this.createNewNode(node)\n    else\n      this.valorizeNode(node)\n  }\n\n\n  /**\n   * Funzione che ha come scopo creare un nodo (rete-node).\n   * In particolare gli assegna una struttura vuota.\n   * @param node \n   */\n  createNewNode(node: Node) {\n    let t = getEmptyHostInfo()\n    node.data = {\n      ...node.data,\n      ...t\n    }\n  }\n\n\n  /**\n   * Funzione che ha come scopo la valorizzazione del nodo (rete-node) con i dati in suo possesso.\n   * In quasta fase avviene anche la fase iniziale di instanziamento delle porte input/output.\n   * @param node \n   */\n  valorizeNode(node: Node) {\n    var i: any = node.data['Input'];\n    var o: any = node.data['Output'];\n    var il = i.length;\n    var ol = o.length;\n\n    for (let index = 0; index \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/HostPortModuleDTO.html":{"url":"classes/HostPortModuleDTO.html","title":"class - HostPortModuleDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  HostPortModuleDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsDTO/hostDTO.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano le porte degli host.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                networks\n                            \n                            \n                                subnets\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/hostDTO.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/hostDTO.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        networks\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         NetworkDTO[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/hostDTO.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subnets\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         SubnetDTO[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/hostDTO.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { NetworkDTO, SubnetDTO } from \"./networkDTO\"\n\n/**\n * Classe che contiene gli attributi che indicano le porte degli host.\n */\nexport class HostPortModuleDTO {\n    id: string | number\n    name: string\n    networks: NetworkDTO[]\n    subnets: SubnetDTO[]\n}\n\n/**\n * Classe che contiene gli attributi che indicano gli host.\n */\nexport class HostModuleDTO {\n    hasQuery: boolean\n    id: string | number\n    name: string\n    ports: HostPortModuleDTO[]\n    uuid: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"components/HowToUseComponent.html":{"url":"components/HowToUseComponent.html","title":"component - HowToUseComponent","body":"\n                   \n\n\n\n\n\n  Componenti\n  \n  HowToUseComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/how-to-use/how-to-use.component.ts\n\n\n\n\n\n    \n        Implementa\n    \n    \n                    OnInit\n    \n\n\n\n    Metadati\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-how-to-use\n            \n\n            \n                styleUrls\n                ./how-to-use.component.css\n            \n\n\n\n            \n                templateUrl\n                ./how-to-use.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Indice\n    \n        \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Costruttore\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Definito in src/app/pages/how-to-use/how-to-use.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Definito in src/app/pages/how-to-use/how-to-use.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-how-to-use',\n  templateUrl: './how-to-use.component.html',\n  styleUrls: ['./how-to-use.component.css']\n})\nexport class HowToUseComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n\n\n    \n\n    \n                \n                    ./how-to-use.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento html con direttive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ComposerComponent', 'selector': 'app-composer'},{'name': 'ControlTemplate', 'selector': ''},{'name': 'DataInputComponent', 'selector': 'app-data-input'},{'name': 'DataInputV2Component', 'selector': 'app-data-input-v2'},{'name': 'DataItemComponent', 'selector': 'app-window-item'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HostComponent', 'selector': ''},{'name': 'HowToUseComponent', 'selector': 'app-how-to-use'},{'name': 'MirroringModuleInstanceComponent', 'selector': ''},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavbarElementComponent', 'selector': 'app-navbar-element'},{'name': 'NetworkComponent', 'selector': ''},{'name': 'OffcanvasComponent', 'selector': 'app-offcanvas'},{'name': 'ReteModuleComposerComponent', 'selector': 'app-rete-module-composer'},{'name': 'ReteModuleVisualizerComponent', 'selector': 'app-rete-module-visualizer'},{'name': 'ReteTheaterComposerComponent', 'selector': 'app-rete-theater-composer'},{'name': 'ReteTheaterVisualizerComponent', 'selector': 'app-rete-theater-visualizer'},{'name': 'SubnetComponent', 'selector': ''},{'name': 'TabnavComponent', 'selector': 'app-tabnav'},{'name': 'TheaterInternalServiceModuleInstanceComponent', 'selector': ''},{'name': 'TheaterModuleInstanceComponent', 'selector': ''},{'name': 'UnderbarComponent', 'selector': 'app-underbar'},{'name': 'VisualizerComponent', 'selector': 'app-displayer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HowToUseComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/InterfaceConstraints.html":{"url":"classes/InterfaceConstraints.html","title":"class - InterfaceConstraints","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  InterfaceConstraints\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsExport/moduleExport.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano i viconli per le interfacce di connessione del modulo.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                compatibility\n                            \n                            \n                                local_interface\n                            \n                            \n                                module_name\n                            \n                            \n                                multiple_mode\n                            \n                            \n                                remote_interface\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        compatibility\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                \n                    \n                        Valore predefinito : \"1.0\"\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        local_interface\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        module_name\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        multiple_mode\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                \n                    \n                        Valore predefinito : false\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remote_interface\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:56\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ModeTypeExport, ModuleTypeExport, NetworkTypeExport, NodeTypeExport, PortTypeExport, RelationshipsTypeExport, SubnetTypeExport, ToscaDefinitionType } from \"./TypeExport\"\n\n\n/**\n * Classe utilizzata per l'export. \n * Contiene le informazioni generali per il modulo che devono esserci nello standard Tosca.\n */\nexport class ModuleExport {\n    tosca_definitions_version: ToscaDefinitionType\n    description: string\n    imports: string[]\n    node_templates: { [name: string]: ModuleSimpleData | NodeSimpleData | PortSimpleData | NetworkSimpleData | SubnetSimpleData }\n    dsl_definition: any | null; //future\n    capabilites: any | null //future\n    outputs: any | null //future\n}\n\n/**\n * Classe che contiene gli attributi che indicano la rappresentazione del modulo per l'export.\n */\nexport class ModuleSimpleData {\n    type: ModuleTypeExport\n    properties: PropertiesMSD\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà del modulo per l'export.\n */\nexport class PropertiesMSD {\n    mode: ModeTypeExport\n    description: string\n    version: string | number\n    constraints: ConstraintsMSD\n    interface_networks: {\n        providers: InterfaceNetworksProvider[]\n        consumers: InterfaceNetworksConsumer[]\n    }\n    virtual_machines: VirtualMachine[]\n}\n/**\n * Classe che contiene gli attributi che indicano i vincoli di connessione del modulo per l'export.\n */\nexport class ConstraintsMSD {\n    interface_constraints: InterfaceConstraints[]\n    module_constraints: ModuleConstraints[]\n    network_constraints: NetworkConstraints[]\n}\n/**\n * Classe che contiene gli attributi che indicano i viconli per le interfacce di connessione del modulo.\n */\nexport class InterfaceConstraints {\n    local_interface: string\n    multiple_mode: boolean = false //future\n    module_name: string\n    compatibility: string = \"1.0\" // future\n    remote_interface: string\n}\n/**\n * Classe che contiene gli attributi che indicano i viconli del modulo.\n */\nexport class ModuleConstraints {\n}\n/**\n * Classe che contiene gli attributi che indicano i viconli dei network del modulo.\n */\nexport class NetworkConstraints {\n}\n/**\n * Classe che contiene gli attributi che indicano le interfacce provider del modulo.\n */\nexport class InterfaceNetworksProvider {\n    interface: string\n    network: string\n    tag: string\n    subnets: SubnetExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano le interfacce consumer del modulo.\n */\nexport class InterfaceNetworksConsumer {\n    interface: string\n    network: string\n    tag: string\n    subnets: SubnetExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano l'insieme di host presenti in un modulo.\n */\nexport class VirtualMachine {\n    virtual_machine: string\n    ports: VirtualMachinePorts[]\n}\n/**\n * Classe che contiene gli attributi che indicano le porte associate ad un host di un modulo.\n */\nexport class VirtualMachinePorts {\n    port: string\n    network: string\n    subnets: SubnetExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano la subnet connessa alla porte dell'host.\n * @see {VirtualMachinePorts}\n */\nexport class SubnetExport {\n    subnet: string;\n}\n\n/**\n * Classe che contiene gli attributi che indica un nodo all'interno dei node_templates.\n * @see {ModuleExport}\n */\nexport class NodeSimpleData {\n    type: NodeTypeExport\n    properties: any | null // future\n    interfaces: any | null // future\n    relationships: RelationshipsExport[]\n}\n\n/**\n * Classe che contiene gli attributi che indicano le relazioni generali.\n */\nexport class RelationshipsExport {\n    type: RelationshipsTypeExport\n    target: string\n}\n/**\n * Classe che contiene gli attributi che indicano i dati della porta all'interno dei node_templates.\n */\nexport class PortSimpleData {\n    type: PortTypeExport\n    relationships: RelationshipsExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano i dati delle network all'interno dei node_templates.\n */\nexport class NetworkSimpleData {\n    type: NetworkTypeExport\n    properties: PropertiesNSD\n}\n/**\n * Classe che contiene gli attributi che indicano le proprietà della network all'interno dei node_templates.\n * @see {NetworkSimpleData}\n */\nexport class PropertiesNSD {\n    openstack_config?: any | null // future\n    use_external_resource?: boolean | null // future\n    resource_id?: any | null // future\n}\n\n/**\n * Classe che contiene gli attributi che indicano i dati delle subnet all'interno dei node_templates.\n */\nexport class SubnetSimpleData {\n    type: SubnetTypeExport\n    relationships: RelationshipsExport[]\n    properties: PropertiesSSD\n}\n/**\n * Classe che contiene gli attributi che indicano le proprietà della subnet all'interno dei node_templates.\n * @see {NetworkSimpleData}\n */\nexport class PropertiesSSD {\n    subnet?: {\n        ip_version: string | number\n        cidr: string\n        enable_dhcp: boolean\n        gateway_ip?: any | null // future\n    }\n    openstack_config?: any | null // future\n    use_external_resource?: boolean | null // future\n    resource_id?: any | null // future\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/InterfaceNetworksConsumer.html":{"url":"classes/InterfaceNetworksConsumer.html","title":"class - InterfaceNetworksConsumer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  InterfaceNetworksConsumer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsExport/moduleExport.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano le interfacce consumer del modulo.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                interface\n                            \n                            \n                                network\n                            \n                            \n                                subnets\n                            \n                            \n                                tag\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        interface\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        network\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subnets\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         SubnetExport[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:84\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tag\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:83\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ModeTypeExport, ModuleTypeExport, NetworkTypeExport, NodeTypeExport, PortTypeExport, RelationshipsTypeExport, SubnetTypeExport, ToscaDefinitionType } from \"./TypeExport\"\n\n\n/**\n * Classe utilizzata per l'export. \n * Contiene le informazioni generali per il modulo che devono esserci nello standard Tosca.\n */\nexport class ModuleExport {\n    tosca_definitions_version: ToscaDefinitionType\n    description: string\n    imports: string[]\n    node_templates: { [name: string]: ModuleSimpleData | NodeSimpleData | PortSimpleData | NetworkSimpleData | SubnetSimpleData }\n    dsl_definition: any | null; //future\n    capabilites: any | null //future\n    outputs: any | null //future\n}\n\n/**\n * Classe che contiene gli attributi che indicano la rappresentazione del modulo per l'export.\n */\nexport class ModuleSimpleData {\n    type: ModuleTypeExport\n    properties: PropertiesMSD\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà del modulo per l'export.\n */\nexport class PropertiesMSD {\n    mode: ModeTypeExport\n    description: string\n    version: string | number\n    constraints: ConstraintsMSD\n    interface_networks: {\n        providers: InterfaceNetworksProvider[]\n        consumers: InterfaceNetworksConsumer[]\n    }\n    virtual_machines: VirtualMachine[]\n}\n/**\n * Classe che contiene gli attributi che indicano i vincoli di connessione del modulo per l'export.\n */\nexport class ConstraintsMSD {\n    interface_constraints: InterfaceConstraints[]\n    module_constraints: ModuleConstraints[]\n    network_constraints: NetworkConstraints[]\n}\n/**\n * Classe che contiene gli attributi che indicano i viconli per le interfacce di connessione del modulo.\n */\nexport class InterfaceConstraints {\n    local_interface: string\n    multiple_mode: boolean = false //future\n    module_name: string\n    compatibility: string = \"1.0\" // future\n    remote_interface: string\n}\n/**\n * Classe che contiene gli attributi che indicano i viconli del modulo.\n */\nexport class ModuleConstraints {\n}\n/**\n * Classe che contiene gli attributi che indicano i viconli dei network del modulo.\n */\nexport class NetworkConstraints {\n}\n/**\n * Classe che contiene gli attributi che indicano le interfacce provider del modulo.\n */\nexport class InterfaceNetworksProvider {\n    interface: string\n    network: string\n    tag: string\n    subnets: SubnetExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano le interfacce consumer del modulo.\n */\nexport class InterfaceNetworksConsumer {\n    interface: string\n    network: string\n    tag: string\n    subnets: SubnetExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano l'insieme di host presenti in un modulo.\n */\nexport class VirtualMachine {\n    virtual_machine: string\n    ports: VirtualMachinePorts[]\n}\n/**\n * Classe che contiene gli attributi che indicano le porte associate ad un host di un modulo.\n */\nexport class VirtualMachinePorts {\n    port: string\n    network: string\n    subnets: SubnetExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano la subnet connessa alla porte dell'host.\n * @see {VirtualMachinePorts}\n */\nexport class SubnetExport {\n    subnet: string;\n}\n\n/**\n * Classe che contiene gli attributi che indica un nodo all'interno dei node_templates.\n * @see {ModuleExport}\n */\nexport class NodeSimpleData {\n    type: NodeTypeExport\n    properties: any | null // future\n    interfaces: any | null // future\n    relationships: RelationshipsExport[]\n}\n\n/**\n * Classe che contiene gli attributi che indicano le relazioni generali.\n */\nexport class RelationshipsExport {\n    type: RelationshipsTypeExport\n    target: string\n}\n/**\n * Classe che contiene gli attributi che indicano i dati della porta all'interno dei node_templates.\n */\nexport class PortSimpleData {\n    type: PortTypeExport\n    relationships: RelationshipsExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano i dati delle network all'interno dei node_templates.\n */\nexport class NetworkSimpleData {\n    type: NetworkTypeExport\n    properties: PropertiesNSD\n}\n/**\n * Classe che contiene gli attributi che indicano le proprietà della network all'interno dei node_templates.\n * @see {NetworkSimpleData}\n */\nexport class PropertiesNSD {\n    openstack_config?: any | null // future\n    use_external_resource?: boolean | null // future\n    resource_id?: any | null // future\n}\n\n/**\n * Classe che contiene gli attributi che indicano i dati delle subnet all'interno dei node_templates.\n */\nexport class SubnetSimpleData {\n    type: SubnetTypeExport\n    relationships: RelationshipsExport[]\n    properties: PropertiesSSD\n}\n/**\n * Classe che contiene gli attributi che indicano le proprietà della subnet all'interno dei node_templates.\n * @see {NetworkSimpleData}\n */\nexport class PropertiesSSD {\n    subnet?: {\n        ip_version: string | number\n        cidr: string\n        enable_dhcp: boolean\n        gateway_ip?: any | null // future\n    }\n    openstack_config?: any | null // future\n    use_external_resource?: boolean | null // future\n    resource_id?: any | null // future\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/InterfaceNetworksProvider.html":{"url":"classes/InterfaceNetworksProvider.html","title":"class - InterfaceNetworksProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  InterfaceNetworksProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsExport/moduleExport.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano le interfacce provider del modulo.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                interface\n                            \n                            \n                                network\n                            \n                            \n                                subnets\n                            \n                            \n                                tag\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        interface\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        network\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subnets\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         SubnetExport[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tag\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:74\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ModeTypeExport, ModuleTypeExport, NetworkTypeExport, NodeTypeExport, PortTypeExport, RelationshipsTypeExport, SubnetTypeExport, ToscaDefinitionType } from \"./TypeExport\"\n\n\n/**\n * Classe utilizzata per l'export. \n * Contiene le informazioni generali per il modulo che devono esserci nello standard Tosca.\n */\nexport class ModuleExport {\n    tosca_definitions_version: ToscaDefinitionType\n    description: string\n    imports: string[]\n    node_templates: { [name: string]: ModuleSimpleData | NodeSimpleData | PortSimpleData | NetworkSimpleData | SubnetSimpleData }\n    dsl_definition: any | null; //future\n    capabilites: any | null //future\n    outputs: any | null //future\n}\n\n/**\n * Classe che contiene gli attributi che indicano la rappresentazione del modulo per l'export.\n */\nexport class ModuleSimpleData {\n    type: ModuleTypeExport\n    properties: PropertiesMSD\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà del modulo per l'export.\n */\nexport class PropertiesMSD {\n    mode: ModeTypeExport\n    description: string\n    version: string | number\n    constraints: ConstraintsMSD\n    interface_networks: {\n        providers: InterfaceNetworksProvider[]\n        consumers: InterfaceNetworksConsumer[]\n    }\n    virtual_machines: VirtualMachine[]\n}\n/**\n * Classe che contiene gli attributi che indicano i vincoli di connessione del modulo per l'export.\n */\nexport class ConstraintsMSD {\n    interface_constraints: InterfaceConstraints[]\n    module_constraints: ModuleConstraints[]\n    network_constraints: NetworkConstraints[]\n}\n/**\n * Classe che contiene gli attributi che indicano i viconli per le interfacce di connessione del modulo.\n */\nexport class InterfaceConstraints {\n    local_interface: string\n    multiple_mode: boolean = false //future\n    module_name: string\n    compatibility: string = \"1.0\" // future\n    remote_interface: string\n}\n/**\n * Classe che contiene gli attributi che indicano i viconli del modulo.\n */\nexport class ModuleConstraints {\n}\n/**\n * Classe che contiene gli attributi che indicano i viconli dei network del modulo.\n */\nexport class NetworkConstraints {\n}\n/**\n * Classe che contiene gli attributi che indicano le interfacce provider del modulo.\n */\nexport class InterfaceNetworksProvider {\n    interface: string\n    network: string\n    tag: string\n    subnets: SubnetExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano le interfacce consumer del modulo.\n */\nexport class InterfaceNetworksConsumer {\n    interface: string\n    network: string\n    tag: string\n    subnets: SubnetExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano l'insieme di host presenti in un modulo.\n */\nexport class VirtualMachine {\n    virtual_machine: string\n    ports: VirtualMachinePorts[]\n}\n/**\n * Classe che contiene gli attributi che indicano le porte associate ad un host di un modulo.\n */\nexport class VirtualMachinePorts {\n    port: string\n    network: string\n    subnets: SubnetExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano la subnet connessa alla porte dell'host.\n * @see {VirtualMachinePorts}\n */\nexport class SubnetExport {\n    subnet: string;\n}\n\n/**\n * Classe che contiene gli attributi che indica un nodo all'interno dei node_templates.\n * @see {ModuleExport}\n */\nexport class NodeSimpleData {\n    type: NodeTypeExport\n    properties: any | null // future\n    interfaces: any | null // future\n    relationships: RelationshipsExport[]\n}\n\n/**\n * Classe che contiene gli attributi che indicano le relazioni generali.\n */\nexport class RelationshipsExport {\n    type: RelationshipsTypeExport\n    target: string\n}\n/**\n * Classe che contiene gli attributi che indicano i dati della porta all'interno dei node_templates.\n */\nexport class PortSimpleData {\n    type: PortTypeExport\n    relationships: RelationshipsExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano i dati delle network all'interno dei node_templates.\n */\nexport class NetworkSimpleData {\n    type: NetworkTypeExport\n    properties: PropertiesNSD\n}\n/**\n * Classe che contiene gli attributi che indicano le proprietà della network all'interno dei node_templates.\n * @see {NetworkSimpleData}\n */\nexport class PropertiesNSD {\n    openstack_config?: any | null // future\n    use_external_resource?: boolean | null // future\n    resource_id?: any | null // future\n}\n\n/**\n * Classe che contiene gli attributi che indicano i dati delle subnet all'interno dei node_templates.\n */\nexport class SubnetSimpleData {\n    type: SubnetTypeExport\n    relationships: RelationshipsExport[]\n    properties: PropertiesSSD\n}\n/**\n * Classe che contiene gli attributi che indicano le proprietà della subnet all'interno dei node_templates.\n * @see {NetworkSimpleData}\n */\nexport class PropertiesSSD {\n    subnet?: {\n        ip_version: string | number\n        cidr: string\n        enable_dhcp: boolean\n        gateway_ip?: any | null // future\n    }\n    openstack_config?: any | null // future\n    use_external_resource?: boolean | null // future\n    resource_id?: any | null // future\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"components/MirroringModuleInstanceComponent.html":{"url":"components/MirroringModuleInstanceComponent.html","title":"component - MirroringModuleInstanceComponent","body":"\n                   \n\n\n\n\n\n  Componenti\n  \n  MirroringModuleInstanceComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/rete-settings/nodes/rete-modules/mirroringModuleInstance/mirroringModuleInstance.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n            NodeComponent\n    \n\n\n\n\n    Metadati\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            NodeService\n                \n            \n\n\n\n            \n                styleUrls\n                ./mirroringModuleInstance.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./mirroringModuleInstance.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                HostIcon\n                            \n                            \n                                MirroringModuleInstanceIcon\n                            \n                            \n                                ModuleType\n                            \n                            \n                                NetworkIcon\n                            \n                            \n                                showFooter\n                            \n                            \n                                showInputOutlet\n                            \n                            \n                                showOutputOutlet\n                            \n                            \n                                showPorts\n                            \n                            \n                                SubnetIcon\n                            \n                        \n                    \n                \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                showhidesocket\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Costruttore\n        \n            \n                \n                    \nconstructor(service: NodeService, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Definito in src/app/rete-settings/nodes/rete-modules/mirroringModuleInstance/mirroringModuleInstance.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parametri :\n                                    \n                                        \n                                            \n                                                Nome\n                                                    Tipo\n                                                Opzionale\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                    NodeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        showhidesocket\n                        \n                    \n                \n            \n            \n                \nshowhidesocket()\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-modules/mirroringModuleInstance/mirroringModuleInstance.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        HostIcon\n                        \n                    \n                \n            \n                \n                    \n                        Valore predefinito : HostIcon\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-modules/mirroringModuleInstance/mirroringModuleInstance.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MirroringModuleInstanceIcon\n                        \n                    \n                \n            \n                \n                    \n                        Valore predefinito : MirroringModuleInstance_ICON\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-modules/mirroringModuleInstance/mirroringModuleInstance.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ModuleType\n                        \n                    \n                \n            \n                \n                    \n                        Valore predefinito : EnumModuleType\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-modules/mirroringModuleInstance/mirroringModuleInstance.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        NetworkIcon\n                        \n                    \n                \n            \n                \n                    \n                        Valore predefinito : NetworkIcon\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-modules/mirroringModuleInstance/mirroringModuleInstance.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showFooter\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                \n                    \n                        Valore predefinito : true\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-modules/mirroringModuleInstance/mirroringModuleInstance.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showInputOutlet\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                \n                    \n                        Valore predefinito : true\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-modules/mirroringModuleInstance/mirroringModuleInstance.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showOutputOutlet\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                \n                    \n                        Valore predefinito : true\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-modules/mirroringModuleInstance/mirroringModuleInstance.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showPorts\n                        \n                    \n                \n            \n                \n                    \n                        Valore predefinito : true\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-modules/mirroringModuleInstance/mirroringModuleInstance.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SubnetIcon\n                        \n                    \n                \n            \n                \n                    \n                        Valore predefinito : SubnetIcon\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-modules/mirroringModuleInstance/mirroringModuleInstance.component.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, ChangeDetectorRef, ChangeDetectionStrategy } from '@angular/core';\nimport { NodeComponent, NodeService } from 'rete-angular-render-plugin';\nimport { EnumModuleType } from 'src/app/models/appType';\nimport { MirroringModuleInstance_ICON, SubnetIcon, NetworkIcon, HostIcon } from 'src/app/rete-settings/style/styleIconConfig';\n// import { EnumModuleType } from 'src/app/rete-settings/models/reteModelType';\n\n\n@Component({\n  templateUrl: './mirroringModuleInstance.component.html',\n  styleUrls: ['./mirroringModuleInstance.component.sass',],\n  providers: [NodeService],\n  changeDetection: ChangeDetectionStrategy.OnPush, // render più veloce.\n})\n\nexport class MirroringModuleInstanceComponent extends NodeComponent {\n\n  showPorts = true;\n  showOutputOutlet: boolean = true;\n  showInputOutlet: boolean = true;\n  showFooter: boolean = true;\n  \n  MirroringModuleInstanceIcon = MirroringModuleInstance_ICON;\n  ModuleType = EnumModuleType;\n  SubnetIcon=SubnetIcon;\n  NetworkIcon=NetworkIcon;\n  HostIcon=HostIcon;\n\n  constructor(\n    protected service: NodeService,\n    protected cdr: ChangeDetectorRef) {\n    super(service, cdr);\n  }\n\n  showhidesocket() {\n    this.showPorts = !this.showPorts;    \n  }\n  \n}\n\n    \n\n    \n        \n\n  \n    \n      \n        \n          {{ node.data.name === \"\" || node.data.name === undefined ? \"Assign name\" : node.data.name }}\n        \n      \n      \n        \n          \n          \n        \n      \n    \n   -->\n\n\n  \n  \n    \n      \n        \n          \n            \n              \n                 \n              \n              \n                \n                  {{\n                  (node.data.name && node.data.name!=='')\n                  ?node.data.name\n                  :ModuleType.MirroringModuleInstance\n                  }}\n                \n                \n                  {{\n                  (node.data.area && node.data.area!=='')\n                  ?\"area: \"+node.data.area\n                  :''\n                  }}\n                \n                \n                  {{\n                  (node.data.version && node.data.version!=='')\n                  ?\"version: \"+node.data.version\n                  :''\n                  }}\n                \n              \n            \n          \n        \n      \n    \n  \n\n\n  \n    \n      Button with data-bs-target\n    \n  \n  \n    \n      Some placeholder content for the collapse component. This panel is hidden by default but revealed when the user\n      activates the relevant trigger.\n    \n   -->\n\n\n  \n\n    \n    \n      \n        {{output.name}}\n        \n          \n          P\n          \n        \n      \n    \n\n\n     -->\n\n    \n    \n      \n        \n          \n          \n          C\n          \n        \n        {{input.name}}\n        \n      \n    \n\n  \n\n\n\n  \n  \n    \n\n      \n        \n        {{\n        node.data.host_number\n        ?node.data.host_number\n        :0\n        }}\n      \n\n      \n        \n        {{\n        node.data.subnet_number\n        ?node.data.subnet_number\n        :0\n        }}\n      \n\n      \n        \n        {{\n        node.data.network_number\n        ?node.data.network_number\n        :0\n        }}\n      \n\n    \n  \n\n\n\n    \n\n    \n                \n                    ./mirroringModuleInstance.component.sass\n                \n                @import \"../vars\"\n\n.node\n  background: $node-color\n  border: 2px solid #f124\n  border-radius: 10px\n  cursor: pointer\n  min-width: $node-width\n  height: auto\n  padding-bottom: 6px\n  box-sizing: content-box\n  position: relative\n  user-select: none\n  &:hover\n    background: lighten($node-color,4%)\n  &.selected\n    background: $node-color-selected\n    border-color: #ff0000\n  .title\n    color: $text-color\n    font-family: $font-fam\n    font-size: 18px\n    padding: 8px\n  .output\n    text-align: right\n    display: flex\n    justify-content: flex-end\n  .input\n    text-align: left\n    display: flex\n    justify-content: flex-start\n  .input-title,.output-title\n    vertical-align: middle\n    color: $text-color\n    display: inline-block\n    font-family: $font-fam\n    font-size: 14px\n    margin: $socket-margin\n    line-height: $socket-size\n    &[hidden]\n      display: none\n  .input-control\n    z-index: 1\n    width: calc(100% - #{$socket-size + 2*$socket-margin})\n    vertical-align: middle\n    display: inline-block\n  .control\n    padding: $socket-margin $socket-size/2 + $socket-margin\n\n    \n\n    \n        \n        \n            \n                Legenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento html con direttive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              {{ node.data.name === \"\" || node.data.name === undefined ? \"Assign name\" : node.data.name }}                                                                     -->                                                                                                                                         {{                  (node.data.name && node.data.name!==\\'\\')                  ?node.data.name                  :ModuleType.MirroringModuleInstance                  }}                                                  {{                  (node.data.area && node.data.area!==\\'\\')                  ?\"area: \"+node.data.area                  :\\'\\'                  }}                                                  {{                  (node.data.version && node.data.version!==\\'\\')                  ?\"version: \"+node.data.version                  :\\'\\'                  }}                                                                                    Button with data-bs-target                  Some placeholder content for the collapse component. This panel is hidden by default but revealed when the user      activates the relevant trigger.       -->                        {{output.name}}                            P                                 -->                                                    C                          {{input.name}}                                                  {{        node.data.host_number        ?node.data.host_number        :0        }}                            {{        node.data.subnet_number        ?node.data.subnet_number        :0        }}                            {{        node.data.network_number        ?node.data.network_number        :0        }}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ComposerComponent', 'selector': 'app-composer'},{'name': 'ControlTemplate', 'selector': ''},{'name': 'DataInputComponent', 'selector': 'app-data-input'},{'name': 'DataInputV2Component', 'selector': 'app-data-input-v2'},{'name': 'DataItemComponent', 'selector': 'app-window-item'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HostComponent', 'selector': ''},{'name': 'HowToUseComponent', 'selector': 'app-how-to-use'},{'name': 'MirroringModuleInstanceComponent', 'selector': ''},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavbarElementComponent', 'selector': 'app-navbar-element'},{'name': 'NetworkComponent', 'selector': ''},{'name': 'OffcanvasComponent', 'selector': 'app-offcanvas'},{'name': 'ReteModuleComposerComponent', 'selector': 'app-rete-module-composer'},{'name': 'ReteModuleVisualizerComponent', 'selector': 'app-rete-module-visualizer'},{'name': 'ReteTheaterComposerComponent', 'selector': 'app-rete-theater-composer'},{'name': 'ReteTheaterVisualizerComponent', 'selector': 'app-rete-theater-visualizer'},{'name': 'SubnetComponent', 'selector': ''},{'name': 'TabnavComponent', 'selector': 'app-tabnav'},{'name': 'TheaterInternalServiceModuleInstanceComponent', 'selector': ''},{'name': 'TheaterModuleInstanceComponent', 'selector': ''},{'name': 'UnderbarComponent', 'selector': 'app-underbar'},{'name': 'VisualizerComponent', 'selector': 'app-displayer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MirroringModuleInstanceComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/MirroringModuleInstanceNode.html":{"url":"classes/MirroringModuleInstanceNode.html","title":"class - MirroringModuleInstanceNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  MirroringModuleInstanceNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/rete-settings/nodes/rete-modules/mirroringModuleInstance/mirroringModuleInstanceNode.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che rappresenta il modulo (rete-node) MirroringModuleInstance all'interno del canvas/editor di rete.\n\n            \n\n            \n                Extends\n            \n            \n                        Component\n            \n\n            \n                Implementa\n            \n            \n                        AngularComponent\n            \n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                builder\n                            \n                            \n                                created\n                            \n                            \n                                createNewNode\n                            \n                            \n                                destroyed\n                            \n                            \n                                valorizeNode\n                            \n                            \n                                worker\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Costruttore\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Definito in src/app/rete-settings/nodes/rete-modules/mirroringModuleInstance/mirroringModuleInstanceNode.ts:49\n                            \n                        \n\n                \n                    \n                            Costruttore di MirroringModuleInstanceNode\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     AngularComponentData\n\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-modules/mirroringModuleInstance/mirroringModuleInstanceNode.ts:49\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        builder\n                        \n                    \n                \n            \n            \n                \n                    \n                    builder(node: Node)\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-modules/mirroringModuleInstance/mirroringModuleInstanceNode.ts:67\n                \n            \n\n\n            \n                \n                    Funzione richiamata in fase di costruzione del nodo (rete-node).\nControlla se bisogna instanziare il nodo oppure crearne uno nuovo:\n\nIn fase di design, il nodo non ha dati, per cui bisogna crearne uno nuovo.\nIn fase di visualizing, il nodo presenta dei dati, per cui va valorizzato il nodo.\n\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        created\n                        \n                    \n                \n            \n            \n                \ncreated(node: Node)\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-modules/mirroringModuleInstance/mirroringModuleInstanceNode.ts:130\n                \n            \n\n\n            \n                \n                    Funzione richiamata una volta in nodo creato.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createNewNode\n                        \n                    \n                \n            \n            \n                \ncreateNewNode(node: Node)\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-modules/mirroringModuleInstance/mirroringModuleInstanceNode.ts:79\n                \n            \n\n\n            \n                \n                    Funzione che ha come scopo creare un nodo (rete-node).\nIn particolare gli assegna una struttura vuota.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destroyed\n                        \n                    \n                \n            \n            \n                \ndestroyed(node: Node)\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-modules/mirroringModuleInstance/mirroringModuleInstanceNode.ts:138\n                \n            \n\n\n            \n                \n                    Funzione richiamata una volta in nodo cancellato.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        valorizeNode\n                        \n                    \n                \n            \n            \n                \nvalorizeNode(node: Node)\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-modules/mirroringModuleInstance/mirroringModuleInstanceNode.ts:92\n                \n            \n\n\n            \n                \n                    Funzione che ha come scopo la valorizzazione del nodo (rete-node) con i dati in suo possesso.\nIn quasta fase avviene anche la fase iniziale di instanziamento delle porte input/output.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        worker\n                        \n                    \n                \n            \n            \n                \nworker(node: NodeData, inputs: WorkerInputs, outputs: WorkerOutputs)\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-modules/mirroringModuleInstance/mirroringModuleInstanceNode.ts:122\n                \n            \n\n\n            \n                \n                    Funzione richiamta per eseguire operazioni che conivolgono computazioni dei nodi.\nNon sono necessari in questa versione.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                            NodeData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    inputs\n                                    \n                                            WorkerInputs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    outputs\n                                    \n                                            WorkerOutputs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Component, Input, Output, Node } from 'rete';\nimport { _Socket } from '../../../sockets/socket';\nimport { _Control } from '../../../controls/control';\nimport { AngularComponent, AngularComponentData } from 'rete-angular-render-plugin';\nimport { NodeData, WorkerInputs, WorkerOutputs } from 'rete/types/core/data';\nimport { MirroringModuleInstanceComponent } from './mirroringModuleInstance.component';\nimport { reteBasicModuleInfo } from '../../reteBasic';\nimport { EnumModuleType } from 'src/app/models/appType';\n\n/**\n * Classe utilizzata per indicare il tipo di modulo MirroringModuleInstanceNode.\n * @see {reteBasicModuleInfo}\n */\nexport class ReteMirroringModuleInstanceInfo extends reteBasicModuleInfo {\n  type: EnumModuleType.MirroringModuleInstance;\n}\n\n/**\n * Funzione dichiarata in MirroringModuleInstanceNode. \n * Essa ha lo scopo di generare una struttura dati empty.\n * Viene utilizzata in per instanziare un nodo del tipo di ritorno indicato senza dati.\n * @returns {ReteMirroringModuleInstanceInfo}\n */\nexport function getEmptyReteMirroringModuleInstanceInfo(): ReteMirroringModuleInstanceInfo {\n  let x: ReteMirroringModuleInstanceInfo = {\n    Input: [],\n    Output: [],\n    description: \"\",\n    name: \"\",\n    type: EnumModuleType.MirroringModuleInstance,\n    area: \"\",\n    host_number: 0,\n    network_number: 0,\n    subnet_number: 0,\n    module: '',\n    version: '',\n    sequence: '',\n    consumer_interfaces_link: []\n  };\n  return x;\n}\n\n\n/**\n * Classe che rappresenta il modulo (rete-node) MirroringModuleInstance all'interno del canvas/editor di rete.\n */\nexport class MirroringModuleInstanceNode extends Component implements AngularComponent {\n\n  data: AngularComponentData;\n\n  /**\n   * Costruttore di MirroringModuleInstanceNode\n   */\n  constructor() {\n    super(EnumModuleType.MirroringModuleInstance);\n    this.data.render = 'angular';\n    this.data.component = MirroringModuleInstanceComponent;\n  }\n\n  /**\n   * Funzione richiamata in fase di costruzione del nodo (rete-node).\n   * Controlla se bisogna instanziare il nodo oppure crearne uno nuovo:\n   * - In fase di design, il nodo non ha dati, per cui bisogna crearne uno nuovo.\n   * - In fase di visualizing, il nodo presenta dei dati, per cui va valorizzato il nodo.\n   * @param node \n   */\n  async builder(node: Node) {\n    if (Object.keys(node.data).length === 0)\n      this.createNewNode(node)\n    else\n      this.valorizeNode(node)\n  }\n\n  /**\n   * Funzione che ha come scopo creare un nodo (rete-node).\n   * In particolare gli assegna una struttura vuota.\n   * @param node \n   */\n  createNewNode(node: Node) {\n    let t = getEmptyReteMirroringModuleInstanceInfo()\n    node.data = {\n      ...node.data,\n      ...t\n    }\n  }\n\n  /**\n   * Funzione che ha come scopo la valorizzazione del nodo (rete-node) con i dati in suo possesso.\n   * In quasta fase avviene anche la fase iniziale di instanziamento delle porte input/output.\n   * @param node \n   */\n  valorizeNode(node: Node) {\n    var i: any = node.data['Input'];\n    var o: any = node.data['Output'];\n    var il = i.length;\n    var ol = o.length;\n\n    for (let index = 0; index \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/ModalButton.html":{"url":"classes/ModalButton.html","title":"class - ModalButton","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  ModalButton\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/modal/modalType.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Elemento che indica il tipo di pulsante nel modal.\nEsso è usato anche come di ritorno dell'evento \"button-clicked\".\nSee {ModalComponent}\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                text\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/modal/modalType.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        text\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/modal/modalType.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     \"primary\" | \"secondary\" | \"danger\" | \"success\"\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/modal/modalType.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { TemplateRef } from \"@angular/core\";\n\n/**\n * Tipo di dato passato alla componente ModalComponent per l'elaborazione.\n *  @see {ModalComponent}\n */\nexport class ModalItem {\n    title: string;\n    text_content?: string;\n    template?: TemplateRef;\n    buttons: ModalButton[];\n    backgroundColor?: string = \"ffffff5e\";\n}\n/**\n * Elemento che indica il tipo di pulsante nel modal.\n * Esso è usato anche come di ritorno dell'evento \"button-clicked\".\n * @see {ModalComponent}\n */\nexport class ModalButton {\n    id: string;\n    text: string;\n    type: \"primary\" | \"secondary\" | \"danger\" | \"success\";\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"components/ModalComponent.html":{"url":"components/ModalComponent.html","title":"component - ModalComponent","body":"\n                   \n\n\n\n\n\n  Componenti\n  \n  ModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/modal/modal.component.ts\n\n\n\n    \n        Descrizione\n    \n    \n        Componente che ha come scopo la visualizzazione di una modale a contenuto generico.\n\n    \n\n\n\n\n\n    Metadati\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-modal\n            \n\n            \n                styleUrls\n                ./modal.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./modal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _show\n                            \n                        \n                    \n                \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                clickButton\n                            \n                            \n                                closemodal\n                            \n                            \n                                showModal\n                            \n                        \n                    \n                \n\n                \n                    \n                        Input\n                    \n                \n                \n                    \n                        \n                            \n                                element\n                            \n                            \n                                show\n                            \n                        \n                    \n                \n\n                \n                    \n                        Output\n                    \n                \n                \n                    \n                        \n                            \n                                onButtonPressed\n                            \n                            \n                                showChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessori\n                        \n                    \n                    \n                        \n                            \n                                \n                                    show\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Costruttore\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Definito in src/app/components/modal/modal.component.ts:46\n                            \n                        \n\n                \n                    \n                            Costrutture componente ModalComponent.\n\n                    \n                \n            \n        \n\n\n    \n    Input\n        \n            \n                \n                    \n                        \n                        element\n                    \n                \n                \n                    \n                        Tipo :         ModalItem\n\n                    \n                \n                        \n                            \n                                    Definito in src/app/components/modal/modal.component.ts:20\n                            \n                        \n                \n                    \n                        Variabile in input usata per la configurazione della modale.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        show\n                    \n                \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                        \n                            \n                                    Definito in src/app/components/modal/modal.component.ts:33\n                            \n                        \n                \n                    \n                        Variabile (set) input che rappresenta lo stato dell'hide-or-show della modale\nQuando esegue l'update del valore show. Lo emette anche in output.\nSee {_show}\n\n                    \n                \n            \n        \n\n    \n    Output\n        \n            \n                \n                    \n                        \n                        onButtonPressed\n                    \n                \n                \n                    \n                        Tipo :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Definito in src/app/components/modal/modal.component.ts:46\n                            \n                        \n                \n                    \n                        Variabile (emitter) di output che rappresenta l'evento di click dei pulsanti.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        showChange\n                    \n                \n                \n                    \n                        Tipo :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Definito in src/app/components/modal/modal.component.ts:40\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        clickButton\n                        \n                    \n                \n            \n            \n                \nclickButton(val: ModalButton)\n                \n            \n\n\n            \n                \n                    Definito in src/app/components/modal/modal.component.ts:75\n                \n            \n\n\n            \n                \n                    Funzione che capta l'evento di pulsante cliccato e lo emette in output.\nSee {onButtonPressed}\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                ModalButton\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        closemodal\n                        \n                    \n                \n            \n            \n                \nclosemodal()\n                \n            \n\n\n            \n                \n                    Definito in src/app/components/modal/modal.component.ts:58\n                \n            \n\n\n            \n                \n                    Funzione che setta la variabile show a false\nSee {show}\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showModal\n                        \n                    \n                \n            \n            \n                \nshowModal()\n                \n            \n\n\n            \n                \n                    Definito in src/app/components/modal/modal.component.ts:66\n                \n            \n\n\n            \n                \n                    Funzione che setta la variabile show a true\nSee {show}\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _show\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/modal/modal.component.ts:26\n                        \n                    \n\n            \n                \n                    Variabile di appoggio per l'hide-or-show della modale\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessori\n    \n        \n            \n                \n                    \n                        \n                        show\n                    \n                \n\n                \n                    \n                        getshow()\n                    \n                \n                            \n                                \n                                    Definito in src/app/components/modal/modal.component.ts:37\n                                \n                            \n\n                \n                    \n                        setshow(val: boolean)\n                    \n                \n                            \n                                \n                                    Definito in src/app/components/modal/modal.component.ts:33\n                                \n                            \n                    \n                        \n                                Variabile (set) input che rappresenta lo stato dell'hide-or-show della modale\nQuando esegue l'update del valore show. Lo emette anche in output.\nSee {_show}\n\n\n                                \n                                        Parametri :\n                                        \n                                            \n                                                \n                                                    Nome\n                                                        Tipo\n                                                    Opzionale\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, EventEmitter, Input } from '@angular/core';\nimport { Output } from '@angular/core';\nimport { ModalButton, ModalItem } from './modalType';\n\n\n/**\n * Componente che ha come scopo la visualizzazione di una modale a contenuto generico.\n */\n@Component({\n  selector: 'app-modal',\n  templateUrl: './modal.component.html',\n  styleUrls: ['./modal.component.sass']\n})\nexport class ModalComponent {\n\n  /**\n   * Variabile in input usata per la configurazione della modale.\n   * @type {ModalItem}\n   */\n  @Input() element: ModalItem;\n\n  /**\n   * Variabile di appoggio per l'hide-or-show della modale\n   * @type {boolean}\n   */\n  protected _show: boolean;  \n  /**\n   * Variabile (set) input che rappresenta lo stato dell'hide-or-show della modale\n   * Quando esegue l'update del valore show. Lo emette anche in output.\n   * @see {_show}\n   */\n  @Input()\n  set show(val: boolean) {\n    this.showChange.emit(val);\n    this._show = val;\n  }\n  get show() {\n    return this._show;\n  }\n  @Output() showChange: EventEmitter = new EventEmitter();\n\n  /**\n   * Variabile (emitter) di output che rappresenta l'evento di click dei pulsanti.\n   * @type {EventEmitter}\n   */\n  @Output() onButtonPressed: EventEmitter = new EventEmitter();\n\n  /**\n   * Costrutture componente ModalComponent.\n   */\n  constructor() {\n  }\n\n  /**\n   * Funzione che setta la variabile show a false\n   * @see {show}\n   */\n  closemodal(){\n    this.show=false;\n  }\n\n  /**\n   * Funzione che setta la variabile show a true\n   * @see {show}\n   */\n  showModal(){\n    this.show=true;\n  }\n\n  /**\n   * Funzione che capta l'evento di pulsante cliccato e lo emette in output.\n   * @param val \n   * @see {onButtonPressed}\n   */\n  clickButton( val: ModalButton){\n    this.onButtonPressed.emit(val);\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n            \n                \n                    {{element.title}}\n                \n                \n                    \n                        &times;\n                    \n                \n            \n            \n                 {{element.text_content}} \n                \n                \n            \n            0\" class=\"modal-footer\">\n                \n                    \n                        {{item.text}}\n                    \n                \n            \n        \n    \n\n    \n\n    \n                \n                    ./modal.component.sass\n                \n                \n    \n\n    \n        \n        \n            \n                Legenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento html con direttive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                            {{element.title}}                                                                            ×                                                                             {{element.text_content}}                                                         0\" class=\"modal-footer\">                                                            {{item.text}}                                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ComposerComponent', 'selector': 'app-composer'},{'name': 'ControlTemplate', 'selector': ''},{'name': 'DataInputComponent', 'selector': 'app-data-input'},{'name': 'DataInputV2Component', 'selector': 'app-data-input-v2'},{'name': 'DataItemComponent', 'selector': 'app-window-item'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HostComponent', 'selector': ''},{'name': 'HowToUseComponent', 'selector': 'app-how-to-use'},{'name': 'MirroringModuleInstanceComponent', 'selector': ''},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavbarElementComponent', 'selector': 'app-navbar-element'},{'name': 'NetworkComponent', 'selector': ''},{'name': 'OffcanvasComponent', 'selector': 'app-offcanvas'},{'name': 'ReteModuleComposerComponent', 'selector': 'app-rete-module-composer'},{'name': 'ReteModuleVisualizerComponent', 'selector': 'app-rete-module-visualizer'},{'name': 'ReteTheaterComposerComponent', 'selector': 'app-rete-theater-composer'},{'name': 'ReteTheaterVisualizerComponent', 'selector': 'app-rete-theater-visualizer'},{'name': 'SubnetComponent', 'selector': ''},{'name': 'TabnavComponent', 'selector': 'app-tabnav'},{'name': 'TheaterInternalServiceModuleInstanceComponent', 'selector': ''},{'name': 'TheaterModuleInstanceComponent', 'selector': ''},{'name': 'UnderbarComponent', 'selector': 'app-underbar'},{'name': 'VisualizerComponent', 'selector': 'app-displayer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/ModalItem.html":{"url":"classes/ModalItem.html","title":"class - ModalItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  ModalItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/modal/modalType.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Tipo di dato passato alla componente ModalComponent per l'elaborazione.\n @see {ModalComponent}\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                    Opzionale\n                                backgroundColor\n                            \n                            \n                                buttons\n                            \n                            \n                                    Opzionale\n                                template\n                            \n                            \n                                    Opzionale\n                                text_content\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        backgroundColor\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                \n                    \n                        Valore predefinito : \"ffffff5e\"\n                    \n                \n                    \n                        \n                                Definito in src/app/components/modal/modalType.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buttons\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ModalButton[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/modal/modalType.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        template\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     TemplateRef\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/modal/modalType.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        text_content\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/modal/modalType.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/modal/modalType.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { TemplateRef } from \"@angular/core\";\n\n/**\n * Tipo di dato passato alla componente ModalComponent per l'elaborazione.\n *  @see {ModalComponent}\n */\nexport class ModalItem {\n    title: string;\n    text_content?: string;\n    template?: TemplateRef;\n    buttons: ModalButton[];\n    backgroundColor?: string = \"ffffff5e\";\n}\n/**\n * Elemento che indica il tipo di pulsante nel modal.\n * Esso è usato anche come di ritorno dell'evento \"button-clicked\".\n * @see {ModalComponent}\n */\nexport class ModalButton {\n    id: string;\n    text: string;\n    type: \"primary\" | \"secondary\" | \"danger\" | \"success\";\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"injectables/ModalService.html":{"url":"injectables/ModalService.html","title":"injectable - ModalService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ModalService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/application/modal/modal.service.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Servizio di gestione modale.\nQuesto servizio è direttamente collegato con le generiche componenti verso l'AppComponent (principale).\nNell'AppComponent si trova una modale.\nIl che comporta la possibilità, attraverso questo servizio di poter essere attivata da tutte le componenti.\nUtilizzata quasi esclusivamente per delle conferma/cancellazione delle operazioni.\nAttenzione. Nella fase di show e scelta, essa ritorna 2 valori: Un valore null (da non considerare) e il secondo valore, la scelta dell'utente.\nPer cui va utilizzata, nella subscribe, take(2). Per fare in modo di ricevere questi due valori e poi eseguire l'unsibscribe\n\n            \n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                modalData\n                            \n                            \n                                    Public\n                                show\n                            \n                            \n                                    Public\n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                getModal\n                            \n                            \n                                setConfirmationModal\n                            \n                            \n                                setResponse\n                            \n                            \n                                showConfirmationModal\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Costruttore\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Definito in src/app/services/application/modal/modal.service.ts:56\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        getModal\n                        \n                    \n                \n            \n            \n                \ngetModal()\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/modal/modal.service.ts:66\n                \n            \n\n\n            \n                \n                    Funzione che ritorna lo stato della modale show/hide.\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setConfirmationModal\n                        \n                    \n                \n            \n            \n                \nsetConfirmationModal(text_content: string)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/modal/modal.service.ts:74\n                \n            \n\n\n            \n                \n                    Funzione che setta la modale in un determinato stato con un determinato messaggio.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    text_content\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setResponse\n                        \n                    \n                \n            \n            \n                \nsetResponse(val: ModalButton)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/modal/modal.service.ts:86\n                \n            \n\n\n            \n                \n                    Funzione che consente di settare il valore (conferma/non conferma) della modale.\nQuando si sceglie, in automatico avviene la chiusura.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                ModalButton\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showConfirmationModal\n                        \n                    \n                \n            \n            \n                \nshowConfirmationModal(text_content: string)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/modal/modal.service.ts:106\n                \n            \n\n\n            \n                \n                    Funzione che setta lo stato della modale. E la mostra.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    text_content\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        modalData\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Valore predefinito : new BehaviorSubject(modalItem)\n                    \n                \n                    \n                        \n                                Definito in src/app/services/application/modal/modal.service.ts:44\n                        \n                    \n\n            \n                \n                    Variabile che memorizza i dati della modale.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        show\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Valore predefinito : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Definito in src/app/services/application/modal/modal.service.ts:50\n                        \n                    \n\n            \n                \n                    Variabile che indica lo stato della modale hide/show.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Valore predefinito : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Definito in src/app/services/application/modal/modal.service.ts:56\n                        \n                    \n\n            \n                \n                    Variabile che indica lo stato della modale hide/show.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { ModalButton, ModalItem } from 'src/app/components/modal/modalType';\n\n\n\nlet modalItem: ModalItem = {\n  title: 'Confirm operation',\n  buttons: [\n    {\n      id: \"yes\",\n      text: \"Yes\",\n      type: \"primary\",\n    },\n    {\n      id: \"no\",\n      text: \"No\",\n      type: \"secondary\",\n    }\n  ],\n  backgroundColor: \"#0000005e\",\n  text_content: \"\"\n};\n\n\n/**\n * Servizio di gestione modale.\n * Questo servizio è direttamente collegato con le generiche componenti verso l'AppComponent (principale).\n * Nell'AppComponent si trova una modale.\n * Il che comporta la possibilità, attraverso questo servizio di poter essere attivata da tutte le componenti.\n * Utilizzata quasi esclusivamente per delle conferma/cancellazione delle operazioni.\n * Attenzione. Nella fase di show e scelta, essa ritorna 2 valori: Un valore null (da non considerare) e il secondo valore, la scelta dell'utente.\n * Per cui va utilizzata, nella subscribe, take(2). Per fare in modo di ricevere questi due valori e poi eseguire l'unsibscribe\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ModalService {\n\n  /**\n   * Variabile che memorizza i dati della modale.\n   * @type {BehaviorSubject}\n   */\n  public modalData: BehaviorSubject = new BehaviorSubject(modalItem);\n  /**\n   * Variabile che indica lo stato della modale hide/show.\n   * @type {BehaviorSubject}\n   * @default {false}\n   */\n  public show: BehaviorSubject = new BehaviorSubject(false);\n  /**\n   * Variabile che indica lo stato della modale hide/show.\n   * @type {BehaviorSubject}\n   * @default {false}\n   */\n  public value: BehaviorSubject = new BehaviorSubject(false);\n\n  constructor() {\n    // this.setConfirmationModal(\"\");\n  }\n\n  /**\n   * Funzione che ritorna lo stato della modale show/hide.\n   * @returns {Observable}\n   */\n  getModal(): Observable {\n    return this.value.asObservable();\n  }\n\n  /**\n   * Funzione che setta la modale in un determinato stato con un determinato messaggio.\n   * @param text_content \n   */\n  setConfirmationModal(text_content: string) {\n    this.value.next(null); //clear old resposnse first\n    modalItem.text_content = text_content;\n    this.modalData.next(modalItem);\n    this.show.next(true);\n  }\n\n  /**\n   * Funzione che consente di settare il valore (conferma/non conferma) della modale.\n   * Quando si sceglie, in automatico avviene la chiusura.\n   * @param val \n   */\n  setResponse(val: ModalButton){\n    if(!val) return \n    if(val.id===\"yes\"){\n      this.value.next(true);\n    }\n    else if(val.id===\"no\"){\n      this.value.next(false);\n    }\n    else{\n      console.warn(\"only yes-no available\");\n    }\n    this.show.next(false);\n  }\n\n\n  /**\n   * Funzione che setta lo stato della modale. E la mostra.\n   * @param text_content \n   * @returns {Observable}\n   */\n  showConfirmationModal(text_content: string): Observable{\n    if (!text_content) return; \n    this.setConfirmationModal(text_content);\n    return this.getModal();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/ModuleApplication.html":{"url":"classes/ModuleApplication.html","title":"class - ModuleApplication","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  ModuleApplication\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsApplication/applicationModels.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe contenente gli attributi utilizzati per le operazioni che coinvolgono i moduli.\nps. Questa struttura è prettamente utilizzata nella chiamata relativa al singolo modulo.\n\n            \n\n            \n                Extends\n            \n            \n                        ModuleDTO\n            \n\n            \n                Implementa\n            \n            \n                            CommonModule\n            \n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                host_number\n                            \n                            \n                                hosts\n                            \n                            \n                                imports\n                            \n                            \n                                interfaces\n                            \n                            \n                                network_number\n                            \n                            \n                                subnet_number\n                            \n                            \n                                topology\n                            \n                            \n                                    Opzionale\n                                validateObject\n                            \n                            \n                                attachments\n                            \n                            \n                                author\n                            \n                            \n                                capabilities\n                            \n                            \n                                catalog1\n                            \n                            \n                                catalog2\n                            \n                            \n                                catalog3\n                            \n                            \n                                classification\n                            \n                            \n                                configurationTemplate\n                            \n                            \n                                detailProperties\n                            \n                            \n                                input\n                            \n                            \n                                mode\n                            \n                            \n                                output\n                            \n                            \n                                statistics\n                            \n                            \n                                tags\n                            \n                            \n                                createdBy\n                            \n                            \n                                createdDate\n                            \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                isLocked\n                            \n                            \n                                lastModifiedBy\n                            \n                            \n                                lastModifiedDate\n                            \n                            \n                                lockAcquiredTimestamp\n                            \n                            \n                                lockLastUserAcquiring\n                            \n                            \n                                lockReleasedTimestamp\n                            \n                            \n                                name\n                            \n                            \n                                status\n                            \n                            \n                                    Opzionale\n                                type\n                            \n                            \n                                uuid\n                            \n                            \n                                version\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        host_number\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsApplication/applicationModels.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hosts\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     HostModuleDTO[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsApplication/applicationModels.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        imports\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsApplication/applicationModels.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        interfaces\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ModuleNetworkInterfaceDTO[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsApplication/applicationModels.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        network_number\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsApplication/applicationModels.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subnet_number\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsApplication/applicationModels.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        topology\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         NodeTopologyElement\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsApplication/applicationModels.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        validateObject\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                \n                    \n                        Valore predefinito : \"module\"\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsApplication/applicationModels.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        attachments\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string[]\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleDTO:124\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        author\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleDTO:125\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        capabilities\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     literal type\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleDTO:126\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        catalog1\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         TypesCatalogueDTO\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleDTO:127\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        catalog2\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         TypesCatalogueDTO\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleDTO:128\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        catalog3\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         TypesCatalogueDTO\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleDTO:129\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        classification\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ModuleClassificationDTO\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleDTO:130\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        configurationTemplate\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ConfigurationTemplateDTO\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleDTO:131\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        detailProperties\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     literal type\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleDTO:132\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        input\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     literal type\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleDTO:133\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ModuleModeDTO\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleDTO:135\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        output\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     literal type\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleDTO:134\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        statistics\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     literal type\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleDTO:136\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tags\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     []\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleDTO:137\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:102\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdDate\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:103\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:104\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:105\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLocked\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:106\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastModifiedBy\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:107\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastModifiedDate\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:108\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lockAcquiredTimestamp\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:109\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lockLastUserAcquiring\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:110\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lockReleasedTimestamp\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:111\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:112\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ModuleStatusDTO\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:113\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | any\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:114\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uuid\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:115\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:116\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ReteHostInfo } from \"src/app/rete-settings/nodes/rete-nodes/host/hostNode\";\nimport { ReteNetworkInfo } from \"src/app/rete-settings/nodes/rete-nodes/network/networkNode\";\nimport { ReteSubnetInfo } from \"src/app/rete-settings/nodes/rete-nodes/subnet/subnetNode\";\nimport { ReteMirroringModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/mirroringModuleInstance/mirroringModuleInstanceNode\";\nimport { ReteTheaterInternalServiceModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/theaterInternalServiceModuleInstance/theaterInternalServiceModuleInstanceNode\";\nimport { ReteTheaterModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/theaterModuleInstance/theaterModuleInstanceNode\";\nimport { FlavorBasicInfo } from \"../modelsDTO/falvorDTO\";\nimport { HostModuleDTO } from \"../modelsDTO/hostDTO\";\nimport { ModuleNetworkInterfaceDTO, ModuleInstancePropertiesDTO, SimpleModuleDTO, TheaterInstancePropertiesDTO, ModuleInstanceDTO, ModuleDTO, SimpleAreaDTO, AreaDTO } from \"../modelsDTO/moduleDTO\";\nimport { TheaterDTO } from \"../modelsDTO/theaterDTO\";\n\n\nexport interface CommonModule {\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n}\n\n\n/**\n * Classe contenente gli attributi utilizzati per le operazioni che coinvolgono i moduli.\n * ps. Questa struttura è prettamente utilizzata nella chiamata relativa al singolo modulo.\n */\nexport class ModuleApplication extends ModuleDTO implements CommonModule {\n    imports: string[] // perchè nell'export yaml è previsto\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n    // serve per validare il json risultante dal parsing del theaterApplication\n    validateObject?: string = \"module\";\n}\n// PER IMPLEMENTAZIONI FUTURE, PER COERENZA, PRENDERE DIRETTAMENTE I SINGOLI NODI DALLA CHIAMATA ESCLUSIVA E NON DA QUELLA CHE RESTITUISCE TUTTI I TEATRI\n/**\n * Classe contenente gli attributi utilizzati per le operazioni che coinvolgono i moduli.\n * ps. Questa struttura è prettamente utilizzata nella chiamata che prende tutti i moduli del teatro.\n */\nexport class SimpleModuleApplication extends SimpleModuleDTO implements CommonModule {\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n}\n\n\nexport class ReteConnection {\n    from: string;\n    port_src: string;\n    to: string;\n    port_dst: string;\n}\n\nexport interface TopologyList {\n    rete: any;\n    topology?: TopologyElement\n}\nexport class TopologyElement {\n    elements: { [name: string]: any };\n    connection: ReteConnection[]\n}\n\n// apptype module topology\n\nexport class NodeTopologyElement implements TopologyElement {\n    elements: { [hostName: string]: ReteHostInfo | ReteSubnetInfo | ReteNetworkInfo };\n    connection: ReteConnection[]\n}\n\nexport interface ModuleTopology extends TopologyList {\n    rete: ReteMirroringModuleInstanceInfo | ReteTheaterInternalServiceModuleInstanceInfo | ReteTheaterModuleInstanceInfo\n    topology: NodeTopologyElement;\n}\n\nexport class ModuleInstance extends ModuleInstanceDTO implements ModuleTopology {\n    // moduleTopology data\n    rete: ReteTheaterModuleInstanceInfo | ReteTheaterInternalServiceModuleInstanceInfo | ReteMirroringModuleInstanceInfo;\n    topology: NodeTopologyElement;\n    // other data\n    moduleInfo: SimpleModuleApplication\n}\n\n// apptype theater theater\n\nexport interface TheaterTopology extends TopologyElement {\n    elements: { [hostName: string]: ModuleInstance };\n    connection: ReteConnection[];\n}\n\nexport class TheaterApplication extends TheaterDTO implements TheaterTopology {\n    // theaterTopology data\n    elements: { [hostName: string]: ModuleInstance; };\n    connection: ReteConnection[];\n    // other data\n    properties: TheaterInstancePropertiesDTO;\n    topology: TheaterTopology;\n    // serve per validare il json risultante dal parsing del theaterApplication\n    validateObject?: string = \"theater\";\n}\n\nexport class AreaApplication extends AreaDTO {\n    color?: string;\n}\nexport class AreaColorDTO extends SimpleAreaDTO {\n    color: string;\n}\n\n\nexport class FlavorApplication extends FlavorBasicInfo {\n    flavorName: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/ModuleClassificationDTO.html":{"url":"classes/ModuleClassificationDTO.html","title":"class - ModuleClassificationDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  ModuleClassificationDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsDTO/moduleDTO.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano la classificazione del modulo.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                blueprintType\n                            \n                            \n                                category\n                            \n                            \n                                expectedInstanceType\n                            \n                            \n                                id\n                            \n                            \n                                mcClass\n                            \n                            \n                                type\n                            \n                            \n                                uuid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        blueprintType\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        expectedInstanceType\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mcClass\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uuid\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:42\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PageableDTO, SortDTO } from './elementDTO';\nimport { NetworkDTO } from './networkDTO';\nimport { TheaterDTO } from './theaterDTO';\n\n/**\n * Classe che contiene gli attributi che indicano l'insieme dei moduli ritornati dal teatro.\n */\nexport class ModuleListDTO {\n    content: SimpleModuleDTO[]\n    pageable: PageableDTO\n    last: boolean\n    totalPages: string | number\n    totalElements: string | number\n    size: string | number\n    number: string | number\n    sort: SortDTO\n    numberOfElements: string | number\n    first: boolean\n    empty: boolean\n}\n\n/**\n * Classe che contiene gli attributi che indica il catalogo del tipo.\n */\nexport class TypesCatalogueDTO {\n    group: string\n    id: string | number\n    parentId: {}\n    value: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano la classificazione del modulo.\n */\nexport class ModuleClassificationDTO {\n    blueprintType: string\n    category: string\n    expectedInstanceType: string\n    id: string | number\n    mcClass: string\n    type: string\n    uuid: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano un parametro generico.\n */\nexport class GenericParameterDTO {\n    type: string\n    default: string\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano i parametri di configurazione di un modulto.\n */\nexport class ConfigurationTemplateDTO {\n    anchor_parameters: { [name: string]: GenericParameterDTO | string }\n    instance_parameters: { [name: string]: GenericParameterDTO }\n    structural_parameters: { [name: string]: GenericParameterDTO }\n    fixed_parameters: { [name: string]: GenericParameterDTO }\n    control_parameters: { [name: string]: GenericParameterDTO }\n    infrastructure_parameters: { [name: string]: GenericParameterDTO }\n    module: string\n    description: string\n    category: string\n    version: string | number\n    platform: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano la modalità di un modulo.\n */\nexport class ModuleModeDTO {\n    code: string\n    id: string | number\n    name: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano lo stato di un modulo.\n */\nexport class ModuleStatusDTO {\n    descriptionCode: string\n    id: string | number\n    name: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le statitistiche di un modulo.\n */\nexport class StatisticItemDTO {\n    error: string | number\n    updated: string | number\n    inserted: string | number\n}\n\n/**\n * Classe che contiene gli attributi che indicano il modulo (simple - in dipendenza del teatro).\n */\nexport class SimpleModuleDTO {\n    createdBy: string\n    createdDate: string\n    description: string\n    id: string | number\n    isLocked: boolean\n    lastModifiedBy: string\n    lastModifiedDate: string\n    lockAcquiredTimestamp: string\n    lockLastUserAcquiring: string\n    lockReleasedTimestamp: string\n    name: string\n    status: ModuleStatusDTO\n    type?: string | any\n    uuid: string\n    version: string | number\n}\n\n/**\n * Classe che contiene gli attributi che indicano il modulo (complex - ritorato da call appostita).\n * @extends {SimpleModuleDTO}\n */\nexport class ModuleDTO extends SimpleModuleDTO {\n    attachments: string[]\n    author: string\n    capabilities: { [name: string]: string }\n    catalog1: TypesCatalogueDTO\n    catalog2: TypesCatalogueDTO\n    catalog3: TypesCatalogueDTO\n    classification: ModuleClassificationDTO\n    configurationTemplate: ConfigurationTemplateDTO\n    detailProperties: {}\n    input: { [name: string]: string }\n    output: { [name: string]: string }\n    mode: ModuleModeDTO\n    statistics: { [name: string]: StatisticItemDTO | string | number }\n    tags: []\n}\n\n/**\n * Classe che contiene gli attributi che indicano le interfacce esposte da un modulo.\n */\nexport class ModuleNetworkInterfaceDTO {\n    id: string | number\n    label: string\n    module: ModuleDTO\n    network: NetworkDTO\n    nodeName: string\n    type: string\n    uuid: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le connessioni interfaccia-modulo.\n */\nexport class ConsumerInterfaceLinkDTO {\n    local_interface: string\n    module_instance: string\n    remote_interface: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà dell'istanza di un modulo all'interno del node_templates.\n */\nexport class ModuleInstancePropertiesDTO {\n    area: string\n    description: string\n    module: string\n    version: string | number\n    sequence: string | number\n    consumer_interfaces_link: ConsumerInterfaceLinkDTO[]\n}\n\n\n/**\n * Classe che contiene gli attributi che indicano l'area di appartenenza di un modulo (complex).\n */\nexport class AreaDTO {\n    id: string | number;\n    uuid: string;\n    name: string;\n    description: string;\n    theater: TheaterDTO;\n    deleted: boolean | string;\n}\n\n/**\n * Classe che contiene gli attributi che indicano l'area di appartenenza di un modulo (simple).\n */\nexport class SimpleAreaDTO {\n    area: string\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà dell'istanza di un teatro all'interno del node_templates.\n */\nexport class TheaterInstancePropertiesDTO {\n    mode: string\n    tags: TagTIP[]\n    areas: SimpleAreaDTO[]\n    author: string\n    version: string | number\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano un tag.\n */\nexport class TagTIP{\n    tag: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano in via generale le caratteristiche di un elemento che deve essere presente nel node_templates.\n */\nexport class ElementIntoTheaterDTO {  // goes into map in blueprint [name:string]: Module...\n    properties: ModuleInstancePropertiesDTO | TheaterInstancePropertiesDTO\n    type: string\n}\n\n\n/**\n * Classe che contiene gli attributi che indicano le caratteristiche di un teatro presente nel node_templates.\n */\nexport class ModuleInstanceDTO {\n    properties: ModuleInstancePropertiesDTO\n    type: string\n}\n/**\n * Classe che contiene gli attributi che indicano le caratteristiche di un modulo presente nel node_templates.\n */\nexport class TheaterInstanceDTO {\n    properties: TheaterInstancePropertiesDTO\n    type: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/ModuleConstraints.html":{"url":"classes/ModuleConstraints.html","title":"class - ModuleConstraints","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  ModuleConstraints\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsExport/moduleExport.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano i viconli del modulo.\n\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ModeTypeExport, ModuleTypeExport, NetworkTypeExport, NodeTypeExport, PortTypeExport, RelationshipsTypeExport, SubnetTypeExport, ToscaDefinitionType } from \"./TypeExport\"\n\n\n/**\n * Classe utilizzata per l'export. \n * Contiene le informazioni generali per il modulo che devono esserci nello standard Tosca.\n */\nexport class ModuleExport {\n    tosca_definitions_version: ToscaDefinitionType\n    description: string\n    imports: string[]\n    node_templates: { [name: string]: ModuleSimpleData | NodeSimpleData | PortSimpleData | NetworkSimpleData | SubnetSimpleData }\n    dsl_definition: any | null; //future\n    capabilites: any | null //future\n    outputs: any | null //future\n}\n\n/**\n * Classe che contiene gli attributi che indicano la rappresentazione del modulo per l'export.\n */\nexport class ModuleSimpleData {\n    type: ModuleTypeExport\n    properties: PropertiesMSD\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà del modulo per l'export.\n */\nexport class PropertiesMSD {\n    mode: ModeTypeExport\n    description: string\n    version: string | number\n    constraints: ConstraintsMSD\n    interface_networks: {\n        providers: InterfaceNetworksProvider[]\n        consumers: InterfaceNetworksConsumer[]\n    }\n    virtual_machines: VirtualMachine[]\n}\n/**\n * Classe che contiene gli attributi che indicano i vincoli di connessione del modulo per l'export.\n */\nexport class ConstraintsMSD {\n    interface_constraints: InterfaceConstraints[]\n    module_constraints: ModuleConstraints[]\n    network_constraints: NetworkConstraints[]\n}\n/**\n * Classe che contiene gli attributi che indicano i viconli per le interfacce di connessione del modulo.\n */\nexport class InterfaceConstraints {\n    local_interface: string\n    multiple_mode: boolean = false //future\n    module_name: string\n    compatibility: string = \"1.0\" // future\n    remote_interface: string\n}\n/**\n * Classe che contiene gli attributi che indicano i viconli del modulo.\n */\nexport class ModuleConstraints {\n}\n/**\n * Classe che contiene gli attributi che indicano i viconli dei network del modulo.\n */\nexport class NetworkConstraints {\n}\n/**\n * Classe che contiene gli attributi che indicano le interfacce provider del modulo.\n */\nexport class InterfaceNetworksProvider {\n    interface: string\n    network: string\n    tag: string\n    subnets: SubnetExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano le interfacce consumer del modulo.\n */\nexport class InterfaceNetworksConsumer {\n    interface: string\n    network: string\n    tag: string\n    subnets: SubnetExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano l'insieme di host presenti in un modulo.\n */\nexport class VirtualMachine {\n    virtual_machine: string\n    ports: VirtualMachinePorts[]\n}\n/**\n * Classe che contiene gli attributi che indicano le porte associate ad un host di un modulo.\n */\nexport class VirtualMachinePorts {\n    port: string\n    network: string\n    subnets: SubnetExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano la subnet connessa alla porte dell'host.\n * @see {VirtualMachinePorts}\n */\nexport class SubnetExport {\n    subnet: string;\n}\n\n/**\n * Classe che contiene gli attributi che indica un nodo all'interno dei node_templates.\n * @see {ModuleExport}\n */\nexport class NodeSimpleData {\n    type: NodeTypeExport\n    properties: any | null // future\n    interfaces: any | null // future\n    relationships: RelationshipsExport[]\n}\n\n/**\n * Classe che contiene gli attributi che indicano le relazioni generali.\n */\nexport class RelationshipsExport {\n    type: RelationshipsTypeExport\n    target: string\n}\n/**\n * Classe che contiene gli attributi che indicano i dati della porta all'interno dei node_templates.\n */\nexport class PortSimpleData {\n    type: PortTypeExport\n    relationships: RelationshipsExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano i dati delle network all'interno dei node_templates.\n */\nexport class NetworkSimpleData {\n    type: NetworkTypeExport\n    properties: PropertiesNSD\n}\n/**\n * Classe che contiene gli attributi che indicano le proprietà della network all'interno dei node_templates.\n * @see {NetworkSimpleData}\n */\nexport class PropertiesNSD {\n    openstack_config?: any | null // future\n    use_external_resource?: boolean | null // future\n    resource_id?: any | null // future\n}\n\n/**\n * Classe che contiene gli attributi che indicano i dati delle subnet all'interno dei node_templates.\n */\nexport class SubnetSimpleData {\n    type: SubnetTypeExport\n    relationships: RelationshipsExport[]\n    properties: PropertiesSSD\n}\n/**\n * Classe che contiene gli attributi che indicano le proprietà della subnet all'interno dei node_templates.\n * @see {NetworkSimpleData}\n */\nexport class PropertiesSSD {\n    subnet?: {\n        ip_version: string | number\n        cidr: string\n        enable_dhcp: boolean\n        gateway_ip?: any | null // future\n    }\n    openstack_config?: any | null // future\n    use_external_resource?: boolean | null // future\n    resource_id?: any | null // future\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/ModuleDTO.html":{"url":"classes/ModuleDTO.html","title":"class - ModuleDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  ModuleDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsDTO/moduleDTO.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano il modulo (complex - ritorato da call appostita).\n\n            \n\n            \n                Extends\n            \n            \n                        SimpleModuleDTO\n            \n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                attachments\n                            \n                            \n                                author\n                            \n                            \n                                capabilities\n                            \n                            \n                                catalog1\n                            \n                            \n                                catalog2\n                            \n                            \n                                catalog3\n                            \n                            \n                                classification\n                            \n                            \n                                configurationTemplate\n                            \n                            \n                                detailProperties\n                            \n                            \n                                input\n                            \n                            \n                                mode\n                            \n                            \n                                output\n                            \n                            \n                                statistics\n                            \n                            \n                                tags\n                            \n                            \n                                createdBy\n                            \n                            \n                                createdDate\n                            \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                isLocked\n                            \n                            \n                                lastModifiedBy\n                            \n                            \n                                lastModifiedDate\n                            \n                            \n                                lockAcquiredTimestamp\n                            \n                            \n                                lockLastUserAcquiring\n                            \n                            \n                                lockReleasedTimestamp\n                            \n                            \n                                name\n                            \n                            \n                                status\n                            \n                            \n                                    Opzionale\n                                type\n                            \n                            \n                                uuid\n                            \n                            \n                                version\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        attachments\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:124\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        author\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:125\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        capabilities\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     literal type\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:126\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        catalog1\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         TypesCatalogueDTO\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:127\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        catalog2\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         TypesCatalogueDTO\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:128\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        catalog3\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         TypesCatalogueDTO\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:129\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        classification\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ModuleClassificationDTO\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:130\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        configurationTemplate\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ConfigurationTemplateDTO\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:131\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        detailProperties\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     literal type\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:132\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        input\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     literal type\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:133\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ModuleModeDTO\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:135\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        output\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     literal type\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:134\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        statistics\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     literal type\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:136\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tags\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     []\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:137\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:102\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdDate\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:103\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:104\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:105\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLocked\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:106\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastModifiedBy\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:107\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastModifiedDate\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:108\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lockAcquiredTimestamp\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:109\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lockLastUserAcquiring\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:110\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lockReleasedTimestamp\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:111\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:112\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ModuleStatusDTO\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:113\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | any\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:114\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uuid\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:115\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:116\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PageableDTO, SortDTO } from './elementDTO';\nimport { NetworkDTO } from './networkDTO';\nimport { TheaterDTO } from './theaterDTO';\n\n/**\n * Classe che contiene gli attributi che indicano l'insieme dei moduli ritornati dal teatro.\n */\nexport class ModuleListDTO {\n    content: SimpleModuleDTO[]\n    pageable: PageableDTO\n    last: boolean\n    totalPages: string | number\n    totalElements: string | number\n    size: string | number\n    number: string | number\n    sort: SortDTO\n    numberOfElements: string | number\n    first: boolean\n    empty: boolean\n}\n\n/**\n * Classe che contiene gli attributi che indica il catalogo del tipo.\n */\nexport class TypesCatalogueDTO {\n    group: string\n    id: string | number\n    parentId: {}\n    value: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano la classificazione del modulo.\n */\nexport class ModuleClassificationDTO {\n    blueprintType: string\n    category: string\n    expectedInstanceType: string\n    id: string | number\n    mcClass: string\n    type: string\n    uuid: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano un parametro generico.\n */\nexport class GenericParameterDTO {\n    type: string\n    default: string\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano i parametri di configurazione di un modulto.\n */\nexport class ConfigurationTemplateDTO {\n    anchor_parameters: { [name: string]: GenericParameterDTO | string }\n    instance_parameters: { [name: string]: GenericParameterDTO }\n    structural_parameters: { [name: string]: GenericParameterDTO }\n    fixed_parameters: { [name: string]: GenericParameterDTO }\n    control_parameters: { [name: string]: GenericParameterDTO }\n    infrastructure_parameters: { [name: string]: GenericParameterDTO }\n    module: string\n    description: string\n    category: string\n    version: string | number\n    platform: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano la modalità di un modulo.\n */\nexport class ModuleModeDTO {\n    code: string\n    id: string | number\n    name: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano lo stato di un modulo.\n */\nexport class ModuleStatusDTO {\n    descriptionCode: string\n    id: string | number\n    name: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le statitistiche di un modulo.\n */\nexport class StatisticItemDTO {\n    error: string | number\n    updated: string | number\n    inserted: string | number\n}\n\n/**\n * Classe che contiene gli attributi che indicano il modulo (simple - in dipendenza del teatro).\n */\nexport class SimpleModuleDTO {\n    createdBy: string\n    createdDate: string\n    description: string\n    id: string | number\n    isLocked: boolean\n    lastModifiedBy: string\n    lastModifiedDate: string\n    lockAcquiredTimestamp: string\n    lockLastUserAcquiring: string\n    lockReleasedTimestamp: string\n    name: string\n    status: ModuleStatusDTO\n    type?: string | any\n    uuid: string\n    version: string | number\n}\n\n/**\n * Classe che contiene gli attributi che indicano il modulo (complex - ritorato da call appostita).\n * @extends {SimpleModuleDTO}\n */\nexport class ModuleDTO extends SimpleModuleDTO {\n    attachments: string[]\n    author: string\n    capabilities: { [name: string]: string }\n    catalog1: TypesCatalogueDTO\n    catalog2: TypesCatalogueDTO\n    catalog3: TypesCatalogueDTO\n    classification: ModuleClassificationDTO\n    configurationTemplate: ConfigurationTemplateDTO\n    detailProperties: {}\n    input: { [name: string]: string }\n    output: { [name: string]: string }\n    mode: ModuleModeDTO\n    statistics: { [name: string]: StatisticItemDTO | string | number }\n    tags: []\n}\n\n/**\n * Classe che contiene gli attributi che indicano le interfacce esposte da un modulo.\n */\nexport class ModuleNetworkInterfaceDTO {\n    id: string | number\n    label: string\n    module: ModuleDTO\n    network: NetworkDTO\n    nodeName: string\n    type: string\n    uuid: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le connessioni interfaccia-modulo.\n */\nexport class ConsumerInterfaceLinkDTO {\n    local_interface: string\n    module_instance: string\n    remote_interface: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà dell'istanza di un modulo all'interno del node_templates.\n */\nexport class ModuleInstancePropertiesDTO {\n    area: string\n    description: string\n    module: string\n    version: string | number\n    sequence: string | number\n    consumer_interfaces_link: ConsumerInterfaceLinkDTO[]\n}\n\n\n/**\n * Classe che contiene gli attributi che indicano l'area di appartenenza di un modulo (complex).\n */\nexport class AreaDTO {\n    id: string | number;\n    uuid: string;\n    name: string;\n    description: string;\n    theater: TheaterDTO;\n    deleted: boolean | string;\n}\n\n/**\n * Classe che contiene gli attributi che indicano l'area di appartenenza di un modulo (simple).\n */\nexport class SimpleAreaDTO {\n    area: string\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà dell'istanza di un teatro all'interno del node_templates.\n */\nexport class TheaterInstancePropertiesDTO {\n    mode: string\n    tags: TagTIP[]\n    areas: SimpleAreaDTO[]\n    author: string\n    version: string | number\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano un tag.\n */\nexport class TagTIP{\n    tag: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano in via generale le caratteristiche di un elemento che deve essere presente nel node_templates.\n */\nexport class ElementIntoTheaterDTO {  // goes into map in blueprint [name:string]: Module...\n    properties: ModuleInstancePropertiesDTO | TheaterInstancePropertiesDTO\n    type: string\n}\n\n\n/**\n * Classe che contiene gli attributi che indicano le caratteristiche di un teatro presente nel node_templates.\n */\nexport class ModuleInstanceDTO {\n    properties: ModuleInstancePropertiesDTO\n    type: string\n}\n/**\n * Classe che contiene gli attributi che indicano le caratteristiche di un modulo presente nel node_templates.\n */\nexport class TheaterInstanceDTO {\n    properties: TheaterInstancePropertiesDTO\n    type: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/ModuleExport.html":{"url":"classes/ModuleExport.html","title":"class - ModuleExport","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  ModuleExport\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsExport/moduleExport.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe utilizzata per l'export.\nContiene le informazioni generali per il modulo che devono esserci nello standard Tosca.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                capabilites\n                            \n                            \n                                description\n                            \n                            \n                                dsl_definition\n                            \n                            \n                                imports\n                            \n                            \n                                node_templates\n                            \n                            \n                                outputs\n                            \n                            \n                                tosca_definitions_version\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        capabilites\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     any | null\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dsl_definition\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     any | null\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        imports\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        node_templates\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     literal type\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        outputs\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     any | null\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tosca_definitions_version\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ToscaDefinitionType\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ModeTypeExport, ModuleTypeExport, NetworkTypeExport, NodeTypeExport, PortTypeExport, RelationshipsTypeExport, SubnetTypeExport, ToscaDefinitionType } from \"./TypeExport\"\n\n\n/**\n * Classe utilizzata per l'export. \n * Contiene le informazioni generali per il modulo che devono esserci nello standard Tosca.\n */\nexport class ModuleExport {\n    tosca_definitions_version: ToscaDefinitionType\n    description: string\n    imports: string[]\n    node_templates: { [name: string]: ModuleSimpleData | NodeSimpleData | PortSimpleData | NetworkSimpleData | SubnetSimpleData }\n    dsl_definition: any | null; //future\n    capabilites: any | null //future\n    outputs: any | null //future\n}\n\n/**\n * Classe che contiene gli attributi che indicano la rappresentazione del modulo per l'export.\n */\nexport class ModuleSimpleData {\n    type: ModuleTypeExport\n    properties: PropertiesMSD\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà del modulo per l'export.\n */\nexport class PropertiesMSD {\n    mode: ModeTypeExport\n    description: string\n    version: string | number\n    constraints: ConstraintsMSD\n    interface_networks: {\n        providers: InterfaceNetworksProvider[]\n        consumers: InterfaceNetworksConsumer[]\n    }\n    virtual_machines: VirtualMachine[]\n}\n/**\n * Classe che contiene gli attributi che indicano i vincoli di connessione del modulo per l'export.\n */\nexport class ConstraintsMSD {\n    interface_constraints: InterfaceConstraints[]\n    module_constraints: ModuleConstraints[]\n    network_constraints: NetworkConstraints[]\n}\n/**\n * Classe che contiene gli attributi che indicano i viconli per le interfacce di connessione del modulo.\n */\nexport class InterfaceConstraints {\n    local_interface: string\n    multiple_mode: boolean = false //future\n    module_name: string\n    compatibility: string = \"1.0\" // future\n    remote_interface: string\n}\n/**\n * Classe che contiene gli attributi che indicano i viconli del modulo.\n */\nexport class ModuleConstraints {\n}\n/**\n * Classe che contiene gli attributi che indicano i viconli dei network del modulo.\n */\nexport class NetworkConstraints {\n}\n/**\n * Classe che contiene gli attributi che indicano le interfacce provider del modulo.\n */\nexport class InterfaceNetworksProvider {\n    interface: string\n    network: string\n    tag: string\n    subnets: SubnetExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano le interfacce consumer del modulo.\n */\nexport class InterfaceNetworksConsumer {\n    interface: string\n    network: string\n    tag: string\n    subnets: SubnetExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano l'insieme di host presenti in un modulo.\n */\nexport class VirtualMachine {\n    virtual_machine: string\n    ports: VirtualMachinePorts[]\n}\n/**\n * Classe che contiene gli attributi che indicano le porte associate ad un host di un modulo.\n */\nexport class VirtualMachinePorts {\n    port: string\n    network: string\n    subnets: SubnetExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano la subnet connessa alla porte dell'host.\n * @see {VirtualMachinePorts}\n */\nexport class SubnetExport {\n    subnet: string;\n}\n\n/**\n * Classe che contiene gli attributi che indica un nodo all'interno dei node_templates.\n * @see {ModuleExport}\n */\nexport class NodeSimpleData {\n    type: NodeTypeExport\n    properties: any | null // future\n    interfaces: any | null // future\n    relationships: RelationshipsExport[]\n}\n\n/**\n * Classe che contiene gli attributi che indicano le relazioni generali.\n */\nexport class RelationshipsExport {\n    type: RelationshipsTypeExport\n    target: string\n}\n/**\n * Classe che contiene gli attributi che indicano i dati della porta all'interno dei node_templates.\n */\nexport class PortSimpleData {\n    type: PortTypeExport\n    relationships: RelationshipsExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano i dati delle network all'interno dei node_templates.\n */\nexport class NetworkSimpleData {\n    type: NetworkTypeExport\n    properties: PropertiesNSD\n}\n/**\n * Classe che contiene gli attributi che indicano le proprietà della network all'interno dei node_templates.\n * @see {NetworkSimpleData}\n */\nexport class PropertiesNSD {\n    openstack_config?: any | null // future\n    use_external_resource?: boolean | null // future\n    resource_id?: any | null // future\n}\n\n/**\n * Classe che contiene gli attributi che indicano i dati delle subnet all'interno dei node_templates.\n */\nexport class SubnetSimpleData {\n    type: SubnetTypeExport\n    relationships: RelationshipsExport[]\n    properties: PropertiesSSD\n}\n/**\n * Classe che contiene gli attributi che indicano le proprietà della subnet all'interno dei node_templates.\n * @see {NetworkSimpleData}\n */\nexport class PropertiesSSD {\n    subnet?: {\n        ip_version: string | number\n        cidr: string\n        enable_dhcp: boolean\n        gateway_ip?: any | null // future\n    }\n    openstack_config?: any | null // future\n    use_external_resource?: boolean | null // future\n    resource_id?: any | null // future\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/ModuleInstance.html":{"url":"classes/ModuleInstance.html","title":"class - ModuleInstance","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  ModuleInstance\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsApplication/applicationModels.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ModuleInstanceDTO\n            \n\n            \n                Implementa\n            \n            \n                            ModuleTopology\n            \n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                moduleInfo\n                            \n                            \n                                rete\n                            \n                            \n                                topology\n                            \n                            \n                                properties\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        moduleInfo\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         SimpleModuleApplication\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsApplication/applicationModels.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rete\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     ReteTheaterModuleInstanceInfo | ReteTheaterInternalServiceModuleInstanceInfo | ReteMirroringModuleInstanceInfo\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsApplication/applicationModels.ts:83\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        topology\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         NodeTopologyElement\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsApplication/applicationModels.ts:84\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        properties\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ModuleInstancePropertiesDTO\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleInstanceDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleInstanceDTO:227\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleInstanceDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleInstanceDTO:228\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ReteHostInfo } from \"src/app/rete-settings/nodes/rete-nodes/host/hostNode\";\nimport { ReteNetworkInfo } from \"src/app/rete-settings/nodes/rete-nodes/network/networkNode\";\nimport { ReteSubnetInfo } from \"src/app/rete-settings/nodes/rete-nodes/subnet/subnetNode\";\nimport { ReteMirroringModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/mirroringModuleInstance/mirroringModuleInstanceNode\";\nimport { ReteTheaterInternalServiceModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/theaterInternalServiceModuleInstance/theaterInternalServiceModuleInstanceNode\";\nimport { ReteTheaterModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/theaterModuleInstance/theaterModuleInstanceNode\";\nimport { FlavorBasicInfo } from \"../modelsDTO/falvorDTO\";\nimport { HostModuleDTO } from \"../modelsDTO/hostDTO\";\nimport { ModuleNetworkInterfaceDTO, ModuleInstancePropertiesDTO, SimpleModuleDTO, TheaterInstancePropertiesDTO, ModuleInstanceDTO, ModuleDTO, SimpleAreaDTO, AreaDTO } from \"../modelsDTO/moduleDTO\";\nimport { TheaterDTO } from \"../modelsDTO/theaterDTO\";\n\n\nexport interface CommonModule {\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n}\n\n\n/**\n * Classe contenente gli attributi utilizzati per le operazioni che coinvolgono i moduli.\n * ps. Questa struttura è prettamente utilizzata nella chiamata relativa al singolo modulo.\n */\nexport class ModuleApplication extends ModuleDTO implements CommonModule {\n    imports: string[] // perchè nell'export yaml è previsto\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n    // serve per validare il json risultante dal parsing del theaterApplication\n    validateObject?: string = \"module\";\n}\n// PER IMPLEMENTAZIONI FUTURE, PER COERENZA, PRENDERE DIRETTAMENTE I SINGOLI NODI DALLA CHIAMATA ESCLUSIVA E NON DA QUELLA CHE RESTITUISCE TUTTI I TEATRI\n/**\n * Classe contenente gli attributi utilizzati per le operazioni che coinvolgono i moduli.\n * ps. Questa struttura è prettamente utilizzata nella chiamata che prende tutti i moduli del teatro.\n */\nexport class SimpleModuleApplication extends SimpleModuleDTO implements CommonModule {\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n}\n\n\nexport class ReteConnection {\n    from: string;\n    port_src: string;\n    to: string;\n    port_dst: string;\n}\n\nexport interface TopologyList {\n    rete: any;\n    topology?: TopologyElement\n}\nexport class TopologyElement {\n    elements: { [name: string]: any };\n    connection: ReteConnection[]\n}\n\n// apptype module topology\n\nexport class NodeTopologyElement implements TopologyElement {\n    elements: { [hostName: string]: ReteHostInfo | ReteSubnetInfo | ReteNetworkInfo };\n    connection: ReteConnection[]\n}\n\nexport interface ModuleTopology extends TopologyList {\n    rete: ReteMirroringModuleInstanceInfo | ReteTheaterInternalServiceModuleInstanceInfo | ReteTheaterModuleInstanceInfo\n    topology: NodeTopologyElement;\n}\n\nexport class ModuleInstance extends ModuleInstanceDTO implements ModuleTopology {\n    // moduleTopology data\n    rete: ReteTheaterModuleInstanceInfo | ReteTheaterInternalServiceModuleInstanceInfo | ReteMirroringModuleInstanceInfo;\n    topology: NodeTopologyElement;\n    // other data\n    moduleInfo: SimpleModuleApplication\n}\n\n// apptype theater theater\n\nexport interface TheaterTopology extends TopologyElement {\n    elements: { [hostName: string]: ModuleInstance };\n    connection: ReteConnection[];\n}\n\nexport class TheaterApplication extends TheaterDTO implements TheaterTopology {\n    // theaterTopology data\n    elements: { [hostName: string]: ModuleInstance; };\n    connection: ReteConnection[];\n    // other data\n    properties: TheaterInstancePropertiesDTO;\n    topology: TheaterTopology;\n    // serve per validare il json risultante dal parsing del theaterApplication\n    validateObject?: string = \"theater\";\n}\n\nexport class AreaApplication extends AreaDTO {\n    color?: string;\n}\nexport class AreaColorDTO extends SimpleAreaDTO {\n    color: string;\n}\n\n\nexport class FlavorApplication extends FlavorBasicInfo {\n    flavorName: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/ModuleInstanceDTO.html":{"url":"classes/ModuleInstanceDTO.html","title":"class - ModuleInstanceDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  ModuleInstanceDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsDTO/moduleDTO.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano le caratteristiche di un teatro presente nel node_templates.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                properties\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        properties\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ModuleInstancePropertiesDTO\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:227\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:228\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PageableDTO, SortDTO } from './elementDTO';\nimport { NetworkDTO } from './networkDTO';\nimport { TheaterDTO } from './theaterDTO';\n\n/**\n * Classe che contiene gli attributi che indicano l'insieme dei moduli ritornati dal teatro.\n */\nexport class ModuleListDTO {\n    content: SimpleModuleDTO[]\n    pageable: PageableDTO\n    last: boolean\n    totalPages: string | number\n    totalElements: string | number\n    size: string | number\n    number: string | number\n    sort: SortDTO\n    numberOfElements: string | number\n    first: boolean\n    empty: boolean\n}\n\n/**\n * Classe che contiene gli attributi che indica il catalogo del tipo.\n */\nexport class TypesCatalogueDTO {\n    group: string\n    id: string | number\n    parentId: {}\n    value: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano la classificazione del modulo.\n */\nexport class ModuleClassificationDTO {\n    blueprintType: string\n    category: string\n    expectedInstanceType: string\n    id: string | number\n    mcClass: string\n    type: string\n    uuid: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano un parametro generico.\n */\nexport class GenericParameterDTO {\n    type: string\n    default: string\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano i parametri di configurazione di un modulto.\n */\nexport class ConfigurationTemplateDTO {\n    anchor_parameters: { [name: string]: GenericParameterDTO | string }\n    instance_parameters: { [name: string]: GenericParameterDTO }\n    structural_parameters: { [name: string]: GenericParameterDTO }\n    fixed_parameters: { [name: string]: GenericParameterDTO }\n    control_parameters: { [name: string]: GenericParameterDTO }\n    infrastructure_parameters: { [name: string]: GenericParameterDTO }\n    module: string\n    description: string\n    category: string\n    version: string | number\n    platform: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano la modalità di un modulo.\n */\nexport class ModuleModeDTO {\n    code: string\n    id: string | number\n    name: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano lo stato di un modulo.\n */\nexport class ModuleStatusDTO {\n    descriptionCode: string\n    id: string | number\n    name: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le statitistiche di un modulo.\n */\nexport class StatisticItemDTO {\n    error: string | number\n    updated: string | number\n    inserted: string | number\n}\n\n/**\n * Classe che contiene gli attributi che indicano il modulo (simple - in dipendenza del teatro).\n */\nexport class SimpleModuleDTO {\n    createdBy: string\n    createdDate: string\n    description: string\n    id: string | number\n    isLocked: boolean\n    lastModifiedBy: string\n    lastModifiedDate: string\n    lockAcquiredTimestamp: string\n    lockLastUserAcquiring: string\n    lockReleasedTimestamp: string\n    name: string\n    status: ModuleStatusDTO\n    type?: string | any\n    uuid: string\n    version: string | number\n}\n\n/**\n * Classe che contiene gli attributi che indicano il modulo (complex - ritorato da call appostita).\n * @extends {SimpleModuleDTO}\n */\nexport class ModuleDTO extends SimpleModuleDTO {\n    attachments: string[]\n    author: string\n    capabilities: { [name: string]: string }\n    catalog1: TypesCatalogueDTO\n    catalog2: TypesCatalogueDTO\n    catalog3: TypesCatalogueDTO\n    classification: ModuleClassificationDTO\n    configurationTemplate: ConfigurationTemplateDTO\n    detailProperties: {}\n    input: { [name: string]: string }\n    output: { [name: string]: string }\n    mode: ModuleModeDTO\n    statistics: { [name: string]: StatisticItemDTO | string | number }\n    tags: []\n}\n\n/**\n * Classe che contiene gli attributi che indicano le interfacce esposte da un modulo.\n */\nexport class ModuleNetworkInterfaceDTO {\n    id: string | number\n    label: string\n    module: ModuleDTO\n    network: NetworkDTO\n    nodeName: string\n    type: string\n    uuid: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le connessioni interfaccia-modulo.\n */\nexport class ConsumerInterfaceLinkDTO {\n    local_interface: string\n    module_instance: string\n    remote_interface: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà dell'istanza di un modulo all'interno del node_templates.\n */\nexport class ModuleInstancePropertiesDTO {\n    area: string\n    description: string\n    module: string\n    version: string | number\n    sequence: string | number\n    consumer_interfaces_link: ConsumerInterfaceLinkDTO[]\n}\n\n\n/**\n * Classe che contiene gli attributi che indicano l'area di appartenenza di un modulo (complex).\n */\nexport class AreaDTO {\n    id: string | number;\n    uuid: string;\n    name: string;\n    description: string;\n    theater: TheaterDTO;\n    deleted: boolean | string;\n}\n\n/**\n * Classe che contiene gli attributi che indicano l'area di appartenenza di un modulo (simple).\n */\nexport class SimpleAreaDTO {\n    area: string\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà dell'istanza di un teatro all'interno del node_templates.\n */\nexport class TheaterInstancePropertiesDTO {\n    mode: string\n    tags: TagTIP[]\n    areas: SimpleAreaDTO[]\n    author: string\n    version: string | number\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano un tag.\n */\nexport class TagTIP{\n    tag: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano in via generale le caratteristiche di un elemento che deve essere presente nel node_templates.\n */\nexport class ElementIntoTheaterDTO {  // goes into map in blueprint [name:string]: Module...\n    properties: ModuleInstancePropertiesDTO | TheaterInstancePropertiesDTO\n    type: string\n}\n\n\n/**\n * Classe che contiene gli attributi che indicano le caratteristiche di un teatro presente nel node_templates.\n */\nexport class ModuleInstanceDTO {\n    properties: ModuleInstancePropertiesDTO\n    type: string\n}\n/**\n * Classe che contiene gli attributi che indicano le caratteristiche di un modulo presente nel node_templates.\n */\nexport class TheaterInstanceDTO {\n    properties: TheaterInstancePropertiesDTO\n    type: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/ModuleInstancePropertiesDTO.html":{"url":"classes/ModuleInstancePropertiesDTO.html","title":"class - ModuleInstancePropertiesDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  ModuleInstancePropertiesDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsDTO/moduleDTO.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano le proprietà dell'istanza di un modulo all'interno del node_templates.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                area\n                            \n                            \n                                consumer_interfaces_link\n                            \n                            \n                                description\n                            \n                            \n                                module\n                            \n                            \n                                sequence\n                            \n                            \n                                version\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        area\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:166\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        consumer_interfaces_link\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ConsumerInterfaceLinkDTO[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:171\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:167\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:168\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sequence\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:170\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:169\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PageableDTO, SortDTO } from './elementDTO';\nimport { NetworkDTO } from './networkDTO';\nimport { TheaterDTO } from './theaterDTO';\n\n/**\n * Classe che contiene gli attributi che indicano l'insieme dei moduli ritornati dal teatro.\n */\nexport class ModuleListDTO {\n    content: SimpleModuleDTO[]\n    pageable: PageableDTO\n    last: boolean\n    totalPages: string | number\n    totalElements: string | number\n    size: string | number\n    number: string | number\n    sort: SortDTO\n    numberOfElements: string | number\n    first: boolean\n    empty: boolean\n}\n\n/**\n * Classe che contiene gli attributi che indica il catalogo del tipo.\n */\nexport class TypesCatalogueDTO {\n    group: string\n    id: string | number\n    parentId: {}\n    value: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano la classificazione del modulo.\n */\nexport class ModuleClassificationDTO {\n    blueprintType: string\n    category: string\n    expectedInstanceType: string\n    id: string | number\n    mcClass: string\n    type: string\n    uuid: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano un parametro generico.\n */\nexport class GenericParameterDTO {\n    type: string\n    default: string\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano i parametri di configurazione di un modulto.\n */\nexport class ConfigurationTemplateDTO {\n    anchor_parameters: { [name: string]: GenericParameterDTO | string }\n    instance_parameters: { [name: string]: GenericParameterDTO }\n    structural_parameters: { [name: string]: GenericParameterDTO }\n    fixed_parameters: { [name: string]: GenericParameterDTO }\n    control_parameters: { [name: string]: GenericParameterDTO }\n    infrastructure_parameters: { [name: string]: GenericParameterDTO }\n    module: string\n    description: string\n    category: string\n    version: string | number\n    platform: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano la modalità di un modulo.\n */\nexport class ModuleModeDTO {\n    code: string\n    id: string | number\n    name: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano lo stato di un modulo.\n */\nexport class ModuleStatusDTO {\n    descriptionCode: string\n    id: string | number\n    name: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le statitistiche di un modulo.\n */\nexport class StatisticItemDTO {\n    error: string | number\n    updated: string | number\n    inserted: string | number\n}\n\n/**\n * Classe che contiene gli attributi che indicano il modulo (simple - in dipendenza del teatro).\n */\nexport class SimpleModuleDTO {\n    createdBy: string\n    createdDate: string\n    description: string\n    id: string | number\n    isLocked: boolean\n    lastModifiedBy: string\n    lastModifiedDate: string\n    lockAcquiredTimestamp: string\n    lockLastUserAcquiring: string\n    lockReleasedTimestamp: string\n    name: string\n    status: ModuleStatusDTO\n    type?: string | any\n    uuid: string\n    version: string | number\n}\n\n/**\n * Classe che contiene gli attributi che indicano il modulo (complex - ritorato da call appostita).\n * @extends {SimpleModuleDTO}\n */\nexport class ModuleDTO extends SimpleModuleDTO {\n    attachments: string[]\n    author: string\n    capabilities: { [name: string]: string }\n    catalog1: TypesCatalogueDTO\n    catalog2: TypesCatalogueDTO\n    catalog3: TypesCatalogueDTO\n    classification: ModuleClassificationDTO\n    configurationTemplate: ConfigurationTemplateDTO\n    detailProperties: {}\n    input: { [name: string]: string }\n    output: { [name: string]: string }\n    mode: ModuleModeDTO\n    statistics: { [name: string]: StatisticItemDTO | string | number }\n    tags: []\n}\n\n/**\n * Classe che contiene gli attributi che indicano le interfacce esposte da un modulo.\n */\nexport class ModuleNetworkInterfaceDTO {\n    id: string | number\n    label: string\n    module: ModuleDTO\n    network: NetworkDTO\n    nodeName: string\n    type: string\n    uuid: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le connessioni interfaccia-modulo.\n */\nexport class ConsumerInterfaceLinkDTO {\n    local_interface: string\n    module_instance: string\n    remote_interface: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà dell'istanza di un modulo all'interno del node_templates.\n */\nexport class ModuleInstancePropertiesDTO {\n    area: string\n    description: string\n    module: string\n    version: string | number\n    sequence: string | number\n    consumer_interfaces_link: ConsumerInterfaceLinkDTO[]\n}\n\n\n/**\n * Classe che contiene gli attributi che indicano l'area di appartenenza di un modulo (complex).\n */\nexport class AreaDTO {\n    id: string | number;\n    uuid: string;\n    name: string;\n    description: string;\n    theater: TheaterDTO;\n    deleted: boolean | string;\n}\n\n/**\n * Classe che contiene gli attributi che indicano l'area di appartenenza di un modulo (simple).\n */\nexport class SimpleAreaDTO {\n    area: string\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà dell'istanza di un teatro all'interno del node_templates.\n */\nexport class TheaterInstancePropertiesDTO {\n    mode: string\n    tags: TagTIP[]\n    areas: SimpleAreaDTO[]\n    author: string\n    version: string | number\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano un tag.\n */\nexport class TagTIP{\n    tag: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano in via generale le caratteristiche di un elemento che deve essere presente nel node_templates.\n */\nexport class ElementIntoTheaterDTO {  // goes into map in blueprint [name:string]: Module...\n    properties: ModuleInstancePropertiesDTO | TheaterInstancePropertiesDTO\n    type: string\n}\n\n\n/**\n * Classe che contiene gli attributi che indicano le caratteristiche di un teatro presente nel node_templates.\n */\nexport class ModuleInstanceDTO {\n    properties: ModuleInstancePropertiesDTO\n    type: string\n}\n/**\n * Classe che contiene gli attributi che indicano le caratteristiche di un modulo presente nel node_templates.\n */\nexport class TheaterInstanceDTO {\n    properties: TheaterInstancePropertiesDTO\n    type: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/ModuleInstanceSimpleData.html":{"url":"classes/ModuleInstanceSimpleData.html","title":"class - ModuleInstanceSimpleData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  ModuleInstanceSimpleData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsExport/theaterExport.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano il modulo all'interno dei node_modules.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                properties\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        properties\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         PropertiesMISD\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/theaterExport.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ModuleTypeExport\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/theaterExport.ts:51\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ModeTypeExport, ModuleTypeExport, TheaterTypeExport, ToscaDefinitionType } from \"./TypeExport\"\n\n/**\n * Classe utilizzata per l'export. \n * Contiene le informazioni generali per il teatro che devono esserci nello standard Tosca.\n */\nexport class TheaterExport {\n    tosca_definitions_version: ToscaDefinitionType\n    description: string\n    imports: string[]\n    node_templates: { [name: string]: TheaterSimpleData | ModuleInstanceSimpleData }\n}\n/**\n * Classe che contiene gli attributi che indicano il teatro all'interno dei node_templates.\n */\nexport class TheaterSimpleData {\n    type: TheaterTypeExport\n    properties: PropertiesTSD\n}\n/**\n * Classe che contiene gli attributi che indicano le proprietà del teatro.\n */\nexport class PropertiesTSD {\n    version: string | number\n    description: string\n    mode: ModeTypeExport\n    author: string\n    tags: TagsExport[]\n    areas: AreaExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano i tag nelle proprietà del teatro.\n * @see {PropertiesTSD}\n */\nexport class TagsExport {\n    tag: string\n}\n/**\n * Classe che contiene gli attributi che indicano le aree nelle proprietà del teatr.\n * @see {PropertiesTSD}\n */\nexport class AreaExport {\n    area: string\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano il modulo all'interno dei node_modules.\n */\nexport class ModuleInstanceSimpleData {\n    type: ModuleTypeExport\n    properties: PropertiesMISD\n}\n/**\n * Classe che contiene gli attributi che indicano le propeitò del modulo all'interno dei node_templates.\n */\nexport class PropertiesMISD{\n    module: string\n    version: string | number\n    area: string\n    sequence: number\n    sources?: SourceExport[]\n    consumer_interface_link: ConsumerInterfaceLinkExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano le porte di ingresso del modulo all'interno dei node_templates.\n */\nexport class SourceExport{\n    module_instance: string\n    host:string\n    interfaces: string[]\n}\n/**\n * Classe che contiene gli attributi che indicano i collegamenti e relazioni intramodulo con le varie interfacce.\n */\nexport class ConsumerInterfaceLinkExport{\n    local_interface: string\n    module_interface:string\n    remote_interface:string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/ModuleListDTO.html":{"url":"classes/ModuleListDTO.html","title":"class - ModuleListDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  ModuleListDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsDTO/moduleDTO.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano l'insieme dei moduli ritornati dal teatro.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                empty\n                            \n                            \n                                first\n                            \n                            \n                                last\n                            \n                            \n                                number\n                            \n                            \n                                numberOfElements\n                            \n                            \n                                pageable\n                            \n                            \n                                size\n                            \n                            \n                                sort\n                            \n                            \n                                totalElements\n                            \n                            \n                                totalPages\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     SimpleModuleDTO[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        empty\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        first\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        last\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        number\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        numberOfElements\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pageable\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         PageableDTO\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        size\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sort\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         SortDTO\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalElements\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalPages\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PageableDTO, SortDTO } from './elementDTO';\nimport { NetworkDTO } from './networkDTO';\nimport { TheaterDTO } from './theaterDTO';\n\n/**\n * Classe che contiene gli attributi che indicano l'insieme dei moduli ritornati dal teatro.\n */\nexport class ModuleListDTO {\n    content: SimpleModuleDTO[]\n    pageable: PageableDTO\n    last: boolean\n    totalPages: string | number\n    totalElements: string | number\n    size: string | number\n    number: string | number\n    sort: SortDTO\n    numberOfElements: string | number\n    first: boolean\n    empty: boolean\n}\n\n/**\n * Classe che contiene gli attributi che indica il catalogo del tipo.\n */\nexport class TypesCatalogueDTO {\n    group: string\n    id: string | number\n    parentId: {}\n    value: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano la classificazione del modulo.\n */\nexport class ModuleClassificationDTO {\n    blueprintType: string\n    category: string\n    expectedInstanceType: string\n    id: string | number\n    mcClass: string\n    type: string\n    uuid: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano un parametro generico.\n */\nexport class GenericParameterDTO {\n    type: string\n    default: string\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano i parametri di configurazione di un modulto.\n */\nexport class ConfigurationTemplateDTO {\n    anchor_parameters: { [name: string]: GenericParameterDTO | string }\n    instance_parameters: { [name: string]: GenericParameterDTO }\n    structural_parameters: { [name: string]: GenericParameterDTO }\n    fixed_parameters: { [name: string]: GenericParameterDTO }\n    control_parameters: { [name: string]: GenericParameterDTO }\n    infrastructure_parameters: { [name: string]: GenericParameterDTO }\n    module: string\n    description: string\n    category: string\n    version: string | number\n    platform: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano la modalità di un modulo.\n */\nexport class ModuleModeDTO {\n    code: string\n    id: string | number\n    name: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano lo stato di un modulo.\n */\nexport class ModuleStatusDTO {\n    descriptionCode: string\n    id: string | number\n    name: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le statitistiche di un modulo.\n */\nexport class StatisticItemDTO {\n    error: string | number\n    updated: string | number\n    inserted: string | number\n}\n\n/**\n * Classe che contiene gli attributi che indicano il modulo (simple - in dipendenza del teatro).\n */\nexport class SimpleModuleDTO {\n    createdBy: string\n    createdDate: string\n    description: string\n    id: string | number\n    isLocked: boolean\n    lastModifiedBy: string\n    lastModifiedDate: string\n    lockAcquiredTimestamp: string\n    lockLastUserAcquiring: string\n    lockReleasedTimestamp: string\n    name: string\n    status: ModuleStatusDTO\n    type?: string | any\n    uuid: string\n    version: string | number\n}\n\n/**\n * Classe che contiene gli attributi che indicano il modulo (complex - ritorato da call appostita).\n * @extends {SimpleModuleDTO}\n */\nexport class ModuleDTO extends SimpleModuleDTO {\n    attachments: string[]\n    author: string\n    capabilities: { [name: string]: string }\n    catalog1: TypesCatalogueDTO\n    catalog2: TypesCatalogueDTO\n    catalog3: TypesCatalogueDTO\n    classification: ModuleClassificationDTO\n    configurationTemplate: ConfigurationTemplateDTO\n    detailProperties: {}\n    input: { [name: string]: string }\n    output: { [name: string]: string }\n    mode: ModuleModeDTO\n    statistics: { [name: string]: StatisticItemDTO | string | number }\n    tags: []\n}\n\n/**\n * Classe che contiene gli attributi che indicano le interfacce esposte da un modulo.\n */\nexport class ModuleNetworkInterfaceDTO {\n    id: string | number\n    label: string\n    module: ModuleDTO\n    network: NetworkDTO\n    nodeName: string\n    type: string\n    uuid: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le connessioni interfaccia-modulo.\n */\nexport class ConsumerInterfaceLinkDTO {\n    local_interface: string\n    module_instance: string\n    remote_interface: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà dell'istanza di un modulo all'interno del node_templates.\n */\nexport class ModuleInstancePropertiesDTO {\n    area: string\n    description: string\n    module: string\n    version: string | number\n    sequence: string | number\n    consumer_interfaces_link: ConsumerInterfaceLinkDTO[]\n}\n\n\n/**\n * Classe che contiene gli attributi che indicano l'area di appartenenza di un modulo (complex).\n */\nexport class AreaDTO {\n    id: string | number;\n    uuid: string;\n    name: string;\n    description: string;\n    theater: TheaterDTO;\n    deleted: boolean | string;\n}\n\n/**\n * Classe che contiene gli attributi che indicano l'area di appartenenza di un modulo (simple).\n */\nexport class SimpleAreaDTO {\n    area: string\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà dell'istanza di un teatro all'interno del node_templates.\n */\nexport class TheaterInstancePropertiesDTO {\n    mode: string\n    tags: TagTIP[]\n    areas: SimpleAreaDTO[]\n    author: string\n    version: string | number\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano un tag.\n */\nexport class TagTIP{\n    tag: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano in via generale le caratteristiche di un elemento che deve essere presente nel node_templates.\n */\nexport class ElementIntoTheaterDTO {  // goes into map in blueprint [name:string]: Module...\n    properties: ModuleInstancePropertiesDTO | TheaterInstancePropertiesDTO\n    type: string\n}\n\n\n/**\n * Classe che contiene gli attributi che indicano le caratteristiche di un teatro presente nel node_templates.\n */\nexport class ModuleInstanceDTO {\n    properties: ModuleInstancePropertiesDTO\n    type: string\n}\n/**\n * Classe che contiene gli attributi che indicano le caratteristiche di un modulo presente nel node_templates.\n */\nexport class TheaterInstanceDTO {\n    properties: TheaterInstancePropertiesDTO\n    type: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/ModuleModeDTO.html":{"url":"classes/ModuleModeDTO.html","title":"class - ModuleModeDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  ModuleModeDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsDTO/moduleDTO.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano la modalità di un modulo.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                code\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:77\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PageableDTO, SortDTO } from './elementDTO';\nimport { NetworkDTO } from './networkDTO';\nimport { TheaterDTO } from './theaterDTO';\n\n/**\n * Classe che contiene gli attributi che indicano l'insieme dei moduli ritornati dal teatro.\n */\nexport class ModuleListDTO {\n    content: SimpleModuleDTO[]\n    pageable: PageableDTO\n    last: boolean\n    totalPages: string | number\n    totalElements: string | number\n    size: string | number\n    number: string | number\n    sort: SortDTO\n    numberOfElements: string | number\n    first: boolean\n    empty: boolean\n}\n\n/**\n * Classe che contiene gli attributi che indica il catalogo del tipo.\n */\nexport class TypesCatalogueDTO {\n    group: string\n    id: string | number\n    parentId: {}\n    value: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano la classificazione del modulo.\n */\nexport class ModuleClassificationDTO {\n    blueprintType: string\n    category: string\n    expectedInstanceType: string\n    id: string | number\n    mcClass: string\n    type: string\n    uuid: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano un parametro generico.\n */\nexport class GenericParameterDTO {\n    type: string\n    default: string\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano i parametri di configurazione di un modulto.\n */\nexport class ConfigurationTemplateDTO {\n    anchor_parameters: { [name: string]: GenericParameterDTO | string }\n    instance_parameters: { [name: string]: GenericParameterDTO }\n    structural_parameters: { [name: string]: GenericParameterDTO }\n    fixed_parameters: { [name: string]: GenericParameterDTO }\n    control_parameters: { [name: string]: GenericParameterDTO }\n    infrastructure_parameters: { [name: string]: GenericParameterDTO }\n    module: string\n    description: string\n    category: string\n    version: string | number\n    platform: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano la modalità di un modulo.\n */\nexport class ModuleModeDTO {\n    code: string\n    id: string | number\n    name: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano lo stato di un modulo.\n */\nexport class ModuleStatusDTO {\n    descriptionCode: string\n    id: string | number\n    name: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le statitistiche di un modulo.\n */\nexport class StatisticItemDTO {\n    error: string | number\n    updated: string | number\n    inserted: string | number\n}\n\n/**\n * Classe che contiene gli attributi che indicano il modulo (simple - in dipendenza del teatro).\n */\nexport class SimpleModuleDTO {\n    createdBy: string\n    createdDate: string\n    description: string\n    id: string | number\n    isLocked: boolean\n    lastModifiedBy: string\n    lastModifiedDate: string\n    lockAcquiredTimestamp: string\n    lockLastUserAcquiring: string\n    lockReleasedTimestamp: string\n    name: string\n    status: ModuleStatusDTO\n    type?: string | any\n    uuid: string\n    version: string | number\n}\n\n/**\n * Classe che contiene gli attributi che indicano il modulo (complex - ritorato da call appostita).\n * @extends {SimpleModuleDTO}\n */\nexport class ModuleDTO extends SimpleModuleDTO {\n    attachments: string[]\n    author: string\n    capabilities: { [name: string]: string }\n    catalog1: TypesCatalogueDTO\n    catalog2: TypesCatalogueDTO\n    catalog3: TypesCatalogueDTO\n    classification: ModuleClassificationDTO\n    configurationTemplate: ConfigurationTemplateDTO\n    detailProperties: {}\n    input: { [name: string]: string }\n    output: { [name: string]: string }\n    mode: ModuleModeDTO\n    statistics: { [name: string]: StatisticItemDTO | string | number }\n    tags: []\n}\n\n/**\n * Classe che contiene gli attributi che indicano le interfacce esposte da un modulo.\n */\nexport class ModuleNetworkInterfaceDTO {\n    id: string | number\n    label: string\n    module: ModuleDTO\n    network: NetworkDTO\n    nodeName: string\n    type: string\n    uuid: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le connessioni interfaccia-modulo.\n */\nexport class ConsumerInterfaceLinkDTO {\n    local_interface: string\n    module_instance: string\n    remote_interface: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà dell'istanza di un modulo all'interno del node_templates.\n */\nexport class ModuleInstancePropertiesDTO {\n    area: string\n    description: string\n    module: string\n    version: string | number\n    sequence: string | number\n    consumer_interfaces_link: ConsumerInterfaceLinkDTO[]\n}\n\n\n/**\n * Classe che contiene gli attributi che indicano l'area di appartenenza di un modulo (complex).\n */\nexport class AreaDTO {\n    id: string | number;\n    uuid: string;\n    name: string;\n    description: string;\n    theater: TheaterDTO;\n    deleted: boolean | string;\n}\n\n/**\n * Classe che contiene gli attributi che indicano l'area di appartenenza di un modulo (simple).\n */\nexport class SimpleAreaDTO {\n    area: string\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà dell'istanza di un teatro all'interno del node_templates.\n */\nexport class TheaterInstancePropertiesDTO {\n    mode: string\n    tags: TagTIP[]\n    areas: SimpleAreaDTO[]\n    author: string\n    version: string | number\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano un tag.\n */\nexport class TagTIP{\n    tag: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano in via generale le caratteristiche di un elemento che deve essere presente nel node_templates.\n */\nexport class ElementIntoTheaterDTO {  // goes into map in blueprint [name:string]: Module...\n    properties: ModuleInstancePropertiesDTO | TheaterInstancePropertiesDTO\n    type: string\n}\n\n\n/**\n * Classe che contiene gli attributi che indicano le caratteristiche di un teatro presente nel node_templates.\n */\nexport class ModuleInstanceDTO {\n    properties: ModuleInstancePropertiesDTO\n    type: string\n}\n/**\n * Classe che contiene gli attributi che indicano le caratteristiche di un modulo presente nel node_templates.\n */\nexport class TheaterInstanceDTO {\n    properties: TheaterInstancePropertiesDTO\n    type: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/ModuleNetworkInterfaceDTO.html":{"url":"classes/ModuleNetworkInterfaceDTO.html","title":"class - ModuleNetworkInterfaceDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  ModuleNetworkInterfaceDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsDTO/moduleDTO.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano le interfacce esposte da un modulo.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                label\n                            \n                            \n                                module\n                            \n                            \n                                network\n                            \n                            \n                                nodeName\n                            \n                            \n                                type\n                            \n                            \n                                uuid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:144\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        label\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:145\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ModuleDTO\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:146\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        network\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         NetworkDTO\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:147\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nodeName\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:148\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:149\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uuid\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:150\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PageableDTO, SortDTO } from './elementDTO';\nimport { NetworkDTO } from './networkDTO';\nimport { TheaterDTO } from './theaterDTO';\n\n/**\n * Classe che contiene gli attributi che indicano l'insieme dei moduli ritornati dal teatro.\n */\nexport class ModuleListDTO {\n    content: SimpleModuleDTO[]\n    pageable: PageableDTO\n    last: boolean\n    totalPages: string | number\n    totalElements: string | number\n    size: string | number\n    number: string | number\n    sort: SortDTO\n    numberOfElements: string | number\n    first: boolean\n    empty: boolean\n}\n\n/**\n * Classe che contiene gli attributi che indica il catalogo del tipo.\n */\nexport class TypesCatalogueDTO {\n    group: string\n    id: string | number\n    parentId: {}\n    value: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano la classificazione del modulo.\n */\nexport class ModuleClassificationDTO {\n    blueprintType: string\n    category: string\n    expectedInstanceType: string\n    id: string | number\n    mcClass: string\n    type: string\n    uuid: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano un parametro generico.\n */\nexport class GenericParameterDTO {\n    type: string\n    default: string\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano i parametri di configurazione di un modulto.\n */\nexport class ConfigurationTemplateDTO {\n    anchor_parameters: { [name: string]: GenericParameterDTO | string }\n    instance_parameters: { [name: string]: GenericParameterDTO }\n    structural_parameters: { [name: string]: GenericParameterDTO }\n    fixed_parameters: { [name: string]: GenericParameterDTO }\n    control_parameters: { [name: string]: GenericParameterDTO }\n    infrastructure_parameters: { [name: string]: GenericParameterDTO }\n    module: string\n    description: string\n    category: string\n    version: string | number\n    platform: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano la modalità di un modulo.\n */\nexport class ModuleModeDTO {\n    code: string\n    id: string | number\n    name: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano lo stato di un modulo.\n */\nexport class ModuleStatusDTO {\n    descriptionCode: string\n    id: string | number\n    name: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le statitistiche di un modulo.\n */\nexport class StatisticItemDTO {\n    error: string | number\n    updated: string | number\n    inserted: string | number\n}\n\n/**\n * Classe che contiene gli attributi che indicano il modulo (simple - in dipendenza del teatro).\n */\nexport class SimpleModuleDTO {\n    createdBy: string\n    createdDate: string\n    description: string\n    id: string | number\n    isLocked: boolean\n    lastModifiedBy: string\n    lastModifiedDate: string\n    lockAcquiredTimestamp: string\n    lockLastUserAcquiring: string\n    lockReleasedTimestamp: string\n    name: string\n    status: ModuleStatusDTO\n    type?: string | any\n    uuid: string\n    version: string | number\n}\n\n/**\n * Classe che contiene gli attributi che indicano il modulo (complex - ritorato da call appostita).\n * @extends {SimpleModuleDTO}\n */\nexport class ModuleDTO extends SimpleModuleDTO {\n    attachments: string[]\n    author: string\n    capabilities: { [name: string]: string }\n    catalog1: TypesCatalogueDTO\n    catalog2: TypesCatalogueDTO\n    catalog3: TypesCatalogueDTO\n    classification: ModuleClassificationDTO\n    configurationTemplate: ConfigurationTemplateDTO\n    detailProperties: {}\n    input: { [name: string]: string }\n    output: { [name: string]: string }\n    mode: ModuleModeDTO\n    statistics: { [name: string]: StatisticItemDTO | string | number }\n    tags: []\n}\n\n/**\n * Classe che contiene gli attributi che indicano le interfacce esposte da un modulo.\n */\nexport class ModuleNetworkInterfaceDTO {\n    id: string | number\n    label: string\n    module: ModuleDTO\n    network: NetworkDTO\n    nodeName: string\n    type: string\n    uuid: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le connessioni interfaccia-modulo.\n */\nexport class ConsumerInterfaceLinkDTO {\n    local_interface: string\n    module_instance: string\n    remote_interface: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà dell'istanza di un modulo all'interno del node_templates.\n */\nexport class ModuleInstancePropertiesDTO {\n    area: string\n    description: string\n    module: string\n    version: string | number\n    sequence: string | number\n    consumer_interfaces_link: ConsumerInterfaceLinkDTO[]\n}\n\n\n/**\n * Classe che contiene gli attributi che indicano l'area di appartenenza di un modulo (complex).\n */\nexport class AreaDTO {\n    id: string | number;\n    uuid: string;\n    name: string;\n    description: string;\n    theater: TheaterDTO;\n    deleted: boolean | string;\n}\n\n/**\n * Classe che contiene gli attributi che indicano l'area di appartenenza di un modulo (simple).\n */\nexport class SimpleAreaDTO {\n    area: string\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà dell'istanza di un teatro all'interno del node_templates.\n */\nexport class TheaterInstancePropertiesDTO {\n    mode: string\n    tags: TagTIP[]\n    areas: SimpleAreaDTO[]\n    author: string\n    version: string | number\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano un tag.\n */\nexport class TagTIP{\n    tag: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano in via generale le caratteristiche di un elemento che deve essere presente nel node_templates.\n */\nexport class ElementIntoTheaterDTO {  // goes into map in blueprint [name:string]: Module...\n    properties: ModuleInstancePropertiesDTO | TheaterInstancePropertiesDTO\n    type: string\n}\n\n\n/**\n * Classe che contiene gli attributi che indicano le caratteristiche di un teatro presente nel node_templates.\n */\nexport class ModuleInstanceDTO {\n    properties: ModuleInstancePropertiesDTO\n    type: string\n}\n/**\n * Classe che contiene gli attributi che indicano le caratteristiche di un modulo presente nel node_templates.\n */\nexport class TheaterInstanceDTO {\n    properties: TheaterInstancePropertiesDTO\n    type: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"injectables/ModuleService.html":{"url":"injectables/ModuleService.html","title":"injectable - ModuleService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ModuleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/api/module.service.ts\n        \n\n\n\n\n\n            \n    Indice\n    \n        \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getAllModules\n                            \n                            \n                                    Async\n                                getAllModulesPage\n                            \n                            \n                                    Async\n                                getModuleByID\n                            \n                            \n                                    Async\n                                getModuleHostByTheaterUUID\n                            \n                            \n                                    Async\n                                getModuleInterfacesByModuleID\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Costruttore\n        \n            \n                \n                    \nconstructor(http: HttpClient, tokenService: TokenService)\n                    \n                \n                        \n                            \n                                Definito in src/app/services/api/module.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parametri :\n                                    \n                                        \n                                            \n                                                Nome\n                                                    Tipo\n                                                Opzionale\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tokenService\n                                                  \n                                                        \n                                                                        TokenService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllModules\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllModules()\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/api/module.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllModulesPage\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllModulesPage(pageindex: number)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/api/module.service.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    pageindex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getModuleByID\n                        \n                    \n                \n            \n            \n                \n                    \n                    getModuleByID(id: string | number)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/api/module.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            string | number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getModuleHostByTheaterUUID\n                        \n                    \n                \n            \n            \n                \n                    \n                    getModuleHostByTheaterUUID(theater_uuid: number | string)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/api/module.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    theater_uuid\n                                    \n                                            number | string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getModuleInterfacesByModuleID\n                        \n                    \n                \n            \n            \n                \n                    \n                    getModuleInterfacesByModuleID(module_id: number | string)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/api/module.service.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    module_id\n                                    \n                                            number | string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { HostModuleDTO } from '../modelsDTO/hostDTO';\nimport { ModuleDTO, ModuleListDTO, ModuleNetworkInterfaceDTO, SimpleModuleDTO } from '../modelsDTO/moduleDTO';\nimport { TokenService } from '../token/token.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ModuleService {\n\n  constructor(private http: HttpClient, private tokenService: TokenService) { }\n\n  async getModuleByID(id: string | number): Promise {\n\n    let link: string = environment.getAllModules + \"/\" + id;\n\n    const promise = await new Promise((resolve, reject) => {\n      this.http.get\n        (\n          link,\n          this.tokenService.getHttpgetOption()\n        )\n        .toPromise()\n        .then(\n          (res: ModuleDTO) => {\n            resolve(res);\n          }\n        )\n        .catch(\n          error => {\n            reject(error);\n          }\n        );\n    }\n    );\n    return promise;\n  }\n\n  async getAllModules(): Promise {\n    let x: SimpleModuleDTO[] = [];\n    let currentpage = 0, endpage = 1; // at least 1 page \n    while (currentpage  {\n\n    let link: string = environment.getModulesHostsByTheaterUUID + (theater_uuid as unknown as string) + environment.GMHhost;\n\n    const promise = await new Promise((resolve, reject) => {\n      this.http.get\n        (\n          link,\n          this.tokenService.getHttpgetOption()\n        )\n        .toPromise()\n        .then(\n          (res: HostModuleDTO[]) => {\n            resolve(res);\n          }\n        )\n        .catch(\n          error => {\n            reject(error);\n          }\n        );\n    }\n    );\n    return promise;\n  }\n\n  async getModuleInterfacesByModuleID(module_id: number | string): Promise {\n\n    let link: string = environment.getModuleInterfacesByModuleID + (module_id as unknown as string);\n\n    const promise = await new Promise((resolve, reject) => {\n      this.http.get\n        (\n          link,\n          this.tokenService.getHttpgetOption()\n        )\n        .toPromise()\n        .then(\n          (res: ModuleNetworkInterfaceDTO[]) => {\n            resolve(res);\n          }\n        )\n        .catch(\n          error => {\n            reject(error);\n          }\n        );\n    }\n    );\n    return promise;\n  }\n\n  async getAllModulesPage(pageindex: number): Promise {\n\n    let link: string = environment.getAllModules + '?page=' + (pageindex ? pageindex : 0);\n\n    const promise = await new Promise((resolve, reject) => {\n      this.http.get\n        (\n          link,\n          this.tokenService.getHttpgetOption()\n        )\n        .toPromise()\n        .then(\n          (res: ModuleListDTO) => {\n            resolve(res);\n          }\n        )\n        .catch(\n          error => {\n            reject(error);\n          }\n        );\n    }\n    );\n    return promise;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/ModuleSimpleData.html":{"url":"classes/ModuleSimpleData.html","title":"class - ModuleSimpleData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  ModuleSimpleData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsExport/moduleExport.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano la rappresentazione del modulo per l'export.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                properties\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        properties\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         PropertiesMSD\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ModuleTypeExport\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ModeTypeExport, ModuleTypeExport, NetworkTypeExport, NodeTypeExport, PortTypeExport, RelationshipsTypeExport, SubnetTypeExport, ToscaDefinitionType } from \"./TypeExport\"\n\n\n/**\n * Classe utilizzata per l'export. \n * Contiene le informazioni generali per il modulo che devono esserci nello standard Tosca.\n */\nexport class ModuleExport {\n    tosca_definitions_version: ToscaDefinitionType\n    description: string\n    imports: string[]\n    node_templates: { [name: string]: ModuleSimpleData | NodeSimpleData | PortSimpleData | NetworkSimpleData | SubnetSimpleData }\n    dsl_definition: any | null; //future\n    capabilites: any | null //future\n    outputs: any | null //future\n}\n\n/**\n * Classe che contiene gli attributi che indicano la rappresentazione del modulo per l'export.\n */\nexport class ModuleSimpleData {\n    type: ModuleTypeExport\n    properties: PropertiesMSD\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà del modulo per l'export.\n */\nexport class PropertiesMSD {\n    mode: ModeTypeExport\n    description: string\n    version: string | number\n    constraints: ConstraintsMSD\n    interface_networks: {\n        providers: InterfaceNetworksProvider[]\n        consumers: InterfaceNetworksConsumer[]\n    }\n    virtual_machines: VirtualMachine[]\n}\n/**\n * Classe che contiene gli attributi che indicano i vincoli di connessione del modulo per l'export.\n */\nexport class ConstraintsMSD {\n    interface_constraints: InterfaceConstraints[]\n    module_constraints: ModuleConstraints[]\n    network_constraints: NetworkConstraints[]\n}\n/**\n * Classe che contiene gli attributi che indicano i viconli per le interfacce di connessione del modulo.\n */\nexport class InterfaceConstraints {\n    local_interface: string\n    multiple_mode: boolean = false //future\n    module_name: string\n    compatibility: string = \"1.0\" // future\n    remote_interface: string\n}\n/**\n * Classe che contiene gli attributi che indicano i viconli del modulo.\n */\nexport class ModuleConstraints {\n}\n/**\n * Classe che contiene gli attributi che indicano i viconli dei network del modulo.\n */\nexport class NetworkConstraints {\n}\n/**\n * Classe che contiene gli attributi che indicano le interfacce provider del modulo.\n */\nexport class InterfaceNetworksProvider {\n    interface: string\n    network: string\n    tag: string\n    subnets: SubnetExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano le interfacce consumer del modulo.\n */\nexport class InterfaceNetworksConsumer {\n    interface: string\n    network: string\n    tag: string\n    subnets: SubnetExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano l'insieme di host presenti in un modulo.\n */\nexport class VirtualMachine {\n    virtual_machine: string\n    ports: VirtualMachinePorts[]\n}\n/**\n * Classe che contiene gli attributi che indicano le porte associate ad un host di un modulo.\n */\nexport class VirtualMachinePorts {\n    port: string\n    network: string\n    subnets: SubnetExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano la subnet connessa alla porte dell'host.\n * @see {VirtualMachinePorts}\n */\nexport class SubnetExport {\n    subnet: string;\n}\n\n/**\n * Classe che contiene gli attributi che indica un nodo all'interno dei node_templates.\n * @see {ModuleExport}\n */\nexport class NodeSimpleData {\n    type: NodeTypeExport\n    properties: any | null // future\n    interfaces: any | null // future\n    relationships: RelationshipsExport[]\n}\n\n/**\n * Classe che contiene gli attributi che indicano le relazioni generali.\n */\nexport class RelationshipsExport {\n    type: RelationshipsTypeExport\n    target: string\n}\n/**\n * Classe che contiene gli attributi che indicano i dati della porta all'interno dei node_templates.\n */\nexport class PortSimpleData {\n    type: PortTypeExport\n    relationships: RelationshipsExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano i dati delle network all'interno dei node_templates.\n */\nexport class NetworkSimpleData {\n    type: NetworkTypeExport\n    properties: PropertiesNSD\n}\n/**\n * Classe che contiene gli attributi che indicano le proprietà della network all'interno dei node_templates.\n * @see {NetworkSimpleData}\n */\nexport class PropertiesNSD {\n    openstack_config?: any | null // future\n    use_external_resource?: boolean | null // future\n    resource_id?: any | null // future\n}\n\n/**\n * Classe che contiene gli attributi che indicano i dati delle subnet all'interno dei node_templates.\n */\nexport class SubnetSimpleData {\n    type: SubnetTypeExport\n    relationships: RelationshipsExport[]\n    properties: PropertiesSSD\n}\n/**\n * Classe che contiene gli attributi che indicano le proprietà della subnet all'interno dei node_templates.\n * @see {NetworkSimpleData}\n */\nexport class PropertiesSSD {\n    subnet?: {\n        ip_version: string | number\n        cidr: string\n        enable_dhcp: boolean\n        gateway_ip?: any | null // future\n    }\n    openstack_config?: any | null // future\n    use_external_resource?: boolean | null // future\n    resource_id?: any | null // future\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/ModuleStatusDTO.html":{"url":"classes/ModuleStatusDTO.html","title":"class - ModuleStatusDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  ModuleStatusDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsDTO/moduleDTO.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano lo stato di un modulo.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                descriptionCode\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        descriptionCode\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:84\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:85\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:86\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PageableDTO, SortDTO } from './elementDTO';\nimport { NetworkDTO } from './networkDTO';\nimport { TheaterDTO } from './theaterDTO';\n\n/**\n * Classe che contiene gli attributi che indicano l'insieme dei moduli ritornati dal teatro.\n */\nexport class ModuleListDTO {\n    content: SimpleModuleDTO[]\n    pageable: PageableDTO\n    last: boolean\n    totalPages: string | number\n    totalElements: string | number\n    size: string | number\n    number: string | number\n    sort: SortDTO\n    numberOfElements: string | number\n    first: boolean\n    empty: boolean\n}\n\n/**\n * Classe che contiene gli attributi che indica il catalogo del tipo.\n */\nexport class TypesCatalogueDTO {\n    group: string\n    id: string | number\n    parentId: {}\n    value: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano la classificazione del modulo.\n */\nexport class ModuleClassificationDTO {\n    blueprintType: string\n    category: string\n    expectedInstanceType: string\n    id: string | number\n    mcClass: string\n    type: string\n    uuid: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano un parametro generico.\n */\nexport class GenericParameterDTO {\n    type: string\n    default: string\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano i parametri di configurazione di un modulto.\n */\nexport class ConfigurationTemplateDTO {\n    anchor_parameters: { [name: string]: GenericParameterDTO | string }\n    instance_parameters: { [name: string]: GenericParameterDTO }\n    structural_parameters: { [name: string]: GenericParameterDTO }\n    fixed_parameters: { [name: string]: GenericParameterDTO }\n    control_parameters: { [name: string]: GenericParameterDTO }\n    infrastructure_parameters: { [name: string]: GenericParameterDTO }\n    module: string\n    description: string\n    category: string\n    version: string | number\n    platform: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano la modalità di un modulo.\n */\nexport class ModuleModeDTO {\n    code: string\n    id: string | number\n    name: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano lo stato di un modulo.\n */\nexport class ModuleStatusDTO {\n    descriptionCode: string\n    id: string | number\n    name: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le statitistiche di un modulo.\n */\nexport class StatisticItemDTO {\n    error: string | number\n    updated: string | number\n    inserted: string | number\n}\n\n/**\n * Classe che contiene gli attributi che indicano il modulo (simple - in dipendenza del teatro).\n */\nexport class SimpleModuleDTO {\n    createdBy: string\n    createdDate: string\n    description: string\n    id: string | number\n    isLocked: boolean\n    lastModifiedBy: string\n    lastModifiedDate: string\n    lockAcquiredTimestamp: string\n    lockLastUserAcquiring: string\n    lockReleasedTimestamp: string\n    name: string\n    status: ModuleStatusDTO\n    type?: string | any\n    uuid: string\n    version: string | number\n}\n\n/**\n * Classe che contiene gli attributi che indicano il modulo (complex - ritorato da call appostita).\n * @extends {SimpleModuleDTO}\n */\nexport class ModuleDTO extends SimpleModuleDTO {\n    attachments: string[]\n    author: string\n    capabilities: { [name: string]: string }\n    catalog1: TypesCatalogueDTO\n    catalog2: TypesCatalogueDTO\n    catalog3: TypesCatalogueDTO\n    classification: ModuleClassificationDTO\n    configurationTemplate: ConfigurationTemplateDTO\n    detailProperties: {}\n    input: { [name: string]: string }\n    output: { [name: string]: string }\n    mode: ModuleModeDTO\n    statistics: { [name: string]: StatisticItemDTO | string | number }\n    tags: []\n}\n\n/**\n * Classe che contiene gli attributi che indicano le interfacce esposte da un modulo.\n */\nexport class ModuleNetworkInterfaceDTO {\n    id: string | number\n    label: string\n    module: ModuleDTO\n    network: NetworkDTO\n    nodeName: string\n    type: string\n    uuid: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le connessioni interfaccia-modulo.\n */\nexport class ConsumerInterfaceLinkDTO {\n    local_interface: string\n    module_instance: string\n    remote_interface: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà dell'istanza di un modulo all'interno del node_templates.\n */\nexport class ModuleInstancePropertiesDTO {\n    area: string\n    description: string\n    module: string\n    version: string | number\n    sequence: string | number\n    consumer_interfaces_link: ConsumerInterfaceLinkDTO[]\n}\n\n\n/**\n * Classe che contiene gli attributi che indicano l'area di appartenenza di un modulo (complex).\n */\nexport class AreaDTO {\n    id: string | number;\n    uuid: string;\n    name: string;\n    description: string;\n    theater: TheaterDTO;\n    deleted: boolean | string;\n}\n\n/**\n * Classe che contiene gli attributi che indicano l'area di appartenenza di un modulo (simple).\n */\nexport class SimpleAreaDTO {\n    area: string\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà dell'istanza di un teatro all'interno del node_templates.\n */\nexport class TheaterInstancePropertiesDTO {\n    mode: string\n    tags: TagTIP[]\n    areas: SimpleAreaDTO[]\n    author: string\n    version: string | number\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano un tag.\n */\nexport class TagTIP{\n    tag: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano in via generale le caratteristiche di un elemento che deve essere presente nel node_templates.\n */\nexport class ElementIntoTheaterDTO {  // goes into map in blueprint [name:string]: Module...\n    properties: ModuleInstancePropertiesDTO | TheaterInstancePropertiesDTO\n    type: string\n}\n\n\n/**\n * Classe che contiene gli attributi che indicano le caratteristiche di un teatro presente nel node_templates.\n */\nexport class ModuleInstanceDTO {\n    properties: ModuleInstancePropertiesDTO\n    type: string\n}\n/**\n * Classe che contiene gli attributi che indicano le caratteristiche di un modulo presente nel node_templates.\n */\nexport class TheaterInstanceDTO {\n    properties: TheaterInstancePropertiesDTO\n    type: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"interfaces/ModuleTopology.html":{"url":"interfaces/ModuleTopology.html","title":"interface - ModuleTopology","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfacce\n  \n  ModuleTopology\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsApplication/applicationModels.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        TopologyList\n            \n\n        \n            Indice\n            \n                \n                    \n                        \n                            Proprietà\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            rete\n                                        \n                                \n                                \n                                        \n                                            topology\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Proprietà\n                    \n                        \n                                \n                                    \n                                        \n                                        rete\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rete:     ReteMirroringModuleInstanceInfo | ReteTheaterInternalServiceModuleInstanceInfo | ReteTheaterModuleInstanceInfo\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :     ReteMirroringModuleInstanceInfo | ReteTheaterInternalServiceModuleInstanceInfo | ReteTheaterModuleInstanceInfo\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        topology\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        topology:         NodeTopologyElement\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         NodeTopologyElement\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ReteHostInfo } from \"src/app/rete-settings/nodes/rete-nodes/host/hostNode\";\nimport { ReteNetworkInfo } from \"src/app/rete-settings/nodes/rete-nodes/network/networkNode\";\nimport { ReteSubnetInfo } from \"src/app/rete-settings/nodes/rete-nodes/subnet/subnetNode\";\nimport { ReteMirroringModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/mirroringModuleInstance/mirroringModuleInstanceNode\";\nimport { ReteTheaterInternalServiceModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/theaterInternalServiceModuleInstance/theaterInternalServiceModuleInstanceNode\";\nimport { ReteTheaterModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/theaterModuleInstance/theaterModuleInstanceNode\";\nimport { FlavorBasicInfo } from \"../modelsDTO/falvorDTO\";\nimport { HostModuleDTO } from \"../modelsDTO/hostDTO\";\nimport { ModuleNetworkInterfaceDTO, ModuleInstancePropertiesDTO, SimpleModuleDTO, TheaterInstancePropertiesDTO, ModuleInstanceDTO, ModuleDTO, SimpleAreaDTO, AreaDTO } from \"../modelsDTO/moduleDTO\";\nimport { TheaterDTO } from \"../modelsDTO/theaterDTO\";\n\n\nexport interface CommonModule {\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n}\n\n\n/**\n * Classe contenente gli attributi utilizzati per le operazioni che coinvolgono i moduli.\n * ps. Questa struttura è prettamente utilizzata nella chiamata relativa al singolo modulo.\n */\nexport class ModuleApplication extends ModuleDTO implements CommonModule {\n    imports: string[] // perchè nell'export yaml è previsto\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n    // serve per validare il json risultante dal parsing del theaterApplication\n    validateObject?: string = \"module\";\n}\n// PER IMPLEMENTAZIONI FUTURE, PER COERENZA, PRENDERE DIRETTAMENTE I SINGOLI NODI DALLA CHIAMATA ESCLUSIVA E NON DA QUELLA CHE RESTITUISCE TUTTI I TEATRI\n/**\n * Classe contenente gli attributi utilizzati per le operazioni che coinvolgono i moduli.\n * ps. Questa struttura è prettamente utilizzata nella chiamata che prende tutti i moduli del teatro.\n */\nexport class SimpleModuleApplication extends SimpleModuleDTO implements CommonModule {\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n}\n\n\nexport class ReteConnection {\n    from: string;\n    port_src: string;\n    to: string;\n    port_dst: string;\n}\n\nexport interface TopologyList {\n    rete: any;\n    topology?: TopologyElement\n}\nexport class TopologyElement {\n    elements: { [name: string]: any };\n    connection: ReteConnection[]\n}\n\n// apptype module topology\n\nexport class NodeTopologyElement implements TopologyElement {\n    elements: { [hostName: string]: ReteHostInfo | ReteSubnetInfo | ReteNetworkInfo };\n    connection: ReteConnection[]\n}\n\nexport interface ModuleTopology extends TopologyList {\n    rete: ReteMirroringModuleInstanceInfo | ReteTheaterInternalServiceModuleInstanceInfo | ReteTheaterModuleInstanceInfo\n    topology: NodeTopologyElement;\n}\n\nexport class ModuleInstance extends ModuleInstanceDTO implements ModuleTopology {\n    // moduleTopology data\n    rete: ReteTheaterModuleInstanceInfo | ReteTheaterInternalServiceModuleInstanceInfo | ReteMirroringModuleInstanceInfo;\n    topology: NodeTopologyElement;\n    // other data\n    moduleInfo: SimpleModuleApplication\n}\n\n// apptype theater theater\n\nexport interface TheaterTopology extends TopologyElement {\n    elements: { [hostName: string]: ModuleInstance };\n    connection: ReteConnection[];\n}\n\nexport class TheaterApplication extends TheaterDTO implements TheaterTopology {\n    // theaterTopology data\n    elements: { [hostName: string]: ModuleInstance; };\n    connection: ReteConnection[];\n    // other data\n    properties: TheaterInstancePropertiesDTO;\n    topology: TheaterTopology;\n    // serve per validare il json risultante dal parsing del theaterApplication\n    validateObject?: string = \"theater\";\n}\n\nexport class AreaApplication extends AreaDTO {\n    color?: string;\n}\nexport class AreaColorDTO extends SimpleAreaDTO {\n    color: string;\n}\n\n\nexport class FlavorApplication extends FlavorBasicInfo {\n    flavorName: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/NameMappingDTO.html":{"url":"classes/NameMappingDTO.html","title":"class - NameMappingDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  NameMappingDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsDTO/theaterDTO.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano il mapping nome-modulo.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                display_name\n                            \n                            \n                                module_instance_name\n                            \n                            \n                                module_name\n                            \n                            \n                                node_template_name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        display_name\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/theaterDTO.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        module_instance_name\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/theaterDTO.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        module_name\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/theaterDTO.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        node_template_name\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/theaterDTO.ts:48\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ModuleInstanceDTO, TheaterInstanceDTO } from \"./moduleDTO\"\n\n/**\n * Classe che contiene gli attributi che indicano il catalogo di riferimento di un teatro.\n */\nexport class TagCatalogueDTO {\n    description: string\n    id: string | number\n    name: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano lo stato di un teatro.\n */\nexport class TheatreStatusDTO {\n    code: string\n    id: string | number\n    name: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano un elemento nella sequenza di deploy.\n */\nexport class DeployInstanceDTO {\n    moduleInstanceConfigurationUUID?: string\n    moduleInstanceName: string\n    moduleInstanceUUID: string\n    moduleUUID: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano il blueprint di un teatro.\n */\nexport class BlueprintFileDTO {\n    description: string\n    imports: string[]\n    node_templates: {[name:string]:ModuleInstanceDTO|TheaterInstanceDTO}\n    tosca_definitions_version: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano il mapping nome-modulo.\n */\nexport class NameMappingDTO {\n    display_name: string\n    module_instance_name: string\n    module_name: string\n    node_template_name: string\n}\n/**\n * Classe che contiene gli attributi che indica l'array dei mapping nome-modulo.\n */\nexport class EntityNameMappingFileDTO {\n    name_mapping: NameMappingDTO[]\n}\n\n/**\n * Classe che contiene gli attributi che indicano il teaatro.\n */\nexport class TheaterDTO {\n    author: string\n    blueprintFile: BlueprintFileDTO\n    blueprintUUID: string | number\n    createdBy: string\n    createdDate: string\n    deploymentSequence: {[index:string]:DeployInstanceDTO} //tosee\n    description: string\n    entityNameMappingFile: EntityNameMappingFileDTO\n    id: string | number\n    isLocked: boolean\n    lastModifiedBy: string\n    lastModifiedDate: string\n    lockAcquiredTimestamp: string\n    lockLastUserAcquiring: string\n    lockReleasedTimestamp: string\n    name: string\n    status: TheatreStatusDTO\n    tags: TagCatalogueDTO[]\n    uuid: string\n    version: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"components/NavbarComponent.html":{"url":"components/NavbarComponent.html","title":"component - NavbarComponent","body":"\n                   \n\n\n\n\n\n  Componenti\n  \n  NavbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/navbar/navbar.component.ts\n\n\n\n    \n        Descrizione\n    \n    \n        Componente che genera una navbar a contenuto variabile.\n\n    \n\n\n    \n        Implementa\n    \n    \n                    AfterViewInit\n    \n\n\n\n    Metadati\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navbar\n            \n\n            \n                styleUrls\n                ./navbar.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./navbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Indice\n    \n        \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                select_item\n                            \n                        \n                    \n                \n\n                \n                    \n                        Input\n                    \n                \n                \n                    \n                        \n                            \n                                element\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Output\n                    \n                \n                \n                    \n                        \n                            \n                                itemSelected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Costruttore\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Definito in src/app/components/navbar/navbar.component.ts:27\n                            \n                        \n\n                \n                    \n                            Costruttore componente NavbarComonent\n\n                    \n                \n            \n        \n\n\n    \n    Input\n        \n            \n                \n                    \n                        \n                        element\n                    \n                \n                \n                    \n                        Tipo :         NavbarElement\n\n                    \n                \n                        \n                            \n                                    Definito in src/app/components/navbar/navbar.component.ts:19\n                            \n                        \n                \n                    \n                        Variabile passata in input che fornisce le caratterisiche della navbar\nSee {NavbarElement}\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                    Definito in src/app/components/navbar/navbar.component.ts:23\n                            \n                        \n                \n                    \n                        Variabile passata in input che rappresenta il titolo della nav\n\n                    \n                \n            \n        \n\n    \n    Output\n        \n            \n                \n                    \n                        \n                        itemSelected\n                    \n                \n                \n                    \n                        Tipo :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Definito in src/app/components/navbar/navbar.component.ts:27\n                            \n                        \n                \n                    \n                        Variabile di output che ritorna l'evento del click di un elemento selezionato.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Definito in src/app/components/navbar/navbar.component.ts:39\n                \n            \n\n\n            \n                \n                    Funzione richiamata non appena la navbar è visibile.\nHa lo scopo di valorizzare gli attrubuti dei singoli elementi passati in input.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        select_item\n                        \n                    \n                \n            \n            \n                \nselect_item(val: NavbarElement)\n                \n            \n\n\n            \n                \n                    Definito in src/app/components/navbar/navbar.component.ts:57\n                \n            \n\n\n            \n                \n                    Funzione che emette il valore di click su elemento appena è stato selezionato.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                NavbarElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { AfterViewInit, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { NavbarElement } from './navbarType';\n\n\n/**\n * Componente che genera una navbar a contenuto variabile.\n */\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.sass']\n})\nexport class NavbarComponent implements AfterViewInit {\n\n  /**\n   * Variabile passata in input che fornisce le caratterisiche della navbar\n   * @see {NavbarElement}\n   */\n  @Input() element: NavbarElement;\n  /**\n   * Variabile passata in input che rappresenta il titolo della nav\n   */\n  @Input() title: string;\n  /**\n   * Variabile di output che ritorna l'evento del click di un elemento selezionato.\n   */\n  @Output() itemSelected = new EventEmitter();\n\n  /**\n   * Costruttore componente NavbarComonent\n   */\n  constructor() {\n  }\n\n  /**\n   * Funzione richiamata non appena la navbar è visibile.\n   * Ha lo scopo di valorizzare gli attrubuti dei singoli elementi passati in input.\n   */\n  ngAfterViewInit(): void {\n    this.element.element.forEach(\n      (el) => {\n        let a_element: HTMLElement = document.getElementById(el.id);\n        if (el.a_option)\n          el.a_option.forEach(\n            (opt) => {\n              a_element.setAttribute(opt.attr_key, opt.attr_val);\n            }\n          );\n      }\n    )\n  }\n\n  /**\n   * Funzione che emette il valore di click su elemento appena è stato selezionato.\n   * @param val \n   */\n  select_item(val: NavbarElement) {\n    this.itemSelected.emit(val);\n  }\n\n}\n\n    \n\n    \n        \n    \n\n        \n        \n             {{title}} {{'-'+' '+element.type}} \n            \n            \n        \n\n        \n        \n            \n        \n\n        \n            \n                \n                    \n                        {{item.text}}\n                    \n                    \n                    \n                \n            \n        \n\n    \n\n    \n\n    \n                \n                    ./navbar.component.sass\n                \n                \n    \n\n    \n        \n        \n            \n                Legenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento html con direttive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                 {{title}} {{\\'-\\'+\\' \\'+element.type}}                                                                                                                                                     {{item.text}}                                                                                                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ComposerComponent', 'selector': 'app-composer'},{'name': 'ControlTemplate', 'selector': ''},{'name': 'DataInputComponent', 'selector': 'app-data-input'},{'name': 'DataInputV2Component', 'selector': 'app-data-input-v2'},{'name': 'DataItemComponent', 'selector': 'app-window-item'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HostComponent', 'selector': ''},{'name': 'HowToUseComponent', 'selector': 'app-how-to-use'},{'name': 'MirroringModuleInstanceComponent', 'selector': ''},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavbarElementComponent', 'selector': 'app-navbar-element'},{'name': 'NetworkComponent', 'selector': ''},{'name': 'OffcanvasComponent', 'selector': 'app-offcanvas'},{'name': 'ReteModuleComposerComponent', 'selector': 'app-rete-module-composer'},{'name': 'ReteModuleVisualizerComponent', 'selector': 'app-rete-module-visualizer'},{'name': 'ReteTheaterComposerComponent', 'selector': 'app-rete-theater-composer'},{'name': 'ReteTheaterVisualizerComponent', 'selector': 'app-rete-theater-visualizer'},{'name': 'SubnetComponent', 'selector': ''},{'name': 'TabnavComponent', 'selector': 'app-tabnav'},{'name': 'TheaterInternalServiceModuleInstanceComponent', 'selector': ''},{'name': 'TheaterModuleInstanceComponent', 'selector': ''},{'name': 'UnderbarComponent', 'selector': 'app-underbar'},{'name': 'VisualizerComponent', 'selector': 'app-displayer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/NavbarElement.html":{"url":"classes/NavbarElement.html","title":"class - NavbarElement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  NavbarElement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/navbar/navbarType.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Elemento passato come parametro alla componente NavbarComponent\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                element\n                            \n                            \n                                    Opzionale\n                                logo_img\n                            \n                            \n                                    Opzionale\n                                template_title\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        element\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         NavbarItem[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/navbar/navbarType.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        logo_img\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         any\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/navbar/navbarType.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        template_title\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     TemplateRef\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/navbar/navbarType.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     \"module\" | \"theater\"\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/navbar/navbarType.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { TemplateRef } from \"@angular/core\";\n\n/**\n * Elemento passato come parametro alla componente NavbarComponent\n */\nexport class NavbarElement {\n    template_title?: TemplateRef;\n    type: \"module\" | \"theater\";\n    logo_img?: any;\n    element: NavbarItem[];\n}\n\n/**\n * Oggetto che rappresenta un singolo elemento della Navbar\n */\nexport class NavbarItem{\n    id: string;\n    text: string;\n    a_option?: Aoption[];\n    template?: TemplateRef;\n}\n\n/**\n * Rappresenta le opzioni per il tag \n */\nexport class Aoption {\n    attr_key: string;\n    attr_val: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"components/NavbarElementComponent.html":{"url":"components/NavbarElementComponent.html","title":"component - NavbarElementComponent","body":"\n                   \n\n\n\n\n\n  Componenti\n  \n  NavbarElementComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/elements/navbar-element/navbar-element.component.ts\n\n\n\n    \n        Descrizione\n    \n    \n        Componente che ha come scopo mostrare una navbar per le schermate della landing.\n\n    \n\n\n\n\n\n    Metadati\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navbar-element\n            \n\n            \n                styleUrls\n                ./navbar-element.component.css\n            \n\n\n\n            \n                templateUrl\n                ./navbar-element.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Costruttore\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Definito in src/app/pages/elements/navbar-element/navbar-element.component.ts:11\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * Componente che ha come scopo mostrare una navbar per le schermate della landing.\n */\n@Component({\n  selector: 'app-navbar-element',\n  templateUrl: './navbar-element.component.html',\n  styleUrls: ['./navbar-element.component.css']\n})\nexport class NavbarElementComponent {\n  constructor() { }\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n      \n        &nbsp;Infra\n        Create\n      \n    \n\n    Navbar -->\n\n    \n    \n      \n    \n\n    \n      \n        \n          Home\n        \n        \n          Documentation\n        \n        \n          How to use\n        \n      \n    \n\n  \n\n    \n\n    \n                \n                    ./navbar-element.component.css\n                \n                .bg-custom {\n    background-color: rgb(41 39 39 / 50%);\n}\n\n\n\n.rotate-scale-down {\n    transition: rotate-scale-down 0.2s\n}\n.rotate-scale-down:hover{\n    -webkit-animation: rotate-scale-down 0.6s linear both;\n    animation: rotate-scale-down 0.6s linear both;\n}\n\n@-webkit-keyframes rotate-scale-down {\n    0% {\n        -webkit-transform: scale(1) rotateZ(0);\n        transform: scale(1) rotateZ(0);\n    }\n\n    50% {\n        -webkit-transform: scale(0.5) rotateZ(180deg);\n        transform: scale(0.5) rotateZ(180deg);\n    }\n\n    100% {\n        -webkit-transform: scale(1) rotateZ(360deg);\n        transform: scale(1) rotateZ(360deg);\n    }\n}\n\n@keyframes rotate-scale-down {\n    0% {\n        -webkit-transform: scale(1) rotateZ(0);\n        transform: scale(1) rotateZ(0);\n    }\n\n    50% {\n        -webkit-transform: scale(0.5) rotateZ(180deg);\n        transform: scale(0.5) rotateZ(180deg);\n    }\n\n    100% {\n        -webkit-transform: scale(1) rotateZ(360deg);\n        transform: scale(1) rotateZ(360deg);\n    }\n}\n    \n\n    \n        \n        \n            \n                Legenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento html con direttive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                               Infra        Create              Navbar -->                                              Home                          Documentation                          How to use                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ComposerComponent', 'selector': 'app-composer'},{'name': 'ControlTemplate', 'selector': ''},{'name': 'DataInputComponent', 'selector': 'app-data-input'},{'name': 'DataInputV2Component', 'selector': 'app-data-input-v2'},{'name': 'DataItemComponent', 'selector': 'app-window-item'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HostComponent', 'selector': ''},{'name': 'HowToUseComponent', 'selector': 'app-how-to-use'},{'name': 'MirroringModuleInstanceComponent', 'selector': ''},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavbarElementComponent', 'selector': 'app-navbar-element'},{'name': 'NetworkComponent', 'selector': ''},{'name': 'OffcanvasComponent', 'selector': 'app-offcanvas'},{'name': 'ReteModuleComposerComponent', 'selector': 'app-rete-module-composer'},{'name': 'ReteModuleVisualizerComponent', 'selector': 'app-rete-module-visualizer'},{'name': 'ReteTheaterComposerComponent', 'selector': 'app-rete-theater-composer'},{'name': 'ReteTheaterVisualizerComponent', 'selector': 'app-rete-theater-visualizer'},{'name': 'SubnetComponent', 'selector': ''},{'name': 'TabnavComponent', 'selector': 'app-tabnav'},{'name': 'TheaterInternalServiceModuleInstanceComponent', 'selector': ''},{'name': 'TheaterModuleInstanceComponent', 'selector': ''},{'name': 'UnderbarComponent', 'selector': 'app-underbar'},{'name': 'VisualizerComponent', 'selector': 'app-displayer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavbarElementComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/NavbarItem.html":{"url":"classes/NavbarItem.html","title":"class - NavbarItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  NavbarItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/navbar/navbarType.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Oggetto che rappresenta un singolo elemento della Navbar\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                    Opzionale\n                                a_option\n                            \n                            \n                                id\n                            \n                            \n                                    Opzionale\n                                template\n                            \n                            \n                                text\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        a_option\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         Aoption[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/navbar/navbarType.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/navbar/navbarType.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        template\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     TemplateRef\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/navbar/navbarType.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        text\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/navbar/navbarType.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { TemplateRef } from \"@angular/core\";\n\n/**\n * Elemento passato come parametro alla componente NavbarComponent\n */\nexport class NavbarElement {\n    template_title?: TemplateRef;\n    type: \"module\" | \"theater\";\n    logo_img?: any;\n    element: NavbarItem[];\n}\n\n/**\n * Oggetto che rappresenta un singolo elemento della Navbar\n */\nexport class NavbarItem{\n    id: string;\n    text: string;\n    a_option?: Aoption[];\n    template?: TemplateRef;\n}\n\n/**\n * Rappresenta le opzioni per il tag \n */\nexport class Aoption {\n    attr_key: string;\n    attr_val: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/NetOSRouterDTO.html":{"url":"classes/NetOSRouterDTO.html","title":"class - NetOSRouterDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  NetOSRouterDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsDTO/networkDTO.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano le net os.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                borderNetwork\n                            \n                            \n                                id\n                            \n                            \n                                subnet\n                            \n                            \n                                uuid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        borderNetwork\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         BorderNetworkDTO\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/networkDTO.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/networkDTO.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subnet\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     literal type | null\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/networkDTO.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uuid\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/networkDTO.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class NetworkDTO {\n    id: string | number\n    name: string\n    uuid: string\n}\n\n/**\n * Classe che contiene gli attributi che indica la border network.\n */\nexport class BorderNetworkDTO {\n    bnName: string\n    id: string | number\n    subnet: {} | null\n    uuid: string | number\n}\n\n/**\n * Classe che contiene gli attributi che indicano le net os.\n */\nexport class NetOSRouterDTO {\n    borderNetwork: BorderNetworkDTO\n    id: string | number\n    subnet: {} | null\n    uuid: string | number\n}\n\n\n/**\n * Classe che contiene gli attributi che indicano le subnet.\n */\nexport class SubnetDTO {\n    allocationPool: string\n    borderNetwork: BorderNetworkDTO\n    cidr: string\n    dns: string\n    gateway: string\n    id: string | number\n    isDhcp: boolean\n    name: string\n    network: NetworkDTO\n    router: NetOSRouterDTO\n    uuid: string\n    version: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"components/NetworkComponent.html":{"url":"components/NetworkComponent.html","title":"component - NetworkComponent","body":"\n                   \n\n\n\n\n\n  Componenti\n  \n  NetworkComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/rete-settings/nodes/rete-nodes/network/network.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n            NodeComponent\n    \n\n\n\n\n    Metadati\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            NodeService\n                \n            \n\n\n\n            \n                styleUrls\n                ./network.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./network.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                NetworkIcon\n                            \n                            \n                                NodeType\n                            \n                            \n                                showInputOutlet\n                            \n                            \n                                showOutputOutlet\n                            \n                            \n                                showPorts\n                            \n                        \n                    \n                \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                showhidesocket\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Costruttore\n        \n            \n                \n                    \nconstructor(service: NodeService, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Definito in src/app/rete-settings/nodes/rete-nodes/network/network.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parametri :\n                                    \n                                        \n                                            \n                                                Nome\n                                                    Tipo\n                                                Opzionale\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                    NodeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        showhidesocket\n                        \n                    \n                \n            \n            \n                \nshowhidesocket()\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-nodes/network/network.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        NetworkIcon\n                        \n                    \n                \n            \n                \n                    \n                        Valore predefinito : NetworkIcon\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-nodes/network/network.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        NodeType\n                        \n                    \n                \n            \n                \n                    \n                        Valore predefinito : EnumNodeType\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-nodes/network/network.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showInputOutlet\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                \n                    \n                        Valore predefinito : true\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-nodes/network/network.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showOutputOutlet\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                \n                    \n                        Valore predefinito : false\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-nodes/network/network.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showPorts\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                \n                    \n                        Valore predefinito : true\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-nodes/network/network.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, ChangeDetectorRef, ChangeDetectionStrategy } from '@angular/core';\nimport { NodeComponent, NodeService } from 'rete-angular-render-plugin';\nimport { EnumNodeType } from 'src/app/models/appType';\nimport { NetworkIcon } from 'src/app/rete-settings/style/styleIconConfig';\n// import { EnumNodeType } from 'src/app/rete-settings/models/reteModelType';\n\n@Component({\n  templateUrl: './network.component.html',\n  styleUrls: ['./network.component.sass',],\n  providers: [NodeService],\n  changeDetection: ChangeDetectionStrategy.OnPush, // render più veloce.\n})\n\nexport class NetworkComponent extends NodeComponent {\n\n  showPorts: boolean = true;\n  showOutputOutlet: boolean = false;\n  showInputOutlet: boolean = true;\n  NetworkIcon = NetworkIcon;\n  NodeType = EnumNodeType;\n\n\n  constructor(\n    protected service: NodeService,\n    protected cdr: ChangeDetectorRef) {\n    super(service, cdr);\n  }\n\n  showhidesocket() {\n    this.showPorts = !this.showPorts;\n  }\n\n}\n\n    \n\n    \n        \n\n\n  \n    \n      \n        \n          {{ node.data.name === \"\" || node.data.name === undefined ? \"Assign name\" : node.data.name }}\n        \n      \n      \n        \n          \n          \n        \n      \n    \n   -->\n\n\n  \n  \n    \n      \n        \n          \n            \n              \n                 \n              \n              \n                \n                  {{\n                  (node.data.name && node.data.name!=='')\n                  ?node.data.name\n                  :NodeType.NETWORK\n                  }}\n                \n                \n                  \n                    {{\n                    (node.data.externalInterfaceName && node.data.externalInterfaceName!=='')\n                    ?\"External interface name: \"+node.data.externalInterfaceName\n                    :''\n                    }}\n                  \n                  \n                    {{\n                    (node.data.externalInterfaceType && node.data.externalInterfaceType!=='')\n                    ?\"type: \"+node.data.externalInterfaceType\n                    :''\n                    }}\n                  \n                \n              \n            \n          \n        \n      \n    \n  \n\n\n  \n    \n      Button with data-bs-target\n    \n  \n  \n    \n      Some placeholder content for the collapse component. This panel is hidden by default but revealed when the user\n      activates the relevant trigger.\n    \n   -->\n\n\n  \n\n       \n       \n        \n          {{output.name}}\n          \n            \n            \n          \n        \n      \n  \n  \n       -->\n  \n      \n      \n        \n          \n            \n            \n            \n          \n          {{input.name}}\n          \n        \n      \n\n  \n    \n\n    \n                \n                    ./network.component.sass\n                \n                @import \"../vars\"\n\n.node\n  background: $node-color\n  border: 2px solid #f124\n  border-radius: 10px\n  cursor: pointer\n  min-width: $node-width\n  height: auto\n  padding-bottom: 6px\n  box-sizing: content-box\n  position: relative\n  user-select: none\n  &:hover\n    background: lighten($node-color,4%)\n  &.selected\n    background: $node-color-selected\n    border-color: #ff0000\n  .title\n    color: $text-color\n    font-family: $font-fam\n    font-size: 18px\n    padding: 8px\n  .output\n    text-align: right\n    display: flex\n    justify-content: flex-end\n  .input\n    text-align: left\n    display: flex\n    justify-content: flex-start\n  .input-title,.output-title\n    vertical-align: middle\n    color: $text-color\n    display: inline-block\n    font-family: $font-fam\n    font-size: 14px\n    margin: $socket-margin\n    line-height: $socket-size\n    &[hidden]\n      display: none\n  .input-control\n    z-index: 1\n    width: calc(100% - #{$socket-size + 2*$socket-margin})\n    vertical-align: middle\n    display: inline-block\n  .control\n    padding: $socket-margin $socket-size/2 + $socket-margin\n\n.external-network-info-div\n  border-style: groove\n  border-radius: 1em\n  padding: 1em\n\n    \n\n    \n        \n        \n            \n                Legenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento html con direttive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              {{ node.data.name === \"\" || node.data.name === undefined ? \"Assign name\" : node.data.name }}                                                                     -->                                                                                                                                         {{                  (node.data.name && node.data.name!==\\'\\')                  ?node.data.name                  :NodeType.NETWORK                  }}                                                                      {{                    (node.data.externalInterfaceName && node.data.externalInterfaceName!==\\'\\')                    ?\"External interface name: \"+node.data.externalInterfaceName                    :\\'\\'                    }}                                                        {{                    (node.data.externalInterfaceType && node.data.externalInterfaceType!==\\'\\')                    ?\"type: \"+node.data.externalInterfaceType                    :\\'\\'                    }}                                                                                                      Button with data-bs-target                  Some placeholder content for the collapse component. This panel is hidden by default but revealed when the user      activates the relevant trigger.       -->                                  {{output.name}}                                                                     -->                                                                                        {{input.name}}                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ComposerComponent', 'selector': 'app-composer'},{'name': 'ControlTemplate', 'selector': ''},{'name': 'DataInputComponent', 'selector': 'app-data-input'},{'name': 'DataInputV2Component', 'selector': 'app-data-input-v2'},{'name': 'DataItemComponent', 'selector': 'app-window-item'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HostComponent', 'selector': ''},{'name': 'HowToUseComponent', 'selector': 'app-how-to-use'},{'name': 'MirroringModuleInstanceComponent', 'selector': ''},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavbarElementComponent', 'selector': 'app-navbar-element'},{'name': 'NetworkComponent', 'selector': ''},{'name': 'OffcanvasComponent', 'selector': 'app-offcanvas'},{'name': 'ReteModuleComposerComponent', 'selector': 'app-rete-module-composer'},{'name': 'ReteModuleVisualizerComponent', 'selector': 'app-rete-module-visualizer'},{'name': 'ReteTheaterComposerComponent', 'selector': 'app-rete-theater-composer'},{'name': 'ReteTheaterVisualizerComponent', 'selector': 'app-rete-theater-visualizer'},{'name': 'SubnetComponent', 'selector': ''},{'name': 'TabnavComponent', 'selector': 'app-tabnav'},{'name': 'TheaterInternalServiceModuleInstanceComponent', 'selector': ''},{'name': 'TheaterModuleInstanceComponent', 'selector': ''},{'name': 'UnderbarComponent', 'selector': 'app-underbar'},{'name': 'VisualizerComponent', 'selector': 'app-displayer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NetworkComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/NetworkConstraints.html":{"url":"classes/NetworkConstraints.html","title":"class - NetworkConstraints","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  NetworkConstraints\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsExport/moduleExport.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano i viconli dei network del modulo.\n\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ModeTypeExport, ModuleTypeExport, NetworkTypeExport, NodeTypeExport, PortTypeExport, RelationshipsTypeExport, SubnetTypeExport, ToscaDefinitionType } from \"./TypeExport\"\n\n\n/**\n * Classe utilizzata per l'export. \n * Contiene le informazioni generali per il modulo che devono esserci nello standard Tosca.\n */\nexport class ModuleExport {\n    tosca_definitions_version: ToscaDefinitionType\n    description: string\n    imports: string[]\n    node_templates: { [name: string]: ModuleSimpleData | NodeSimpleData | PortSimpleData | NetworkSimpleData | SubnetSimpleData }\n    dsl_definition: any | null; //future\n    capabilites: any | null //future\n    outputs: any | null //future\n}\n\n/**\n * Classe che contiene gli attributi che indicano la rappresentazione del modulo per l'export.\n */\nexport class ModuleSimpleData {\n    type: ModuleTypeExport\n    properties: PropertiesMSD\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà del modulo per l'export.\n */\nexport class PropertiesMSD {\n    mode: ModeTypeExport\n    description: string\n    version: string | number\n    constraints: ConstraintsMSD\n    interface_networks: {\n        providers: InterfaceNetworksProvider[]\n        consumers: InterfaceNetworksConsumer[]\n    }\n    virtual_machines: VirtualMachine[]\n}\n/**\n * Classe che contiene gli attributi che indicano i vincoli di connessione del modulo per l'export.\n */\nexport class ConstraintsMSD {\n    interface_constraints: InterfaceConstraints[]\n    module_constraints: ModuleConstraints[]\n    network_constraints: NetworkConstraints[]\n}\n/**\n * Classe che contiene gli attributi che indicano i viconli per le interfacce di connessione del modulo.\n */\nexport class InterfaceConstraints {\n    local_interface: string\n    multiple_mode: boolean = false //future\n    module_name: string\n    compatibility: string = \"1.0\" // future\n    remote_interface: string\n}\n/**\n * Classe che contiene gli attributi che indicano i viconli del modulo.\n */\nexport class ModuleConstraints {\n}\n/**\n * Classe che contiene gli attributi che indicano i viconli dei network del modulo.\n */\nexport class NetworkConstraints {\n}\n/**\n * Classe che contiene gli attributi che indicano le interfacce provider del modulo.\n */\nexport class InterfaceNetworksProvider {\n    interface: string\n    network: string\n    tag: string\n    subnets: SubnetExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano le interfacce consumer del modulo.\n */\nexport class InterfaceNetworksConsumer {\n    interface: string\n    network: string\n    tag: string\n    subnets: SubnetExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano l'insieme di host presenti in un modulo.\n */\nexport class VirtualMachine {\n    virtual_machine: string\n    ports: VirtualMachinePorts[]\n}\n/**\n * Classe che contiene gli attributi che indicano le porte associate ad un host di un modulo.\n */\nexport class VirtualMachinePorts {\n    port: string\n    network: string\n    subnets: SubnetExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano la subnet connessa alla porte dell'host.\n * @see {VirtualMachinePorts}\n */\nexport class SubnetExport {\n    subnet: string;\n}\n\n/**\n * Classe che contiene gli attributi che indica un nodo all'interno dei node_templates.\n * @see {ModuleExport}\n */\nexport class NodeSimpleData {\n    type: NodeTypeExport\n    properties: any | null // future\n    interfaces: any | null // future\n    relationships: RelationshipsExport[]\n}\n\n/**\n * Classe che contiene gli attributi che indicano le relazioni generali.\n */\nexport class RelationshipsExport {\n    type: RelationshipsTypeExport\n    target: string\n}\n/**\n * Classe che contiene gli attributi che indicano i dati della porta all'interno dei node_templates.\n */\nexport class PortSimpleData {\n    type: PortTypeExport\n    relationships: RelationshipsExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano i dati delle network all'interno dei node_templates.\n */\nexport class NetworkSimpleData {\n    type: NetworkTypeExport\n    properties: PropertiesNSD\n}\n/**\n * Classe che contiene gli attributi che indicano le proprietà della network all'interno dei node_templates.\n * @see {NetworkSimpleData}\n */\nexport class PropertiesNSD {\n    openstack_config?: any | null // future\n    use_external_resource?: boolean | null // future\n    resource_id?: any | null // future\n}\n\n/**\n * Classe che contiene gli attributi che indicano i dati delle subnet all'interno dei node_templates.\n */\nexport class SubnetSimpleData {\n    type: SubnetTypeExport\n    relationships: RelationshipsExport[]\n    properties: PropertiesSSD\n}\n/**\n * Classe che contiene gli attributi che indicano le proprietà della subnet all'interno dei node_templates.\n * @see {NetworkSimpleData}\n */\nexport class PropertiesSSD {\n    subnet?: {\n        ip_version: string | number\n        cidr: string\n        enable_dhcp: boolean\n        gateway_ip?: any | null // future\n    }\n    openstack_config?: any | null // future\n    use_external_resource?: boolean | null // future\n    resource_id?: any | null // future\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/NetworkDTO.html":{"url":"classes/NetworkDTO.html","title":"class - NetworkDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  NetworkDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsDTO/networkDTO.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano i network.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                uuid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/networkDTO.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/networkDTO.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uuid\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/networkDTO.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class NetworkDTO {\n    id: string | number\n    name: string\n    uuid: string\n}\n\n/**\n * Classe che contiene gli attributi che indica la border network.\n */\nexport class BorderNetworkDTO {\n    bnName: string\n    id: string | number\n    subnet: {} | null\n    uuid: string | number\n}\n\n/**\n * Classe che contiene gli attributi che indicano le net os.\n */\nexport class NetOSRouterDTO {\n    borderNetwork: BorderNetworkDTO\n    id: string | number\n    subnet: {} | null\n    uuid: string | number\n}\n\n\n/**\n * Classe che contiene gli attributi che indicano le subnet.\n */\nexport class SubnetDTO {\n    allocationPool: string\n    borderNetwork: BorderNetworkDTO\n    cidr: string\n    dns: string\n    gateway: string\n    id: string | number\n    isDhcp: boolean\n    name: string\n    network: NetworkDTO\n    router: NetOSRouterDTO\n    uuid: string\n    version: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/NetworkNode.html":{"url":"classes/NetworkNode.html","title":"class - NetworkNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  NetworkNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/rete-settings/nodes/rete-nodes/network/networkNode.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che rappresenta il nodo (rete-node) Network all'interno del canvas/editor di rete.\n\n            \n\n            \n                Extends\n            \n            \n                        Component\n            \n\n            \n                Implementa\n            \n            \n                        AngularComponent\n            \n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                builder\n                            \n                            \n                                created\n                            \n                            \n                                createNewNode\n                            \n                            \n                                destroyed\n                            \n                            \n                                valorizeNode\n                            \n                            \n                                worker\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Costruttore\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Definito in src/app/rete-settings/nodes/rete-nodes/network/networkNode.ts:45\n                            \n                        \n\n                \n                    \n                            Costruttore di NetworkNode\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     AngularComponentData\n\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-nodes/network/networkNode.ts:45\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        builder\n                        \n                    \n                \n            \n            \n                \n                    \n                    builder(node: Node)\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-nodes/network/networkNode.ts:63\n                \n            \n\n\n            \n                \n                    Funzione richiamata in fase di costruzione del nodo (rete-node).\nControlla se bisogna instanziare il nodo oppure crearne uno nuovo:\n\nIn fase di design, il nodo non ha dati, per cui bisogna crearne uno nuovo.\nIn fase di visualizing, il nodo presenta dei dati, per cui va valorizzato il nodo.\n\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        created\n                        \n                    \n                \n            \n            \n                \ncreated(node)\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-nodes/network/networkNode.ts:127\n                \n            \n\n\n            \n                \n                    Funzione richiamata una volta in nodo creato.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    node\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createNewNode\n                        \n                    \n                \n            \n            \n                \ncreateNewNode(node: Node)\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-nodes/network/networkNode.ts:75\n                \n            \n\n\n            \n                \n                    Funzione che ha come scopo creare un nodo (rete-node).\nIn particolare gli assegna una struttura vuota.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destroyed\n                        \n                    \n                \n            \n            \n                \ndestroyed(node)\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-nodes/network/networkNode.ts:135\n                \n            \n\n\n            \n                \n                    Funzione richiamata una volta in nodo cancellato.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    node\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        valorizeNode\n                        \n                    \n                \n            \n            \n                \nvalorizeNode(node: Node)\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-nodes/network/networkNode.ts:88\n                \n            \n\n\n            \n                \n                    Funzione che ha come scopo la valorizzazione del nodo (rete-node) con i dati in suo possesso.\nIn quasta fase avviene anche la fase iniziale di instanziamento delle porte input/output.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        worker\n                        \n                    \n                \n            \n            \n                \nworker(node: NodeData, inputs: WorkerInputs, outputs: WorkerOutputs)\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-nodes/network/networkNode.ts:119\n                \n            \n\n\n            \n                \n                    Funzione richiamta per eseguire operazioni che conivolgono computazioni dei nodi.\nNon sono necessari in questa versione.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                            NodeData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    inputs\n                                    \n                                            WorkerInputs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    outputs\n                                    \n                                            WorkerOutputs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Component, Input, Output, Node } from 'rete';\nimport { _Socket } from '../../../sockets/socket';\nimport { _Control } from '../../../controls/control';\nimport { AngularComponent, AngularComponentData } from 'rete-angular-render-plugin';\nimport { NetworkComponent } from './network.component';\nimport { NodeData, WorkerInputs, WorkerOutputs } from 'rete/types/core/data';\nimport {  reteBasicNodeInfo } from '../../reteBasic';\nimport { EnumNodeType, InterfacePortType } from 'src/app/models/appType';\n\n/**\n * Classe utilizzata per indicare il tipo di modulo NetworkNode.\n * @see {reteBasicNodeInfo}\n */\nexport class ReteNetworkInfo extends reteBasicNodeInfo {\n  type: EnumNodeType.Network;\n  externalInterfaceName: string;\n  externalInterfaceType: InterfacePortType;\n}\n\n/**\n * Funzione dichiarata in NetworkNode. \n * Essa ha lo scopo di generare una struttura dati empty.\n * Viene utilizzata in per instanziare un nodo del tipo di ritorno indicato senza dati.\n * @returns {ReteSubnetInfo}\n */\nexport function getEmptyNetworkInfo():ReteNetworkInfo {\n  let x: ReteNetworkInfo = {\n    Input: [],\n    Output: [],\n    name: \"\",\n    type: EnumNodeType.Network,\n    externalInterfaceName: '',\n    externalInterfaceType: undefined\n  };\n  return x;\n\n}\n\n\n/**\n * Classe che rappresenta il nodo (rete-node) Network all'interno del canvas/editor di rete.\n */\nexport class NetworkNode extends Component implements AngularComponent {\n\n  data: AngularComponentData;\n\n  /**\n   * Costruttore di NetworkNode\n   */\n  constructor() {\n    super(EnumNodeType.Network);\n    this.data.render = 'angular';\n    this.data.component = NetworkComponent;\n  }\n\n  /**\n   * Funzione richiamata in fase di costruzione del nodo (rete-node).\n   * Controlla se bisogna instanziare il nodo oppure crearne uno nuovo:\n   * - In fase di design, il nodo non ha dati, per cui bisogna crearne uno nuovo.\n   * - In fase di visualizing, il nodo presenta dei dati, per cui va valorizzato il nodo.\n   * @param node \n   */\n  async builder(node: Node) {\n    if (Object.keys(node.data).length === 0)\n      this.createNewNode(node)\n    else\n      this.valorizeNode(node)\n  }\n\n  /**\n   * Funzione che ha come scopo creare un nodo (rete-node).\n   * In particolare gli assegna una struttura vuota.\n   * @param node \n   */\n  createNewNode(node: Node) {\n    let t = getEmptyNetworkInfo()\n    node.data = {\n      ...node.data,\n      ...t\n    }\n  }\n\n  /**\n   * Funzione che ha come scopo la valorizzazione del nodo (rete-node) con i dati in suo possesso.\n   * In quasta fase avviene anche la fase iniziale di instanziamento delle porte input/output.\n   * @param node \n   */\n  valorizeNode(node: Node) {\n    var i: any = node.data['Input'];\n    var o: any = node.data['Output'];\n    var il = i.length;\n    var ol = o.length;\n\n    for (let index = 0; index \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/NetworkSimpleData.html":{"url":"classes/NetworkSimpleData.html","title":"class - NetworkSimpleData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  NetworkSimpleData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsExport/moduleExport.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano i dati delle network all'interno dei node_templates.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                properties\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        properties\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         PropertiesNSD\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:139\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         NetworkTypeExport\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:138\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ModeTypeExport, ModuleTypeExport, NetworkTypeExport, NodeTypeExport, PortTypeExport, RelationshipsTypeExport, SubnetTypeExport, ToscaDefinitionType } from \"./TypeExport\"\n\n\n/**\n * Classe utilizzata per l'export. \n * Contiene le informazioni generali per il modulo che devono esserci nello standard Tosca.\n */\nexport class ModuleExport {\n    tosca_definitions_version: ToscaDefinitionType\n    description: string\n    imports: string[]\n    node_templates: { [name: string]: ModuleSimpleData | NodeSimpleData | PortSimpleData | NetworkSimpleData | SubnetSimpleData }\n    dsl_definition: any | null; //future\n    capabilites: any | null //future\n    outputs: any | null //future\n}\n\n/**\n * Classe che contiene gli attributi che indicano la rappresentazione del modulo per l'export.\n */\nexport class ModuleSimpleData {\n    type: ModuleTypeExport\n    properties: PropertiesMSD\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà del modulo per l'export.\n */\nexport class PropertiesMSD {\n    mode: ModeTypeExport\n    description: string\n    version: string | number\n    constraints: ConstraintsMSD\n    interface_networks: {\n        providers: InterfaceNetworksProvider[]\n        consumers: InterfaceNetworksConsumer[]\n    }\n    virtual_machines: VirtualMachine[]\n}\n/**\n * Classe che contiene gli attributi che indicano i vincoli di connessione del modulo per l'export.\n */\nexport class ConstraintsMSD {\n    interface_constraints: InterfaceConstraints[]\n    module_constraints: ModuleConstraints[]\n    network_constraints: NetworkConstraints[]\n}\n/**\n * Classe che contiene gli attributi che indicano i viconli per le interfacce di connessione del modulo.\n */\nexport class InterfaceConstraints {\n    local_interface: string\n    multiple_mode: boolean = false //future\n    module_name: string\n    compatibility: string = \"1.0\" // future\n    remote_interface: string\n}\n/**\n * Classe che contiene gli attributi che indicano i viconli del modulo.\n */\nexport class ModuleConstraints {\n}\n/**\n * Classe che contiene gli attributi che indicano i viconli dei network del modulo.\n */\nexport class NetworkConstraints {\n}\n/**\n * Classe che contiene gli attributi che indicano le interfacce provider del modulo.\n */\nexport class InterfaceNetworksProvider {\n    interface: string\n    network: string\n    tag: string\n    subnets: SubnetExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano le interfacce consumer del modulo.\n */\nexport class InterfaceNetworksConsumer {\n    interface: string\n    network: string\n    tag: string\n    subnets: SubnetExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano l'insieme di host presenti in un modulo.\n */\nexport class VirtualMachine {\n    virtual_machine: string\n    ports: VirtualMachinePorts[]\n}\n/**\n * Classe che contiene gli attributi che indicano le porte associate ad un host di un modulo.\n */\nexport class VirtualMachinePorts {\n    port: string\n    network: string\n    subnets: SubnetExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano la subnet connessa alla porte dell'host.\n * @see {VirtualMachinePorts}\n */\nexport class SubnetExport {\n    subnet: string;\n}\n\n/**\n * Classe che contiene gli attributi che indica un nodo all'interno dei node_templates.\n * @see {ModuleExport}\n */\nexport class NodeSimpleData {\n    type: NodeTypeExport\n    properties: any | null // future\n    interfaces: any | null // future\n    relationships: RelationshipsExport[]\n}\n\n/**\n * Classe che contiene gli attributi che indicano le relazioni generali.\n */\nexport class RelationshipsExport {\n    type: RelationshipsTypeExport\n    target: string\n}\n/**\n * Classe che contiene gli attributi che indicano i dati della porta all'interno dei node_templates.\n */\nexport class PortSimpleData {\n    type: PortTypeExport\n    relationships: RelationshipsExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano i dati delle network all'interno dei node_templates.\n */\nexport class NetworkSimpleData {\n    type: NetworkTypeExport\n    properties: PropertiesNSD\n}\n/**\n * Classe che contiene gli attributi che indicano le proprietà della network all'interno dei node_templates.\n * @see {NetworkSimpleData}\n */\nexport class PropertiesNSD {\n    openstack_config?: any | null // future\n    use_external_resource?: boolean | null // future\n    resource_id?: any | null // future\n}\n\n/**\n * Classe che contiene gli attributi che indicano i dati delle subnet all'interno dei node_templates.\n */\nexport class SubnetSimpleData {\n    type: SubnetTypeExport\n    relationships: RelationshipsExport[]\n    properties: PropertiesSSD\n}\n/**\n * Classe che contiene gli attributi che indicano le proprietà della subnet all'interno dei node_templates.\n * @see {NetworkSimpleData}\n */\nexport class PropertiesSSD {\n    subnet?: {\n        ip_version: string | number\n        cidr: string\n        enable_dhcp: boolean\n        gateway_ip?: any | null // future\n    }\n    openstack_config?: any | null // future\n    use_external_resource?: boolean | null // future\n    resource_id?: any | null // future\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/NodeSimpleData.html":{"url":"classes/NodeSimpleData.html","title":"class - NodeSimpleData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  NodeSimpleData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsExport/moduleExport.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indica un nodo all'interno dei node_templates.\nSee {ModuleExport}\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                interfaces\n                            \n                            \n                                properties\n                            \n                            \n                                relationships\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        interfaces\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     any | null\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:116\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        properties\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     any | null\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:115\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        relationships\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         RelationshipsExport[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:117\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         NodeTypeExport\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:114\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ModeTypeExport, ModuleTypeExport, NetworkTypeExport, NodeTypeExport, PortTypeExport, RelationshipsTypeExport, SubnetTypeExport, ToscaDefinitionType } from \"./TypeExport\"\n\n\n/**\n * Classe utilizzata per l'export. \n * Contiene le informazioni generali per il modulo che devono esserci nello standard Tosca.\n */\nexport class ModuleExport {\n    tosca_definitions_version: ToscaDefinitionType\n    description: string\n    imports: string[]\n    node_templates: { [name: string]: ModuleSimpleData | NodeSimpleData | PortSimpleData | NetworkSimpleData | SubnetSimpleData }\n    dsl_definition: any | null; //future\n    capabilites: any | null //future\n    outputs: any | null //future\n}\n\n/**\n * Classe che contiene gli attributi che indicano la rappresentazione del modulo per l'export.\n */\nexport class ModuleSimpleData {\n    type: ModuleTypeExport\n    properties: PropertiesMSD\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà del modulo per l'export.\n */\nexport class PropertiesMSD {\n    mode: ModeTypeExport\n    description: string\n    version: string | number\n    constraints: ConstraintsMSD\n    interface_networks: {\n        providers: InterfaceNetworksProvider[]\n        consumers: InterfaceNetworksConsumer[]\n    }\n    virtual_machines: VirtualMachine[]\n}\n/**\n * Classe che contiene gli attributi che indicano i vincoli di connessione del modulo per l'export.\n */\nexport class ConstraintsMSD {\n    interface_constraints: InterfaceConstraints[]\n    module_constraints: ModuleConstraints[]\n    network_constraints: NetworkConstraints[]\n}\n/**\n * Classe che contiene gli attributi che indicano i viconli per le interfacce di connessione del modulo.\n */\nexport class InterfaceConstraints {\n    local_interface: string\n    multiple_mode: boolean = false //future\n    module_name: string\n    compatibility: string = \"1.0\" // future\n    remote_interface: string\n}\n/**\n * Classe che contiene gli attributi che indicano i viconli del modulo.\n */\nexport class ModuleConstraints {\n}\n/**\n * Classe che contiene gli attributi che indicano i viconli dei network del modulo.\n */\nexport class NetworkConstraints {\n}\n/**\n * Classe che contiene gli attributi che indicano le interfacce provider del modulo.\n */\nexport class InterfaceNetworksProvider {\n    interface: string\n    network: string\n    tag: string\n    subnets: SubnetExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano le interfacce consumer del modulo.\n */\nexport class InterfaceNetworksConsumer {\n    interface: string\n    network: string\n    tag: string\n    subnets: SubnetExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano l'insieme di host presenti in un modulo.\n */\nexport class VirtualMachine {\n    virtual_machine: string\n    ports: VirtualMachinePorts[]\n}\n/**\n * Classe che contiene gli attributi che indicano le porte associate ad un host di un modulo.\n */\nexport class VirtualMachinePorts {\n    port: string\n    network: string\n    subnets: SubnetExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano la subnet connessa alla porte dell'host.\n * @see {VirtualMachinePorts}\n */\nexport class SubnetExport {\n    subnet: string;\n}\n\n/**\n * Classe che contiene gli attributi che indica un nodo all'interno dei node_templates.\n * @see {ModuleExport}\n */\nexport class NodeSimpleData {\n    type: NodeTypeExport\n    properties: any | null // future\n    interfaces: any | null // future\n    relationships: RelationshipsExport[]\n}\n\n/**\n * Classe che contiene gli attributi che indicano le relazioni generali.\n */\nexport class RelationshipsExport {\n    type: RelationshipsTypeExport\n    target: string\n}\n/**\n * Classe che contiene gli attributi che indicano i dati della porta all'interno dei node_templates.\n */\nexport class PortSimpleData {\n    type: PortTypeExport\n    relationships: RelationshipsExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano i dati delle network all'interno dei node_templates.\n */\nexport class NetworkSimpleData {\n    type: NetworkTypeExport\n    properties: PropertiesNSD\n}\n/**\n * Classe che contiene gli attributi che indicano le proprietà della network all'interno dei node_templates.\n * @see {NetworkSimpleData}\n */\nexport class PropertiesNSD {\n    openstack_config?: any | null // future\n    use_external_resource?: boolean | null // future\n    resource_id?: any | null // future\n}\n\n/**\n * Classe che contiene gli attributi che indicano i dati delle subnet all'interno dei node_templates.\n */\nexport class SubnetSimpleData {\n    type: SubnetTypeExport\n    relationships: RelationshipsExport[]\n    properties: PropertiesSSD\n}\n/**\n * Classe che contiene gli attributi che indicano le proprietà della subnet all'interno dei node_templates.\n * @see {NetworkSimpleData}\n */\nexport class PropertiesSSD {\n    subnet?: {\n        ip_version: string | number\n        cidr: string\n        enable_dhcp: boolean\n        gateway_ip?: any | null // future\n    }\n    openstack_config?: any | null // future\n    use_external_resource?: boolean | null // future\n    resource_id?: any | null // future\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/NodeTopologyElement.html":{"url":"classes/NodeTopologyElement.html","title":"class - NodeTopologyElement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  NodeTopologyElement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsApplication/applicationModels.ts\n        \n\n\n\n\n            \n                Implementa\n            \n            \n                            TopologyElement\n            \n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                connection\n                            \n                            \n                                elements\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        connection\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ReteConnection[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsApplication/applicationModels.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        elements\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     literal type\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsApplication/applicationModels.ts:72\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ReteHostInfo } from \"src/app/rete-settings/nodes/rete-nodes/host/hostNode\";\nimport { ReteNetworkInfo } from \"src/app/rete-settings/nodes/rete-nodes/network/networkNode\";\nimport { ReteSubnetInfo } from \"src/app/rete-settings/nodes/rete-nodes/subnet/subnetNode\";\nimport { ReteMirroringModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/mirroringModuleInstance/mirroringModuleInstanceNode\";\nimport { ReteTheaterInternalServiceModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/theaterInternalServiceModuleInstance/theaterInternalServiceModuleInstanceNode\";\nimport { ReteTheaterModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/theaterModuleInstance/theaterModuleInstanceNode\";\nimport { FlavorBasicInfo } from \"../modelsDTO/falvorDTO\";\nimport { HostModuleDTO } from \"../modelsDTO/hostDTO\";\nimport { ModuleNetworkInterfaceDTO, ModuleInstancePropertiesDTO, SimpleModuleDTO, TheaterInstancePropertiesDTO, ModuleInstanceDTO, ModuleDTO, SimpleAreaDTO, AreaDTO } from \"../modelsDTO/moduleDTO\";\nimport { TheaterDTO } from \"../modelsDTO/theaterDTO\";\n\n\nexport interface CommonModule {\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n}\n\n\n/**\n * Classe contenente gli attributi utilizzati per le operazioni che coinvolgono i moduli.\n * ps. Questa struttura è prettamente utilizzata nella chiamata relativa al singolo modulo.\n */\nexport class ModuleApplication extends ModuleDTO implements CommonModule {\n    imports: string[] // perchè nell'export yaml è previsto\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n    // serve per validare il json risultante dal parsing del theaterApplication\n    validateObject?: string = \"module\";\n}\n// PER IMPLEMENTAZIONI FUTURE, PER COERENZA, PRENDERE DIRETTAMENTE I SINGOLI NODI DALLA CHIAMATA ESCLUSIVA E NON DA QUELLA CHE RESTITUISCE TUTTI I TEATRI\n/**\n * Classe contenente gli attributi utilizzati per le operazioni che coinvolgono i moduli.\n * ps. Questa struttura è prettamente utilizzata nella chiamata che prende tutti i moduli del teatro.\n */\nexport class SimpleModuleApplication extends SimpleModuleDTO implements CommonModule {\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n}\n\n\nexport class ReteConnection {\n    from: string;\n    port_src: string;\n    to: string;\n    port_dst: string;\n}\n\nexport interface TopologyList {\n    rete: any;\n    topology?: TopologyElement\n}\nexport class TopologyElement {\n    elements: { [name: string]: any };\n    connection: ReteConnection[]\n}\n\n// apptype module topology\n\nexport class NodeTopologyElement implements TopologyElement {\n    elements: { [hostName: string]: ReteHostInfo | ReteSubnetInfo | ReteNetworkInfo };\n    connection: ReteConnection[]\n}\n\nexport interface ModuleTopology extends TopologyList {\n    rete: ReteMirroringModuleInstanceInfo | ReteTheaterInternalServiceModuleInstanceInfo | ReteTheaterModuleInstanceInfo\n    topology: NodeTopologyElement;\n}\n\nexport class ModuleInstance extends ModuleInstanceDTO implements ModuleTopology {\n    // moduleTopology data\n    rete: ReteTheaterModuleInstanceInfo | ReteTheaterInternalServiceModuleInstanceInfo | ReteMirroringModuleInstanceInfo;\n    topology: NodeTopologyElement;\n    // other data\n    moduleInfo: SimpleModuleApplication\n}\n\n// apptype theater theater\n\nexport interface TheaterTopology extends TopologyElement {\n    elements: { [hostName: string]: ModuleInstance };\n    connection: ReteConnection[];\n}\n\nexport class TheaterApplication extends TheaterDTO implements TheaterTopology {\n    // theaterTopology data\n    elements: { [hostName: string]: ModuleInstance; };\n    connection: ReteConnection[];\n    // other data\n    properties: TheaterInstancePropertiesDTO;\n    topology: TheaterTopology;\n    // serve per validare il json risultante dal parsing del theaterApplication\n    validateObject?: string = \"theater\";\n}\n\nexport class AreaApplication extends AreaDTO {\n    color?: string;\n}\nexport class AreaColorDTO extends SimpleAreaDTO {\n    color: string;\n}\n\n\nexport class FlavorApplication extends FlavorBasicInfo {\n    flavorName: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"components/OffcanvasComponent.html":{"url":"components/OffcanvasComponent.html","title":"component - OffcanvasComponent","body":"\n                   \n\n\n\n\n\n  Componenti\n  \n  OffcanvasComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/offcanvas/offcanvas.component.ts\n\n\n\n    \n        Descrizione\n    \n    \n        Componente utilizzata per il rendering degli offcanvas a contenuto generico.\nSupporta operazioni di full-screen e mid-screen con posizioni: destra, sinistra, sotto, sopra\n\n    \n\n\n\n\n\n    Metadati\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-offcanvas\n            \n\n            \n                styleUrls\n                ./offcanvas.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./offcanvas.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _show\n                            \n                            \n                                    Protected\n                                closeIconClass\n                            \n                            \n                                    Protected\n                                toOpenIconClass\n                            \n                            \n                                    Protected\n                                toReduceIconClass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                closeOffcanvas\n                            \n                            \n                                reduce\n                            \n                        \n                    \n                \n\n                \n                    \n                        Input\n                    \n                \n                \n                    \n                        \n                            \n                                alt_title\n                            \n                            \n                                element\n                            \n                            \n                                isfull\n                            \n                            \n                                position\n                            \n                            \n                                show\n                            \n                            \n                                title\n                            \n                            \n                                title_template\n                            \n                        \n                    \n                \n\n                \n                    \n                        Output\n                    \n                \n                \n                    \n                        \n                            \n                                showChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessori\n                        \n                    \n                    \n                        \n                            \n                                \n                                    show\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Costruttore\n        \n            \n                \n                    \nconstructor(cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Definito in src/app/components/offcanvas/offcanvas.component.ts:76\n                            \n                        \n\n                \n                    \n                            Constructor componente OffcavanvasComponent\n\n                            \n                                    Parametri :\n                                    \n                                        \n                                            \n                                                Nome\n                                                    Tipo\n                                                Opzionale\n                                            \n                                        \n                                        \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Input\n        \n            \n                \n                    \n                        \n                        alt_title\n                    \n                \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                    Definito in src/app/components/offcanvas/offcanvas.component.ts:43\n                            \n                        \n                \n                    \n                        Variabile in input che rappresente un titolo alternativo (se presente).\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        element\n                    \n                \n                \n                    \n                        Tipo :     TemplateRef\n\n                    \n                \n                        \n                            \n                                    Definito in src/app/components/offcanvas/offcanvas.component.ts:54\n                            \n                        \n                \n                    \n                        Variabile in input che rappresenta il Blob da visualizzare come contenuto nell'offcanvas\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isfull\n                    \n                \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                \n                    \n                        Valore predefinito : false\n                    \n                \n                        \n                            \n                                    Definito in src/app/components/offcanvas/offcanvas.component.ts:71\n                            \n                        \n                \n                    \n                        Variabile che rappresenta lo stato di visualizzazione full-screen / mid-screen\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        position\n                    \n                \n                \n                    \n                        Tipo :     \"end\" | \"start\" | \"top\" | \"bottom\"\n\n                    \n                \n                        \n                            \n                                    Definito in src/app/components/offcanvas/offcanvas.component.ts:64\n                            \n                        \n                \n                    \n                        Variabile che indica la posizione dell'offcanvas.\nCi sono quattro possibilità:\n @type {\"end\"} dx\n @type {\"start\"} sx\n @type {\"top\"} sopra\n @type {\"bottom\"} sotto\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        show\n                    \n                \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                        \n                            \n                                    Definito in src/app/components/offcanvas/offcanvas.component.ts:25\n                            \n                        \n                \n                    \n                        Variabile (set) input che rappresenta lo stato dell'hide-or-show dell'offcanvas\nQuando esegue l'update del valore show. Lo emette anche in output.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                    Definito in src/app/components/offcanvas/offcanvas.component.ts:38\n                            \n                        \n                \n                    \n                        Variabile in input che rappresenta il titolo.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        title_template\n                    \n                \n                \n                    \n                        Tipo :     TemplateRef\n\n                    \n                \n                        \n                            \n                                    Definito in src/app/components/offcanvas/offcanvas.component.ts:48\n                            \n                        \n                \n                    \n                        Variabile in input, messo, se presente, al posto del titolo.\n\n                    \n                \n            \n        \n\n    \n    Output\n        \n            \n                \n                    \n                        \n                        showChange\n                    \n                \n                \n                    \n                        Tipo :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Definito in src/app/components/offcanvas/offcanvas.component.ts:32\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        closeOffcanvas\n                        \n                    \n                \n            \n            \n                \ncloseOffcanvas()\n                \n            \n\n\n            \n                \n                    Definito in src/app/components/offcanvas/offcanvas.component.ts:91\n                \n            \n\n\n            \n                \n                    Funzione richiamata per la chiusura dell'offcanvas\nSee {show}\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reduce\n                        \n                    \n                \n            \n            \n                \nreduce()\n                \n            \n\n\n            \n                \n                    Definito in src/app/components/offcanvas/offcanvas.component.ts:100\n                \n            \n\n\n            \n                \n                    funzione richiamata per lo stato full/mid-screen dell'offcanvas\nSee {isfull}\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _show\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/offcanvas/offcanvas.component.ts:19\n                        \n                    \n\n            \n                \n                    Variabile di appoggio per lo stato \"hide-or-show\" dell'offcanvas.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        closeIconClass\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                \n                    \n                        Valore predefinito : \"bi bi-x-lg\"\n                    \n                \n                    \n                        \n                                Definito in src/app/components/offcanvas/offcanvas.component.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        toOpenIconClass\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                \n                    \n                        Valore predefinito : \"bi bi-square\"\n                    \n                \n                    \n                        \n                                Definito in src/app/components/offcanvas/offcanvas.component.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        toReduceIconClass\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                \n                    \n                        Valore predefinito : \"bi bi-box-arrow-in-down-right\"\n                    \n                \n                    \n                        \n                                Definito in src/app/components/offcanvas/offcanvas.component.ts:74\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessori\n    \n        \n            \n                \n                    \n                        \n                        show\n                    \n                \n\n                \n                    \n                        getshow()\n                    \n                \n                            \n                                \n                                    Definito in src/app/components/offcanvas/offcanvas.component.ts:29\n                                \n                            \n\n                \n                    \n                        setshow(val: boolean)\n                    \n                \n                            \n                                \n                                    Definito in src/app/components/offcanvas/offcanvas.component.ts:25\n                                \n                            \n                    \n                        \n                                Variabile (set) input che rappresenta lo stato dell'hide-or-show dell'offcanvas\nQuando esegue l'update del valore show. Lo emette anche in output.\n\n\n                                \n                                        Parametri :\n                                        \n                                            \n                                                \n                                                    Nome\n                                                        Tipo\n                                                    Opzionale\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { ChangeDetectorRef, Component, EventEmitter, Input, Output, TemplateRef } from '@angular/core';\n\n\n/**\n * Componente utilizzata per il rendering degli offcanvas a contenuto generico.\n * Supporta operazioni di full-screen e mid-screen con posizioni: destra, sinistra, sotto, sopra \n */\n@Component({\n  selector: 'app-offcanvas',\n  templateUrl: './offcanvas.component.html',\n  styleUrls: ['./offcanvas.component.sass'],\n  // changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class OffcanvasComponent {\n\n  /**\n   * Variabile di appoggio per lo stato \"hide-or-show\" dell'offcanvas.\n   */\n  protected _show: boolean;\n  /**\n   * Variabile (set) input che rappresenta lo stato dell'hide-or-show dell'offcanvas\n   * Quando esegue l'update del valore show. Lo emette anche in output.\n   */\n  @Input()\n  set show(val: boolean) {\n    this.showChange.emit(val);\n    this._show = val;\n  }\n  get show() {\n    return this._show;\n  }\n  @Output() showChange: EventEmitter = new EventEmitter();\n\n  /**\n   * Variabile in input che rappresenta il titolo.\n   * @type {string}\n   */\n  @Input() title: string;\n  /**\n   * Variabile in input che rappresente un titolo alternativo (se presente).\n   * @type {string}\n   */\n  @Input() alt_title?: string;\n  /**\n   * Variabile in input, messo, se presente, al posto del titolo.\n   * @type {TemplateRef}\n   */\n  @Input() title_template?: TemplateRef;\n\n  /**\n   * Variabile in input che rappresenta il Blob da visualizzare come contenuto nell'offcanvas\n   * @type {TemplateRef}\n   */\n  @Input() element: TemplateRef;\n\n  /**\n   * Variabile che indica la posizione dell'offcanvas.\n   * Ci sono quattro possibilità:\n   *  @type {\"end\"} dx\n   *  @type {\"start\"} sx\n   *  @type {\"top\"} sopra\n   *  @type {\"bottom\"} sotto\n   */\n  @Input() position: \"end\" | \"start\" | \"top\" | \"bottom\";\n\n  /**\n   * Variabile che rappresenta lo stato di visualizzazione full-screen / mid-screen\n   * @type {boolean}\n   * @default {false}\n   */\n  @Input() isfull?: boolean = false;\n  \n  // variabili classe icone\n  protected toReduceIconClass: string = \"bi bi-box-arrow-in-down-right\";\n  protected toOpenIconClass: string = \"bi bi-square\";\n  protected closeIconClass: string = \"bi bi-x-lg\";\n\n\n  /**\n   * Constructor componente OffcavanvasComponent\n   * @param cdr \n   */\n  constructor(private cdr: ChangeDetectorRef) {\n  }\n\n\n  /**\n   * Funzione richiamata per la chiusura dell'offcanvas\n   * @see {show}\n   */\n  closeOffcanvas() {\n    this.show = false;\n    this.cdr.detectChanges();\n  }\n\n  /**\n   * funzione richiamata per lo stato full/mid-screen dell'offcanvas\n   * @see {isfull}\n   */\n  reduce() {\n    this.isfull = !this.isfull;\n    this.cdr.detectChanges();\n  }\n\n}\n\n    \n\n    \n        \n\n    \n    \n        \n            {{ title }}\n        \n        \n            {{ alt_title }}\n        \n        \n        \n        \n\n        \n            \n                \n                    \n                \n                 \n                \n            \n        \n    \n\n    \n    \n\n        \n        \n\n    \n\n    \n\n    \n                \n                    ./offcanvas.component.sass\n                \n                $background-color: #2a2f34\n$text-color: white\n$cite-color: #b3b3b3\n$shadow-color: rgba(0,0,0,.53)!important\n\n$text-tab-selected: white\n$text-tab-unselected: #93a1ba\n\n\n.side-wrapper-opt\n    background-color: $background-color\n    /* padding-right: 1.5em */\n\n.my-offcanvas\n    opacity: 99%\n    // min-width: 50%\n    visibility: visible\n    visibility: visible\n    opacity: 99%\n    box-shadow: 0 .5rem 1rem $shadow-color!important\n\n.my-offcanvas-title\n    overflow: hidden\n    text-overflow: ellipsis\n\n.my-offcanvas-body\n    width: 100%\n    height: 100% !important\n    padding: 0\n\np,h4,h5\n    color: $text-color\n\ncite\n    color: $cite-color\n\n.text-tab-selected\n    // font-size: 1.5em\n    color: $text-tab-selected !important\n    font-weight: bold\n\n.text-tab-unselected\n    // fonr-size: 1em\n    color: $text-tab-unselected !important\n    \n\n    \n        \n        \n            \n                Legenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento html con direttive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            {{ title }}                            {{ alt_title }}                                                                                                                                                                                             '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ComposerComponent', 'selector': 'app-composer'},{'name': 'ControlTemplate', 'selector': ''},{'name': 'DataInputComponent', 'selector': 'app-data-input'},{'name': 'DataInputV2Component', 'selector': 'app-data-input-v2'},{'name': 'DataItemComponent', 'selector': 'app-window-item'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HostComponent', 'selector': ''},{'name': 'HowToUseComponent', 'selector': 'app-how-to-use'},{'name': 'MirroringModuleInstanceComponent', 'selector': ''},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavbarElementComponent', 'selector': 'app-navbar-element'},{'name': 'NetworkComponent', 'selector': ''},{'name': 'OffcanvasComponent', 'selector': 'app-offcanvas'},{'name': 'ReteModuleComposerComponent', 'selector': 'app-rete-module-composer'},{'name': 'ReteModuleVisualizerComponent', 'selector': 'app-rete-module-visualizer'},{'name': 'ReteTheaterComposerComponent', 'selector': 'app-rete-theater-composer'},{'name': 'ReteTheaterVisualizerComponent', 'selector': 'app-rete-theater-visualizer'},{'name': 'SubnetComponent', 'selector': ''},{'name': 'TabnavComponent', 'selector': 'app-tabnav'},{'name': 'TheaterInternalServiceModuleInstanceComponent', 'selector': ''},{'name': 'TheaterModuleInstanceComponent', 'selector': ''},{'name': 'UnderbarComponent', 'selector': 'app-underbar'},{'name': 'VisualizerComponent', 'selector': 'app-displayer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OffcanvasComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/PageableDTO.html":{"url":"classes/PageableDTO.html","title":"class - PageableDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  PageableDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsDTO/elementDTO.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano il tipo di paging ritornato dalle api.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                offset\n                            \n                            \n                                paged\n                            \n                            \n                                pageNumber\n                            \n                            \n                                pageSize\n                            \n                            \n                                sort\n                            \n                            \n                                unpaged\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        offset\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/elementDTO.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        paged\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/elementDTO.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pageNumber\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/elementDTO.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pageSize\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/elementDTO.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sort\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         SortDTO\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/elementDTO.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unpaged\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/elementDTO.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class SortDTO {\n    empty: boolean\n    sorted: boolean\n    unsorted: boolean\n}\n/**\n * Classe che contiene gli attributi che indicano il tipo di paging ritornato dalle api.\n */\nexport class PageableDTO {\n    offset: string | number\n    pageNumber: string | number\n    pageSize: string | number\n    paged: boolean\n    sort: SortDTO\n    unpaged: boolean\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/ParseDataForTheaterVisualizer.html":{"url":"classes/ParseDataForTheaterVisualizer.html","title":"class - ParseDataForTheaterVisualizer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  ParseDataForTheaterVisualizer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/application/parse/parseDataForTheaterVisualizer.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Elemento che ha lo scopo di eseguire il fetching ed il parsing dei dati per la visualizzazione del teatro.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                fixTheaterName\n                            \n                            \n                                get_and_remove_theater_properties_from_blueprint\n                            \n                            \n                                getModuleConnection\n                            \n                            \n                                    Async\n                                getModuleDict\n                            \n                            \n                                    Async\n                                getModulesDetails\n                            \n                            \n                                    Async\n                                getModulesInterfaces\n                            \n                            \n                                    Async\n                                getModulesNodes\n                            \n                            \n                                getModulesTopology\n                            \n                            \n                                initTheaterAfterFetch\n                            \n                            \n                                parseModuleInstance\n                            \n                            \n                                    Async\n                                parseModulesFromTheater\n                            \n                            \n                                    Async\n                                parseTheater\n                            \n                            \n                                    Async\n                                parseTheaterForTheaterVisualizer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Costruttore\n        \n            \n                \n                    \nconstructor(theaterService: TheaterService, moduleService: ModuleService)\n                    \n                \n                        \n                            \n                                Definito in src/app/services/application/parse/parseDataForTheaterVisualizer.ts:18\n                            \n                        \n\n                \n                    \n                            Costruttore componente.\n\n                            \n                                    Parametri :\n                                    \n                                        \n                                            \n                                                Nome\n                                                    Tipo\n                                                Opzionale\n                                            \n                                        \n                                        \n                                                \n                                                        theaterService\n                                                  \n                                                        \n                                                                        TheaterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        moduleService\n                                                  \n                                                        \n                                                                        ModuleService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        fixTheaterName\n                        \n                    \n                \n            \n            \n                \nfixTheaterName(rowTheater: TheaterDTO)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/parse/parseDataForTheaterVisualizer.ts:112\n                \n            \n\n\n            \n                \n                    Funzione che ha come scopo la fix del nome del teatro nel caso diverga dalla sua rappresentazione nel node_templates.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    rowTheater\n                                    \n                                                TheaterDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get_and_remove_theater_properties_from_blueprint\n                        \n                    \n                \n            \n            \n                \nget_and_remove_theater_properties_from_blueprint(rowTheater: TheaterDTO)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/parse/parseDataForTheaterVisualizer.ts:135\n                \n            \n\n\n            \n                \n                    Funzione che serve ad esportare le proprietà del modulo dalla parte dei node_templates all'oggetto generale.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    rowTheater\n                                    \n                                                TheaterDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TheaterInstancePropertiesDTO\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getModuleConnection\n                        \n                    \n                \n            \n            \n                \ngetModuleConnection(theater: TheaterApplication)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/parse/parseDataForTheaterVisualizer.ts:299\n                \n            \n\n\n            \n                \n                    Funzione che ha lo scopo di valorizzare le connessioni dei moduli\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    theater\n                                    \n                                                TheaterApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ReteConnection[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getModuleDict\n                        \n                    \n                \n            \n            \n                \n                    \n                    getModuleDict(modules: SimpleModuleDTO[])\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/parse/parseDataForTheaterVisualizer.ts:174\n                \n            \n\n\n            \n                \n                    Funzione che prende in input i dati dei moduli del teatro e le ritorna parserizzati e sottoforma organizzata di dizionario.\nSee {getModulesDetails}\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    modules\n                                    \n                                            SimpleModuleDTO[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getModulesDetails\n                        \n                    \n                \n            \n            \n                \n                    \n                    getModulesDetails(modules: SimpleModuleDTO[])\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/parse/parseDataForTheaterVisualizer.ts:193\n                \n            \n\n\n            \n                \n                    Funzione che prende i moduli reperiti dal server e li parserizza e \"arricchisce\" con le informazione dei nodi e interfacce.\nSee {getModulesNodes}\nSee {getModulesInterfaces}\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    modules\n                                    \n                                            SimpleModuleDTO[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getModulesInterfaces\n                        \n                    \n                \n            \n            \n                \n                    \n                    getModulesInterfaces(modules: SimpleModuleDTO[])\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/parse/parseDataForTheaterVisualizer.ts:244\n                \n            \n\n\n            \n                \n                    Funzione che esegue il fetch delle interfacce di un modulo di un teatro.\nSee {moduleService}\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    modules\n                                    \n                                            SimpleModuleDTO[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getModulesNodes\n                        \n                    \n                \n            \n            \n                \n                    \n                    getModulesNodes(modules: SimpleModuleDTO[])\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/parse/parseDataForTheaterVisualizer.ts:219\n                \n            \n\n\n            \n                \n                    Funzione che esegue il fetch degli host di un modulo di un teatro.\nSee {moduleService}\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    modules\n                                    \n                                            SimpleModuleDTO[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getModulesTopology\n                        \n                    \n                \n            \n            \n                \ngetModulesTopology(modulesInfo: literal type)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/parse/parseDataForTheaterVisualizer.ts:331\n                \n            \n\n\n            \n                \n                    Funzione che ha lo scopo di controllare ed inserire la topologia dei nodi di ogni moduli del teatro.\nQuesta funzione inizializza già i nodi da poter essere inseriti nel canvas.\nSee {createHost}\nSee {createSubnet}\nSee {createNetwork}\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    modulesInfo\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initTheaterAfterFetch\n                        \n                    \n                \n            \n            \n                \ninitTheaterAfterFetch(rowTheater: TheaterDTO)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/parse/parseDataForTheaterVisualizer.ts:91\n                \n            \n\n\n            \n                \n                    Funzione che inizializza gli attributi del teatro per l'applicazione.\nSee {fixTheaterName}\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    rowTheater\n                                    \n                                                TheaterDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TheaterApplication\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        parseModuleInstance\n                        \n                    \n                \n            \n            \n                \nparseModuleInstance(theater: TheaterApplication, modules: literal type)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/parse/parseDataForTheaterVisualizer.ts:269\n                \n            \n\n\n            \n                \n                    Funzione che si occupa di collegare le istanze dei moduli del teatro con i dettagli dei singoli moduli (root).\nQuesta funzione produce direttamente i dati del modulo (sottoforma di nodo) da poter essere inserito nel canvas.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    theater\n                                    \n                                                TheaterApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    modules\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        parseModulesFromTheater\n                        \n                    \n                \n            \n            \n                \n                    \n                    parseModulesFromTheater(theaterUUID: string | number)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/parse/parseDataForTheaterVisualizer.ts:156\n                \n            \n\n\n            \n                \n                    Funzione che si occupa di eseguire il fetching dei moduli appartenenti al teatro e le ritorna come dizionario di modulo-oggetto.\nSi occupa anche di organizzare la topologia dei moduli del teatro.\nSee {theaterService}\nSee {getModuleDict}\nSee {getModulesTopology}\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    theaterUUID\n                                    \n                                            string | number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        parseTheater\n                        \n                    \n                \n            \n            \n                \n                    \n                    parseTheater(id: string | number)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/parse/parseDataForTheaterVisualizer.ts:75\n                \n            \n\n\n            \n                \n                    Funzione che ritorna i dati a seguito della fetch con il server.\nSee {theaterService}\nSee {initTheaterAfterFetch}\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            string | number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        parseTheaterForTheaterVisualizer\n                        \n                    \n                \n            \n            \n                \n                    \n                    parseTheaterForTheaterVisualizer(id: string | number)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/parse/parseDataForTheaterVisualizer.ts:44\n                \n            \n\n\n            \n                \n                    Funzione che viene richiamata per fornire il teatro pareserizzato.\nQuesta funzione si avvale di tutte quei metodi che permettono di restituire e fixare un output adatto all'applicazione.\nSee {parseTheater}\nSee {parseModulesFromTheater}\nSee {parseModuleInstance}\nSee {getModuleConnection}\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            string | number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { TheaterService } from '../../api/theater.service';\nimport { ModuleService } from '../../api/module.service';\nimport { TheaterDTO } from '../../modelsDTO/theaterDTO';\nimport { ElementIntoTheaterDTO, ModuleInstanceDTO, ModuleNetworkInterfaceDTO, SimpleModuleDTO, TheaterInstancePropertiesDTO } from '../../modelsDTO/moduleDTO';\nimport { SimpleModuleApplication, ModuleInstance, TheaterApplication, ReteConnection } from '../../modelsApplication/applicationModels';\nimport { HostModuleDTO, HostPortModuleDTO } from '../../modelsDTO/hostDTO';\nimport { SubnetDTO } from '../../modelsDTO/networkDTO';\nimport { ReteHostInfo } from 'src/app/rete-settings/nodes/rete-nodes/host/hostNode';\nimport { ReteNetworkInfo } from 'src/app/rete-settings/nodes/rete-nodes/network/networkNode';\nimport { ReteSubnetInfo } from 'src/app/rete-settings/nodes/rete-nodes/subnet/subnetNode';\nimport { StaticValue, TheaterType } from 'src/app/models/appType';\nimport { createHost, createSubnet, createNetwork, createModuleNode } from './parseCommonElement';\n\n\n/**\n * Elemento che ha lo scopo di eseguire il fetching ed il parsing dei dati per la visualizzazione del teatro.\n */\nexport class ParseDataForTheaterVisualizer {\n\n    /**\n     * Costruttore componente.\n     * @param theaterService \n     * @param moduleService \n     */\n    constructor(\n        private theaterService: TheaterService,\n        private moduleService: ModuleService,\n    ) {\n    }\n\n\n\n\n    /**\n     * Funzione che viene richiamata per fornire il teatro pareserizzato.\n     * Questa funzione si avvale di tutte quei metodi che permettono di restituire e fixare un output adatto all'applicazione.\n     * @param id \n     * @returns {Promise}\n     * @see {parseTheater}\n     * @see {parseModulesFromTheater}\n     * @see {parseModuleInstance}\n     * @see {getModuleConnection}\n     */\n    async parseTheaterForTheaterVisualizer(id: string | number): Promise {\n\n        var theaterDTO: TheaterDTO;\n        var theater: TheaterApplication;\n        [theaterDTO, theater] = await this.parseTheater(id as string);\n\n        var modules: { [name: string]: SimpleModuleApplication } = await this.parseModulesFromTheater(theater.uuid);\n\n        // connect modules to instance-module into theater\n        var moduleInstances: { [name: string]: ModuleInstance }\n            = await this.parseModuleInstance(theater, modules);\n\n        //assign theater topology\n        theater.topology = {\n            elements: moduleInstances,\n            connection: this.getModuleConnection(theater)\n        }\n\n        return theater;\n    }\n\n\n\n\n    /**\n     * Funzione che ritorna i dati a seguito della fetch con il server.\n     * @param id \n     * @returns {Promise}\n     * @see {theaterService}\n     * @see {initTheaterAfterFetch}\n     */\n    async parseTheater(id: string | number): Promise {\n        //normalizzazione & get theater\n        var rowTheater: TheaterDTO = await this.theaterService.getTheaterInfoByID(id);\n        let theater: TheaterApplication = await this.initTheaterAfterFetch(rowTheater);\n        return [rowTheater, theater];\n    }\n\n\n\n\n    /**\n     * Funzione che inizializza gli attributi del teatro per l'applicazione.\n     * @param rowTheater \n     * @returns {TheaterApplication}\n     * @see {fixTheaterName}\n     */\n    initTheaterAfterFetch(rowTheater: TheaterDTO): TheaterApplication {\n        this.fixTheaterName(rowTheater);\n        let theaterProperties: TheaterInstancePropertiesDTO = this.get_and_remove_theater_properties_from_blueprint(rowTheater);\n        let theater: TheaterApplication = {\n            ...rowTheater,\n            properties: theaterProperties,\n            elements: {},\n            connection: [],\n            topology: undefined\n        };\n        return theater;\n    }\n\n\n\n\n\n    /**\n     * Funzione che ha come scopo la fix del nome del teatro nel caso diverga dalla sua rappresentazione nel node_templates.\n     * @param rowTheater \n     */\n    fixTheaterName(rowTheater: TheaterDTO) {\n        // @check controllo incoerenza nome teatro con quello riporato in node_templates -> si preferisce quello proveniente dal blueprint\n        if (!rowTheater.blueprintFile.node_templates[rowTheater.name]) {\n            Object.entries(rowTheater.blueprintFile.node_templates).map(([key, value]) => {\n                let moduleIntoTheater: ElementIntoTheaterDTO = value as ElementIntoTheaterDTO\n                if (moduleIntoTheater.type.toLowerCase().includes(TheaterType.theater.toLowerCase())) {\n                    rowTheater.name = key;\n                    return;\n                }\n            });\n            console.warn(\"Theater name doesn't match\");\n        }\n    }\n\n\n\n\n\n    /**\n     * Funzione che serve ad esportare le proprietà del modulo dalla parte dei node_templates all'oggetto generale.\n     * @param rowTheater \n     * @returns {TheaterInstancePropertiesDTO}\n     */\n    get_and_remove_theater_properties_from_blueprint(rowTheater: TheaterDTO): TheaterInstancePropertiesDTO {\n        // esporta e rimuove le proprietà situate in node_modules\n        let moduleIntoTheater: ElementIntoTheaterDTO = rowTheater.blueprintFile.node_templates[rowTheater.name];\n        let theaterProperties: TheaterInstancePropertiesDTO = moduleIntoTheater.properties as TheaterInstancePropertiesDTO;\n        delete rowTheater.blueprintFile.node_templates[rowTheater.name];\n        return theaterProperties;\n    }\n\n\n\n\n\n    /**\n     * Funzione che si occupa di eseguire il fetching dei moduli appartenenti al teatro e le ritorna come dizionario di modulo-oggetto.\n     * Si occupa anche di organizzare la topologia dei moduli del teatro.\n     * @param theaterUUID \n     * @returns {Promise}\n     * @see {theaterService}\n     * @see {getModuleDict}\n     * @see {getModulesTopology}\n     */\n    async parseModulesFromTheater(theaterUUID: string | number): Promise {\n        //normalizzazione & get modules -> Assign Map\n        let rowModules: SimpleModuleDTO[] = await this.theaterService.getTheaterModulesByUUID(theaterUUID);\n        let modules: { [name: string]: SimpleModuleApplication } = await this.getModuleDict(rowModules);\n        this.getModulesTopology(modules);\n        return modules;\n    }\n\n\n\n\n\n    /**\n     * Funzione che prende in input i dati dei moduli del teatro e le ritorna parserizzati e sottoforma organizzata di dizionario.\n     * @param modules \n     * @returns { Promise}\n     * @see {getModulesDetails}\n     */\n    async getModuleDict(modules: SimpleModuleDTO[]): Promise {\n        let moduleDict: { [name: string]: SimpleModuleApplication } = {};\n        let modulesApplication: SimpleModuleApplication[] = await this.getModulesDetails(modules);\n        Object.entries(modulesApplication).map(async ([key, value]) => {\n            moduleDict[value.name] = value;\n        });\n        return moduleDict;\n    }\n\n\n\n\n    /**\n     * Funzione che prende i moduli reperiti dal server e li parserizza e \"arricchisce\" con le informazione dei nodi e interfacce.\n     * @param modules \n     * @returns {Promise}\n     * @see {getModulesNodes}\n     * @see {getModulesInterfaces}\n     */\n    async getModulesDetails(modules: SimpleModuleDTO[]): Promise {\n        let h: { [key: string]: HostModuleDTO[] } = await this.getModulesNodes(modules);\n        let i: { [key: string]: ModuleNetworkInterfaceDTO[] } = await this.getModulesInterfaces(modules);\n        let moduleInfo: SimpleModuleApplication[] = [];\n        await Promise.all(\n            Object.entries(modules).map(async ([key, value]) => {\n                moduleInfo[key] = {\n                    ...value,\n                    hosts: h[key],\n                    interfaces: i[key],\n                }\n            })\n        )\n        return moduleInfo;\n    }\n\n\n\n\n\n    /**\n     * Funzione che esegue il fetch degli host di un modulo di un teatro.\n     * @param modules \n     * @returns {Promise}\n     * @see {moduleService}\n     */\n    async getModulesNodes(modules: SimpleModuleDTO[]): Promise {\n        let h: { [key: string]: HostModuleDTO[] } = {};\n        await Promise.all(\n            Object.entries(modules).map(async ([key, value]) => {\n                let simpleModuleDTO: SimpleModuleDTO = value as SimpleModuleDTO;\n                try {\n                    h[key] = await this.moduleService.getModuleHostByTheaterUUID(simpleModuleDTO.uuid);\n                } catch (e) {\n                    console.error(e);\n                }\n            })\n        )\n        return h;\n    }\n\n\n\n\n\n    /**\n     * Funzione che esegue il fetch delle interfacce di un modulo di un teatro.\n     * @param modules \n     * @returns {Promise}\n     * @see {moduleService}\n     */\n    async getModulesInterfaces(modules: SimpleModuleDTO[]): Promise {\n        let i: { [key: string]: ModuleNetworkInterfaceDTO[] } = {};\n        await Promise.all(\n            Object.entries(modules).map(async ([key, value]) => {\n                let simpleModuleDTO: SimpleModuleDTO = value as SimpleModuleDTO;\n                try {\n                    i[key] = await this.moduleService.getModuleInterfacesByModuleID(simpleModuleDTO.id);\n                } catch (e) {\n                    console.error(e);\n                }\n            })\n        )\n        return i;\n    }\n\n\n\n\n    /**\n     * Funzione che si occupa di collegare le istanze dei moduli del teatro con i dettagli dei singoli moduli (root).\n     * Questa funzione produce direttamente i dati del modulo (sottoforma di nodo) da poter essere inserito nel canvas.\n     * @param theater \n     * @param modules \n     * @returns {{ [name: string]: ModuleInstance }}\n     */\n    parseModuleInstance(theater: TheaterApplication, modules: { [name: string]: SimpleModuleApplication }): { [name: string]: ModuleInstance } {\n        var elements: { [name: string]: ModuleInstance } = {};\n        Object.entries(theater.blueprintFile.node_templates).map(async ([key, value]) => {\n            let moduleInstanceName: string = key;\n            let moduleInstance: ModuleInstanceDTO = value as ModuleInstanceDTO;\n            let smr = modules[moduleInstance.properties.module]\n            // @check -> if module instance has connection with module root & name is correct\n            if (!smr) {\n                for (let key in modules) {\n                    if (key.toLowerCase().includes(moduleInstance.properties.module.toLowerCase())) {\n                        smr = modules[key]; //modulo più probabile\n                    }\n                }\n                console.warn(\"Root module not exists or invalid.\\n Declared into instance: \", moduleInstance.properties.module, \".\\nLinked to\", smr.name, \"into Root module list\")\n            }\n            let newModule: ModuleInstance = createModuleNode(moduleInstanceName, moduleInstance, smr);\n            elements[moduleInstanceName] = newModule;\n        });\n        return elements;\n    }\n\n\n\n\n\n    /**\n     * Funzione che ha lo scopo di valorizzare le connessioni dei moduli\n     * @param theater \n     * @returns {ReteConnection[]}\n     */\n    getModuleConnection(theater: TheaterApplication): ReteConnection[] {\n        var connections_list: ReteConnection[] = [];\n        Object.entries(theater.blueprintFile.node_templates).map(([key, value]) => {\n            let module_name: string = key;\n            let module_content: ModuleInstanceDTO = value as ModuleInstanceDTO;\n            if (module_content.properties.consumer_interfaces_link) {\n                Object.entries(module_content.properties.consumer_interfaces_link).map(([key, value]) => {\n                    connections_list.push(\n                        {\n                            from: module_name,\n                            port_src: value.local_interface,\n                            to: value.module_instance,\n                            port_dst: value.remote_interface\n                        }\n                    );\n                });\n            }\n        });\n        return connections_list;\n    }\n\n\n\n\n    /**\n     * Funzione che ha lo scopo di controllare ed inserire la topologia dei nodi di ogni moduli del teatro.\n     * Questa funzione inizializza già i nodi da poter essere inseriti nel canvas.\n     * @param modulesInfo \n     * @see {createHost}\n     * @see {createSubnet}\n     * @see {createNetwork}\n     */\n    getModulesTopology(modulesInfo: { [name: string]: SimpleModuleApplication }) {\n        Object.entries(modulesInfo).map(([key, value]) => {\n            let moduleInfo: SimpleModuleApplication = value;\n            var occourence: Map = new Map();\n            var connections_list: ReteConnection[] = [];\n            var elements: { [name: string]: ReteHostInfo | ReteSubnetInfo | ReteNetworkInfo } = {};\n            var hn: number = 0, sn: number = 0, nn: number = 0;\n            moduleInfo.hosts.forEach(\n                (node: HostModuleDTO) => {\n                    let host_name: string = node.name;\n                    elements[host_name] = createHost(host_name, node);\n                    hn++; // counter\n                    node.ports.forEach(\n                        (port: HostPortModuleDTO) => {\n                            let port_name: string = port.name;\n                            port.subnets.forEach(\n                                (subnet: SubnetDTO) => { // controllo subnet & network\n                                    let subnet_name: string = subnet.name;\n                                    let network_name: string = subnet.network.name;\n                                    if (!occourence.get(subnet_name)) { // se non è stata considerata la subnet -> add\n                                        elements[subnet_name] = createSubnet(subnet_name, subnet)\n                                        occourence.set(subnet_name, subnet_name) // segno l'occorrenza\n                                        sn++; // counter\n                                        elements[subnet_name].Output.push(network_name) // add output port to sub\n\n                                        if (!occourence.get(network_name)) { // se non è stata considerata la network -> add\n                                            elements[network_name] = createNetwork(network_name, moduleInfo.interfaces);\n                                            occourence.set(network_name, network_name); // segno l'occorrenza\n                                            nn++; // counter\n                                        }\n                                        elements[network_name].Input.push(subnet_name) // add input port to net\n\n                                        connections_list.push( // add connection sub->net\n                                            {\n                                                from: subnet_name,\n                                                port_src: network_name,\n                                                to: network_name,\n                                                port_dst: subnet_name\n                                            }\n                                        )\n                                    }\n                                    elements[host_name].Output.push(port_name) // add output port to host\n                                    connections_list.push( // add connection host->sub\n                                        {\n                                            from: host_name,\n                                            port_src: port_name,\n                                            to: subnet_name,\n                                            port_dst: StaticValue.SubnetOutput\n                                        }\n                                    )\n                                }\n                            )\n                        }\n                    )\n                }\n            )\n            // assign value to module\n            moduleInfo.topology = {\n                connection: connections_list,\n                elements: elements\n            };\n            moduleInfo.host_number = hn;\n            moduleInfo.subnet_number = sn;\n            moduleInfo.network_number = nn;\n        });\n    }\n\n\n\n\n\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"injectables/ParseService.html":{"url":"injectables/ParseService.html","title":"injectable - ParseService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ParseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/application/parse/parse.service.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Servizio che ha lo scopo di captare i dati provenienti o meno dal server e convertirli in un formato comprensibile all'applacazione e al canvas.\n\n            \n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                    Opzionale\n                                mocked\n                            \n                        \n                    \n                \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                parseFlavorForModuleComposer\n                            \n                            \n                                    Async\n                                parseModuleForModuleVisualizer\n                            \n                            \n                                    Async\n                                parseModuleForTheaterComposer\n                            \n                            \n                                    Async\n                                parseTheaterForTheaterVisualizer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Costruttore\n        \n            \n                \n                    \nconstructor(theaterService: TheaterService, moduleService: ModuleService, flavorService: FlavorService)\n                    \n                \n                        \n                            \n                                Definito in src/app/services/application/parse/parse.service.ts:27\n                            \n                        \n\n                \n                    \n                            Costrutture servizio parsing.\n\n                            \n                                    Parametri :\n                                    \n                                        \n                                            \n                                                Nome\n                                                    Tipo\n                                                Opzionale\n                                            \n                                        \n                                        \n                                                \n                                                        theaterService\n                                                  \n                                                        \n                                                                        TheaterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        moduleService\n                                                  \n                                                        \n                                                                        ModuleService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        flavorService\n                                                  \n                                                        \n                                                                        FlavorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        parseFlavorForModuleComposer\n                        \n                    \n                \n            \n            \n                \n                    \n                    parseFlavorForModuleComposer()\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/parse/parse.service.ts:113\n                \n            \n\n\n            \n                \n                    Funzione che si occupa del parsing dei flavor per la costruzione dei moduli\nSee {PerseDataForModuleComposer}\nSee {MockedAllFlavors}\n\n\n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        parseModuleForModuleVisualizer\n                        \n                    \n                \n            \n            \n                \n                    \n                    parseModuleForModuleVisualizer(id: string | number)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/parse/parse.service.ts:96\n                \n            \n\n\n            \n                \n                    Funzione che si occupa del parsing del modulo per la visualizzazione\nSee {PerseDataForModuleVisualizer}\nSee {MockedModule}\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            string | number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        parseModuleForTheaterComposer\n                        \n                    \n                \n            \n            \n                \n                    \n                    parseModuleForTheaterComposer()\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/parse/parse.service.ts:79\n                \n            \n\n\n            \n                \n                    Funzione che si occupa del parsing dei moduli per la composizione del teatro.\nSee {PerseDataForTheaterComposer}\nSee {MockedAllModules}\n\n\n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        parseTheaterForTheaterVisualizer\n                        \n                    \n                \n            \n            \n                \n                    \n                    parseTheaterForTheaterVisualizer(id: string | number)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/parse/parse.service.ts:63\n                \n            \n\n\n            \n                \n                    Funzione che si occupa del parsing del teatro per la visualizzazione.\nSee {ParseDataForTheaterVisualizer}\nSee {MockedTheater}\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            string | number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        mocked\n                        \n                    \n                \n            \n                \n                    \n                        Valore predefinito : environment.mocked\n                    \n                \n                    \n                        \n                                Definito in src/app/services/application/parse/parse.service.ts:27\n                        \n                    \n\n            \n                \n                    Variabile che contiene l'opzione di mock dei dati.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { TheaterService } from '../../api/theater.service';\nimport { ModuleService } from '../../api/module.service';\nimport {  ModuleInstance, TheaterApplication, ModuleApplication, FlavorApplication } from '../../modelsApplication/applicationModels';\nimport { FlavorService } from '../../api/flavor.service';\nimport { ParseDataForTheaterVisualizer } from './parseDataForTheaterVisualizer';\nimport { PerseDataForTheaterComposer } from './perseDataForTheaterComposer';\nimport { PerseDataForModuleVisualizer } from './perseDataForModuleVisualizer';\nimport { PerseDataForModuleComposer } from './perseDataForModuleComposer';\nimport { MockedTheater } from '../../mock/dataset-theaterVisualizer/TVdata';\nimport { MockedModule } from '../../mock/dataset-moduleVisualizer/MVdata';\nimport { MockedAllFlavors } from '../../mock/dataset-moduleDesigner/MDdata';\nimport { MockedAllModules } from '../../mock/dataset-theaterDesigner/TDdata';\nimport { environment } from 'src/environments/environment';\n\n/**\n * Servizio che ha lo scopo di captare i dati provenienti o meno dal server e convertirli in un formato comprensibile all'applacazione e al canvas.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ParseService {\n\n  /**\n   * Variabile che contiene l'opzione di mock dei dati.\n   */\n  mocked?=environment.mocked;\n\n\n\n\n\n\n\n\n  \n  /**\n   * Costrutture servizio parsing.\n   * @param theaterService \n   * @param moduleService \n   * @param flavorService \n   */\n  constructor(\n    private theaterService: TheaterService,\n    private moduleService: ModuleService,\n    private flavorService: FlavorService\n  ) {\n  }\n\n\n\n\n\n  // parsing type\n\n  /**\n   * Funzione che si occupa del parsing del teatro per la visualizzazione.\n   * @param id \n   * @returns {Promise}\n   * @see {ParseDataForTheaterVisualizer}\n   * @see {MockedTheater}\n   */\n  async parseTheaterForTheaterVisualizer(id: string | number): Promise {\n    if (this.mocked)\n      return (await MockedTheater(id) as unknown as TheaterApplication)\n    else\n      return await new ParseDataForTheaterVisualizer(this.theaterService, this.moduleService).parseTheaterForTheaterVisualizer(id);\n  }\n\n\n\n\n  /**\n   * Funzione che si occupa del parsing dei moduli per la composizione del teatro.\n   * @returns { Promise }\n   * @see {PerseDataForTheaterComposer}\n   * @see {MockedAllModules}\n   */\n  async parseModuleForTheaterComposer(): Promise {\n    if (this.mocked)\n      return await MockedAllModules() as unknown as { [name: string]: ModuleInstance }\n    else\n      return await new PerseDataForTheaterComposer(this.moduleService).parseModuleForTheaterComposer();\n  }\n\n\n\n\n  /**\n   * Funzione che si occupa del parsing del modulo per la visualizzazione\n   * @param id \n   * @returns {Promise}\n   * @see {PerseDataForModuleVisualizer}\n   * @see {MockedModule}\n   */\n  async parseModuleForModuleVisualizer(id: string | number): Promise {\n    if (this.mocked)\n      return (await MockedModule(id) as unknown as ModuleApplication)\n    else\n      return await new PerseDataForModuleVisualizer(this.moduleService).parseModuleForModuleVisualizer(id);\n  }\n\n\n\n\n\n  /**\n   * Funzione che si occupa del parsing dei flavor per la costruzione dei moduli\n   * @returns {Promise}\n   * @see {PerseDataForModuleComposer}\n   * @see {MockedAllFlavors}\n   */\n  async parseFlavorForModuleComposer(): Promise {\n    if (this.mocked)\n      return await MockedAllFlavors() as unknown as FlavorApplication[]\n    else\n      return await new PerseDataForModuleComposer(this.flavorService).parseFlavorForModuleComposer();\n  }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/PerseDataForModuleComposer.html":{"url":"classes/PerseDataForModuleComposer.html","title":"class - PerseDataForModuleComposer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  PerseDataForModuleComposer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/application/parse/perseDataForModuleComposer.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Elemento che ha lo scopo di eseguire il fetching ed il parsing dei dati per la costruzione del modulo.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                parseFlavor\n                            \n                            \n                                    Async\n                                parseFlavorForModuleComposer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Costruttore\n        \n            \n                \n                    \nconstructor(flavorService: FlavorService)\n                    \n                \n                        \n                            \n                                Definito in src/app/services/application/parse/perseDataForModuleComposer.ts:9\n                            \n                        \n\n                \n                    \n                            Costrutture della componente-\n\n                            \n                                    Parametri :\n                                    \n                                        \n                                            \n                                                Nome\n                                                    Tipo\n                                                Opzionale\n                                            \n                                        \n                                        \n                                                \n                                                        flavorService\n                                                  \n                                                        \n                                                                        FlavorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        parseFlavor\n                        \n                    \n                \n            \n            \n                \nparseFlavor(flavorDTO: FlavorDTO[])\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/parse/perseDataForModuleComposer.ts:41\n                \n            \n\n\n            \n                \n                    Funzione che si occupa di eseguire il parsing dei flavor.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    flavorDTO\n                                    \n                                                FlavorDTO[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FlavorApplication[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        parseFlavorForModuleComposer\n                        \n                    \n                \n            \n            \n                \n                    \n                    parseFlavorForModuleComposer()\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/parse/perseDataForModuleComposer.ts:27\n                \n            \n\n\n            \n                \n                    Funzione che esegue il fetching ed il parsing dei dati flavor.\nSee {flavorService}\nSee {parseFlavor}\n\n\n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { FlavorService } from '../../api/flavor.service';\nimport { FlavorApplication } from '../../modelsApplication/applicationModels';\nimport { FlavorDTO } from '../../modelsDTO/falvorDTO';\n\n\n/**\n * Elemento che ha lo scopo di eseguire il fetching ed il parsing dei dati per la costruzione del modulo.\n */\nexport class PerseDataForModuleComposer {\n\n\n    /**\n     * Costrutture della componente-\n     * @param flavorService \n     */\n    constructor(private flavorService: FlavorService) {\n    }\n\n\n\n    /**\n     * Funzione che esegue il fetching ed il parsing dei dati flavor.\n     * @returns {Promise}\n     * @see {flavorService}\n     * @see {parseFlavor}\n     */\n    async parseFlavorForModuleComposer(): Promise {\n        let flavorDTO: FlavorDTO[] = await this.flavorService.getAllFlavor();\n        let flavorApplication: FlavorApplication[] = this.parseFlavor(flavorDTO);\n        return flavorApplication;\n    }\n\n\n\n\n    /**\n     * Funzione che si occupa di eseguire il parsing dei flavor.\n     * @param flavorDTO\n     * @returns { FlavorApplication[] }\n     */\n    parseFlavor(flavorDTO: FlavorDTO[]): FlavorApplication[] {\n        let fa: FlavorApplication[] = []\n        flavorDTO.forEach(f => {\n            fa.push({\n                flavorName: f.name,\n                cpu: f.cpu,\n                ram: f.ram,\n                disk: f.disk,\n            })\n        })\n        return fa;\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/PerseDataForModuleVisualizer.html":{"url":"classes/PerseDataForModuleVisualizer.html","title":"class - PerseDataForModuleVisualizer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  PerseDataForModuleVisualizer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/application/parse/perseDataForModuleVisualizer.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Elemento che ha lo scopo di eseguire il fetching ed il parsing dei dati per la costruzione del modulo.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getMainModuleDetails\n                            \n                            \n                                    Async\n                                getMainModuleInterfaces\n                            \n                            \n                                    Async\n                                getMainModuleNodes\n                            \n                            \n                                getMainModuleTopology\n                            \n                            \n                                    Async\n                                parseMainModule\n                            \n                            \n                                    Async\n                                parseModuleForModuleVisualizer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Costruttore\n        \n            \n                \n                    \nconstructor(moduleService: ModuleService)\n                    \n                \n                        \n                            \n                                Definito in src/app/services/application/parse/perseDataForModuleVisualizer.ts:16\n                            \n                        \n\n                \n                    \n                            Costruttore della componente.\n\n                            \n                                    Parametri :\n                                    \n                                        \n                                            \n                                                Nome\n                                                    Tipo\n                                                Opzionale\n                                            \n                                        \n                                        \n                                                \n                                                        moduleService\n                                                  \n                                                        \n                                                                        ModuleService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getMainModuleDetails\n                        \n                    \n                \n            \n            \n                \n                    \n                    getMainModuleDetails(module: ModuleDTO)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/parse/perseDataForModuleVisualizer.ts:71\n                \n            \n\n\n            \n                \n                    Funzione che prende i dati dei nodi e interfacce del modulo e le collega ad esso.\nSee {getMainModuleNodes}\nSee {getMainModuleInterfaces}\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    module\n                                    \n                                                ModuleDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getMainModuleInterfaces\n                        \n                    \n                \n            \n            \n                \n                    \n                    getMainModuleInterfaces(module: ModuleDTO)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/parse/perseDataForModuleVisualizer.ts:115\n                \n            \n\n\n            \n                \n                    Funzione che segue il fetching delle intefracce del modulo.\nSee {moduleService}\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    module\n                                    \n                                                ModuleDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getMainModuleNodes\n                        \n                    \n                \n            \n            \n                \n                    \n                    getMainModuleNodes(module: ModuleDTO)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/parse/perseDataForModuleVisualizer.ts:96\n                \n            \n\n\n            \n                \n                    Funzione che segue il fetching degli host del modulo.\nSee {moduleService}\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    module\n                                    \n                                                ModuleDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMainModuleTopology\n                        \n                    \n                \n            \n            \n                \ngetMainModuleTopology(moduleInfo: ModuleApplication)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/parse/perseDataForModuleVisualizer.ts:136\n                \n            \n\n\n            \n                \n                    Funzione che ha lo scopo di collegare, inizializzare e parserizzare i nodi del modulo e strutturare la topologia per la visualizzazione su canvas.\nCrea anche direttamente i nodi per il rendering dell'editor.\nSee {createHost}\nSee {createSubnet}\nSee {createNetwork}\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    moduleInfo\n                                    \n                                                ModuleApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        parseMainModule\n                        \n                    \n                \n            \n            \n                \n                    \n                    parseMainModule(id: string | number)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/parse/perseDataForModuleVisualizer.ts:54\n                \n            \n\n\n            \n                \n                    Funzione che esegue il fetching e il parsing dei dati del modulo.\nSi procura anche i dati di dettaglio sui nodi e topologie.\nSee {getModuleByID}\nSee {getMainModuleDetails}\nSee {getMainModuleTopology}\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            string | number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        parseModuleForModuleVisualizer\n                        \n                    \n                \n            \n            \n                \n                    \n                    parseModuleForModuleVisualizer(id: string | number)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/parse/perseDataForModuleVisualizer.ts:35\n                \n            \n\n\n            \n                \n                    Funzione che ritorna il modulo parserizzato per la visualizzazione.\nSee {parseMainModule}\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            string | number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ModuleService } from '../../api/module.service';\nimport { ModuleNetworkInterfaceDTO, ModuleDTO } from '../../modelsDTO/moduleDTO';\nimport {ReteConnection, NodeTopologyElement, ModuleApplication } from '../../modelsApplication/applicationModels';\nimport { HostModuleDTO, HostPortModuleDTO } from '../../modelsDTO/hostDTO';\nimport { SubnetDTO } from '../../modelsDTO/networkDTO';\nimport {  ReteHostInfo } from 'src/app/rete-settings/nodes/rete-nodes/host/hostNode';\nimport {  ReteNetworkInfo } from 'src/app/rete-settings/nodes/rete-nodes/network/networkNode';\nimport { ReteSubnetInfo } from 'src/app/rete-settings/nodes/rete-nodes/subnet/subnetNode';\nimport {  StaticValue } from 'src/app/models/appType';\nimport { createHost, createSubnet, createNetwork } from './parseCommonElement';\n\n\n/**\n * Elemento che ha lo scopo di eseguire il fetching ed il parsing dei dati per la costruzione del modulo.\n */\nexport class PerseDataForModuleVisualizer {\n\n\n    /**\n     * Costruttore della componente.\n     * @param moduleService \n     */\n    constructor(private moduleService: ModuleService) {\n    }\n\n\n\n\n    /**\n     * Funzione che ritorna il modulo parserizzato per la visualizzazione.\n     * @param id \n     * @returns {Promise }\n     * @see {parseMainModule}\n     */\n    async parseModuleForModuleVisualizer(id: string | number): Promise {\n        let moduleDTO: ModuleDTO;\n        let module: ModuleApplication;\n        [moduleDTO, module] = await this.parseMainModule(id);\n        return module;\n    }\n\n\n\n\n    /**\n     * Funzione che esegue il fetching e il parsing dei dati del modulo.\n     * Si procura anche i dati di dettaglio sui nodi e topologie.\n     * @param id \n     * @returns {Promise}\n     * @see {getModuleByID}\n     * @see {getMainModuleDetails}\n     * @see {getMainModuleTopology}\n     */\n    async parseMainModule(id: string | number): Promise {\n        let module: ModuleDTO = await this.moduleService.getModuleByID(id);\n        let parsedModule: ModuleApplication = await this.getMainModuleDetails(module)\n        this.getMainModuleTopology(parsedModule);\n        return [module, parsedModule];\n    }\n\n\n\n\n    /**\n     * Funzione che prende i dati dei nodi e interfacce del modulo e le collega ad esso.\n     * @param module \n     * @returns {Promise }\n     * @see {getMainModuleNodes}\n     * @see {getMainModuleInterfaces}\n     */\n    async getMainModuleDetails(module: ModuleDTO): Promise {\n        let h: HostModuleDTO[] = await this.getMainModuleNodes(module);\n        let i: ModuleNetworkInterfaceDTO[] = await this.getMainModuleInterfaces(module);\n        let moduleInfo2: ModuleApplication = {\n            imports: [],\n            ...module,\n            hosts: h,\n            interfaces: i,\n            host_number: 0,\n            subnet_number: 0,\n            network_number: 0,\n            topology: new NodeTopologyElement\n        };\n        return moduleInfo2;\n    }\n\n\n\n\n    /**\n     * Funzione che segue il fetching degli host del modulo.\n     * @param module \n     * @returns {Promise}\n     * @see {moduleService}\n     */\n    async getMainModuleNodes(module: ModuleDTO): Promise {\n        let h: HostModuleDTO[] = undefined;\n        try {\n            h = await this.moduleService.getModuleHostByTheaterUUID(module.uuid);\n        } catch (e) {\n            console.error(e);\n        }\n        return h;\n    }\n\n\n\n\n    /**\n     * Funzione che segue il fetching delle intefracce del modulo.\n     * @param module \n     * @returns {Promise}\n     * @see {moduleService}\n     */\n    async getMainModuleInterfaces(module: ModuleDTO): Promise {\n        let i: ModuleNetworkInterfaceDTO[] = [];\n        try {\n            i = await this.moduleService.getModuleInterfacesByModuleID(module.id);\n        } catch (e) {\n            console.error(e);\n        }\n        return i;\n    }\n\n\n\n\n    /**\n     * Funzione che ha lo scopo di collegare, inizializzare e parserizzare i nodi del modulo e strutturare la topologia per la visualizzazione su canvas.\n     * Crea anche direttamente i nodi per il rendering dell'editor.\n     * @param moduleInfo \n     * @see {createHost}\n     * @see {createSubnet}\n     * @see {createNetwork}\n     */\n    getMainModuleTopology(moduleInfo: ModuleApplication) {\n        var occourence: Map = new Map();\n        var connections_list: ReteConnection[] = [];\n        var elements: { [name: string]: ReteHostInfo | ReteSubnetInfo | ReteNetworkInfo } = {};\n        var hn: number = 0, sn: number = 0, nn: number = 0;\n        moduleInfo.hosts.forEach(\n            (node: HostModuleDTO) => {\n                let host_name: string = node.name;\n                elements[host_name] = createHost(host_name, node);\n                hn++; // counter\n                node.ports.forEach(\n                    (port: HostPortModuleDTO) => {\n                        let port_name: string = port.name;\n                        port.subnets.forEach(\n                            (subnet: SubnetDTO) => { // controllo subnet & network\n                                let subnet_name: string = subnet.name;\n                                let network_name: string = subnet.network.name;\n                                if (!occourence.get(subnet_name)) { // se non è stata considerata la subnet -> add\n                                    elements[subnet_name] = createSubnet(subnet_name, subnet)\n                                    occourence.set(subnet_name, subnet_name) // segno l'occorrenza\n                                    sn++; // counter\n                                    elements[subnet_name].Output.push(network_name) // add output port to sub\n\n                                    if (!occourence.get(network_name)) { // se non è stata considerata la network -> add\n                                        elements[network_name] = createNetwork(network_name, moduleInfo.interfaces);\n                                        occourence.set(network_name, network_name) // segno l'occorrenza\n                                        nn++; // counter\n                                    }\n                                    elements[network_name].Input.push(subnet_name) // add input port to net\n\n                                    connections_list.push( // add connection sub->net\n                                        {\n                                            from: subnet_name,\n                                            port_src: network_name,\n                                            to: network_name,\n                                            port_dst: subnet_name\n                                        }\n                                    )\n                                }\n                                elements[host_name].Output.push(port_name) // add output port to host\n                                connections_list.push( // add connection host->sub\n                                    {\n                                        from: host_name,\n                                        port_src: port_name,\n                                        to: subnet_name,\n                                        port_dst: StaticValue.SubnetOutput\n                                    }\n                                )\n                            }\n                        )\n                    }\n                )\n            }\n        )\n        // assign value to module\n        moduleInfo.topology = {\n            connection: connections_list,\n            elements: elements\n        };\n        moduleInfo.host_number = hn;\n        moduleInfo.subnet_number = sn;\n        moduleInfo.network_number = nn;\n    }\n\n\n\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/PerseDataForTheaterComposer.html":{"url":"classes/PerseDataForTheaterComposer.html","title":"class - PerseDataForTheaterComposer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  PerseDataForTheaterComposer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/application/parse/perseDataForTheaterComposer.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Elemento che ha lo scopo di eseguire il fetching ed il parsing dei dati per la costruzione del teatro.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getModuleDict\n                            \n                            \n                                    Async\n                                getModulesDetails\n                            \n                            \n                                    Async\n                                getModulesInterfaces\n                            \n                            \n                                    Async\n                                getModulesNodes\n                            \n                            \n                                getModulesTopology\n                            \n                            \n                                initEmptyModuleInstance\n                            \n                            \n                                    Async\n                                parseModuleForTheaterComposer\n                            \n                            \n                                    Async\n                                parseModuleList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Costruttore\n        \n            \n                \n                    \nconstructor(moduleService: ModuleService)\n                    \n                \n                        \n                            \n                                Definito in src/app/services/application/parse/perseDataForTheaterComposer.ts:18\n                            \n                        \n\n                \n                    \n                            Costruttore della componente\n\n                            \n                                    Parametri :\n                                    \n                                        \n                                            \n                                                Nome\n                                                    Tipo\n                                                Opzionale\n                                            \n                                        \n                                        \n                                                \n                                                        moduleService\n                                                  \n                                                        \n                                                                        ModuleService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getModuleDict\n                        \n                    \n                \n            \n            \n                \n                    \n                    getModuleDict(modules: SimpleModuleDTO[])\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/parse/perseDataForTheaterComposer.ts:70\n                \n            \n\n\n            \n                \n                    Funzione che si occupa di convertire i moduli in un dizionario.\nQuesta esegue anche le chiamate per reperire i dettagli dei singoli moduli.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    modules\n                                    \n                                            SimpleModuleDTO[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getModulesDetails\n                        \n                    \n                \n            \n            \n                \n                    \n                    getModulesDetails(modules: SimpleModuleDTO[])\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/parse/perseDataForTheaterComposer.ts:89\n                \n            \n\n\n            \n                \n                    Funzione che collega un modulo con i suoi dettagli (nodi e interfacce).\nSee {getModulesNodes}\nSee {getModulesInterfaces}\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    modules\n                                    \n                                            SimpleModuleDTO[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getModulesInterfaces\n                        \n                    \n                \n            \n            \n                \n                    \n                    getModulesInterfaces(modules: SimpleModuleDTO[])\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/parse/perseDataForTheaterComposer.ts:138\n                \n            \n\n\n            \n                \n                    Funzione che esegue il fetching dei dettagli sulle interfacce dei singoli moduli.\nSee {moduleService}\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    modules\n                                    \n                                            SimpleModuleDTO[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getModulesNodes\n                        \n                    \n                \n            \n            \n                \n                    \n                    getModulesNodes(modules: SimpleModuleDTO[])\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/parse/perseDataForTheaterComposer.ts:114\n                \n            \n\n\n            \n                \n                    Funzione che esegue il fetching dei dettagli sugli host dei singoli moduli.\nSee {moduleService}\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    modules\n                                    \n                                            SimpleModuleDTO[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getModulesTopology\n                        \n                    \n                \n            \n            \n                \ngetModulesTopology(modulesInfo: literal type)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/parse/perseDataForTheaterComposer.ts:164\n                \n            \n\n\n            \n                \n                    Funzione che struttura la topologia dei singoli moduli.\nEssa instanzia anche i nodi per poterli inserire direttamente nel canvas.\nSee {createHost}\nSee {createSubnet}\nSee {createNetwork}\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    modulesInfo\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initEmptyModuleInstance\n                        \n                    \n                \n            \n            \n                \ninitEmptyModuleInstance(modules: literal type)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/parse/perseDataForTheaterComposer.ts:240\n                \n            \n\n\n            \n                \n                    Funzione che ha come scopo inizializzare i dati, valori e attributi per il teatro da usare nell'applicazione.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    modules\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        parseModuleForTheaterComposer\n                        \n                    \n                \n            \n            \n                \n                    \n                    parseModuleForTheaterComposer()\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/parse/perseDataForTheaterComposer.ts:36\n                \n            \n\n\n            \n                \n                    Funzione che ritorna un dizionario di moduli utilizzati per la costruzione della topologia del teatro.\nQuesta provvede anche l'instanziazione dei dati per il rendering dei moduli sul canvas.\nSee {parseModuleList}\nSee {initEmptyModuleInstance}\n\n\n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        parseModuleList\n                        \n                    \n                \n            \n            \n                \n                    \n                    parseModuleList()\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/parse/perseDataForTheaterComposer.ts:53\n                \n            \n\n\n            \n                \n                    Funzione che esegue il fetching di tutti i moduli disponibili.\nQuesta funzione ritorna un dizionario degli stessi, annessa anche la topologia.\nSee {moduleService}\nSee {getModuleDict}\nSee {getModulesTopology}\n\n\n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ModuleService } from '../../api/module.service';\nimport { ModuleInstanceDTO, ModuleNetworkInterfaceDTO, SimpleModuleDTO } from '../../modelsDTO/moduleDTO';\nimport { SimpleModuleApplication, ModuleInstance, ReteConnection } from '../../modelsApplication/applicationModels';\nimport { HostModuleDTO, HostPortModuleDTO } from '../../modelsDTO/hostDTO';\nimport { SubnetDTO } from '../../modelsDTO/networkDTO';\nimport { ReteHostInfo } from 'src/app/rete-settings/nodes/rete-nodes/host/hostNode';\nimport { ReteNetworkInfo } from 'src/app/rete-settings/nodes/rete-nodes/network/networkNode';\nimport { ReteSubnetInfo } from 'src/app/rete-settings/nodes/rete-nodes/subnet/subnetNode';\nimport { ModuleType2, StaticValue, ModuleTypeTheater } from 'src/app/models/appType';\nimport { createHost, createSubnet, createNetwork, createModuleNode } from './parseCommonElement';\n\n\n\n/**\n * Elemento che ha lo scopo di eseguire il fetching ed il parsing dei dati per la costruzione del teatro.\n */\nexport class PerseDataForTheaterComposer {\n\n    /**\n     * Costruttore della componente\n     * @param moduleService \n     */\n    constructor(private moduleService: ModuleService) {\n    }\n\n\n\n    /**\n     * Funzione che ritorna un dizionario di moduli utilizzati per la costruzione della topologia del teatro.\n     * Questa provvede anche l'instanziazione dei dati per il rendering dei moduli sul canvas.\n     * @returns {Promise}\n     * @see {parseModuleList}\n     * @see {initEmptyModuleInstance}\n     */\n    async parseModuleForTheaterComposer(): Promise {\n        let modules: { [name: string]: SimpleModuleApplication } = await this.parseModuleList();\n        let moduleInstances: { [name: string]: ModuleInstance } = await this.initEmptyModuleInstance(modules);\n        return moduleInstances\n    }\n\n\n\n\n    /**\n     * Funzione che esegue il fetching di tutti i moduli disponibili.\n     * Questa funzione ritorna un dizionario degli stessi, annessa anche la topologia.\n     * @returns {Promise}\n     * @see {moduleService}\n     * @see {getModuleDict}\n     * @see {getModulesTopology}\n     */\n    async parseModuleList(): Promise {\n        let rowModules: SimpleModuleDTO[] = await this.moduleService.getAllModules();\n        let modules: { [name: string]: SimpleModuleApplication } = await this.getModuleDict(rowModules)\n        this.getModulesTopology(modules);\n        return modules;\n    }\n\n\n\n\n\n    /**\n     * Funzione che si occupa di convertire i moduli in un dizionario.\n     * Questa esegue anche le chiamate per reperire i dettagli dei singoli moduli.\n     * @param modules \n     * @returns { Promise }\n     */\n    async getModuleDict(modules: SimpleModuleDTO[]): Promise {\n        let moduleDict: { [name: string]: SimpleModuleApplication } = {};\n        let modulesApplication: SimpleModuleApplication[] = await this.getModulesDetails(modules);\n        Object.entries(modulesApplication).map(async ([key, value]) => {\n            moduleDict[value.name] = value;\n        });\n        return moduleDict;\n    }\n\n\n\n\n    /**\n     * Funzione che collega un modulo con i suoi dettagli (nodi e interfacce).\n     * @param modules  \n     * @returns {Promise}\n     * @see {getModulesNodes}\n     * @see {getModulesInterfaces}\n     */\n    async getModulesDetails(modules: SimpleModuleDTO[]): Promise {\n        let h: { [key: string]: HostModuleDTO[] } = await this.getModulesNodes(modules);\n        let i: { [key: string]: ModuleNetworkInterfaceDTO[] } = await this.getModulesInterfaces(modules);\n        let moduleInfo: SimpleModuleApplication[] = [];\n        await Promise.all(\n            Object.entries(modules).map(async ([key, value]) => {\n                moduleInfo[key] = {\n                    ...value,\n                    hosts: h[key],\n                    interfaces: i[key],\n                }\n            })\n        )\n        return moduleInfo;\n    }\n\n\n\n\n    /**\n     * Funzione che esegue il fetching dei dettagli sugli host dei singoli moduli.\n     * @param modules \n     * @returns {Promise }\n     * @see {moduleService}\n     */\n    async getModulesNodes(modules: SimpleModuleDTO[]): Promise {\n        let h: { [key: string]: HostModuleDTO[] } = {};\n        await Promise.all(\n            Object.entries(modules).map(async ([key, value]) => {\n                let simpleModuleDTO: SimpleModuleDTO = value as SimpleModuleDTO;\n                try {\n                    h[key] = await this.moduleService.getModuleHostByTheaterUUID(simpleModuleDTO.uuid);\n                } catch (e) {\n                    console.error(e);\n                }\n            })\n        )\n        return h;\n    }\n\n\n\n\n    /**\n     * Funzione che esegue il fetching dei dettagli sulle interfacce dei singoli moduli.\n     * @param modules \n     * @returns {Promise }\n     * @see {moduleService}\n     */\n    async getModulesInterfaces(modules: SimpleModuleDTO[]): Promise {\n        let i: { [key: string]: ModuleNetworkInterfaceDTO[] } = {};\n        await Promise.all(\n            Object.entries(modules).map(async ([key, value]) => {\n                let simpleModuleDTO: SimpleModuleDTO = value as SimpleModuleDTO;\n                try {\n                    i[key] = await this.moduleService.getModuleInterfacesByModuleID(simpleModuleDTO.id);\n                } catch (e) {\n                    console.error(e);\n                }\n            })\n        )\n        return i;\n    }\n\n\n\n\n    /**\n     * Funzione che struttura la topologia dei singoli moduli. \n     * Essa instanzia anche i nodi per poterli inserire direttamente nel canvas.\n     * @param modulesInfo \n     * @see {createHost}\n     * @see {createSubnet}\n     * @see {createNetwork}\n     */\n    getModulesTopology(modulesInfo: { [name: string]: SimpleModuleApplication }) {\n        Object.entries(modulesInfo).map(([key, value]) => {\n            let moduleInfo: SimpleModuleApplication = value;\n            var occourence: Map = new Map();\n            var connections_list: ReteConnection[] = [];\n            var elements: { [name: string]: ReteHostInfo | ReteSubnetInfo | ReteNetworkInfo } = {};\n            var hn: number = 0, sn: number = 0, nn: number = 0;\n            moduleInfo.hosts.forEach(\n                (node: HostModuleDTO) => {\n                    let host_name: string = node.name;\n                    elements[host_name] = createHost(host_name, node);\n                    hn++; // counter\n                    node.ports.forEach(\n                        (port: HostPortModuleDTO) => {\n                            let port_name: string = port.name;\n                            port.subnets.forEach(\n                                (subnet: SubnetDTO) => { // controllo subnet & network\n                                    let subnet_name: string = subnet.name;\n                                    let network_name: string = subnet.network.name;\n                                    if (!occourence.get(subnet_name)) { // se non è stata considerata la subnet -> add\n                                        elements[subnet_name] = createSubnet(subnet_name, subnet)\n                                        occourence.set(subnet_name, subnet_name) // segno l'occorrenza\n                                        sn++; // counter\n                                        elements[subnet_name].Output.push(network_name) // add output port to sub\n\n                                        if (!occourence.get(network_name)) { // se non è stata considerata la network -> add\n                                            elements[network_name] = createNetwork(network_name, moduleInfo.interfaces);\n                                            occourence.set(network_name, network_name); // segno l'occorrenza\n                                            nn++; // counter\n                                        }\n                                        elements[network_name].Input.push(subnet_name) // add input port to net\n\n                                        connections_list.push( // add connection sub->net\n                                            {\n                                                from: subnet_name,\n                                                port_src: network_name,\n                                                to: network_name,\n                                                port_dst: subnet_name\n                                            }\n                                        )\n                                    }\n                                    elements[host_name].Output.push(port_name) // add output port to host\n                                    connections_list.push( // add connection host->sub\n                                        {\n                                            from: host_name,\n                                            port_src: port_name,\n                                            to: subnet_name,\n                                            port_dst: StaticValue.SubnetOutput\n                                        }\n                                    )\n                                }\n                            )\n                        }\n                    )\n                }\n            )\n            // assign value to module\n            moduleInfo.topology = {\n                connection: connections_list,\n                elements: elements\n            };\n            moduleInfo.host_number = hn;\n            moduleInfo.subnet_number = sn;\n            moduleInfo.network_number = nn;\n        });\n    }\n\n\n\n\n\n    /**\n     * Funzione che ha come scopo inizializzare i dati, valori e attributi per il teatro da usare nell'applicazione.\n     * @param modules \n     * @returns \n     */\n    initEmptyModuleInstance(modules: { [name: string]: SimpleModuleApplication }): { [name: string]: ModuleInstance } {\n        let x: { [name: string]: ModuleInstance } = {};\n        Object.entries(modules).map(async ([key, value]) => {\n            let smr: SimpleModuleApplication = value as SimpleModuleApplication;\n            if (ModuleType2[smr.type]) {  // se è tra i tipi definiti\n                let mit: ModuleInstanceDTO = {\n                    properties: {\n                        description: '',\n                        area: '',\n                        module: smr.name,\n                        version: undefined,\n                        sequence: '',\n                        consumer_interfaces_link: []\n                    },\n                    type: ModuleTypeTheater[ModuleType2[value.type]],\n                };\n\n                let ma: ModuleInstance = createModuleNode(undefined, mit, smr)\n                // x[\"Instance \"+key] = ma;\n                x[key] = ma;\n            }\n        });\n        return x;\n    }\n\n\n\n\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/PortSimpleData.html":{"url":"classes/PortSimpleData.html","title":"class - PortSimpleData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  PortSimpleData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsExport/moduleExport.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano i dati della porta all'interno dei node_templates.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                relationships\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        relationships\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         RelationshipsExport[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:132\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         PortTypeExport\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:131\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ModeTypeExport, ModuleTypeExport, NetworkTypeExport, NodeTypeExport, PortTypeExport, RelationshipsTypeExport, SubnetTypeExport, ToscaDefinitionType } from \"./TypeExport\"\n\n\n/**\n * Classe utilizzata per l'export. \n * Contiene le informazioni generali per il modulo che devono esserci nello standard Tosca.\n */\nexport class ModuleExport {\n    tosca_definitions_version: ToscaDefinitionType\n    description: string\n    imports: string[]\n    node_templates: { [name: string]: ModuleSimpleData | NodeSimpleData | PortSimpleData | NetworkSimpleData | SubnetSimpleData }\n    dsl_definition: any | null; //future\n    capabilites: any | null //future\n    outputs: any | null //future\n}\n\n/**\n * Classe che contiene gli attributi che indicano la rappresentazione del modulo per l'export.\n */\nexport class ModuleSimpleData {\n    type: ModuleTypeExport\n    properties: PropertiesMSD\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà del modulo per l'export.\n */\nexport class PropertiesMSD {\n    mode: ModeTypeExport\n    description: string\n    version: string | number\n    constraints: ConstraintsMSD\n    interface_networks: {\n        providers: InterfaceNetworksProvider[]\n        consumers: InterfaceNetworksConsumer[]\n    }\n    virtual_machines: VirtualMachine[]\n}\n/**\n * Classe che contiene gli attributi che indicano i vincoli di connessione del modulo per l'export.\n */\nexport class ConstraintsMSD {\n    interface_constraints: InterfaceConstraints[]\n    module_constraints: ModuleConstraints[]\n    network_constraints: NetworkConstraints[]\n}\n/**\n * Classe che contiene gli attributi che indicano i viconli per le interfacce di connessione del modulo.\n */\nexport class InterfaceConstraints {\n    local_interface: string\n    multiple_mode: boolean = false //future\n    module_name: string\n    compatibility: string = \"1.0\" // future\n    remote_interface: string\n}\n/**\n * Classe che contiene gli attributi che indicano i viconli del modulo.\n */\nexport class ModuleConstraints {\n}\n/**\n * Classe che contiene gli attributi che indicano i viconli dei network del modulo.\n */\nexport class NetworkConstraints {\n}\n/**\n * Classe che contiene gli attributi che indicano le interfacce provider del modulo.\n */\nexport class InterfaceNetworksProvider {\n    interface: string\n    network: string\n    tag: string\n    subnets: SubnetExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano le interfacce consumer del modulo.\n */\nexport class InterfaceNetworksConsumer {\n    interface: string\n    network: string\n    tag: string\n    subnets: SubnetExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano l'insieme di host presenti in un modulo.\n */\nexport class VirtualMachine {\n    virtual_machine: string\n    ports: VirtualMachinePorts[]\n}\n/**\n * Classe che contiene gli attributi che indicano le porte associate ad un host di un modulo.\n */\nexport class VirtualMachinePorts {\n    port: string\n    network: string\n    subnets: SubnetExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano la subnet connessa alla porte dell'host.\n * @see {VirtualMachinePorts}\n */\nexport class SubnetExport {\n    subnet: string;\n}\n\n/**\n * Classe che contiene gli attributi che indica un nodo all'interno dei node_templates.\n * @see {ModuleExport}\n */\nexport class NodeSimpleData {\n    type: NodeTypeExport\n    properties: any | null // future\n    interfaces: any | null // future\n    relationships: RelationshipsExport[]\n}\n\n/**\n * Classe che contiene gli attributi che indicano le relazioni generali.\n */\nexport class RelationshipsExport {\n    type: RelationshipsTypeExport\n    target: string\n}\n/**\n * Classe che contiene gli attributi che indicano i dati della porta all'interno dei node_templates.\n */\nexport class PortSimpleData {\n    type: PortTypeExport\n    relationships: RelationshipsExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano i dati delle network all'interno dei node_templates.\n */\nexport class NetworkSimpleData {\n    type: NetworkTypeExport\n    properties: PropertiesNSD\n}\n/**\n * Classe che contiene gli attributi che indicano le proprietà della network all'interno dei node_templates.\n * @see {NetworkSimpleData}\n */\nexport class PropertiesNSD {\n    openstack_config?: any | null // future\n    use_external_resource?: boolean | null // future\n    resource_id?: any | null // future\n}\n\n/**\n * Classe che contiene gli attributi che indicano i dati delle subnet all'interno dei node_templates.\n */\nexport class SubnetSimpleData {\n    type: SubnetTypeExport\n    relationships: RelationshipsExport[]\n    properties: PropertiesSSD\n}\n/**\n * Classe che contiene gli attributi che indicano le proprietà della subnet all'interno dei node_templates.\n * @see {NetworkSimpleData}\n */\nexport class PropertiesSSD {\n    subnet?: {\n        ip_version: string | number\n        cidr: string\n        enable_dhcp: boolean\n        gateway_ip?: any | null // future\n    }\n    openstack_config?: any | null // future\n    use_external_resource?: boolean | null // future\n    resource_id?: any | null // future\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/PropertiesMISD.html":{"url":"classes/PropertiesMISD.html","title":"class - PropertiesMISD","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  PropertiesMISD\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsExport/theaterExport.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano le propeitò del modulo all'interno dei node_templates.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                area\n                            \n                            \n                                consumer_interface_link\n                            \n                            \n                                module\n                            \n                            \n                                sequence\n                            \n                            \n                                    Opzionale\n                                sources\n                            \n                            \n                                version\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        area\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/theaterExport.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        consumer_interface_link\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ConsumerInterfaceLinkExport[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/theaterExport.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/theaterExport.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sequence\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/theaterExport.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        sources\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         SourceExport[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/theaterExport.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/theaterExport.ts:59\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ModeTypeExport, ModuleTypeExport, TheaterTypeExport, ToscaDefinitionType } from \"./TypeExport\"\n\n/**\n * Classe utilizzata per l'export. \n * Contiene le informazioni generali per il teatro che devono esserci nello standard Tosca.\n */\nexport class TheaterExport {\n    tosca_definitions_version: ToscaDefinitionType\n    description: string\n    imports: string[]\n    node_templates: { [name: string]: TheaterSimpleData | ModuleInstanceSimpleData }\n}\n/**\n * Classe che contiene gli attributi che indicano il teatro all'interno dei node_templates.\n */\nexport class TheaterSimpleData {\n    type: TheaterTypeExport\n    properties: PropertiesTSD\n}\n/**\n * Classe che contiene gli attributi che indicano le proprietà del teatro.\n */\nexport class PropertiesTSD {\n    version: string | number\n    description: string\n    mode: ModeTypeExport\n    author: string\n    tags: TagsExport[]\n    areas: AreaExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano i tag nelle proprietà del teatro.\n * @see {PropertiesTSD}\n */\nexport class TagsExport {\n    tag: string\n}\n/**\n * Classe che contiene gli attributi che indicano le aree nelle proprietà del teatr.\n * @see {PropertiesTSD}\n */\nexport class AreaExport {\n    area: string\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano il modulo all'interno dei node_modules.\n */\nexport class ModuleInstanceSimpleData {\n    type: ModuleTypeExport\n    properties: PropertiesMISD\n}\n/**\n * Classe che contiene gli attributi che indicano le propeitò del modulo all'interno dei node_templates.\n */\nexport class PropertiesMISD{\n    module: string\n    version: string | number\n    area: string\n    sequence: number\n    sources?: SourceExport[]\n    consumer_interface_link: ConsumerInterfaceLinkExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano le porte di ingresso del modulo all'interno dei node_templates.\n */\nexport class SourceExport{\n    module_instance: string\n    host:string\n    interfaces: string[]\n}\n/**\n * Classe che contiene gli attributi che indicano i collegamenti e relazioni intramodulo con le varie interfacce.\n */\nexport class ConsumerInterfaceLinkExport{\n    local_interface: string\n    module_interface:string\n    remote_interface:string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/PropertiesMSD.html":{"url":"classes/PropertiesMSD.html","title":"class - PropertiesMSD","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  PropertiesMSD\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsExport/moduleExport.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano le proprietà del modulo per l'export.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                constraints\n                            \n                            \n                                description\n                            \n                            \n                                interface_networks\n                            \n                            \n                                mode\n                            \n                            \n                                version\n                            \n                            \n                                virtual_machines\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        constraints\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ConstraintsMSD\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        interface_networks\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     literal type\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ModeTypeExport\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        virtual_machines\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         VirtualMachine[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:38\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ModeTypeExport, ModuleTypeExport, NetworkTypeExport, NodeTypeExport, PortTypeExport, RelationshipsTypeExport, SubnetTypeExport, ToscaDefinitionType } from \"./TypeExport\"\n\n\n/**\n * Classe utilizzata per l'export. \n * Contiene le informazioni generali per il modulo che devono esserci nello standard Tosca.\n */\nexport class ModuleExport {\n    tosca_definitions_version: ToscaDefinitionType\n    description: string\n    imports: string[]\n    node_templates: { [name: string]: ModuleSimpleData | NodeSimpleData | PortSimpleData | NetworkSimpleData | SubnetSimpleData }\n    dsl_definition: any | null; //future\n    capabilites: any | null //future\n    outputs: any | null //future\n}\n\n/**\n * Classe che contiene gli attributi che indicano la rappresentazione del modulo per l'export.\n */\nexport class ModuleSimpleData {\n    type: ModuleTypeExport\n    properties: PropertiesMSD\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà del modulo per l'export.\n */\nexport class PropertiesMSD {\n    mode: ModeTypeExport\n    description: string\n    version: string | number\n    constraints: ConstraintsMSD\n    interface_networks: {\n        providers: InterfaceNetworksProvider[]\n        consumers: InterfaceNetworksConsumer[]\n    }\n    virtual_machines: VirtualMachine[]\n}\n/**\n * Classe che contiene gli attributi che indicano i vincoli di connessione del modulo per l'export.\n */\nexport class ConstraintsMSD {\n    interface_constraints: InterfaceConstraints[]\n    module_constraints: ModuleConstraints[]\n    network_constraints: NetworkConstraints[]\n}\n/**\n * Classe che contiene gli attributi che indicano i viconli per le interfacce di connessione del modulo.\n */\nexport class InterfaceConstraints {\n    local_interface: string\n    multiple_mode: boolean = false //future\n    module_name: string\n    compatibility: string = \"1.0\" // future\n    remote_interface: string\n}\n/**\n * Classe che contiene gli attributi che indicano i viconli del modulo.\n */\nexport class ModuleConstraints {\n}\n/**\n * Classe che contiene gli attributi che indicano i viconli dei network del modulo.\n */\nexport class NetworkConstraints {\n}\n/**\n * Classe che contiene gli attributi che indicano le interfacce provider del modulo.\n */\nexport class InterfaceNetworksProvider {\n    interface: string\n    network: string\n    tag: string\n    subnets: SubnetExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano le interfacce consumer del modulo.\n */\nexport class InterfaceNetworksConsumer {\n    interface: string\n    network: string\n    tag: string\n    subnets: SubnetExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano l'insieme di host presenti in un modulo.\n */\nexport class VirtualMachine {\n    virtual_machine: string\n    ports: VirtualMachinePorts[]\n}\n/**\n * Classe che contiene gli attributi che indicano le porte associate ad un host di un modulo.\n */\nexport class VirtualMachinePorts {\n    port: string\n    network: string\n    subnets: SubnetExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano la subnet connessa alla porte dell'host.\n * @see {VirtualMachinePorts}\n */\nexport class SubnetExport {\n    subnet: string;\n}\n\n/**\n * Classe che contiene gli attributi che indica un nodo all'interno dei node_templates.\n * @see {ModuleExport}\n */\nexport class NodeSimpleData {\n    type: NodeTypeExport\n    properties: any | null // future\n    interfaces: any | null // future\n    relationships: RelationshipsExport[]\n}\n\n/**\n * Classe che contiene gli attributi che indicano le relazioni generali.\n */\nexport class RelationshipsExport {\n    type: RelationshipsTypeExport\n    target: string\n}\n/**\n * Classe che contiene gli attributi che indicano i dati della porta all'interno dei node_templates.\n */\nexport class PortSimpleData {\n    type: PortTypeExport\n    relationships: RelationshipsExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano i dati delle network all'interno dei node_templates.\n */\nexport class NetworkSimpleData {\n    type: NetworkTypeExport\n    properties: PropertiesNSD\n}\n/**\n * Classe che contiene gli attributi che indicano le proprietà della network all'interno dei node_templates.\n * @see {NetworkSimpleData}\n */\nexport class PropertiesNSD {\n    openstack_config?: any | null // future\n    use_external_resource?: boolean | null // future\n    resource_id?: any | null // future\n}\n\n/**\n * Classe che contiene gli attributi che indicano i dati delle subnet all'interno dei node_templates.\n */\nexport class SubnetSimpleData {\n    type: SubnetTypeExport\n    relationships: RelationshipsExport[]\n    properties: PropertiesSSD\n}\n/**\n * Classe che contiene gli attributi che indicano le proprietà della subnet all'interno dei node_templates.\n * @see {NetworkSimpleData}\n */\nexport class PropertiesSSD {\n    subnet?: {\n        ip_version: string | number\n        cidr: string\n        enable_dhcp: boolean\n        gateway_ip?: any | null // future\n    }\n    openstack_config?: any | null // future\n    use_external_resource?: boolean | null // future\n    resource_id?: any | null // future\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/PropertiesNSD.html":{"url":"classes/PropertiesNSD.html","title":"class - PropertiesNSD","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  PropertiesNSD\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsExport/moduleExport.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano le proprietà della network all'interno dei node_templates.\nSee {NetworkSimpleData}\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                    Opzionale\n                                openstack_config\n                            \n                            \n                                    Opzionale\n                                resource_id\n                            \n                            \n                                    Opzionale\n                                use_external_resource\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        openstack_config\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     any | null\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:146\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        resource_id\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     any | null\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:148\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        use_external_resource\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     boolean | null\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:147\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ModeTypeExport, ModuleTypeExport, NetworkTypeExport, NodeTypeExport, PortTypeExport, RelationshipsTypeExport, SubnetTypeExport, ToscaDefinitionType } from \"./TypeExport\"\n\n\n/**\n * Classe utilizzata per l'export. \n * Contiene le informazioni generali per il modulo che devono esserci nello standard Tosca.\n */\nexport class ModuleExport {\n    tosca_definitions_version: ToscaDefinitionType\n    description: string\n    imports: string[]\n    node_templates: { [name: string]: ModuleSimpleData | NodeSimpleData | PortSimpleData | NetworkSimpleData | SubnetSimpleData }\n    dsl_definition: any | null; //future\n    capabilites: any | null //future\n    outputs: any | null //future\n}\n\n/**\n * Classe che contiene gli attributi che indicano la rappresentazione del modulo per l'export.\n */\nexport class ModuleSimpleData {\n    type: ModuleTypeExport\n    properties: PropertiesMSD\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà del modulo per l'export.\n */\nexport class PropertiesMSD {\n    mode: ModeTypeExport\n    description: string\n    version: string | number\n    constraints: ConstraintsMSD\n    interface_networks: {\n        providers: InterfaceNetworksProvider[]\n        consumers: InterfaceNetworksConsumer[]\n    }\n    virtual_machines: VirtualMachine[]\n}\n/**\n * Classe che contiene gli attributi che indicano i vincoli di connessione del modulo per l'export.\n */\nexport class ConstraintsMSD {\n    interface_constraints: InterfaceConstraints[]\n    module_constraints: ModuleConstraints[]\n    network_constraints: NetworkConstraints[]\n}\n/**\n * Classe che contiene gli attributi che indicano i viconli per le interfacce di connessione del modulo.\n */\nexport class InterfaceConstraints {\n    local_interface: string\n    multiple_mode: boolean = false //future\n    module_name: string\n    compatibility: string = \"1.0\" // future\n    remote_interface: string\n}\n/**\n * Classe che contiene gli attributi che indicano i viconli del modulo.\n */\nexport class ModuleConstraints {\n}\n/**\n * Classe che contiene gli attributi che indicano i viconli dei network del modulo.\n */\nexport class NetworkConstraints {\n}\n/**\n * Classe che contiene gli attributi che indicano le interfacce provider del modulo.\n */\nexport class InterfaceNetworksProvider {\n    interface: string\n    network: string\n    tag: string\n    subnets: SubnetExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano le interfacce consumer del modulo.\n */\nexport class InterfaceNetworksConsumer {\n    interface: string\n    network: string\n    tag: string\n    subnets: SubnetExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano l'insieme di host presenti in un modulo.\n */\nexport class VirtualMachine {\n    virtual_machine: string\n    ports: VirtualMachinePorts[]\n}\n/**\n * Classe che contiene gli attributi che indicano le porte associate ad un host di un modulo.\n */\nexport class VirtualMachinePorts {\n    port: string\n    network: string\n    subnets: SubnetExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano la subnet connessa alla porte dell'host.\n * @see {VirtualMachinePorts}\n */\nexport class SubnetExport {\n    subnet: string;\n}\n\n/**\n * Classe che contiene gli attributi che indica un nodo all'interno dei node_templates.\n * @see {ModuleExport}\n */\nexport class NodeSimpleData {\n    type: NodeTypeExport\n    properties: any | null // future\n    interfaces: any | null // future\n    relationships: RelationshipsExport[]\n}\n\n/**\n * Classe che contiene gli attributi che indicano le relazioni generali.\n */\nexport class RelationshipsExport {\n    type: RelationshipsTypeExport\n    target: string\n}\n/**\n * Classe che contiene gli attributi che indicano i dati della porta all'interno dei node_templates.\n */\nexport class PortSimpleData {\n    type: PortTypeExport\n    relationships: RelationshipsExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano i dati delle network all'interno dei node_templates.\n */\nexport class NetworkSimpleData {\n    type: NetworkTypeExport\n    properties: PropertiesNSD\n}\n/**\n * Classe che contiene gli attributi che indicano le proprietà della network all'interno dei node_templates.\n * @see {NetworkSimpleData}\n */\nexport class PropertiesNSD {\n    openstack_config?: any | null // future\n    use_external_resource?: boolean | null // future\n    resource_id?: any | null // future\n}\n\n/**\n * Classe che contiene gli attributi che indicano i dati delle subnet all'interno dei node_templates.\n */\nexport class SubnetSimpleData {\n    type: SubnetTypeExport\n    relationships: RelationshipsExport[]\n    properties: PropertiesSSD\n}\n/**\n * Classe che contiene gli attributi che indicano le proprietà della subnet all'interno dei node_templates.\n * @see {NetworkSimpleData}\n */\nexport class PropertiesSSD {\n    subnet?: {\n        ip_version: string | number\n        cidr: string\n        enable_dhcp: boolean\n        gateway_ip?: any | null // future\n    }\n    openstack_config?: any | null // future\n    use_external_resource?: boolean | null // future\n    resource_id?: any | null // future\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/PropertiesSSD.html":{"url":"classes/PropertiesSSD.html","title":"class - PropertiesSSD","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  PropertiesSSD\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsExport/moduleExport.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano le proprietà della subnet all'interno dei node_templates.\nSee {NetworkSimpleData}\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                    Opzionale\n                                openstack_config\n                            \n                            \n                                    Opzionale\n                                resource_id\n                            \n                            \n                                    Opzionale\n                                subnet\n                            \n                            \n                                    Opzionale\n                                use_external_resource\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        openstack_config\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     any | null\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:170\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        resource_id\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     any | null\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:172\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        subnet\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     literal type\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:164\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        use_external_resource\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     boolean | null\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:171\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ModeTypeExport, ModuleTypeExport, NetworkTypeExport, NodeTypeExport, PortTypeExport, RelationshipsTypeExport, SubnetTypeExport, ToscaDefinitionType } from \"./TypeExport\"\n\n\n/**\n * Classe utilizzata per l'export. \n * Contiene le informazioni generali per il modulo che devono esserci nello standard Tosca.\n */\nexport class ModuleExport {\n    tosca_definitions_version: ToscaDefinitionType\n    description: string\n    imports: string[]\n    node_templates: { [name: string]: ModuleSimpleData | NodeSimpleData | PortSimpleData | NetworkSimpleData | SubnetSimpleData }\n    dsl_definition: any | null; //future\n    capabilites: any | null //future\n    outputs: any | null //future\n}\n\n/**\n * Classe che contiene gli attributi che indicano la rappresentazione del modulo per l'export.\n */\nexport class ModuleSimpleData {\n    type: ModuleTypeExport\n    properties: PropertiesMSD\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà del modulo per l'export.\n */\nexport class PropertiesMSD {\n    mode: ModeTypeExport\n    description: string\n    version: string | number\n    constraints: ConstraintsMSD\n    interface_networks: {\n        providers: InterfaceNetworksProvider[]\n        consumers: InterfaceNetworksConsumer[]\n    }\n    virtual_machines: VirtualMachine[]\n}\n/**\n * Classe che contiene gli attributi che indicano i vincoli di connessione del modulo per l'export.\n */\nexport class ConstraintsMSD {\n    interface_constraints: InterfaceConstraints[]\n    module_constraints: ModuleConstraints[]\n    network_constraints: NetworkConstraints[]\n}\n/**\n * Classe che contiene gli attributi che indicano i viconli per le interfacce di connessione del modulo.\n */\nexport class InterfaceConstraints {\n    local_interface: string\n    multiple_mode: boolean = false //future\n    module_name: string\n    compatibility: string = \"1.0\" // future\n    remote_interface: string\n}\n/**\n * Classe che contiene gli attributi che indicano i viconli del modulo.\n */\nexport class ModuleConstraints {\n}\n/**\n * Classe che contiene gli attributi che indicano i viconli dei network del modulo.\n */\nexport class NetworkConstraints {\n}\n/**\n * Classe che contiene gli attributi che indicano le interfacce provider del modulo.\n */\nexport class InterfaceNetworksProvider {\n    interface: string\n    network: string\n    tag: string\n    subnets: SubnetExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano le interfacce consumer del modulo.\n */\nexport class InterfaceNetworksConsumer {\n    interface: string\n    network: string\n    tag: string\n    subnets: SubnetExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano l'insieme di host presenti in un modulo.\n */\nexport class VirtualMachine {\n    virtual_machine: string\n    ports: VirtualMachinePorts[]\n}\n/**\n * Classe che contiene gli attributi che indicano le porte associate ad un host di un modulo.\n */\nexport class VirtualMachinePorts {\n    port: string\n    network: string\n    subnets: SubnetExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano la subnet connessa alla porte dell'host.\n * @see {VirtualMachinePorts}\n */\nexport class SubnetExport {\n    subnet: string;\n}\n\n/**\n * Classe che contiene gli attributi che indica un nodo all'interno dei node_templates.\n * @see {ModuleExport}\n */\nexport class NodeSimpleData {\n    type: NodeTypeExport\n    properties: any | null // future\n    interfaces: any | null // future\n    relationships: RelationshipsExport[]\n}\n\n/**\n * Classe che contiene gli attributi che indicano le relazioni generali.\n */\nexport class RelationshipsExport {\n    type: RelationshipsTypeExport\n    target: string\n}\n/**\n * Classe che contiene gli attributi che indicano i dati della porta all'interno dei node_templates.\n */\nexport class PortSimpleData {\n    type: PortTypeExport\n    relationships: RelationshipsExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano i dati delle network all'interno dei node_templates.\n */\nexport class NetworkSimpleData {\n    type: NetworkTypeExport\n    properties: PropertiesNSD\n}\n/**\n * Classe che contiene gli attributi che indicano le proprietà della network all'interno dei node_templates.\n * @see {NetworkSimpleData}\n */\nexport class PropertiesNSD {\n    openstack_config?: any | null // future\n    use_external_resource?: boolean | null // future\n    resource_id?: any | null // future\n}\n\n/**\n * Classe che contiene gli attributi che indicano i dati delle subnet all'interno dei node_templates.\n */\nexport class SubnetSimpleData {\n    type: SubnetTypeExport\n    relationships: RelationshipsExport[]\n    properties: PropertiesSSD\n}\n/**\n * Classe che contiene gli attributi che indicano le proprietà della subnet all'interno dei node_templates.\n * @see {NetworkSimpleData}\n */\nexport class PropertiesSSD {\n    subnet?: {\n        ip_version: string | number\n        cidr: string\n        enable_dhcp: boolean\n        gateway_ip?: any | null // future\n    }\n    openstack_config?: any | null // future\n    use_external_resource?: boolean | null // future\n    resource_id?: any | null // future\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/PropertiesTSD.html":{"url":"classes/PropertiesTSD.html","title":"class - PropertiesTSD","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  PropertiesTSD\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsExport/theaterExport.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano le proprietà del teatro.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                areas\n                            \n                            \n                                author\n                            \n                            \n                                description\n                            \n                            \n                                mode\n                            \n                            \n                                tags\n                            \n                            \n                                version\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        areas\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         AreaExport[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/theaterExport.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        author\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/theaterExport.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/theaterExport.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ModeTypeExport\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/theaterExport.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tags\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         TagsExport[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/theaterExport.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/theaterExport.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ModeTypeExport, ModuleTypeExport, TheaterTypeExport, ToscaDefinitionType } from \"./TypeExport\"\n\n/**\n * Classe utilizzata per l'export. \n * Contiene le informazioni generali per il teatro che devono esserci nello standard Tosca.\n */\nexport class TheaterExport {\n    tosca_definitions_version: ToscaDefinitionType\n    description: string\n    imports: string[]\n    node_templates: { [name: string]: TheaterSimpleData | ModuleInstanceSimpleData }\n}\n/**\n * Classe che contiene gli attributi che indicano il teatro all'interno dei node_templates.\n */\nexport class TheaterSimpleData {\n    type: TheaterTypeExport\n    properties: PropertiesTSD\n}\n/**\n * Classe che contiene gli attributi che indicano le proprietà del teatro.\n */\nexport class PropertiesTSD {\n    version: string | number\n    description: string\n    mode: ModeTypeExport\n    author: string\n    tags: TagsExport[]\n    areas: AreaExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano i tag nelle proprietà del teatro.\n * @see {PropertiesTSD}\n */\nexport class TagsExport {\n    tag: string\n}\n/**\n * Classe che contiene gli attributi che indicano le aree nelle proprietà del teatr.\n * @see {PropertiesTSD}\n */\nexport class AreaExport {\n    area: string\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano il modulo all'interno dei node_modules.\n */\nexport class ModuleInstanceSimpleData {\n    type: ModuleTypeExport\n    properties: PropertiesMISD\n}\n/**\n * Classe che contiene gli attributi che indicano le propeitò del modulo all'interno dei node_templates.\n */\nexport class PropertiesMISD{\n    module: string\n    version: string | number\n    area: string\n    sequence: number\n    sources?: SourceExport[]\n    consumer_interface_link: ConsumerInterfaceLinkExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano le porte di ingresso del modulo all'interno dei node_templates.\n */\nexport class SourceExport{\n    module_instance: string\n    host:string\n    interfaces: string[]\n}\n/**\n * Classe che contiene gli attributi che indicano i collegamenti e relazioni intramodulo con le varie interfacce.\n */\nexport class ConsumerInterfaceLinkExport{\n    local_interface: string\n    module_interface:string\n    remote_interface:string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/RelationshipsExport.html":{"url":"classes/RelationshipsExport.html","title":"class - RelationshipsExport","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  RelationshipsExport\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsExport/moduleExport.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano le relazioni generali.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                target\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:125\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         RelationshipsTypeExport\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:124\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ModeTypeExport, ModuleTypeExport, NetworkTypeExport, NodeTypeExport, PortTypeExport, RelationshipsTypeExport, SubnetTypeExport, ToscaDefinitionType } from \"./TypeExport\"\n\n\n/**\n * Classe utilizzata per l'export. \n * Contiene le informazioni generali per il modulo che devono esserci nello standard Tosca.\n */\nexport class ModuleExport {\n    tosca_definitions_version: ToscaDefinitionType\n    description: string\n    imports: string[]\n    node_templates: { [name: string]: ModuleSimpleData | NodeSimpleData | PortSimpleData | NetworkSimpleData | SubnetSimpleData }\n    dsl_definition: any | null; //future\n    capabilites: any | null //future\n    outputs: any | null //future\n}\n\n/**\n * Classe che contiene gli attributi che indicano la rappresentazione del modulo per l'export.\n */\nexport class ModuleSimpleData {\n    type: ModuleTypeExport\n    properties: PropertiesMSD\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà del modulo per l'export.\n */\nexport class PropertiesMSD {\n    mode: ModeTypeExport\n    description: string\n    version: string | number\n    constraints: ConstraintsMSD\n    interface_networks: {\n        providers: InterfaceNetworksProvider[]\n        consumers: InterfaceNetworksConsumer[]\n    }\n    virtual_machines: VirtualMachine[]\n}\n/**\n * Classe che contiene gli attributi che indicano i vincoli di connessione del modulo per l'export.\n */\nexport class ConstraintsMSD {\n    interface_constraints: InterfaceConstraints[]\n    module_constraints: ModuleConstraints[]\n    network_constraints: NetworkConstraints[]\n}\n/**\n * Classe che contiene gli attributi che indicano i viconli per le interfacce di connessione del modulo.\n */\nexport class InterfaceConstraints {\n    local_interface: string\n    multiple_mode: boolean = false //future\n    module_name: string\n    compatibility: string = \"1.0\" // future\n    remote_interface: string\n}\n/**\n * Classe che contiene gli attributi che indicano i viconli del modulo.\n */\nexport class ModuleConstraints {\n}\n/**\n * Classe che contiene gli attributi che indicano i viconli dei network del modulo.\n */\nexport class NetworkConstraints {\n}\n/**\n * Classe che contiene gli attributi che indicano le interfacce provider del modulo.\n */\nexport class InterfaceNetworksProvider {\n    interface: string\n    network: string\n    tag: string\n    subnets: SubnetExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano le interfacce consumer del modulo.\n */\nexport class InterfaceNetworksConsumer {\n    interface: string\n    network: string\n    tag: string\n    subnets: SubnetExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano l'insieme di host presenti in un modulo.\n */\nexport class VirtualMachine {\n    virtual_machine: string\n    ports: VirtualMachinePorts[]\n}\n/**\n * Classe che contiene gli attributi che indicano le porte associate ad un host di un modulo.\n */\nexport class VirtualMachinePorts {\n    port: string\n    network: string\n    subnets: SubnetExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano la subnet connessa alla porte dell'host.\n * @see {VirtualMachinePorts}\n */\nexport class SubnetExport {\n    subnet: string;\n}\n\n/**\n * Classe che contiene gli attributi che indica un nodo all'interno dei node_templates.\n * @see {ModuleExport}\n */\nexport class NodeSimpleData {\n    type: NodeTypeExport\n    properties: any | null // future\n    interfaces: any | null // future\n    relationships: RelationshipsExport[]\n}\n\n/**\n * Classe che contiene gli attributi che indicano le relazioni generali.\n */\nexport class RelationshipsExport {\n    type: RelationshipsTypeExport\n    target: string\n}\n/**\n * Classe che contiene gli attributi che indicano i dati della porta all'interno dei node_templates.\n */\nexport class PortSimpleData {\n    type: PortTypeExport\n    relationships: RelationshipsExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano i dati delle network all'interno dei node_templates.\n */\nexport class NetworkSimpleData {\n    type: NetworkTypeExport\n    properties: PropertiesNSD\n}\n/**\n * Classe che contiene gli attributi che indicano le proprietà della network all'interno dei node_templates.\n * @see {NetworkSimpleData}\n */\nexport class PropertiesNSD {\n    openstack_config?: any | null // future\n    use_external_resource?: boolean | null // future\n    resource_id?: any | null // future\n}\n\n/**\n * Classe che contiene gli attributi che indicano i dati delle subnet all'interno dei node_templates.\n */\nexport class SubnetSimpleData {\n    type: SubnetTypeExport\n    relationships: RelationshipsExport[]\n    properties: PropertiesSSD\n}\n/**\n * Classe che contiene gli attributi che indicano le proprietà della subnet all'interno dei node_templates.\n * @see {NetworkSimpleData}\n */\nexport class PropertiesSSD {\n    subnet?: {\n        ip_version: string | number\n        cidr: string\n        enable_dhcp: boolean\n        gateway_ip?: any | null // future\n    }\n    openstack_config?: any | null // future\n    use_external_resource?: boolean | null // future\n    resource_id?: any | null // future\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/ReteConnection.html":{"url":"classes/ReteConnection.html","title":"class - ReteConnection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  ReteConnection\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsApplication/applicationModels.ts\n        \n\n\n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                from\n                            \n                            \n                                port_dst\n                            \n                            \n                                port_src\n                            \n                            \n                                to\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        from\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsApplication/applicationModels.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        port_dst\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsApplication/applicationModels.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        port_src\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsApplication/applicationModels.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        to\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsApplication/applicationModels.ts:56\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ReteHostInfo } from \"src/app/rete-settings/nodes/rete-nodes/host/hostNode\";\nimport { ReteNetworkInfo } from \"src/app/rete-settings/nodes/rete-nodes/network/networkNode\";\nimport { ReteSubnetInfo } from \"src/app/rete-settings/nodes/rete-nodes/subnet/subnetNode\";\nimport { ReteMirroringModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/mirroringModuleInstance/mirroringModuleInstanceNode\";\nimport { ReteTheaterInternalServiceModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/theaterInternalServiceModuleInstance/theaterInternalServiceModuleInstanceNode\";\nimport { ReteTheaterModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/theaterModuleInstance/theaterModuleInstanceNode\";\nimport { FlavorBasicInfo } from \"../modelsDTO/falvorDTO\";\nimport { HostModuleDTO } from \"../modelsDTO/hostDTO\";\nimport { ModuleNetworkInterfaceDTO, ModuleInstancePropertiesDTO, SimpleModuleDTO, TheaterInstancePropertiesDTO, ModuleInstanceDTO, ModuleDTO, SimpleAreaDTO, AreaDTO } from \"../modelsDTO/moduleDTO\";\nimport { TheaterDTO } from \"../modelsDTO/theaterDTO\";\n\n\nexport interface CommonModule {\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n}\n\n\n/**\n * Classe contenente gli attributi utilizzati per le operazioni che coinvolgono i moduli.\n * ps. Questa struttura è prettamente utilizzata nella chiamata relativa al singolo modulo.\n */\nexport class ModuleApplication extends ModuleDTO implements CommonModule {\n    imports: string[] // perchè nell'export yaml è previsto\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n    // serve per validare il json risultante dal parsing del theaterApplication\n    validateObject?: string = \"module\";\n}\n// PER IMPLEMENTAZIONI FUTURE, PER COERENZA, PRENDERE DIRETTAMENTE I SINGOLI NODI DALLA CHIAMATA ESCLUSIVA E NON DA QUELLA CHE RESTITUISCE TUTTI I TEATRI\n/**\n * Classe contenente gli attributi utilizzati per le operazioni che coinvolgono i moduli.\n * ps. Questa struttura è prettamente utilizzata nella chiamata che prende tutti i moduli del teatro.\n */\nexport class SimpleModuleApplication extends SimpleModuleDTO implements CommonModule {\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n}\n\n\nexport class ReteConnection {\n    from: string;\n    port_src: string;\n    to: string;\n    port_dst: string;\n}\n\nexport interface TopologyList {\n    rete: any;\n    topology?: TopologyElement\n}\nexport class TopologyElement {\n    elements: { [name: string]: any };\n    connection: ReteConnection[]\n}\n\n// apptype module topology\n\nexport class NodeTopologyElement implements TopologyElement {\n    elements: { [hostName: string]: ReteHostInfo | ReteSubnetInfo | ReteNetworkInfo };\n    connection: ReteConnection[]\n}\n\nexport interface ModuleTopology extends TopologyList {\n    rete: ReteMirroringModuleInstanceInfo | ReteTheaterInternalServiceModuleInstanceInfo | ReteTheaterModuleInstanceInfo\n    topology: NodeTopologyElement;\n}\n\nexport class ModuleInstance extends ModuleInstanceDTO implements ModuleTopology {\n    // moduleTopology data\n    rete: ReteTheaterModuleInstanceInfo | ReteTheaterInternalServiceModuleInstanceInfo | ReteMirroringModuleInstanceInfo;\n    topology: NodeTopologyElement;\n    // other data\n    moduleInfo: SimpleModuleApplication\n}\n\n// apptype theater theater\n\nexport interface TheaterTopology extends TopologyElement {\n    elements: { [hostName: string]: ModuleInstance };\n    connection: ReteConnection[];\n}\n\nexport class TheaterApplication extends TheaterDTO implements TheaterTopology {\n    // theaterTopology data\n    elements: { [hostName: string]: ModuleInstance; };\n    connection: ReteConnection[];\n    // other data\n    properties: TheaterInstancePropertiesDTO;\n    topology: TheaterTopology;\n    // serve per validare il json risultante dal parsing del theaterApplication\n    validateObject?: string = \"theater\";\n}\n\nexport class AreaApplication extends AreaDTO {\n    color?: string;\n}\nexport class AreaColorDTO extends SimpleAreaDTO {\n    color: string;\n}\n\n\nexport class FlavorApplication extends FlavorBasicInfo {\n    flavorName: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/ReteHostInfo.html":{"url":"classes/ReteHostInfo.html","title":"class - ReteHostInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  ReteHostInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/rete-settings/nodes/rete-nodes/host/hostNode.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe utilizzata per indicare il tipo di modulo HostNode.\nSee {reteBasicModuleInfo}\n\n            \n\n            \n                Extends\n            \n            \n                        reteBasicNodeInfo\n            \n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                cpu\n                            \n                            \n                                disk\n                            \n                            \n                                flavorName\n                            \n                            \n                                os\n                            \n                            \n                                ram\n                            \n                            \n                                type\n                            \n                            \n                                Input\n                            \n                            \n                                name\n                            \n                            \n                                Output\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        cpu\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     number | string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-nodes/host/hostNode.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        disk\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     number | string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-nodes/host/hostNode.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        flavorName\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-nodes/host/hostNode.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        os\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-nodes/host/hostNode.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ram\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     number | string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-nodes/host/hostNode.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         EnumNodeType.Host\n\n                    \n                \n                        \n                            \n                                ereditato da         reteBasicNodeInfo\n\n                            \n                        \n                    \n                        \n                                Definito in         reteBasicNodeInfo:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Input\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string[]\n\n                    \n                \n                        \n                            \n                                ereditato da         reteBasicNodeInfo\n\n                            \n                        \n                    \n                        \n                                Definito in         reteBasicNodeInfo:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         reteBasicNodeInfo\n\n                            \n                        \n                    \n                        \n                                Definito in         reteBasicNodeInfo:10\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Output\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string[]\n\n                    \n                \n                        \n                            \n                                ereditato da         reteBasicNodeInfo\n\n                            \n                        \n                    \n                        \n                                Definito in         reteBasicNodeInfo:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Component, Input, Output, Node } from 'rete';\nimport { _Socket } from '../../../sockets/socket';\nimport { _Control } from '../../../controls/control';\nimport { AngularComponent, AngularComponentData } from 'rete-angular-render-plugin';\nimport { HostComponent } from '../../../nodes/rete-nodes/host/host.component'\nimport { NodeData, WorkerInputs, WorkerOutputs } from 'rete/types/core/data';\nimport {  reteBasicNodeInfo } from '../../reteBasic';\nimport { EnumNodeType } from 'src/app/models/appType';\n\n/**\n * Classe utilizzata per indicare il tipo di modulo HostNode.\n * @see {reteBasicModuleInfo}\n */\nexport class ReteHostInfo extends reteBasicNodeInfo {\n  os: string;\n  flavorName: string;\n  cpu: number | string;\n  disk: number | string;\n  ram: number | string;\n  type: EnumNodeType.Host\n}\n\n/**\n * Funzione dichiarata in HostNode. \n * Essa ha lo scopo di generare una struttura dati empty.\n * Viene utilizzata in per instanziare un nodo del tipo di ritorno indicato senza dati.\n * @returns {ReteSubnetInfo}\n */\nexport function getEmptyHostInfo(): ReteHostInfo {\n  let x: ReteHostInfo = {\n    os: \"\",\n    Input: [],\n    Output: [],\n    name: \"\",\n    type: EnumNodeType.Host,\n    cpu: '',\n    disk: '',\n    ram: '',\n    flavorName: ''\n  };\n  return x;\n}\n\n/**\n * Classe che rappresenta il nodo (rete-node) Host all'interno del canvas/editor di rete.\n */\nexport class HostNode extends Component implements AngularComponent {\n\n  data: AngularComponentData;\n\n    /**\n   * Costruttore di HostNode\n   */\n  constructor() {\n    super(EnumNodeType.Host);\n    this.data.render = 'angular';\n    this.data.component = HostComponent;\n  }\n\n  /**\n   * Funzione richiamata in fase di costruzione del nodo (rete-node).\n   * Controlla se bisogna instanziare il nodo oppure crearne uno nuovo:\n   * - In fase di design, il nodo non ha dati, per cui bisogna crearne uno nuovo.\n   * - In fase di visualizing, il nodo presenta dei dati, per cui va valorizzato il nodo.\n   * @param node \n   */\n  async builder(node: Node) {\n    if (Object.keys(node.data).length === 0)\n      this.createNewNode(node)\n    else\n      this.valorizeNode(node)\n  }\n\n\n  /**\n   * Funzione che ha come scopo creare un nodo (rete-node).\n   * In particolare gli assegna una struttura vuota.\n   * @param node \n   */\n  createNewNode(node: Node) {\n    let t = getEmptyHostInfo()\n    node.data = {\n      ...node.data,\n      ...t\n    }\n  }\n\n\n  /**\n   * Funzione che ha come scopo la valorizzazione del nodo (rete-node) con i dati in suo possesso.\n   * In quasta fase avviene anche la fase iniziale di instanziamento delle porte input/output.\n   * @param node \n   */\n  valorizeNode(node: Node) {\n    var i: any = node.data['Input'];\n    var o: any = node.data['Output'];\n    var il = i.length;\n    var ol = o.length;\n\n    for (let index = 0; index \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/ReteMirroringModuleInstanceInfo.html":{"url":"classes/ReteMirroringModuleInstanceInfo.html","title":"class - ReteMirroringModuleInstanceInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  ReteMirroringModuleInstanceInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/rete-settings/nodes/rete-modules/mirroringModuleInstance/mirroringModuleInstanceNode.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe utilizzata per indicare il tipo di modulo MirroringModuleInstanceNode.\nSee {reteBasicModuleInfo}\n\n            \n\n            \n                Extends\n            \n            \n                        reteBasicModuleInfo\n            \n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                type\n                            \n                            \n                                host_number\n                            \n                            \n                                Input\n                            \n                            \n                                name\n                            \n                            \n                                network_number\n                            \n                            \n                                Output\n                            \n                            \n                                subnet_number\n                            \n                            \n                                area\n                            \n                            \n                                consumer_interfaces_link\n                            \n                            \n                                description\n                            \n                            \n                                module\n                            \n                            \n                                sequence\n                            \n                            \n                                version\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         EnumModuleType.MirroringModuleInstance\n\n                    \n                \n                        \n                            \n                                ereditato da         reteBasicModuleInfo\n\n                            \n                        \n                    \n                        \n                                Definito in         reteBasicModuleInfo:15\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        host_number\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         number\n\n                    \n                \n                        \n                            \n                                ereditato da         reteBasicModuleInfo\n\n                            \n                        \n                    \n                        \n                                Definito in         reteBasicModuleInfo:23\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Input\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string[]\n\n                    \n                \n                        \n                            \n                                ereditato da         reteBasicModuleInfo\n\n                            \n                        \n                    \n                        \n                                Definito in         reteBasicModuleInfo:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         reteBasicModuleInfo\n\n                            \n                        \n                    \n                        \n                                Definito in         reteBasicModuleInfo:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        network_number\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         number\n\n                    \n                \n                        \n                            \n                                ereditato da         reteBasicModuleInfo\n\n                            \n                        \n                    \n                        \n                                Definito in         reteBasicModuleInfo:24\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Output\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string[]\n\n                    \n                \n                        \n                            \n                                ereditato da         reteBasicModuleInfo\n\n                            \n                        \n                    \n                        \n                                Definito in         reteBasicModuleInfo:21\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subnet_number\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         number\n\n                    \n                \n                        \n                            \n                                ereditato da         reteBasicModuleInfo\n\n                            \n                        \n                    \n                        \n                                Definito in         reteBasicModuleInfo:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        area\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleInstancePropertiesDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleInstancePropertiesDTO:166\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        consumer_interfaces_link\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ConsumerInterfaceLinkDTO[]\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleInstancePropertiesDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleInstancePropertiesDTO:171\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleInstancePropertiesDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleInstancePropertiesDTO:167\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleInstancePropertiesDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleInstancePropertiesDTO:168\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sequence\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleInstancePropertiesDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleInstancePropertiesDTO:170\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleInstancePropertiesDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleInstancePropertiesDTO:169\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Component, Input, Output, Node } from 'rete';\nimport { _Socket } from '../../../sockets/socket';\nimport { _Control } from '../../../controls/control';\nimport { AngularComponent, AngularComponentData } from 'rete-angular-render-plugin';\nimport { NodeData, WorkerInputs, WorkerOutputs } from 'rete/types/core/data';\nimport { MirroringModuleInstanceComponent } from './mirroringModuleInstance.component';\nimport { reteBasicModuleInfo } from '../../reteBasic';\nimport { EnumModuleType } from 'src/app/models/appType';\n\n/**\n * Classe utilizzata per indicare il tipo di modulo MirroringModuleInstanceNode.\n * @see {reteBasicModuleInfo}\n */\nexport class ReteMirroringModuleInstanceInfo extends reteBasicModuleInfo {\n  type: EnumModuleType.MirroringModuleInstance;\n}\n\n/**\n * Funzione dichiarata in MirroringModuleInstanceNode. \n * Essa ha lo scopo di generare una struttura dati empty.\n * Viene utilizzata in per instanziare un nodo del tipo di ritorno indicato senza dati.\n * @returns {ReteMirroringModuleInstanceInfo}\n */\nexport function getEmptyReteMirroringModuleInstanceInfo(): ReteMirroringModuleInstanceInfo {\n  let x: ReteMirroringModuleInstanceInfo = {\n    Input: [],\n    Output: [],\n    description: \"\",\n    name: \"\",\n    type: EnumModuleType.MirroringModuleInstance,\n    area: \"\",\n    host_number: 0,\n    network_number: 0,\n    subnet_number: 0,\n    module: '',\n    version: '',\n    sequence: '',\n    consumer_interfaces_link: []\n  };\n  return x;\n}\n\n\n/**\n * Classe che rappresenta il modulo (rete-node) MirroringModuleInstance all'interno del canvas/editor di rete.\n */\nexport class MirroringModuleInstanceNode extends Component implements AngularComponent {\n\n  data: AngularComponentData;\n\n  /**\n   * Costruttore di MirroringModuleInstanceNode\n   */\n  constructor() {\n    super(EnumModuleType.MirroringModuleInstance);\n    this.data.render = 'angular';\n    this.data.component = MirroringModuleInstanceComponent;\n  }\n\n  /**\n   * Funzione richiamata in fase di costruzione del nodo (rete-node).\n   * Controlla se bisogna instanziare il nodo oppure crearne uno nuovo:\n   * - In fase di design, il nodo non ha dati, per cui bisogna crearne uno nuovo.\n   * - In fase di visualizing, il nodo presenta dei dati, per cui va valorizzato il nodo.\n   * @param node \n   */\n  async builder(node: Node) {\n    if (Object.keys(node.data).length === 0)\n      this.createNewNode(node)\n    else\n      this.valorizeNode(node)\n  }\n\n  /**\n   * Funzione che ha come scopo creare un nodo (rete-node).\n   * In particolare gli assegna una struttura vuota.\n   * @param node \n   */\n  createNewNode(node: Node) {\n    let t = getEmptyReteMirroringModuleInstanceInfo()\n    node.data = {\n      ...node.data,\n      ...t\n    }\n  }\n\n  /**\n   * Funzione che ha come scopo la valorizzazione del nodo (rete-node) con i dati in suo possesso.\n   * In quasta fase avviene anche la fase iniziale di instanziamento delle porte input/output.\n   * @param node \n   */\n  valorizeNode(node: Node) {\n    var i: any = node.data['Input'];\n    var o: any = node.data['Output'];\n    var il = i.length;\n    var ol = o.length;\n\n    for (let index = 0; index \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/ReteModuleComposerSettings.html":{"url":"classes/ReteModuleComposerSettings.html","title":"class - ReteModuleComposerSettings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  ReteModuleComposerSettings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/rete-settings/settings/editor-settings/reteModuleComposerSettings.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che ha lo scopo di eseguire i dovuti settaggi all'ambiente di rete.\nQuesta riguarda la parte di ReteModuleComposer\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                components\n                            \n                            \n                                container\n                            \n                            \n                                editor\n                            \n                            \n                                engine\n                            \n                            \n                                nodeSelected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                editorUSE\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Costruttore\n        \n            \n                \n                    \nconstructor(container: any, edito: NodeEditor, components: any, engine: Engine)\n                    \n                \n                        \n                            \n                                Definito in src/app/rete-settings/settings/editor-settings/reteModuleComposerSettings.ts:24\n                            \n                        \n\n                \n                    \n                            Costruttore di ReteModuleComposerSettings\n\n                            \n                                    Parametri :\n                                    \n                                        \n                                            \n                                                Nome\n                                                    Tipo\n                                                Opzionale\n                                            \n                                        \n                                        \n                                                \n                                                        container\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        edito\n                                                  \n                                                        \n                                                                    NodeEditor\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        components\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        engine\n                                                  \n                                                        \n                                                                    Engine\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        components\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     null\n\n                    \n                \n                \n                    \n                        Valore predefinito : null\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/settings/editor-settings/reteModuleComposerSettings.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        container\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     null\n\n                    \n                \n                \n                    \n                        Valore predefinito : null\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/settings/editor-settings/reteModuleComposerSettings.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editor\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     NodeEditor\n\n                    \n                \n                \n                    \n                        Valore predefinito : null\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/settings/editor-settings/reteModuleComposerSettings.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        engine\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     Engine\n\n                    \n                \n                \n                    \n                        Valore predefinito : null\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/settings/editor-settings/reteModuleComposerSettings.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nodeSelected\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         any\n\n                    \n                \n                \n                    \n                        Valore predefinito : {}\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/settings/editor-settings/reteModuleComposerSettings.ts:24\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        editorUSE\n                        \n                    \n                \n            \n            \n                \neditorUSE()\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/settings/editor-settings/reteModuleComposerSettings.ts:43\n                \n            \n\n\n            \n                \n                    Funzione che, una volta richiamata, setta l'editor i dovuti plugin.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Engine, NodeEditor, Node, Output as or, Input as ir } from \"rete\";\nimport ConnectionPlugin from 'rete-connection-plugin';\nimport ConnectionPathPlugin from 'rete-connection-path-plugin';\nimport ContextMenuPlugin from 'rete-context-menu-plugin';\nimport { AngularRenderPlugin } from 'rete-angular-render-plugin';\nimport AreaPlugin from 'rete-area-plugin';\nimport MinimapPlugin from 'rete-minimap-plugin';\nimport AutoArrangePlugin from 'rete-auto-arrange-plugin'\nimport DockPlugin from 'rete-dock-plugin';\nimport Vue from 'vue/dist/vue.esm';\nimport { _Socket } from '../../sockets/socket';\nimport HistoryPlugin from 'rete-history-plugin';\n\n\n/**\n * Classe che ha lo scopo di eseguire i dovuti settaggi all'ambiente di rete.\n * Questa riguarda la parte di ReteModuleComposer\n */\nexport class ReteModuleComposerSettings {\n    container = null;\n    editor: NodeEditor = null;\n    components = null;\n    engine: Engine = null;\n    nodeSelected: any = {};\n\n    /**\n     * Costruttore di ReteModuleComposerSettings\n     * @param container \n     * @param edito \n     * @param components \n     * @param engine \n     */\n    constructor(container: any, edito: NodeEditor, components: any, engine: Engine) {\n        this.container = container;\n        this.editor = edito;\n        this.components = components;\n        this.engine = engine;\n    }\n\n    /**\n     * Funzione che, una volta richiamata, setta l'editor i dovuti plugin.\n     */\n    editorUSE() {\n\n        this.editor.use(ConnectionPlugin);\n\n        this.editor.use(AngularRenderPlugin)//, { component: MyNodeComponent });\n\n        this.editor.use(MinimapPlugin, { Vue });\n\n        this.editor.use(HistoryPlugin, { keyboard: true });\n\n        this.editor.use(ContextMenuPlugin, {\n            searchBar: false,\n            components: {},\n            items: {\n                \"Undo\": () => {\n                    this.editor.trigger(\"undo\");\n                },\n                \"Redo\": () => {\n                    this.editor.trigger(\"redo\");\n                },\n                \"Show all nodes\": () => {\n                    AreaPlugin.zoomAt(this.editor, this.editor.nodes);\n                },\n                \"Editor\": () => {\n                    console.log(JSON.stringify(this.editor.toJSON()));\n                },\n                \"Nodes\": () => {\n                    var x = this.editor.toJSON();\n                    var z = [];\n                    for (let key in x) {\n                        let value = x[key];\n                        z.push(value);\n                    }\n                    return z;\n                }\n            },\n            allocate(component: any) {\n                return ['Create nodes'];\n            },\n            rename(component: any) {\n                return component.name;\n            },\n        });\n\n        this.editor.use(AreaPlugin, {\n            background: false, //righe\n            snap: false,\n            scaleExtent: { min: 0.1, max: 1 },\n            translateExtent: { width: 5000, height: 4000 }\n        })\n\n        this.editor.use(AutoArrangePlugin, {\n            // snap: {size: 64, dynamic: true},\n            margin: { x: 400, y: 100 },\n            depth: 0,\n            vertical: false,\n        })\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/ReteModuleVisualizerSettings.html":{"url":"classes/ReteModuleVisualizerSettings.html","title":"class - ReteModuleVisualizerSettings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  ReteModuleVisualizerSettings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/rete-settings/settings/editor-settings/reteModuleVisualizerSettings.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che ha lo scopo di eseguire i dovuti settaggi all'ambiente di rete.\nQuesta riguarda la parte di ReteModuleVisualizer\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                components\n                            \n                            \n                                container\n                            \n                            \n                                editor\n                            \n                            \n                                engine\n                            \n                            \n                                nodeSelected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                editorUSE\n                            \n                            \n                                editorUSE_simple\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Costruttore\n        \n            \n                \n                    \nconstructor(container: any, edito: NodeEditor, components: any, engine: Engine)\n                    \n                \n                        \n                            \n                                Definito in src/app/rete-settings/settings/editor-settings/reteModuleVisualizerSettings.ts:25\n                            \n                        \n\n                \n                    \n                            Costruttore di ReteModuleVisualizerSettings\n\n                            \n                                    Parametri :\n                                    \n                                        \n                                            \n                                                Nome\n                                                    Tipo\n                                                Opzionale\n                                            \n                                        \n                                        \n                                                \n                                                        container\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        edito\n                                                  \n                                                        \n                                                                    NodeEditor\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        components\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        engine\n                                                  \n                                                        \n                                                                    Engine\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        components\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     null\n\n                    \n                \n                \n                    \n                        Valore predefinito : null\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/settings/editor-settings/reteModuleVisualizerSettings.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        container\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     null\n\n                    \n                \n                \n                    \n                        Valore predefinito : null\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/settings/editor-settings/reteModuleVisualizerSettings.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editor\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     NodeEditor\n\n                    \n                \n                \n                    \n                        Valore predefinito : null\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/settings/editor-settings/reteModuleVisualizerSettings.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        engine\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     Engine\n\n                    \n                \n                \n                    \n                        Valore predefinito : null\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/settings/editor-settings/reteModuleVisualizerSettings.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nodeSelected\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         any\n\n                    \n                \n                \n                    \n                        Valore predefinito : {}\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/settings/editor-settings/reteModuleVisualizerSettings.ts:25\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        editorUSE\n                        \n                    \n                \n            \n            \n                \neditorUSE()\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/settings/editor-settings/reteModuleVisualizerSettings.ts:44\n                \n            \n\n\n            \n                \n                    Funzione che, una volta richiamata, setta l'editor i dovuti plugin.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editorUSE_simple\n                        \n                    \n                \n            \n            \n                \neditorUSE_simple()\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/settings/editor-settings/reteModuleVisualizerSettings.ts:107\n                \n            \n\n\n            \n                \n                    Funzione che, una volta richiamata, setta l'editor i dovuti plugin.\nQuesta è richiamata quando si renderizza l'editor in modalità simple.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Engine, NodeEditor, Node, Output as or, Input as ir } from \"rete\";\nimport ConnectionPlugin from 'rete-connection-plugin';\nimport ConnectionPathPlugin from 'rete-connection-path-plugin';\nimport ContextMenuPlugin from 'rete-context-menu-plugin';\nimport { AngularRenderPlugin } from 'rete-angular-render-plugin';\nimport AreaPlugin from 'rete-area-plugin';\nimport MinimapPlugin from 'rete-minimap-plugin';\nimport AutoArrangePlugin from 'rete-auto-arrange-plugin'\nimport DockPlugin from 'rete-dock-plugin';\nimport Vue from 'vue/dist/vue.esm';\nimport { _Socket } from '../../sockets/socket';\nimport ReadonlyPlugin from 'rete-readonly-plugin';\nimport HistoryPlugin from 'rete-history-plugin';\n\n\n/**\n * Classe che ha lo scopo di eseguire i dovuti settaggi all'ambiente di rete.\n * Questa riguarda la parte di ReteModuleVisualizer\n */\nexport class ReteModuleVisualizerSettings {\n  container = null;\n  editor: NodeEditor = null;\n  components = null;\n  engine: Engine = null;\n  nodeSelected: any = {};\n\n  /**\n   * Costruttore di ReteModuleVisualizerSettings\n   * @param container \n   * @param edito \n   * @param components \n   * @param engine \n   */\n  constructor(container: any, edito: NodeEditor, components: any, engine: Engine) {\n    this.container = container;\n    this.editor = edito;\n    this.components = components;\n    this.engine = engine;\n  }\n\n  /**\n   * Funzione che, una volta richiamata, setta l'editor i dovuti plugin.\n   */\n  editorUSE() {\n\n    this.editor.use(ConnectionPlugin);\n\n    this.editor.use(AngularRenderPlugin)//, { component: MyNodeComponent });\n\n    this.editor.use(MinimapPlugin, { Vue });\n\n    this.editor.use(HistoryPlugin, { keyboard: true });\n\n    this.editor.use(ContextMenuPlugin, {\n      searchBar: false,\n      components: {},\n      items: {\n        \"Undo\": () => {\n          this.editor.trigger(\"undo\");\n        },\n        \"Redo\": () => {\n          this.editor.trigger(\"redo\");\n        },\n        \"Show all nodes\": () => {\n          AreaPlugin.zoomAt(this.editor, this.editor.nodes);\n        },\n        \"Editor\": () => {\n          console.log(JSON.stringify(this.editor.toJSON()));\n        },\n        \"Nodes\": () => {\n          var x = this.editor.toJSON();\n          var z = [];\n          for (let key in x) {\n            let value = x[key];\n            z.push(value);\n          }\n          return z;\n        }\n      },\n      allocate(component: any) {\n        return null;\n      },\n      // rename(component) {\n      //   return component.name;\n      // }\n    });\n\n    this.editor.use(AreaPlugin, {\n      background: false, //righe\n      snap: false,\n      scaleExtent: { min: 0.1, max: 1 },\n      translateExtent: { width: 5000, height: 4000 }\n    })\n\n    this.editor.use(AutoArrangePlugin, {\n      // snap: {size: 64, dynamic: true},\n      margin: { x: 400, y: 100 },\n      depth: 0,\n      vertical: false,\n    })\n  }\n\n  /**\n   * Funzione che, una volta richiamata, setta l'editor i dovuti plugin.\n   * Questa è richiamata quando si renderizza l'editor in modalità simple.\n   */\n  editorUSE_simple() {\n\n    this.editor.use(ConnectionPlugin);\n    this.editor.use(AngularRenderPlugin)//, { component: MyNodeComponent });\n    this.editor.use(ContextMenuPlugin, {\n      searchBar: false,\n      components: {},\n      items: {\n        \"Show all nodes\": () => {\n          AreaPlugin.zoomAt(this.editor, this.editor.nodes);\n        },\n        \"Editor\": () => {\n          console.log(JSON.stringify(this.editor.toJSON()));\n        },\n        \"Nodes\": () => {\n          var x = this.editor.toJSON();\n          var z = [];\n          for (let key in x) {\n            let value = x[key];\n            z.push(value);\n          }\n          return z;\n        }\n      },\n      allocate(component: any) {\n        return null;\n      },\n      // rename(component) {\n      //   return component.name;\n      // }\n    });\n\n\n    this.editor.use(AreaPlugin, {\n      background: false, //righe\n      snap: false,\n      scaleExtent: { min: 0.1, max: 1 },\n      translateExtent: { width: 5000, height: 4000 }\n    })\n    this.editor.use(AutoArrangePlugin, {\n      margin: { x: 400, y: 200 },\n      depth: 1,\n      vertical: false,\n    })\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/ReteNetworkInfo.html":{"url":"classes/ReteNetworkInfo.html","title":"class - ReteNetworkInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  ReteNetworkInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/rete-settings/nodes/rete-nodes/network/networkNode.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe utilizzata per indicare il tipo di modulo NetworkNode.\nSee {reteBasicNodeInfo}\n\n            \n\n            \n                Extends\n            \n            \n                        reteBasicNodeInfo\n            \n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                externalInterfaceName\n                            \n                            \n                                externalInterfaceType\n                            \n                            \n                                type\n                            \n                            \n                                Input\n                            \n                            \n                                name\n                            \n                            \n                                Output\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        externalInterfaceName\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-nodes/network/networkNode.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        externalInterfaceType\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         InterfacePortType\n\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-nodes/network/networkNode.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         EnumNodeType.Network\n\n                    \n                \n                        \n                            \n                                ereditato da         reteBasicNodeInfo\n\n                            \n                        \n                    \n                        \n                                Definito in         reteBasicNodeInfo:15\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Input\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string[]\n\n                    \n                \n                        \n                            \n                                ereditato da         reteBasicNodeInfo\n\n                            \n                        \n                    \n                        \n                                Definito in         reteBasicNodeInfo:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         reteBasicNodeInfo\n\n                            \n                        \n                    \n                        \n                                Definito in         reteBasicNodeInfo:10\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Output\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string[]\n\n                    \n                \n                        \n                            \n                                ereditato da         reteBasicNodeInfo\n\n                            \n                        \n                    \n                        \n                                Definito in         reteBasicNodeInfo:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Component, Input, Output, Node } from 'rete';\nimport { _Socket } from '../../../sockets/socket';\nimport { _Control } from '../../../controls/control';\nimport { AngularComponent, AngularComponentData } from 'rete-angular-render-plugin';\nimport { NetworkComponent } from './network.component';\nimport { NodeData, WorkerInputs, WorkerOutputs } from 'rete/types/core/data';\nimport {  reteBasicNodeInfo } from '../../reteBasic';\nimport { EnumNodeType, InterfacePortType } from 'src/app/models/appType';\n\n/**\n * Classe utilizzata per indicare il tipo di modulo NetworkNode.\n * @see {reteBasicNodeInfo}\n */\nexport class ReteNetworkInfo extends reteBasicNodeInfo {\n  type: EnumNodeType.Network;\n  externalInterfaceName: string;\n  externalInterfaceType: InterfacePortType;\n}\n\n/**\n * Funzione dichiarata in NetworkNode. \n * Essa ha lo scopo di generare una struttura dati empty.\n * Viene utilizzata in per instanziare un nodo del tipo di ritorno indicato senza dati.\n * @returns {ReteSubnetInfo}\n */\nexport function getEmptyNetworkInfo():ReteNetworkInfo {\n  let x: ReteNetworkInfo = {\n    Input: [],\n    Output: [],\n    name: \"\",\n    type: EnumNodeType.Network,\n    externalInterfaceName: '',\n    externalInterfaceType: undefined\n  };\n  return x;\n\n}\n\n\n/**\n * Classe che rappresenta il nodo (rete-node) Network all'interno del canvas/editor di rete.\n */\nexport class NetworkNode extends Component implements AngularComponent {\n\n  data: AngularComponentData;\n\n  /**\n   * Costruttore di NetworkNode\n   */\n  constructor() {\n    super(EnumNodeType.Network);\n    this.data.render = 'angular';\n    this.data.component = NetworkComponent;\n  }\n\n  /**\n   * Funzione richiamata in fase di costruzione del nodo (rete-node).\n   * Controlla se bisogna instanziare il nodo oppure crearne uno nuovo:\n   * - In fase di design, il nodo non ha dati, per cui bisogna crearne uno nuovo.\n   * - In fase di visualizing, il nodo presenta dei dati, per cui va valorizzato il nodo.\n   * @param node \n   */\n  async builder(node: Node) {\n    if (Object.keys(node.data).length === 0)\n      this.createNewNode(node)\n    else\n      this.valorizeNode(node)\n  }\n\n  /**\n   * Funzione che ha come scopo creare un nodo (rete-node).\n   * In particolare gli assegna una struttura vuota.\n   * @param node \n   */\n  createNewNode(node: Node) {\n    let t = getEmptyNetworkInfo()\n    node.data = {\n      ...node.data,\n      ...t\n    }\n  }\n\n  /**\n   * Funzione che ha come scopo la valorizzazione del nodo (rete-node) con i dati in suo possesso.\n   * In quasta fase avviene anche la fase iniziale di instanziamento delle porte input/output.\n   * @param node \n   */\n  valorizeNode(node: Node) {\n    var i: any = node.data['Input'];\n    var o: any = node.data['Output'];\n    var il = i.length;\n    var ol = o.length;\n\n    for (let index = 0; index \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/ReteSubnetInfo.html":{"url":"classes/ReteSubnetInfo.html","title":"class - ReteSubnetInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  ReteSubnetInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/rete-settings/nodes/rete-nodes/subnet/subnetNode.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe utilizzata per indicare il tipo di modulo SubnetNode.\nSee {reteBasicModuleInfo}\n\n            \n\n            \n                Extends\n            \n            \n                        reteBasicNodeInfo\n            \n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                cidr\n                            \n                            \n                                isDhcp\n                            \n                            \n                                type\n                            \n                            \n                                version\n                            \n                            \n                                Input\n                            \n                            \n                                name\n                            \n                            \n                                Output\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        cidr\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-nodes/subnet/subnetNode.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDhcp\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | boolean\n\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-nodes/subnet/subnetNode.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         EnumNodeType.Subnet\n\n                    \n                \n                        \n                            \n                                ereditato da         reteBasicNodeInfo\n\n                            \n                        \n                    \n                        \n                                Definito in         reteBasicNodeInfo:18\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-nodes/subnet/subnetNode.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Input\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string[]\n\n                    \n                \n                        \n                            \n                                ereditato da         reteBasicNodeInfo\n\n                            \n                        \n                    \n                        \n                                Definito in         reteBasicNodeInfo:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         reteBasicNodeInfo\n\n                            \n                        \n                    \n                        \n                                Definito in         reteBasicNodeInfo:10\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Output\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string[]\n\n                    \n                \n                        \n                            \n                                ereditato da         reteBasicNodeInfo\n\n                            \n                        \n                    \n                        \n                                Definito in         reteBasicNodeInfo:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Component, Input, Output, Node } from 'rete';\nimport { _Socket } from '../../../sockets/socket';\nimport { _Control } from '../../../controls/control';\nimport { AngularComponent, AngularComponentData } from 'rete-angular-render-plugin';\nimport { SubnetComponent } from './subnet.component';\nimport { NodeData, WorkerInputs, WorkerOutputs } from 'rete/types/core/data';\nimport {  reteBasicNodeInfo } from '../../reteBasic';\nimport { EnumNodeType } from 'src/app/models/appType';\n\n/**\n * Classe utilizzata per indicare il tipo di modulo SubnetNode.\n * @see {reteBasicModuleInfo}\n */\nexport class ReteSubnetInfo extends reteBasicNodeInfo {\n  cidr: string;\n  version: string | number;\n  isDhcp: string | boolean;\n  type: EnumNodeType.Subnet;\n}\n\n/**\n * Funzione dichiarata in SubnetNode. \n * Essa ha lo scopo di generare una struttura dati empty.\n * Viene utilizzata in per instanziare un nodo del tipo di ritorno indicato senza dati.\n * @returns {ReteSubnetInfo}\n */\nexport function getEmptySubnetInfo(): ReteSubnetInfo {\n  let x: ReteSubnetInfo = {\n    cidr: \"\",\n    Input: [],\n    Output: [],\n    name: \"\",\n    type: EnumNodeType.Subnet,\n    version: \"\",\n    isDhcp: ''\n  };\n  return x;\n}\n\n\n/**\n * Classe che rappresenta il nodo (rete-node) Subnet all'interno del canvas/editor di rete.\n */\nexport class SubnetNode extends Component implements AngularComponent {\n\n  data: AngularComponentData;\n\n  /**\n   * Costruttore di SubnetNode\n   */\n  constructor() {\n    super(EnumNodeType.Subnet);\n    this.data.render = 'angular';\n    this.data.component = SubnetComponent;\n  }\n\n  /**\n   * Funzione richiamata in fase di costruzione del nodo (rete-node).\n   * Controlla se bisogna instanziare il nodo oppure crearne uno nuovo:\n   * - In fase di design, il nodo non ha dati, per cui bisogna crearne uno nuovo.\n   * - In fase di visualizing, il nodo presenta dei dati, per cui va valorizzato il nodo.\n   * @param node \n   */\n  async builder(node: Node) {\n    if (Object.keys(node.data).length === 0)\n      this.createNewNode(node)\n    else\n      this.valorizeNode(node)\n  }\n\n  /**\n   * Funzione che ha come scopo creare un nodo (rete-node).\n   * In particolare gli assegna una struttura vuota.\n   * @param node \n   */\n  createNewNode(node: Node) {\n    let t = getEmptySubnetInfo()\n    node.data = {\n      ...node.data,\n      ...t\n    }\n  }\n\n  /**\n   * Funzione che ha come scopo la valorizzazione del nodo (rete-node) con i dati in suo possesso.\n   * In quasta fase avviene anche la fase iniziale di instanziamento delle porte input/output.\n   * @param node \n   */\n  valorizeNode(node: Node) {\n    var i: any = node.data['Input'];\n    var o: any = node.data['Output'];\n    var il = i.length;\n    var ol = o.length;\n\n    for (let index = 0; index \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/ReteTheaterComposerSettings.html":{"url":"classes/ReteTheaterComposerSettings.html","title":"class - ReteTheaterComposerSettings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  ReteTheaterComposerSettings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/rete-settings/settings/editor-settings/reteTheaterComposerSettings.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che ha lo scopo di eseguire i dovuti settaggi all'ambiente di rete.\nQuesta riguarda la parte di ReteTheaterComposer\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                components\n                            \n                            \n                                    Public\n                                container\n                            \n                            \n                                    Public\n                                editor\n                            \n                            \n                                    Public\n                                engine\n                            \n                            \n                                    Public\n                                nodeSelected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                editorUSE\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Costruttore\n        \n            \n                \n                    \nconstructor(container: any, edito: NodeEditor, components: any, engine: Engine)\n                    \n                \n                        \n                            \n                                Definito in src/app/rete-settings/settings/editor-settings/reteTheaterComposerSettings.ts:21\n                            \n                        \n\n                \n                    \n                            Costruttore di ReteTheaterComposerSettings\n\n                            \n                                    Parametri :\n                                    \n                                        \n                                            \n                                                Nome\n                                                    Tipo\n                                                Opzionale\n                                            \n                                        \n                                        \n                                                \n                                                        container\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        edito\n                                                  \n                                                        \n                                                                    NodeEditor\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        components\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        engine\n                                                  \n                                                        \n                                                                    Engine\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        components\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     null\n\n                    \n                \n                \n                    \n                        Valore predefinito : null\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/settings/editor-settings/reteTheaterComposerSettings.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        container\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     null\n\n                    \n                \n                \n                    \n                        Valore predefinito : null\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/settings/editor-settings/reteTheaterComposerSettings.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        editor\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     NodeEditor\n\n                    \n                \n                \n                    \n                        Valore predefinito : null\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/settings/editor-settings/reteTheaterComposerSettings.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        engine\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     Engine\n\n                    \n                \n                \n                    \n                        Valore predefinito : null\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/settings/editor-settings/reteTheaterComposerSettings.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        nodeSelected\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         any\n\n                    \n                \n                \n                    \n                        Valore predefinito : {}\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/settings/editor-settings/reteTheaterComposerSettings.ts:21\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        editorUSE\n                        \n                    \n                \n            \n            \n                \neditorUSE()\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/settings/editor-settings/reteTheaterComposerSettings.ts:42\n                \n            \n\n\n            \n                \n                    Funzione che, una volta richiamata, setta l'editor i dovuti plugin.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Engine, NodeEditor, Node, Output as or, Input as ir } from \"rete\";\nimport ConnectionPlugin from 'rete-connection-plugin';\nimport ContextMenuPlugin from 'rete-context-menu-plugin';\nimport { AngularRenderPlugin } from 'rete-angular-render-plugin';\nimport AreaPlugin from 'rete-area-plugin';\nimport MinimapPlugin from 'rete-minimap-plugin';\nimport AutoArrangePlugin from 'rete-auto-arrange-plugin'\nimport Vue from 'vue/dist/vue.esm';\nimport { _Socket } from '../../sockets/socket';\nimport HistoryPlugin from 'rete-history-plugin';\n\n/**\n * Classe che ha lo scopo di eseguire i dovuti settaggi all'ambiente di rete.\n * Questa riguarda la parte di ReteTheaterComposer\n */\nexport class ReteTheaterComposerSettings {\n    public container = null;\n    public editor: NodeEditor = null;\n    public components = null;\n    public engine: Engine = null;\n    public nodeSelected: any = {};\n\n\n    /**\n     * Costruttore di ReteTheaterComposerSettings\n     * @param container \n     * @param edito \n     * @param components \n     * @param engine \n     */\n    constructor(container: any, edito: NodeEditor, components: any, engine: Engine) {\n        this.container = container;\n        this.editor = edito;\n        this.components = components;\n        this.engine = engine;\n    }\n\n\n    /**\n     * Funzione che, una volta richiamata, setta l'editor i dovuti plugin.\n     */\n    editorUSE() {\n\n        this.editor.use(ConnectionPlugin);\n\n        this.editor.use(AngularRenderPlugin)//, { component: MyNodeComponent });\n\n        this.editor.use(MinimapPlugin, { Vue });\n\n        this.editor.use(HistoryPlugin, { keyboard: true });\n\n        this.editor.use(ContextMenuPlugin, {\n            searchBar: false,\n            components: {},\n            items: {\n                \"Undo\": () => {\n                    this.editor.trigger(\"undo\");\n                },\n                \"Redo\": () => {\n                    this.editor.trigger(\"redo\");\n                },\n                \"Show all nodes\": () => {\n                    AreaPlugin.zoomAt(this.editor, this.editor.nodes);\n                },\n                \"Editor\": () => {\n                    console.log(JSON.stringify(this.editor.toJSON()));\n                },\n                \"Nodes\": () => {\n                    var x = this.editor.toJSON();\n                    var z = [];\n                    for (let key in x) {\n                        let value = x[key];\n                        z.push(value);\n                    }\n                    return z;\n                }\n            },\n            allocate(component: any) {\n                return null;\n            },\n            // rename(component) {\n            //   return component.name;\n            // }\n        });\n\n        this.editor.use(AreaPlugin, {\n            background: false, //righe\n            snap: false,\n            scaleExtent: { min: 0.1, max: 1 },\n            translateExtent: { width: 5000, height: 4000 }\n        })\n\n        this.editor.use(AutoArrangePlugin, {\n            // snap: {size: 64, dynamic: true},\n            margin: { x: 400, y: 100 },\n            depth: 0,\n            vertical: false,\n        })\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{"url":"classes/ReteTheaterInternalServiceModuleInstanceInfo.html","title":"class - ReteTheaterInternalServiceModuleInstanceInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  ReteTheaterInternalServiceModuleInstanceInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/rete-settings/nodes/rete-modules/theaterInternalServiceModuleInstance/theaterInternalServiceModuleInstanceNode.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe utilizzata per indicare il tipo di modulo TheaterInternalServiceModuleInstanceNode.\nSee {reteBasicModuleInfo}\n\n            \n\n            \n                Extends\n            \n            \n                        reteBasicModuleInfo\n            \n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                type\n                            \n                            \n                                host_number\n                            \n                            \n                                Input\n                            \n                            \n                                name\n                            \n                            \n                                network_number\n                            \n                            \n                                Output\n                            \n                            \n                                subnet_number\n                            \n                            \n                                area\n                            \n                            \n                                consumer_interfaces_link\n                            \n                            \n                                description\n                            \n                            \n                                module\n                            \n                            \n                                sequence\n                            \n                            \n                                version\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         EnumModuleType.TheaterInternalServiceModuleInstance\n\n                    \n                \n                        \n                            \n                                ereditato da         reteBasicModuleInfo\n\n                            \n                        \n                    \n                        \n                                Definito in         reteBasicModuleInfo:15\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        host_number\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         number\n\n                    \n                \n                        \n                            \n                                ereditato da         reteBasicModuleInfo\n\n                            \n                        \n                    \n                        \n                                Definito in         reteBasicModuleInfo:23\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Input\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string[]\n\n                    \n                \n                        \n                            \n                                ereditato da         reteBasicModuleInfo\n\n                            \n                        \n                    \n                        \n                                Definito in         reteBasicModuleInfo:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         reteBasicModuleInfo\n\n                            \n                        \n                    \n                        \n                                Definito in         reteBasicModuleInfo:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        network_number\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         number\n\n                    \n                \n                        \n                            \n                                ereditato da         reteBasicModuleInfo\n\n                            \n                        \n                    \n                        \n                                Definito in         reteBasicModuleInfo:24\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Output\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string[]\n\n                    \n                \n                        \n                            \n                                ereditato da         reteBasicModuleInfo\n\n                            \n                        \n                    \n                        \n                                Definito in         reteBasicModuleInfo:21\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subnet_number\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         number\n\n                    \n                \n                        \n                            \n                                ereditato da         reteBasicModuleInfo\n\n                            \n                        \n                    \n                        \n                                Definito in         reteBasicModuleInfo:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        area\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleInstancePropertiesDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleInstancePropertiesDTO:166\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        consumer_interfaces_link\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ConsumerInterfaceLinkDTO[]\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleInstancePropertiesDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleInstancePropertiesDTO:171\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleInstancePropertiesDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleInstancePropertiesDTO:167\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleInstancePropertiesDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleInstancePropertiesDTO:168\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sequence\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleInstancePropertiesDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleInstancePropertiesDTO:170\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleInstancePropertiesDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleInstancePropertiesDTO:169\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Component, Input, Output, Node } from 'rete';\nimport { _Socket } from '../../../sockets/socket';\nimport { _Control } from '../../../controls/control';\nimport { AngularComponent, AngularComponentData } from 'rete-angular-render-plugin';\nimport { NodeData, WorkerInputs, WorkerOutputs } from 'rete/types/core/data';\nimport { TheaterInternalServiceModuleInstanceComponent } from './theaterInternalServiceModuleInstance.component';\nimport {  reteBasicModuleInfo } from '../../reteBasic';\nimport { EnumModuleType } from 'src/app/models/appType';\n\n/**\n * Classe utilizzata per indicare il tipo di modulo TheaterInternalServiceModuleInstanceNode.\n * @see {reteBasicModuleInfo}\n */\nexport class ReteTheaterInternalServiceModuleInstanceInfo extends reteBasicModuleInfo {\n  type: EnumModuleType.TheaterInternalServiceModuleInstance;\n}\n\n/**\n * Funzione dichiarata in TheaterInternalServiceModuleInstanceNode. \n * Essa ha lo scopo di generare una struttura dati empty.\n * Viene utilizzata in per instanziare un nodo del tipo di ritorno indicato senza dati.\n * @returns {ReteTheaterInternalServiceModuleInstanceInfo}\n */\nexport function getEmptyReteTheaterInternalServiceModuleInstanceInfo(): ReteTheaterInternalServiceModuleInstanceInfo {\n  let x: ReteTheaterInternalServiceModuleInstanceInfo = {\n    Input: [],\n    Output: [],\n    name: \"\",\n    description: \"\",\n    type: EnumModuleType.TheaterInternalServiceModuleInstance,\n    host_number: 0,\n    network_number: 0,\n    subnet_number: 0,\n    area: '',\n    module: '',\n    version: '',\n    sequence: '',\n    consumer_interfaces_link: []\n  };\n  return x;\n}\n\n\n/**\n * Classe che rappresenta il modulo (rete-node) TheaterInternalServiceModuleInstance all'interno del canvas/editor di rete.\n */\nexport class TheaterInternalServiceModuleInstanceNode extends Component implements AngularComponent {\n\n  data: AngularComponentData;\n\n    /**\n   * Costruttore di TheaterInternalServiceModuleInstanceNode\n   */\n  constructor() {\n    super(EnumModuleType.TheaterInternalServiceModuleInstance);\n    this.data.render = 'angular';\n    this.data.component = TheaterInternalServiceModuleInstanceComponent;\n  }\n\n  /**\n   * Funzione richiamata in fase di costruzione del nodo (rete-node).\n   * Controlla se bisogna instanziare il nodo oppure crearne uno nuovo:\n   * - In fase di design, il nodo non ha dati, per cui bisogna crearne uno nuovo.\n   * - In fase di visualizing, il nodo presenta dei dati, per cui va valorizzato il nodo.\n   * @param node \n   */\n  async builder(node: Node) {\n    if (Object.keys(node.data).length === 0)\n      this.createNewNode(node)\n    else\n      this.valorizeNode(node)\n  }\n\n  /**\n   * Funzione che ha come scopo creare un nodo (rete-node).\n   * In particolare gli assegna una struttura vuota.\n   * @param node \n   */\n  createNewNode(node: Node) {\n    let t = getEmptyReteTheaterInternalServiceModuleInstanceInfo()\n    node.data = {\n      ...node.data,\n      ...t\n    }\n  }\n\n  /**\n   * Funzione che ha come scopo la valorizzazione del nodo (rete-node) con i dati in suo possesso.\n   * In quasta fase avviene anche la fase iniziale di instanziamento delle porte input/output.\n   * @param node \n   */\n  valorizeNode(node: Node) {\n    var i: any = node.data['Input'];\n    var o: any = node.data['Output'];\n    var il = i.length;\n    var ol = o.length;\n\n    for (let index = 0; index \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/ReteTheaterModuleInstanceInfo.html":{"url":"classes/ReteTheaterModuleInstanceInfo.html","title":"class - ReteTheaterModuleInstanceInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  ReteTheaterModuleInstanceInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/rete-settings/nodes/rete-modules/theaterModuleInstance/theaterModuleInstanceNode.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe utilizzata per indicare il tipo di modulo MirroringModuleInstanceNode.\nSee {reteBasicModuleInfo}\n\n            \n\n            \n                Extends\n            \n            \n                        reteBasicModuleInfo\n            \n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                type\n                            \n                            \n                                host_number\n                            \n                            \n                                Input\n                            \n                            \n                                name\n                            \n                            \n                                network_number\n                            \n                            \n                                Output\n                            \n                            \n                                subnet_number\n                            \n                            \n                                area\n                            \n                            \n                                consumer_interfaces_link\n                            \n                            \n                                description\n                            \n                            \n                                module\n                            \n                            \n                                sequence\n                            \n                            \n                                version\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         EnumModuleType.TheaterModuleInstance\n\n                    \n                \n                        \n                            \n                                ereditato da         reteBasicModuleInfo\n\n                            \n                        \n                    \n                        \n                                Definito in         reteBasicModuleInfo:15\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        host_number\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         number\n\n                    \n                \n                        \n                            \n                                ereditato da         reteBasicModuleInfo\n\n                            \n                        \n                    \n                        \n                                Definito in         reteBasicModuleInfo:23\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Input\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string[]\n\n                    \n                \n                        \n                            \n                                ereditato da         reteBasicModuleInfo\n\n                            \n                        \n                    \n                        \n                                Definito in         reteBasicModuleInfo:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         reteBasicModuleInfo\n\n                            \n                        \n                    \n                        \n                                Definito in         reteBasicModuleInfo:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        network_number\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         number\n\n                    \n                \n                        \n                            \n                                ereditato da         reteBasicModuleInfo\n\n                            \n                        \n                    \n                        \n                                Definito in         reteBasicModuleInfo:24\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Output\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string[]\n\n                    \n                \n                        \n                            \n                                ereditato da         reteBasicModuleInfo\n\n                            \n                        \n                    \n                        \n                                Definito in         reteBasicModuleInfo:21\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subnet_number\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         number\n\n                    \n                \n                        \n                            \n                                ereditato da         reteBasicModuleInfo\n\n                            \n                        \n                    \n                        \n                                Definito in         reteBasicModuleInfo:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        area\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleInstancePropertiesDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleInstancePropertiesDTO:166\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        consumer_interfaces_link\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ConsumerInterfaceLinkDTO[]\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleInstancePropertiesDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleInstancePropertiesDTO:171\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleInstancePropertiesDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleInstancePropertiesDTO:167\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleInstancePropertiesDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleInstancePropertiesDTO:168\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sequence\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleInstancePropertiesDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleInstancePropertiesDTO:170\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleInstancePropertiesDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleInstancePropertiesDTO:169\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Component, Input, Output, Node } from 'rete';\nimport { _Socket } from '../../../sockets/socket';\nimport { _Control } from '../../../controls/control';\nimport { AngularComponent, AngularComponentData } from 'rete-angular-render-plugin';\nimport { NodeData, WorkerInputs, WorkerOutputs } from 'rete/types/core/data';\nimport { TheaterModuleInstanceComponent } from './theaterModuleInstance.component';\nimport {  reteBasicModuleInfo } from '../../reteBasic';\nimport { EnumModuleType } from 'src/app/models/appType';\n\n/**\n * Classe utilizzata per indicare il tipo di modulo MirroringModuleInstanceNode.\n * @see {reteBasicModuleInfo}\n */\nexport class ReteTheaterModuleInstanceInfo extends reteBasicModuleInfo {\n  type: EnumModuleType.TheaterModuleInstance;\n}\n\n/**\n * Funzione dichiarata in TheaterModuleInstanceNode. \n * Essa ha lo scopo di generare una struttura dati empty.\n * Viene utilizzata in per instanziare un nodo del tipo di ritorno indicato senza dati.\n * @returns {ReteTheaterModuleInstanceInfo}\n */\nexport function getEmptyReteTheaterModuleInstanceInfo(): ReteTheaterModuleInstanceInfo {\n  let x: ReteTheaterModuleInstanceInfo = {\n    Input: [],\n    Output: [],\n    description: \"\",\n    name: \"\",\n    type: EnumModuleType.TheaterModuleInstance,\n    host_number: 0,\n    network_number: 0,\n    subnet_number: 0,\n    area: '',\n    module: '',\n    version: '',\n    sequence: '',\n    consumer_interfaces_link: []\n  };\n  return x;\n\n}\n\n/**\n * Classe che rappresenta il modulo (rete-node) TheaterModuleInstance all'interno del canvas/editor di rete.\n */\nexport class TheaterModuleInstanceNode extends Component implements AngularComponent {\n\n  data: AngularComponentData;\n\n    /**\n   * Costruttore di MirroringModuleInstanceNode\n   */\n  constructor() {\n    super(EnumModuleType.TheaterModuleInstance);\n    this.data.render = 'angular';\n    this.data.component = TheaterModuleInstanceComponent;\n  }\n\n    /**\n   * Funzione richiamata in fase di costruzione del nodo (rete-node).\n   * Controlla se bisogna instanziare il nodo oppure crearne uno nuovo:\n   * - In fase di design, il nodo non ha dati, per cui bisogna crearne uno nuovo.\n   * - In fase di visualizing, il nodo presenta dei dati, per cui va valorizzato il nodo.\n   * @param node \n   */\n  async builder(node: Node) {\n    if (Object.keys(node.data).length === 0)\n      this.createNewNode(node)\n    else\n      this.valorizeNode(node)\n  }\n\n  /**\n   * Funzione che ha come scopo creare un nodo (rete-node).\n   * In particolare gli assegna una struttura vuota.\n   * @param node \n   */\n  createNewNode(node: Node) {\n    let t = getEmptyReteTheaterModuleInstanceInfo()\n    node.data = {\n      ...node.data,\n      ...t\n    }\n  }\n\n  /**\n   * Funzione che ha come scopo la valorizzazione del nodo (rete-node) con i dati in suo possesso.\n   * In quasta fase avviene anche la fase iniziale di instanziamento delle porte input/output.\n   * @param node \n   */\n  valorizeNode(node: Node) {\n    var i: any = node.data['Input'];\n    var o: any = node.data['Output'];\n    var il = i.length;\n    var ol = o.length;\n\n    for (let index = 0; index \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/ReteTheaterVisualizerSettings.html":{"url":"classes/ReteTheaterVisualizerSettings.html","title":"class - ReteTheaterVisualizerSettings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  ReteTheaterVisualizerSettings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/rete-settings/settings/editor-settings/reteTheaterVisualizerSettings.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che ha lo scopo di eseguire i dovuti settaggi all'ambiente di rete.\nQuesta riguarda la parte di ReteTheaterVisualizer\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                components\n                            \n                            \n                                container\n                            \n                            \n                                editor\n                            \n                            \n                                engine\n                            \n                            \n                                nodeSelected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                editorUSE\n                            \n                            \n                                editorUSE_simple\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Costruttore\n        \n            \n                \n                    \nconstructor(container: any, edito: NodeEditor, components: any, engine: Engine)\n                    \n                \n                        \n                            \n                                Definito in src/app/rete-settings/settings/editor-settings/reteTheaterVisualizerSettings.ts:22\n                            \n                        \n\n                \n                    \n                            Costruttore di ReteTheaterVisualizerSettings\n\n                            \n                                    Parametri :\n                                    \n                                        \n                                            \n                                                Nome\n                                                    Tipo\n                                                Opzionale\n                                            \n                                        \n                                        \n                                                \n                                                        container\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        edito\n                                                  \n                                                        \n                                                                    NodeEditor\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        components\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        engine\n                                                  \n                                                        \n                                                                    Engine\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        components\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     null\n\n                    \n                \n                \n                    \n                        Valore predefinito : null\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/settings/editor-settings/reteTheaterVisualizerSettings.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        container\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     null\n\n                    \n                \n                \n                    \n                        Valore predefinito : null\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/settings/editor-settings/reteTheaterVisualizerSettings.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editor\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     NodeEditor\n\n                    \n                \n                \n                    \n                        Valore predefinito : null\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/settings/editor-settings/reteTheaterVisualizerSettings.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        engine\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     Engine\n\n                    \n                \n                \n                    \n                        Valore predefinito : null\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/settings/editor-settings/reteTheaterVisualizerSettings.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nodeSelected\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         any\n\n                    \n                \n                \n                    \n                        Valore predefinito : {}\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/settings/editor-settings/reteTheaterVisualizerSettings.ts:22\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        editorUSE\n                        \n                    \n                \n            \n            \n                \neditorUSE()\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/settings/editor-settings/reteTheaterVisualizerSettings.ts:42\n                \n            \n\n\n            \n                \n                    Funzione che, una volta richiamata, setta l'editor i dovuti plugin.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editorUSE_simple\n                        \n                    \n                \n            \n            \n                \neditorUSE_simple()\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/settings/editor-settings/reteTheaterVisualizerSettings.ts:108\n                \n            \n\n\n            \n                \n                    Funzione che, una volta richiamata, setta l'editor i dovuti plugin.\nQuesta è richiamata quando si renderizza l'editor in modalità simple.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Engine, NodeEditor, Node, Output as or, Input as ir } from \"rete\";\nimport ConnectionPlugin from 'rete-connection-plugin';\nimport ContextMenuPlugin from 'rete-context-menu-plugin';\nimport { AngularRenderPlugin } from 'rete-angular-render-plugin';\nimport AreaPlugin from 'rete-area-plugin';\nimport MinimapPlugin from 'rete-minimap-plugin';\nimport AutoArrangePlugin from 'rete-auto-arrange-plugin'\nimport Vue from 'vue/dist/vue.esm';\nimport { _Socket } from '../../sockets/socket';\nimport HistoryPlugin from 'rete-history-plugin';\n\n\n/**\n * Classe che ha lo scopo di eseguire i dovuti settaggi all'ambiente di rete.\n * Questa riguarda la parte di ReteTheaterVisualizer\n */\nexport class ReteTheaterVisualizerSettings {\n  container = null;\n  editor: NodeEditor = null;\n  components = null;\n  engine: Engine = null;\n  nodeSelected: any = {};\n\n\n  /**\n   * Costruttore di ReteTheaterVisualizerSettings\n   * @param container \n   * @param edito \n   * @param components \n   * @param engine \n   */\n  constructor(container: any, edito: NodeEditor, components: any, engine: Engine) {\n    this.container = container;\n    this.editor = edito;\n    this.components = components;\n    this.engine = engine;\n  }\n\n  /**\n   * Funzione che, una volta richiamata, setta l'editor i dovuti plugin.\n   */\n  editorUSE() {\n\n    this.editor.use(ConnectionPlugin);\n\n    this.editor.use(AngularRenderPlugin)//, { component: MyNodeComponent });\n\n    this.editor.use(MinimapPlugin, { Vue });\n\n    this.editor.use(HistoryPlugin, { keyboard: true });\n\n    this.editor.use(ContextMenuPlugin, {\n      searchBar: false,\n      components: {},\n      items: {\n        \"Undo\": () => {\n          this.editor.trigger(\"undo\");\n        },\n        \"Redo\": () => {\n          this.editor.trigger(\"redo\");\n        },\n        \"Show all nodes\": () => {\n          AreaPlugin.zoomAt(this.editor, this.editor.nodes);\n        },\n        \"Editor\": () => {\n          console.log(JSON.stringify(this.editor.toJSON()));\n        },\n        \"Nodes\": () => {\n          var x = this.editor.toJSON();\n          var z = [];\n          for (let key in x) {\n            let value = x[key];\n            z.push(value);\n          }\n          return z;\n        }\n      },\n      allocate(component: any) {\n        return null;\n      },\n      // rename(component) {\n      //   return component.name;\n      // }\n    });\n\n    this.editor.use(AreaPlugin, {\n      background: false, //righe\n      snap: false,\n      scaleExtent: { min: 0.1, max: 1 },\n      translateExtent: { width: 5000, height: 4000 }\n    })\n\n    this.editor.use(AutoArrangePlugin, {\n      // snap: {size: 64, dynamic: true},\n      margin: { x: 400, y: 100 },\n      depth: 0,\n      vertical: false,\n    })\n\n\n  }\n\n\n  /**\n   * Funzione che, una volta richiamata, setta l'editor i dovuti plugin.\n   * Questa è richiamata quando si renderizza l'editor in modalità simple.\n   */\n  editorUSE_simple() {\n\n    this.editor.use(ConnectionPlugin);\n\n    this.editor.use(AngularRenderPlugin)//, { component: MyNodeComponent });\n\n    this.editor.use(ContextMenuPlugin, {\n      searchBar: false,\n      components: {},\n      items: {\n        \"Show all nodes\": () => {\n          AreaPlugin.zoomAt(this.editor, this.editor.nodes);\n        },\n        \"Editor\": () => {\n          console.log(JSON.stringify(this.editor.toJSON()));\n        },\n        \"Nodes\": () => {\n          var x = this.editor.toJSON();\n          var z = [];\n          for (let key in x) {\n            let value = x[key];\n            z.push(value);\n          }\n          return z;\n        }\n      },\n      allocate(component: any) {\n        return null;\n      },\n      // rename(component) {\n      //   return component.name;\n      // }\n    });\n\n    this.editor.use(AreaPlugin, {\n      background: false, //righe\n      snap: false,\n      scaleExtent: { min: 0.1, max: 1 },\n      translateExtent: { width: 5000, height: 4000 }\n    });\n\n    this.editor.use(AutoArrangePlugin, {\n      margin: { x: 400, y: 200 },\n      depth: 1,\n      vertical: false,\n    });\n\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/SelectOption.html":{"url":"classes/SelectOption.html","title":"class - SelectOption","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  SelectOption\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/data-input/dataInputType.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Tipo usato per le selezioni (multiselect option).\nSee {DataInputComponet}\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                    Opzionale\n                                other\n                            \n                            \n                                text\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        other\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         any\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/data-input/dataInputType.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        text\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/data-input/dataInputType.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/data-input/dataInputType.ts:53\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class DataInputElement{\n    element: Array;\n}\n\n/**\n * Tipo di dato Input contenente variabili generali.\n * @see {DataInputComponet}\n */\nexport class DataInput{\n    id: string;\n    text?: string;\n    type: \"textarea\" | \"text\" | \"selection\" | \"checkbox\";\n    data_prepended?: string;\n    data_appended?: string;\n    required: boolean;\n}\n/**\n * Tipo input text base/area.\n * Estende DataInput.\n  * @see {DataInputComponet}\n */\nexport class DataInputText extends DataInput{\n    placeholder?: string;\n}\n/**\n * Tipo input selection.\n * Estende DataInput.\n  * @see {DataInputComponet}\n */\nexport class DataInputSelection extends DataInput{\n    multiple?: boolean;\n    selected_number: number;\n    selection: SelectOption[];\n}\n/**\n * Tipo input check (toggle).\n * Estende DataInput.\n * @see {DataInputComponet}\n */\nexport class DataInputCheck  extends DataInput{\n    checked?: boolean;\n}\n\n/**\n * Tipo usato per le selezioni (multiselect option).\n  * @see {DataInputComponet}\n */\nexport class SelectOption{\n    value: string;\n    text: string;\n    other?: any;\n}\n\n/**\n * Tipo di ritorno della componente DataInputReturned.\n  * @see {DataInputComponet}\n */\nexport class DataInputReturned{\n    element: { [key:string]: SingleDataInputReturned};\n    isValid: boolean;\n    exitStatus?: 'submitted' | 'cancel' | 'error';\n}\n/**\n * Singolo elemento dato in ritorno al submit.\n  * @see {DataInputComponet}\n */\nexport class SingleDataInputReturned{\n    id: string;\n    text: string;\n    type: string;\n    value: any;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/SimpleAreaDTO.html":{"url":"classes/SimpleAreaDTO.html","title":"class - SimpleAreaDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  SimpleAreaDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsDTO/moduleDTO.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano l'area di appartenenza di un modulo (simple).\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                area\n                            \n                            \n                                description\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        area\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:191\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:192\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PageableDTO, SortDTO } from './elementDTO';\nimport { NetworkDTO } from './networkDTO';\nimport { TheaterDTO } from './theaterDTO';\n\n/**\n * Classe che contiene gli attributi che indicano l'insieme dei moduli ritornati dal teatro.\n */\nexport class ModuleListDTO {\n    content: SimpleModuleDTO[]\n    pageable: PageableDTO\n    last: boolean\n    totalPages: string | number\n    totalElements: string | number\n    size: string | number\n    number: string | number\n    sort: SortDTO\n    numberOfElements: string | number\n    first: boolean\n    empty: boolean\n}\n\n/**\n * Classe che contiene gli attributi che indica il catalogo del tipo.\n */\nexport class TypesCatalogueDTO {\n    group: string\n    id: string | number\n    parentId: {}\n    value: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano la classificazione del modulo.\n */\nexport class ModuleClassificationDTO {\n    blueprintType: string\n    category: string\n    expectedInstanceType: string\n    id: string | number\n    mcClass: string\n    type: string\n    uuid: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano un parametro generico.\n */\nexport class GenericParameterDTO {\n    type: string\n    default: string\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano i parametri di configurazione di un modulto.\n */\nexport class ConfigurationTemplateDTO {\n    anchor_parameters: { [name: string]: GenericParameterDTO | string }\n    instance_parameters: { [name: string]: GenericParameterDTO }\n    structural_parameters: { [name: string]: GenericParameterDTO }\n    fixed_parameters: { [name: string]: GenericParameterDTO }\n    control_parameters: { [name: string]: GenericParameterDTO }\n    infrastructure_parameters: { [name: string]: GenericParameterDTO }\n    module: string\n    description: string\n    category: string\n    version: string | number\n    platform: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano la modalità di un modulo.\n */\nexport class ModuleModeDTO {\n    code: string\n    id: string | number\n    name: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano lo stato di un modulo.\n */\nexport class ModuleStatusDTO {\n    descriptionCode: string\n    id: string | number\n    name: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le statitistiche di un modulo.\n */\nexport class StatisticItemDTO {\n    error: string | number\n    updated: string | number\n    inserted: string | number\n}\n\n/**\n * Classe che contiene gli attributi che indicano il modulo (simple - in dipendenza del teatro).\n */\nexport class SimpleModuleDTO {\n    createdBy: string\n    createdDate: string\n    description: string\n    id: string | number\n    isLocked: boolean\n    lastModifiedBy: string\n    lastModifiedDate: string\n    lockAcquiredTimestamp: string\n    lockLastUserAcquiring: string\n    lockReleasedTimestamp: string\n    name: string\n    status: ModuleStatusDTO\n    type?: string | any\n    uuid: string\n    version: string | number\n}\n\n/**\n * Classe che contiene gli attributi che indicano il modulo (complex - ritorato da call appostita).\n * @extends {SimpleModuleDTO}\n */\nexport class ModuleDTO extends SimpleModuleDTO {\n    attachments: string[]\n    author: string\n    capabilities: { [name: string]: string }\n    catalog1: TypesCatalogueDTO\n    catalog2: TypesCatalogueDTO\n    catalog3: TypesCatalogueDTO\n    classification: ModuleClassificationDTO\n    configurationTemplate: ConfigurationTemplateDTO\n    detailProperties: {}\n    input: { [name: string]: string }\n    output: { [name: string]: string }\n    mode: ModuleModeDTO\n    statistics: { [name: string]: StatisticItemDTO | string | number }\n    tags: []\n}\n\n/**\n * Classe che contiene gli attributi che indicano le interfacce esposte da un modulo.\n */\nexport class ModuleNetworkInterfaceDTO {\n    id: string | number\n    label: string\n    module: ModuleDTO\n    network: NetworkDTO\n    nodeName: string\n    type: string\n    uuid: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le connessioni interfaccia-modulo.\n */\nexport class ConsumerInterfaceLinkDTO {\n    local_interface: string\n    module_instance: string\n    remote_interface: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà dell'istanza di un modulo all'interno del node_templates.\n */\nexport class ModuleInstancePropertiesDTO {\n    area: string\n    description: string\n    module: string\n    version: string | number\n    sequence: string | number\n    consumer_interfaces_link: ConsumerInterfaceLinkDTO[]\n}\n\n\n/**\n * Classe che contiene gli attributi che indicano l'area di appartenenza di un modulo (complex).\n */\nexport class AreaDTO {\n    id: string | number;\n    uuid: string;\n    name: string;\n    description: string;\n    theater: TheaterDTO;\n    deleted: boolean | string;\n}\n\n/**\n * Classe che contiene gli attributi che indicano l'area di appartenenza di un modulo (simple).\n */\nexport class SimpleAreaDTO {\n    area: string\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà dell'istanza di un teatro all'interno del node_templates.\n */\nexport class TheaterInstancePropertiesDTO {\n    mode: string\n    tags: TagTIP[]\n    areas: SimpleAreaDTO[]\n    author: string\n    version: string | number\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano un tag.\n */\nexport class TagTIP{\n    tag: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano in via generale le caratteristiche di un elemento che deve essere presente nel node_templates.\n */\nexport class ElementIntoTheaterDTO {  // goes into map in blueprint [name:string]: Module...\n    properties: ModuleInstancePropertiesDTO | TheaterInstancePropertiesDTO\n    type: string\n}\n\n\n/**\n * Classe che contiene gli attributi che indicano le caratteristiche di un teatro presente nel node_templates.\n */\nexport class ModuleInstanceDTO {\n    properties: ModuleInstancePropertiesDTO\n    type: string\n}\n/**\n * Classe che contiene gli attributi che indicano le caratteristiche di un modulo presente nel node_templates.\n */\nexport class TheaterInstanceDTO {\n    properties: TheaterInstancePropertiesDTO\n    type: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/SimpleModuleApplication.html":{"url":"classes/SimpleModuleApplication.html","title":"class - SimpleModuleApplication","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  SimpleModuleApplication\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsApplication/applicationModels.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe contenente gli attributi utilizzati per le operazioni che coinvolgono i moduli.\nps. Questa struttura è prettamente utilizzata nella chiamata che prende tutti i moduli del teatro.\n\n            \n\n            \n                Extends\n            \n            \n                        SimpleModuleDTO\n            \n\n            \n                Implementa\n            \n            \n                            CommonModule\n            \n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                host_number\n                            \n                            \n                                hosts\n                            \n                            \n                                interfaces\n                            \n                            \n                                network_number\n                            \n                            \n                                subnet_number\n                            \n                            \n                                topology\n                            \n                            \n                                createdBy\n                            \n                            \n                                createdDate\n                            \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                isLocked\n                            \n                            \n                                lastModifiedBy\n                            \n                            \n                                lastModifiedDate\n                            \n                            \n                                lockAcquiredTimestamp\n                            \n                            \n                                lockLastUserAcquiring\n                            \n                            \n                                lockReleasedTimestamp\n                            \n                            \n                                name\n                            \n                            \n                                status\n                            \n                            \n                                    Opzionale\n                                type\n                            \n                            \n                                uuid\n                            \n                            \n                                version\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        host_number\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsApplication/applicationModels.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hosts\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     HostModuleDTO[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsApplication/applicationModels.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        interfaces\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ModuleNetworkInterfaceDTO[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsApplication/applicationModels.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        network_number\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsApplication/applicationModels.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subnet_number\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsApplication/applicationModels.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        topology\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         NodeTopologyElement\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsApplication/applicationModels.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:102\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdDate\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:103\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:104\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:105\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLocked\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:106\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastModifiedBy\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:107\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastModifiedDate\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:108\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lockAcquiredTimestamp\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:109\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lockLastUserAcquiring\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:110\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lockReleasedTimestamp\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:111\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:112\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ModuleStatusDTO\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:113\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | any\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:114\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uuid\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:115\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:116\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ReteHostInfo } from \"src/app/rete-settings/nodes/rete-nodes/host/hostNode\";\nimport { ReteNetworkInfo } from \"src/app/rete-settings/nodes/rete-nodes/network/networkNode\";\nimport { ReteSubnetInfo } from \"src/app/rete-settings/nodes/rete-nodes/subnet/subnetNode\";\nimport { ReteMirroringModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/mirroringModuleInstance/mirroringModuleInstanceNode\";\nimport { ReteTheaterInternalServiceModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/theaterInternalServiceModuleInstance/theaterInternalServiceModuleInstanceNode\";\nimport { ReteTheaterModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/theaterModuleInstance/theaterModuleInstanceNode\";\nimport { FlavorBasicInfo } from \"../modelsDTO/falvorDTO\";\nimport { HostModuleDTO } from \"../modelsDTO/hostDTO\";\nimport { ModuleNetworkInterfaceDTO, ModuleInstancePropertiesDTO, SimpleModuleDTO, TheaterInstancePropertiesDTO, ModuleInstanceDTO, ModuleDTO, SimpleAreaDTO, AreaDTO } from \"../modelsDTO/moduleDTO\";\nimport { TheaterDTO } from \"../modelsDTO/theaterDTO\";\n\n\nexport interface CommonModule {\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n}\n\n\n/**\n * Classe contenente gli attributi utilizzati per le operazioni che coinvolgono i moduli.\n * ps. Questa struttura è prettamente utilizzata nella chiamata relativa al singolo modulo.\n */\nexport class ModuleApplication extends ModuleDTO implements CommonModule {\n    imports: string[] // perchè nell'export yaml è previsto\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n    // serve per validare il json risultante dal parsing del theaterApplication\n    validateObject?: string = \"module\";\n}\n// PER IMPLEMENTAZIONI FUTURE, PER COERENZA, PRENDERE DIRETTAMENTE I SINGOLI NODI DALLA CHIAMATA ESCLUSIVA E NON DA QUELLA CHE RESTITUISCE TUTTI I TEATRI\n/**\n * Classe contenente gli attributi utilizzati per le operazioni che coinvolgono i moduli.\n * ps. Questa struttura è prettamente utilizzata nella chiamata che prende tutti i moduli del teatro.\n */\nexport class SimpleModuleApplication extends SimpleModuleDTO implements CommonModule {\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n}\n\n\nexport class ReteConnection {\n    from: string;\n    port_src: string;\n    to: string;\n    port_dst: string;\n}\n\nexport interface TopologyList {\n    rete: any;\n    topology?: TopologyElement\n}\nexport class TopologyElement {\n    elements: { [name: string]: any };\n    connection: ReteConnection[]\n}\n\n// apptype module topology\n\nexport class NodeTopologyElement implements TopologyElement {\n    elements: { [hostName: string]: ReteHostInfo | ReteSubnetInfo | ReteNetworkInfo };\n    connection: ReteConnection[]\n}\n\nexport interface ModuleTopology extends TopologyList {\n    rete: ReteMirroringModuleInstanceInfo | ReteTheaterInternalServiceModuleInstanceInfo | ReteTheaterModuleInstanceInfo\n    topology: NodeTopologyElement;\n}\n\nexport class ModuleInstance extends ModuleInstanceDTO implements ModuleTopology {\n    // moduleTopology data\n    rete: ReteTheaterModuleInstanceInfo | ReteTheaterInternalServiceModuleInstanceInfo | ReteMirroringModuleInstanceInfo;\n    topology: NodeTopologyElement;\n    // other data\n    moduleInfo: SimpleModuleApplication\n}\n\n// apptype theater theater\n\nexport interface TheaterTopology extends TopologyElement {\n    elements: { [hostName: string]: ModuleInstance };\n    connection: ReteConnection[];\n}\n\nexport class TheaterApplication extends TheaterDTO implements TheaterTopology {\n    // theaterTopology data\n    elements: { [hostName: string]: ModuleInstance; };\n    connection: ReteConnection[];\n    // other data\n    properties: TheaterInstancePropertiesDTO;\n    topology: TheaterTopology;\n    // serve per validare il json risultante dal parsing del theaterApplication\n    validateObject?: string = \"theater\";\n}\n\nexport class AreaApplication extends AreaDTO {\n    color?: string;\n}\nexport class AreaColorDTO extends SimpleAreaDTO {\n    color: string;\n}\n\n\nexport class FlavorApplication extends FlavorBasicInfo {\n    flavorName: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/SimpleModuleDTO.html":{"url":"classes/SimpleModuleDTO.html","title":"class - SimpleModuleDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  SimpleModuleDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsDTO/moduleDTO.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano il modulo (simple - in dipendenza del teatro).\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                createdBy\n                            \n                            \n                                createdDate\n                            \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                isLocked\n                            \n                            \n                                lastModifiedBy\n                            \n                            \n                                lastModifiedDate\n                            \n                            \n                                lockAcquiredTimestamp\n                            \n                            \n                                lockLastUserAcquiring\n                            \n                            \n                                lockReleasedTimestamp\n                            \n                            \n                                name\n                            \n                            \n                                status\n                            \n                            \n                                    Opzionale\n                                type\n                            \n                            \n                                uuid\n                            \n                            \n                                version\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:102\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdDate\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:103\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:104\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:105\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLocked\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:106\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastModifiedBy\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:107\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastModifiedDate\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:108\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lockAcquiredTimestamp\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:109\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lockLastUserAcquiring\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:110\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lockReleasedTimestamp\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:111\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:112\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ModuleStatusDTO\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:113\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | any\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:114\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uuid\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:115\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:116\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PageableDTO, SortDTO } from './elementDTO';\nimport { NetworkDTO } from './networkDTO';\nimport { TheaterDTO } from './theaterDTO';\n\n/**\n * Classe che contiene gli attributi che indicano l'insieme dei moduli ritornati dal teatro.\n */\nexport class ModuleListDTO {\n    content: SimpleModuleDTO[]\n    pageable: PageableDTO\n    last: boolean\n    totalPages: string | number\n    totalElements: string | number\n    size: string | number\n    number: string | number\n    sort: SortDTO\n    numberOfElements: string | number\n    first: boolean\n    empty: boolean\n}\n\n/**\n * Classe che contiene gli attributi che indica il catalogo del tipo.\n */\nexport class TypesCatalogueDTO {\n    group: string\n    id: string | number\n    parentId: {}\n    value: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano la classificazione del modulo.\n */\nexport class ModuleClassificationDTO {\n    blueprintType: string\n    category: string\n    expectedInstanceType: string\n    id: string | number\n    mcClass: string\n    type: string\n    uuid: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano un parametro generico.\n */\nexport class GenericParameterDTO {\n    type: string\n    default: string\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano i parametri di configurazione di un modulto.\n */\nexport class ConfigurationTemplateDTO {\n    anchor_parameters: { [name: string]: GenericParameterDTO | string }\n    instance_parameters: { [name: string]: GenericParameterDTO }\n    structural_parameters: { [name: string]: GenericParameterDTO }\n    fixed_parameters: { [name: string]: GenericParameterDTO }\n    control_parameters: { [name: string]: GenericParameterDTO }\n    infrastructure_parameters: { [name: string]: GenericParameterDTO }\n    module: string\n    description: string\n    category: string\n    version: string | number\n    platform: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano la modalità di un modulo.\n */\nexport class ModuleModeDTO {\n    code: string\n    id: string | number\n    name: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano lo stato di un modulo.\n */\nexport class ModuleStatusDTO {\n    descriptionCode: string\n    id: string | number\n    name: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le statitistiche di un modulo.\n */\nexport class StatisticItemDTO {\n    error: string | number\n    updated: string | number\n    inserted: string | number\n}\n\n/**\n * Classe che contiene gli attributi che indicano il modulo (simple - in dipendenza del teatro).\n */\nexport class SimpleModuleDTO {\n    createdBy: string\n    createdDate: string\n    description: string\n    id: string | number\n    isLocked: boolean\n    lastModifiedBy: string\n    lastModifiedDate: string\n    lockAcquiredTimestamp: string\n    lockLastUserAcquiring: string\n    lockReleasedTimestamp: string\n    name: string\n    status: ModuleStatusDTO\n    type?: string | any\n    uuid: string\n    version: string | number\n}\n\n/**\n * Classe che contiene gli attributi che indicano il modulo (complex - ritorato da call appostita).\n * @extends {SimpleModuleDTO}\n */\nexport class ModuleDTO extends SimpleModuleDTO {\n    attachments: string[]\n    author: string\n    capabilities: { [name: string]: string }\n    catalog1: TypesCatalogueDTO\n    catalog2: TypesCatalogueDTO\n    catalog3: TypesCatalogueDTO\n    classification: ModuleClassificationDTO\n    configurationTemplate: ConfigurationTemplateDTO\n    detailProperties: {}\n    input: { [name: string]: string }\n    output: { [name: string]: string }\n    mode: ModuleModeDTO\n    statistics: { [name: string]: StatisticItemDTO | string | number }\n    tags: []\n}\n\n/**\n * Classe che contiene gli attributi che indicano le interfacce esposte da un modulo.\n */\nexport class ModuleNetworkInterfaceDTO {\n    id: string | number\n    label: string\n    module: ModuleDTO\n    network: NetworkDTO\n    nodeName: string\n    type: string\n    uuid: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le connessioni interfaccia-modulo.\n */\nexport class ConsumerInterfaceLinkDTO {\n    local_interface: string\n    module_instance: string\n    remote_interface: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà dell'istanza di un modulo all'interno del node_templates.\n */\nexport class ModuleInstancePropertiesDTO {\n    area: string\n    description: string\n    module: string\n    version: string | number\n    sequence: string | number\n    consumer_interfaces_link: ConsumerInterfaceLinkDTO[]\n}\n\n\n/**\n * Classe che contiene gli attributi che indicano l'area di appartenenza di un modulo (complex).\n */\nexport class AreaDTO {\n    id: string | number;\n    uuid: string;\n    name: string;\n    description: string;\n    theater: TheaterDTO;\n    deleted: boolean | string;\n}\n\n/**\n * Classe che contiene gli attributi che indicano l'area di appartenenza di un modulo (simple).\n */\nexport class SimpleAreaDTO {\n    area: string\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà dell'istanza di un teatro all'interno del node_templates.\n */\nexport class TheaterInstancePropertiesDTO {\n    mode: string\n    tags: TagTIP[]\n    areas: SimpleAreaDTO[]\n    author: string\n    version: string | number\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano un tag.\n */\nexport class TagTIP{\n    tag: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano in via generale le caratteristiche di un elemento che deve essere presente nel node_templates.\n */\nexport class ElementIntoTheaterDTO {  // goes into map in blueprint [name:string]: Module...\n    properties: ModuleInstancePropertiesDTO | TheaterInstancePropertiesDTO\n    type: string\n}\n\n\n/**\n * Classe che contiene gli attributi che indicano le caratteristiche di un teatro presente nel node_templates.\n */\nexport class ModuleInstanceDTO {\n    properties: ModuleInstancePropertiesDTO\n    type: string\n}\n/**\n * Classe che contiene gli attributi che indicano le caratteristiche di un modulo presente nel node_templates.\n */\nexport class TheaterInstanceDTO {\n    properties: TheaterInstancePropertiesDTO\n    type: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/SingleDataInputReturned.html":{"url":"classes/SingleDataInputReturned.html","title":"class - SingleDataInputReturned","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  SingleDataInputReturned\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/data-input/dataInputType.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Singolo elemento dato in ritorno al submit.\nSee {DataInputComponet}\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                text\n                            \n                            \n                                type\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/data-input/dataInputType.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        text\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/data-input/dataInputType.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/data-input/dataInputType.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         any\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/data-input/dataInputType.ts:75\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class DataInputElement{\n    element: Array;\n}\n\n/**\n * Tipo di dato Input contenente variabili generali.\n * @see {DataInputComponet}\n */\nexport class DataInput{\n    id: string;\n    text?: string;\n    type: \"textarea\" | \"text\" | \"selection\" | \"checkbox\";\n    data_prepended?: string;\n    data_appended?: string;\n    required: boolean;\n}\n/**\n * Tipo input text base/area.\n * Estende DataInput.\n  * @see {DataInputComponet}\n */\nexport class DataInputText extends DataInput{\n    placeholder?: string;\n}\n/**\n * Tipo input selection.\n * Estende DataInput.\n  * @see {DataInputComponet}\n */\nexport class DataInputSelection extends DataInput{\n    multiple?: boolean;\n    selected_number: number;\n    selection: SelectOption[];\n}\n/**\n * Tipo input check (toggle).\n * Estende DataInput.\n * @see {DataInputComponet}\n */\nexport class DataInputCheck  extends DataInput{\n    checked?: boolean;\n}\n\n/**\n * Tipo usato per le selezioni (multiselect option).\n  * @see {DataInputComponet}\n */\nexport class SelectOption{\n    value: string;\n    text: string;\n    other?: any;\n}\n\n/**\n * Tipo di ritorno della componente DataInputReturned.\n  * @see {DataInputComponet}\n */\nexport class DataInputReturned{\n    element: { [key:string]: SingleDataInputReturned};\n    isValid: boolean;\n    exitStatus?: 'submitted' | 'cancel' | 'error';\n}\n/**\n * Singolo elemento dato in ritorno al submit.\n  * @see {DataInputComponet}\n */\nexport class SingleDataInputReturned{\n    id: string;\n    text: string;\n    type: string;\n    value: any;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/SortDTO.html":{"url":"classes/SortDTO.html","title":"class - SortDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  SortDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsDTO/elementDTO.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano il tipo di sorting ritornato dalle api.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                empty\n                            \n                            \n                                sorted\n                            \n                            \n                                unsorted\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        empty\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/elementDTO.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sorted\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/elementDTO.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unsorted\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/elementDTO.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class SortDTO {\n    empty: boolean\n    sorted: boolean\n    unsorted: boolean\n}\n/**\n * Classe che contiene gli attributi che indicano il tipo di paging ritornato dalle api.\n */\nexport class PageableDTO {\n    offset: string | number\n    pageNumber: string | number\n    pageSize: string | number\n    paged: boolean\n    sort: SortDTO\n    unpaged: boolean\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/SourceExport.html":{"url":"classes/SourceExport.html","title":"class - SourceExport","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  SourceExport\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsExport/theaterExport.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano le porte di ingresso del modulo all'interno dei node_templates.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                host\n                            \n                            \n                                interfaces\n                            \n                            \n                                module_instance\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        host\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/theaterExport.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        interfaces\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/theaterExport.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        module_instance\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/theaterExport.ts:69\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ModeTypeExport, ModuleTypeExport, TheaterTypeExport, ToscaDefinitionType } from \"./TypeExport\"\n\n/**\n * Classe utilizzata per l'export. \n * Contiene le informazioni generali per il teatro che devono esserci nello standard Tosca.\n */\nexport class TheaterExport {\n    tosca_definitions_version: ToscaDefinitionType\n    description: string\n    imports: string[]\n    node_templates: { [name: string]: TheaterSimpleData | ModuleInstanceSimpleData }\n}\n/**\n * Classe che contiene gli attributi che indicano il teatro all'interno dei node_templates.\n */\nexport class TheaterSimpleData {\n    type: TheaterTypeExport\n    properties: PropertiesTSD\n}\n/**\n * Classe che contiene gli attributi che indicano le proprietà del teatro.\n */\nexport class PropertiesTSD {\n    version: string | number\n    description: string\n    mode: ModeTypeExport\n    author: string\n    tags: TagsExport[]\n    areas: AreaExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano i tag nelle proprietà del teatro.\n * @see {PropertiesTSD}\n */\nexport class TagsExport {\n    tag: string\n}\n/**\n * Classe che contiene gli attributi che indicano le aree nelle proprietà del teatr.\n * @see {PropertiesTSD}\n */\nexport class AreaExport {\n    area: string\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano il modulo all'interno dei node_modules.\n */\nexport class ModuleInstanceSimpleData {\n    type: ModuleTypeExport\n    properties: PropertiesMISD\n}\n/**\n * Classe che contiene gli attributi che indicano le propeitò del modulo all'interno dei node_templates.\n */\nexport class PropertiesMISD{\n    module: string\n    version: string | number\n    area: string\n    sequence: number\n    sources?: SourceExport[]\n    consumer_interface_link: ConsumerInterfaceLinkExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano le porte di ingresso del modulo all'interno dei node_templates.\n */\nexport class SourceExport{\n    module_instance: string\n    host:string\n    interfaces: string[]\n}\n/**\n * Classe che contiene gli attributi che indicano i collegamenti e relazioni intramodulo con le varie interfacce.\n */\nexport class ConsumerInterfaceLinkExport{\n    local_interface: string\n    module_interface:string\n    remote_interface:string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/SpinnerData.html":{"url":"classes/SpinnerData.html","title":"class - SpinnerData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  SpinnerData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/application/spinner/spinner.service.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe utilizzata per lo stato dello spinner.\nSee {SpinnerService}\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                show\n                            \n                            \n                                text\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        show\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/application/spinner/spinner.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        text\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/application/spinner/spinner.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { Observable, Subject } from 'rxjs';\n\n/**\n * Classe utilizzata per lo stato dello spinner.\n * @see {SpinnerService}\n */\nclass SpinnerData {\n  show: boolean;\n  text: string\n}\n\n/**\n * Servizio di settaggio dello spinner (operazioni di loading).\n * Questo serivizio è associato allo spinner situato nell'AppComponent.\n * Questo servizio rende raggiungibile lo stesso dalle diverse componenti dell'applicazione. \n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class SpinnerService {\n\n  /**\n   * Variabile che memorizza lo stato dello spinner.\n   * @type {Subject}\n   */\n  protected spinnerData: Subject = new Subject();\n\n  /**\n   * Costruttore dello SpinnerService\n   * Setta lo spinner come \"hide\"\n   * @param ss \n   */\n  constructor(private ss: NgxSpinnerService) {\n    this.setSpinner(false);\n  }\n\n  /**\n   * Funzione che ritorna l'observable dello stato dello spinner.\n   * @returns {Observable}\n   */\n  getSpinner(): Observable {\n    return this.spinnerData.asObservable();\n  }\n\n  /**\n   * Funzone che setta lo stato dello spinner.\n   * @param show \n   * @param text \n   */\n  setSpinner(show: boolean, text: string = \"Loading\") {\n    this.spinnerData.next({ show: show, text: text });\n    show\n      ? this.ss.show()\n      : this.ss.hide();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"injectables/SpinnerService.html":{"url":"injectables/SpinnerService.html","title":"injectable - SpinnerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SpinnerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/application/spinner/spinner.service.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Servizio di settaggio dello spinner (operazioni di loading).\nQuesto serivizio è associato allo spinner situato nell'AppComponent.\nQuesto servizio rende raggiungibile lo stesso dalle diverse componenti dell'applicazione.\n\n            \n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                spinnerData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                getSpinner\n                            \n                            \n                                setSpinner\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Costruttore\n        \n            \n                \n                    \nconstructor(ss: NgxSpinnerService)\n                    \n                \n                        \n                            \n                                Definito in src/app/services/application/spinner/spinner.service.ts:28\n                            \n                        \n\n                \n                    \n                            Costruttore dello SpinnerService\nSetta lo spinner come \"hide\"\n\n                            \n                                    Parametri :\n                                    \n                                        \n                                            \n                                                Nome\n                                                    Tipo\n                                                Opzionale\n                                            \n                                        \n                                        \n                                                \n                                                        ss\n                                                  \n                                                        \n                                                                        NgxSpinnerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        getSpinner\n                        \n                    \n                \n            \n            \n                \ngetSpinner()\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/spinner/spinner.service.ts:43\n                \n            \n\n\n            \n                \n                    Funzione che ritorna l'observable dello stato dello spinner.\n\n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSpinner\n                        \n                    \n                \n            \n            \n                \nsetSpinner(show: boolean, text: string)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/spinner/spinner.service.ts:52\n                \n            \n\n\n            \n                \n                    Funzone che setta lo stato dello spinner.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                    Valore predefinito\n                                \n                            \n                            \n                                \n                                    show\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        \"Loading\"\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        spinnerData\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         Subject\n\n                    \n                \n                \n                    \n                        Valore predefinito : new Subject()\n                    \n                \n                    \n                        \n                                Definito in src/app/services/application/spinner/spinner.service.ts:28\n                        \n                    \n\n            \n                \n                    Variabile che memorizza lo stato dello spinner.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { Observable, Subject } from 'rxjs';\n\n/**\n * Classe utilizzata per lo stato dello spinner.\n * @see {SpinnerService}\n */\nclass SpinnerData {\n  show: boolean;\n  text: string\n}\n\n/**\n * Servizio di settaggio dello spinner (operazioni di loading).\n * Questo serivizio è associato allo spinner situato nell'AppComponent.\n * Questo servizio rende raggiungibile lo stesso dalle diverse componenti dell'applicazione. \n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class SpinnerService {\n\n  /**\n   * Variabile che memorizza lo stato dello spinner.\n   * @type {Subject}\n   */\n  protected spinnerData: Subject = new Subject();\n\n  /**\n   * Costruttore dello SpinnerService\n   * Setta lo spinner come \"hide\"\n   * @param ss \n   */\n  constructor(private ss: NgxSpinnerService) {\n    this.setSpinner(false);\n  }\n\n  /**\n   * Funzione che ritorna l'observable dello stato dello spinner.\n   * @returns {Observable}\n   */\n  getSpinner(): Observable {\n    return this.spinnerData.asObservable();\n  }\n\n  /**\n   * Funzone che setta lo stato dello spinner.\n   * @param show \n   * @param text \n   */\n  setSpinner(show: boolean, text: string = \"Loading\") {\n    this.spinnerData.next({ show: show, text: text });\n    show\n      ? this.ss.show()\n      : this.ss.hide();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/StatisticItemDTO.html":{"url":"classes/StatisticItemDTO.html","title":"class - StatisticItemDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  StatisticItemDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsDTO/moduleDTO.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano le statitistiche di un modulo.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                inserted\n                            \n                            \n                                updated\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:93\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        inserted\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:95\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updated\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:94\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PageableDTO, SortDTO } from './elementDTO';\nimport { NetworkDTO } from './networkDTO';\nimport { TheaterDTO } from './theaterDTO';\n\n/**\n * Classe che contiene gli attributi che indicano l'insieme dei moduli ritornati dal teatro.\n */\nexport class ModuleListDTO {\n    content: SimpleModuleDTO[]\n    pageable: PageableDTO\n    last: boolean\n    totalPages: string | number\n    totalElements: string | number\n    size: string | number\n    number: string | number\n    sort: SortDTO\n    numberOfElements: string | number\n    first: boolean\n    empty: boolean\n}\n\n/**\n * Classe che contiene gli attributi che indica il catalogo del tipo.\n */\nexport class TypesCatalogueDTO {\n    group: string\n    id: string | number\n    parentId: {}\n    value: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano la classificazione del modulo.\n */\nexport class ModuleClassificationDTO {\n    blueprintType: string\n    category: string\n    expectedInstanceType: string\n    id: string | number\n    mcClass: string\n    type: string\n    uuid: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano un parametro generico.\n */\nexport class GenericParameterDTO {\n    type: string\n    default: string\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano i parametri di configurazione di un modulto.\n */\nexport class ConfigurationTemplateDTO {\n    anchor_parameters: { [name: string]: GenericParameterDTO | string }\n    instance_parameters: { [name: string]: GenericParameterDTO }\n    structural_parameters: { [name: string]: GenericParameterDTO }\n    fixed_parameters: { [name: string]: GenericParameterDTO }\n    control_parameters: { [name: string]: GenericParameterDTO }\n    infrastructure_parameters: { [name: string]: GenericParameterDTO }\n    module: string\n    description: string\n    category: string\n    version: string | number\n    platform: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano la modalità di un modulo.\n */\nexport class ModuleModeDTO {\n    code: string\n    id: string | number\n    name: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano lo stato di un modulo.\n */\nexport class ModuleStatusDTO {\n    descriptionCode: string\n    id: string | number\n    name: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le statitistiche di un modulo.\n */\nexport class StatisticItemDTO {\n    error: string | number\n    updated: string | number\n    inserted: string | number\n}\n\n/**\n * Classe che contiene gli attributi che indicano il modulo (simple - in dipendenza del teatro).\n */\nexport class SimpleModuleDTO {\n    createdBy: string\n    createdDate: string\n    description: string\n    id: string | number\n    isLocked: boolean\n    lastModifiedBy: string\n    lastModifiedDate: string\n    lockAcquiredTimestamp: string\n    lockLastUserAcquiring: string\n    lockReleasedTimestamp: string\n    name: string\n    status: ModuleStatusDTO\n    type?: string | any\n    uuid: string\n    version: string | number\n}\n\n/**\n * Classe che contiene gli attributi che indicano il modulo (complex - ritorato da call appostita).\n * @extends {SimpleModuleDTO}\n */\nexport class ModuleDTO extends SimpleModuleDTO {\n    attachments: string[]\n    author: string\n    capabilities: { [name: string]: string }\n    catalog1: TypesCatalogueDTO\n    catalog2: TypesCatalogueDTO\n    catalog3: TypesCatalogueDTO\n    classification: ModuleClassificationDTO\n    configurationTemplate: ConfigurationTemplateDTO\n    detailProperties: {}\n    input: { [name: string]: string }\n    output: { [name: string]: string }\n    mode: ModuleModeDTO\n    statistics: { [name: string]: StatisticItemDTO | string | number }\n    tags: []\n}\n\n/**\n * Classe che contiene gli attributi che indicano le interfacce esposte da un modulo.\n */\nexport class ModuleNetworkInterfaceDTO {\n    id: string | number\n    label: string\n    module: ModuleDTO\n    network: NetworkDTO\n    nodeName: string\n    type: string\n    uuid: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le connessioni interfaccia-modulo.\n */\nexport class ConsumerInterfaceLinkDTO {\n    local_interface: string\n    module_instance: string\n    remote_interface: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà dell'istanza di un modulo all'interno del node_templates.\n */\nexport class ModuleInstancePropertiesDTO {\n    area: string\n    description: string\n    module: string\n    version: string | number\n    sequence: string | number\n    consumer_interfaces_link: ConsumerInterfaceLinkDTO[]\n}\n\n\n/**\n * Classe che contiene gli attributi che indicano l'area di appartenenza di un modulo (complex).\n */\nexport class AreaDTO {\n    id: string | number;\n    uuid: string;\n    name: string;\n    description: string;\n    theater: TheaterDTO;\n    deleted: boolean | string;\n}\n\n/**\n * Classe che contiene gli attributi che indicano l'area di appartenenza di un modulo (simple).\n */\nexport class SimpleAreaDTO {\n    area: string\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà dell'istanza di un teatro all'interno del node_templates.\n */\nexport class TheaterInstancePropertiesDTO {\n    mode: string\n    tags: TagTIP[]\n    areas: SimpleAreaDTO[]\n    author: string\n    version: string | number\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano un tag.\n */\nexport class TagTIP{\n    tag: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano in via generale le caratteristiche di un elemento che deve essere presente nel node_templates.\n */\nexport class ElementIntoTheaterDTO {  // goes into map in blueprint [name:string]: Module...\n    properties: ModuleInstancePropertiesDTO | TheaterInstancePropertiesDTO\n    type: string\n}\n\n\n/**\n * Classe che contiene gli attributi che indicano le caratteristiche di un teatro presente nel node_templates.\n */\nexport class ModuleInstanceDTO {\n    properties: ModuleInstancePropertiesDTO\n    type: string\n}\n/**\n * Classe che contiene gli attributi che indicano le caratteristiche di un modulo presente nel node_templates.\n */\nexport class TheaterInstanceDTO {\n    properties: TheaterInstancePropertiesDTO\n    type: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"injectables/StorageService.html":{"url":"injectables/StorageService.html","title":"injectable - StorageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/application/storage/storage.service.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Service che si occupa dello storaging di dati condivisibili attraverso le componenti.\n\n            \n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _data\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessori\n                        \n                    \n                    \n                        \n                            \n                                \n                                    data\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Costruttore\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Definito in src/app/services/application/storage/storage.service.ts:27\n                            \n                        \n\n            \n        \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _data\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         any\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/application/storage/storage.service.ts:14\n                        \n                    \n\n            \n                \n                    Variabile che memorizza le informazioni da salvare\n\n                \n            \n\n        \n    \n\n\n            \n    \n        Accessori\n    \n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n\n                \n                    \n                        getdata()\n                    \n                \n                            \n                                \n                                    Definito in src/app/services/application/storage/storage.service.ts:25\n                                \n                            \n                    \n                        \n                                Funzione che ritorna i dati memorizzati.\n\n\n                        \n                    \n\n                \n                    \n                        setdata(data: any)\n                    \n                \n                            \n                                \n                                    Definito in src/app/services/application/storage/storage.service.ts:19\n                                \n                            \n                    \n                        \n                                Funzione che consente di settare i dati.\n\n\n                                \n                                        Parametri :\n                                        \n                                            \n                                                \n                                                    Nome\n                                                        Tipo\n                                                    Opzionale\n                                                \n                                            \n                                            \n                                                    \n                                                            data\n                                                    \n                                                            \n                                                                            any\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n * Service che si occupa dello storaging di dati condivisibili attraverso le componenti.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class StorageService {\n\n  /**\n   * Variabile che memorizza le informazioni da salvare\n   */\n  private _data: any;\n\n  /**\n   * Funzione che consente di settare i dati.\n   */\n  set data(data: any) {\n    this._data = data;\n  }\n  /**\n   * Funzione che ritorna i dati memorizzati.\n   */\n  get data() {\n    return this._data;\n  }\n\n  constructor() { }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"components/SubnetComponent.html":{"url":"components/SubnetComponent.html","title":"component - SubnetComponent","body":"\n                   \n\n\n\n\n\n  Componenti\n  \n  SubnetComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/rete-settings/nodes/rete-nodes/subnet/subnet.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n            NodeComponent\n    \n\n\n\n\n    Metadati\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            NodeService\n                \n            \n\n\n\n            \n                styleUrls\n                ./subnet.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./subnet.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                NodeType\n                            \n                            \n                                showInputOutlet\n                            \n                            \n                                showOutputOutlet\n                            \n                            \n                                showPorts\n                            \n                            \n                                SubnetIcon\n                            \n                        \n                    \n                \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                showhidesocket\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Costruttore\n        \n            \n                \n                    \nconstructor(service: NodeService, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Definito in src/app/rete-settings/nodes/rete-nodes/subnet/subnet.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parametri :\n                                    \n                                        \n                                            \n                                                Nome\n                                                    Tipo\n                                                Opzionale\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                    NodeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        showhidesocket\n                        \n                    \n                \n            \n            \n                \nshowhidesocket()\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-nodes/subnet/subnet.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        NodeType\n                        \n                    \n                \n            \n                \n                    \n                        Valore predefinito : EnumNodeType\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-nodes/subnet/subnet.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showInputOutlet\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                \n                    \n                        Valore predefinito : true\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-nodes/subnet/subnet.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showOutputOutlet\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                \n                    \n                        Valore predefinito : true\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-nodes/subnet/subnet.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showPorts\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                \n                    \n                        Valore predefinito : true\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-nodes/subnet/subnet.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SubnetIcon\n                        \n                    \n                \n            \n                \n                    \n                        Valore predefinito : SubnetIcon\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-nodes/subnet/subnet.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, ChangeDetectorRef, ChangeDetectionStrategy } from '@angular/core';\nimport { NodeComponent, NodeService } from 'rete-angular-render-plugin';\nimport { EnumNodeType } from 'src/app/models/appType';\nimport { SubnetIcon } from 'src/app/rete-settings/style/styleIconConfig';\n// import { EnumNodeType } from 'src/app/rete-settings/models/reteModelType';\n\n@Component({\n  templateUrl: './subnet.component.html',\n  styleUrls: ['./subnet.component.sass',],\n  providers: [NodeService],\n  changeDetection: ChangeDetectionStrategy.OnPush, // render più veloce.\n})\n\nexport class SubnetComponent extends NodeComponent {\n\n  showPorts: boolean = true;\n  showOutputOutlet: boolean = true;\n  showInputOutlet: boolean = true;\n  NodeType = EnumNodeType;\n  SubnetIcon = SubnetIcon;\n\n  constructor(\n    protected service: NodeService,\n    protected cdr: ChangeDetectorRef) {\n    super(service, cdr);\n  }\n\n  showhidesocket() {\n    this.showPorts = !this.showPorts;\n  }\n  \n}\n\n    \n\n    \n        \n\n\n  \n    \n      \n        \n          {{ node.data.name === \"\" || node.data.name === undefined ? \"Assign name\" : node.data.name }}\n        \n      \n      \n        \n          \n          \n        \n      \n    \n   -->\n\n\n  \n  \n    \n      \n        \n          \n            \n              \n                \n              \n              \n                \n                  {{\n                  (node.data.name && node.data.name!=='')\n                  ?node.data.name\n                  :NodeType.SUBNET\n                  }}\n                \n                \n                  {{\n                  (node.data.cidr && node.data.cidr!=='')\n                  ?\"cidr: \"+node.data.cidr\n                  :''\n                  }}\n                \n                \n                  {{\n                  (node.data.isDhcp !== undefined)\n                  ? \"DHCP: \"+ (node.data.isDhcp?\"true\":\"false\")\n                  :''\n                  }}\n                \n                \n                  {{\n                  (node.data.version && node.data.version!=='')\n                  ?\"version: \"+node.data.version\n                  :''\n                  }}\n                \n              \n            \n          \n        \n      \n    \n  \n\n\n  \n    \n      Button with data-bs-target\n    \n  \n  \n    \n      Some placeholder content for the collapse component. This panel is hidden by default but revealed when the user\n      activates the relevant trigger.\n    \n   -->\n\n\n  \n\n    \n    \n      \n        {{output.name}}\n        \n          \n          \n        \n      \n    \n\n\n     -->\n\n    \n    \n      \n        \n          \n          \n          \n        \n        {{input.name}}\n        \n      \n    \n\n  \n    \n\n    \n                \n                    ./subnet.component.sass\n                \n                @import \"../vars\"\n\n.node\n  background: $node-color\n  border: 2px solid #f124\n  border-radius: 10px\n  cursor: pointer\n  min-width: $node-width\n  height: auto\n  padding-bottom: 6px\n  box-sizing: content-box\n  position: relative\n  user-select: none\n  &:hover\n    background: lighten($node-color,4%)\n  &.selected\n    background: $node-color-selected\n    border-color: #ff0000\n  .title\n    color: $text-color\n    font-family: $font-fam\n    font-size: 18px\n    padding: 8px\n  .output\n    text-align: right\n    display: flex\n    justify-content: flex-end\n  .input\n    text-align: left\n    display: flex\n    justify-content: flex-start\n  .input-title,.output-title\n    vertical-align: middle\n    color: $text-color\n    display: inline-block\n    font-family: $font-fam\n    font-size: 14px\n    margin: $socket-margin\n    line-height: $socket-size\n    &[hidden]\n      display: none\n  .input-control\n    z-index: 1\n    width: calc(100% - #{$socket-size + 2*$socket-margin})\n    vertical-align: middle\n    display: inline-block\n  .control\n    padding: $socket-margin $socket-size/2 + $socket-margin\n    \n\n    \n        \n        \n            \n                Legenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento html con direttive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              {{ node.data.name === \"\" || node.data.name === undefined ? \"Assign name\" : node.data.name }}                                                                     -->                                                                                                                                        {{                  (node.data.name && node.data.name!==\\'\\')                  ?node.data.name                  :NodeType.SUBNET                  }}                                                  {{                  (node.data.cidr && node.data.cidr!==\\'\\')                  ?\"cidr: \"+node.data.cidr                  :\\'\\'                  }}                                                  {{                  (node.data.isDhcp !== undefined)                  ? \"DHCP: \"+ (node.data.isDhcp?\"true\":\"false\")                  :\\'\\'                  }}                                                  {{                  (node.data.version && node.data.version!==\\'\\')                  ?\"version: \"+node.data.version                  :\\'\\'                  }}                                                                                    Button with data-bs-target                  Some placeholder content for the collapse component. This panel is hidden by default but revealed when the user      activates the relevant trigger.       -->                        {{output.name}}                                                   -->                                                                    {{input.name}}                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ComposerComponent', 'selector': 'app-composer'},{'name': 'ControlTemplate', 'selector': ''},{'name': 'DataInputComponent', 'selector': 'app-data-input'},{'name': 'DataInputV2Component', 'selector': 'app-data-input-v2'},{'name': 'DataItemComponent', 'selector': 'app-window-item'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HostComponent', 'selector': ''},{'name': 'HowToUseComponent', 'selector': 'app-how-to-use'},{'name': 'MirroringModuleInstanceComponent', 'selector': ''},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavbarElementComponent', 'selector': 'app-navbar-element'},{'name': 'NetworkComponent', 'selector': ''},{'name': 'OffcanvasComponent', 'selector': 'app-offcanvas'},{'name': 'ReteModuleComposerComponent', 'selector': 'app-rete-module-composer'},{'name': 'ReteModuleVisualizerComponent', 'selector': 'app-rete-module-visualizer'},{'name': 'ReteTheaterComposerComponent', 'selector': 'app-rete-theater-composer'},{'name': 'ReteTheaterVisualizerComponent', 'selector': 'app-rete-theater-visualizer'},{'name': 'SubnetComponent', 'selector': ''},{'name': 'TabnavComponent', 'selector': 'app-tabnav'},{'name': 'TheaterInternalServiceModuleInstanceComponent', 'selector': ''},{'name': 'TheaterModuleInstanceComponent', 'selector': ''},{'name': 'UnderbarComponent', 'selector': 'app-underbar'},{'name': 'VisualizerComponent', 'selector': 'app-displayer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SubnetComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/SubnetDTO.html":{"url":"classes/SubnetDTO.html","title":"class - SubnetDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  SubnetDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsDTO/networkDTO.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano le subnet.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                allocationPool\n                            \n                            \n                                borderNetwork\n                            \n                            \n                                cidr\n                            \n                            \n                                dns\n                            \n                            \n                                gateway\n                            \n                            \n                                id\n                            \n                            \n                                isDhcp\n                            \n                            \n                                name\n                            \n                            \n                                network\n                            \n                            \n                                router\n                            \n                            \n                                uuid\n                            \n                            \n                                version\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        allocationPool\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/networkDTO.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        borderNetwork\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         BorderNetworkDTO\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/networkDTO.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cidr\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/networkDTO.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dns\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/networkDTO.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gateway\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/networkDTO.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/networkDTO.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDhcp\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/networkDTO.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/networkDTO.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        network\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         NetworkDTO\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/networkDTO.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         NetOSRouterDTO\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/networkDTO.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uuid\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/networkDTO.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/networkDTO.ts:46\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class NetworkDTO {\n    id: string | number\n    name: string\n    uuid: string\n}\n\n/**\n * Classe che contiene gli attributi che indica la border network.\n */\nexport class BorderNetworkDTO {\n    bnName: string\n    id: string | number\n    subnet: {} | null\n    uuid: string | number\n}\n\n/**\n * Classe che contiene gli attributi che indicano le net os.\n */\nexport class NetOSRouterDTO {\n    borderNetwork: BorderNetworkDTO\n    id: string | number\n    subnet: {} | null\n    uuid: string | number\n}\n\n\n/**\n * Classe che contiene gli attributi che indicano le subnet.\n */\nexport class SubnetDTO {\n    allocationPool: string\n    borderNetwork: BorderNetworkDTO\n    cidr: string\n    dns: string\n    gateway: string\n    id: string | number\n    isDhcp: boolean\n    name: string\n    network: NetworkDTO\n    router: NetOSRouterDTO\n    uuid: string\n    version: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/SubnetExport.html":{"url":"classes/SubnetExport.html","title":"class - SubnetExport","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  SubnetExport\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsExport/moduleExport.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano la subnet connessa alla porte dell'host.\nSee {VirtualMachinePorts}\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                subnet\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        subnet\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:106\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ModeTypeExport, ModuleTypeExport, NetworkTypeExport, NodeTypeExport, PortTypeExport, RelationshipsTypeExport, SubnetTypeExport, ToscaDefinitionType } from \"./TypeExport\"\n\n\n/**\n * Classe utilizzata per l'export. \n * Contiene le informazioni generali per il modulo che devono esserci nello standard Tosca.\n */\nexport class ModuleExport {\n    tosca_definitions_version: ToscaDefinitionType\n    description: string\n    imports: string[]\n    node_templates: { [name: string]: ModuleSimpleData | NodeSimpleData | PortSimpleData | NetworkSimpleData | SubnetSimpleData }\n    dsl_definition: any | null; //future\n    capabilites: any | null //future\n    outputs: any | null //future\n}\n\n/**\n * Classe che contiene gli attributi che indicano la rappresentazione del modulo per l'export.\n */\nexport class ModuleSimpleData {\n    type: ModuleTypeExport\n    properties: PropertiesMSD\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà del modulo per l'export.\n */\nexport class PropertiesMSD {\n    mode: ModeTypeExport\n    description: string\n    version: string | number\n    constraints: ConstraintsMSD\n    interface_networks: {\n        providers: InterfaceNetworksProvider[]\n        consumers: InterfaceNetworksConsumer[]\n    }\n    virtual_machines: VirtualMachine[]\n}\n/**\n * Classe che contiene gli attributi che indicano i vincoli di connessione del modulo per l'export.\n */\nexport class ConstraintsMSD {\n    interface_constraints: InterfaceConstraints[]\n    module_constraints: ModuleConstraints[]\n    network_constraints: NetworkConstraints[]\n}\n/**\n * Classe che contiene gli attributi che indicano i viconli per le interfacce di connessione del modulo.\n */\nexport class InterfaceConstraints {\n    local_interface: string\n    multiple_mode: boolean = false //future\n    module_name: string\n    compatibility: string = \"1.0\" // future\n    remote_interface: string\n}\n/**\n * Classe che contiene gli attributi che indicano i viconli del modulo.\n */\nexport class ModuleConstraints {\n}\n/**\n * Classe che contiene gli attributi che indicano i viconli dei network del modulo.\n */\nexport class NetworkConstraints {\n}\n/**\n * Classe che contiene gli attributi che indicano le interfacce provider del modulo.\n */\nexport class InterfaceNetworksProvider {\n    interface: string\n    network: string\n    tag: string\n    subnets: SubnetExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano le interfacce consumer del modulo.\n */\nexport class InterfaceNetworksConsumer {\n    interface: string\n    network: string\n    tag: string\n    subnets: SubnetExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano l'insieme di host presenti in un modulo.\n */\nexport class VirtualMachine {\n    virtual_machine: string\n    ports: VirtualMachinePorts[]\n}\n/**\n * Classe che contiene gli attributi che indicano le porte associate ad un host di un modulo.\n */\nexport class VirtualMachinePorts {\n    port: string\n    network: string\n    subnets: SubnetExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano la subnet connessa alla porte dell'host.\n * @see {VirtualMachinePorts}\n */\nexport class SubnetExport {\n    subnet: string;\n}\n\n/**\n * Classe che contiene gli attributi che indica un nodo all'interno dei node_templates.\n * @see {ModuleExport}\n */\nexport class NodeSimpleData {\n    type: NodeTypeExport\n    properties: any | null // future\n    interfaces: any | null // future\n    relationships: RelationshipsExport[]\n}\n\n/**\n * Classe che contiene gli attributi che indicano le relazioni generali.\n */\nexport class RelationshipsExport {\n    type: RelationshipsTypeExport\n    target: string\n}\n/**\n * Classe che contiene gli attributi che indicano i dati della porta all'interno dei node_templates.\n */\nexport class PortSimpleData {\n    type: PortTypeExport\n    relationships: RelationshipsExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano i dati delle network all'interno dei node_templates.\n */\nexport class NetworkSimpleData {\n    type: NetworkTypeExport\n    properties: PropertiesNSD\n}\n/**\n * Classe che contiene gli attributi che indicano le proprietà della network all'interno dei node_templates.\n * @see {NetworkSimpleData}\n */\nexport class PropertiesNSD {\n    openstack_config?: any | null // future\n    use_external_resource?: boolean | null // future\n    resource_id?: any | null // future\n}\n\n/**\n * Classe che contiene gli attributi che indicano i dati delle subnet all'interno dei node_templates.\n */\nexport class SubnetSimpleData {\n    type: SubnetTypeExport\n    relationships: RelationshipsExport[]\n    properties: PropertiesSSD\n}\n/**\n * Classe che contiene gli attributi che indicano le proprietà della subnet all'interno dei node_templates.\n * @see {NetworkSimpleData}\n */\nexport class PropertiesSSD {\n    subnet?: {\n        ip_version: string | number\n        cidr: string\n        enable_dhcp: boolean\n        gateway_ip?: any | null // future\n    }\n    openstack_config?: any | null // future\n    use_external_resource?: boolean | null // future\n    resource_id?: any | null // future\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/SubnetNode.html":{"url":"classes/SubnetNode.html","title":"class - SubnetNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  SubnetNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/rete-settings/nodes/rete-nodes/subnet/subnetNode.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che rappresenta il nodo (rete-node) Subnet all'interno del canvas/editor di rete.\n\n            \n\n            \n                Extends\n            \n            \n                        Component\n            \n\n            \n                Implementa\n            \n            \n                        AngularComponent\n            \n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                builder\n                            \n                            \n                                created\n                            \n                            \n                                createNewNode\n                            \n                            \n                                destroyed\n                            \n                            \n                                valorizeNode\n                            \n                            \n                                worker\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Costruttore\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Definito in src/app/rete-settings/nodes/rete-nodes/subnet/subnetNode.ts:46\n                            \n                        \n\n                \n                    \n                            Costruttore di SubnetNode\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     AngularComponentData\n\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-nodes/subnet/subnetNode.ts:46\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        builder\n                        \n                    \n                \n            \n            \n                \n                    \n                    builder(node: Node)\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-nodes/subnet/subnetNode.ts:64\n                \n            \n\n\n            \n                \n                    Funzione richiamata in fase di costruzione del nodo (rete-node).\nControlla se bisogna instanziare il nodo oppure crearne uno nuovo:\n\nIn fase di design, il nodo non ha dati, per cui bisogna crearne uno nuovo.\nIn fase di visualizing, il nodo presenta dei dati, per cui va valorizzato il nodo.\n\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        created\n                        \n                    \n                \n            \n            \n                \ncreated(node)\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-nodes/subnet/subnetNode.ts:127\n                \n            \n\n\n            \n                \n                    Funzione richiamata una volta in nodo creato.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    node\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createNewNode\n                        \n                    \n                \n            \n            \n                \ncreateNewNode(node: Node)\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-nodes/subnet/subnetNode.ts:76\n                \n            \n\n\n            \n                \n                    Funzione che ha come scopo creare un nodo (rete-node).\nIn particolare gli assegna una struttura vuota.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destroyed\n                        \n                    \n                \n            \n            \n                \ndestroyed(node)\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-nodes/subnet/subnetNode.ts:135\n                \n            \n\n\n            \n                \n                    Funzione richiamata una volta in nodo cancellato.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    node\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        valorizeNode\n                        \n                    \n                \n            \n            \n                \nvalorizeNode(node: Node)\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-nodes/subnet/subnetNode.ts:89\n                \n            \n\n\n            \n                \n                    Funzione che ha come scopo la valorizzazione del nodo (rete-node) con i dati in suo possesso.\nIn quasta fase avviene anche la fase iniziale di instanziamento delle porte input/output.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        worker\n                        \n                    \n                \n            \n            \n                \nworker(node: NodeData, inputs: WorkerInputs, outputs: WorkerOutputs)\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-nodes/subnet/subnetNode.ts:119\n                \n            \n\n\n            \n                \n                    Funzione richiamta per eseguire operazioni che conivolgono computazioni dei nodi.\nNon sono necessari in questa versione.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                            NodeData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    inputs\n                                    \n                                            WorkerInputs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    outputs\n                                    \n                                            WorkerOutputs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Component, Input, Output, Node } from 'rete';\nimport { _Socket } from '../../../sockets/socket';\nimport { _Control } from '../../../controls/control';\nimport { AngularComponent, AngularComponentData } from 'rete-angular-render-plugin';\nimport { SubnetComponent } from './subnet.component';\nimport { NodeData, WorkerInputs, WorkerOutputs } from 'rete/types/core/data';\nimport {  reteBasicNodeInfo } from '../../reteBasic';\nimport { EnumNodeType } from 'src/app/models/appType';\n\n/**\n * Classe utilizzata per indicare il tipo di modulo SubnetNode.\n * @see {reteBasicModuleInfo}\n */\nexport class ReteSubnetInfo extends reteBasicNodeInfo {\n  cidr: string;\n  version: string | number;\n  isDhcp: string | boolean;\n  type: EnumNodeType.Subnet;\n}\n\n/**\n * Funzione dichiarata in SubnetNode. \n * Essa ha lo scopo di generare una struttura dati empty.\n * Viene utilizzata in per instanziare un nodo del tipo di ritorno indicato senza dati.\n * @returns {ReteSubnetInfo}\n */\nexport function getEmptySubnetInfo(): ReteSubnetInfo {\n  let x: ReteSubnetInfo = {\n    cidr: \"\",\n    Input: [],\n    Output: [],\n    name: \"\",\n    type: EnumNodeType.Subnet,\n    version: \"\",\n    isDhcp: ''\n  };\n  return x;\n}\n\n\n/**\n * Classe che rappresenta il nodo (rete-node) Subnet all'interno del canvas/editor di rete.\n */\nexport class SubnetNode extends Component implements AngularComponent {\n\n  data: AngularComponentData;\n\n  /**\n   * Costruttore di SubnetNode\n   */\n  constructor() {\n    super(EnumNodeType.Subnet);\n    this.data.render = 'angular';\n    this.data.component = SubnetComponent;\n  }\n\n  /**\n   * Funzione richiamata in fase di costruzione del nodo (rete-node).\n   * Controlla se bisogna instanziare il nodo oppure crearne uno nuovo:\n   * - In fase di design, il nodo non ha dati, per cui bisogna crearne uno nuovo.\n   * - In fase di visualizing, il nodo presenta dei dati, per cui va valorizzato il nodo.\n   * @param node \n   */\n  async builder(node: Node) {\n    if (Object.keys(node.data).length === 0)\n      this.createNewNode(node)\n    else\n      this.valorizeNode(node)\n  }\n\n  /**\n   * Funzione che ha come scopo creare un nodo (rete-node).\n   * In particolare gli assegna una struttura vuota.\n   * @param node \n   */\n  createNewNode(node: Node) {\n    let t = getEmptySubnetInfo()\n    node.data = {\n      ...node.data,\n      ...t\n    }\n  }\n\n  /**\n   * Funzione che ha come scopo la valorizzazione del nodo (rete-node) con i dati in suo possesso.\n   * In quasta fase avviene anche la fase iniziale di instanziamento delle porte input/output.\n   * @param node \n   */\n  valorizeNode(node: Node) {\n    var i: any = node.data['Input'];\n    var o: any = node.data['Output'];\n    var il = i.length;\n    var ol = o.length;\n\n    for (let index = 0; index \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/SubnetSimpleData.html":{"url":"classes/SubnetSimpleData.html","title":"class - SubnetSimpleData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  SubnetSimpleData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsExport/moduleExport.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano i dati delle subnet all'interno dei node_templates.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                properties\n                            \n                            \n                                relationships\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        properties\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         PropertiesSSD\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:157\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        relationships\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         RelationshipsExport[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:156\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         SubnetTypeExport\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:155\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ModeTypeExport, ModuleTypeExport, NetworkTypeExport, NodeTypeExport, PortTypeExport, RelationshipsTypeExport, SubnetTypeExport, ToscaDefinitionType } from \"./TypeExport\"\n\n\n/**\n * Classe utilizzata per l'export. \n * Contiene le informazioni generali per il modulo che devono esserci nello standard Tosca.\n */\nexport class ModuleExport {\n    tosca_definitions_version: ToscaDefinitionType\n    description: string\n    imports: string[]\n    node_templates: { [name: string]: ModuleSimpleData | NodeSimpleData | PortSimpleData | NetworkSimpleData | SubnetSimpleData }\n    dsl_definition: any | null; //future\n    capabilites: any | null //future\n    outputs: any | null //future\n}\n\n/**\n * Classe che contiene gli attributi che indicano la rappresentazione del modulo per l'export.\n */\nexport class ModuleSimpleData {\n    type: ModuleTypeExport\n    properties: PropertiesMSD\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà del modulo per l'export.\n */\nexport class PropertiesMSD {\n    mode: ModeTypeExport\n    description: string\n    version: string | number\n    constraints: ConstraintsMSD\n    interface_networks: {\n        providers: InterfaceNetworksProvider[]\n        consumers: InterfaceNetworksConsumer[]\n    }\n    virtual_machines: VirtualMachine[]\n}\n/**\n * Classe che contiene gli attributi che indicano i vincoli di connessione del modulo per l'export.\n */\nexport class ConstraintsMSD {\n    interface_constraints: InterfaceConstraints[]\n    module_constraints: ModuleConstraints[]\n    network_constraints: NetworkConstraints[]\n}\n/**\n * Classe che contiene gli attributi che indicano i viconli per le interfacce di connessione del modulo.\n */\nexport class InterfaceConstraints {\n    local_interface: string\n    multiple_mode: boolean = false //future\n    module_name: string\n    compatibility: string = \"1.0\" // future\n    remote_interface: string\n}\n/**\n * Classe che contiene gli attributi che indicano i viconli del modulo.\n */\nexport class ModuleConstraints {\n}\n/**\n * Classe che contiene gli attributi che indicano i viconli dei network del modulo.\n */\nexport class NetworkConstraints {\n}\n/**\n * Classe che contiene gli attributi che indicano le interfacce provider del modulo.\n */\nexport class InterfaceNetworksProvider {\n    interface: string\n    network: string\n    tag: string\n    subnets: SubnetExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano le interfacce consumer del modulo.\n */\nexport class InterfaceNetworksConsumer {\n    interface: string\n    network: string\n    tag: string\n    subnets: SubnetExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano l'insieme di host presenti in un modulo.\n */\nexport class VirtualMachine {\n    virtual_machine: string\n    ports: VirtualMachinePorts[]\n}\n/**\n * Classe che contiene gli attributi che indicano le porte associate ad un host di un modulo.\n */\nexport class VirtualMachinePorts {\n    port: string\n    network: string\n    subnets: SubnetExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano la subnet connessa alla porte dell'host.\n * @see {VirtualMachinePorts}\n */\nexport class SubnetExport {\n    subnet: string;\n}\n\n/**\n * Classe che contiene gli attributi che indica un nodo all'interno dei node_templates.\n * @see {ModuleExport}\n */\nexport class NodeSimpleData {\n    type: NodeTypeExport\n    properties: any | null // future\n    interfaces: any | null // future\n    relationships: RelationshipsExport[]\n}\n\n/**\n * Classe che contiene gli attributi che indicano le relazioni generali.\n */\nexport class RelationshipsExport {\n    type: RelationshipsTypeExport\n    target: string\n}\n/**\n * Classe che contiene gli attributi che indicano i dati della porta all'interno dei node_templates.\n */\nexport class PortSimpleData {\n    type: PortTypeExport\n    relationships: RelationshipsExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano i dati delle network all'interno dei node_templates.\n */\nexport class NetworkSimpleData {\n    type: NetworkTypeExport\n    properties: PropertiesNSD\n}\n/**\n * Classe che contiene gli attributi che indicano le proprietà della network all'interno dei node_templates.\n * @see {NetworkSimpleData}\n */\nexport class PropertiesNSD {\n    openstack_config?: any | null // future\n    use_external_resource?: boolean | null // future\n    resource_id?: any | null // future\n}\n\n/**\n * Classe che contiene gli attributi che indicano i dati delle subnet all'interno dei node_templates.\n */\nexport class SubnetSimpleData {\n    type: SubnetTypeExport\n    relationships: RelationshipsExport[]\n    properties: PropertiesSSD\n}\n/**\n * Classe che contiene gli attributi che indicano le proprietà della subnet all'interno dei node_templates.\n * @see {NetworkSimpleData}\n */\nexport class PropertiesSSD {\n    subnet?: {\n        ip_version: string | number\n        cidr: string\n        enable_dhcp: boolean\n        gateway_ip?: any | null // future\n    }\n    openstack_config?: any | null // future\n    use_external_resource?: boolean | null // future\n    resource_id?: any | null // future\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"components/TabnavComponent.html":{"url":"components/TabnavComponent.html","title":"component - TabnavComponent","body":"\n                   \n\n\n\n\n\n  Componenti\n  \n  TabnavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/tabnav/tabnav.component.ts\n\n\n\n    \n        Descrizione\n    \n    \n        Componente utilizzata per la suddivisione dei tab a contenuto generico.\n\n    \n\n\n    \n        Implementa\n    \n    \n                    OnInit\n    \n\n\n\n    Metadati\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tabnav\n            \n\n            \n                styleUrls\n                ./tabnav.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./tabnav.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                activetab\n                            \n                            \n                                    Protected\n                                hasMultipleTag\n                            \n                        \n                    \n                \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                active\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Input\n                    \n                \n                \n                    \n                        \n                            \n                                alt_title\n                            \n                            \n                                element\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Costruttore\n        \n            \n                \n                    \nconstructor(cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Definito in src/app/components/tabnav/tabnav.component.ts:40\n                            \n                        \n\n                \n                    \n                            Costrutture TabnavComponent.\n\n                            \n                                    Parametri :\n                                    \n                                        \n                                            \n                                                Nome\n                                                    Tipo\n                                                Opzionale\n                                            \n                                        \n                                        \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Input\n        \n            \n                \n                    \n                        \n                        alt_title\n                    \n                \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                    Definito in src/app/components/tabnav/tabnav.component.ts:23\n                            \n                        \n                \n                    \n                        Variabile data in input che rappresenta il titolo alternativo dalla tab.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        element\n                    \n                \n                \n                    \n                        Tipo :         TabnavElement\n\n                    \n                \n                        \n                            \n                                    Definito in src/app/components/tabnav/tabnav.component.ts:28\n                            \n                        \n                \n                    \n                        Variabile data in input che contiene le caratteristiche/quantità della tab.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                    Definito in src/app/components/tabnav/tabnav.component.ts:18\n                            \n                        \n                \n                    \n                        Variabile data in input che rappresenta il titolo dalla tab.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        active\n                        \n                    \n                \n            \n            \n                \nactive(val: string | any)\n                \n            \n\n\n            \n                \n                    Definito in src/app/components/tabnav/tabnav.component.ts:63\n                \n            \n\n\n            \n                \n                    Funzione richiamata quando si seleziona una tab.\nSee {activetab}\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                            string | any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Definito in src/app/components/tabnav/tabnav.component.ts:53\n                \n            \n\n\n            \n                \n                    Funzione richiamata all'inizializzazione del componente.\nControlla che ci siano 1 o più tab.\nSetta la prima tab attiva, in modo da essere mostrata.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        activetab\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/tabnav/tabnav.component.ts:40\n                        \n                    \n\n            \n                \n                    Variabile che indica l'id della tab selezionata.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        hasMultipleTag\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                \n                    \n                        Valore predefinito : true\n                    \n                \n                    \n                        \n                                Definito in src/app/components/tabnav/tabnav.component.ts:34\n                        \n                    \n\n            \n                \n                    Variabile che indica se ci siano più tab.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectorRef, Component, Input, OnInit } from '@angular/core';\nimport { TabnavElement } from './tabnavType';\n\n/**\n * Componente utilizzata per la suddivisione dei tab a contenuto generico.\n */\n@Component({\n  selector: 'app-tabnav',\n  templateUrl: './tabnav.component.html',\n  styleUrls: ['./tabnav.component.sass']\n})\nexport class TabnavComponent implements OnInit {\n\n  /**\n   * Variabile data in input che rappresenta il titolo dalla tab.\n   * @type {string}\n   */\n  @Input() title: string;\n  /**\n   * Variabile data in input che rappresenta il titolo alternativo dalla tab.\n   * @type {string}\n   */\n  @Input() alt_title: string;\n  /**\n   * Variabile data in input che contiene le caratteristiche/quantità della tab.\n   * @type {TabnavElement}\n  */ \n  @Input() element: TabnavElement;\n\n  /**\n   * Variabile che indica se ci siano più tab.\n   * @type {boolean}\n   */\n  protected hasMultipleTag: boolean = true;\n\n  /**\n   * Variabile che indica l'id della tab selezionata.\n   * @type {string}\n   */\n  protected activetab: string;\n\n  /**\n   * Costrutture TabnavComponent.\n   * @param cdr \n   */\n  constructor(private cdr: ChangeDetectorRef) { }\n\n  /**\n   * Funzione richiamata all'inizializzazione del componente.\n   * Controlla che ci siano 1 o più tab.\n   * Setta la prima tab attiva, in modo da essere mostrata. \n   */\n  ngOnInit(): void {\n    this.hasMultipleTag = (this.element.element.length > 1) ? true : false;\n    this.active(this.element.element[0].id);\n  }\n\n  /**\n   * Funzione richiamata quando si seleziona una tab.\n   * @see {activetab} \n   * @param val \n   */\n  active(val: string | any) {\n    this.activetab = val;\n    this.cdr.detectChanges();\n  }\n\n}\n\n    \n\n    \n        \n\n    \n        \n            {{item.text}}\n        \n    \n\n\n\n\n    \n    \n        \n\n            \n\n        \n    \n\n\n    \n\n    \n                \n                    ./tabnav.component.sass\n                \n                .text-tab-selected\n    // font-size: 1.5em\n    color: white !important\n    font-weight: bold\n\n.text-tab-unselected\n    // fonr-size: 1em\n    color: #93a1ba !important\n\n.my-tab-content\n    width: 100%\n    height: 100%\n    overflow: hidden\n    word-break: break-all\n    padding-left: 2em\n    padding-right: 2em\n    padding-bottom: 10em\n\n.cursor-pointer\n    cursor: pointer\n    \n\n    \n        \n        \n            \n                Legenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento html con direttive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        {{item.text}}                                                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ComposerComponent', 'selector': 'app-composer'},{'name': 'ControlTemplate', 'selector': ''},{'name': 'DataInputComponent', 'selector': 'app-data-input'},{'name': 'DataInputV2Component', 'selector': 'app-data-input-v2'},{'name': 'DataItemComponent', 'selector': 'app-window-item'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HostComponent', 'selector': ''},{'name': 'HowToUseComponent', 'selector': 'app-how-to-use'},{'name': 'MirroringModuleInstanceComponent', 'selector': ''},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavbarElementComponent', 'selector': 'app-navbar-element'},{'name': 'NetworkComponent', 'selector': ''},{'name': 'OffcanvasComponent', 'selector': 'app-offcanvas'},{'name': 'ReteModuleComposerComponent', 'selector': 'app-rete-module-composer'},{'name': 'ReteModuleVisualizerComponent', 'selector': 'app-rete-module-visualizer'},{'name': 'ReteTheaterComposerComponent', 'selector': 'app-rete-theater-composer'},{'name': 'ReteTheaterVisualizerComponent', 'selector': 'app-rete-theater-visualizer'},{'name': 'SubnetComponent', 'selector': ''},{'name': 'TabnavComponent', 'selector': 'app-tabnav'},{'name': 'TheaterInternalServiceModuleInstanceComponent', 'selector': ''},{'name': 'TheaterModuleInstanceComponent', 'selector': ''},{'name': 'UnderbarComponent', 'selector': 'app-underbar'},{'name': 'VisualizerComponent', 'selector': 'app-displayer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TabnavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/TabnavElement.html":{"url":"classes/TabnavElement.html","title":"class - TabnavElement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  TabnavElement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/tabnav/tabnavType.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Elemento utilizzato come input dalla componente TabnavComponent\nSee {TabnavComponent}\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                element\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        element\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         TabnavItem[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/tabnav/tabnavType.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { TemplateRef } from \"@angular/core\";\n\n/**\n * Elemento utilizzato come input dalla componente TabnavComponent\n * @see {TabnavComponent}\n */\nexport class TabnavElement {\n    element: TabnavItem[];\n}\n\n/**\n * Elemento che rappresenta una singola tab.\n * @see {TabnavComponent}\n */\nexport class TabnavItem {\n    id: string;\n    text: string;\n    template: TemplateRef\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/TabnavItem.html":{"url":"classes/TabnavItem.html","title":"class - TabnavItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  TabnavItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/tabnav/tabnavType.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Elemento che rappresenta una singola tab.\nSee {TabnavComponent}\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                template\n                            \n                            \n                                text\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/tabnav/tabnavType.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        template\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     TemplateRef\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/tabnav/tabnavType.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        text\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/tabnav/tabnavType.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { TemplateRef } from \"@angular/core\";\n\n/**\n * Elemento utilizzato come input dalla componente TabnavComponent\n * @see {TabnavComponent}\n */\nexport class TabnavElement {\n    element: TabnavItem[];\n}\n\n/**\n * Elemento che rappresenta una singola tab.\n * @see {TabnavComponent}\n */\nexport class TabnavItem {\n    id: string;\n    text: string;\n    template: TemplateRef\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/TagCatalogueDTO.html":{"url":"classes/TagCatalogueDTO.html","title":"class - TagCatalogueDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  TagCatalogueDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsDTO/theaterDTO.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano il catalogo di riferimento di un teatro.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/theaterDTO.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/theaterDTO.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/theaterDTO.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ModuleInstanceDTO, TheaterInstanceDTO } from \"./moduleDTO\"\n\n/**\n * Classe che contiene gli attributi che indicano il catalogo di riferimento di un teatro.\n */\nexport class TagCatalogueDTO {\n    description: string\n    id: string | number\n    name: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano lo stato di un teatro.\n */\nexport class TheatreStatusDTO {\n    code: string\n    id: string | number\n    name: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano un elemento nella sequenza di deploy.\n */\nexport class DeployInstanceDTO {\n    moduleInstanceConfigurationUUID?: string\n    moduleInstanceName: string\n    moduleInstanceUUID: string\n    moduleUUID: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano il blueprint di un teatro.\n */\nexport class BlueprintFileDTO {\n    description: string\n    imports: string[]\n    node_templates: {[name:string]:ModuleInstanceDTO|TheaterInstanceDTO}\n    tosca_definitions_version: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano il mapping nome-modulo.\n */\nexport class NameMappingDTO {\n    display_name: string\n    module_instance_name: string\n    module_name: string\n    node_template_name: string\n}\n/**\n * Classe che contiene gli attributi che indica l'array dei mapping nome-modulo.\n */\nexport class EntityNameMappingFileDTO {\n    name_mapping: NameMappingDTO[]\n}\n\n/**\n * Classe che contiene gli attributi che indicano il teaatro.\n */\nexport class TheaterDTO {\n    author: string\n    blueprintFile: BlueprintFileDTO\n    blueprintUUID: string | number\n    createdBy: string\n    createdDate: string\n    deploymentSequence: {[index:string]:DeployInstanceDTO} //tosee\n    description: string\n    entityNameMappingFile: EntityNameMappingFileDTO\n    id: string | number\n    isLocked: boolean\n    lastModifiedBy: string\n    lastModifiedDate: string\n    lockAcquiredTimestamp: string\n    lockLastUserAcquiring: string\n    lockReleasedTimestamp: string\n    name: string\n    status: TheatreStatusDTO\n    tags: TagCatalogueDTO[]\n    uuid: string\n    version: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/TagTIP.html":{"url":"classes/TagTIP.html","title":"class - TagTIP","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  TagTIP\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsDTO/moduleDTO.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano un tag.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                tag\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        tag\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:211\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PageableDTO, SortDTO } from './elementDTO';\nimport { NetworkDTO } from './networkDTO';\nimport { TheaterDTO } from './theaterDTO';\n\n/**\n * Classe che contiene gli attributi che indicano l'insieme dei moduli ritornati dal teatro.\n */\nexport class ModuleListDTO {\n    content: SimpleModuleDTO[]\n    pageable: PageableDTO\n    last: boolean\n    totalPages: string | number\n    totalElements: string | number\n    size: string | number\n    number: string | number\n    sort: SortDTO\n    numberOfElements: string | number\n    first: boolean\n    empty: boolean\n}\n\n/**\n * Classe che contiene gli attributi che indica il catalogo del tipo.\n */\nexport class TypesCatalogueDTO {\n    group: string\n    id: string | number\n    parentId: {}\n    value: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano la classificazione del modulo.\n */\nexport class ModuleClassificationDTO {\n    blueprintType: string\n    category: string\n    expectedInstanceType: string\n    id: string | number\n    mcClass: string\n    type: string\n    uuid: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano un parametro generico.\n */\nexport class GenericParameterDTO {\n    type: string\n    default: string\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano i parametri di configurazione di un modulto.\n */\nexport class ConfigurationTemplateDTO {\n    anchor_parameters: { [name: string]: GenericParameterDTO | string }\n    instance_parameters: { [name: string]: GenericParameterDTO }\n    structural_parameters: { [name: string]: GenericParameterDTO }\n    fixed_parameters: { [name: string]: GenericParameterDTO }\n    control_parameters: { [name: string]: GenericParameterDTO }\n    infrastructure_parameters: { [name: string]: GenericParameterDTO }\n    module: string\n    description: string\n    category: string\n    version: string | number\n    platform: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano la modalità di un modulo.\n */\nexport class ModuleModeDTO {\n    code: string\n    id: string | number\n    name: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano lo stato di un modulo.\n */\nexport class ModuleStatusDTO {\n    descriptionCode: string\n    id: string | number\n    name: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le statitistiche di un modulo.\n */\nexport class StatisticItemDTO {\n    error: string | number\n    updated: string | number\n    inserted: string | number\n}\n\n/**\n * Classe che contiene gli attributi che indicano il modulo (simple - in dipendenza del teatro).\n */\nexport class SimpleModuleDTO {\n    createdBy: string\n    createdDate: string\n    description: string\n    id: string | number\n    isLocked: boolean\n    lastModifiedBy: string\n    lastModifiedDate: string\n    lockAcquiredTimestamp: string\n    lockLastUserAcquiring: string\n    lockReleasedTimestamp: string\n    name: string\n    status: ModuleStatusDTO\n    type?: string | any\n    uuid: string\n    version: string | number\n}\n\n/**\n * Classe che contiene gli attributi che indicano il modulo (complex - ritorato da call appostita).\n * @extends {SimpleModuleDTO}\n */\nexport class ModuleDTO extends SimpleModuleDTO {\n    attachments: string[]\n    author: string\n    capabilities: { [name: string]: string }\n    catalog1: TypesCatalogueDTO\n    catalog2: TypesCatalogueDTO\n    catalog3: TypesCatalogueDTO\n    classification: ModuleClassificationDTO\n    configurationTemplate: ConfigurationTemplateDTO\n    detailProperties: {}\n    input: { [name: string]: string }\n    output: { [name: string]: string }\n    mode: ModuleModeDTO\n    statistics: { [name: string]: StatisticItemDTO | string | number }\n    tags: []\n}\n\n/**\n * Classe che contiene gli attributi che indicano le interfacce esposte da un modulo.\n */\nexport class ModuleNetworkInterfaceDTO {\n    id: string | number\n    label: string\n    module: ModuleDTO\n    network: NetworkDTO\n    nodeName: string\n    type: string\n    uuid: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le connessioni interfaccia-modulo.\n */\nexport class ConsumerInterfaceLinkDTO {\n    local_interface: string\n    module_instance: string\n    remote_interface: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà dell'istanza di un modulo all'interno del node_templates.\n */\nexport class ModuleInstancePropertiesDTO {\n    area: string\n    description: string\n    module: string\n    version: string | number\n    sequence: string | number\n    consumer_interfaces_link: ConsumerInterfaceLinkDTO[]\n}\n\n\n/**\n * Classe che contiene gli attributi che indicano l'area di appartenenza di un modulo (complex).\n */\nexport class AreaDTO {\n    id: string | number;\n    uuid: string;\n    name: string;\n    description: string;\n    theater: TheaterDTO;\n    deleted: boolean | string;\n}\n\n/**\n * Classe che contiene gli attributi che indicano l'area di appartenenza di un modulo (simple).\n */\nexport class SimpleAreaDTO {\n    area: string\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà dell'istanza di un teatro all'interno del node_templates.\n */\nexport class TheaterInstancePropertiesDTO {\n    mode: string\n    tags: TagTIP[]\n    areas: SimpleAreaDTO[]\n    author: string\n    version: string | number\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano un tag.\n */\nexport class TagTIP{\n    tag: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano in via generale le caratteristiche di un elemento che deve essere presente nel node_templates.\n */\nexport class ElementIntoTheaterDTO {  // goes into map in blueprint [name:string]: Module...\n    properties: ModuleInstancePropertiesDTO | TheaterInstancePropertiesDTO\n    type: string\n}\n\n\n/**\n * Classe che contiene gli attributi che indicano le caratteristiche di un teatro presente nel node_templates.\n */\nexport class ModuleInstanceDTO {\n    properties: ModuleInstancePropertiesDTO\n    type: string\n}\n/**\n * Classe che contiene gli attributi che indicano le caratteristiche di un modulo presente nel node_templates.\n */\nexport class TheaterInstanceDTO {\n    properties: TheaterInstancePropertiesDTO\n    type: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/TagsExport.html":{"url":"classes/TagsExport.html","title":"class - TagsExport","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  TagsExport\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsExport/theaterExport.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano i tag nelle proprietà del teatro.\nSee {PropertiesTSD}\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                tag\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        tag\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/theaterExport.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ModeTypeExport, ModuleTypeExport, TheaterTypeExport, ToscaDefinitionType } from \"./TypeExport\"\n\n/**\n * Classe utilizzata per l'export. \n * Contiene le informazioni generali per il teatro che devono esserci nello standard Tosca.\n */\nexport class TheaterExport {\n    tosca_definitions_version: ToscaDefinitionType\n    description: string\n    imports: string[]\n    node_templates: { [name: string]: TheaterSimpleData | ModuleInstanceSimpleData }\n}\n/**\n * Classe che contiene gli attributi che indicano il teatro all'interno dei node_templates.\n */\nexport class TheaterSimpleData {\n    type: TheaterTypeExport\n    properties: PropertiesTSD\n}\n/**\n * Classe che contiene gli attributi che indicano le proprietà del teatro.\n */\nexport class PropertiesTSD {\n    version: string | number\n    description: string\n    mode: ModeTypeExport\n    author: string\n    tags: TagsExport[]\n    areas: AreaExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano i tag nelle proprietà del teatro.\n * @see {PropertiesTSD}\n */\nexport class TagsExport {\n    tag: string\n}\n/**\n * Classe che contiene gli attributi che indicano le aree nelle proprietà del teatr.\n * @see {PropertiesTSD}\n */\nexport class AreaExport {\n    area: string\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano il modulo all'interno dei node_modules.\n */\nexport class ModuleInstanceSimpleData {\n    type: ModuleTypeExport\n    properties: PropertiesMISD\n}\n/**\n * Classe che contiene gli attributi che indicano le propeitò del modulo all'interno dei node_templates.\n */\nexport class PropertiesMISD{\n    module: string\n    version: string | number\n    area: string\n    sequence: number\n    sources?: SourceExport[]\n    consumer_interface_link: ConsumerInterfaceLinkExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano le porte di ingresso del modulo all'interno dei node_templates.\n */\nexport class SourceExport{\n    module_instance: string\n    host:string\n    interfaces: string[]\n}\n/**\n * Classe che contiene gli attributi che indicano i collegamenti e relazioni intramodulo con le varie interfacce.\n */\nexport class ConsumerInterfaceLinkExport{\n    local_interface: string\n    module_interface:string\n    remote_interface:string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/TheaterApplication.html":{"url":"classes/TheaterApplication.html","title":"class - TheaterApplication","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  TheaterApplication\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsApplication/applicationModels.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        TheaterDTO\n            \n\n            \n                Implementa\n            \n            \n                            TheaterTopology\n            \n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                connection\n                            \n                            \n                                elements\n                            \n                            \n                                properties\n                            \n                            \n                                topology\n                            \n                            \n                                    Opzionale\n                                validateObject\n                            \n                            \n                                author\n                            \n                            \n                                blueprintFile\n                            \n                            \n                                blueprintUUID\n                            \n                            \n                                createdBy\n                            \n                            \n                                createdDate\n                            \n                            \n                                deploymentSequence\n                            \n                            \n                                description\n                            \n                            \n                                entityNameMappingFile\n                            \n                            \n                                id\n                            \n                            \n                                isLocked\n                            \n                            \n                                lastModifiedBy\n                            \n                            \n                                lastModifiedDate\n                            \n                            \n                                lockAcquiredTimestamp\n                            \n                            \n                                lockLastUserAcquiring\n                            \n                            \n                                lockReleasedTimestamp\n                            \n                            \n                                name\n                            \n                            \n                                status\n                            \n                            \n                                tags\n                            \n                            \n                                uuid\n                            \n                            \n                                version\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        connection\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ReteConnection[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsApplication/applicationModels.ts:99\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        elements\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     literal type\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsApplication/applicationModels.ts:98\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        properties\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         TheaterInstancePropertiesDTO\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsApplication/applicationModels.ts:101\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        topology\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         TheaterTopology\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsApplication/applicationModels.ts:102\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        validateObject\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                \n                    \n                        Valore predefinito : \"theater\"\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsApplication/applicationModels.ts:104\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        author\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         TheaterDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         TheaterDTO:61\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        blueprintFile\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         BlueprintFileDTO\n\n                    \n                \n                        \n                            \n                                ereditato da         TheaterDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         TheaterDTO:62\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        blueprintUUID\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                        \n                            \n                                ereditato da         TheaterDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         TheaterDTO:63\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         TheaterDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         TheaterDTO:64\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdDate\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         TheaterDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         TheaterDTO:65\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deploymentSequence\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     literal type\n\n                    \n                \n                        \n                            \n                                ereditato da         TheaterDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         TheaterDTO:66\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         TheaterDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         TheaterDTO:67\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        entityNameMappingFile\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         EntityNameMappingFileDTO\n\n                    \n                \n                        \n                            \n                                ereditato da         TheaterDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         TheaterDTO:68\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                        \n                            \n                                ereditato da         TheaterDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         TheaterDTO:69\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLocked\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                        \n                            \n                                ereditato da         TheaterDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         TheaterDTO:70\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastModifiedBy\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         TheaterDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         TheaterDTO:71\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastModifiedDate\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         TheaterDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         TheaterDTO:72\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lockAcquiredTimestamp\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         TheaterDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         TheaterDTO:73\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lockLastUserAcquiring\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         TheaterDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         TheaterDTO:74\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lockReleasedTimestamp\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         TheaterDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         TheaterDTO:75\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         TheaterDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         TheaterDTO:76\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         TheatreStatusDTO\n\n                    \n                \n                        \n                            \n                                ereditato da         TheaterDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         TheaterDTO:77\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tags\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         TagCatalogueDTO[]\n\n                    \n                \n                        \n                            \n                                ereditato da         TheaterDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         TheaterDTO:78\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uuid\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         TheaterDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         TheaterDTO:79\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         TheaterDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         TheaterDTO:80\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ReteHostInfo } from \"src/app/rete-settings/nodes/rete-nodes/host/hostNode\";\nimport { ReteNetworkInfo } from \"src/app/rete-settings/nodes/rete-nodes/network/networkNode\";\nimport { ReteSubnetInfo } from \"src/app/rete-settings/nodes/rete-nodes/subnet/subnetNode\";\nimport { ReteMirroringModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/mirroringModuleInstance/mirroringModuleInstanceNode\";\nimport { ReteTheaterInternalServiceModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/theaterInternalServiceModuleInstance/theaterInternalServiceModuleInstanceNode\";\nimport { ReteTheaterModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/theaterModuleInstance/theaterModuleInstanceNode\";\nimport { FlavorBasicInfo } from \"../modelsDTO/falvorDTO\";\nimport { HostModuleDTO } from \"../modelsDTO/hostDTO\";\nimport { ModuleNetworkInterfaceDTO, ModuleInstancePropertiesDTO, SimpleModuleDTO, TheaterInstancePropertiesDTO, ModuleInstanceDTO, ModuleDTO, SimpleAreaDTO, AreaDTO } from \"../modelsDTO/moduleDTO\";\nimport { TheaterDTO } from \"../modelsDTO/theaterDTO\";\n\n\nexport interface CommonModule {\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n}\n\n\n/**\n * Classe contenente gli attributi utilizzati per le operazioni che coinvolgono i moduli.\n * ps. Questa struttura è prettamente utilizzata nella chiamata relativa al singolo modulo.\n */\nexport class ModuleApplication extends ModuleDTO implements CommonModule {\n    imports: string[] // perchè nell'export yaml è previsto\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n    // serve per validare il json risultante dal parsing del theaterApplication\n    validateObject?: string = \"module\";\n}\n// PER IMPLEMENTAZIONI FUTURE, PER COERENZA, PRENDERE DIRETTAMENTE I SINGOLI NODI DALLA CHIAMATA ESCLUSIVA E NON DA QUELLA CHE RESTITUISCE TUTTI I TEATRI\n/**\n * Classe contenente gli attributi utilizzati per le operazioni che coinvolgono i moduli.\n * ps. Questa struttura è prettamente utilizzata nella chiamata che prende tutti i moduli del teatro.\n */\nexport class SimpleModuleApplication extends SimpleModuleDTO implements CommonModule {\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n}\n\n\nexport class ReteConnection {\n    from: string;\n    port_src: string;\n    to: string;\n    port_dst: string;\n}\n\nexport interface TopologyList {\n    rete: any;\n    topology?: TopologyElement\n}\nexport class TopologyElement {\n    elements: { [name: string]: any };\n    connection: ReteConnection[]\n}\n\n// apptype module topology\n\nexport class NodeTopologyElement implements TopologyElement {\n    elements: { [hostName: string]: ReteHostInfo | ReteSubnetInfo | ReteNetworkInfo };\n    connection: ReteConnection[]\n}\n\nexport interface ModuleTopology extends TopologyList {\n    rete: ReteMirroringModuleInstanceInfo | ReteTheaterInternalServiceModuleInstanceInfo | ReteTheaterModuleInstanceInfo\n    topology: NodeTopologyElement;\n}\n\nexport class ModuleInstance extends ModuleInstanceDTO implements ModuleTopology {\n    // moduleTopology data\n    rete: ReteTheaterModuleInstanceInfo | ReteTheaterInternalServiceModuleInstanceInfo | ReteMirroringModuleInstanceInfo;\n    topology: NodeTopologyElement;\n    // other data\n    moduleInfo: SimpleModuleApplication\n}\n\n// apptype theater theater\n\nexport interface TheaterTopology extends TopologyElement {\n    elements: { [hostName: string]: ModuleInstance };\n    connection: ReteConnection[];\n}\n\nexport class TheaterApplication extends TheaterDTO implements TheaterTopology {\n    // theaterTopology data\n    elements: { [hostName: string]: ModuleInstance; };\n    connection: ReteConnection[];\n    // other data\n    properties: TheaterInstancePropertiesDTO;\n    topology: TheaterTopology;\n    // serve per validare il json risultante dal parsing del theaterApplication\n    validateObject?: string = \"theater\";\n}\n\nexport class AreaApplication extends AreaDTO {\n    color?: string;\n}\nexport class AreaColorDTO extends SimpleAreaDTO {\n    color: string;\n}\n\n\nexport class FlavorApplication extends FlavorBasicInfo {\n    flavorName: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/TheaterDTO.html":{"url":"classes/TheaterDTO.html","title":"class - TheaterDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  TheaterDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsDTO/theaterDTO.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano il teaatro.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                author\n                            \n                            \n                                blueprintFile\n                            \n                            \n                                blueprintUUID\n                            \n                            \n                                createdBy\n                            \n                            \n                                createdDate\n                            \n                            \n                                deploymentSequence\n                            \n                            \n                                description\n                            \n                            \n                                entityNameMappingFile\n                            \n                            \n                                id\n                            \n                            \n                                isLocked\n                            \n                            \n                                lastModifiedBy\n                            \n                            \n                                lastModifiedDate\n                            \n                            \n                                lockAcquiredTimestamp\n                            \n                            \n                                lockLastUserAcquiring\n                            \n                            \n                                lockReleasedTimestamp\n                            \n                            \n                                name\n                            \n                            \n                                status\n                            \n                            \n                                tags\n                            \n                            \n                                uuid\n                            \n                            \n                                version\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        author\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/theaterDTO.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        blueprintFile\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         BlueprintFileDTO\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/theaterDTO.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        blueprintUUID\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/theaterDTO.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/theaterDTO.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdDate\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/theaterDTO.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deploymentSequence\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     literal type\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/theaterDTO.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/theaterDTO.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        entityNameMappingFile\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         EntityNameMappingFileDTO\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/theaterDTO.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/theaterDTO.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLocked\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/theaterDTO.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastModifiedBy\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/theaterDTO.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastModifiedDate\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/theaterDTO.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lockAcquiredTimestamp\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/theaterDTO.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lockLastUserAcquiring\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/theaterDTO.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lockReleasedTimestamp\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/theaterDTO.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/theaterDTO.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         TheatreStatusDTO\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/theaterDTO.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tags\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         TagCatalogueDTO[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/theaterDTO.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uuid\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/theaterDTO.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/theaterDTO.ts:80\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ModuleInstanceDTO, TheaterInstanceDTO } from \"./moduleDTO\"\n\n/**\n * Classe che contiene gli attributi che indicano il catalogo di riferimento di un teatro.\n */\nexport class TagCatalogueDTO {\n    description: string\n    id: string | number\n    name: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano lo stato di un teatro.\n */\nexport class TheatreStatusDTO {\n    code: string\n    id: string | number\n    name: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano un elemento nella sequenza di deploy.\n */\nexport class DeployInstanceDTO {\n    moduleInstanceConfigurationUUID?: string\n    moduleInstanceName: string\n    moduleInstanceUUID: string\n    moduleUUID: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano il blueprint di un teatro.\n */\nexport class BlueprintFileDTO {\n    description: string\n    imports: string[]\n    node_templates: {[name:string]:ModuleInstanceDTO|TheaterInstanceDTO}\n    tosca_definitions_version: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano il mapping nome-modulo.\n */\nexport class NameMappingDTO {\n    display_name: string\n    module_instance_name: string\n    module_name: string\n    node_template_name: string\n}\n/**\n * Classe che contiene gli attributi che indica l'array dei mapping nome-modulo.\n */\nexport class EntityNameMappingFileDTO {\n    name_mapping: NameMappingDTO[]\n}\n\n/**\n * Classe che contiene gli attributi che indicano il teaatro.\n */\nexport class TheaterDTO {\n    author: string\n    blueprintFile: BlueprintFileDTO\n    blueprintUUID: string | number\n    createdBy: string\n    createdDate: string\n    deploymentSequence: {[index:string]:DeployInstanceDTO} //tosee\n    description: string\n    entityNameMappingFile: EntityNameMappingFileDTO\n    id: string | number\n    isLocked: boolean\n    lastModifiedBy: string\n    lastModifiedDate: string\n    lockAcquiredTimestamp: string\n    lockLastUserAcquiring: string\n    lockReleasedTimestamp: string\n    name: string\n    status: TheatreStatusDTO\n    tags: TagCatalogueDTO[]\n    uuid: string\n    version: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/TheaterExport.html":{"url":"classes/TheaterExport.html","title":"class - TheaterExport","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  TheaterExport\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsExport/theaterExport.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe utilizzata per l'export.\nContiene le informazioni generali per il teatro che devono esserci nello standard Tosca.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                imports\n                            \n                            \n                                node_templates\n                            \n                            \n                                tosca_definitions_version\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/theaterExport.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        imports\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/theaterExport.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        node_templates\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     literal type\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/theaterExport.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tosca_definitions_version\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ToscaDefinitionType\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/theaterExport.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ModeTypeExport, ModuleTypeExport, TheaterTypeExport, ToscaDefinitionType } from \"./TypeExport\"\n\n/**\n * Classe utilizzata per l'export. \n * Contiene le informazioni generali per il teatro che devono esserci nello standard Tosca.\n */\nexport class TheaterExport {\n    tosca_definitions_version: ToscaDefinitionType\n    description: string\n    imports: string[]\n    node_templates: { [name: string]: TheaterSimpleData | ModuleInstanceSimpleData }\n}\n/**\n * Classe che contiene gli attributi che indicano il teatro all'interno dei node_templates.\n */\nexport class TheaterSimpleData {\n    type: TheaterTypeExport\n    properties: PropertiesTSD\n}\n/**\n * Classe che contiene gli attributi che indicano le proprietà del teatro.\n */\nexport class PropertiesTSD {\n    version: string | number\n    description: string\n    mode: ModeTypeExport\n    author: string\n    tags: TagsExport[]\n    areas: AreaExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano i tag nelle proprietà del teatro.\n * @see {PropertiesTSD}\n */\nexport class TagsExport {\n    tag: string\n}\n/**\n * Classe che contiene gli attributi che indicano le aree nelle proprietà del teatr.\n * @see {PropertiesTSD}\n */\nexport class AreaExport {\n    area: string\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano il modulo all'interno dei node_modules.\n */\nexport class ModuleInstanceSimpleData {\n    type: ModuleTypeExport\n    properties: PropertiesMISD\n}\n/**\n * Classe che contiene gli attributi che indicano le propeitò del modulo all'interno dei node_templates.\n */\nexport class PropertiesMISD{\n    module: string\n    version: string | number\n    area: string\n    sequence: number\n    sources?: SourceExport[]\n    consumer_interface_link: ConsumerInterfaceLinkExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano le porte di ingresso del modulo all'interno dei node_templates.\n */\nexport class SourceExport{\n    module_instance: string\n    host:string\n    interfaces: string[]\n}\n/**\n * Classe che contiene gli attributi che indicano i collegamenti e relazioni intramodulo con le varie interfacce.\n */\nexport class ConsumerInterfaceLinkExport{\n    local_interface: string\n    module_interface:string\n    remote_interface:string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/TheaterInstanceDTO.html":{"url":"classes/TheaterInstanceDTO.html","title":"class - TheaterInstanceDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  TheaterInstanceDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsDTO/moduleDTO.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano le caratteristiche di un modulo presente nel node_templates.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                properties\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        properties\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         TheaterInstancePropertiesDTO\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:234\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:235\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PageableDTO, SortDTO } from './elementDTO';\nimport { NetworkDTO } from './networkDTO';\nimport { TheaterDTO } from './theaterDTO';\n\n/**\n * Classe che contiene gli attributi che indicano l'insieme dei moduli ritornati dal teatro.\n */\nexport class ModuleListDTO {\n    content: SimpleModuleDTO[]\n    pageable: PageableDTO\n    last: boolean\n    totalPages: string | number\n    totalElements: string | number\n    size: string | number\n    number: string | number\n    sort: SortDTO\n    numberOfElements: string | number\n    first: boolean\n    empty: boolean\n}\n\n/**\n * Classe che contiene gli attributi che indica il catalogo del tipo.\n */\nexport class TypesCatalogueDTO {\n    group: string\n    id: string | number\n    parentId: {}\n    value: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano la classificazione del modulo.\n */\nexport class ModuleClassificationDTO {\n    blueprintType: string\n    category: string\n    expectedInstanceType: string\n    id: string | number\n    mcClass: string\n    type: string\n    uuid: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano un parametro generico.\n */\nexport class GenericParameterDTO {\n    type: string\n    default: string\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano i parametri di configurazione di un modulto.\n */\nexport class ConfigurationTemplateDTO {\n    anchor_parameters: { [name: string]: GenericParameterDTO | string }\n    instance_parameters: { [name: string]: GenericParameterDTO }\n    structural_parameters: { [name: string]: GenericParameterDTO }\n    fixed_parameters: { [name: string]: GenericParameterDTO }\n    control_parameters: { [name: string]: GenericParameterDTO }\n    infrastructure_parameters: { [name: string]: GenericParameterDTO }\n    module: string\n    description: string\n    category: string\n    version: string | number\n    platform: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano la modalità di un modulo.\n */\nexport class ModuleModeDTO {\n    code: string\n    id: string | number\n    name: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano lo stato di un modulo.\n */\nexport class ModuleStatusDTO {\n    descriptionCode: string\n    id: string | number\n    name: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le statitistiche di un modulo.\n */\nexport class StatisticItemDTO {\n    error: string | number\n    updated: string | number\n    inserted: string | number\n}\n\n/**\n * Classe che contiene gli attributi che indicano il modulo (simple - in dipendenza del teatro).\n */\nexport class SimpleModuleDTO {\n    createdBy: string\n    createdDate: string\n    description: string\n    id: string | number\n    isLocked: boolean\n    lastModifiedBy: string\n    lastModifiedDate: string\n    lockAcquiredTimestamp: string\n    lockLastUserAcquiring: string\n    lockReleasedTimestamp: string\n    name: string\n    status: ModuleStatusDTO\n    type?: string | any\n    uuid: string\n    version: string | number\n}\n\n/**\n * Classe che contiene gli attributi che indicano il modulo (complex - ritorato da call appostita).\n * @extends {SimpleModuleDTO}\n */\nexport class ModuleDTO extends SimpleModuleDTO {\n    attachments: string[]\n    author: string\n    capabilities: { [name: string]: string }\n    catalog1: TypesCatalogueDTO\n    catalog2: TypesCatalogueDTO\n    catalog3: TypesCatalogueDTO\n    classification: ModuleClassificationDTO\n    configurationTemplate: ConfigurationTemplateDTO\n    detailProperties: {}\n    input: { [name: string]: string }\n    output: { [name: string]: string }\n    mode: ModuleModeDTO\n    statistics: { [name: string]: StatisticItemDTO | string | number }\n    tags: []\n}\n\n/**\n * Classe che contiene gli attributi che indicano le interfacce esposte da un modulo.\n */\nexport class ModuleNetworkInterfaceDTO {\n    id: string | number\n    label: string\n    module: ModuleDTO\n    network: NetworkDTO\n    nodeName: string\n    type: string\n    uuid: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le connessioni interfaccia-modulo.\n */\nexport class ConsumerInterfaceLinkDTO {\n    local_interface: string\n    module_instance: string\n    remote_interface: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà dell'istanza di un modulo all'interno del node_templates.\n */\nexport class ModuleInstancePropertiesDTO {\n    area: string\n    description: string\n    module: string\n    version: string | number\n    sequence: string | number\n    consumer_interfaces_link: ConsumerInterfaceLinkDTO[]\n}\n\n\n/**\n * Classe che contiene gli attributi che indicano l'area di appartenenza di un modulo (complex).\n */\nexport class AreaDTO {\n    id: string | number;\n    uuid: string;\n    name: string;\n    description: string;\n    theater: TheaterDTO;\n    deleted: boolean | string;\n}\n\n/**\n * Classe che contiene gli attributi che indicano l'area di appartenenza di un modulo (simple).\n */\nexport class SimpleAreaDTO {\n    area: string\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà dell'istanza di un teatro all'interno del node_templates.\n */\nexport class TheaterInstancePropertiesDTO {\n    mode: string\n    tags: TagTIP[]\n    areas: SimpleAreaDTO[]\n    author: string\n    version: string | number\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano un tag.\n */\nexport class TagTIP{\n    tag: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano in via generale le caratteristiche di un elemento che deve essere presente nel node_templates.\n */\nexport class ElementIntoTheaterDTO {  // goes into map in blueprint [name:string]: Module...\n    properties: ModuleInstancePropertiesDTO | TheaterInstancePropertiesDTO\n    type: string\n}\n\n\n/**\n * Classe che contiene gli attributi che indicano le caratteristiche di un teatro presente nel node_templates.\n */\nexport class ModuleInstanceDTO {\n    properties: ModuleInstancePropertiesDTO\n    type: string\n}\n/**\n * Classe che contiene gli attributi che indicano le caratteristiche di un modulo presente nel node_templates.\n */\nexport class TheaterInstanceDTO {\n    properties: TheaterInstancePropertiesDTO\n    type: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/TheaterInstancePropertiesDTO.html":{"url":"classes/TheaterInstancePropertiesDTO.html","title":"class - TheaterInstancePropertiesDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  TheaterInstancePropertiesDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsDTO/moduleDTO.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano le proprietà dell'istanza di un teatro all'interno del node_templates.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                areas\n                            \n                            \n                                author\n                            \n                            \n                                description\n                            \n                            \n                                mode\n                            \n                            \n                                tags\n                            \n                            \n                                version\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        areas\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     SimpleAreaDTO[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:201\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        author\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:202\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:204\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:199\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tags\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         TagTIP[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:200\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:203\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PageableDTO, SortDTO } from './elementDTO';\nimport { NetworkDTO } from './networkDTO';\nimport { TheaterDTO } from './theaterDTO';\n\n/**\n * Classe che contiene gli attributi che indicano l'insieme dei moduli ritornati dal teatro.\n */\nexport class ModuleListDTO {\n    content: SimpleModuleDTO[]\n    pageable: PageableDTO\n    last: boolean\n    totalPages: string | number\n    totalElements: string | number\n    size: string | number\n    number: string | number\n    sort: SortDTO\n    numberOfElements: string | number\n    first: boolean\n    empty: boolean\n}\n\n/**\n * Classe che contiene gli attributi che indica il catalogo del tipo.\n */\nexport class TypesCatalogueDTO {\n    group: string\n    id: string | number\n    parentId: {}\n    value: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano la classificazione del modulo.\n */\nexport class ModuleClassificationDTO {\n    blueprintType: string\n    category: string\n    expectedInstanceType: string\n    id: string | number\n    mcClass: string\n    type: string\n    uuid: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano un parametro generico.\n */\nexport class GenericParameterDTO {\n    type: string\n    default: string\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano i parametri di configurazione di un modulto.\n */\nexport class ConfigurationTemplateDTO {\n    anchor_parameters: { [name: string]: GenericParameterDTO | string }\n    instance_parameters: { [name: string]: GenericParameterDTO }\n    structural_parameters: { [name: string]: GenericParameterDTO }\n    fixed_parameters: { [name: string]: GenericParameterDTO }\n    control_parameters: { [name: string]: GenericParameterDTO }\n    infrastructure_parameters: { [name: string]: GenericParameterDTO }\n    module: string\n    description: string\n    category: string\n    version: string | number\n    platform: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano la modalità di un modulo.\n */\nexport class ModuleModeDTO {\n    code: string\n    id: string | number\n    name: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano lo stato di un modulo.\n */\nexport class ModuleStatusDTO {\n    descriptionCode: string\n    id: string | number\n    name: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le statitistiche di un modulo.\n */\nexport class StatisticItemDTO {\n    error: string | number\n    updated: string | number\n    inserted: string | number\n}\n\n/**\n * Classe che contiene gli attributi che indicano il modulo (simple - in dipendenza del teatro).\n */\nexport class SimpleModuleDTO {\n    createdBy: string\n    createdDate: string\n    description: string\n    id: string | number\n    isLocked: boolean\n    lastModifiedBy: string\n    lastModifiedDate: string\n    lockAcquiredTimestamp: string\n    lockLastUserAcquiring: string\n    lockReleasedTimestamp: string\n    name: string\n    status: ModuleStatusDTO\n    type?: string | any\n    uuid: string\n    version: string | number\n}\n\n/**\n * Classe che contiene gli attributi che indicano il modulo (complex - ritorato da call appostita).\n * @extends {SimpleModuleDTO}\n */\nexport class ModuleDTO extends SimpleModuleDTO {\n    attachments: string[]\n    author: string\n    capabilities: { [name: string]: string }\n    catalog1: TypesCatalogueDTO\n    catalog2: TypesCatalogueDTO\n    catalog3: TypesCatalogueDTO\n    classification: ModuleClassificationDTO\n    configurationTemplate: ConfigurationTemplateDTO\n    detailProperties: {}\n    input: { [name: string]: string }\n    output: { [name: string]: string }\n    mode: ModuleModeDTO\n    statistics: { [name: string]: StatisticItemDTO | string | number }\n    tags: []\n}\n\n/**\n * Classe che contiene gli attributi che indicano le interfacce esposte da un modulo.\n */\nexport class ModuleNetworkInterfaceDTO {\n    id: string | number\n    label: string\n    module: ModuleDTO\n    network: NetworkDTO\n    nodeName: string\n    type: string\n    uuid: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le connessioni interfaccia-modulo.\n */\nexport class ConsumerInterfaceLinkDTO {\n    local_interface: string\n    module_instance: string\n    remote_interface: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà dell'istanza di un modulo all'interno del node_templates.\n */\nexport class ModuleInstancePropertiesDTO {\n    area: string\n    description: string\n    module: string\n    version: string | number\n    sequence: string | number\n    consumer_interfaces_link: ConsumerInterfaceLinkDTO[]\n}\n\n\n/**\n * Classe che contiene gli attributi che indicano l'area di appartenenza di un modulo (complex).\n */\nexport class AreaDTO {\n    id: string | number;\n    uuid: string;\n    name: string;\n    description: string;\n    theater: TheaterDTO;\n    deleted: boolean | string;\n}\n\n/**\n * Classe che contiene gli attributi che indicano l'area di appartenenza di un modulo (simple).\n */\nexport class SimpleAreaDTO {\n    area: string\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà dell'istanza di un teatro all'interno del node_templates.\n */\nexport class TheaterInstancePropertiesDTO {\n    mode: string\n    tags: TagTIP[]\n    areas: SimpleAreaDTO[]\n    author: string\n    version: string | number\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano un tag.\n */\nexport class TagTIP{\n    tag: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano in via generale le caratteristiche di un elemento che deve essere presente nel node_templates.\n */\nexport class ElementIntoTheaterDTO {  // goes into map in blueprint [name:string]: Module...\n    properties: ModuleInstancePropertiesDTO | TheaterInstancePropertiesDTO\n    type: string\n}\n\n\n/**\n * Classe che contiene gli attributi che indicano le caratteristiche di un teatro presente nel node_templates.\n */\nexport class ModuleInstanceDTO {\n    properties: ModuleInstancePropertiesDTO\n    type: string\n}\n/**\n * Classe che contiene gli attributi che indicano le caratteristiche di un modulo presente nel node_templates.\n */\nexport class TheaterInstanceDTO {\n    properties: TheaterInstancePropertiesDTO\n    type: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"components/TheaterInternalServiceModuleInstanceComponent.html":{"url":"components/TheaterInternalServiceModuleInstanceComponent.html","title":"component - TheaterInternalServiceModuleInstanceComponent","body":"\n                   \n\n\n\n\n\n  Componenti\n  \n  TheaterInternalServiceModuleInstanceComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/rete-settings/nodes/rete-modules/theaterInternalServiceModuleInstance/theaterInternalServiceModuleInstance.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n            NodeComponent\n    \n\n\n\n\n    Metadati\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            NodeService\n                \n            \n\n\n\n            \n                styleUrls\n                ./theaterInternalServiceModuleInstance.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./theaterInternalServiceModuleInstance.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                HostIcon\n                            \n                            \n                                ModuleType\n                            \n                            \n                                NetworkIcon\n                            \n                            \n                                showFooter\n                            \n                            \n                                showInputOutlet\n                            \n                            \n                                showOutputOutlet\n                            \n                            \n                                showPorts\n                            \n                            \n                                SubnetIcon\n                            \n                            \n                                TheaterInternalServiceModuleInstanceIcon\n                            \n                        \n                    \n                \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                showhidesocket\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Costruttore\n        \n            \n                \n                    \nconstructor(service: NodeService, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Definito in src/app/rete-settings/nodes/rete-modules/theaterInternalServiceModuleInstance/theaterInternalServiceModuleInstance.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parametri :\n                                    \n                                        \n                                            \n                                                Nome\n                                                    Tipo\n                                                Opzionale\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                    NodeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        showhidesocket\n                        \n                    \n                \n            \n            \n                \nshowhidesocket()\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-modules/theaterInternalServiceModuleInstance/theaterInternalServiceModuleInstance.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        HostIcon\n                        \n                    \n                \n            \n                \n                    \n                        Valore predefinito : HostIcon\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-modules/theaterInternalServiceModuleInstance/theaterInternalServiceModuleInstance.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ModuleType\n                        \n                    \n                \n            \n                \n                    \n                        Valore predefinito : EnumModuleType\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-modules/theaterInternalServiceModuleInstance/theaterInternalServiceModuleInstance.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        NetworkIcon\n                        \n                    \n                \n            \n                \n                    \n                        Valore predefinito : NetworkIcon\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-modules/theaterInternalServiceModuleInstance/theaterInternalServiceModuleInstance.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showFooter\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                \n                    \n                        Valore predefinito : true\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-modules/theaterInternalServiceModuleInstance/theaterInternalServiceModuleInstance.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showInputOutlet\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                \n                    \n                        Valore predefinito : true\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-modules/theaterInternalServiceModuleInstance/theaterInternalServiceModuleInstance.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showOutputOutlet\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                \n                    \n                        Valore predefinito : true\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-modules/theaterInternalServiceModuleInstance/theaterInternalServiceModuleInstance.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showPorts\n                        \n                    \n                \n            \n                \n                    \n                        Valore predefinito : true\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-modules/theaterInternalServiceModuleInstance/theaterInternalServiceModuleInstance.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SubnetIcon\n                        \n                    \n                \n            \n                \n                    \n                        Valore predefinito : SubnetIcon\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-modules/theaterInternalServiceModuleInstance/theaterInternalServiceModuleInstance.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TheaterInternalServiceModuleInstanceIcon\n                        \n                    \n                \n            \n                \n                    \n                        Valore predefinito : TheaterInternalServiceModuleInstance_ICON\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-modules/theaterInternalServiceModuleInstance/theaterInternalServiceModuleInstance.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, ChangeDetectorRef, ChangeDetectionStrategy } from '@angular/core';\nimport { NodeComponent, NodeService } from 'rete-angular-render-plugin';\nimport { EnumModuleType } from 'src/app/models/appType';\nimport { HostIcon, SubnetIcon, NetworkIcon, TheaterInternalServiceModuleInstance_ICON } from 'src/app/rete-settings/style/styleIconConfig';\n// import { EnumModuleType } from 'src/app/rete-settings/models/reteModelType';\n \n@Component({\n  templateUrl: './theaterInternalServiceModuleInstance.component.html',\n  styleUrls: ['./theaterInternalServiceModuleInstance.component.sass',],\n  providers: [NodeService],\n  changeDetection: ChangeDetectionStrategy.OnPush, // render più veloce.\n})\n\nexport class TheaterInternalServiceModuleInstanceComponent extends NodeComponent {\n\n  showPorts = true;\n  showOutputOutlet: boolean = true;\n  showInputOutlet: boolean = true;\n  showFooter: boolean = true;\n  \n  TheaterInternalServiceModuleInstanceIcon = TheaterInternalServiceModuleInstance_ICON;\n  ModuleType = EnumModuleType;\n  SubnetIcon=SubnetIcon;\n  NetworkIcon=NetworkIcon;\n  HostIcon=HostIcon;\n\n  constructor(\n    protected service: NodeService,\n    protected cdr: ChangeDetectorRef) {\n    super(service, cdr);\n  }\n\n  showhidesocket() {\n    this.showPorts = !this.showPorts;\n    \n  }\n  \n}\n\n    \n\n    \n        \n\n  \n    \n      \n        \n          {{ node.data.name === \"\" || node.data.name === undefined ? \"Assign name\" : node.data.name }}\n        \n      \n      \n        \n          \n          \n        \n      \n    \n   -->\n\n\n  \n  \n    \n      \n        \n          \n            \n              \n                 \n              \n              \n                \n                  {{\n                  (node.data.name && node.data.name!=='')\n                  ?node.data.name\n                  :ModuleType.TheaterInternalServiceModuleInstance\n                  }}\n                \n                \n                  {{\n                  (node.data.area && node.data.area!=='')\n                  ?\"area: \"+node.data.area\n                  :''\n                  }}\n                \n                \n                  {{\n                  (node.data.version && node.data.version!=='')\n                  ?\"version: \"+node.data.version\n                  :''\n                  }}\n                \n              \n            \n          \n        \n      \n    \n  \n\n\n  \n    \n      Button with data-bs-target\n    \n  \n  \n    \n      Some placeholder content for the collapse component. This panel is hidden by default but revealed when the user\n      activates the relevant trigger.\n    \n   -->\n\n\n  \n\n    \n    \n      \n        {{output.name}}\n        \n          \n          P\n          \n        \n      \n    \n\n\n     -->\n\n    \n    \n      \n        \n          \n          \n          C\n          \n        \n        {{input.name}}\n        \n      \n    \n\n  \n\n\n\n  \n  \n    \n\n      \n        \n        {{\n        node.data.host_number\n        ?node.data.host_number\n        :0\n        }}\n      \n\n      \n        \n        {{\n        node.data.subnet_number\n        ?node.data.subnet_number\n        :0\n        }}\n      \n\n      \n        \n        {{\n        node.data.network_number\n        ?node.data.network_number\n        :0\n        }}\n      \n\n    \n  \n\n\n\n    \n\n    \n                \n                    ./theaterInternalServiceModuleInstance.component.sass\n                \n                @import \"../vars\"\n\n.node\n  background: $node-color\n  border: 2px solid #f124\n  border-radius: 10px\n  cursor: pointer\n  min-width: $node-width\n  height: auto\n  padding-bottom: 6px\n  box-sizing: content-box\n  position: relative\n  user-select: none\n  &:hover\n    background: lighten($node-color,4%)\n  &.selected\n    background: $node-color-selected\n    border-color: #ff0000\n  .title\n    color: $text-color\n    font-family: $font-fam\n    font-size: 18px\n    padding: 8px\n  .output\n    text-align: right\n    display: flex\n    justify-content: flex-end\n  .input\n    text-align: left\n    display: flex\n    justify-content: flex-start\n  .input-title,.output-title\n    vertical-align: middle\n    color: $text-color\n    display: inline-block\n    font-family: $font-fam\n    font-size: 14px\n    margin: $socket-margin\n    line-height: $socket-size\n    &[hidden]\n      display: none\n  .input-control\n    z-index: 1\n    width: calc(100% - #{$socket-size + 2*$socket-margin})\n    vertical-align: middle\n    display: inline-block\n  .control\n    padding: $socket-margin $socket-size/2 + $socket-margin\n\n    \n\n    \n        \n        \n            \n                Legenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento html con direttive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              {{ node.data.name === \"\" || node.data.name === undefined ? \"Assign name\" : node.data.name }}                                                                     -->                                                                                                                                         {{                  (node.data.name && node.data.name!==\\'\\')                  ?node.data.name                  :ModuleType.TheaterInternalServiceModuleInstance                  }}                                                  {{                  (node.data.area && node.data.area!==\\'\\')                  ?\"area: \"+node.data.area                  :\\'\\'                  }}                                                  {{                  (node.data.version && node.data.version!==\\'\\')                  ?\"version: \"+node.data.version                  :\\'\\'                  }}                                                                                    Button with data-bs-target                  Some placeholder content for the collapse component. This panel is hidden by default but revealed when the user      activates the relevant trigger.       -->                        {{output.name}}                            P                                 -->                                                    C                          {{input.name}}                                                  {{        node.data.host_number        ?node.data.host_number        :0        }}                            {{        node.data.subnet_number        ?node.data.subnet_number        :0        }}                            {{        node.data.network_number        ?node.data.network_number        :0        }}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ComposerComponent', 'selector': 'app-composer'},{'name': 'ControlTemplate', 'selector': ''},{'name': 'DataInputComponent', 'selector': 'app-data-input'},{'name': 'DataInputV2Component', 'selector': 'app-data-input-v2'},{'name': 'DataItemComponent', 'selector': 'app-window-item'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HostComponent', 'selector': ''},{'name': 'HowToUseComponent', 'selector': 'app-how-to-use'},{'name': 'MirroringModuleInstanceComponent', 'selector': ''},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavbarElementComponent', 'selector': 'app-navbar-element'},{'name': 'NetworkComponent', 'selector': ''},{'name': 'OffcanvasComponent', 'selector': 'app-offcanvas'},{'name': 'ReteModuleComposerComponent', 'selector': 'app-rete-module-composer'},{'name': 'ReteModuleVisualizerComponent', 'selector': 'app-rete-module-visualizer'},{'name': 'ReteTheaterComposerComponent', 'selector': 'app-rete-theater-composer'},{'name': 'ReteTheaterVisualizerComponent', 'selector': 'app-rete-theater-visualizer'},{'name': 'SubnetComponent', 'selector': ''},{'name': 'TabnavComponent', 'selector': 'app-tabnav'},{'name': 'TheaterInternalServiceModuleInstanceComponent', 'selector': ''},{'name': 'TheaterModuleInstanceComponent', 'selector': ''},{'name': 'UnderbarComponent', 'selector': 'app-underbar'},{'name': 'VisualizerComponent', 'selector': 'app-displayer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TheaterInternalServiceModuleInstanceComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/TheaterInternalServiceModuleInstanceNode.html":{"url":"classes/TheaterInternalServiceModuleInstanceNode.html","title":"class - TheaterInternalServiceModuleInstanceNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  TheaterInternalServiceModuleInstanceNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/rete-settings/nodes/rete-modules/theaterInternalServiceModuleInstance/theaterInternalServiceModuleInstanceNode.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che rappresenta il modulo (rete-node) TheaterInternalServiceModuleInstance all'interno del canvas/editor di rete.\n\n            \n\n            \n                Extends\n            \n            \n                        Component\n            \n\n            \n                Implementa\n            \n            \n                        AngularComponent\n            \n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                builder\n                            \n                            \n                                created\n                            \n                            \n                                createNewNode\n                            \n                            \n                                destroyed\n                            \n                            \n                                valorizeNode\n                            \n                            \n                                worker\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Costruttore\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Definito in src/app/rete-settings/nodes/rete-modules/theaterInternalServiceModuleInstance/theaterInternalServiceModuleInstanceNode.ts:49\n                            \n                        \n\n                \n                    \n                            Costruttore di TheaterInternalServiceModuleInstanceNode\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     AngularComponentData\n\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-modules/theaterInternalServiceModuleInstance/theaterInternalServiceModuleInstanceNode.ts:49\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        builder\n                        \n                    \n                \n            \n            \n                \n                    \n                    builder(node: Node)\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-modules/theaterInternalServiceModuleInstance/theaterInternalServiceModuleInstanceNode.ts:67\n                \n            \n\n\n            \n                \n                    Funzione richiamata in fase di costruzione del nodo (rete-node).\nControlla se bisogna instanziare il nodo oppure crearne uno nuovo:\n\nIn fase di design, il nodo non ha dati, per cui bisogna crearne uno nuovo.\nIn fase di visualizing, il nodo presenta dei dati, per cui va valorizzato il nodo.\n\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        created\n                        \n                    \n                \n            \n            \n                \ncreated(node: Node)\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-modules/theaterInternalServiceModuleInstance/theaterInternalServiceModuleInstanceNode.ts:130\n                \n            \n\n\n            \n                \n                    Funzione richiamata una volta in nodo creato.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createNewNode\n                        \n                    \n                \n            \n            \n                \ncreateNewNode(node: Node)\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-modules/theaterInternalServiceModuleInstance/theaterInternalServiceModuleInstanceNode.ts:79\n                \n            \n\n\n            \n                \n                    Funzione che ha come scopo creare un nodo (rete-node).\nIn particolare gli assegna una struttura vuota.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destroyed\n                        \n                    \n                \n            \n            \n                \ndestroyed(node: Node)\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-modules/theaterInternalServiceModuleInstance/theaterInternalServiceModuleInstanceNode.ts:138\n                \n            \n\n\n            \n                \n                    Funzione richiamata una volta in nodo cancellato.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        valorizeNode\n                        \n                    \n                \n            \n            \n                \nvalorizeNode(node: Node)\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-modules/theaterInternalServiceModuleInstance/theaterInternalServiceModuleInstanceNode.ts:92\n                \n            \n\n\n            \n                \n                    Funzione che ha come scopo la valorizzazione del nodo (rete-node) con i dati in suo possesso.\nIn quasta fase avviene anche la fase iniziale di instanziamento delle porte input/output.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        worker\n                        \n                    \n                \n            \n            \n                \nworker(node: NodeData, inputs: WorkerInputs, outputs: WorkerOutputs)\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-modules/theaterInternalServiceModuleInstance/theaterInternalServiceModuleInstanceNode.ts:122\n                \n            \n\n\n            \n                \n                    Funzione richiamta per eseguire operazioni che conivolgono computazioni dei nodi.\nNon sono necessari in questa versione.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                            NodeData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    inputs\n                                    \n                                            WorkerInputs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    outputs\n                                    \n                                            WorkerOutputs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Component, Input, Output, Node } from 'rete';\nimport { _Socket } from '../../../sockets/socket';\nimport { _Control } from '../../../controls/control';\nimport { AngularComponent, AngularComponentData } from 'rete-angular-render-plugin';\nimport { NodeData, WorkerInputs, WorkerOutputs } from 'rete/types/core/data';\nimport { TheaterInternalServiceModuleInstanceComponent } from './theaterInternalServiceModuleInstance.component';\nimport {  reteBasicModuleInfo } from '../../reteBasic';\nimport { EnumModuleType } from 'src/app/models/appType';\n\n/**\n * Classe utilizzata per indicare il tipo di modulo TheaterInternalServiceModuleInstanceNode.\n * @see {reteBasicModuleInfo}\n */\nexport class ReteTheaterInternalServiceModuleInstanceInfo extends reteBasicModuleInfo {\n  type: EnumModuleType.TheaterInternalServiceModuleInstance;\n}\n\n/**\n * Funzione dichiarata in TheaterInternalServiceModuleInstanceNode. \n * Essa ha lo scopo di generare una struttura dati empty.\n * Viene utilizzata in per instanziare un nodo del tipo di ritorno indicato senza dati.\n * @returns {ReteTheaterInternalServiceModuleInstanceInfo}\n */\nexport function getEmptyReteTheaterInternalServiceModuleInstanceInfo(): ReteTheaterInternalServiceModuleInstanceInfo {\n  let x: ReteTheaterInternalServiceModuleInstanceInfo = {\n    Input: [],\n    Output: [],\n    name: \"\",\n    description: \"\",\n    type: EnumModuleType.TheaterInternalServiceModuleInstance,\n    host_number: 0,\n    network_number: 0,\n    subnet_number: 0,\n    area: '',\n    module: '',\n    version: '',\n    sequence: '',\n    consumer_interfaces_link: []\n  };\n  return x;\n}\n\n\n/**\n * Classe che rappresenta il modulo (rete-node) TheaterInternalServiceModuleInstance all'interno del canvas/editor di rete.\n */\nexport class TheaterInternalServiceModuleInstanceNode extends Component implements AngularComponent {\n\n  data: AngularComponentData;\n\n    /**\n   * Costruttore di TheaterInternalServiceModuleInstanceNode\n   */\n  constructor() {\n    super(EnumModuleType.TheaterInternalServiceModuleInstance);\n    this.data.render = 'angular';\n    this.data.component = TheaterInternalServiceModuleInstanceComponent;\n  }\n\n  /**\n   * Funzione richiamata in fase di costruzione del nodo (rete-node).\n   * Controlla se bisogna instanziare il nodo oppure crearne uno nuovo:\n   * - In fase di design, il nodo non ha dati, per cui bisogna crearne uno nuovo.\n   * - In fase di visualizing, il nodo presenta dei dati, per cui va valorizzato il nodo.\n   * @param node \n   */\n  async builder(node: Node) {\n    if (Object.keys(node.data).length === 0)\n      this.createNewNode(node)\n    else\n      this.valorizeNode(node)\n  }\n\n  /**\n   * Funzione che ha come scopo creare un nodo (rete-node).\n   * In particolare gli assegna una struttura vuota.\n   * @param node \n   */\n  createNewNode(node: Node) {\n    let t = getEmptyReteTheaterInternalServiceModuleInstanceInfo()\n    node.data = {\n      ...node.data,\n      ...t\n    }\n  }\n\n  /**\n   * Funzione che ha come scopo la valorizzazione del nodo (rete-node) con i dati in suo possesso.\n   * In quasta fase avviene anche la fase iniziale di instanziamento delle porte input/output.\n   * @param node \n   */\n  valorizeNode(node: Node) {\n    var i: any = node.data['Input'];\n    var o: any = node.data['Output'];\n    var il = i.length;\n    var ol = o.length;\n\n    for (let index = 0; index \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"components/TheaterModuleInstanceComponent.html":{"url":"components/TheaterModuleInstanceComponent.html","title":"component - TheaterModuleInstanceComponent","body":"\n                   \n\n\n\n\n\n  Componenti\n  \n  TheaterModuleInstanceComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/rete-settings/nodes/rete-modules/theaterModuleInstance/theaterModuleInstance.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n            NodeComponent\n    \n\n\n\n\n    Metadati\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            NodeService\n                \n            \n\n\n\n            \n                styleUrls\n                ./theaterModuleInstance.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./theaterModuleInstance.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                HostIcon\n                            \n                            \n                                ModuleType\n                            \n                            \n                                NetworkIcon\n                            \n                            \n                                showFooter\n                            \n                            \n                                showInputOutlet\n                            \n                            \n                                showOutputOutlet\n                            \n                            \n                                showPorts\n                            \n                            \n                                SubnetIcon\n                            \n                            \n                                TheaterModuleInstanceIcon\n                            \n                        \n                    \n                \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                showhidesocket\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Costruttore\n        \n            \n                \n                    \nconstructor(service: NodeService, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Definito in src/app/rete-settings/nodes/rete-modules/theaterModuleInstance/theaterModuleInstance.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parametri :\n                                    \n                                        \n                                            \n                                                Nome\n                                                    Tipo\n                                                Opzionale\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                    NodeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        showhidesocket\n                        \n                    \n                \n            \n            \n                \nshowhidesocket()\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-modules/theaterModuleInstance/theaterModuleInstance.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        HostIcon\n                        \n                    \n                \n            \n                \n                    \n                        Valore predefinito : HostIcon\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-modules/theaterModuleInstance/theaterModuleInstance.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ModuleType\n                        \n                    \n                \n            \n                \n                    \n                        Valore predefinito : EnumModuleType\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-modules/theaterModuleInstance/theaterModuleInstance.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        NetworkIcon\n                        \n                    \n                \n            \n                \n                    \n                        Valore predefinito : NetworkIcon\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-modules/theaterModuleInstance/theaterModuleInstance.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showFooter\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                \n                    \n                        Valore predefinito : true\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-modules/theaterModuleInstance/theaterModuleInstance.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showInputOutlet\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                \n                    \n                        Valore predefinito : true\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-modules/theaterModuleInstance/theaterModuleInstance.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showOutputOutlet\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                \n                    \n                        Valore predefinito : true\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-modules/theaterModuleInstance/theaterModuleInstance.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showPorts\n                        \n                    \n                \n            \n                \n                    \n                        Valore predefinito : true\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-modules/theaterModuleInstance/theaterModuleInstance.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SubnetIcon\n                        \n                    \n                \n            \n                \n                    \n                        Valore predefinito : SubnetIcon\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-modules/theaterModuleInstance/theaterModuleInstance.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TheaterModuleInstanceIcon\n                        \n                    \n                \n            \n                \n                    \n                        Valore predefinito : TheaterModuleInstance_ICON\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-modules/theaterModuleInstance/theaterModuleInstance.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, ChangeDetectorRef, ChangeDetectionStrategy } from '@angular/core';\nimport { NodeComponent, NodeService } from 'rete-angular-render-plugin';\nimport { EnumModuleType } from 'src/app/models/appType';\nimport { HostIcon, SubnetIcon, NetworkIcon, TheaterModuleInstance_ICON } from 'src/app/rete-settings/style/styleIconConfig';\n// import { EnumModuleType } from 'src/app/rete-settings/models/reteModelType';\n \n@Component({\n  templateUrl: './theaterModuleInstance.component.html',\n  styleUrls: ['./theaterModuleInstance.component.sass',],\n  providers: [NodeService],\n  changeDetection: ChangeDetectionStrategy.OnPush, // render più veloce.\n})\n\nexport class TheaterModuleInstanceComponent extends NodeComponent {\n\n  showPorts = true;\n  showOutputOutlet: boolean = true;\n  showInputOutlet: boolean = true;\n  showFooter: boolean = true;\n  \n  TheaterModuleInstanceIcon = TheaterModuleInstance_ICON;\n  ModuleType = EnumModuleType;\n  SubnetIcon=SubnetIcon;\n  NetworkIcon=NetworkIcon;\n  HostIcon=HostIcon;\n\n  constructor(\n    protected service: NodeService,\n    protected cdr: ChangeDetectorRef) {\n    super(service, cdr);\n  }\n\n  showhidesocket() {\n    this.showPorts = !this.showPorts;\n\n  }\n  \n}\n\n    \n\n    \n        \n\n  \n    \n      \n        \n          {{ node.data.name === \"\" || node.data.name === undefined ? \"Assign name\" : node.data.name }}\n        \n      \n      \n        \n          \n          \n        \n      \n    \n   -->\n\n\n  \n  \n    \n      \n        \n          \n            \n              \n                 \n              \n              \n                \n                  {{\n                  (node.data.name && node.data.name!=='')\n                  ?node.data.name\n                  :ModuleType.TheaterModuleInstance\n                  }}\n                \n                \n                  {{\n                  (node.data.area && node.data.area!=='')\n                  ?\"area: \"+node.data.area\n                  :''\n                  }}\n                \n                \n                  {{\n                  (node.data.version && node.data.version!=='')\n                  ?\"version: \"+node.data.version\n                  :''\n                  }}\n                \n              \n            \n          \n        \n      \n    \n  \n\n\n  \n    \n      Button with data-bs-target\n    \n  \n  \n    \n      Some placeholder content for the collapse component. This panel is hidden by default but revealed when the user\n      activates the relevant trigger.\n    \n   -->\n\n\n  \n\n    \n    \n      \n        {{output.name}}\n        \n          \n          \n          P\n          \n        \n      \n    \n\n\n     -->\n\n    \n    \n      \n        \n          \n          \n          C\n          \n        \n        {{input.name}}\n        \n      \n    \n\n  \n\n\n\n  \n  \n    \n\n      \n        \n        {{\n        node.data.host_number\n        ?node.data.host_number\n        :0\n        }}\n      \n\n      \n        \n        {{\n        node.data.subnet_number\n        ?node.data.subnet_number\n        :0\n        }}\n      \n\n      \n        \n        {{\n        node.data.network_number\n        ?node.data.network_number\n        :0\n        }}\n      \n\n    \n  \n\n\n\n    \n\n    \n                \n                    ./theaterModuleInstance.component.sass\n                \n                @import \"../vars\"\n\n.node\n  background: $node-color\n  border: 2px solid #f124\n  border-radius: 10px\n  cursor: pointer\n  min-width: $node-width\n  height: auto\n  padding-bottom: 6px\n  box-sizing: content-box\n  position: relative\n  user-select: none\n  &:hover\n    background: lighten($node-color,4%)\n  &.selected\n    background: $node-color-selected\n    border-color: #ff0000\n  .title\n    color: $text-color\n    font-family: $font-fam\n    font-size: 18px\n    padding: 8px\n  .output\n    text-align: right\n    display: flex\n    justify-content: flex-end\n  .input\n    text-align: left\n    display: flex\n    justify-content: flex-start\n  .input-title,.output-title\n    vertical-align: middle\n    color: $text-color\n    display: inline-block\n    font-family: $font-fam\n    font-size: 14px\n    margin: $socket-margin\n    line-height: $socket-size\n    &[hidden]\n      display: none\n  .input-control\n    z-index: 1\n    width: calc(100% - #{$socket-size + 2*$socket-margin})\n    vertical-align: middle\n    display: inline-block\n  .control\n    padding: $socket-margin $socket-size/2 + $socket-margin\n\n    \n\n    \n        \n        \n            \n                Legenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento html con direttive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              {{ node.data.name === \"\" || node.data.name === undefined ? \"Assign name\" : node.data.name }}                                                                     -->                                                                                                                                         {{                  (node.data.name && node.data.name!==\\'\\')                  ?node.data.name                  :ModuleType.TheaterModuleInstance                  }}                                                  {{                  (node.data.area && node.data.area!==\\'\\')                  ?\"area: \"+node.data.area                  :\\'\\'                  }}                                                  {{                  (node.data.version && node.data.version!==\\'\\')                  ?\"version: \"+node.data.version                  :\\'\\'                  }}                                                                                    Button with data-bs-target                  Some placeholder content for the collapse component. This panel is hidden by default but revealed when the user      activates the relevant trigger.       -->                        {{output.name}}                                      P                                 -->                                                    C                          {{input.name}}                                                  {{        node.data.host_number        ?node.data.host_number        :0        }}                            {{        node.data.subnet_number        ?node.data.subnet_number        :0        }}                            {{        node.data.network_number        ?node.data.network_number        :0        }}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ComposerComponent', 'selector': 'app-composer'},{'name': 'ControlTemplate', 'selector': ''},{'name': 'DataInputComponent', 'selector': 'app-data-input'},{'name': 'DataInputV2Component', 'selector': 'app-data-input-v2'},{'name': 'DataItemComponent', 'selector': 'app-window-item'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HostComponent', 'selector': ''},{'name': 'HowToUseComponent', 'selector': 'app-how-to-use'},{'name': 'MirroringModuleInstanceComponent', 'selector': ''},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavbarElementComponent', 'selector': 'app-navbar-element'},{'name': 'NetworkComponent', 'selector': ''},{'name': 'OffcanvasComponent', 'selector': 'app-offcanvas'},{'name': 'ReteModuleComposerComponent', 'selector': 'app-rete-module-composer'},{'name': 'ReteModuleVisualizerComponent', 'selector': 'app-rete-module-visualizer'},{'name': 'ReteTheaterComposerComponent', 'selector': 'app-rete-theater-composer'},{'name': 'ReteTheaterVisualizerComponent', 'selector': 'app-rete-theater-visualizer'},{'name': 'SubnetComponent', 'selector': ''},{'name': 'TabnavComponent', 'selector': 'app-tabnav'},{'name': 'TheaterInternalServiceModuleInstanceComponent', 'selector': ''},{'name': 'TheaterModuleInstanceComponent', 'selector': ''},{'name': 'UnderbarComponent', 'selector': 'app-underbar'},{'name': 'VisualizerComponent', 'selector': 'app-displayer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TheaterModuleInstanceComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/TheaterModuleInstanceNode.html":{"url":"classes/TheaterModuleInstanceNode.html","title":"class - TheaterModuleInstanceNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  TheaterModuleInstanceNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/rete-settings/nodes/rete-modules/theaterModuleInstance/theaterModuleInstanceNode.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che rappresenta il modulo (rete-node) TheaterModuleInstance all'interno del canvas/editor di rete.\n\n            \n\n            \n                Extends\n            \n            \n                        Component\n            \n\n            \n                Implementa\n            \n            \n                        AngularComponent\n            \n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                builder\n                            \n                            \n                                created\n                            \n                            \n                                createNewNode\n                            \n                            \n                                destroyed\n                            \n                            \n                                valorizeNode\n                            \n                            \n                                worker\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Costruttore\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Definito in src/app/rete-settings/nodes/rete-modules/theaterModuleInstance/theaterModuleInstanceNode.ts:49\n                            \n                        \n\n                \n                    \n                            Costruttore di MirroringModuleInstanceNode\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     AngularComponentData\n\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-modules/theaterModuleInstance/theaterModuleInstanceNode.ts:49\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        builder\n                        \n                    \n                \n            \n            \n                \n                    \n                    builder(node: Node)\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-modules/theaterModuleInstance/theaterModuleInstanceNode.ts:67\n                \n            \n\n\n            \n                \n                    Funzione richiamata in fase di costruzione del nodo (rete-node).\nControlla se bisogna instanziare il nodo oppure crearne uno nuovo:\n\nIn fase di design, il nodo non ha dati, per cui bisogna crearne uno nuovo.\nIn fase di visualizing, il nodo presenta dei dati, per cui va valorizzato il nodo.\n\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        created\n                        \n                    \n                \n            \n            \n                \ncreated(node: Node)\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-modules/theaterModuleInstance/theaterModuleInstanceNode.ts:130\n                \n            \n\n\n            \n                \n                    Funzione richiamata una volta in nodo creato.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createNewNode\n                        \n                    \n                \n            \n            \n                \ncreateNewNode(node: Node)\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-modules/theaterModuleInstance/theaterModuleInstanceNode.ts:79\n                \n            \n\n\n            \n                \n                    Funzione che ha come scopo creare un nodo (rete-node).\nIn particolare gli assegna una struttura vuota.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destroyed\n                        \n                    \n                \n            \n            \n                \ndestroyed(node: Node)\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-modules/theaterModuleInstance/theaterModuleInstanceNode.ts:138\n                \n            \n\n\n            \n                \n                    Funzione richiamata una volta in nodo cancellato.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        valorizeNode\n                        \n                    \n                \n            \n            \n                \nvalorizeNode(node: Node)\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-modules/theaterModuleInstance/theaterModuleInstanceNode.ts:92\n                \n            \n\n\n            \n                \n                    Funzione che ha come scopo la valorizzazione del nodo (rete-node) con i dati in suo possesso.\nIn quasta fase avviene anche la fase iniziale di instanziamento delle porte input/output.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        worker\n                        \n                    \n                \n            \n            \n                \nworker(node: NodeData, inputs: WorkerInputs, outputs: WorkerOutputs)\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-modules/theaterModuleInstance/theaterModuleInstanceNode.ts:122\n                \n            \n\n\n            \n                \n                    Funzione richiamta per eseguire operazioni che conivolgono computazioni dei nodi.\nNon sono necessari in questa versione.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                            NodeData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    inputs\n                                    \n                                            WorkerInputs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    outputs\n                                    \n                                            WorkerOutputs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Component, Input, Output, Node } from 'rete';\nimport { _Socket } from '../../../sockets/socket';\nimport { _Control } from '../../../controls/control';\nimport { AngularComponent, AngularComponentData } from 'rete-angular-render-plugin';\nimport { NodeData, WorkerInputs, WorkerOutputs } from 'rete/types/core/data';\nimport { TheaterModuleInstanceComponent } from './theaterModuleInstance.component';\nimport {  reteBasicModuleInfo } from '../../reteBasic';\nimport { EnumModuleType } from 'src/app/models/appType';\n\n/**\n * Classe utilizzata per indicare il tipo di modulo MirroringModuleInstanceNode.\n * @see {reteBasicModuleInfo}\n */\nexport class ReteTheaterModuleInstanceInfo extends reteBasicModuleInfo {\n  type: EnumModuleType.TheaterModuleInstance;\n}\n\n/**\n * Funzione dichiarata in TheaterModuleInstanceNode. \n * Essa ha lo scopo di generare una struttura dati empty.\n * Viene utilizzata in per instanziare un nodo del tipo di ritorno indicato senza dati.\n * @returns {ReteTheaterModuleInstanceInfo}\n */\nexport function getEmptyReteTheaterModuleInstanceInfo(): ReteTheaterModuleInstanceInfo {\n  let x: ReteTheaterModuleInstanceInfo = {\n    Input: [],\n    Output: [],\n    description: \"\",\n    name: \"\",\n    type: EnumModuleType.TheaterModuleInstance,\n    host_number: 0,\n    network_number: 0,\n    subnet_number: 0,\n    area: '',\n    module: '',\n    version: '',\n    sequence: '',\n    consumer_interfaces_link: []\n  };\n  return x;\n\n}\n\n/**\n * Classe che rappresenta il modulo (rete-node) TheaterModuleInstance all'interno del canvas/editor di rete.\n */\nexport class TheaterModuleInstanceNode extends Component implements AngularComponent {\n\n  data: AngularComponentData;\n\n    /**\n   * Costruttore di MirroringModuleInstanceNode\n   */\n  constructor() {\n    super(EnumModuleType.TheaterModuleInstance);\n    this.data.render = 'angular';\n    this.data.component = TheaterModuleInstanceComponent;\n  }\n\n    /**\n   * Funzione richiamata in fase di costruzione del nodo (rete-node).\n   * Controlla se bisogna instanziare il nodo oppure crearne uno nuovo:\n   * - In fase di design, il nodo non ha dati, per cui bisogna crearne uno nuovo.\n   * - In fase di visualizing, il nodo presenta dei dati, per cui va valorizzato il nodo.\n   * @param node \n   */\n  async builder(node: Node) {\n    if (Object.keys(node.data).length === 0)\n      this.createNewNode(node)\n    else\n      this.valorizeNode(node)\n  }\n\n  /**\n   * Funzione che ha come scopo creare un nodo (rete-node).\n   * In particolare gli assegna una struttura vuota.\n   * @param node \n   */\n  createNewNode(node: Node) {\n    let t = getEmptyReteTheaterModuleInstanceInfo()\n    node.data = {\n      ...node.data,\n      ...t\n    }\n  }\n\n  /**\n   * Funzione che ha come scopo la valorizzazione del nodo (rete-node) con i dati in suo possesso.\n   * In quasta fase avviene anche la fase iniziale di instanziamento delle porte input/output.\n   * @param node \n   */\n  valorizeNode(node: Node) {\n    var i: any = node.data['Input'];\n    var o: any = node.data['Output'];\n    var il = i.length;\n    var ol = o.length;\n\n    for (let index = 0; index \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"injectables/TheaterService.html":{"url":"injectables/TheaterService.html","title":"injectable - TheaterService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TheaterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/api/theater.service.ts\n        \n\n\n\n\n\n            \n    Indice\n    \n        \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getTheaterInfoByID\n                            \n                            \n                                    Async\n                                getTheaterModulesByUUID\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Costruttore\n        \n            \n                \n                    \nconstructor(http: HttpClient, tokenService: TokenService)\n                    \n                \n                        \n                            \n                                Definito in src/app/services/api/theater.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parametri :\n                                    \n                                        \n                                            \n                                                Nome\n                                                    Tipo\n                                                Opzionale\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tokenService\n                                                  \n                                                        \n                                                                        TokenService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getTheaterInfoByID\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTheaterInfoByID(theater_id: number | string)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/api/theater.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    theater_id\n                                    \n                                            number | string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getTheaterModulesByUUID\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTheaterModulesByUUID(theater_uuid: number | string)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/api/theater.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    theater_uuid\n                                    \n                                            number | string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { SimpleModuleDTO } from '../modelsDTO/moduleDTO';\nimport { TheaterDTO } from '../modelsDTO/theaterDTO';\nimport { TokenService } from '../token/token.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TheaterService {\n\n  constructor(private http: HttpClient, private tokenService: TokenService) { }\n\n  async getTheaterInfoByID(theater_id: number | string): Promise {\n\n    let link: string = environment.getTheaterByID + (theater_id as unknown as string);\n\n    const promise = await new Promise(\n      (resolve, reject) => {\n        this.http.get\n          (\n            link,\n            this.tokenService.getHttpgetOption()\n          )\n          .toPromise()\n          .then(\n            (res: TheaterDTO) => {\n              resolve(res);\n            }\n          )\n          .catch(\n            error => {\n              reject(error);\n            }\n          );\n      }\n    );\n\n    return promise;\n  }\n\n  async getTheaterModulesByUUID(theater_uuid: number | string): Promise {\n\n    let link: string = environment.getTheaterModulesByUUID + (theater_uuid as unknown as string);\n\n    const promise = await new Promise((resolve, reject) => {\n      this.http.get\n        (\n          link,\n          this.tokenService.getHttpgetOption()\n        )\n        .toPromise()\n        .then(\n          (res: SimpleModuleDTO[]) => {\n            resolve(res);\n          }\n        )\n        .catch(\n          error => {\n            reject(error);\n          }\n        );\n    }\n    );\n    return promise;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/TheaterSimpleData.html":{"url":"classes/TheaterSimpleData.html","title":"class - TheaterSimpleData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  TheaterSimpleData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsExport/theaterExport.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano il teatro all'interno dei node_templates.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                properties\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        properties\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         PropertiesTSD\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/theaterExport.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         TheaterTypeExport\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/theaterExport.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ModeTypeExport, ModuleTypeExport, TheaterTypeExport, ToscaDefinitionType } from \"./TypeExport\"\n\n/**\n * Classe utilizzata per l'export. \n * Contiene le informazioni generali per il teatro che devono esserci nello standard Tosca.\n */\nexport class TheaterExport {\n    tosca_definitions_version: ToscaDefinitionType\n    description: string\n    imports: string[]\n    node_templates: { [name: string]: TheaterSimpleData | ModuleInstanceSimpleData }\n}\n/**\n * Classe che contiene gli attributi che indicano il teatro all'interno dei node_templates.\n */\nexport class TheaterSimpleData {\n    type: TheaterTypeExport\n    properties: PropertiesTSD\n}\n/**\n * Classe che contiene gli attributi che indicano le proprietà del teatro.\n */\nexport class PropertiesTSD {\n    version: string | number\n    description: string\n    mode: ModeTypeExport\n    author: string\n    tags: TagsExport[]\n    areas: AreaExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano i tag nelle proprietà del teatro.\n * @see {PropertiesTSD}\n */\nexport class TagsExport {\n    tag: string\n}\n/**\n * Classe che contiene gli attributi che indicano le aree nelle proprietà del teatr.\n * @see {PropertiesTSD}\n */\nexport class AreaExport {\n    area: string\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano il modulo all'interno dei node_modules.\n */\nexport class ModuleInstanceSimpleData {\n    type: ModuleTypeExport\n    properties: PropertiesMISD\n}\n/**\n * Classe che contiene gli attributi che indicano le propeitò del modulo all'interno dei node_templates.\n */\nexport class PropertiesMISD{\n    module: string\n    version: string | number\n    area: string\n    sequence: number\n    sources?: SourceExport[]\n    consumer_interface_link: ConsumerInterfaceLinkExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano le porte di ingresso del modulo all'interno dei node_templates.\n */\nexport class SourceExport{\n    module_instance: string\n    host:string\n    interfaces: string[]\n}\n/**\n * Classe che contiene gli attributi che indicano i collegamenti e relazioni intramodulo con le varie interfacce.\n */\nexport class ConsumerInterfaceLinkExport{\n    local_interface: string\n    module_interface:string\n    remote_interface:string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"interfaces/TheaterTopology.html":{"url":"interfaces/TheaterTopology.html","title":"interface - TheaterTopology","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfacce\n  \n  TheaterTopology\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsApplication/applicationModels.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        TopologyElement\n            \n\n        \n            Indice\n            \n                \n                    \n                        \n                            Proprietà\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            connection\n                                        \n                                \n                                \n                                        \n                                            elements\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Proprietà\n                    \n                        \n                                \n                                    \n                                        \n                                        connection\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        connection:         ReteConnection[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         ReteConnection[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        elements\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        elements:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ReteHostInfo } from \"src/app/rete-settings/nodes/rete-nodes/host/hostNode\";\nimport { ReteNetworkInfo } from \"src/app/rete-settings/nodes/rete-nodes/network/networkNode\";\nimport { ReteSubnetInfo } from \"src/app/rete-settings/nodes/rete-nodes/subnet/subnetNode\";\nimport { ReteMirroringModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/mirroringModuleInstance/mirroringModuleInstanceNode\";\nimport { ReteTheaterInternalServiceModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/theaterInternalServiceModuleInstance/theaterInternalServiceModuleInstanceNode\";\nimport { ReteTheaterModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/theaterModuleInstance/theaterModuleInstanceNode\";\nimport { FlavorBasicInfo } from \"../modelsDTO/falvorDTO\";\nimport { HostModuleDTO } from \"../modelsDTO/hostDTO\";\nimport { ModuleNetworkInterfaceDTO, ModuleInstancePropertiesDTO, SimpleModuleDTO, TheaterInstancePropertiesDTO, ModuleInstanceDTO, ModuleDTO, SimpleAreaDTO, AreaDTO } from \"../modelsDTO/moduleDTO\";\nimport { TheaterDTO } from \"../modelsDTO/theaterDTO\";\n\n\nexport interface CommonModule {\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n}\n\n\n/**\n * Classe contenente gli attributi utilizzati per le operazioni che coinvolgono i moduli.\n * ps. Questa struttura è prettamente utilizzata nella chiamata relativa al singolo modulo.\n */\nexport class ModuleApplication extends ModuleDTO implements CommonModule {\n    imports: string[] // perchè nell'export yaml è previsto\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n    // serve per validare il json risultante dal parsing del theaterApplication\n    validateObject?: string = \"module\";\n}\n// PER IMPLEMENTAZIONI FUTURE, PER COERENZA, PRENDERE DIRETTAMENTE I SINGOLI NODI DALLA CHIAMATA ESCLUSIVA E NON DA QUELLA CHE RESTITUISCE TUTTI I TEATRI\n/**\n * Classe contenente gli attributi utilizzati per le operazioni che coinvolgono i moduli.\n * ps. Questa struttura è prettamente utilizzata nella chiamata che prende tutti i moduli del teatro.\n */\nexport class SimpleModuleApplication extends SimpleModuleDTO implements CommonModule {\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n}\n\n\nexport class ReteConnection {\n    from: string;\n    port_src: string;\n    to: string;\n    port_dst: string;\n}\n\nexport interface TopologyList {\n    rete: any;\n    topology?: TopologyElement\n}\nexport class TopologyElement {\n    elements: { [name: string]: any };\n    connection: ReteConnection[]\n}\n\n// apptype module topology\n\nexport class NodeTopologyElement implements TopologyElement {\n    elements: { [hostName: string]: ReteHostInfo | ReteSubnetInfo | ReteNetworkInfo };\n    connection: ReteConnection[]\n}\n\nexport interface ModuleTopology extends TopologyList {\n    rete: ReteMirroringModuleInstanceInfo | ReteTheaterInternalServiceModuleInstanceInfo | ReteTheaterModuleInstanceInfo\n    topology: NodeTopologyElement;\n}\n\nexport class ModuleInstance extends ModuleInstanceDTO implements ModuleTopology {\n    // moduleTopology data\n    rete: ReteTheaterModuleInstanceInfo | ReteTheaterInternalServiceModuleInstanceInfo | ReteMirroringModuleInstanceInfo;\n    topology: NodeTopologyElement;\n    // other data\n    moduleInfo: SimpleModuleApplication\n}\n\n// apptype theater theater\n\nexport interface TheaterTopology extends TopologyElement {\n    elements: { [hostName: string]: ModuleInstance };\n    connection: ReteConnection[];\n}\n\nexport class TheaterApplication extends TheaterDTO implements TheaterTopology {\n    // theaterTopology data\n    elements: { [hostName: string]: ModuleInstance; };\n    connection: ReteConnection[];\n    // other data\n    properties: TheaterInstancePropertiesDTO;\n    topology: TheaterTopology;\n    // serve per validare il json risultante dal parsing del theaterApplication\n    validateObject?: string = \"theater\";\n}\n\nexport class AreaApplication extends AreaDTO {\n    color?: string;\n}\nexport class AreaColorDTO extends SimpleAreaDTO {\n    color: string;\n}\n\n\nexport class FlavorApplication extends FlavorBasicInfo {\n    flavorName: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/TheatreStatusDTO.html":{"url":"classes/TheatreStatusDTO.html","title":"class - TheatreStatusDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  TheatreStatusDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsDTO/theaterDTO.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano lo stato di un teatro.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                code\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/theaterDTO.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/theaterDTO.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/theaterDTO.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ModuleInstanceDTO, TheaterInstanceDTO } from \"./moduleDTO\"\n\n/**\n * Classe che contiene gli attributi che indicano il catalogo di riferimento di un teatro.\n */\nexport class TagCatalogueDTO {\n    description: string\n    id: string | number\n    name: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano lo stato di un teatro.\n */\nexport class TheatreStatusDTO {\n    code: string\n    id: string | number\n    name: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano un elemento nella sequenza di deploy.\n */\nexport class DeployInstanceDTO {\n    moduleInstanceConfigurationUUID?: string\n    moduleInstanceName: string\n    moduleInstanceUUID: string\n    moduleUUID: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano il blueprint di un teatro.\n */\nexport class BlueprintFileDTO {\n    description: string\n    imports: string[]\n    node_templates: {[name:string]:ModuleInstanceDTO|TheaterInstanceDTO}\n    tosca_definitions_version: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano il mapping nome-modulo.\n */\nexport class NameMappingDTO {\n    display_name: string\n    module_instance_name: string\n    module_name: string\n    node_template_name: string\n}\n/**\n * Classe che contiene gli attributi che indica l'array dei mapping nome-modulo.\n */\nexport class EntityNameMappingFileDTO {\n    name_mapping: NameMappingDTO[]\n}\n\n/**\n * Classe che contiene gli attributi che indicano il teaatro.\n */\nexport class TheaterDTO {\n    author: string\n    blueprintFile: BlueprintFileDTO\n    blueprintUUID: string | number\n    createdBy: string\n    createdDate: string\n    deploymentSequence: {[index:string]:DeployInstanceDTO} //tosee\n    description: string\n    entityNameMappingFile: EntityNameMappingFileDTO\n    id: string | number\n    isLocked: boolean\n    lastModifiedBy: string\n    lastModifiedDate: string\n    lockAcquiredTimestamp: string\n    lockLastUserAcquiring: string\n    lockReleasedTimestamp: string\n    name: string\n    status: TheatreStatusDTO\n    tags: TagCatalogueDTO[]\n    uuid: string\n    version: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"injectables/TokenService.html":{"url":"injectables/TokenService.html","title":"injectable - TokenService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TokenService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/token/token.service.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Servizio che serve per la gestione di un toker per le chiamate al server.\n\n            \n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                headers\n                            \n                            \n                                    Private\n                                httpgetOption\n                            \n                            \n                                    Private\n                                token\n                            \n                        \n                    \n                \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                getHeaders\n                            \n                            \n                                getHttpgetOption\n                            \n                            \n                                getToken\n                            \n                            \n                                setHeaders\n                            \n                            \n                                setHttpgetOption\n                            \n                            \n                                setToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Costruttore\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Definito in src/app/services/token/token.service.ts:24\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        getHeaders\n                        \n                    \n                \n            \n            \n                \ngetHeaders()\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/token/token.service.ts:60\n                \n            \n\n\n            \n                \n                    Funzione che ritorna l'header salvato.\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHttpgetOption\n                        \n                    \n                \n            \n            \n                \ngetHttpgetOption()\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/token/token.service.ts:74\n                \n            \n\n\n            \n                \n                    Funzione che ritorna l'http get option salvato.\n\n\n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getToken\n                        \n                    \n                \n            \n            \n                \ngetToken()\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/token/token.service.ts:46\n                \n            \n\n\n            \n                \n                    Funzione che ha come scopo di ritornare il token salvato.\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setHeaders\n                        \n                    \n                \n            \n            \n                \nsetHeaders(val: HttpHeaders)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/token/token.service.ts:54\n                \n            \n\n\n            \n                \n                    Funzione che setta l'header.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                HttpHeaders\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setHttpgetOption\n                        \n                    \n                \n            \n            \n                \nsetHttpgetOption(val: any)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/token/token.service.ts:67\n                \n            \n\n\n            \n                \n                    Funzione che salva l'http get option.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setToken\n                        \n                    \n                \n            \n            \n                \nsetToken(val: any)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/token/token.service.ts:32\n                \n            \n\n\n            \n                \n                    Funzione che si occupa di settare il token\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        headers\n                        \n                    \n                \n            \n                    \n                        \n                                Definito in src/app/services/token/token.service.ts:20\n                        \n                    \n\n            \n                \n                    Variabile che serve per memorizzare gli header della chiamata api.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        httpgetOption\n                        \n                    \n                \n            \n                    \n                        \n                                Definito in src/app/services/token/token.service.ts:24\n                        \n                    \n\n            \n                \n                    Variabile utilizzata per salvare le httpOption delle chiamate api.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        token\n                        \n                    \n                \n            \n                    \n                        \n                                Definito in src/app/services/token/token.service.ts:16\n                        \n                    \n\n            \n                \n                    Variabile che serve a memorizzare il token\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n\n/**\n * Servizio che serve per la gestione di un toker per le chiamate al server.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenService {\n\n  /**\n   * Variabile che serve a memorizzare il token\n   */\n  private token;\n  /**\n   * Variabile che serve per memorizzare gli header della chiamata api.\n   */\n  private headers;\n  /**\n   * Variabile utilizzata per salvare le httpOption delle chiamate api.\n   */\n  private httpgetOption;\n\n  constructor() { }\n\n  /**\n   * Funzione che si occupa di settare il token\n   * @param val \n   */\n  setToken(val: any) {\n    this.token = val;\n    this.headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer' + this.token,\n    });\n    this.httpgetOption = {\n      headers: this.headers,\n      observe: \"body\",\n    }\n  }\n  /**\n   * Funzione che ha come scopo di ritornare il token salvato.\n   */\n  getToken() {\n    return this.token;\n  }\n\n  /**\n   * Funzione che setta l'header.\n   * @param val \n   */\n  setHeaders(val: HttpHeaders) {\n    this.headers = val;\n  }\n  /**\n   * Funzione che ritorna l'header salvato.\n   */\n  getHeaders() {\n    return this.headers;\n  }\n\n  /** \n   * Funzione che salva l'http get option.\n  */\n  setHttpgetOption(val: any) {\n    this.httpgetOption = val;\n  }\n  /**\n   * Funzione che ritorna l'http get option salvato.\n   * @returns \n   */\n  getHttpgetOption() {\n    return this.httpgetOption as unknown;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/TopologyElement.html":{"url":"classes/TopologyElement.html","title":"class - TopologyElement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  TopologyElement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsApplication/applicationModels.ts\n        \n\n\n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                connection\n                            \n                            \n                                elements\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        connection\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ReteConnection[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsApplication/applicationModels.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        elements\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     literal type\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsApplication/applicationModels.ts:65\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ReteHostInfo } from \"src/app/rete-settings/nodes/rete-nodes/host/hostNode\";\nimport { ReteNetworkInfo } from \"src/app/rete-settings/nodes/rete-nodes/network/networkNode\";\nimport { ReteSubnetInfo } from \"src/app/rete-settings/nodes/rete-nodes/subnet/subnetNode\";\nimport { ReteMirroringModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/mirroringModuleInstance/mirroringModuleInstanceNode\";\nimport { ReteTheaterInternalServiceModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/theaterInternalServiceModuleInstance/theaterInternalServiceModuleInstanceNode\";\nimport { ReteTheaterModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/theaterModuleInstance/theaterModuleInstanceNode\";\nimport { FlavorBasicInfo } from \"../modelsDTO/falvorDTO\";\nimport { HostModuleDTO } from \"../modelsDTO/hostDTO\";\nimport { ModuleNetworkInterfaceDTO, ModuleInstancePropertiesDTO, SimpleModuleDTO, TheaterInstancePropertiesDTO, ModuleInstanceDTO, ModuleDTO, SimpleAreaDTO, AreaDTO } from \"../modelsDTO/moduleDTO\";\nimport { TheaterDTO } from \"../modelsDTO/theaterDTO\";\n\n\nexport interface CommonModule {\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n}\n\n\n/**\n * Classe contenente gli attributi utilizzati per le operazioni che coinvolgono i moduli.\n * ps. Questa struttura è prettamente utilizzata nella chiamata relativa al singolo modulo.\n */\nexport class ModuleApplication extends ModuleDTO implements CommonModule {\n    imports: string[] // perchè nell'export yaml è previsto\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n    // serve per validare il json risultante dal parsing del theaterApplication\n    validateObject?: string = \"module\";\n}\n// PER IMPLEMENTAZIONI FUTURE, PER COERENZA, PRENDERE DIRETTAMENTE I SINGOLI NODI DALLA CHIAMATA ESCLUSIVA E NON DA QUELLA CHE RESTITUISCE TUTTI I TEATRI\n/**\n * Classe contenente gli attributi utilizzati per le operazioni che coinvolgono i moduli.\n * ps. Questa struttura è prettamente utilizzata nella chiamata che prende tutti i moduli del teatro.\n */\nexport class SimpleModuleApplication extends SimpleModuleDTO implements CommonModule {\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n}\n\n\nexport class ReteConnection {\n    from: string;\n    port_src: string;\n    to: string;\n    port_dst: string;\n}\n\nexport interface TopologyList {\n    rete: any;\n    topology?: TopologyElement\n}\nexport class TopologyElement {\n    elements: { [name: string]: any };\n    connection: ReteConnection[]\n}\n\n// apptype module topology\n\nexport class NodeTopologyElement implements TopologyElement {\n    elements: { [hostName: string]: ReteHostInfo | ReteSubnetInfo | ReteNetworkInfo };\n    connection: ReteConnection[]\n}\n\nexport interface ModuleTopology extends TopologyList {\n    rete: ReteMirroringModuleInstanceInfo | ReteTheaterInternalServiceModuleInstanceInfo | ReteTheaterModuleInstanceInfo\n    topology: NodeTopologyElement;\n}\n\nexport class ModuleInstance extends ModuleInstanceDTO implements ModuleTopology {\n    // moduleTopology data\n    rete: ReteTheaterModuleInstanceInfo | ReteTheaterInternalServiceModuleInstanceInfo | ReteMirroringModuleInstanceInfo;\n    topology: NodeTopologyElement;\n    // other data\n    moduleInfo: SimpleModuleApplication\n}\n\n// apptype theater theater\n\nexport interface TheaterTopology extends TopologyElement {\n    elements: { [hostName: string]: ModuleInstance };\n    connection: ReteConnection[];\n}\n\nexport class TheaterApplication extends TheaterDTO implements TheaterTopology {\n    // theaterTopology data\n    elements: { [hostName: string]: ModuleInstance; };\n    connection: ReteConnection[];\n    // other data\n    properties: TheaterInstancePropertiesDTO;\n    topology: TheaterTopology;\n    // serve per validare il json risultante dal parsing del theaterApplication\n    validateObject?: string = \"theater\";\n}\n\nexport class AreaApplication extends AreaDTO {\n    color?: string;\n}\nexport class AreaColorDTO extends SimpleAreaDTO {\n    color: string;\n}\n\n\nexport class FlavorApplication extends FlavorBasicInfo {\n    flavorName: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"interfaces/TopologyList.html":{"url":"interfaces/TopologyList.html","title":"interface - TopologyList","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfacce\n  \n  TopologyList\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsApplication/applicationModels.ts\n        \n\n\n\n\n        \n            Indice\n            \n                \n                    \n                        \n                            Proprietà\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            rete\n                                        \n                                \n                                \n                                            Opzionale\n                                        \n                                            topology\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Proprietà\n                    \n                        \n                                \n                                    \n                                        \n                                        rete\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rete:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        topology\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        topology:         TopologyElement\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         TopologyElement\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Opzionale\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ReteHostInfo } from \"src/app/rete-settings/nodes/rete-nodes/host/hostNode\";\nimport { ReteNetworkInfo } from \"src/app/rete-settings/nodes/rete-nodes/network/networkNode\";\nimport { ReteSubnetInfo } from \"src/app/rete-settings/nodes/rete-nodes/subnet/subnetNode\";\nimport { ReteMirroringModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/mirroringModuleInstance/mirroringModuleInstanceNode\";\nimport { ReteTheaterInternalServiceModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/theaterInternalServiceModuleInstance/theaterInternalServiceModuleInstanceNode\";\nimport { ReteTheaterModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/theaterModuleInstance/theaterModuleInstanceNode\";\nimport { FlavorBasicInfo } from \"../modelsDTO/falvorDTO\";\nimport { HostModuleDTO } from \"../modelsDTO/hostDTO\";\nimport { ModuleNetworkInterfaceDTO, ModuleInstancePropertiesDTO, SimpleModuleDTO, TheaterInstancePropertiesDTO, ModuleInstanceDTO, ModuleDTO, SimpleAreaDTO, AreaDTO } from \"../modelsDTO/moduleDTO\";\nimport { TheaterDTO } from \"../modelsDTO/theaterDTO\";\n\n\nexport interface CommonModule {\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n}\n\n\n/**\n * Classe contenente gli attributi utilizzati per le operazioni che coinvolgono i moduli.\n * ps. Questa struttura è prettamente utilizzata nella chiamata relativa al singolo modulo.\n */\nexport class ModuleApplication extends ModuleDTO implements CommonModule {\n    imports: string[] // perchè nell'export yaml è previsto\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n    // serve per validare il json risultante dal parsing del theaterApplication\n    validateObject?: string = \"module\";\n}\n// PER IMPLEMENTAZIONI FUTURE, PER COERENZA, PRENDERE DIRETTAMENTE I SINGOLI NODI DALLA CHIAMATA ESCLUSIVA E NON DA QUELLA CHE RESTITUISCE TUTTI I TEATRI\n/**\n * Classe contenente gli attributi utilizzati per le operazioni che coinvolgono i moduli.\n * ps. Questa struttura è prettamente utilizzata nella chiamata che prende tutti i moduli del teatro.\n */\nexport class SimpleModuleApplication extends SimpleModuleDTO implements CommonModule {\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n}\n\n\nexport class ReteConnection {\n    from: string;\n    port_src: string;\n    to: string;\n    port_dst: string;\n}\n\nexport interface TopologyList {\n    rete: any;\n    topology?: TopologyElement\n}\nexport class TopologyElement {\n    elements: { [name: string]: any };\n    connection: ReteConnection[]\n}\n\n// apptype module topology\n\nexport class NodeTopologyElement implements TopologyElement {\n    elements: { [hostName: string]: ReteHostInfo | ReteSubnetInfo | ReteNetworkInfo };\n    connection: ReteConnection[]\n}\n\nexport interface ModuleTopology extends TopologyList {\n    rete: ReteMirroringModuleInstanceInfo | ReteTheaterInternalServiceModuleInstanceInfo | ReteTheaterModuleInstanceInfo\n    topology: NodeTopologyElement;\n}\n\nexport class ModuleInstance extends ModuleInstanceDTO implements ModuleTopology {\n    // moduleTopology data\n    rete: ReteTheaterModuleInstanceInfo | ReteTheaterInternalServiceModuleInstanceInfo | ReteMirroringModuleInstanceInfo;\n    topology: NodeTopologyElement;\n    // other data\n    moduleInfo: SimpleModuleApplication\n}\n\n// apptype theater theater\n\nexport interface TheaterTopology extends TopologyElement {\n    elements: { [hostName: string]: ModuleInstance };\n    connection: ReteConnection[];\n}\n\nexport class TheaterApplication extends TheaterDTO implements TheaterTopology {\n    // theaterTopology data\n    elements: { [hostName: string]: ModuleInstance; };\n    connection: ReteConnection[];\n    // other data\n    properties: TheaterInstancePropertiesDTO;\n    topology: TheaterTopology;\n    // serve per validare il json risultante dal parsing del theaterApplication\n    validateObject?: string = \"theater\";\n}\n\nexport class AreaApplication extends AreaDTO {\n    color?: string;\n}\nexport class AreaColorDTO extends SimpleAreaDTO {\n    color: string;\n}\n\n\nexport class FlavorApplication extends FlavorBasicInfo {\n    flavorName: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/TypesCatalogueDTO.html":{"url":"classes/TypesCatalogueDTO.html","title":"class - TypesCatalogueDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  TypesCatalogueDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsDTO/moduleDTO.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indica il catalogo del tipo.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                group\n                            \n                            \n                                id\n                            \n                            \n                                parentId\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        group\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        parentId\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     literal type\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:29\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PageableDTO, SortDTO } from './elementDTO';\nimport { NetworkDTO } from './networkDTO';\nimport { TheaterDTO } from './theaterDTO';\n\n/**\n * Classe che contiene gli attributi che indicano l'insieme dei moduli ritornati dal teatro.\n */\nexport class ModuleListDTO {\n    content: SimpleModuleDTO[]\n    pageable: PageableDTO\n    last: boolean\n    totalPages: string | number\n    totalElements: string | number\n    size: string | number\n    number: string | number\n    sort: SortDTO\n    numberOfElements: string | number\n    first: boolean\n    empty: boolean\n}\n\n/**\n * Classe che contiene gli attributi che indica il catalogo del tipo.\n */\nexport class TypesCatalogueDTO {\n    group: string\n    id: string | number\n    parentId: {}\n    value: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano la classificazione del modulo.\n */\nexport class ModuleClassificationDTO {\n    blueprintType: string\n    category: string\n    expectedInstanceType: string\n    id: string | number\n    mcClass: string\n    type: string\n    uuid: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano un parametro generico.\n */\nexport class GenericParameterDTO {\n    type: string\n    default: string\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano i parametri di configurazione di un modulto.\n */\nexport class ConfigurationTemplateDTO {\n    anchor_parameters: { [name: string]: GenericParameterDTO | string }\n    instance_parameters: { [name: string]: GenericParameterDTO }\n    structural_parameters: { [name: string]: GenericParameterDTO }\n    fixed_parameters: { [name: string]: GenericParameterDTO }\n    control_parameters: { [name: string]: GenericParameterDTO }\n    infrastructure_parameters: { [name: string]: GenericParameterDTO }\n    module: string\n    description: string\n    category: string\n    version: string | number\n    platform: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano la modalità di un modulo.\n */\nexport class ModuleModeDTO {\n    code: string\n    id: string | number\n    name: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano lo stato di un modulo.\n */\nexport class ModuleStatusDTO {\n    descriptionCode: string\n    id: string | number\n    name: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le statitistiche di un modulo.\n */\nexport class StatisticItemDTO {\n    error: string | number\n    updated: string | number\n    inserted: string | number\n}\n\n/**\n * Classe che contiene gli attributi che indicano il modulo (simple - in dipendenza del teatro).\n */\nexport class SimpleModuleDTO {\n    createdBy: string\n    createdDate: string\n    description: string\n    id: string | number\n    isLocked: boolean\n    lastModifiedBy: string\n    lastModifiedDate: string\n    lockAcquiredTimestamp: string\n    lockLastUserAcquiring: string\n    lockReleasedTimestamp: string\n    name: string\n    status: ModuleStatusDTO\n    type?: string | any\n    uuid: string\n    version: string | number\n}\n\n/**\n * Classe che contiene gli attributi che indicano il modulo (complex - ritorato da call appostita).\n * @extends {SimpleModuleDTO}\n */\nexport class ModuleDTO extends SimpleModuleDTO {\n    attachments: string[]\n    author: string\n    capabilities: { [name: string]: string }\n    catalog1: TypesCatalogueDTO\n    catalog2: TypesCatalogueDTO\n    catalog3: TypesCatalogueDTO\n    classification: ModuleClassificationDTO\n    configurationTemplate: ConfigurationTemplateDTO\n    detailProperties: {}\n    input: { [name: string]: string }\n    output: { [name: string]: string }\n    mode: ModuleModeDTO\n    statistics: { [name: string]: StatisticItemDTO | string | number }\n    tags: []\n}\n\n/**\n * Classe che contiene gli attributi che indicano le interfacce esposte da un modulo.\n */\nexport class ModuleNetworkInterfaceDTO {\n    id: string | number\n    label: string\n    module: ModuleDTO\n    network: NetworkDTO\n    nodeName: string\n    type: string\n    uuid: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le connessioni interfaccia-modulo.\n */\nexport class ConsumerInterfaceLinkDTO {\n    local_interface: string\n    module_instance: string\n    remote_interface: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà dell'istanza di un modulo all'interno del node_templates.\n */\nexport class ModuleInstancePropertiesDTO {\n    area: string\n    description: string\n    module: string\n    version: string | number\n    sequence: string | number\n    consumer_interfaces_link: ConsumerInterfaceLinkDTO[]\n}\n\n\n/**\n * Classe che contiene gli attributi che indicano l'area di appartenenza di un modulo (complex).\n */\nexport class AreaDTO {\n    id: string | number;\n    uuid: string;\n    name: string;\n    description: string;\n    theater: TheaterDTO;\n    deleted: boolean | string;\n}\n\n/**\n * Classe che contiene gli attributi che indicano l'area di appartenenza di un modulo (simple).\n */\nexport class SimpleAreaDTO {\n    area: string\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà dell'istanza di un teatro all'interno del node_templates.\n */\nexport class TheaterInstancePropertiesDTO {\n    mode: string\n    tags: TagTIP[]\n    areas: SimpleAreaDTO[]\n    author: string\n    version: string | number\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano un tag.\n */\nexport class TagTIP{\n    tag: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano in via generale le caratteristiche di un elemento che deve essere presente nel node_templates.\n */\nexport class ElementIntoTheaterDTO {  // goes into map in blueprint [name:string]: Module...\n    properties: ModuleInstancePropertiesDTO | TheaterInstancePropertiesDTO\n    type: string\n}\n\n\n/**\n * Classe che contiene gli attributi che indicano le caratteristiche di un teatro presente nel node_templates.\n */\nexport class ModuleInstanceDTO {\n    properties: ModuleInstancePropertiesDTO\n    type: string\n}\n/**\n * Classe che contiene gli attributi che indicano le caratteristiche di un modulo presente nel node_templates.\n */\nexport class TheaterInstanceDTO {\n    properties: TheaterInstancePropertiesDTO\n    type: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"components/UnderbarComponent.html":{"url":"components/UnderbarComponent.html","title":"component - UnderbarComponent","body":"\n                   \n\n\n\n\n\n  Componenti\n  \n  UnderbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/underbar/underbar.component.ts\n\n\n\n    \n        Descrizione\n    \n    \n        Componente che consente di mostrare una underbar (sottoposta) alla navbar ad elementi generici.\n\n    \n\n\n\n\n\n    Metadati\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-underbar\n            \n\n            \n                styleUrls\n                ./underbar.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./underbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Indice\n    \n        \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                itemClicked\n                            \n                        \n                    \n                \n\n                \n                    \n                        Input\n                    \n                \n                \n                    \n                        \n                            \n                                element\n                            \n                        \n                    \n                \n\n                \n                    \n                        Output\n                    \n                \n                \n                    \n                        \n                            \n                                itemSelected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Costruttore\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Definito in src/app/components/underbar/underbar.component.ts:23\n                            \n                        \n\n                \n                    \n                            Costruttore componente UnderbarComponent.\nControlla che tutti gli id siano diversi prima di procedere alla loro visualizzazione.\n\n                    \n                \n            \n        \n\n\n    \n    Input\n        \n            \n                \n                    \n                        \n                        element\n                    \n                \n                \n                    \n                        Tipo :         UnderbarElement[]\n\n                    \n                \n                        \n                            \n                                    Definito in src/app/components/underbar/underbar.component.ts:19\n                            \n                        \n                \n                    \n                        Variabile data in input che contiene gli elementi dell'underbar.\n\n                    \n                \n            \n        \n\n    \n    Output\n        \n            \n                \n                    \n                        \n                        itemSelected\n                    \n                \n                \n                    \n                        Tipo :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Definito in src/app/components/underbar/underbar.component.ts:23\n                            \n                        \n                \n                    \n                        Variabile (event) che ritorna l'elemento selezionatp\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        itemClicked\n                        \n                    \n                \n            \n            \n                \nitemClicked(event: UnderbarItem)\n                \n            \n\n\n            \n                \n                    Definito in src/app/components/underbar/underbar.component.ts:54\n                \n            \n\n\n            \n                \n                    Funzione che emette l'evento appena si seleziona un elemento.\nSee {itemSelected}\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                UnderbarItem\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Output, Input, ChangeDetectionStrategy } from '@angular/core';\nimport { UnderbarItem, UnderbarElement } from './underbarType';\n\n/**\n * Componente che consente di mostrare una underbar (sottoposta) alla navbar ad elementi generici.\n */\n@Component({\n  selector: 'app-underbar',\n  templateUrl: './underbar.component.html',\n  styleUrls: ['./underbar.component.sass'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class UnderbarComponent {\n\n  /**\n   * Variabile data in input che contiene gli elementi dell'underbar.\n   * @type {UnderbarElement}\n   */\n  @Input() element: UnderbarElement[];\n  /**\n   * Variabile (event) che ritorna l'elemento selezionatp\n   */\n  @Output() itemSelected:EventEmitter = new EventEmitter();\n\n  /**\n   * Costruttore componente UnderbarComponent.\n   * Controlla che tutti gli id siano diversi prima di procedere alla loro visualizzazione.\n   * @returns \n   */\n  constructor() {\n    if (!this.element)\n      return\n    let check = [];\n    this.element.forEach(\n      (el) => {\n        el.element.forEach(e => {\n          if (check[e.id])\n            check[e.id] = true;\n          else {\n            console.error(\"UnderbarItem [ID] duplicated\");\n            return;\n          }\n        }\n        );\n      }\n    )\n  }\n\n  /**\n   * Funzione che emette l'evento appena si seleziona un elemento.\n   * @param event \n   * @see {itemSelected}\n   */\n  itemClicked(event: UnderbarItem) {\n    this.itemSelected.emit(event);\n  }\n\n}\n\n    \n\n    \n        \n    \n    \n\n        &nbsp;\n\n        \n\n             1\">\n                \n                    \n                        \n                            \n                        \n                        \n                        \n                    \n                \n            \n\n            \n                \n                    \n                \n            \n\n            \n                \n            \n\n            \n                \n            \n\n        \n\n    \n    \n\n    \n\n    \n                \n                    ./underbar.component.sass\n                \n                \n    \n\n    \n        \n        \n            \n                Legenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento html con direttive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                      1\">                                                                                                                                                                                                                                                                                                                                                                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ComposerComponent', 'selector': 'app-composer'},{'name': 'ControlTemplate', 'selector': ''},{'name': 'DataInputComponent', 'selector': 'app-data-input'},{'name': 'DataInputV2Component', 'selector': 'app-data-input-v2'},{'name': 'DataItemComponent', 'selector': 'app-window-item'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HostComponent', 'selector': ''},{'name': 'HowToUseComponent', 'selector': 'app-how-to-use'},{'name': 'MirroringModuleInstanceComponent', 'selector': ''},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavbarElementComponent', 'selector': 'app-navbar-element'},{'name': 'NetworkComponent', 'selector': ''},{'name': 'OffcanvasComponent', 'selector': 'app-offcanvas'},{'name': 'ReteModuleComposerComponent', 'selector': 'app-rete-module-composer'},{'name': 'ReteModuleVisualizerComponent', 'selector': 'app-rete-module-visualizer'},{'name': 'ReteTheaterComposerComponent', 'selector': 'app-rete-theater-composer'},{'name': 'ReteTheaterVisualizerComponent', 'selector': 'app-rete-theater-visualizer'},{'name': 'SubnetComponent', 'selector': ''},{'name': 'TabnavComponent', 'selector': 'app-tabnav'},{'name': 'TheaterInternalServiceModuleInstanceComponent', 'selector': ''},{'name': 'TheaterModuleInstanceComponent', 'selector': ''},{'name': 'UnderbarComponent', 'selector': 'app-underbar'},{'name': 'VisualizerComponent', 'selector': 'app-displayer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UnderbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/UnderbarElement.html":{"url":"classes/UnderbarElement.html","title":"class - UnderbarElement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  UnderbarElement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/underbar/underbarType.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Funzione usata come input per la componente UnderbarComponent.\nSee {UnderbarComponent}\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                element\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        element\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         UnderbarItem[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/underbar/underbarType.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { TemplateRef } from \"@angular/core\";\n/**\n * Funzione usata come input per la componente UnderbarComponent.\n * @see {UnderbarComponent}\n */\nexport class UnderbarElement {\n    element: UnderbarItem[];\n}\n\n/**\n * Elemento singolo per l'underbar.\n * Usato anche come ritorno.\n * @see {UnderbarComponent}\n */\nexport class UnderbarItem {\n    id: string;\n    type: \"separator\" | \"template\" | \"button\";\n    button?: {\n        iconClass: string\n        tooltipText: string\n    } \n    template?: TemplateRef;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/UnderbarItem.html":{"url":"classes/UnderbarItem.html","title":"class - UnderbarItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  UnderbarItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/underbar/underbarType.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Elemento singolo per l'underbar.\nUsato anche come ritorno.\nSee {UnderbarComponent}\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                    Opzionale\n                                button\n                            \n                            \n                                id\n                            \n                            \n                                    Opzionale\n                                template\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        button\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     literal type\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/underbar/underbarType.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/underbar/underbarType.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        template\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     TemplateRef\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/underbar/underbarType.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     \"separator\" | \"template\" | \"button\"\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/underbar/underbarType.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { TemplateRef } from \"@angular/core\";\n/**\n * Funzione usata come input per la componente UnderbarComponent.\n * @see {UnderbarComponent}\n */\nexport class UnderbarElement {\n    element: UnderbarItem[];\n}\n\n/**\n * Elemento singolo per l'underbar.\n * Usato anche come ritorno.\n * @see {UnderbarComponent}\n */\nexport class UnderbarItem {\n    id: string;\n    type: \"separator\" | \"template\" | \"button\";\n    button?: {\n        iconClass: string\n        tooltipText: string\n    } \n    template?: TemplateRef;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/VirtualMachine.html":{"url":"classes/VirtualMachine.html","title":"class - VirtualMachine","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  VirtualMachine\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsExport/moduleExport.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano l'insieme di host presenti in un modulo.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                ports\n                            \n                            \n                                virtual_machine\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        ports\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     VirtualMachinePorts[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:91\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        virtual_machine\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:90\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ModeTypeExport, ModuleTypeExport, NetworkTypeExport, NodeTypeExport, PortTypeExport, RelationshipsTypeExport, SubnetTypeExport, ToscaDefinitionType } from \"./TypeExport\"\n\n\n/**\n * Classe utilizzata per l'export. \n * Contiene le informazioni generali per il modulo che devono esserci nello standard Tosca.\n */\nexport class ModuleExport {\n    tosca_definitions_version: ToscaDefinitionType\n    description: string\n    imports: string[]\n    node_templates: { [name: string]: ModuleSimpleData | NodeSimpleData | PortSimpleData | NetworkSimpleData | SubnetSimpleData }\n    dsl_definition: any | null; //future\n    capabilites: any | null //future\n    outputs: any | null //future\n}\n\n/**\n * Classe che contiene gli attributi che indicano la rappresentazione del modulo per l'export.\n */\nexport class ModuleSimpleData {\n    type: ModuleTypeExport\n    properties: PropertiesMSD\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà del modulo per l'export.\n */\nexport class PropertiesMSD {\n    mode: ModeTypeExport\n    description: string\n    version: string | number\n    constraints: ConstraintsMSD\n    interface_networks: {\n        providers: InterfaceNetworksProvider[]\n        consumers: InterfaceNetworksConsumer[]\n    }\n    virtual_machines: VirtualMachine[]\n}\n/**\n * Classe che contiene gli attributi che indicano i vincoli di connessione del modulo per l'export.\n */\nexport class ConstraintsMSD {\n    interface_constraints: InterfaceConstraints[]\n    module_constraints: ModuleConstraints[]\n    network_constraints: NetworkConstraints[]\n}\n/**\n * Classe che contiene gli attributi che indicano i viconli per le interfacce di connessione del modulo.\n */\nexport class InterfaceConstraints {\n    local_interface: string\n    multiple_mode: boolean = false //future\n    module_name: string\n    compatibility: string = \"1.0\" // future\n    remote_interface: string\n}\n/**\n * Classe che contiene gli attributi che indicano i viconli del modulo.\n */\nexport class ModuleConstraints {\n}\n/**\n * Classe che contiene gli attributi che indicano i viconli dei network del modulo.\n */\nexport class NetworkConstraints {\n}\n/**\n * Classe che contiene gli attributi che indicano le interfacce provider del modulo.\n */\nexport class InterfaceNetworksProvider {\n    interface: string\n    network: string\n    tag: string\n    subnets: SubnetExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano le interfacce consumer del modulo.\n */\nexport class InterfaceNetworksConsumer {\n    interface: string\n    network: string\n    tag: string\n    subnets: SubnetExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano l'insieme di host presenti in un modulo.\n */\nexport class VirtualMachine {\n    virtual_machine: string\n    ports: VirtualMachinePorts[]\n}\n/**\n * Classe che contiene gli attributi che indicano le porte associate ad un host di un modulo.\n */\nexport class VirtualMachinePorts {\n    port: string\n    network: string\n    subnets: SubnetExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano la subnet connessa alla porte dell'host.\n * @see {VirtualMachinePorts}\n */\nexport class SubnetExport {\n    subnet: string;\n}\n\n/**\n * Classe che contiene gli attributi che indica un nodo all'interno dei node_templates.\n * @see {ModuleExport}\n */\nexport class NodeSimpleData {\n    type: NodeTypeExport\n    properties: any | null // future\n    interfaces: any | null // future\n    relationships: RelationshipsExport[]\n}\n\n/**\n * Classe che contiene gli attributi che indicano le relazioni generali.\n */\nexport class RelationshipsExport {\n    type: RelationshipsTypeExport\n    target: string\n}\n/**\n * Classe che contiene gli attributi che indicano i dati della porta all'interno dei node_templates.\n */\nexport class PortSimpleData {\n    type: PortTypeExport\n    relationships: RelationshipsExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano i dati delle network all'interno dei node_templates.\n */\nexport class NetworkSimpleData {\n    type: NetworkTypeExport\n    properties: PropertiesNSD\n}\n/**\n * Classe che contiene gli attributi che indicano le proprietà della network all'interno dei node_templates.\n * @see {NetworkSimpleData}\n */\nexport class PropertiesNSD {\n    openstack_config?: any | null // future\n    use_external_resource?: boolean | null // future\n    resource_id?: any | null // future\n}\n\n/**\n * Classe che contiene gli attributi che indicano i dati delle subnet all'interno dei node_templates.\n */\nexport class SubnetSimpleData {\n    type: SubnetTypeExport\n    relationships: RelationshipsExport[]\n    properties: PropertiesSSD\n}\n/**\n * Classe che contiene gli attributi che indicano le proprietà della subnet all'interno dei node_templates.\n * @see {NetworkSimpleData}\n */\nexport class PropertiesSSD {\n    subnet?: {\n        ip_version: string | number\n        cidr: string\n        enable_dhcp: boolean\n        gateway_ip?: any | null // future\n    }\n    openstack_config?: any | null // future\n    use_external_resource?: boolean | null // future\n    resource_id?: any | null // future\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/VirtualMachinePorts.html":{"url":"classes/VirtualMachinePorts.html","title":"class - VirtualMachinePorts","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  VirtualMachinePorts\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsExport/moduleExport.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano le porte associate ad un host di un modulo.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                network\n                            \n                            \n                                port\n                            \n                            \n                                subnets\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        network\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:98\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        port\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:97\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subnets\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         SubnetExport[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:99\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ModeTypeExport, ModuleTypeExport, NetworkTypeExport, NodeTypeExport, PortTypeExport, RelationshipsTypeExport, SubnetTypeExport, ToscaDefinitionType } from \"./TypeExport\"\n\n\n/**\n * Classe utilizzata per l'export. \n * Contiene le informazioni generali per il modulo che devono esserci nello standard Tosca.\n */\nexport class ModuleExport {\n    tosca_definitions_version: ToscaDefinitionType\n    description: string\n    imports: string[]\n    node_templates: { [name: string]: ModuleSimpleData | NodeSimpleData | PortSimpleData | NetworkSimpleData | SubnetSimpleData }\n    dsl_definition: any | null; //future\n    capabilites: any | null //future\n    outputs: any | null //future\n}\n\n/**\n * Classe che contiene gli attributi che indicano la rappresentazione del modulo per l'export.\n */\nexport class ModuleSimpleData {\n    type: ModuleTypeExport\n    properties: PropertiesMSD\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà del modulo per l'export.\n */\nexport class PropertiesMSD {\n    mode: ModeTypeExport\n    description: string\n    version: string | number\n    constraints: ConstraintsMSD\n    interface_networks: {\n        providers: InterfaceNetworksProvider[]\n        consumers: InterfaceNetworksConsumer[]\n    }\n    virtual_machines: VirtualMachine[]\n}\n/**\n * Classe che contiene gli attributi che indicano i vincoli di connessione del modulo per l'export.\n */\nexport class ConstraintsMSD {\n    interface_constraints: InterfaceConstraints[]\n    module_constraints: ModuleConstraints[]\n    network_constraints: NetworkConstraints[]\n}\n/**\n * Classe che contiene gli attributi che indicano i viconli per le interfacce di connessione del modulo.\n */\nexport class InterfaceConstraints {\n    local_interface: string\n    multiple_mode: boolean = false //future\n    module_name: string\n    compatibility: string = \"1.0\" // future\n    remote_interface: string\n}\n/**\n * Classe che contiene gli attributi che indicano i viconli del modulo.\n */\nexport class ModuleConstraints {\n}\n/**\n * Classe che contiene gli attributi che indicano i viconli dei network del modulo.\n */\nexport class NetworkConstraints {\n}\n/**\n * Classe che contiene gli attributi che indicano le interfacce provider del modulo.\n */\nexport class InterfaceNetworksProvider {\n    interface: string\n    network: string\n    tag: string\n    subnets: SubnetExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano le interfacce consumer del modulo.\n */\nexport class InterfaceNetworksConsumer {\n    interface: string\n    network: string\n    tag: string\n    subnets: SubnetExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano l'insieme di host presenti in un modulo.\n */\nexport class VirtualMachine {\n    virtual_machine: string\n    ports: VirtualMachinePorts[]\n}\n/**\n * Classe che contiene gli attributi che indicano le porte associate ad un host di un modulo.\n */\nexport class VirtualMachinePorts {\n    port: string\n    network: string\n    subnets: SubnetExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano la subnet connessa alla porte dell'host.\n * @see {VirtualMachinePorts}\n */\nexport class SubnetExport {\n    subnet: string;\n}\n\n/**\n * Classe che contiene gli attributi che indica un nodo all'interno dei node_templates.\n * @see {ModuleExport}\n */\nexport class NodeSimpleData {\n    type: NodeTypeExport\n    properties: any | null // future\n    interfaces: any | null // future\n    relationships: RelationshipsExport[]\n}\n\n/**\n * Classe che contiene gli attributi che indicano le relazioni generali.\n */\nexport class RelationshipsExport {\n    type: RelationshipsTypeExport\n    target: string\n}\n/**\n * Classe che contiene gli attributi che indicano i dati della porta all'interno dei node_templates.\n */\nexport class PortSimpleData {\n    type: PortTypeExport\n    relationships: RelationshipsExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano i dati delle network all'interno dei node_templates.\n */\nexport class NetworkSimpleData {\n    type: NetworkTypeExport\n    properties: PropertiesNSD\n}\n/**\n * Classe che contiene gli attributi che indicano le proprietà della network all'interno dei node_templates.\n * @see {NetworkSimpleData}\n */\nexport class PropertiesNSD {\n    openstack_config?: any | null // future\n    use_external_resource?: boolean | null // future\n    resource_id?: any | null // future\n}\n\n/**\n * Classe che contiene gli attributi che indicano i dati delle subnet all'interno dei node_templates.\n */\nexport class SubnetSimpleData {\n    type: SubnetTypeExport\n    relationships: RelationshipsExport[]\n    properties: PropertiesSSD\n}\n/**\n * Classe che contiene gli attributi che indicano le proprietà della subnet all'interno dei node_templates.\n * @see {NetworkSimpleData}\n */\nexport class PropertiesSSD {\n    subnet?: {\n        ip_version: string | number\n        cidr: string\n        enable_dhcp: boolean\n        gateway_ip?: any | null // future\n    }\n    openstack_config?: any | null // future\n    use_external_resource?: boolean | null // future\n    resource_id?: any | null // future\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/VirtualizationEnvironmentTypeDTO.html":{"url":"classes/VirtualizationEnvironmentTypeDTO.html","title":"class - VirtualizationEnvironmentTypeDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  VirtualizationEnvironmentTypeDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsDTO/falvorDTO.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano l'environment virtualizzato del flavor.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                isEnabled\n                            \n                            \n                                name\n                            \n                            \n                                nameAlias\n                            \n                            \n                                supportMachineId\n                            \n                            \n                                uuid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/falvorDTO.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/falvorDTO.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isEnabled\n                        \n                    \n                \n            \n                    \n                        \n                                Definito in src/app/services/modelsDTO/falvorDTO.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/falvorDTO.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nameAlias\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/falvorDTO.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        supportMachineId\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/falvorDTO.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uuid\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/falvorDTO.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class FlavorBasicInfo {\n    cpu: number | string;\n    disk: number | string;\n    ram: number | string;\n}\n\n/**\n * Classe che contiene gli attributi che indicano l'environment virtualizzato del flavor.\n */\nexport class VirtualizationEnvironmentTypeDTO {\n    description: string\n    id: number\n    isEnabled: true\n    name: string\n    nameAlias: string\n    supportMachineId: number\n    uuid: string\n}\n\n\n/**\n * Classe che contiene gli attributi che indicano i flavor utilizzabili.\n * @extends {FlavorBasicInfo}\n */\nexport class FlavorDTO extends FlavorBasicInfo {\n    name: string;\n    detailJson: {};\n    id: number | string;\n    uuid: string;\n    virtualizationEnvironmentType: VirtualizationEnvironmentTypeDTO;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"components/VisualizerComponent.html":{"url":"components/VisualizerComponent.html","title":"component - VisualizerComponent","body":"\n                   \n\n\n\n\n\n  Componenti\n  \n  VisualizerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/visualizer-system/visualizer/visualizer.component.ts\n\n\n\n\n\n    \n        Implementa\n    \n    \n                    OnInit\n    \n\n\n\n    Metadati\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-displayer\n            \n\n            \n                styleUrls\n                ./visualizer.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./visualizer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                active\n                            \n                            \n                                dataFromRouter\n                            \n                            \n                                    Protected\n                                hasproblem\n                            \n                            \n                                    Protected\n                                id\n                            \n                            \n                                    Protected\n                                module\n                            \n                            \n                                    Protected\n                                MODULE\n                            \n                            \n                                    Protected\n                                theater\n                            \n                            \n                                    Protected\n                                THEATER\n                            \n                            \n                                    Protected\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                gohome\n                            \n                            \n                                    Async\n                                initMODULE\n                            \n                            \n                                    Async\n                                initTHEATER\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Costruttore\n        \n            \n                \n                    \nconstructor(router: Router, parseService: ParseService, spinnerService: SpinnerService)\n                    \n                \n                        \n                            \n                                Definito in src/app/visualizer-system/visualizer/visualizer.component.ts:59\n                            \n                        \n\n                \n                    \n                            Costruttore di VisualizerComponent.\nSi occupa di prendere i dati di route url e valorizzare le rispettive variabili.\n\n                            \n                                    Parametri :\n                                    \n                                        \n                                            \n                                                Nome\n                                                    Tipo\n                                                Opzionale\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parseService\n                                                  \n                                                        \n                                                                        ParseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        spinnerService\n                                                  \n                                                        \n                                                                        SpinnerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        gohome\n                        \n                    \n                \n            \n            \n                \n                    \n                    gohome()\n                \n            \n\n\n            \n                \n                    Definito in src/app/visualizer-system/visualizer/visualizer.component.ts:156\n                \n            \n\n\n            \n                \n                    Funzione che esegue una redirezione alla pagine home\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        initMODULE\n                        \n                    \n                \n            \n            \n                \n                    \n                    initMODULE()\n                \n            \n\n\n            \n                \n                    Definito in src/app/visualizer-system/visualizer/visualizer.component.ts:110\n                \n            \n\n\n            \n                \n                    Funzione che esegue tutte le funzioni di inizializzazione, reperimento e filtraggio dati da poter essere passati alla componente di TheaterVisualizer.\nEsegue anche le attività di spinner-loading.\nSee {ReteModuleComposer}\nSee {SpinnerService}\nSee {parseService}\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        initTHEATER\n                        \n                    \n                \n            \n            \n                \n                    \n                    initTHEATER()\n                \n            \n\n\n            \n                \n                    Definito in src/app/visualizer-system/visualizer/visualizer.component.ts:135\n                \n            \n\n\n            \n                \n                    Funzione che esegue tutte le funzioni di inizializzazione, reperimento e filtraggio dati da poter essere passati alla componente di TheaterVisualizer.\nEsegue anche le attività di spinner-loading.\nSee {ReteTheaterComposer}\nSee {SpinnerService}\nSee {parseService}\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Definito in src/app/visualizer-system/visualizer/visualizer.component.ts:90\n                \n            \n\n\n            \n                \n                    Funzione richiamata all'inizializzazione della componente.\nRichiama le funzioni adeguate in base al tipo di componente Modulo o Teatro scelto per la visualizzazione.\nSee {initMODULE}\nSee {initTHEATER}\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        active\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                \n                    \n                        Valore predefinito : false\n                    \n                \n                    \n                        \n                                Definito in src/app/visualizer-system/visualizer/visualizer.component.ts:45\n                        \n                    \n\n            \n                \n                    Variabile che indica lo stato di reperimento dei dati prima di visualizzare le componenti di costruzione\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataFromRouter\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         DataRouteVisualizer\n\n                    \n                \n                    \n                        \n                                Definito in src/app/visualizer-system/visualizer/visualizer.component.ts:23\n                        \n                    \n\n            \n                \n                    Variabile che ha come scopo prendere i dati passati come url-parameters\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        hasproblem\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                \n                    \n                        Valore predefinito : false\n                    \n                \n                    \n                        \n                                Definito in src/app/visualizer-system/visualizer/visualizer.component.ts:38\n                        \n                    \n\n            \n                \n                    Variabile che viene valorizzata a true se si è verificato un errore.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/visualizer-system/visualizer/visualizer.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ModuleApplication\n\n                    \n                \n                    \n                        \n                                Definito in src/app/visualizer-system/visualizer/visualizer.component.ts:52\n                        \n                    \n\n            \n                \n                    Variabile che memorizza il modulo ricavato dal parser.\nSee {parseService}\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        MODULE\n                        \n                    \n                \n            \n                \n                    \n                        Valore predefinito : SubjectType.MODULE\n                    \n                \n                    \n                        \n                                Definito in src/app/visualizer-system/visualizer/visualizer.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        theater\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         TheaterApplication\n\n                    \n                \n                    \n                        \n                                Definito in src/app/visualizer-system/visualizer/visualizer.component.ts:59\n                        \n                    \n\n            \n                \n                    Variabile che memorizza il modulo ricavato dal parser.\nSee {parseService}\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        THEATER\n                        \n                    \n                \n            \n                \n                    \n                        Valore predefinito : SubjectType.THEATER\n                    \n                \n                    \n                        \n                                Definito in src/app/visualizer-system/visualizer/visualizer.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         SubjectType\n\n                    \n                \n                    \n                        \n                                Definito in src/app/visualizer-system/visualizer/visualizer.component.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { from } from 'rxjs';\nimport { DataRouteVisualizer, SubjectType } from 'src/app/models/appType';\nimport { ParseService } from 'src/app/services/application/parse/parse.service';\nimport { SpinnerService } from 'src/app/services/application/spinner/spinner.service';\nimport { ModuleApplication, TheaterApplication } from 'src/app/services/modelsApplication/applicationModels';\n\n\n@Component({\n  selector: 'app-displayer',\n  templateUrl: './visualizer.component.html',\n  styleUrls: ['./visualizer.component.sass'],\n})\n\nexport class VisualizerComponent implements OnInit {\n\n  /**\n   * Variabile che ha come scopo prendere i dati passati come url-parameters\n   * @type {DataRouteComposer} \n   */\n  dataFromRouter: DataRouteVisualizer;\n  // variabili istanziate come valori proveniente dalla dataFormRouter\n  protected id: string | number;\n  protected type: SubjectType;\n\n  // type var\n  protected MODULE = SubjectType.MODULE;\n  protected THEATER = SubjectType.THEATER;\n\n\n  /**\n   * Variabile che viene valorizzata a true se si è verificato un errore.\n   * @type {boolean}\n   * @default false\n   */\n  protected hasproblem: boolean = false;\n\n  /**\n   * Variabile che indica lo stato di reperimento dei dati prima di visualizzare le componenti di costruzione\n   * @type  {boolean}\n   * @default false\n   */\n  protected active: boolean = false;\n\n  /**\n   * Variabile che memorizza il modulo ricavato dal parser.\n   * @type {ModuleApplication}\n   * @see {parseService}\n   */\n  protected module: ModuleApplication;\n\n  /**\n   * Variabile che memorizza il modulo ricavato dal parser.\n   * @type {TheaterApplication}\n   * @see {parseService}\n   */\n  protected theater: TheaterApplication;\n\n  /**\n   * Costruttore di VisualizerComponent.\n   * Si occupa di prendere i dati di route url e valorizzare le rispettive variabili.\n   * @param router \n   * @param parseService \n   * @param spinnerService \n   */\n  constructor(\n    private router: Router,\n    private parseService: ParseService,\n    private spinnerService: SpinnerService,\n  ) {\n    this.dataFromRouter = this.router.getCurrentNavigation().extras.state as DataRouteVisualizer\n    if (this.dataFromRouter) {\n      this.id = this.dataFromRouter.id;\n      this.type = this.dataFromRouter.type;\n    }\n    else {\n      this.hasproblem = true;\n    }\n\n  }\n\n  /**\n   * Funzione richiamata all'inizializzazione della componente.\n   * Richiama le funzioni adeguate in base al tipo di componente Modulo o Teatro scelto per la visualizzazione.\n   * @see {initMODULE}\n   * @see {initTHEATER}\n   */\n  async ngOnInit() {\n    if (this.type === this.MODULE) {\n      this.initMODULE();\n    }\n    else if (this.type === this.THEATER) {\n      this.initTHEATER();\n    }\n    else {\n      this.hasproblem = true;\n    }\n  }\n\n\n  /**\n   * Funzione che esegue tutte le funzioni di inizializzazione, reperimento e filtraggio dati da poter essere passati alla componente di TheaterVisualizer.\n   * Esegue anche le attività di spinner-loading.\n   * @see {ReteModuleComposer}\n   * @see {SpinnerService}\n   * @see {parseService}\n   */\n  async initMODULE() {\n    this.spinnerService.setSpinner(true, \"Loading module canvas\");\n    from(\n      this.parseService.parseModuleForModuleVisualizer(this.id ? this.id : 1459)\n    )\n      .subscribe(el => {\n        if (el) {\n          this.module = el\n          this.spinnerService.setSpinner(false);\n          this.active = true;\n        }\n        else {\n          this.spinnerService.setSpinner(false);\n          this.hasproblem = true;\n        }\n      });\n  }\n\n  /**\n   * Funzione che esegue tutte le funzioni di inizializzazione, reperimento e filtraggio dati da poter essere passati alla componente di TheaterVisualizer.\n   * Esegue anche le attività di spinner-loading.\n   * @see {ReteTheaterComposer}\n   * @see {SpinnerService}\n   * @see {parseService}\n   */\n  async initTHEATER() {\n    this.spinnerService.setSpinner(true, \"Loading theater canvas\");\n    from(\n      this.parseService.parseTheaterForTheaterVisualizer(this.id ? this.id : 502)\n    )\n      .subscribe(el => {\n        if (el) {\n          this.theater = el\n          this.spinnerService.setSpinner(false);\n          this.active = true;\n        }\n        else {\n          this.spinnerService.setSpinner(false);\n          this.hasproblem = true;\n        }\n      });\n  }\n\n  /**\n   * Funzione che esegue una redirezione alla pagine home\n   */\n  public gohome() {\n    this.router.navigate(['/home']);\n  }\n\n}\n\n\n\n    \n\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        \n            \n                \n                 A Problem occurred when loading {{type}} with id: {{id}} \n                 A Problem occurred when loading visualizer system \n            \n            \n                \n                     Go home \n                \n            \n        \n    \n\n    \n\n    \n                \n                    ./visualizer.component.sass\n                \n                .oh-imp\n    overflow: hidden !important\n    \n\n    \n        \n        \n            \n                Legenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento html con direttive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                         A Problem occurred when loading {{type}} with id: {{id}}                  A Problem occurred when loading visualizer system                                                              Go home                                         '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ComposerComponent', 'selector': 'app-composer'},{'name': 'ControlTemplate', 'selector': ''},{'name': 'DataInputComponent', 'selector': 'app-data-input'},{'name': 'DataInputV2Component', 'selector': 'app-data-input-v2'},{'name': 'DataItemComponent', 'selector': 'app-window-item'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HostComponent', 'selector': ''},{'name': 'HowToUseComponent', 'selector': 'app-how-to-use'},{'name': 'MirroringModuleInstanceComponent', 'selector': ''},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavbarElementComponent', 'selector': 'app-navbar-element'},{'name': 'NetworkComponent', 'selector': ''},{'name': 'OffcanvasComponent', 'selector': 'app-offcanvas'},{'name': 'ReteModuleComposerComponent', 'selector': 'app-rete-module-composer'},{'name': 'ReteModuleVisualizerComponent', 'selector': 'app-rete-module-visualizer'},{'name': 'ReteTheaterComposerComponent', 'selector': 'app-rete-theater-composer'},{'name': 'ReteTheaterVisualizerComponent', 'selector': 'app-rete-theater-visualizer'},{'name': 'SubnetComponent', 'selector': ''},{'name': 'TabnavComponent', 'selector': 'app-tabnav'},{'name': 'TheaterInternalServiceModuleInstanceComponent', 'selector': ''},{'name': 'TheaterModuleInstanceComponent', 'selector': ''},{'name': 'UnderbarComponent', 'selector': 'app-underbar'},{'name': 'VisualizerComponent', 'selector': 'app-displayer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'VisualizerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/_Control.html":{"url":"classes/_Control.html","title":"class - _Control","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  _Control\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/rete-settings/controls/control.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Elemento indica il control da utilizzare dai vari tipi di nodi/moduli\n\n            \n\n            \n                Extends\n            \n            \n                    Control\n            \n\n            \n                Implementa\n            \n            \n                        AngularControl\n            \n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                component\n                            \n                            \n                                    Public\n                                emitter\n                            \n                            \n                                    Public\n                                key\n                            \n                            \n                                props\n                            \n                        \n                    \n                \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                onChange\n                            \n                            \n                                setValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Costruttore\n        \n            \n                \n                    \nconstructor(emitter: NodeEditor, key: string, readonly)\n                    \n                \n                        \n                            \n                                Definito in src/app/rete-settings/controls/control.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parametri :\n                                    \n                                        \n                                            \n                                                Nome\n                                                    Tipo\n                                                Opzionale\n                                            \n                                        \n                                        \n                                                \n                                                        emitter\n                                                  \n                                                        \n                                                                    NodeEditor\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        key\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        readonly\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        component\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         Type\n\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/controls/control.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        emitter\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     NodeEditor\n\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/controls/control.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/controls/control.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        props\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     literal type\n\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/controls/control.ts:32\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        onChange\n                        \n                    \n                \n            \n            \n                \nonChange(val: number)\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/controls/control.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setValue\n                        \n                    \n                \n            \n            \n                \nsetValue(val: number)\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/controls/control.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Component, Input, Type } from '@angular/core';\nimport { Control, NodeEditor } from 'rete';\nimport { AngularControl } from 'rete-angular-render-plugin';\n\n\n/**\n * Componente che si occpa del control per i nodi la libreria retejs\n */\n@Component({\n  templateUrl: './control.html',\n  styleUrls:  ['./control.css'],\n})\nexport class ControlTemplate {\n\n  @Input() value!: number;\n  @Input() readonly!: boolean;\n  @Input() change!: Function;\n  @Input() mounted!: Function;\n\n  ngOnInit() {\n    this.mounted();\n  }\n}\n\n\n/**\n * Elemento indica il control da utilizzare dai vari tipi di nodi/moduli \n */\nexport class _Control extends Control implements AngularControl {\n  \n  component: Type\n  props: { [key: string]: unknown }\n\n  constructor(public emitter: NodeEditor, public key: string, readonly = false) {\n    \n    super(key);\n\n    this.component = ControlTemplate;\n    this.props = {\n      readonly,\n      change: (v: undefined) => this.onChange(v),\n      value: 0,\n      mounted: () => {\n        this.setValue(+(this.getData(key) as any) || 0)\n      },\n  };\n    \n  }\n\n  onChange(val: number) {\n    this.setValue(val);\n    this.emitter.trigger('process');\n  }\n\n  setValue(val: number) {\n    this.props.value = +val;\n    this.putData(this.key, this.props.value)\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~9.1.12\n        \n            @angular/common : ~9.1.12\n        \n            @angular/compiler : ~9.1.12\n        \n            @angular/core : ~9.1.12\n        \n            @angular/elements : ^9.1.12\n        \n            @angular/forms : ~9.1.12\n        \n            @angular/localize : ~9.1.12\n        \n            @angular/platform-browser : ~9.1.12\n        \n            @angular/platform-browser-dynamic : ~9.1.12\n        \n            @angular/router : ~9.1.12\n        \n            @compodoc/compodoc : ^1.1.19\n        \n            @popperjs/core : ^2.10.2\n        \n            ajv : ^6.12.6\n        \n            angular-popper : ^2.0.1\n        \n            bootstrap : ^5.1.3\n        \n            bootstrap-icons : ^1.8.1\n        \n            jquery : ^3.6.0\n        \n            json-to-pretty-yaml : ^1.2.2\n        \n            keycloak-angular : ^8.0.1\n        \n            keycloak-js : ^11.0.2\n        \n            ngx-color-picker : ^12.0.1\n        \n            ngx-spinner : ^9.0.1\n        \n            ngx-typeahead : ^9.2.0\n        \n            popper : ^1.0.1\n        \n            popper.js : ^1.14.0\n        \n            qs : ^6.10.3\n        \n            rete : ^1.4.1\n        \n            rete-angular-render-plugin : ^0.2.0-rc.2\n        \n            rete-area-plugin : ^0.2.1\n        \n            rete-auto-arrange-plugin : ^0.5.0-rc.1\n        \n            rete-cli : ^0.6.1-rc2\n        \n            rete-connection-path-plugin : ^0.3.1\n        \n            rete-connection-plugin : ^0.8.3\n        \n            rete-context-menu-plugin : ^0.6.0\n        \n            rete-dock-plugin : ^0.2.1\n        \n            rete-history-plugin : ^0.2.2\n        \n            rete-minimap-plugin : ^0.3.0\n        \n            rete-readonly-plugin : ^0.4.1\n        \n            rxjs : ~6.4.0\n        \n            tslib : ^1.9.0\n        \n            zone.js : ~0.9.1\n    \n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Varie\n  Funzioni\n\n\n\n    Indice\n    \n        \n            \n                \n                    \n                        \n                            createHost   (src/.../parseCommonElement.ts)\n                        \n                        \n                            createModuleNode   (src/.../parseCommonElement.ts)\n                        \n                        \n                            createNetwork   (src/.../parseCommonElement.ts)\n                        \n                        \n                            createSubnet   (src/.../parseCommonElement.ts)\n                        \n                        \n                            exportToJson   (src/.../exportTo.ts)\n                        \n                        \n                            exportToYaml   (src/.../exportTo.ts)\n                        \n                        \n                            getEmptyHostInfo   (src/.../hostNode.ts)\n                        \n                        \n                            getEmptyNetworkInfo   (src/.../networkNode.ts)\n                        \n                        \n                            getEmptyReteMirroringModuleInstanceInfo   (src/.../mirroringModuleInstanceNode.ts)\n                        \n                        \n                            getEmptyReteTheaterInternalServiceModuleInstanceInfo   (src/.../theaterInternalServiceModuleInstanceNode.ts)\n                        \n                        \n                            getEmptyReteTheaterModuleInstanceInfo   (src/.../theaterModuleInstanceNode.ts)\n                        \n                        \n                            getEmptySubnetInfo   (src/.../subnetNode.ts)\n                        \n                        \n                            initializeKeycloak   (src/.../app.init.ts)\n                        \n                        \n                            ReteDisplayModuleDataMC   (src/.../displayData.ts)\n                        \n                        \n                            ReteDisplayModuleDataMV   (src/.../displayData.ts)\n                        \n                        \n                            ReteDisplayModuleDataTC   (src/.../displayData.ts)\n                        \n                        \n                            ReteDisplayModuleDataTV   (src/.../displayData.ts)\n                        \n                        \n                            ReteDisplayModuleInstanceTC   (src/.../displayData.ts)\n                        \n                        \n                            ReteDisplayNodeDataMV   (src/.../displayData.ts)\n                        \n                        \n                            ReteDisplayTheaterDataTC   (src/.../displayData.ts)\n                        \n                        \n                            ReteDisplayTheaterDataTV   (src/.../displayData.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/services/application/parse/parseCommonElement.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createHost\n                        \n                    \n                \n            \n            \n                \ncreateHost(name: string, hostDTO: HostModuleDTO)\n                \n            \n\n\n\n\n            \n                \n                    Funzione che esegue il settaggio iniziale per i nodi host.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    hostDTO\n                                    \n                                                HostModuleDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ReteHostInfo\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createModuleNode\n                        \n                    \n                \n            \n            \n                \ncreateModuleNode(name: string, moduleInstance: ModuleInstanceDTO, simpleModuleRoot: SimpleModuleApplication)\n                \n            \n\n\n\n\n            \n                \n                    Funzione che esegue il settaggio iniziale per i moduli del teatro.\nLa funzione controlla prima di che tipo è il modulo, prima di eseguire le dovute assegnazioni.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    moduleInstance\n                                    \n                                                ModuleInstanceDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    simpleModuleRoot\n                                    \n                                                SimpleModuleApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ModuleInstance\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createNetwork\n                        \n                    \n                \n            \n            \n                \ncreateNetwork(name: string, moduleInterfaceDTO)\n                \n            \n\n\n\n\n            \n                \n                    Funzione che esegue il settaggio iniziale per i nodi network.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    moduleInterfaceDTO\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ReteNetworkInfo\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createSubnet\n                        \n                    \n                \n            \n            \n                \ncreateSubnet(name: string, subnetDTO: SubnetDTO)\n                \n            \n\n\n\n\n            \n                \n                    Funzione che esegue il settaggio iniziale per i nodi subnet.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    subnetDTO\n                                    \n                                                SubnetDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ReteSubnetInfo\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/app/services/application/export/exportTo.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        exportToJson\n                        \n                    \n                \n            \n            \n                \nexportToJson(fn: string, objectData: any)\n                \n            \n\n\n\n\n            \n                \n                    Funzione che si occupa del download effettivo in un formato json.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    objectData\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        exportToYaml\n                        \n                    \n                \n            \n            \n                \nexportToYaml(fn: string, objectData: any)\n                \n            \n\n\n\n\n            \n                \n                    Funzione che si occupa del download effettivo in un formato yaml.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    objectData\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app/rete-settings/nodes/rete-nodes/host/hostNode.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getEmptyHostInfo\n                        \n                    \n                \n            \n            \n                \ngetEmptyHostInfo()\n                \n            \n\n\n\n\n            \n                \n                    Funzione dichiarata in HostNode. \nEssa ha lo scopo di generare una struttura dati empty.\nViene utilizzata in per instanziare un nodo del tipo di ritorno indicato senza dati.\n\n\n                    \n                    \n                    \n                        Returns :         ReteHostInfo\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/app/rete-settings/nodes/rete-nodes/network/networkNode.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getEmptyNetworkInfo\n                        \n                    \n                \n            \n            \n                \ngetEmptyNetworkInfo()\n                \n            \n\n\n\n\n            \n                \n                    Funzione dichiarata in NetworkNode. \nEssa ha lo scopo di generare una struttura dati empty.\nViene utilizzata in per instanziare un nodo del tipo di ritorno indicato senza dati.\n\n\n                    \n                    \n                    \n                        Returns :         ReteNetworkInfo\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/app/rete-settings/nodes/rete-modules/mirroringModuleInstance/mirroringModuleInstanceNode.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getEmptyReteMirroringModuleInstanceInfo\n                        \n                    \n                \n            \n            \n                \ngetEmptyReteMirroringModuleInstanceInfo()\n                \n            \n\n\n\n\n            \n                \n                    Funzione dichiarata in MirroringModuleInstanceNode. \nEssa ha lo scopo di generare una struttura dati empty.\nViene utilizzata in per instanziare un nodo del tipo di ritorno indicato senza dati.\n\n\n                    \n                    \n                    \n                        Returns :         ReteMirroringModuleInstanceInfo\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/app/rete-settings/nodes/rete-modules/theaterInternalServiceModuleInstance/theaterInternalServiceModuleInstanceNode.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getEmptyReteTheaterInternalServiceModuleInstanceInfo\n                        \n                    \n                \n            \n            \n                \ngetEmptyReteTheaterInternalServiceModuleInstanceInfo()\n                \n            \n\n\n\n\n            \n                \n                    Funzione dichiarata in TheaterInternalServiceModuleInstanceNode. \nEssa ha lo scopo di generare una struttura dati empty.\nViene utilizzata in per instanziare un nodo del tipo di ritorno indicato senza dati.\n\n\n                    \n                    \n                    \n                        Returns :         ReteTheaterInternalServiceModuleInstanceInfo\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/app/rete-settings/nodes/rete-modules/theaterModuleInstance/theaterModuleInstanceNode.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getEmptyReteTheaterModuleInstanceInfo\n                        \n                    \n                \n            \n            \n                \ngetEmptyReteTheaterModuleInstanceInfo()\n                \n            \n\n\n\n\n            \n                \n                    Funzione dichiarata in TheaterModuleInstanceNode. \nEssa ha lo scopo di generare una struttura dati empty.\nViene utilizzata in per instanziare un nodo del tipo di ritorno indicato senza dati.\n\n\n                    \n                    \n                    \n                        Returns :         ReteTheaterModuleInstanceInfo\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/app/rete-settings/nodes/rete-nodes/subnet/subnetNode.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getEmptySubnetInfo\n                        \n                    \n                \n            \n            \n                \ngetEmptySubnetInfo()\n                \n            \n\n\n\n\n            \n                \n                    Funzione dichiarata in SubnetNode. \nEssa ha lo scopo di generare una struttura dati empty.\nViene utilizzata in per instanziare un nodo del tipo di ritorno indicato senza dati.\n\n\n                    \n                    \n                    \n                        Returns :         ReteSubnetInfo\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/app/utility/app.init.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        initializeKeycloak\n                        \n                    \n                \n            \n            \n                \ninitializeKeycloak(keycloak: KeycloakService)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    keycloak\n                                    \n                                            KeycloakService\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/app/rete-settings/settings/displayData.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ReteDisplayModuleDataMC\n                        \n                    \n                \n            \n            \n                \nReteDisplayModuleDataMC(module: ModuleApplication)\n                \n            \n\n\n\n\n            \n                \n                    Funzione che ritorna gli attributi da visualizzare dato un modulo.\nUsata nella componente di creazione modulo.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    module\n                                    \n                                                ModuleApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     [][]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ReteDisplayModuleDataMV\n                        \n                    \n                \n            \n            \n                \nReteDisplayModuleDataMV(module: ModuleApplication)\n                \n            \n\n\n\n\n            \n                \n                    Funzione che ritorna gli attributi da visualizzare dato un modulo.\nUsata nella componente di visualizzazione modulo.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    module\n                                    \n                                                ModuleApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     [][]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ReteDisplayModuleDataTC\n                        \n                    \n                \n            \n            \n                \nReteDisplayModuleDataTC(module: SimpleModuleApplication)\n                \n            \n\n\n\n\n            \n                \n                    Funzione che ritorna gli attributi da visualizzare dato un modulo.\nUsata nella componente di costruzione teatro.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    module\n                                    \n                                                SimpleModuleApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     [][]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ReteDisplayModuleDataTV\n                        \n                    \n                \n            \n            \n                \nReteDisplayModuleDataTV(module: SimpleModuleApplication)\n                \n            \n\n\n\n\n            \n                \n                    Funzione che ritorna gli attributi da visualizzare dato un modulo.\nUsata nella componente di visualizzazione teatro.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    module\n                                    \n                                                SimpleModuleApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     [][]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ReteDisplayModuleInstanceTC\n                        \n                    \n                \n            \n            \n                \nReteDisplayModuleInstanceTC(node: Node)\n                \n            \n\n\n\n\n            \n                \n                    Funzione che ritorna gli attributi da visualizzare dato un'instanza del modulo.\nUsata nella componente di costruzione teatro.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ReteDisplayNodeDataMV\n                        \n                    \n                \n            \n            \n                \nReteDisplayNodeDataMV(node: Node)\n                \n            \n\n\n\n\n            \n                \n                    Funzione che ritorna gli attributi da visualizzare dato un nodo.\nUsata nella componente di visualizzazione modulo.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ReteDisplayTheaterDataTC\n                        \n                    \n                \n            \n            \n                \nReteDisplayTheaterDataTC(theater: TheaterApplication)\n                \n            \n\n\n\n\n            \n                \n                    Funzione che ritorna gli attributi da visualizzare dato un teatro.\nUsata nella componente di creazione teatro.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    theater\n                                    \n                                                TheaterApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ReteDisplayTheaterDataTV\n                        \n                    \n                \n            \n            \n                \nReteDisplayTheaterDataTV(theater: TheaterApplication)\n                \n            \n\n\n\n\n            \n                \n                    Funzione che ritorna gli attributi da visualizzare dato un teatro.\nUsata nella componente di visualizzazione teatro.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    theater\n                                    \n                                                TheaterApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nInfraCreate\nThis project was generated with Angular CLI version 9.1.12.\nnvm version 12.16.1 \nfor update/install 12.20.\nAggiunta e modifiche elementi in libreria\naggiungere ad event.d.ts  : \n    - arrange: void;\n    - showcontextmenu: { e: MouseEvent, node: Node };\n    - undo: void;\n    - redo: void;\ninstallare minimap-plugin versione 0.3.0\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Moduli\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Il tuo browser non supporta SVG\n                                    \n                                \n                        \n                            Cerca\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    Grafico non disponibile.\n                                \n                        \n                            Cerca\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Sommario\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_exports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nComposerComponent\n\nComposerComponent\n\nAppModule -->\n\nComposerComponent->AppModule\n\n\n\nAppModule -->\n\nComposerComponent->AppModule\n\n\n\n\n\nControlTemplate\n\nControlTemplate\n\nAppModule -->\n\nControlTemplate->AppModule\n\n\n\n\n\nDataInputComponent\n\nDataInputComponent\n\nAppModule -->\n\nDataInputComponent->AppModule\n\n\n\n\n\nDataInputV2Component\n\nDataInputV2Component\n\nAppModule -->\n\nDataInputV2Component->AppModule\n\n\n\n\n\nDataItemComponent\n\nDataItemComponent\n\nAppModule -->\n\nDataItemComponent->AppModule\n\n\n\n\n\nDocsComponent\n\nDocsComponent\n\nAppModule -->\n\nDocsComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nHostComponent\n\nHostComponent\n\nAppModule -->\n\nHostComponent->AppModule\n\n\n\n\n\nHowToUseComponent\n\nHowToUseComponent\n\nAppModule -->\n\nHowToUseComponent->AppModule\n\n\n\n\n\nMirroringModuleInstanceComponent\n\nMirroringModuleInstanceComponent\n\nAppModule -->\n\nMirroringModuleInstanceComponent->AppModule\n\n\n\n\n\nModalComponent\n\nModalComponent\n\nAppModule -->\n\nModalComponent->AppModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nAppModule -->\n\nNavbarComponent->AppModule\n\n\n\n\n\nNavbarElementComponent\n\nNavbarElementComponent\n\nAppModule -->\n\nNavbarElementComponent->AppModule\n\n\n\n\n\nNetworkComponent\n\nNetworkComponent\n\nAppModule -->\n\nNetworkComponent->AppModule\n\n\n\n\n\nOffcanvasComponent\n\nOffcanvasComponent\n\nAppModule -->\n\nOffcanvasComponent->AppModule\n\n\n\n\n\nReteModuleComposerComponent\n\nReteModuleComposerComponent\n\nAppModule -->\n\nReteModuleComposerComponent->AppModule\n\n\n\n\n\nReteModuleVisualizerComponent\n\nReteModuleVisualizerComponent\n\nAppModule -->\n\nReteModuleVisualizerComponent->AppModule\n\n\n\n\n\nReteTheaterComposerComponent\n\nReteTheaterComposerComponent\n\nAppModule -->\n\nReteTheaterComposerComponent->AppModule\n\n\n\n\n\nReteTheaterVisualizerComponent\n\nReteTheaterVisualizerComponent\n\nAppModule -->\n\nReteTheaterVisualizerComponent->AppModule\n\n\n\n\n\nSubnetComponent\n\nSubnetComponent\n\nAppModule -->\n\nSubnetComponent->AppModule\n\n\n\n\n\nTabnavComponent\n\nTabnavComponent\n\nAppModule -->\n\nTabnavComponent->AppModule\n\n\n\n\n\nTheaterInternalServiceModuleInstanceComponent\n\nTheaterInternalServiceModuleInstanceComponent\n\nAppModule -->\n\nTheaterInternalServiceModuleInstanceComponent->AppModule\n\n\n\n\n\nTheaterModuleInstanceComponent\n\nTheaterModuleInstanceComponent\n\nAppModule -->\n\nTheaterModuleInstanceComponent->AppModule\n\n\n\n\n\nUnderbarComponent\n\nUnderbarComponent\n\nAppModule -->\n\nUnderbarComponent->AppModule\n\n\n\n\n\nVisualizerComponent\n\nVisualizerComponent\n\nAppModule -->\n\nVisualizerComponent->AppModule\n\n\n\nAppModule -->\n\nVisualizerComponent->AppModule\n\n\n\n\n\nDataInputComponent \n\nDataInputComponent \n\nDataInputComponent  -->\n\nAppModule->DataInputComponent \n\n\n\n\n\nNavbarComponent \n\nNavbarComponent \n\nNavbarComponent  -->\n\nAppModule->NavbarComponent \n\n\n\n\n\nNavbarElementComponent \n\nNavbarElementComponent \n\nNavbarElementComponent  -->\n\nAppModule->NavbarElementComponent \n\n\n\n\n\nOffcanvasComponent \n\nOffcanvasComponent \n\nOffcanvasComponent  -->\n\nAppModule->OffcanvasComponent \n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nNgxPopper\n\nNgxPopper\n\nAppModule -->\n\nNgxPopper->AppModule\n\n\n\n\n\nModuleService\n\nModuleService\n\nAppModule -->\n\nModuleService->AppModule\n\n\n\n\n\nParseService\n\nParseService\n\nAppModule -->\n\nParseService->AppModule\n\n\n\n\n\nTheaterService\n\nTheaterService\n\nAppModule -->\n\nTheaterService->AppModule\n\n\n\n\n\nTokenService\n\nTokenService\n\nAppModule -->\n\nTokenService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Ingrandisci\n        Reset\n        Rimpocciolisci\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Moduli\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    26 Componenti\n                \n            \n        \n        \n            \n                \n                    \n                    12 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    124 Classi\n                \n            \n        \n        \n            \n                \n                    \n                    4 Interfacce\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        0 \n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Proprietà\n    \n    \n        \n            Version : 1.0.0\n    \n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/reteBasicModuleInfo.html":{"url":"classes/reteBasicModuleInfo.html","title":"class - reteBasicModuleInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  reteBasicModuleInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/rete-settings/nodes/reteBasic.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Elemento che rappresenta una struttura dati generale per le classi dei singoli moduli.\n\n            \n\n            \n                Extends\n            \n            \n                        ModuleInstancePropertiesDTO\n            \n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                host_number\n                            \n                            \n                                Input\n                            \n                            \n                                name\n                            \n                            \n                                network_number\n                            \n                            \n                                Output\n                            \n                            \n                                subnet_number\n                            \n                            \n                                    Readonly\n                                type\n                            \n                            \n                                area\n                            \n                            \n                                consumer_interfaces_link\n                            \n                            \n                                description\n                            \n                            \n                                module\n                            \n                            \n                                sequence\n                            \n                            \n                                version\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        host_number\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/reteBasic.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Input\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/reteBasic.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/reteBasic.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        network_number\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/reteBasic.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Output\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/reteBasic.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subnet_number\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/reteBasic.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         EnumModuleType\n\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/reteBasic.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        area\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleInstancePropertiesDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleInstancePropertiesDTO:166\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        consumer_interfaces_link\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ConsumerInterfaceLinkDTO[]\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleInstancePropertiesDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleInstancePropertiesDTO:171\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleInstancePropertiesDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleInstancePropertiesDTO:167\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleInstancePropertiesDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleInstancePropertiesDTO:168\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sequence\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleInstancePropertiesDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleInstancePropertiesDTO:170\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleInstancePropertiesDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleInstancePropertiesDTO:169\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { EnumNodeType, EnumModuleType } from \"src/app/models/appType\";\nimport { ModuleInstancePropertiesDTO} from \"src/app/services/modelsDTO/moduleDTO\";\n\n/**\n * Elemento che rappresenta una struttura dati generale per le classi dei singoli nodi.\n */\nexport class reteBasicNodeInfo {\n    Input: string[];\n    Output: string[];\n    name: string;\n    readonly type: EnumNodeType;\n}\n\n\n/**\n * Elemento che rappresenta una struttura dati generale per le classi dei singoli moduli.\n * @extends {reteBasicModuleInfo}\n */\nexport class reteBasicModuleInfo extends ModuleInstancePropertiesDTO { // may extends retemodulenodeinfo\n    Input: string[];\n    Output: string[];\n    name: string;\n    host_number: number;\n    network_number: number\n    subnet_number: number\n    readonly type: EnumModuleType;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/reteBasicNodeInfo.html":{"url":"classes/reteBasicNodeInfo.html","title":"class - reteBasicNodeInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  reteBasicNodeInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/rete-settings/nodes/reteBasic.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Elemento che rappresenta una struttura dati generale per le classi dei singoli nodi.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                Input\n                            \n                            \n                                name\n                            \n                            \n                                Output\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        Input\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/reteBasic.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/reteBasic.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Output\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/reteBasic.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         EnumNodeType\n\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/reteBasic.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { EnumNodeType, EnumModuleType } from \"src/app/models/appType\";\nimport { ModuleInstancePropertiesDTO} from \"src/app/services/modelsDTO/moduleDTO\";\n\n/**\n * Elemento che rappresenta una struttura dati generale per le classi dei singoli nodi.\n */\nexport class reteBasicNodeInfo {\n    Input: string[];\n    Output: string[];\n    name: string;\n    readonly type: EnumNodeType;\n}\n\n\n/**\n * Elemento che rappresenta una struttura dati generale per le classi dei singoli moduli.\n * @extends {reteBasicModuleInfo}\n */\nexport class reteBasicModuleInfo extends ModuleInstancePropertiesDTO { // may extends retemodulenodeinfo\n    Input: string[];\n    Output: string[];\n    name: string;\n    host_number: number;\n    network_number: number\n    subnet_number: number\n    readonly type: EnumModuleType;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"}}
}
