var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/Aoption.html",[0,0.341,1,3.661]],["body/classes/Aoption.html",[0,0.642,1,6.895,2,0.454,3,0.066,4,0.057,5,0.066,6,5.761,7,0.32,8,3.613,9,0.933,10,6.445,11,0.933,12,0.735,13,2.066,14,0.102,15,0.236,16,7.371,17,7.371,18,0.122,19,0.006,20,0.426,21,0.156,22,7.014,23,7.014,24,0.258,25,5.12,26,1.873,27,1.41,28,4.634,29,2.293,30,2.944,31,2.559,32,1.935,33,2.712,34,0.084,35,5.092,36,5.761,37,0.564,38,1,39,1.406,40,5.761,41,2.712,42,6.445,43,4.634,44,0.32,45,1.123,46,2.712,47,1.755,48,2.883,49,1.319,50,2.511,51,5.761,52,2.511,53,0.013,54,0.013,55,0.013,56,0.013]],["title/components/AppComponent.html",[57,0.97,58,1.958]],["body/components/AppComponent.html",[0,0.336,3,0.044,4,0.038,5,0.044,7,0.214,11,0.964,14,0.069,15,0.182,18,0.134,19,0.006,20,0.327,21,0.171,24,0.318,26,1.253,27,1.089,32,2.312,33,1.815,34,0.044,38,0.923,39,1.298,47,1.62,48,1.929,52,1.68,53,0.009,54,0.009,55,0.009,56,0.009,57,1.318,58,3.284,59,1.815,60,2.014,61,2.014,62,2.014,63,4.694,64,7.13,65,7.118,66,2.014,67,4.288,68,4.052,69,3.286,70,2.718,71,7.412,72,2.718,73,6.475,74,4.114,75,6.614,76,5.497,77,5.303,78,6.614,79,7.412,80,5.978,81,6.486,82,8.383,83,3.664,84,1.713,85,3.408,86,4.418,87,4.418,88,5.801,89,6.563,90,6.475,91,1.161,92,6.475,93,5.52,94,1.786,95,6.139,96,3.562,97,0.883,98,1.085,99,0.869,100,4.897,101,4.694,102,3.638,103,1.653,104,0.954,105,4.694,106,1.101,107,2.511,108,2.653,109,1.975,110,4.694,111,5.695,112,4.694,113,5.778,114,1.509,115,2.044,116,2.904,117,6.475,118,6.475,119,6.475,120,6.475,121,5.778,122,4.694,123,4.694,124,5.778,125,4.694,126,6.475,127,2.044,128,4.473,129,3.101,130,3.101,131,4.694,132,4.694,133,4.694,134,4.694,135,4.694,136,2.396,137,1.535,138,2.519,139,4.694,140,3.58,141,4.694,142,4.694,143,4.694,144,5.778,145,3.201,146,4.694,147,4.694,148,4.694,149,3.243,150,4.694,151,4.694,152,4.694,153,3.856,154,3.408,155,4.694,156,4.694,157,4.975,158,4.694,159,4.694,160,3.856,161,3.243,162,1.712,163,3.408,164,2.014,165,2.777,166,1.274,167,2.014,168,2.356,169,2.014,170,1.89,171,0.642,172,2.059,173,1.89,174,3.25,175,1.89,176,1.929,177,1.52,178,2.059,179,1.929,180,0.739,181,2.059,182,1.929,183,2.059,184,2.059,185,1.852,186,2.059,187,1.89,188,2.059,189,1.852,190,1.89,191,2.059,192,1.852,193,1.852,194,2.059,195,2.059,196,1.929,197,2.059,198,1.852,199,1.929,200,2.059,201,1.97,202,1.876,203,1.97,204,2.839,205,1.97,206,1.97,207,1.852,208,1.852,209,2.059,210,1.852,211,1.852,212,1.852,213,2.059,214,1.89,215,2.059,216,2.059,217,2.059]],["title/modules/AppModule.html",[38,0.679,218,3.661]],["body/modules/AppModule.html",[0,0.283,3,0.037,4,0.032,5,0.037,18,0.058,19,0.006,21,0.073,24,0.37,26,1.055,33,3.549,34,0.037,38,1.055,39,1.483,53,0.007,54,0.007,55,0.007,56,0.007,58,3.865,68,1.624,80,2.611,97,0.743,98,0.913,99,0.732,162,1.442,173,3.552,175,3.298,176,3.772,179,3.367,180,0.903,182,3.367,185,3.232,187,3.298,189,3.415,190,3.298,192,3.415,193,3.232,196,3.772,198,3.415,199,3.772,201,3.439,202,2.033,203,3.439,205,3.439,206,3.439,207,3.415,208,3.232,210,3.415,211,3.415,212,3.232,214,3.552,218,7.853,219,1.022,220,4.405,221,3.527,222,3.527,223,3.527,224,3.527,225,3.527,226,3.527,227,5.949,228,7.311,229,5.197,230,5.66,231,5.413,232,5.197,233,3.527,234,3.246,235,3.527,236,3.953,237,3.953,238,5.733,239,2.216,240,3.953,241,5.116,242,4.709,243,5.733,244,6.746,245,1.038,246,3.953,247,5.733,248,7.4,249,3.953,250,3.953,251,0.899,252,1.205,253,5.733,254,4.709,255,3.037,256,5.733,257,5.733,258,5.116,259,2.572,260,3.953,261,3.953,262,3.527,263,3.527,264,3.246,265,3.527,266,5.733,267,2.557,268,1.559,269,1.528,270,4.66,271,7.4,272,5.733,273,5.733,274,4.66,275,5.733,276,5.733,277,2.542,278,3.246,279,3.953,280,3.953,281,3.953,282,3.953,283,3.953,284,3.527,285,3.527,286,2.834,287,3.527,288,3.953,289,5.733,290,6.943,291,4.405,292,5.116,293,3.953,294,5.733,295,2.611,296,5.733,297,5.183,298,5.733,299,3.527,300,3.527,301,5.733,302,3.953,303,3.953,304,3.953,305,3.953,306,3.953,307,3.953,308,3.953,309,3.527,310,3.953,311,6.746,312,3.527,313,3.953,314,3.953,315,3.953,316,3.527,317,3.953,318,3.953,319,3.953,320,5.733,321,3.953,322,5.733,323,3.246,324,3.527,325,3.953,326,2.611,327,2.611,328,3.527,329,3.953,330,3.527,331,2.255,332,1.47,333,5.733,334,4.709,335,5.733,336,3.953,337,3.953,338,1.624,339,3.953,340,3.953,341,3.953,342,0.989,343,1.27,344,1.591,345,1.292,346,3.953,347,5.733,348,3.953,349,3.953,350,3.953,351,3.953,352,1.339]],["title/modules/AppRoutingModule.html",[38,0.679,227,3.459]],["body/modules/AppRoutingModule.html",[0,0.46,3,0.06,4,0.052,5,0.06,19,0.006,24,0.359,26,1.717,34,0.06,53,0.012,54,0.012,55,0.012,56,0.012,57,2.034,129,4.25,173,3.479,185,3.409,187,3.857,190,3.479,214,3.479,219,1.663,227,5.778,241,5.74,258,7.102,262,5.74,263,5.74,264,5.284,265,5.74,270,5.97,274,5.97,284,5.74,285,5.74,326,4.25,327,4.25,328,5.74,331,4.54,334,5.284,342,1.61,353,6.433,354,6.433,355,7.959,356,7.621,357,7.098,358,6.433,359,7.959,360,7.675,361,5.778,362,6.115,363,7.102,364,7.959,365,7.959,366,6.433]],["title/classes/AreaApplication.html",[0,0.341,367,2.418]],["body/classes/AreaApplication.html",[0,0.667,2,0.31,3,0.045,4,0.039,5,0.045,9,0.73,11,0.97,12,0.575,14,0.07,15,0.185,18,0.13,19,0.006,20,0.435,21,0.166,24,0.343,34,0.09,38,0.935,39,1.691,44,0.368,46,1.85,49,1.234,53,0.009,54,0.009,55,0.009,56,0.009,94,1.32,99,1.215,103,1.357,106,0.659,116,2.943,127,1.511,162,2.939,171,0.523,177,1.891,202,1.758,219,1.935,277,2.705,286,3.701,342,1.198,343,2.711,345,1.564,367,3.33,368,2.496,369,1.812,370,3.069,371,2.877,372,1.103,373,2.001,374,4.786,375,4.002,376,1.936,377,4.786,378,4.786,379,0.818,380,4.786,381,4.786,382,2.135,383,4.786,384,4.786,385,2.814,386,2.405,387,2.306,388,2.814,389,2.306,390,2.588,391,2.306,392,3.438,393,2.496,394,3.438,395,2.496,396,3.438,397,2.496,398,3.085,399,2.366,400,3.455,401,2.25,402,2.499,403,1.459,404,2.036,405,2.145,406,1.84,407,1.871,408,2.183,409,2.197,410,2.366,411,2.499,412,2.065,413,3.608,414,3.143,415,3.143,416,3.143,417,4.494,418,4.31,419,0.73,420,2.814,421,0.771,422,1,423,3.33,424,2.487,425,3.422,426,3.422,427,2.537,428,2.306,429,3.422,430,2.697,431,3.438,432,2.496,433,0.583,434,2.009,435,2.496,436,2.496,437,2.147,438,2.496,439,3.422,440,2.943,441,3.422,442,2.001,443,2.877,444,0.913,445,3.143,446,3.422,447,2.496,448,1.651,449,2.496,450,2.25,451,2.099,452,2.099,453,1.651,454,2.053,455,2.496,456,2.496,457,2.25,458,3.162,459,2.366,460,2.197,461,1.022,462,3.085,463,3.969,464,2.306,465,2.306,466,3.33,467,4.089,468,3.882,469,3.455,470,3.422,471,3.905,472,3.8,473,3.359,474,2.306,475,4.089,476,0.915,477,2.429,478,2.25,479,2.306]],["title/classes/AreaColorDTO.html",[0,0.341,477,2.418]],["body/classes/AreaColorDTO.html",[0,0.672,2,0.322,3,0.047,4,0.04,5,0.047,9,0.749,11,0.981,12,0.59,14,0.073,15,0.19,18,0.111,19,0.006,20,0.433,21,0.142,24,0.345,34,0.091,38,0.96,39,1.53,44,0.374,46,1.922,53,0.009,54,0.009,55,0.009,56,0.009,94,1.371,103,1.393,116,3.02,127,1.569,162,2.985,171,0.347,177,1.921,202,1.793,219,1.973,277,2.736,286,3.775,342,1.244,343,2.747,345,1.625,367,2.523,368,2.593,369,1.825,370,2.241,372,1.132,375,3.091,376,1.656,379,0.815,382,1.92,385,2.888,386,2.432,387,2.396,388,2.888,389,2.396,390,2.656,391,2.396,392,3.506,393,2.593,394,3.506,395,2.593,396,3.506,397,2.593,398,3.166,399,2.457,400,3.511,401,2.337,402,2.539,403,1.516,404,2.089,405,2.201,406,1.888,407,1.92,408,2.846,409,2.282,410,2.457,411,2.539,412,2.106,413,3.68,414,3.205,415,3.205,416,3.205,417,4.534,418,4.359,419,0.749,420,2.888,421,0.792,422,1.026,423,3.417,424,2.553,425,3.512,426,3.512,427,2.603,428,2.366,429,3.512,430,2.767,431,3.506,432,2.593,433,0.606,434,2.087,435,2.593,436,2.593,437,2.23,438,2.593,439,3.512,440,3.02,441,3.512,442,2.054,443,2.953,444,0.931,445,3.205,446,3.512,447,2.593,448,1.715,449,2.593,450,2.337,451,2.18,452,2.18,453,1.715,454,2.132,455,2.593,456,2.593,457,2.337,458,3.245,459,2.457,460,2.282,461,1.061,462,3.166,463,4.022,464,2.396,465,2.396,466,3.417,467,4.154,468,3.944,469,3.511,470,3.512,471,3.983,472,3.875,473,3.425,474,2.396,475,4.154,476,0.95,477,3.417,478,2.337,479,2.396,480,1.798,481,4.971,482,4.971,483,4.971]],["title/classes/AreaDTO.html",[0,0.341,370,1.585]],["body/classes/AreaDTO.html",[0,0.685,2,0.243,3,0.035,4,0.03,5,0.035,7,0.171,9,0.949,12,0.574,13,1.358,14,0.055,15,0.203,18,0.121,19,0.006,20,0.452,21,0.149,24,0.24,27,0.63,30,1.574,34,0.09,37,0.668,38,1.029,39,1.311,44,0.458,45,1.493,49,1.638,53,0.007,54,0.007,55,0.007,56,0.007,91,1.724,96,1.541,97,0.705,104,0.813,106,1.108,114,0.763,115,1.183,171,0.656,180,0.591,219,0.969,352,1.27,369,1.071,370,1.836,371,2.87,372,1.464,373,2.453,376,1.196,379,0.849,382,2.058,402,1.163,403,1.996,404,2.239,405,2.139,406,1.051,407,1.573,408,1.836,419,1.07,421,1.13,422,1.465,433,1.118,442,1.143,444,0.937,461,1.541,476,1.251,480,1.473,484,1.682,485,1.889,486,2.935,487,0.771,488,2.935,489,2.935,490,3.749,491,3.749,492,3.749,493,3.749,494,3.749,495,3.749,496,2.315,497,2.315,498,1.682,499,2.53,500,1.163,501,0.525,502,1.682,503,1.608,504,1.368,505,1.682,506,1.682,507,1.682,508,1.682,509,1.248,510,1.608,511,1.682,512,1.644,513,1.248,514,0.763,515,1.45,516,3.095,517,1.682,518,1.682,519,1.143,520,1.682,521,2.366,522,1.682,523,2.474,524,1.682,525,1.682,526,1.574,527,3.646,528,1.342,529,1.644,530,1.682,531,2.366,532,1.682,533,1.682,534,1.682,535,1.682,536,1.682,537,1.682,538,1.155,539,1.682,540,1.608,541,2.366,542,1.421,543,2.315,544,1.682,545,1.682,546,2.419,547,1.682,548,1.682,549,2.366,550,1.682,551,1.368,552,1.368,553,1.368,554,1.368,555,1.368,556,1.368,557,1.368,558,1.368,559,1.368,560,1.682,561,1.682,562,1.682,563,1.644,564,1.599,565,1.644,566,1.644,567,1.644,568,1.644,569,1.644,570,1.644,571,1.644,572,0.853,573,1.38,574,1.644,575,1.711,576,0.866,577,1.682,578,1.682,579,0.909,580,1.682,581,1.574,582,1.608,583,2.22,584,0.985,585,1.394,586,1.124,587,2.474,588,1.196,589,1.806,590,1.183,591,1.421,592,2.419,593,1.368,594,1.644,595,2.935,596,1.644,597,1.394,598,2.87,599,2.258,600,1.608,601,1.682,602,1.574,603,1.421,604,1.682,605,1.421]],["title/classes/AreaExport.html",[0,0.341,606,2.809]],["body/classes/AreaExport.html",[0,0.681,2,0.364,3,0.053,4,0.046,5,0.053,7,0.256,9,1.034,11,0.812,12,0.711,13,1.798,14,0.082,15,0.257,18,0.107,19,0.006,20,0.439,21,0.136,24,0.206,34,0.09,37,0.587,38,0.8,44,0.456,53,0.01,54,0.01,55,0.01,56,0.01,91,1.723,94,1.549,103,1.161,166,1.523,171,0.392,342,1.405,372,1.497,379,0.711,412,1.549,419,1.069,421,1.12,422,1.451,433,0.989,444,1.112,461,1.834,476,1.395,480,2.293,485,1.879,487,0.461,501,1.204,538,1.169,564,1.627,573,1.405,575,1.742,576,1.297,584,1.474,585,2.087,588,1.863,589,2.016,590,1.772,593,2.048,606,4.783,607,3.429,608,4.304,609,4.783,610,4.458,611,1.299,612,5.25,613,5.614,614,5.614,615,2.663,616,2.663,617,4.304,618,2.663,619,2.128,620,2.087,621,1.902,622,1.803,623,2.087,624,2.087,625,2.048,626,2.01,627,2.01,628,3.104,629,1.868,630,4.164,631,4.164,632,4.304,633,3.31,634,4.164,635,3.429,636,3.31,637,4.304,638,3.31,639,4.304,640,1.627,641,3.31,642,3.429,643,3.429,644,2.087,645,3.429,646,3.202,647,3.429,648,3.429]],["title/injectables/AttachmentsService.html",[649,1.918,650,4.251]],["body/injectables/AttachmentsService.html",[0,0.429,3,0.056,4,0.049,5,0.056,14,0.087,18,0.122,19,0.006,20,0.429,21,0.155,24,0.341,26,1.601,34,0.056,37,0.612,53,0.011,54,0.011,55,0.011,56,0.011,69,3.043,84,1.385,97,1.574,98,1.934,99,1.549,138,4.087,177,1.788,231,6.233,232,5.984,245,2,251,1.732,295,3.961,326,3.961,327,3.961,331,5.298,332,2.831,379,0.837,437,2.689,440,2.689,649,3.065,650,6.795,651,3.218,652,5.996,653,3.663,654,7.615,655,7.615,656,4.607,657,6.392,658,5.996,659,5.529,660,7.615,661,8.804,662,5.996,663,5.35,664,4.651,665,7.615,666,5.996,667,5.35,668,5.996,669,4.607,670,5.996,671,5.996,672,5.996,673,5.35,674,3.218,675,3.043,676,5.03,677,5.996,678,3.776,679,7.615,680,6.795,681,7.615,682,7.615,683,6.795,684,7.615,685,7.615,686,7.231,687,7.615,688,7.615,689,7.615,690,7.615,691,7.615,692,4.651,693,7.615,694,7.615,695,7.615,696,7.615,697,2.322,698,5.996,699,5.996]],["title/injectables/AuthGuard.html",[357,3.913,649,1.918]],["body/injectables/AuthGuard.html",[0,0.468,3,0.061,4,0.053,5,0.061,14,0.095,18,0.117,19,0.006,21,0.149,24,0.32,26,1.746,34,0.061,53,0.012,54,0.012,55,0.012,56,0.012,69,3.319,74,3.375,76,5.521,77,5.414,84,1.511,85,4.748,97,1.512,98,1.858,99,1.488,129,4.321,137,2.138,245,2.112,251,1.487,267,2.479,290,7.459,291,7.163,331,3.731,338,2.688,357,6.604,369,1.561,649,3.236,651,3.51,653,3.434,674,3.51,697,2.452,700,6.54,701,8.706,702,8.706,703,6.54,704,6.54,705,9.081,706,7.768,707,9.081,708,6.54,709,6.977,710,4.587,711,5.311,712,6.54,713,6.54,714,5.751,715,6.54,716,6.54,717,6.54,718,6.54,719,3.857,720,6.54,721,6.54,722,6.54,723,6.54,724,8.706,725,4.966,726,8.04,727,6.54,728,8.04,729,8.04,730,6.54,731,6.54,732,6.54,733,3.731,734,6.54,735,2.216,736,6.54,737,6.54,738,6.54]],["title/classes/BlueprintFileDTO.html",[0,0.341,739,2.91]],["body/classes/BlueprintFileDTO.html",[0,0.669,2,0.373,3,0.054,4,0.047,5,0.054,7,0.263,12,0.787,14,0.084,15,0.209,18,0.127,19,0.006,20,0.45,21,0.161,24,0.212,27,0.969,34,0.088,37,0.463,44,0.454,45,1.437,49,1.545,53,0.011,54,0.011,55,0.011,56,0.011,91,1.698,98,1.715,106,0.794,114,1.173,115,1.819,171,0.574,342,2.055,372,1.509,373,1.757,379,0.76,382,1.643,406,1.616,407,1.643,419,1.054,421,1.114,422,1.444,430,2.368,433,0.905,461,1.852,485,1.844,487,0.755,501,0.807,514,1.173,515,2.228,538,0.922,542,2.184,551,2.102,552,2.102,553,2.102,554,2.102,555,2.102,556,2.102,557,2.102,558,2.102,559,2.102,564,1.67,575,1.788,589,1.928,603,2.814,605,2.184,629,2.733,739,5.016,740,3.806,741,5.762,742,5.762,743,2.273,744,5.762,745,5.762,746,3.519,747,4.534,748,4.534,749,3.806,750,3.806,751,3.654,752,3.806,753,3.654,754,3.806,755,3.806,756,3.806,757,4.904,758,4.708,759,3.806,760,3.806,761,2.228,762,3.806,763,3.806,764,4.534,765,3.806,766,3.806,767,3.654,768,3.654,769,3.654,770,3.806,771,3.806,772,3.654]],["title/classes/BorderNetworkDTO.html",[0,0.341,773,3.459]],["body/classes/BorderNetworkDTO.html",[0,0.646,2,0.417,3,0.061,4,0.052,5,0.061,7,0.294,9,0.886,14,0.094,15,0.224,18,0.132,19,0.006,20,0.446,21,0.168,34,0.085,37,0.518,44,0.442,49,1.778,53,0.012,54,0.012,55,0.012,56,0.012,77,3.674,91,1.62,104,1.174,106,0.887,171,0.556,373,2.884,379,0.849,419,1.005,421,1.062,422,1.377,485,1.571,499,3.079,514,1.621,538,1.031,579,2.096,743,2.54,773,6.558,774,4.948,775,3.937,776,6.643,777,3.202,778,6.44,779,6.44,780,3.154,781,6.44,782,6.44,783,4.085,784,4.255,785,5.782,786,6.119,787,3.674,788,4.948,789,2.49,790,4.948,791,4.948,792,4.449]],["title/interfaces/CommonModule.html",[286,2.355,411,1.478]],["body/interfaces/CommonModule.html",[0,0.671,3,0.046,4,0.04,5,0.046,9,0.743,11,0.978,12,0.586,14,0.072,15,0.188,18,0.128,19,0.006,20,0.427,24,0.345,34,0.091,38,0.953,39,1.522,44,0.372,46,1.901,53,0.009,54,0.009,55,0.009,56,0.009,94,1.356,103,1.382,116,2.998,127,1.552,162,2.438,171,0.343,177,1.913,202,1.783,219,1.962,277,2.727,286,4.028,342,1.231,343,2.737,345,1.607,367,2.496,368,2.565,369,1.801,370,2.224,376,1.066,379,0.851,382,1.906,385,2.867,386,2.424,387,2.37,388,2.867,389,2.37,390,2.636,391,2.37,392,3.486,393,2.565,394,3.486,395,2.565,396,3.486,397,2.565,398,3.143,399,2.431,400,3.77,401,2.312,402,2.727,403,1.5,404,2.074,405,2.185,406,1.874,407,1.906,408,2.224,409,2.257,410,2.431,411,2.528,412,2.424,413,4.236,414,3.689,415,3.689,416,3.689,417,4.68,418,4.523,419,0.743,420,2.867,421,0.786,422,1.019,423,3.392,424,2.534,425,3.486,426,3.486,427,2.584,428,2.349,429,3.486,430,2.747,431,3.486,432,2.565,433,0.599,434,2.064,435,2.565,436,2.565,437,2.206,438,2.565,439,3.486,440,2.998,441,3.486,442,2.038,443,2.931,444,0.925,445,3.187,446,3.486,447,2.565,448,1.696,449,2.565,450,2.312,451,2.156,452,2.156,453,1.696,454,2.109,455,2.565,456,2.565,457,2.312,458,3.221,459,2.431,460,2.257,461,1.05,462,3.143,463,4.007,464,2.37,465,2.37,466,3.392,467,4.135,468,3.927,469,3.495,470,3.486,471,3.961,472,3.854,473,3.406,474,2.37,475,4.135,476,0.94,477,2.496,478,2.312,479,2.37,576,1.136]],["title/components/ComposerComponent.html",[57,0.97,173,1.918]],["body/components/ComposerComponent.html",[0,0.21,3,0.028,4,0.024,5,0.065,7,0.134,9,1,11,0.708,12,0.712,14,0.043,15,0.129,18,0.129,19,0.006,20,0.374,21,0.17,24,0.29,26,0.782,27,0.769,29,2.655,31,2.667,32,2.458,33,1.133,34,0.028,37,0.691,38,0.983,39,1.465,41,1.133,44,0.429,45,1.171,47,1.145,48,1.204,52,1.049,53,0.005,54,0.005,55,0.005,56,0.005,57,0.932,58,1.204,59,2.176,60,1.257,61,1.257,62,1.257,66,1.257,67,4.1,68,3.822,70,1.921,72,1.921,74,4.109,76,3.57,77,4.358,80,4.202,81,5.939,84,1.301,85,2.128,94,2.372,97,0.551,98,1.057,99,0.542,102,3.702,103,1.316,106,1.119,107,2.477,108,2.618,109,2.41,114,0.932,115,1.777,127,1.444,129,1.936,130,1.936,136,1.907,137,0.958,138,3.414,140,1.62,149,3.888,161,2.024,163,2.128,164,1.257,165,1.963,166,1.527,167,1.257,168,1.875,169,1.257,170,1.18,171,0.616,172,1.285,173,3.181,174,2.468,175,1.18,176,1.204,177,1.62,178,1.285,179,1.204,180,0.887,181,1.285,182,1.204,183,1.285,184,1.285,185,1.156,186,1.285,187,1.18,188,1.285,189,1.156,190,1.18,191,1.285,192,1.156,193,1.156,194,1.285,195,1.285,196,1.204,197,1.285,198,1.156,199,1.204,200,1.285,201,1.23,202,1.493,203,1.23,204,2.006,205,1.23,206,1.23,207,1.156,208,1.156,209,1.285,210,1.156,211,1.156,212,1.156,213,1.285,214,1.18,215,1.285,216,1.285,217,1.285,219,1.974,230,5.939,245,1.202,251,1.447,252,1.395,274,3.161,338,3.139,343,0.941,344,2.266,345,0.958,361,4.618,372,0.946,376,1.714,433,0.775,434,2.896,444,0.775,445,2.896,450,2.991,454,2.96,459,2.262,461,1.631,473,2.525,478,2.991,485,0.578,487,0.803,501,0.641,514,0.932,528,1.638,564,1.632,597,2.719,599,1.579,611,1.481,625,1.069,653,2.884,686,5.225,709,3.516,743,1.156,793,9.194,794,2.93,795,2.155,796,2.155,797,4.083,798,5.618,799,4.083,800,4.083,801,4.083,802,4.576,803,4.394,804,4.083,805,2.327,806,6.491,807,1.314,808,3.57,809,5.629,810,4.576,811,4.623,812,5.023,813,4.766,814,5.023,815,5.023,816,5.629,817,5.676,818,6.525,819,6.525,820,3.885,821,5.738,822,4.576,823,2.944,824,2.456,825,3.516,826,4.083,827,2.92,828,2.93,829,2.216,830,4.457,831,1.55,832,4.083,833,4.083,834,2.93,835,5.309,836,5.676,837,6.525,838,5.676,839,5.309,840,4.576,841,2.614,842,5.676,843,5.869,844,5.225,845,2.93,846,4.576,847,5.225,848,2.93,849,1.805,850,3.322,851,3.516,852,4.083,853,2.79,854,3.516,855,3.228,856,2.93,857,3.023,858,3.023,859,3.207,860,2.93,861,3.161,862,4.083,863,4.766,864,2.93,865,4.083,866,2.93,867,2.93,868,3.716,869,7.052,870,3.516,871,2.93,872,3.758,873,2.262,874,2.387,875,3.023,876,4.083,877,2.93,878,4.083,879,4.083,880,3.516,881,2.93,882,2.93,883,3.758,884,2.93,885,3.516,886,2.93,887,4.202,888,2.93,889,1.09,890,2.615,891,2.615,892,2.407,893,2.615,894,2.615,895,1.79,896,2.407,897,2.615,898,1.936,899,4.083,900,2.615,901,4.083,902,2.93,903,2.615,904,2.93,905,2.615,906,2.93,907,4.623,908,2.615,909,2.615,910,2.252,911,1.573,912,2.615,913,4.623,914,5.023,915,6.525,916,1.378,917,2.615,918,2.252,919,2.93,920,4.083,921,2.407,922,2.615,923,2.407,924,2.615,925,4.083,926,1.936,927,2.93,928,2.615,929,2.93,930,4.083,931,4.083,932,2.615,933,2.024,934,2.93,935,2.615,936,2.93,937,2.615,938,4.083,939,4.083,940,4.083,941,3.322,942,3.516,943,2.615,944,2.615]],["title/classes/ConfigurationTemplateDTO.html",[0,0.341,531,2.044]],["body/classes/ConfigurationTemplateDTO.html",[0,0.683,2,0.237,3,0.034,4,0.03,5,0.034,7,0.167,9,0.942,12,0.566,13,1.335,14,0.053,15,0.201,18,0.132,19,0.006,20,0.452,21,0.166,24,0.237,27,0.615,30,1.537,34,0.09,37,0.734,38,1.137,39,0.734,44,0.457,45,1.487,49,1.552,53,0.007,54,0.007,55,0.007,56,0.007,91,1.719,96,1.505,97,1.019,104,0.799,106,1.049,114,0.745,115,1.156,171,0.644,180,0.577,219,0.946,352,1.24,369,1.052,370,1.218,371,1.605,372,1.455,373,2.176,376,1.175,379,0.846,382,1.84,402,1.136,403,1.968,404,2.213,405,2.11,406,1.027,407,1.545,408,1.804,419,1.066,421,1.127,422,1.461,433,1.102,442,1.117,444,0.928,461,1.523,476,1.233,480,1.447,484,1.642,485,1.884,486,2.431,487,0.768,488,2.431,489,2.431,496,2.275,497,2.275,498,1.642,499,2.495,500,1.136,501,0.513,502,1.642,503,1.57,504,1.335,505,1.642,506,1.642,507,1.642,508,1.642,509,1.218,510,1.57,511,1.642,512,1.605,513,1.218,514,0.745,515,1.415,516,3.06,517,1.642,518,1.642,519,1.117,520,1.642,521,2.325,522,1.642,523,3.2,524,1.642,525,1.642,526,1.537,527,3.619,528,1.311,529,2.377,530,2.431,531,2.768,532,2.895,533,2.895,534,2.895,535,2.895,536,2.895,537,2.895,538,1.277,539,2.895,540,1.57,541,2.325,542,1.388,543,2.275,544,1.642,545,1.642,546,2.377,547,1.642,548,1.642,549,2.325,550,1.642,551,1.335,552,1.335,553,1.335,554,1.335,555,1.335,556,1.335,557,1.335,558,1.335,559,1.335,560,1.642,561,1.642,562,1.642,563,1.605,564,1.571,565,1.605,566,1.605,567,1.605,568,1.605,569,1.605,570,1.605,571,1.605,572,0.833,573,1.356,574,1.605,575,1.682,576,0.846,577,1.642,578,1.642,579,0.887,580,1.642,581,1.537,582,1.57,583,2.182,584,0.962,585,1.361,586,1.098,587,2.431,588,1.175,589,1.788,590,1.156,591,1.388,592,2.377,593,1.335,594,1.605,595,2.895,596,1.605,597,1.361,598,2.83,599,2.226,600,1.57,601,1.642,602,1.537,603,1.388,604,1.642,605,1.388,743,3.145,945,3.661,946,3.661,947,3.661,948,3.661,949,3.661,950,3.661,951,3.661,952,3.661,953,3.661,954,3.661,955,3.661]],["title/classes/ConstraintsMSD.html",[0,0.341,956,2.137]],["body/classes/ConstraintsMSD.html",[0,0.693,2,0.273,3,0.04,4,0.034,5,0.04,7,0.193,9,0.997,11,0.959,12,0.37,13,1.48,14,0.062,15,0.227,18,0.102,19,0.006,20,0.432,21,0.13,24,0.155,31,1.54,34,0.091,37,0.673,44,0.459,45,1.221,47,1.752,53,0.008,54,0.008,55,0.008,56,0.008,91,1.742,103,0.873,104,0.886,106,1.051,109,1.287,171,0.295,239,1.632,259,1.893,342,1.056,372,1.01,379,0.527,411,1.865,412,1.164,419,1.081,421,1.138,422,1.476,433,1.133,444,1.093,448,3.257,476,1.457,485,1.902,487,0.662,500,1.31,501,1.208,514,0.859,538,0.676,573,1.056,576,1.617,579,2.03,584,1.109,586,1.266,588,1.817,589,2.024,611,1.221,615,2.192,616,2.192,618,2.192,619,1.6,620,2.997,621,1.43,622,1.931,623,1.569,624,1.569,625,1.54,626,1.511,627,1.511,629,1.405,640,1.742,644,1.569,761,1.632,777,2.781,780,3.39,789,1.632,805,1.869,956,3.14,957,1.938,958,2.759,959,3.213,960,3.14,961,3.14,962,3.14,963,3.14,964,4.221,965,3.14,966,4.221,967,3.14,968,4.221,969,2.696,970,2.696,971,2.696,972,2.696,973,2.696,974,2.578,975,2.636,976,2.636,977,2.636,978,3.344,979,2.636,980,1.938,981,1.938,982,1.699,983,1.811,984,2.636,985,1.893,986,1.893,987,2.696,988,1.893,989,2.696,990,1.893,991,2.636,992,3.213,993,1.938,994,1.938,995,1.938,996,3.002,997,3.421,998,1.851,999,2.152,1000,1.938,1001,1.893,1002,1.811,1003,3.069,1004,1.938,1005,1.735,1006,1.772,1007,1.938,1008,1.893,1009,1.356,1010,3.14,1011,3.421,1012,1.665,1013,1.851,1014,1.833,1015,2.696,1016,2.696,1017,2.696,1018,2.759,1019,2.636,1020,1.893,1021,1.893,1022,1.893]],["title/classes/ConsumerInterfaceLinkDTO.html",[0,0.341,583,1.918]],["body/classes/ConsumerInterfaceLinkDTO.html",[0,0.687,2,0.247,3,0.036,4,0.031,5,0.036,7,0.174,9,0.973,12,0.58,13,1.376,14,0.056,15,0.205,18,0.106,19,0.006,20,0.452,21,0.123,24,0.243,27,0.642,30,1.602,34,0.09,37,0.672,38,1.037,39,0.765,44,0.458,45,1.486,49,1.573,53,0.007,54,0.007,55,0.007,56,0.007,91,1.728,96,1.569,97,0.718,104,0.824,106,1.067,114,0.777,115,1.205,171,0.648,180,0.601,219,0.987,352,1.293,369,1.085,370,1.27,371,1.674,372,1.406,373,2.22,376,1.212,379,0.848,382,1.885,402,1.184,403,2.017,404,2.258,405,2.162,406,1.07,407,1.594,408,1.86,419,1.072,421,1.133,422,1.469,433,1.122,442,1.164,444,0.944,461,1.554,476,1.264,480,1.492,484,1.712,485,1.894,486,2.507,487,0.763,488,2.507,489,2.507,496,2.346,497,2.346,498,1.712,499,2.556,500,1.184,501,0.535,502,1.712,503,1.637,504,1.392,505,1.712,506,1.712,507,1.712,508,1.712,509,1.27,510,1.637,511,1.712,512,1.674,513,1.27,514,0.777,515,1.476,516,3.122,517,1.712,518,1.712,519,1.164,520,1.712,521,2.397,522,1.712,523,2.507,524,1.712,525,1.712,526,1.602,527,3.667,528,1.366,529,1.674,530,1.712,531,2.397,532,1.712,533,1.712,534,1.712,535,1.712,536,1.712,537,1.712,538,1.165,539,1.712,540,1.637,541,2.397,542,1.447,543,2.346,544,1.712,545,1.712,546,2.451,547,1.712,548,1.712,549,2.397,550,1.712,551,1.392,552,1.392,553,1.392,554,1.392,555,1.392,556,1.392,557,1.392,558,1.392,559,1.392,560,1.712,561,1.712,562,1.712,563,1.674,564,1.62,565,1.674,566,1.674,567,1.674,568,1.674,569,1.674,570,1.674,571,1.674,572,0.868,573,1.399,574,1.674,575,1.734,576,0.882,577,1.712,578,1.712,579,0.925,580,1.712,581,2.346,582,2.397,583,2.662,584,1.737,585,2.459,586,1.983,587,2.507,588,1.212,589,1.819,590,1.205,591,1.447,592,2.451,593,1.392,594,1.674,595,2.966,596,1.674,597,1.419,598,2.9,599,2.281,600,1.637,601,1.712,602,1.602,603,1.447,604,1.712,605,1.447,1023,3.817,1024,3.817,1025,3.817]],["title/classes/ConsumerInterfaceLinkExport.html",[0,0.341,639,2.809]],["body/classes/ConsumerInterfaceLinkExport.html",[0,0.68,2,0.361,3,0.052,4,0.045,5,0.052,7,0.255,9,1.032,11,0.808,12,0.709,13,1.79,14,0.081,15,0.25,18,0.118,19,0.006,20,0.439,21,0.15,24,0.205,34,0.089,37,0.584,38,0.795,44,0.456,53,0.01,54,0.01,55,0.01,56,0.01,91,1.721,94,2.005,103,1.153,166,1.972,171,0.39,342,1.396,372,1.359,379,0.709,412,1.538,419,1.067,421,1.118,422,1.45,433,0.985,444,1.083,461,1.829,476,1.389,480,1.94,485,1.876,487,0.458,501,1.201,538,1.164,564,1.617,573,1.396,575,1.73,576,1.679,584,2.124,585,2.073,586,2.179,588,1.858,589,2.011,590,1.76,593,2.034,606,4.286,607,3.406,608,3.288,609,4.286,610,3.406,611,1.164,612,5.052,615,2.651,616,2.651,617,4.286,618,2.651,619,2.114,620,2.073,621,1.889,622,1.791,623,2.073,624,2.073,625,2.034,626,1.996,627,1.996,628,3.083,629,1.856,630,4.146,631,4.146,632,4.286,633,3.288,634,4.146,635,3.406,636,3.288,637,4.286,638,3.288,639,4.768,640,1.617,641,3.288,642,3.406,643,4.439,644,2.702,645,4.439,646,4.146,647,3.406,648,3.406,1026,6.485,1027,5.577,1028,5.577,1029,5.577]],["title/components/ControlTemplate.html",[57,0.97,175,1.918]],["body/components/ControlTemplate.html",[0,0.501,3,0.05,4,0.043,5,0.05,7,0.241,11,0.779,12,0.462,14,0.077,18,0.122,19,0.006,20,0.309,21,0.162,24,0.289,26,1.408,27,1.323,32,2.17,33,2.039,34,0.066,37,0.563,38,0.998,39,1.404,44,0.32,48,2.167,52,1.888,53,0.01,54,0.01,55,0.01,56,0.01,57,1.602,58,2.167,59,2.039,60,2.262,61,2.262,62,2.262,66,2.262,67,4.312,68,4.077,70,2.94,72,2.94,76,3.344,104,1.033,106,0.965,109,1.608,145,2.607,157,4.051,162,1.923,164,2.262,165,3.005,166,1.431,167,2.262,168,2.471,169,2.262,170,2.122,171,0.657,172,2.312,173,2.122,174,3.45,175,3.512,176,2.167,177,1.645,178,2.312,179,2.167,180,1.482,181,2.312,182,2.167,183,2.312,184,2.312,185,2.08,186,2.312,187,2.122,188,2.312,189,2.08,190,2.122,191,2.312,192,2.08,193,2.08,194,2.312,195,2.312,196,2.167,197,2.312,198,2.08,199,2.167,200,2.312,201,2.213,202,2.106,203,2.213,204,3.072,205,2.213,206,2.213,207,2.08,208,2.08,209,2.312,210,2.08,211,2.08,212,2.08,213,2.312,214,2.122,215,2.312,216,2.312,217,2.312,245,1.84,251,1.199,252,1.608,267,1.999,268,2.08,269,2.039,343,1.694,369,1.024,376,1.144,379,0.735,386,2.474,444,0.854,453,2.417,487,0.433,509,1.755,514,1.074,519,2.556,664,3.22,711,5.764,735,2.373,775,3.889,820,5.119,823,2.82,898,3.483,916,2.479,1030,4.705,1031,6.251,1032,5.329,1033,5.753,1034,6.251,1035,7.019,1036,6.251,1037,6.44,1038,7.479,1039,4.254,1040,5.273,1041,5.273,1042,5.273,1043,5.273,1044,5.273,1045,4.839,1046,6.251,1047,4.705,1048,4.331,1049,4.705,1050,4.051,1051,4.705,1052,2.676,1053,4.705,1054,3.759,1055,4.705,1056,4.331,1057,4.705,1058,4.705,1059,4.705,1060,4.705,1061,4.705,1062,4.705,1063,4.705,1064,4.705,1065,4.331,1066,6.251,1067,3.008,1068,4.705,1069,3.22,1070,5.273,1071,4.051,1072,3.008,1073,3.483,1074,3.483,1075,4.705,1076,3.344,1077,5.273,1078,3.008,1079,5.273,1080,2.676,1081,5.273,1082,3.996,1083,3.483]],["title/classes/DataInput.html",[0,0.341,1084,2.91]],["body/classes/DataInput.html",[0,0.681,2,0.382,3,0.055,4,0.048,5,0.055,7,0.27,9,0.656,11,0.656,14,0.086,15,0.212,18,0.144,19,0.006,20,0.437,21,0.172,27,0.992,32,1.627,34,0.089,37,0.703,41,2.914,46,2.281,47,1.476,49,1.646,50,3.407,53,0.011,54,0.011,55,0.011,56,0.011,99,1.712,106,1.246,127,1.862,180,1.424,352,1.999,369,1.613,379,0.517,420,3.233,487,0.682,519,2.299,611,1.524,622,2.421,725,4.738,733,3.366,827,3.46,1084,5.813,1085,5.045,1086,3.742,1087,4.332,1088,6.037,1089,5.267,1090,5.267,1091,5.9,1092,5.9,1093,5.9,1094,5.9,1095,5.9,1096,4.3,1097,5.345,1098,4.444,1099,5.9,1100,3.262,1101,3.742,1102,5.267,1103,3.603,1104,2.994,1105,3.603,1106,3.742,1107,3.742,1108,4.444,1109,3.366,1110,3.742,1111,3.603,1112,3.603,1113,3.077,1114,3.742,1115,3.742,1116,3.603,1117,2.857,1118,4.167,1119,3.742,1120,4.3,1121,3.603,1122,3.603,1123,3.603,1124,3.479,1125,3.603]],["title/classes/DataInputCheck.html",[0,0.341,1111,2.91]],["body/classes/DataInputCheck.html",[0,0.678,2,0.374,3,0.054,4,0.047,5,0.054,7,0.263,9,0.641,11,0.641,14,0.084,15,0.209,18,0.144,19,0.006,20,0.436,21,0.174,27,0.97,32,1.591,34,0.089,37,0.697,41,2.872,46,2.23,47,1.443,49,1.632,50,3.392,53,0.011,54,0.011,55,0.011,56,0.011,99,1.754,106,1.266,127,1.82,180,1.414,352,1.954,369,1.685,375,4.221,376,1.994,379,0.506,420,2.474,487,0.61,519,2.265,611,1.517,622,1.852,725,4.687,733,3.29,827,2.648,1084,6.046,1085,3.986,1086,3.658,1087,3.874,1088,6.009,1089,5.211,1090,5.211,1096,4.237,1097,5.3,1098,4.38,1100,3.189,1101,3.658,1102,5.503,1103,3.522,1104,2.927,1105,3.522,1106,3.658,1107,3.658,1108,4.38,1109,4.237,1110,4.711,1111,4.537,1112,5.019,1113,3.008,1114,3.658,1115,3.658,1116,3.522,1117,2.816,1118,4.107,1119,3.658,1120,4.237,1121,3.522,1122,3.522,1123,3.522,1124,3.401,1125,3.522,1126,5.767,1127,4.737,1128,4.737,1129,4.737,1130,4.737,1131,4.737,1132,4.737]],["title/components/DataInputComponent.html",[57,0.97,176,1.958]],["body/components/DataInputComponent.html",[0,0.292,3,0.038,4,0.033,5,0.038,7,0.187,9,0.653,11,1.027,12,0.515,14,0.06,15,0.165,18,0.116,19,0.006,20,0.18,21,0.162,24,0.252,26,1.09,27,0.987,32,2.195,33,1.579,34,0.038,37,0.639,38,0.837,39,1.176,41,3.3,47,1.469,48,1.678,49,1.104,50,2.689,52,1.462,53,0.008,54,0.008,55,0.013,56,0.008,57,1.195,58,1.678,59,1.579,60,1.752,61,1.752,62,1.752,66,1.752,67,4.239,68,3.992,70,2.464,72,2.464,74,2.884,84,1.588,86,3.245,87,4.154,94,2.409,97,1.104,98,1.356,99,1.087,102,3.478,104,0.865,107,1.989,109,1.245,136,1.224,149,2.821,153,4.821,154,2.965,164,1.752,165,2.518,166,1.108,167,1.752,168,2.215,169,1.752,170,1.644,171,0.621,172,1.791,173,1.644,174,3.013,175,1.644,176,3.405,177,2.088,178,1.791,179,1.678,180,1.44,181,1.791,182,1.678,183,1.791,184,1.791,185,1.611,186,1.791,187,1.644,188,1.791,189,1.611,190,1.644,191,1.791,192,1.611,193,1.611,194,1.791,195,1.791,196,1.678,197,1.791,198,1.611,199,1.678,200,1.791,201,1.714,202,1.764,203,1.714,204,2.574,205,1.714,206,1.714,207,1.611,208,1.611,209,1.791,210,1.611,211,1.611,212,1.611,213,1.791,214,1.644,215,1.791,216,1.791,217,1.791,245,1.542,251,1.709,252,2.427,312,7.938,323,3.354,332,2.793,338,1.678,343,1.312,421,0.69,431,2.695,454,3.222,487,0.718,501,0.823,519,1.79,572,1.884,597,2.182,611,1.503,675,2.073,807,1.832,808,4.358,820,4.588,829,2.45,830,3.15,868,2.76,911,3.15,916,1.92,1032,3.585,1054,2.192,1067,4.286,1085,4.774,1087,3.062,1096,3.349,1098,4.052,1100,4.154,1118,4.581,1120,4.286,1121,3.585,1122,3.585,1123,2.494,1124,4.052,1125,3.585,1133,4.084,1134,5.726,1135,5.238,1136,4.821,1137,4.51,1138,5.238,1139,5.238,1140,5.19,1141,4.51,1142,7.416,1143,5.238,1144,4.821,1145,5.238,1146,3.349,1147,3.349,1148,6.872,1149,5.87,1150,7.958,1151,8.286,1152,8.286,1153,8.286,1154,7.958,1155,2.965,1156,5.87,1157,4.084,1158,7.513,1159,4.963,1160,4.084,1161,5.87,1162,4.084,1163,5.87,1164,5.87,1165,5.87,1166,4.084,1167,3.723,1168,4.821,1169,5.87,1170,5.87,1171,8.537,1172,7.958,1173,5.87,1174,4.084,1175,5.238,1176,3.15,1177,4.084,1178,5.87,1179,5.238,1180,2.408,1181,4.084,1182,4.084,1183,4.084,1184,4.084,1185,4.084,1186,5.87,1187,4.084,1188,5.87,1189,3.644,1190,5.87,1191,3.644,1192,6.872,1193,5.87,1194,5.87,1195,4.084,1196,4.084,1197,4.51,1198,5.87,1199,4.084,1200,5.772,1201,5.87,1202,5.87,1203,5.87,1204,5.238,1205,5.87,1206,5.87]],["title/classes/DataInputElement.html",[0,0.341,1100,2.634]],["body/classes/DataInputElement.html",[0,0.688,2,0.403,3,0.059,4,0.051,5,0.059,7,0.284,9,0.692,11,0.692,14,0.091,15,0.22,18,0.14,19,0.006,20,0.432,21,0.116,27,1.046,28,4.111,31,2.27,32,2.15,34,0.09,37,0.626,41,3.45,46,2.406,47,1.557,49,1.466,50,3.29,53,0.011,54,0.011,55,0.011,56,0.011,106,1.229,127,1.964,180,1.406,352,2.108,369,1.653,379,0.546,420,2.669,487,0.699,519,2.378,611,1.54,622,1.999,725,3.55,733,4.447,827,2.857,1084,5.875,1085,4.184,1086,3.947,1087,4.44,1088,6.101,1089,3.947,1090,3.947,1096,3.55,1097,5.199,1098,3.67,1100,4.31,1101,3.947,1102,5.399,1103,3.801,1104,3.158,1105,3.801,1106,3.947,1107,3.947,1108,4.597,1109,3.55,1110,3.947,1111,3.801,1112,3.801,1113,3.246,1114,3.947,1115,3.947,1116,3.801,1117,2.955,1118,4.31,1119,3.947,1120,4.447,1121,3.801,1122,3.801,1123,3.801,1124,3.67,1125,3.801,1207,6.223]],["title/classes/DataInputReturned.html",[0,0.341,1118,2.634]],["body/classes/DataInputReturned.html",[0,0.685,2,0.394,3,0.057,4,0.049,5,0.057,7,0.278,9,0.676,11,0.676,14,0.089,15,0.216,18,0.142,19,0.006,20,0.43,21,0.156,27,1.023,32,2.12,34,0.09,37,0.677,41,3.421,46,2.351,47,1.923,49,1.445,50,3.267,53,0.011,54,0.011,55,0.011,56,0.011,99,1.422,106,1.257,127,1.92,180,1.394,352,2.603,369,1.636,379,0.533,420,2.609,487,0.692,519,2.344,611,1.533,622,1.954,725,3.47,733,3.47,743,2.399,827,2.792,1084,5.781,1085,4.749,1086,3.857,1087,4.008,1088,6.073,1089,3.857,1090,3.857,1096,3.47,1097,5.145,1098,3.586,1100,3.363,1101,3.857,1102,5.343,1103,3.715,1104,3.087,1105,3.715,1106,3.857,1107,3.857,1108,4.531,1109,3.47,1110,3.857,1111,3.715,1112,3.715,1113,3.172,1114,3.857,1115,3.857,1116,3.715,1117,3.193,1118,4.893,1119,3.857,1120,4.384,1121,5.145,1122,5.145,1123,4.693,1124,4.531,1125,3.715,1208,6.082,1209,6.082,1210,6.082]],["title/classes/DataInputReturnedV2.html",[0,0.341,1211,3.913]],["body/classes/DataInputReturnedV2.html",[0,0.531,2,0.481,3,0.07,4,0.06,5,0.07,7,0.339,14,0.108,15,0.244,18,0.138,19,0.006,20,0.383,21,0.171,32,2.049,34,0.07,47,1.859,53,0.014,54,0.014,55,0.014,56,0.014,180,1.492,487,0.61,611,1.189,1054,4.934,1085,5.085,1117,2.816,1211,7.128,1212,7.429,1213,7.429,1214,7.429,1215,8.203,1216,8.203,1217,7.429,1218,7.429,1219,7.429]],["title/classes/DataInputSelection.html",[0,0.341,1105,2.91]],["body/classes/DataInputSelection.html",[0,0.676,2,0.368,3,0.053,4,0.046,5,0.053,7,0.26,9,0.632,11,0.632,14,0.083,15,0.207,18,0.145,19,0.006,20,0.435,21,0.177,27,0.956,32,1.568,34,0.089,37,0.693,41,2.845,46,2.198,47,1.422,49,1.623,50,3.381,53,0.01,54,0.01,55,0.01,56,0.01,99,1.749,106,1.262,127,1.794,180,1.408,352,1.926,369,1.676,375,4.204,376,1.986,379,0.645,420,2.438,487,0.605,519,2.244,611,1.512,622,1.826,725,4.655,733,3.243,827,2.61,1084,6.036,1085,4.631,1086,3.605,1087,3.838,1088,5.991,1089,5.175,1090,5.175,1096,4.198,1097,5.692,1098,4.339,1100,3.143,1101,3.605,1102,5.473,1103,3.472,1104,2.885,1105,4.494,1106,5.175,1107,5.175,1108,4.812,1109,3.243,1110,3.605,1111,3.472,1112,3.472,1113,2.965,1114,3.605,1115,3.605,1116,3.472,1117,2.79,1118,4.068,1119,3.605,1120,4.198,1121,3.472,1122,3.472,1123,3.472,1124,3.352,1125,3.472,1127,4.668,1128,4.668,1129,4.668,1130,4.668,1131,4.668,1132,4.668,1220,5.684,1221,5.684,1222,5.684]],["title/classes/DataInputText.html",[0,0.341,1103,2.91]],["body/classes/DataInputText.html",[0,0.678,2,0.374,3,0.054,4,0.047,5,0.054,7,0.263,9,0.641,11,0.641,14,0.084,15,0.209,18,0.144,19,0.006,20,0.437,21,0.174,27,0.97,32,1.591,34,0.089,37,0.697,41,2.872,46,2.23,47,1.443,49,1.632,50,3.427,53,0.011,54,0.011,55,0.011,56,0.011,99,1.754,106,1.237,127,1.82,180,1.414,352,1.954,369,1.685,375,4.221,376,1.994,379,0.506,420,2.474,487,0.61,519,2.265,611,1.517,622,1.852,725,4.687,733,3.29,827,2.648,1084,6.046,1085,3.986,1086,3.658,1087,3.874,1088,6.009,1089,5.211,1090,5.211,1096,4.237,1097,5.3,1098,4.38,1100,3.189,1101,4.711,1102,5.503,1103,4.537,1104,4.17,1105,3.522,1106,3.658,1107,3.658,1108,4.38,1109,3.29,1110,3.658,1111,3.522,1112,3.522,1113,3.008,1114,3.658,1115,3.658,1116,3.522,1117,2.816,1118,4.107,1119,3.658,1120,4.237,1121,3.522,1122,3.522,1123,3.522,1124,3.401,1125,3.522,1127,4.737,1128,4.737,1129,4.737,1130,4.737,1131,4.737,1132,4.737,1223,5.767]],["title/components/DataInputV2Component.html",[57,0.97,179,1.958]],["body/components/DataInputV2Component.html",[0,0.202,3,0.026,4,0.023,5,0.026,7,0.129,8,2.21,11,1.016,12,0.789,14,0.041,15,0.125,18,0.133,19,0.006,20,0.332,21,0.173,24,0.202,26,0.752,27,1.209,28,4.474,29,0.921,31,2.002,32,2.213,33,1.09,34,0.026,37,0.684,38,0.633,39,0.889,41,1.09,44,0.389,45,1.429,47,1.952,48,1.158,49,0.53,50,3.048,52,1.009,53,0.005,54,0.005,55,0.005,56,0.005,57,0.904,58,1.158,59,1.09,60,1.209,61,1.209,62,1.209,66,1.209,67,4.081,68,3.799,70,1.863,72,1.863,74,3.368,83,3.556,84,1.268,86,2.454,87,3.443,94,1.718,97,1.032,98,1.268,99,1.393,102,3.858,104,1.06,106,1.037,107,2.995,108,1.589,109,1.674,114,0.574,116,3.227,128,3.066,153,2.315,164,1.209,165,1.904,166,1.204,167,1.209,168,1.836,169,1.209,170,1.135,171,0.561,172,1.236,173,1.135,174,2.407,175,1.135,176,2.256,177,2.13,178,1.236,179,2.956,180,1.59,181,1.236,182,1.158,183,1.236,184,1.236,185,1.112,186,1.236,187,1.135,188,1.236,189,1.112,190,1.135,191,1.236,192,1.112,193,1.112,194,1.236,195,1.236,196,1.158,197,1.236,198,1.112,199,1.158,200,1.236,201,1.183,202,1.462,203,1.183,204,1.946,205,1.183,206,1.183,207,1.112,208,1.112,209,1.236,210,1.112,211,1.112,212,1.112,213,1.236,214,1.135,215,1.236,216,1.236,217,1.236,245,1.166,251,1.712,252,2.066,316,8.33,332,2.518,338,1.158,343,0.905,344,2.21,424,2.081,427,2.122,442,0.86,444,0.826,451,1.236,480,0.752,487,0.77,501,0.395,509,1.477,519,2.447,572,1.712,597,2.315,599,2.691,611,1.472,675,1.43,676,1.862,692,1.721,697,1.354,725,3.552,735,0.955,795,0.955,796,0.955,803,3.792,807,1.264,808,3.481,820,3.803,823,3.139,829,2.111,849,1.75,850,3.222,853,3.301,854,3.41,857,3.626,858,2.932,875,5.152,895,2.711,911,2.382,1037,3.41,1039,2.786,1054,2.946,1065,2.315,1067,3.552,1078,3.864,1085,5.01,1087,1.47,1096,4.104,1097,4.137,1098,4.439,1100,5.05,1104,1.43,1108,4.242,1112,3.353,1117,2.081,1118,3.745,1120,1.608,1134,4.774,1135,3.96,1137,4.218,1141,3.41,1142,6.405,1143,3.96,1144,3.645,1145,3.96,1146,2.532,1147,2.532,1155,2.046,1159,5.152,1175,5.556,1180,1.662,1211,4.509,1215,2.515,1216,2.515,1224,2.819,1225,3.066,1226,3.96,1227,4.521,1228,4.438,1229,6.773,1230,4.438,1231,4.438,1232,5.49,1233,4.438,1234,7.194,1235,6.227,1236,6.773,1237,7.194,1238,7.194,1239,6.227,1240,7.194,1241,5.49,1242,5.49,1243,5.556,1244,5.49,1245,3.41,1246,4.438,1247,2.819,1248,7.194,1249,2.819,1250,5.556,1251,6.227,1252,2.928,1253,6.227,1254,4.438,1255,3.066,1256,2.819,1257,4.438,1258,4.438,1259,4.438,1260,3.96,1261,4.438,1262,4.438,1263,3.645,1264,2.819,1265,3.645,1266,4.438,1267,6.227,1268,4.438,1269,2.819,1270,2.819,1271,2.819,1272,4.438,1273,4.438,1274,4.784,1275,5.49,1276,3.985,1277,5.49,1278,5.49,1279,2.97,1280,5.49,1281,4.898,1282,2.863,1283,2.646,1284,3.985,1285,5.49,1286,5.49,1287,5.49,1288,2.819,1289,4.438,1290,3.645,1291,2.819,1292,2.515,1293,2.819,1294,2.819,1295,2.819,1296,2.819,1297,2.819,1298,2.454,1299,4.438,1300,2.819,1301,2.515,1302,2.819,1303,3.645,1304,4.438,1305,2.819,1306,2.819,1307,2.819,1308,2.515,1309,2.819,1310,2.819,1311,4.438,1312,2.819,1313,2.819,1314,6.227,1315,4.438,1316,5.49,1317,2.315,1318,2.819,1319,2.819,1320,6.773,1321,4.438,1322,2.819,1323,2.819,1324,2.819,1325,2.819,1326,6.773,1327,5.49,1328,2.819,1329,2.819,1330,2.819,1331,2.819,1332,2.819,1333,2.819,1334,6.227,1335,2.819,1336,5.49,1337,2.819,1338,2.819,1339,4.438,1340,1.788,1341,1.788,1342,4.438,1343,4.509,1344,2.819,1345,4.438,1346,2.382,1347,1.662,1348,2.515,1349,2.819,1350,2.819,1351,4.438]],["title/components/DataItemComponent.html",[57,0.97,182,1.958]],["body/components/DataItemComponent.html",[0,0.288,2,0.261,3,0.038,4,0.033,5,0.038,7,0.184,8,3.319,11,0.646,12,0.763,14,0.059,15,0.164,18,0.131,19,0.006,20,0.392,21,0.167,24,0.148,26,1.075,27,1.255,32,2.445,33,1.556,34,0.038,37,0.467,38,0.828,39,1.164,44,0.428,47,2.063,48,1.654,50,2.08,52,1.441,53,0.007,54,0.007,55,0.007,56,0.007,57,1.183,58,1.654,59,1.556,60,1.727,61,1.727,62,1.727,66,1.727,67,4.234,68,3.985,70,2.438,72,2.438,74,3.721,83,3.912,84,1.575,86,3.768,87,4.126,94,1.602,97,0.757,98,0.93,99,0.745,102,3.461,104,1.1,106,1.09,107,2.88,108,2.833,109,2.276,114,1.183,115,1.834,128,4.013,136,1.207,140,2.226,154,4.218,161,4.013,162,1.468,164,1.727,165,2.492,166,1.092,167,1.727,168,2.2,169,1.727,170,1.62,171,0.619,172,1.765,173,1.62,174,2.989,175,1.62,176,1.654,177,2.043,178,1.765,179,1.654,180,1.464,181,1.765,182,3.389,183,2.989,184,1.765,185,1.588,186,1.765,187,1.62,188,1.765,189,1.588,190,1.62,191,1.765,192,1.588,193,1.588,194,1.765,195,1.765,196,1.654,197,1.765,198,1.588,199,1.654,200,1.765,201,1.69,202,1.752,203,1.69,204,2.547,205,1.69,206,1.69,207,1.588,208,1.588,209,1.765,210,1.588,211,1.588,212,1.588,213,1.765,214,1.62,215,1.765,216,1.765,217,1.765,242,3.306,245,1.526,251,1.321,252,1.772,324,8.132,332,1.497,487,0.799,504,1.468,572,1.875,611,1.441,675,2.043,678,2.492,775,4.076,827,1.848,829,2.093,830,3.118,831,1.968,853,3.273,858,3.838,875,3.838,1069,4.558,1071,3.093,1072,3.888,1076,2.553,1082,3.314,1085,4.891,1134,3.684,1136,4.771,1140,4.013,1146,3.314,1147,3.314,1155,2.922,1159,4.93,1180,2.374,1225,5.155,1227,4.218,1250,6.659,1276,4.218,1279,2.547,1284,4.218,1301,5.183,1343,3.306,1346,2.16,1347,2.374,1348,3.592,1352,4.025,1353,5.809,1354,5.809,1355,5.809,1356,5.809,1357,5.809,1358,5.809,1359,5.809,1360,5.183,1361,8.245,1362,4.93,1363,7.463,1364,5.183,1365,4.463,1366,8.5,1367,6.816,1368,6.816,1369,5.809,1370,6.082,1371,6.082,1372,6.082,1373,6.659,1374,8.701,1375,7.061,1376,6.816,1377,5.809,1378,4.025,1379,5.809,1380,5.809,1381,4.025,1382,4.771,1383,4.463,1384,5.809,1385,4.025,1386,4.025,1387,5.418,1388,5.418,1389,5.809,1390,4.025,1391,3.118,1392,4.025,1393,5.183,1394,5.809,1395,8.219,1396,5.183,1397,5.183,1398,4.025,1399,5.183,1400,4.771,1401,4.833,1402,4.025,1403,4.025,1404,4.025,1405,5.183,1406,4.025,1407,4.771,1408,3.592,1409,5.598,1410,4.025,1411,4.949,1412,4.025,1413,4.025,1414,4.025,1415,3.592,1416,4.025,1417,4.025,1418,6.082,1419,4.025,1420,5.183,1421,5.809,1422,6.816,1423,4.025]],["title/classes/DataRouteComposer.html",[0,0.341,863,3.291]],["body/classes/DataRouteComposer.html",[0,0.43,2,0.273,3,0.04,4,0.034,5,0.04,7,0.193,9,0.848,11,1.012,12,0.734,14,0.062,15,0.215,18,0.133,19,0.006,20,0.37,21,0.142,27,1.177,34,0.09,37,0.648,38,1.149,39,1.528,44,0.383,45,1.121,47,1.752,49,0.794,53,0.008,54,0.008,55,0.008,56,0.008,77,4.351,91,1.255,94,1.658,104,1.124,127,2.407,171,0.489,177,0.991,180,0.947,219,2.165,270,4.152,274,4.152,372,1.177,376,1.817,379,0.37,424,1.6,431,1.938,433,0.982,453,2.074,457,3.291,461,1.721,476,0.807,487,0.781,501,1.069,514,1.224,564,2.029,572,1.367,579,1.848,582,1.811,599,2.974,611,0.962,676,2.788,775,4.496,777,2.631,803,2.916,805,1.127,823,2.817,827,3.701,859,2.636,863,4.152,870,3.243,875,4.624,887,5.038,898,5.534,933,2.916,941,3.065,983,3.002,998,2.636,999,2.73,1009,2.248,1013,1.851,1014,1.833,1279,1.851,1424,3.766,1425,6.245,1426,6.245,1427,4.221,1428,4.221,1429,4.221,1430,4.221,1431,7.601,1432,3.467,1433,4.141,1434,3.065,1435,5.363,1436,3.766,1437,3.766,1438,3.766,1439,3.065,1440,3.766,1441,3.766,1442,3.766,1443,3.766,1444,3.766,1445,3.766,1446,3.766,1447,2.578,1448,3.766,1449,3.766,1450,3.766,1451,3.467,1452,3.766,1453,3.766,1454,2.408,1455,3.065,1456,2.202,1457,5.363,1458,5.363,1459,5.363,1460,3.766,1461,2.265,1462,6.51,1463,6.805,1464,5.749,1465,6.258,1466,6.258,1467,7.08,1468,8.073,1469,7.08,1470,7.08,1471,3.766,1472,3.766,1473,2.578,1474,6.245,1475,4.936,1476,2.916,1477,3.467,1478,3.467,1479,3.766,1480,5.363,1481,5.363,1482,5.363,1483,4.936,1484,5.082,1485,6.245,1486,4.936,1487,5.363,1488,5.363,1489,5.363,1490,5.363,1491,5.363,1492,5.363,1493,5.363,1494,5.363,1495,3.766,1496,3.766,1497,3.766,1498,3.766,1499,3.766,1500,3.766,1501,5.363,1502,5.363,1503,5.363,1504,5.363,1505,5.363,1506,3.467,1507,5.363,1508,3.467,1509,3.766,1510,3.766,1511,3.766,1512,3.766,1513,3.766,1514,3.065,1515,3.766]],["title/classes/DataRouteVisualizer.html",[0,0.341,1455,3.459]],["body/classes/DataRouteVisualizer.html",[0,0.433,2,0.276,3,0.04,4,0.035,5,0.04,7,0.195,9,0.852,11,1.014,12,0.737,14,0.062,15,0.216,18,0.129,19,0.006,20,0.311,21,0.112,27,1.183,34,0.09,37,0.65,38,1.153,39,1.535,44,0.384,45,1.127,47,1.761,49,1.324,53,0.008,54,0.008,55,0.008,56,0.008,77,4.371,91,1.262,94,1.67,104,1.129,127,2.418,171,0.298,177,1.001,180,0.953,219,2.172,270,4.182,274,4.182,372,0.717,376,1.823,379,0.531,424,1.616,431,1.958,433,0.986,453,2.088,457,3.309,461,1.727,476,0.815,487,0.782,501,1.074,514,1.232,564,1.236,572,1.377,579,1.857,582,1.829,599,2.983,611,0.969,676,2.817,775,4.505,777,2.643,803,2.945,805,1.138,823,2.833,827,3.715,859,1.87,863,2.945,870,3.276,875,4.649,887,5.061,898,5.553,933,2.945,941,3.096,983,3.019,998,2.655,999,2.743,1009,2.261,1013,1.87,1014,1.846,1279,1.87,1424,3.804,1425,6.28,1426,6.28,1431,7.608,1432,3.502,1433,4.155,1434,3.096,1435,5.401,1436,3.804,1437,3.804,1438,3.804,1439,3.096,1440,3.804,1441,3.804,1442,3.804,1443,3.804,1444,3.804,1445,3.804,1446,3.804,1447,2.604,1448,3.804,1449,3.804,1450,3.804,1451,3.502,1452,3.804,1453,3.804,1454,3.453,1455,4.395,1456,2.224,1457,5.401,1458,5.401,1459,5.401,1460,3.804,1461,2.288,1462,6.525,1463,6.836,1464,5.781,1465,6.277,1466,6.277,1467,7.101,1468,8.081,1469,7.101,1470,7.101,1471,3.804,1472,3.804,1473,2.604,1474,6.28,1475,4.972,1476,2.945,1477,3.502,1478,3.502,1479,3.804,1480,5.401,1481,5.401,1482,5.401,1483,4.972,1484,5.11,1485,6.28,1486,4.972,1487,5.401,1488,5.401,1489,5.401,1490,5.401,1491,5.401,1492,5.401,1493,5.401,1494,5.401,1495,3.804,1496,3.804,1497,3.804,1498,3.804,1499,3.804,1500,3.804,1501,5.401,1502,5.401,1503,5.401,1504,5.401,1505,5.401,1506,3.502,1507,5.401,1508,3.502,1509,3.804,1510,3.804,1511,3.804,1512,3.804,1513,3.804,1514,3.096,1515,3.804,1516,4.264,1517,4.264]],["title/classes/DeployInstanceDTO.html",[0,0.341,751,3.022]],["body/classes/DeployInstanceDTO.html",[0,0.668,2,0.373,3,0.054,4,0.047,5,0.054,7,0.263,12,0.76,14,0.084,15,0.209,18,0.126,19,0.006,20,0.45,21,0.161,24,0.211,27,1.246,34,0.088,44,0.453,45,1.436,49,1.543,53,0.011,54,0.011,55,0.011,56,0.011,91,1.698,98,1.713,99,1.372,106,0.792,114,1.171,115,1.815,171,0.573,342,1.439,372,1.379,373,1.754,379,0.76,382,1.64,406,1.613,407,1.64,419,1.053,421,1.113,422,1.443,430,3.047,433,0.904,461,1.752,485,1.843,487,0.755,501,0.806,514,1.171,515,2.223,538,0.921,542,2.18,551,2.098,552,2.098,553,2.098,554,2.098,555,2.098,556,2.098,557,2.098,558,2.098,559,2.098,564,1.667,575,1.784,589,1.35,603,2.18,605,2.18,629,1.914,739,4.528,740,3.799,746,3.512,747,4.528,748,4.528,749,4.898,750,4.898,751,4.702,752,5.421,753,5.204,754,5.421,755,5.421,756,3.799,757,4.898,758,4.702,759,3.799,760,3.799,761,2.223,762,3.799,763,3.799,764,4.528,765,3.799,766,3.799,767,3.647,768,3.647,769,3.647,770,3.799,771,3.799,772,3.647,1518,5.75,1519,5.75,1520,5.75,1521,5.75]],["title/components/DocsComponent.html",[57,0.97,185,1.879]],["body/components/DocsComponent.html",[0,0.384,3,0.05,4,0.044,5,0.05,7,0.245,11,0.789,14,0.078,15,0.2,18,0.116,19,0.006,20,0.373,21,0.157,24,0.292,26,1.433,27,1.192,29,2.317,32,2.421,34,0.05,37,0.57,44,0.412,45,1.135,47,2.113,50,1.922,52,1.922,57,1.443,59,2.076,60,2.303,61,2.303,62,2.303,66,2.303,67,3.041,68,2.913,70,2.976,72,2.976,74,3.784,84,1.834,97,1.01,98,1.241,99,0.994,102,3.544,104,1.329,107,1.819,108,1.922,114,1.443,136,2.126,137,1.755,138,3.804,145,2.654,162,1.958,164,2.303,165,3.621,166,2.154,167,2.303,168,1.583,169,2.303,177,1.664,185,3.33,245,1.862,251,1.221,252,2.162,254,4.409,255,4.125,295,3.547,331,3.063,332,1.996,343,1.724,352,2.402,431,3.255,454,3.041,487,0.694,514,1.719,611,1.352,657,6.129,659,6.129,680,4.79,692,5.36,735,2.689,795,2.402,796,2.402,807,2.408,808,5.034,820,5.156,829,1.988,849,2.796,850,5.147,853,3.109,1075,4.79,1080,3.598,1082,4.816,1225,4.897,1279,3.109,1284,5.147,1522,5.369,1523,6.326,1524,9.015,1525,7.089,1526,7.089,1527,7.089,1528,7.089,1529,7.937,1530,7.089,1531,8.777,1532,7.937,1533,5.369,1534,9.015,1535,7.089,1536,7.089,1537,7.937,1538,5.369,1539,6.326,1540,6.326,1541,8.442,1542,5.369,1543,7.089,1544,6.326,1545,7.089,1546,7.089,1547,7.089,1548,4.683,1549,4.79,1550,4.79,1551,6.326,1552,5.369,1553,5.369,1554,5.369,1555,5.369,1556,5.369,1557,5.369,1558,7.089,1559,7.089,1560,5.369,1561,5.156,1562,3.698,1563,5.369,1564,3.405,1565,5.919,1566,5.369,1567,5.369,1568,5.369,1569,4.029,1570,4.388,1571,5.369,1572,5.369,1573,5.369,1574,5.369,1575,5.369]],["title/classes/ElementIntoTheaterDTO.html",[0,0.341,600,2.044]],["body/classes/ElementIntoTheaterDTO.html",[0,0.686,2,0.247,3,0.036,4,0.031,5,0.036,7,0.174,9,0.972,12,0.579,13,1.374,14,0.056,15,0.205,18,0.096,19,0.006,20,0.452,21,0.104,24,0.243,27,0.938,30,1.598,34,0.09,37,0.703,38,1.036,39,0.763,44,0.458,45,1.497,49,1.571,53,0.007,54,0.007,55,0.007,56,0.007,91,1.727,96,2.293,97,0.716,104,0.822,106,1.066,114,0.775,115,1.202,171,0.648,180,0.6,219,0.984,352,1.29,369,1.083,370,1.267,371,1.67,372,1.405,373,2.217,376,1.21,379,0.847,382,1.883,402,1.181,403,2.217,404,2.255,405,2.377,406,1.068,407,1.591,408,1.856,419,1.072,421,1.133,422,1.468,433,1.11,442,1.161,444,0.943,461,1.552,476,1.479,480,1.489,484,1.708,485,1.893,486,2.502,487,0.768,488,2.502,489,2.502,496,2.342,497,2.342,498,1.708,499,2.553,500,1.181,501,0.534,502,1.708,503,1.633,504,1.389,505,1.708,506,1.708,507,1.708,508,1.708,509,1.267,510,1.633,511,1.708,512,1.67,513,1.267,514,0.775,515,1.472,516,3.118,517,1.708,518,1.708,519,1.161,520,1.708,521,2.393,522,1.708,523,2.502,524,1.708,525,1.708,526,1.598,527,3.664,528,1.363,529,1.67,530,1.708,531,2.393,532,1.708,533,1.708,534,1.708,535,1.708,536,1.708,537,1.708,538,1.164,539,1.708,540,1.633,541,2.393,542,1.443,543,2.342,544,1.708,545,1.708,546,2.446,547,1.708,548,1.708,549,2.393,550,1.708,551,1.389,552,1.389,553,1.389,554,1.389,555,1.389,556,1.389,557,1.389,558,1.389,559,1.389,560,1.708,561,1.708,562,1.708,563,1.67,564,1.617,565,1.67,566,1.67,567,1.67,568,1.67,569,1.67,570,1.67,571,1.67,572,0.866,573,1.396,574,1.67,575,1.731,576,0.88,577,1.708,578,1.708,579,0.923,580,1.708,581,1.598,582,1.633,583,2.246,584,1,585,1.416,586,1.142,587,2.502,588,1.21,589,1.899,590,1.202,591,1.443,592,2.446,593,1.389,594,2.446,595,3.261,596,2.446,597,2.074,598,3.188,599,2.508,600,2.393,601,1.708,602,1.598,603,1.443,604,1.708,605,1.443,1576,3.807,1577,3.807]],["title/classes/EmptyModuleInfo.html",[0,0.341,1578,4.251]],["body/classes/EmptyModuleInfo.html",[0,0.399,2,0.362,3,0.052,4,0.045,5,0.052,7,0.255,9,0.9,11,0.9,14,0.081,15,0.205,18,0.135,19,0.006,21,0.172,24,0.297,27,1.223,34,0.076,44,0.392,53,0.01,54,0.01,55,0.01,56,0.01,57,1.136,94,1.54,107,3.144,108,3.322,127,1.762,202,2.234,277,2.92,331,3.184,332,3.008,386,2.596,392,4.439,394,3.714,396,3.714,428,2.555,452,3.189,453,2.791,487,0.459,501,1.019,611,1.486,621,1.891,733,4.149,735,2.464,746,3.409,775,4.237,827,3.339,831,2.464,835,5.28,895,3.409,1050,4.289,1113,2.911,1168,5.973,1265,4.585,1431,5.588,1433,2.759,1462,6.222,1464,4.585,1465,6.222,1466,6.222,1467,7.039,1468,7.729,1469,7.039,1470,7.039,1569,4.08,1578,6.489,1579,9.41,1580,5.582,1581,3.793,1582,6.489,1583,3.793,1584,7.513,1585,6.829,1586,6.829,1587,5.582,1588,5.582,1589,5.582,1590,5.582,1591,5.582,1592,5.582,1593,5.582,1594,4.804,1595,5.582,1596,5.28,1597,5.582,1598,5.28,1599,5.582,1600,5.588,1601,4.981,1602,3.409,1603,4.981,1604,4.981,1605,5.582,1606,5.582,1607,3.687,1608,4.981,1609,3.687,1610,4.981,1611,2.833,1612,2.036,1613,5.582]],["title/classes/EmptyNodeInfo.html",[0,0.341,1614,4.251]],["body/classes/EmptyNodeInfo.html",[0,0.439,2,0.398,3,0.058,4,0.05,5,0.058,7,0.28,9,0.941,11,0.941,14,0.09,15,0.218,18,0.123,19,0.006,21,0.157,24,0.311,27,1.299,34,0.08,44,0.406,53,0.011,54,0.011,55,0.011,56,0.011,57,1.25,94,1.693,107,2.866,108,3.029,127,1.938,202,2.149,277,2.755,331,3.502,332,3.146,385,3.629,386,2.449,388,3.629,390,3.337,428,2.716,452,3.39,453,2.919,487,0.504,501,1.083,579,2.152,611,1.519,621,2.08,733,4.409,735,2.08,746,3.749,777,3.063,827,3.549,831,2.619,835,5.612,895,3.749,999,3.179,1050,4.717,1113,3.202,1168,6.349,1265,5.042,1431,5.939,1433,3.035,1569,2.818,1581,4.032,1582,6.897,1583,4.032,1600,5.939,1601,5.478,1602,3.749,1603,5.478,1604,6.897,1607,4.056,1608,5.478,1609,4.056,1610,5.478,1611,3.116,1612,2.239,1614,6.897,1615,8.88,1616,6.139,1617,7.032,1618,7.032,1619,7.032,1620,9.68,1621,6.139,1622,6.139,1623,6.139,1624,5.612,1625,6.139,1626,5.612,1627,6.139,1628,5.612,1629,6.139,1630,6.139]],["title/classes/EntityNameMappingFileDTO.html",[0,0.341,764,2.91]],["body/classes/EntityNameMappingFileDTO.html",[0,0.672,2,0.382,3,0.055,4,0.048,5,0.055,7,0.269,12,0.767,14,0.086,15,0.212,18,0.086,19,0.006,20,0.45,21,0.109,24,0.216,27,0.99,34,0.088,44,0.455,45,1.4,49,1.561,53,0.011,54,0.011,55,0.011,56,0.011,91,1.706,98,1.917,106,0.811,114,1.199,115,1.859,171,0.58,342,1.473,372,1.395,373,1.796,379,0.767,382,1.679,406,1.651,407,1.679,419,1.058,421,1.118,422,1.45,430,2.42,433,1.011,461,1.771,485,1.823,487,0.743,501,1.055,514,1.533,515,2.276,538,0.943,542,2.232,551,2.148,552,2.148,553,2.148,554,2.148,555,2.148,556,2.148,557,2.148,558,2.148,559,2.148,564,1.707,575,1.827,589,1.382,603,2.232,605,2.232,629,1.959,739,4.598,740,3.89,746,3.596,747,4.598,748,4.598,749,3.89,750,3.89,751,3.734,752,3.89,753,3.734,754,3.89,755,3.89,756,3.89,757,5.482,758,5.263,759,3.89,760,3.89,761,2.276,762,3.89,763,4.973,764,5.068,765,5.482,766,3.89,767,3.734,768,3.734,769,3.734,770,3.89,771,3.89,772,3.734,1631,5.888]],["title/classes/ExportModule.html",[0,0.341,1632,3.913]],["body/classes/ExportModule.html",[0,0.188,2,0.171,3,0.025,4,0.021,5,0.025,7,0.12,9,0.969,11,0.895,12,0.688,13,0.649,14,0.038,15,0.118,18,0.117,19,0.006,20,0.419,21,0.149,24,0.241,29,1.716,31,0.961,34,0.025,37,0.73,38,0.996,41,1.018,43,2.778,44,0.422,47,1.052,53,0.005,54,0.005,55,0.005,56,0.005,74,3.295,84,1.814,93,2.905,94,2.165,97,1.232,98,1.694,99,1.213,102,2.932,104,1.03,106,0.363,107,0.892,108,0.943,109,1.283,114,1.422,116,2.355,127,2.314,136,2.094,166,1.425,171,0.626,177,1.721,219,0.681,239,1.626,245,1.105,251,1.831,332,0.979,344,1.06,372,0.443,379,0.612,411,0.817,412,0.726,419,0.667,433,1.092,434,3.077,437,3.133,442,1.828,443,3.53,444,1.108,450,1.238,451,3.063,453,0.909,457,1.978,458,1.269,460,2.41,476,1.146,487,0.755,501,0.589,538,0.422,572,1.363,573,0.659,576,1.213,579,2.087,581,3.077,588,0.912,596,1.155,597,1.952,599,2.627,611,1.379,615,0.961,616,0.961,618,0.961,621,2.366,626,1.506,627,1.506,640,2.276,644,1.564,664,5.19,697,2.394,743,2.364,777,3.006,780,2.777,783,2.667,789,1.018,795,2.366,796,2.366,803,2.905,805,2.234,823,2.637,824,2.257,827,1.931,829,2.347,851,3.231,857,1.74,889,0.979,895,2.569,911,4.086,916,2.469,921,2.163,926,2.778,960,1.181,961,1.181,962,1.181,969,1.181,970,1.181,971,1.181,972,1.181,973,1.181,974,3.452,975,3.669,976,3.442,977,3.442,978,3.339,979,3.339,984,1.155,985,1.181,986,1.181,988,1.887,990,1.181,991,2.629,996,1.804,1001,2.355,1002,2.571,1003,1.155,1005,1.082,1006,2.204,1008,1.887,1009,2.446,1010,2.355,1012,2.364,1014,2.13,1016,1.887,1017,1.887,1019,1.155,1020,1.181,1021,1.181,1022,1.181,1054,3.217,1134,2.667,1255,2.905,1276,3.053,1283,3.366,1317,2.163,1409,2.163,1434,1.912,1456,1.374,1475,3.454,1478,3.454,1544,2.35,1569,3.496,1607,3.96,1612,2.674,1632,4.924,1633,2.634,1634,3.454,1635,4.352,1636,6.794,1637,7.331,1638,5.995,1639,4.206,1640,6.985,1641,5.995,1642,5.995,1643,5.995,1644,4.206,1645,4.206,1646,2.634,1647,4.924,1648,4.924,1649,6.233,1650,2.634,1651,3.753,1652,4.206,1653,2.905,1654,6.552,1655,2.634,1656,3.753,1657,3.753,1658,4.685,1659,3.753,1660,3.753,1661,3.753,1662,3.753,1663,3.753,1664,3.753,1665,5.349,1666,3.454,1667,3.753,1668,4.206,1669,2.634,1670,3.454,1671,4.206,1672,4.206,1673,4.74,1674,4.206,1675,2.634,1676,4.206,1677,3.454,1678,4.206,1679,5.25,1680,6.985,1681,2.634,1682,3.231,1683,3.753,1684,5.737,1685,6.233,1686,4.825,1687,3.231,1688,4.206,1689,4.206,1690,2.634,1691,4.206,1692,4.206,1693,2.634,1694,4.206,1695,4.206,1696,3.753,1697,2.634,1698,5.25,1699,1.337,1700,1.609,1701,2.35,1702,2.35,1703,2.35,1704,2.634,1705,2.35,1706,2.634,1707,4.206,1708,2.634,1709,2.634,1710,2.634,1711,7.182,1712,3.753,1713,3.753,1714,5.25,1715,2.163,1716,3.753,1717,2.634,1718,2.163,1719,2.634,1720,2.163,1721,2.634,1722,2.634,1723,4.206,1724,2.634,1725,2.634,1726,2.634,1727,2.634,1728,2.35,1729,2.634,1730,2.634,1731,4.206,1732,5.995,1733,2.634,1734,2.634,1735,2.634,1736,2.778,1737,3.133,1738,4.206,1739,2.634,1740,5.25,1741,2.634,1742,2.634,1743,2.634,1744,4.206,1745,6.542,1746,2.634,1747,2.634,1748,2.634,1749,4.206,1750,2.634,1751,2.634,1752,2.634,1753,2.634,1754,2.634,1755,4.034,1756,3.231,1757,2.634,1758,2.634,1759,2.634,1760,2.634,1761,4.685,1762,4.206,1763,2.634,1764,4.206,1765,2.634,1766,2.634,1767,2.634,1768,2.634,1769,2.634,1770,2.634,1771,2.634,1772,4.206,1773,4.206,1774,2.634,1775,2.634,1776,2.634,1777,4.206,1778,2.634,1779,2.634,1780,2.634,1781,2.634,1782,2.634,1783,2.634,1784,2.634,1785,2.634,1786,4.206,1787,2.634,1788,2.634,1789,2.35,1790,2.634,1791,2.35,1792,2.634,1793,2.634,1794,2.634,1795,4.206,1796,4.206,1797,2.634,1798,4.206,1799,2.634,1800,2.634,1801,2.634,1802,2.634,1803,4.206,1804,2.634,1805,2.024,1806,4.206,1807,2.634,1808,2.634,1809,2.634,1810,2.634,1811,2.634,1812,2.634,1813,2.634,1814,2.634,1815,4.685]],["title/injectables/ExportService.html",[649,1.918,1816,4.251]],["body/injectables/ExportService.html",[0,0.325,3,0.043,4,0.037,5,0.083,7,0.208,14,0.066,15,0.178,18,0.131,19,0.006,21,0.164,24,0.335,26,1.215,34,0.069,38,1.255,39,1.461,44,0.43,45,1.508,53,0.008,54,0.008,55,0.008,56,0.008,69,2.309,74,3.603,84,1.051,94,2.477,97,1.483,98,2.075,99,1.459,102,3.309,107,2.147,108,2.268,127,2.489,136,2.693,137,2.071,177,2.276,245,1.664,251,1.793,332,2.356,344,3.174,376,1.374,433,1.126,434,3.696,437,3.85,440,4.144,444,1.126,445,3.696,461,1.972,487,0.805,514,1.605,599,3.098,611,1.508,620,3.502,626,2.268,627,3.072,628,3.503,649,2.55,651,2.442,674,2.442,697,2.404,823,3.174,829,2.518,830,4.82,839,4.6,887,3.005,889,1.692,974,2.718,1048,5.204,1252,3.707,1514,4.6,1539,7.035,1609,6.376,1632,6.475,1635,6.52,1699,2.309,1700,2.779,1701,4.06,1816,5.654,1817,4.55,1818,4.018,1819,3.4,1820,7.049,1821,6.336,1822,5.654,1823,4.6,1824,6.336,1825,6.336,1826,6.336,1827,6.336,1828,6.336,1829,6.336,1830,4.55,1831,7.884,1832,7.396,1833,6.336,1834,4.55,1835,7.884,1836,7.396,1837,6.336,1838,4.55,1839,6.336,1840,4.55,1841,6.475,1842,4.06,1843,7.035,1844,7.035,1845,7.035,1846,7.035,1847,7.035,1848,7.035,1849,5.654,1850,4.06,1851,4.55,1852,5.654,1853,4.06,1854,4.55,1855,5.654,1856,4.55,1857,4.55,1858,4.55,1859,4.55,1860,4.55,1861,4.55,1862,4.55,1863,4.55,1864,4.55,1865,4.55]],["title/classes/ExportTheater.html",[0,0.341,1841,3.913]],["body/classes/ExportTheater.html",[0,0.293,2,0.265,3,0.065,4,0.033,5,0.038,7,0.187,9,0.836,12,0.727,13,1.694,14,0.06,15,0.165,18,0.11,19,0.006,20,0.415,21,0.154,24,0.276,29,1.921,34,0.038,37,0.666,38,0.98,39,1.661,41,1.581,43,4.966,44,0.429,45,1.204,53,0.008,54,0.008,55,0.008,56,0.008,84,2.056,93,4.059,94,2.41,97,1.105,98,1.358,99,1.088,102,3.156,114,1.779,127,2.373,136,2.062,171,0.597,177,2.005,180,0.925,219,1.057,245,1.543,251,1.885,332,1.521,372,0.988,379,0.358,419,0.836,433,1.065,437,3.92,442,1.792,443,3.297,444,1.136,445,3.585,450,1.923,451,2.577,457,2.763,460,3.451,461,1.952,476,1.123,480,1.569,487,0.718,501,0.823,538,0.941,564,1.186,573,1.023,575,1.269,581,2.466,584,1.074,586,1.226,590,1.291,593,1.492,597,2.185,599,2.86,608,3.465,615,1.492,616,1.492,617,2.411,618,1.492,621,2.547,626,2.103,627,2.691,628,4.583,630,5.076,631,4.985,634,2.333,636,2.411,638,2.411,641,3.465,646,3.352,664,5.337,697,2.097,743,2.318,780,1.492,795,2.808,796,2.808,805,2.333,823,2.365,824,3.153,827,2.698,829,2.325,895,3.589,911,3.153,923,3.359,1009,2.663,1014,1.792,1026,3.649,1054,3.691,1255,4.059,1276,4.266,1569,3.157,1607,3.882,1634,4.826,1635,5.458,1636,7.797,1647,6.174,1648,6.174,1649,7.397,1656,6.708,1657,5.243,1658,7.105,1659,5.243,1660,5.243,1661,5.243,1662,5.243,1663,5.243,1664,5.243,1665,6.708,1666,4.826,1667,5.243,1673,4.324,1677,4.826,1682,4.514,1683,5.243,1684,4.826,1685,5.243,1686,5.193,1687,5.776,1696,5.243,1699,2.076,1700,2.498,1702,3.649,1703,3.649,1705,3.649,1711,7.397,1712,3.649,1713,3.649,1716,3.649,1761,3.649,1789,3.649,1791,3.649,1841,6.174,1853,3.649,1866,4.09,1867,7.518,1868,5.876,1869,7.518,1870,5.876,1871,5.876,1872,4.09,1873,4.09,1874,5.876,1875,4.09,1876,5.876,1877,4.826,1878,5.876,1879,5.876,1880,5.243,1881,5.876,1882,4.09,1883,5.876,1884,4.09,1885,4.09,1886,4.09,1887,4.09,1888,4.09,1889,4.09,1890,4.09,1891,4.09,1892,5.876,1893,5.876,1894,4.09,1895,4.09,1896,4.09,1897,4.09,1898,4.09,1899,4.09,1900,4.09,1901,4.09,1902,4.09,1903,4.09,1904,4.09,1905,4.09,1906,4.09,1907,4.09,1908,5.876,1909,4.09,1910,5.876,1911,4.09,1912,4.09,1913,4.09,1914,4.09,1915,4.09,1916,4.09,1917,4.09,1918,4.09,1919,4.09]],["title/injectables/FileService.html",[649,1.918,1920,3.913]],["body/injectables/FileService.html",[0,0.328,3,0.043,4,0.037,5,0.094,7,0.209,11,0.708,12,0.811,14,0.067,15,0.179,18,0.129,19,0.006,20,0.202,21,0.164,24,0.269,26,1.223,29,2.585,34,0.043,37,0.368,38,0.653,39,0.918,43,5.224,44,0.423,45,1.266,53,0.008,54,0.008,55,0.008,56,0.008,69,2.325,74,3.835,84,1.059,94,2.292,97,1.197,98,1.988,99,1.179,102,3.611,106,1.008,107,2.157,108,2.279,109,2.412,114,1.296,121,5.681,127,2.496,136,2.194,137,2.081,168,1.351,177,2.112,245,1.672,251,1.89,331,2.614,332,2.367,338,2.617,344,3.462,352,1.552,376,1.381,433,0.776,434,1.923,440,4.15,444,1.048,445,1.923,461,1.359,487,0.8,514,1.61,621,2.157,649,2.563,651,2.459,653,3.119,674,2.459,697,2.786,710,4.174,795,2.679,796,2.914,823,3.462,824,3.417,829,2.412,831,2.157,841,2.617,849,2.511,853,2.792,868,2.994,880,3.52,885,3.52,887,5.682,889,1.703,1136,5.229,1197,4.892,1252,3.718,1281,5.681,1284,4.622,1388,4.622,1514,5.312,1700,2.798,1818,4.038,1820,6.495,1823,5.312,1842,5.681,1843,7.056,1844,7.056,1845,7.056,1846,7.056,1847,7.056,1848,7.056,1849,5.681,1850,5.681,1852,5.681,1855,5.681,1920,5.229,1921,4.581,1922,4.892,1923,6.367,1924,6.367,1925,6.367,1926,7.317,1927,7.908,1928,6.367,1929,5.681,1930,6.367,1931,4.581,1932,6.367,1933,5.681,1934,5.681,1935,7.908,1936,6.367,1937,6.367,1938,8.996,1939,4.581,1940,5.681,1941,6.367,1942,5.681,1943,4.581,1944,6.367,1945,3.52,1946,5.681,1947,4.581,1948,4.581,1949,4.581,1950,6.367,1951,4.581,1952,6.367,1953,4.581,1954,4.581,1955,4.581,1956,3.52,1957,3.52,1958,4.581,1959,3.52,1960,4.581,1961,4.581,1962,4.581,1963,4.581,1964,2.798,1965,4.581,1966,3.026,1967,4.581,1968,4.581,1969,4.581,1970,4.581,1971,4.581,1972,4.088,1973,4.581,1974,4.581,1975,4.581,1976,4.581]],["title/classes/FlavorApplication.html",[0,0.341,478,2.24]],["body/classes/FlavorApplication.html",[0,0.671,2,0.318,3,0.046,4,0.04,5,0.046,9,0.742,11,0.977,12,0.585,14,0.072,15,0.188,18,0.119,19,0.006,20,0.434,21,0.151,24,0.344,34,0.091,38,0.951,39,1.52,44,0.372,46,1.896,53,0.009,54,0.009,55,0.009,56,0.009,94,1.353,103,1.38,116,2.993,127,1.548,162,2.434,171,0.343,177,1.911,202,1.78,219,1.96,277,2.725,286,3.749,342,1.227,343,2.735,345,1.603,367,2.489,368,2.558,369,1.82,370,2.22,375,3.482,376,1.765,379,0.836,382,1.902,385,2.862,386,2.423,387,2.364,388,2.862,389,2.364,390,2.632,391,2.364,392,3.482,393,2.558,394,3.482,395,2.558,396,3.482,397,2.558,398,4.13,399,2.425,400,3.491,401,2.306,402,2.525,403,1.496,404,2.07,405,2.181,406,1.871,407,1.902,408,2.22,409,2.252,410,2.425,411,2.525,412,2.092,413,3.655,414,3.183,415,3.183,416,3.183,417,4.52,418,4.342,419,0.742,420,2.862,421,0.784,422,1.017,423,3.386,424,2.529,425,3.48,426,3.48,427,2.58,428,2.345,429,3.48,430,2.742,431,3.482,432,2.558,433,0.598,434,2.059,435,2.558,436,2.558,437,2.2,438,2.558,439,3.48,440,2.993,441,3.48,442,2.035,443,2.926,444,0.924,445,3.183,446,3.48,447,2.558,448,1.692,449,2.558,450,2.306,451,2.151,452,2.151,453,1.692,454,2.104,455,2.558,456,2.558,457,2.306,458,3.216,459,2.425,460,2.252,461,1.047,462,3.137,463,4.003,464,2.364,465,2.364,466,3.386,467,4.131,468,3.923,469,3.491,470,3.48,471,3.955,472,3.849,473,3.402,474,2.364,475,4.131,476,0.937,477,2.489,478,3.137,479,3.655,1977,4.232,1978,4.232,1979,4.232,1980,4.905,1981,4.377,1982,4.377,1983,4.377]],["title/classes/FlavorBasicInfo.html",[0,0.341,398,2.24]],["body/classes/FlavorBasicInfo.html",[0,0.632,2,0.438,3,0.064,4,0.055,5,0.064,7,0.309,12,0.593,14,0.099,15,0.231,18,0.129,19,0.006,20,0.442,21,0.164,34,0.083,44,0.437,49,1.544,53,0.012,54,0.012,55,0.012,56,0.012,91,1.584,171,0.573,338,2.78,369,1.594,372,1.137,373,2.503,379,0.863,398,4.32,419,0.983,421,1.039,422,1.347,444,0.825,485,1.743,622,2.173,813,6.104,1977,5.604,1978,5.604,1979,5.604,1984,5.556,1985,6.765,1986,6.765,1987,6.765,1988,5.556,1989,5.556,1990,6.306,1991,5.556,1992,5.556,1993,5.556,1994,5.556,1995,4.673,1996,5.556,1997,5.556]],["title/classes/FlavorDTO.html",[0,0.341,1995,3.291]],["body/classes/FlavorDTO.html",[0,0.617,2,0.415,3,0.06,4,0.052,5,0.06,7,0.293,14,0.094,15,0.224,18,0.141,19,0.006,20,0.443,21,0.18,34,0.081,37,0.515,44,0.431,49,1.696,53,0.012,54,0.012,55,0.012,56,0.012,91,1.547,171,0.63,338,2.635,369,1.675,372,1.078,373,2.751,375,3.962,376,1.872,379,0.861,398,4.502,419,0.96,421,1.014,422,1.315,444,0.782,485,1.702,743,2.529,813,5.961,1977,5.473,1978,5.473,1979,5.473,1981,5.722,1982,5.722,1983,5.722,1984,5.267,1988,5.267,1989,5.267,1990,6.63,1991,5.267,1992,5.267,1993,5.267,1994,6.524,1995,5.487,1996,7.087,1997,7.087,1998,6.413,1999,6.413,2000,6.413,2001,6.413,2002,6.413]],["title/injectables/FlavorService.html",[649,1.918,2003,3.661]],["body/injectables/FlavorService.html",[0,0.456,3,0.06,4,0.052,5,0.06,14,0.093,18,0.116,19,0.006,20,0.398,21,0.16,24,0.34,26,1.703,34,0.06,49,1.2,53,0.012,54,0.012,55,0.012,56,0.012,69,3.237,84,1.474,97,1.489,98,1.829,99,1.465,138,3.423,232,6.065,245,2.079,251,1.8,295,4.213,326,4.213,327,4.213,331,4.516,332,2.943,352,2.682,379,0.694,399,3.153,649,3.187,651,3.423,653,3.721,656,4.9,657,6.535,659,5.747,669,4.9,674,3.423,675,3.237,676,5.947,697,2.414,710,5.513,719,4.668,1956,6.082,1957,6.082,1966,5.229,1995,5.946,2003,6.082,2004,6.378,2005,9.002,2006,7.916,2007,6.378,2008,6.378,2009,7.916,2010,6.378,2011,6.378,2012,6.502,2013,6.502,2014,6.502,2015,6.502,2016,6.502,2017,6.502,2018,6.378,2019,6.378]],["title/classes/GenericParameterDTO.html",[0,0.341,527,2.089]],["body/classes/GenericParameterDTO.html",[0,0.687,2,0.247,3,0.036,4,0.031,5,0.036,7,0.174,9,0.954,12,0.58,13,1.377,14,0.056,15,0.205,18,0.106,19,0.006,20,0.452,21,0.123,24,0.243,27,0.642,30,2.347,34,0.09,37,0.703,38,1.038,39,0.765,44,0.458,45,1.497,49,1.573,53,0.007,54,0.007,55,0.007,56,0.007,91,1.728,96,1.57,97,0.718,104,0.824,106,1.068,114,0.778,115,1.206,171,0.649,180,0.602,219,0.987,352,1.294,369,1.086,370,1.271,371,1.675,372,1.471,373,2.221,376,1.213,379,0.848,382,1.886,402,1.185,403,2.017,404,2.259,405,2.162,406,1.071,407,1.594,408,1.861,419,1.072,421,1.133,422,1.469,433,1.111,442,1.165,444,0.944,461,1.554,476,1.264,480,1.493,484,1.713,485,1.894,486,2.508,487,0.763,488,2.508,489,2.508,496,2.347,497,2.347,498,1.713,499,2.557,500,1.185,501,0.535,502,1.713,503,1.638,504,1.393,505,1.713,506,1.713,507,1.713,508,1.713,509,1.271,510,1.638,511,1.713,512,1.675,513,1.271,514,0.778,515,1.477,516,3.123,517,1.713,518,1.713,519,1.165,520,1.713,521,2.399,522,1.713,523,2.508,524,1.713,525,1.713,526,2.347,527,3.761,528,2.368,529,1.675,530,1.713,531,2.399,532,1.713,533,1.713,534,1.713,535,1.713,536,1.713,537,1.713,538,1.166,539,1.713,540,1.638,541,2.399,542,1.448,543,2.347,544,1.713,545,1.713,546,2.452,547,1.713,548,1.713,549,2.399,550,1.713,551,1.393,552,1.393,553,1.393,554,1.393,555,1.393,556,1.393,557,1.393,558,1.393,559,1.393,560,1.713,561,1.713,562,1.713,563,1.675,564,1.621,565,1.675,566,1.675,567,1.675,568,1.675,569,1.675,570,1.675,571,1.675,572,0.869,573,1.399,574,1.675,575,1.735,576,0.883,577,1.713,578,1.713,579,0.926,580,1.713,581,1.603,582,1.638,583,2.251,584,1.003,585,1.42,586,1.145,587,2.508,588,1.213,589,1.819,590,1.206,591,1.448,592,2.452,593,1.393,594,1.675,595,2.967,596,1.675,597,1.42,598,2.901,599,2.282,600,1.638,601,1.713,602,1.603,603,1.448,604,1.713,605,1.448,2020,3.82,2021,3.82,2022,3.82]],["title/components/HomeComponent.html",[57,0.97,187,1.918]],["body/components/HomeComponent.html",[0,0.153,3,0.02,4,0.017,5,0.081,7,0.207,9,0.588,10,2.721,11,0.876,12,0.821,14,0.031,15,0.1,18,0.132,19,0.006,20,0.355,21,0.168,24,0.246,25,3.016,26,0.569,27,0.889,32,1.618,33,0.824,34,0.02,37,0.759,38,1.098,39,1.544,41,2.044,44,0.434,45,1.307,47,1.583,48,0.876,49,1.613,50,2.922,52,1.268,53,0.004,54,0.004,55,0.008,56,0.004,57,1.076,58,0.876,59,0.824,60,0.915,61,1.948,62,0.915,66,0.915,67,3.929,68,3.617,70,1.486,72,1.486,74,4.069,77,4.155,83,2.245,84,1.049,85,1.548,88,3.297,91,1.134,94,1.745,95,2.721,97,1.103,98,1.683,99,1.241,100,3,102,3.952,103,0.732,104,1.107,106,0.872,107,2.467,108,2.607,109,2.14,114,1.076,115,1.669,127,2.37,129,1.409,136,2.104,138,1.9,144,3.16,145,3.712,157,1.638,162,2.308,164,0.915,165,1.519,166,1.232,167,0.915,168,2.367,169,0.915,170,0.858,171,0.605,172,0.935,173,0.858,174,1.991,175,0.858,176,0.876,177,0.831,178,0.935,179,0.876,180,1.241,181,0.935,182,0.876,183,0.935,184,0.935,185,0.841,186,0.935,187,2.547,188,0.935,189,0.841,190,0.858,191,0.935,192,0.841,193,0.841,194,0.935,195,0.935,196,0.876,197,0.935,198,0.841,199,0.876,200,0.935,201,0.895,202,1.241,203,0.895,204,1.553,205,0.895,206,0.895,207,0.841,208,0.841,209,0.935,210,0.841,211,0.841,212,0.841,213,0.935,214,0.858,215,0.935,216,0.935,217,0.935,234,2.908,245,0.93,251,1.439,252,1.93,270,4.371,274,4.371,332,1.317,338,3.086,344,2.128,345,1.728,361,2.571,372,1.262,376,1.708,379,0.464,424,1.342,430,1.455,433,0.771,440,0.957,444,1.064,460,1.626,461,1.351,487,0.784,501,0.496,504,0.778,509,1.759,514,1.805,528,1.268,564,2.177,573,0.886,599,1.824,609,2.088,611,1.453,623,1.966,624,1.966,653,1.791,675,1.082,678,0.915,697,0.65,706,5.646,709,4.062,719,1.257,725,4.003,775,2.614,795,1.2,796,1.2,805,1.874,808,1.352,821,5.095,823,2.547,824,1.9,827,2.427,829,2.289,830,3.396,831,2.144,849,3.107,851,2.721,853,0.935,854,5.392,855,1.797,858,4.961,863,2.446,872,6.168,873,1.75,880,2.721,885,2.721,887,5.09,889,0.793,892,1.751,898,3.493,901,3.16,903,3.16,905,3.16,907,3.73,913,1.751,916,2.135,918,2.721,940,3.16,941,2.571,942,1.638,1014,1.08,1067,2.59,1069,2.163,1072,2.02,1078,2.59,1080,1.797,1082,3.61,1085,1.144,1087,2.758,1096,2.02,1100,4.152,1117,1.342,1118,3.498,1124,2.088,1140,2.446,1142,6.168,1167,4.013,1179,3.16,1197,2.721,1225,2.446,1227,2.571,1255,2.446,1263,2.908,1276,2.571,1282,1.847,1292,3.16,1308,1.903,1346,1.9,1364,3.16,1407,1.751,1411,5.095,1432,6.329,1454,3.016,1455,2.571,1523,3.16,1561,2.773,1562,2.368,1564,1.352,1565,1.352,1569,0.979,1602,2.163,1607,1.409,1611,2.683,1651,7.487,1682,4.062,1684,2.908,1687,2.721,1728,3.16,1815,1.903,1818,2.246,1920,6.168,1922,2.721,1929,3.16,1942,3.16,1945,1.958,2023,2.132,2024,3.541,2025,3.16,2026,3.541,2027,3.541,2028,3.541,2029,4.541,2030,3.541,2031,8.163,2032,4.541,2033,5.866,2034,5.866,2035,4.541,2036,4.541,2037,4.541,2038,4.541,2039,5.866,2040,3.541,2041,3.541,2042,5.287,2043,7.018,2044,3.541,2045,3.541,2046,2.132,2047,3.541,2048,3.541,2049,2.132,2050,4.343,2051,2.721,2052,3.541,2053,3.541,2054,3.541,2055,2.132,2056,2.908,2057,3.541,2058,3.541,2059,2.132,2060,2.132,2061,3.541,2062,3.541,2063,3.541,2064,2.132,2065,3.541,2066,3.541,2067,3.541,2068,3.541,2069,2.132,2070,7.018,2071,3.541,2072,7.877,2073,6.328,2074,2.132,2075,4.718,2076,5.866,2077,2.132,2078,2.132,2079,3.541,2080,2.132,2081,3.541,2082,2.132,2083,3.541,2084,2.132,2085,2.132,2086,3.541,2087,2.132,2088,5.287,2089,2.132,2090,2.132,2091,2.132,2092,3.16,2093,2.132,2094,3.16,2095,2.132,2096,2.132,2097,2.132,2098,2.132,2099,5.287,2100,2.132,2101,2.132,2102,1.903,2103,2.132,2104,3.541,2105,3.541,2106,5.866,2107,3.541,2108,2.132,2109,2.132,2110,2.132,2111,2.132,2112,1.638,2113,1.638,2114,1.903,2115,2.132,2116,3.541,2117,2.132,2118,3.16,2119,2.132,2120,2.132,2121,2.132,2122,2.132,2123,3.541,2124,3.541,2125,2.132,2126,2.132,2127,4.541,2128,3.541,2129,2.132,2130,2.132,2131,2.132,2132,2.132,2133,2.132,2134,2.132,2135,2.132,2136,3.541,2137,3.541,2138,3.541,2139,3.541,2140,3.541,2141,3.541,2142,4.343,2143,3.541,2144,7.018,2145,3.541,2146,3.541,2147,2.339,2148,3.541,2149,1.409,2150,2.132,2151,1.903,2152,3.541,2153,3.16,2154,3.541,2155,3.541,2156,3.16,2157,3.541,2158,3.541,2159,2.132,2160,2.132,2161,2.132,2162,2.132,2163,2.132,2164,4.541,2165,2.132,2166,3.541,2167,2.132,2168,2.132,2169,2.132,2170,2.132,2171,2.132,2172,2.132,2173,2.132,2174,2.132,2175,2.132,2176,2.132,2177,2.132,2178,1.751,2179,2.132,2180,2.132,2181,4.541,2182,1.903,2183,3.16,2184,1.903,2185,1.903,2186,2.132,2187,2.132,2188,2.132,2189,2.132,2190,2.132,2191,2.132,2192,2.132,2193,1.903,2194,4.718,2195,7.877,2196,5.287,2197,5.287,2198,2.132]],["title/components/HostComponent.html",[57,0.97,189,1.879]],["body/components/HostComponent.html",[0,0.308,3,0.04,4,0.035,5,0.04,14,0.063,15,0.172,18,0.112,19,0.006,21,0.161,24,0.31,26,1.149,27,1.025,32,1.187,33,1.664,34,0.04,38,0.869,39,1.221,48,1.769,50,2.754,52,1.541,53,0.008,54,0.008,55,0.008,56,0.008,57,1.566,58,1.769,59,1.664,60,1.846,61,1.846,62,1.846,66,1.846,67,4.242,68,3.989,70,2.558,72,2.558,74,2.558,83,3.013,84,0.995,86,4.254,87,4.254,97,0.81,98,0.995,99,0.797,106,1.162,107,2.751,108,2.907,109,1.859,137,1.407,140,3.911,145,3.497,162,3.162,164,1.846,165,2.614,166,1.168,167,1.846,168,2.268,169,1.846,170,1.733,171,0.645,172,1.887,173,1.733,174,3.102,175,1.733,176,1.769,177,1.806,178,1.887,179,1.769,180,1.212,181,1.887,182,1.769,183,1.887,184,1.887,185,1.698,186,1.887,187,1.733,188,1.887,189,3.035,190,1.733,191,1.887,192,1.698,193,1.698,194,1.887,195,1.887,196,1.769,197,1.887,198,1.698,199,1.769,200,1.887,201,1.807,202,1.906,203,1.807,204,2.672,205,1.807,206,1.807,207,1.698,208,1.698,209,1.887,210,1.698,211,1.698,212,1.698,213,1.887,214,1.733,215,1.887,216,1.887,217,1.887,239,2.356,245,1.601,251,0.979,252,1.313,267,1.632,268,2.404,269,1.664,277,2.748,338,3.162,369,1.183,386,2.519,504,2.962,509,2.56,528,2.182,572,0.979,692,3.722,714,4.674,775,3.497,784,4.026,889,1.6,916,2.865,1012,2.404,1032,3.722,1069,2.629,1072,4.036,1073,2.843,1074,2.843,1076,2.73,1078,4.81,1080,3.591,1082,3.476,1083,2.843,1104,3.093,1146,3.476,1147,3.476,1180,2.538,1340,2.73,1341,2.73,1346,4.358,1347,2.538,1362,4.026,1401,2.629,1456,4.013,1473,3.722,1548,4.026,1562,3.179,1564,5.15,1565,4.879,1569,1.976,1570,2.38,1612,2.807,1736,6.161,1737,1.931,1964,3.722,1977,3.865,1978,3.865,1979,3.865,2147,2.843,2149,4.026,2199,4.304,2200,4.887,2201,5.824,2202,7.075,2203,6.094,2204,6.478,2205,5.811,2206,4.887,2207,4.887,2208,4.887,2209,5.315,2210,2.973,2211,6.094,2212,4.304,2213,4.304,2214,4.304,2215,4.304,2216,4.304,2217,2.973,2218,2.973,2219,2.73,2220,2.973,2221,2.973,2222,4.21,2223,3.722,2224,6.094,2225,8.432,2226,8.432,2227,7.694,2228,8.432,2229,8.432,2230,3.593,2231,4.21,2232,4.21,2233,4.21,2234,4.21,2235,4.21,2236,4.21,2237,4.21,2238,4.21,2239,2.973,2240,2.973,2241,2.973,2242,2.455,2243,2.843,2244,2.973,2245,2.973,2246,2.973,2247,2.973,2248,2.973,2249,4.21,2250,4.21,2251,2.973,2252,2.973,2253,5.315,2254,2.73,2255,2.843,2256,2.843,2257,2.973,2258,3.593,2259,4.21,2260,4.21,2261,2.973,2262,5.824,2263,2.973,2264,2.538,2265,2.973,2266,2.973,2267,2.973]],["title/classes/HostModuleDTO.html",[0,0.341,400,2.044]],["body/classes/HostModuleDTO.html",[0,0.592,2,0.444,3,0.064,4,0.056,5,0.064,7,0.313,9,0.762,14,0.1,15,0.233,18,0.138,19,0.006,20,0.432,21,0.175,24,0.252,34,0.078,44,0.438,49,1.735,53,0.013,54,0.013,55,0.013,56,0.013,91,1.593,106,1.139,171,0.645,373,2.71,379,0.779,400,3.548,419,0.988,421,1.11,422,1.354,485,1.752,499,3.435,640,1.986,787,4.718,996,2.939,999,3.18,1002,3.811,1602,4.185,2268,6.113,2269,7.928,2270,6.852,2271,6.852,2272,6.852,2273,6.137,2274,6.852,2275,6.852,2276,6.113]],["title/classes/HostNode.html",[0,0.341,1624,3.459]],["body/classes/HostNode.html",[0,0.434,2,0.277,3,0.04,4,0.035,5,0.04,7,0.195,8,2.443,11,0.963,12,0.817,14,0.062,15,0.171,18,0.131,19,0.006,20,0.358,21,0.164,24,0.325,29,2.509,34,0.066,37,0.488,44,0.395,45,1.129,53,0.008,54,0.008,55,0.008,56,0.008,57,1.436,84,1.63,97,1.583,98,1.945,99,1.558,103,1.255,104,1.131,114,0.871,136,2.114,137,1.984,166,1.647,168,2.262,171,0.299,177,1.656,180,0.956,189,2.394,202,2.187,245,1.594,251,1.968,252,2.471,267,2.301,268,1.688,269,1.654,277,2.791,278,3.515,343,1.375,344,2.443,345,2.305,369,1.369,379,0.618,385,3.025,386,2.481,390,1.688,419,0.784,421,0.713,424,1.622,427,1.654,428,2.478,433,0.522,444,1.055,453,1.476,479,2.925,487,0.782,501,0.988,513,1.424,572,1.38,588,1.316,611,0.685,640,1.759,653,2.782,678,2.603,697,1.305,735,2.056,784,4.009,795,2.932,796,2.745,805,2.361,807,1.919,829,2.558,831,2.745,841,2.494,849,3.027,853,1.876,855,3.08,859,2.661,868,2.012,873,3.793,874,3.165,889,1.591,911,2.296,982,2.443,999,2.173,1009,3.115,1014,1.851,1039,2.172,1052,2.172,1117,1.622,1176,3.257,1252,2.012,1279,1.876,1282,3.165,1283,2.925,1391,4.118,1433,2.115,1447,2.614,1456,2.232,1581,3.165,1583,3.165,1611,3.08,1612,3.637,1617,4.663,1624,6.11,1673,3.678,1699,2.172,1715,4.985,1737,2.722,1819,3.257,1945,3.355,1977,3.849,1978,3.849,1979,3.849,2277,3.515,2278,3.899,2279,4.192,2280,4.192,2281,4.192,2282,4.192,2283,4.192,2284,4.192,2285,6.069,2286,3.899,2287,3.355,2288,4.279,2289,4.895,2290,4.243,2291,3.785,2292,4.243,2293,4.243,2294,3.355,2295,3.257,2296,3.355,2297,2.956,2298,4.279,2299,2.956,2300,3.355,2301,4.279,2302,2.956,2303,4.279,2304,2.956,2305,3.355,2306,4.279,2307,3.355,2308,3.355,2309,3.355,2310,3.355,2311,3.257,2312,3.257,2313,3.355,2314,3.355,2315,2.956,2316,4.192,2317,3.899,2318,3.899,2319,4.279,2320,2.956,2321,2.956,2322,2.956,2323,2.956,2324,2.115,2325,2.115,2326,2.366,2327,3.818,2328,3.707,2329,2.366,2330,2.296,2331,2.296,2332,2.296,2333,2.296,2334,2.296,2335,3.818,2336,2.366,2337,2.366,2338,2.366,2339,2.366,2340,2.366,2341,3.355,2342,3.355,2343,2.366,2344,2.366,2345,2.366,2346,2.366,2347,2.366]],["title/classes/HostPortModuleDTO.html",[0,0.341,2273,3.291]],["body/classes/HostPortModuleDTO.html",[0,0.594,2,0.447,3,0.065,4,0.056,5,0.065,7,0.315,9,0.923,14,0.101,15,0.234,18,0.135,19,0.006,20,0.429,21,0.172,24,0.253,34,0.078,44,0.439,49,1.739,53,0.013,54,0.013,55,0.013,56,0.013,91,1.597,106,0.949,171,0.646,373,2.102,379,0.781,400,2.956,419,0.991,421,1.087,422,1.357,485,1.757,499,3.574,640,2.406,787,5.081,996,3.82,999,3.188,1002,2.956,1602,5.069,2268,6.149,2269,6.149,2273,6.153,2276,7.947,2348,6.892,2349,6.892,2350,6.892,2351,6.892]],["title/components/HowToUseComponent.html",[57,0.97,190,1.918]],["body/components/HowToUseComponent.html",[0,0.446,3,0.059,4,0.051,5,0.059,14,0.091,19,0.006,21,0.145,24,0.229,26,1.663,27,1.312,32,1.718,33,2.409,34,0.059,38,1.112,39,1.563,48,2.56,52,2.23,53,0.012,54,0.012,55,0.012,56,0.012,57,1.588,58,2.56,59,2.409,60,2.672,61,2.672,62,2.672,66,2.672,67,4.369,68,4.154,70,3.275,72,3.275,84,1.439,137,2.55,164,2.672,165,3.346,166,1.69,167,2.672,168,2.632,169,2.672,170,2.508,171,0.678,172,2.732,173,2.508,174,3.735,175,2.508,176,2.56,177,1.831,178,2.732,179,2.56,180,0.981,181,2.732,182,2.56,183,2.732,184,2.732,185,2.457,186,2.732,187,2.508,188,2.732,189,2.457,190,3.593,191,2.732,192,2.457,193,2.457,194,2.732,195,2.732,196,2.56,197,2.732,198,2.457,199,2.56,200,2.732,201,2.615,202,2.096,203,2.615,204,3.421,205,2.615,206,2.615,207,2.457,208,2.457,209,2.732,210,2.457,211,2.457,212,2.457,213,2.732,214,2.508,215,2.732,216,2.732,217,2.732,245,2.049,251,1.417,252,2.379,264,6.995,343,2.001,362,5.994,807,2.794,808,5.402,820,5.452,2352,8.517,2353,6.23,2354,8.517,2355,7.801,2356,6.23,2357,6.23]],["title/classes/InterfaceConstraints.html",[0,0.341,963,2.137]],["body/classes/InterfaceConstraints.html",[0,0.691,2,0.269,3,0.039,4,0.034,5,0.039,7,0.19,9,1.008,11,0.954,12,0.364,13,1.463,14,0.061,15,0.226,18,0.117,19,0.006,20,0.435,21,0.149,24,0.153,31,1.515,34,0.091,37,0.67,44,0.459,45,1.212,47,1.736,53,0.008,54,0.008,55,0.008,56,0.008,91,1.739,103,0.859,104,0.876,106,1.103,107,2.013,108,2.127,109,1.812,171,0.29,239,1.606,259,1.863,342,1.039,372,0.999,379,0.521,411,1.843,412,1.146,419,1.079,421,1.136,422,1.473,433,1.129,444,1.089,448,3.248,476,1.447,485,1.898,487,0.658,500,1.288,501,1.202,514,0.845,538,0.665,573,1.039,576,1.749,579,2.019,584,1.822,586,2.08,588,1.807,589,2.014,611,1.212,615,2.167,616,2.167,618,2.167,619,1.574,620,2.815,621,1.407,622,1.908,623,1.544,624,1.544,625,1.515,626,1.487,627,1.487,629,1.382,640,1.722,644,1.544,761,2.682,777,2.763,780,3.38,789,1.606,805,1.852,956,2.665,957,1.907,958,1.907,959,3.184,960,1.863,961,1.863,962,1.863,963,3.111,965,2.665,967,2.665,969,2.665,970,2.665,971,2.665,972,2.665,973,2.665,974,2.548,975,2.605,976,2.605,977,2.605,978,3.32,979,2.605,980,1.907,981,1.907,982,1.672,983,1.781,984,2.605,985,1.863,986,1.863,987,2.665,988,1.863,989,2.665,990,1.863,991,2.605,992,3.476,993,3.184,994,3.184,995,2.727,996,2.975,997,3.396,998,1.821,999,2.127,1000,1.907,1001,1.863,1002,1.781,1003,3.042,1004,1.907,1005,1.707,1006,1.743,1007,1.907,1008,1.863,1009,1.334,1010,3.111,1011,3.396,1012,1.638,1013,1.821,1014,1.812,1015,2.665,1016,2.665,1017,2.665,1018,2.727,1019,2.605,1020,1.863,1021,1.863,1022,1.863,2358,4.153,2359,4.153,2360,4.153,2361,4.153,2362,4.153]],["title/classes/InterfaceNetworksConsumer.html",[0,0.341,989,2.137]],["body/classes/InterfaceNetworksConsumer.html",[0,0.692,2,0.273,3,0.04,4,0.034,5,0.04,7,0.192,9,1.011,11,0.931,12,0.369,13,1.875,14,0.061,15,0.227,18,0.111,19,0.006,20,0.435,21,0.141,24,0.155,31,1.534,34,0.091,37,0.672,44,0.459,45,1.219,47,1.748,53,0.008,54,0.008,55,0.008,56,0.008,91,1.742,103,0.87,104,0.884,106,1.049,109,1.283,171,0.294,239,1.626,259,1.887,342,1.053,372,1.008,379,0.526,411,2.362,412,1.16,419,1.08,421,1.138,422,1.475,433,1.132,444,1.092,448,3.255,476,1.455,485,1.901,487,0.626,500,1.305,501,1.207,514,0.856,538,0.673,573,1.053,576,1.759,579,2.134,584,1.105,586,1.261,588,1.815,589,2.022,611,1.219,615,2.187,616,2.187,618,2.187,619,1.594,620,2.831,621,1.425,622,1.926,623,1.564,624,1.564,625,1.534,626,1.506,627,1.506,629,1.4,640,1.738,644,1.564,761,1.626,777,2.777,780,3.388,789,1.626,805,1.865,956,2.689,957,1.931,958,1.931,959,2.752,960,1.887,961,1.887,962,1.887,963,2.689,965,2.689,967,2.689,969,2.689,970,2.689,971,2.689,972,2.689,973,2.689,974,2.571,975,2.629,976,2.629,977,2.629,978,3.339,979,2.629,980,1.931,981,1.931,982,1.693,983,1.804,984,2.629,985,1.887,986,1.887,987,2.689,988,1.887,989,3.133,990,1.887,991,2.629,992,3.207,993,1.931,994,1.931,995,1.931,996,3.453,997,3.611,998,2.629,999,2.146,1000,1.931,1001,1.887,1002,1.804,1003,3.063,1004,1.931,1005,1.729,1006,1.766,1007,1.931,1008,1.887,1009,1.351,1010,3.133,1011,3.416,1012,1.659,1013,1.844,1014,1.828,1015,2.689,1016,2.689,1017,2.689,1018,2.752,1019,2.629,1020,1.887,1021,1.887,1022,1.887,2363,4.206,2364,4.206,2365,4.206,2366,4.206]],["title/classes/InterfaceNetworksProvider.html",[0,0.341,987,2.137]],["body/classes/InterfaceNetworksProvider.html",[0,0.692,2,0.273,3,0.04,4,0.034,5,0.04,7,0.192,9,1.011,11,0.931,12,0.369,13,1.875,14,0.061,15,0.227,18,0.111,19,0.006,20,0.435,21,0.141,24,0.155,31,1.534,34,0.091,37,0.672,44,0.459,45,1.219,47,1.748,53,0.008,54,0.008,55,0.008,56,0.008,91,1.742,103,0.87,104,0.884,106,1.049,109,1.283,171,0.294,239,1.626,259,2.689,342,1.053,372,1.008,379,0.526,411,2.362,412,1.16,419,1.08,421,1.138,422,1.475,433,1.132,444,1.092,448,3.255,476,1.455,485,1.901,487,0.626,500,1.305,501,1.207,514,0.856,538,0.673,573,1.053,576,1.759,579,2.134,584,1.105,586,1.261,588,1.815,589,2.022,611,1.219,615,2.187,616,2.187,618,2.187,619,1.594,620,2.831,621,1.425,622,1.926,623,1.564,624,1.564,625,1.534,626,1.506,627,1.506,629,1.4,640,1.738,644,1.564,761,1.626,777,2.777,780,3.388,789,1.626,805,1.865,956,2.689,957,1.931,958,1.931,959,2.752,960,1.887,961,1.887,962,1.887,963,2.689,965,2.689,967,2.689,969,2.689,970,2.689,971,2.689,972,2.689,973,2.689,974,2.571,975,2.629,976,2.629,977,2.629,978,3.339,979,2.629,980,1.931,981,1.931,982,1.693,983,1.804,984,2.629,985,1.887,986,1.887,987,3.133,988,1.887,989,2.689,990,1.887,991,2.629,992,3.207,993,1.931,994,1.931,995,1.931,996,3.453,997,3.611,998,1.844,999,2.146,1000,1.931,1001,1.887,1002,1.804,1003,3.063,1004,1.931,1005,1.729,1006,1.766,1007,1.931,1008,1.887,1009,1.351,1010,3.133,1011,3.416,1012,1.659,1013,1.844,1014,1.828,1015,2.689,1016,2.689,1017,2.689,1018,2.752,1019,2.629,1020,1.887,1021,1.887,1022,1.887,2367,4.206,2368,4.206,2369,4.206,2370,4.206]],["title/components/MirroringModuleInstanceComponent.html",[57,0.97,192,1.879]],["body/components/MirroringModuleInstanceComponent.html",[0,0.298,3,0.039,4,0.034,5,0.039,14,0.061,15,0.168,18,0.111,19,0.006,21,0.17,24,0.306,26,1.113,27,1.001,32,1.15,33,1.611,34,0.039,38,0.849,39,1.194,48,1.713,50,2.714,52,1.492,53,0.008,54,0.008,55,0.008,56,0.008,57,1.544,58,1.713,59,1.611,60,1.788,61,1.788,62,1.788,66,1.788,67,4.23,68,3.973,70,2.5,72,2.5,74,2.5,83,2.944,84,0.963,86,4.192,87,4.192,97,0.784,98,0.963,99,0.771,106,1.149,107,3.029,108,3.2,137,1.362,140,3.842,145,3.436,162,3.133,164,1.788,165,2.555,166,1.131,167,1.788,168,2.235,169,1.788,170,1.678,171,0.641,172,1.827,173,1.678,174,3.048,175,1.678,176,1.713,177,1.78,178,1.827,179,1.713,180,1.194,181,1.827,182,1.713,183,1.827,184,1.827,185,1.644,186,1.827,187,1.678,188,1.827,189,1.644,190,1.678,191,1.827,192,2.991,193,1.644,194,1.827,195,1.827,196,1.713,197,1.827,198,1.644,199,1.713,200,1.827,201,1.749,202,1.883,203,1.749,204,2.612,205,1.749,206,1.749,207,1.644,208,1.644,209,1.827,210,1.644,211,1.644,212,1.644,213,1.827,214,1.678,215,1.827,216,1.827,217,1.827,239,2.303,245,1.564,251,0.948,252,1.271,267,1.58,268,2.349,269,1.611,277,2.876,338,3.609,369,1.156,386,2.599,480,1.59,504,2.926,509,2.523,528,2.132,538,0.954,572,0.948,692,3.638,714,4.591,735,2.826,775,3.436,889,1.549,916,2.8,1012,2.349,1032,3.638,1069,2.545,1072,3.965,1073,2.753,1074,2.753,1076,2.643,1078,4.759,1080,3.527,1082,3.398,1083,2.753,1104,3.023,1146,3.398,1147,3.398,1180,2.457,1340,2.643,1341,2.643,1346,4.304,1347,2.457,1362,3.934,1401,2.545,1461,4.069,1473,3.638,1548,3.934,1562,3.106,1564,5.087,1565,4.809,1569,1.913,1570,2.304,1612,2.766,1736,6.124,1737,1.869,1823,5.046,1964,3.638,2147,2.753,2149,3.934,2200,4.801,2201,5.763,2204,5.826,2206,4.801,2207,4.801,2208,4.801,2209,5.238,2210,2.879,2217,2.879,2218,2.879,2219,2.643,2220,2.879,2221,2.879,2222,4.114,2223,3.638,2230,3.512,2231,4.114,2232,4.114,2233,4.114,2234,4.114,2235,4.114,2236,4.114,2237,4.114,2238,4.114,2239,2.879,2240,2.879,2241,2.879,2242,2.377,2243,2.753,2244,2.879,2245,2.879,2246,2.879,2247,2.879,2248,2.879,2249,4.114,2250,4.114,2251,2.879,2252,2.879,2253,5.238,2254,2.643,2255,2.753,2256,2.753,2257,2.879,2258,3.512,2259,4.114,2260,4.114,2261,2.879,2262,5.763,2263,2.879,2264,2.457,2265,2.879,2266,2.879,2267,2.879,2371,4.167,2372,6.95,2373,5.956,2374,6.95,2375,5.826,2376,5.708,2377,5.826,2378,5.956,2379,4.167,2380,6.95,2381,4.167,2382,4.167,2383,4.167,2384,4.167,2385,4.167,2386,4.167,2387,4.167,2388,4.167,2389,3.423,2390,3.423,2391,3.423,2392,5.956,2393,6.852,2394,6.41,2395,4.892,2396,4.892,2397,6.228,2398,6.228,2399,6.228]],["title/classes/MirroringModuleInstanceNode.html",[0,0.341,1594,3.147]],["body/classes/MirroringModuleInstanceNode.html",[0,0.436,2,0.279,3,0.04,4,0.035,5,0.04,7,0.197,8,2.454,11,0.964,12,0.818,14,0.063,15,0.172,18,0.131,19,0.006,21,0.165,24,0.325,29,2.516,34,0.067,37,0.49,38,0.614,44,0.396,45,1.133,53,0.008,54,0.008,55,0.008,56,0.008,57,1.441,84,1.635,97,1.586,98,1.949,99,1.561,103,1.261,104,1.134,114,0.877,136,2.122,137,1.993,166,1.655,168,2.269,171,0.301,177,1.662,180,0.96,192,2.405,202,2.19,245,1.601,251,1.972,252,2.477,267,2.311,268,1.699,269,1.665,277,2.795,343,1.384,344,2.454,345,2.314,369,1.374,372,0.724,386,2.485,392,3.533,414,1.808,415,1.808,416,1.808,419,0.787,421,0.717,424,1.633,427,1.665,428,2.487,433,0.863,444,1.057,453,1.486,480,1.15,487,0.783,501,0.992,513,1.433,538,0.69,572,1.387,588,1.322,590,1.36,591,1.633,611,0.69,640,1.768,653,2.792,678,2.615,697,1.314,735,2.752,795,2.938,796,2.752,805,2.365,807,1.932,829,2.561,831,2.752,841,2.506,849,3.036,853,1.889,855,3.094,859,2.674,868,2.025,873,3.805,874,3.18,889,1.601,911,2.312,982,2.454,1009,3.092,1014,1.859,1039,2.186,1052,2.186,1117,1.633,1176,3.272,1252,2.025,1279,1.889,1282,3.18,1283,2.938,1391,4.13,1433,2.129,1447,2.631,1461,2.312,1466,4.427,1581,3.18,1583,3.18,1584,4.685,1594,5.571,1611,3.094,1612,3.639,1673,3.692,1699,2.186,1737,2.735,1819,3.272,1945,3.371,2278,3.913,2279,4.212,2280,4.212,2281,4.212,2282,4.212,2283,4.212,2284,4.212,2286,3.913,2287,3.371,2289,4.902,2290,4.255,2291,3.798,2292,4.255,2293,4.255,2294,3.371,2295,3.272,2296,3.371,2297,2.975,2299,2.975,2300,3.371,2302,2.975,2304,2.975,2305,3.371,2307,3.371,2308,3.371,2309,3.371,2310,3.371,2311,3.272,2312,3.272,2313,3.371,2314,3.371,2315,2.975,2316,4.212,2317,3.913,2318,3.913,2320,2.975,2321,2.975,2322,2.975,2323,2.975,2324,2.129,2325,2.129,2326,2.381,2329,2.381,2330,3.798,2331,2.312,2332,2.312,2333,2.312,2334,2.312,2336,2.381,2337,2.381,2338,2.381,2339,2.381,2340,2.381,2341,3.371,2342,3.371,2343,2.381,2344,2.381,2345,2.381,2346,2.381,2347,2.381,2400,3.538,2401,6.097,2402,4.307,2403,4.307,2404,4.307,2405,4.307,2406,4.307,2407,4.307,2408,3.843,2409,5.44,2410,3.843]],["title/classes/ModalButton.html",[0,0.341,2411,3.459]],["body/classes/ModalButton.html",[0,0.584,2,0.435,3,0.063,4,0.055,5,0.063,7,0.307,11,0.746,12,0.716,14,0.098,15,0.23,18,0.139,19,0.006,20,0.427,21,0.164,24,0.247,25,4.66,26,1.792,27,1.373,28,4.434,29,2.67,31,2.448,32,1.851,34,0.077,37,0.708,44,0.373,49,1.656,50,3.152,52,2.402,53,0.012,54,0.012,55,0.012,56,0.012,83,3.318,88,5.93,100,4.434,193,3.614,487,0.772,514,1.663,599,2.818,611,1.41,841,3.357,1087,3.501,1113,4.26,1117,3.096,1383,6.276,1805,6.276,2112,5.157,2113,5.157,2230,4.816,2411,6.393,2412,5.988,2413,7.288,2414,7.288,2415,6.711,2416,6.711,2417,6.709,2418,6.709,2419,7.288,2420,7.288,2421,6.711,2422,5.988,2423,5.512,2424,5.988]],["title/components/ModalComponent.html",[57,0.97,193,1.879]],["body/components/ModalComponent.html",[0,0.312,3,0.041,4,0.035,5,0.041,7,0.199,8,3.286,11,0.861,14,0.064,15,0.173,18,0.127,19,0.006,21,0.172,24,0.262,26,1.643,27,1.035,29,2.012,32,2.252,33,1.687,34,0.041,37,0.573,38,0.877,39,1.233,41,2.756,44,0.431,47,2.178,48,1.794,52,1.562,53,0.008,54,0.008,55,0.008,56,0.008,57,1.253,58,1.794,59,1.687,60,1.872,61,1.872,62,1.872,66,1.872,67,4.263,68,4.021,70,2.583,72,2.583,74,2.992,78,6.908,84,1.009,88,4.468,94,1.698,95,6.943,97,1.158,98,1.422,99,1.139,100,5.114,102,3.956,104,1.31,106,1.199,107,2.415,109,1.877,114,1.81,115,2.25,136,1.309,137,2.012,164,1.872,165,2.64,166,1.184,167,1.872,168,2.282,169,1.872,170,1.757,171,0.631,172,1.914,173,1.757,174,3.126,175,1.757,176,1.794,177,1.445,178,1.914,179,1.794,180,1.459,181,1.914,182,1.794,183,1.914,184,1.914,185,1.721,186,1.914,187,1.757,188,1.914,189,1.721,190,1.757,191,1.914,192,1.721,193,3.341,194,1.914,195,1.914,196,1.794,197,1.914,198,1.721,199,1.794,200,1.914,201,1.832,202,1.817,203,1.832,204,2.699,205,1.832,206,1.832,207,1.721,208,1.721,209,1.914,210,1.721,211,1.721,212,1.721,213,1.914,214,1.757,215,1.914,216,1.914,217,1.914,245,1.616,251,1.761,252,2.361,332,2.288,338,2.529,444,0.869,487,0.753,501,0.862,526,2.583,529,2.699,572,2.126,611,1.447,697,1.331,735,2.085,795,2.085,796,2.085,829,2.375,830,3.826,831,2.085,841,2.93,1056,5.055,1067,4.657,1134,3.903,1159,5.871,1167,4.521,1200,4.729,1227,4.468,1245,4.729,1274,5.948,1303,5.055,1383,4.729,1387,5.926,1388,5.621,1454,3.511,2411,5.621,2425,4.365,2426,4.729,2427,7.129,2428,6.154,2429,7.558,2430,7.129,2431,7.742,2432,5.976,2433,8.163,2434,6.361,2435,6.154,2436,4.729,2437,4.365,2438,6.154,2439,6.361,2440,6.361,2441,6.154,2442,4.365,2443,4.365,2444,4.365,2445,6.154,2446,6.154,2447,4.365,2448,4.565,2449,4.365,2450,4.365,2451,6.154,2452,3.894,2453,4.365,2454,3.894,2455,4.365,2456,3.894,2457,3.894,2458,5.491,2459,4.365,2460,4.365,2461,4.365,2462,6.154,2463,4.365,2464,6.154,2465,6.154,2466,6.154]],["title/classes/ModalItem.html",[0,0.341,100,3.147]],["body/classes/ModalItem.html",[0,0.581,2,0.431,3,0.063,4,0.054,5,0.063,7,0.304,11,0.904,12,0.583,14,0.097,15,0.229,18,0.142,19,0.006,20,0.43,21,0.174,24,0.244,25,5.003,26,1.776,27,1.118,28,5.366,29,2.174,31,2.963,32,2.241,34,0.076,37,0.534,44,0.304,49,1.251,50,2.381,52,3.139,53,0.012,54,0.012,55,0.012,56,0.012,83,4.335,88,4.829,99,1.764,100,5.366,107,2.253,108,2.381,193,3.695,487,0.75,514,1.354,599,2.294,611,1.404,841,2.733,1087,4.237,1113,3.469,1117,2.521,1383,5.11,1805,5.11,2112,6.738,2113,6.738,2230,3.922,2411,6.367,2412,5.934,2413,5.934,2414,5.934,2417,5.463,2418,5.463,2419,5.934,2420,5.934,2422,7.248,2423,7.203,2424,7.248,2467,6.651,2468,6.651,2469,6.651,2470,6.651,2471,6.651]],["title/injectables/ModalService.html",[89,3.913,649,1.918]],["body/injectables/ModalService.html",[0,0.312,3,0.041,4,0.035,5,0.041,7,0.199,9,0.86,11,0.941,12,0.742,14,0.064,15,0.173,18,0.124,19,0.006,20,0.374,21,0.165,24,0.262,26,1.163,34,0.041,37,0.655,44,0.438,45,1.355,47,2.339,49,1.156,50,2.2,53,0.008,54,0.008,55,0.008,56,0.008,59,2.99,64,5.483,69,2.21,75,6.353,76,5.728,83,2.153,84,1.006,89,5.047,94,2.45,95,7.439,97,1.339,98,1.645,99,1.318,100,4.704,102,3.553,103,1.6,104,1.349,107,3.06,108,2.549,109,1.874,111,6.683,114,1.809,115,2.89,130,2.877,136,2.135,137,2.009,166,2.099,245,1.614,251,1.925,252,1.874,332,3.147,345,2.009,376,1.677,424,2.329,430,3.178,451,2.695,487,0.752,512,1.91,514,1.575,519,2.171,528,2.2,597,2.285,649,2.473,651,2.337,674,2.337,697,2.359,780,2.241,798,4.721,805,1.64,823,3.113,829,2.491,831,2.082,839,4.461,861,4.245,873,3.038,895,4.724,935,5.483,1014,2.359,1067,3.505,1137,4.721,1138,5.483,1141,4.721,1167,3.897,1226,6.901,1252,2.889,1263,6.352,1279,2.695,1298,4.276,1317,5.047,1365,5.942,1382,5.047,1508,5.047,1607,4.059,1666,5.047,1818,5.368,1922,4.721,2094,5.483,2102,3.886,2112,3.346,2113,3.346,2114,3.886,2289,3.298,2295,3.298,2311,3.298,2411,5.615,2417,3.577,2418,3.577,2423,7.144,2432,4.981,2448,4.56,2472,4.355,2473,6.145,2474,6.145,2475,6.145,2476,6.145,2477,5.047,2478,6.145,2479,6.145,2480,6.145,2481,6.145,2482,6.145,2483,6.145,2484,6.145,2485,6.145,2486,6.145,2487,6.145,2488,6.145,2489,6.145,2490,6.145,2491,6.145,2492,7.734,2493,6.145,2494,6.145,2495,6.145,2496,6.145,2497,4.355,2498,6.145,2499,4.355,2500,6.145,2501,6.145,2502,4.355,2503,5.047,2504,5.047,2505,6.145,2506,6.145,2507,6.145,2508,5.483,2509,6.145,2510,4.355,2511,6.145,2512,9.155,2513,6.145,2514,4.355,2515,7.734,2516,4.355,2517,7.734,2518,4.355,2519,4.355,2520,7.12,2521,4.355,2522,4.355,2523,4.355,2524,4.355,2525,4.355,2526,4.355,2527,4.355,2528,4.355,2529,4.355,2530,4.355,2531,4.355,2532,4.355,2533,4.355,2534,4.355,2535,4.355,2536,4.355,2537,4.355,2538,4.355,2539,4.355]],["title/classes/ModuleApplication.html",[0,0.341,434,2]],["body/classes/ModuleApplication.html",[0,0.636,2,0.247,3,0.036,4,0.031,5,0.036,7,0.174,9,0.734,11,0.929,12,0.489,14,0.056,15,0.157,18,0.145,19,0.006,20,0.436,21,0.185,24,0.326,34,0.087,37,0.671,38,0.941,39,1.323,44,0.354,46,2.157,49,1.049,53,0.007,54,0.007,55,0.007,56,0.007,94,1.05,99,1.346,103,1.366,106,0.524,107,1.29,108,1.363,116,2.502,127,1.761,162,2.035,171,0.461,177,1.707,180,0.879,202,1.55,219,1.879,277,2.509,286,3.594,342,1.652,343,2.486,345,1.245,367,1.932,368,1.986,369,1.725,370,1.856,372,0.938,373,1.701,375,4.518,376,2.139,379,0.813,382,1.591,385,2.393,386,2.231,387,1.835,388,2.393,389,1.835,390,2.2,391,1.835,392,3.031,393,1.986,394,3.031,395,1.986,396,3.031,397,1.986,398,2.623,399,1.882,400,3.32,401,1.79,402,2.401,403,1.161,404,2.936,405,1.824,406,1.564,407,2.698,408,1.856,409,1.748,410,1.882,411,2.255,412,2.135,413,3.73,414,3.249,415,3.249,416,3.249,417,4.393,418,4.13,419,0.734,420,2.832,421,0.776,422,1.006,423,3.351,424,2.503,425,3.444,426,3.444,427,2.553,428,2.32,429,3.444,430,2.714,431,3.338,432,2.91,433,0.68,434,2.342,435,1.986,436,1.986,437,1.708,438,1.986,439,2.91,440,2.502,441,2.91,442,1.701,443,2.446,444,0.805,445,2.772,446,3.792,447,1.986,448,1.313,449,1.986,450,1.79,451,1.67,452,1.67,453,1.313,454,1.633,455,1.986,456,1.986,457,1.79,458,2.689,459,1.882,460,1.748,461,0.813,462,2.623,463,3.639,464,1.835,465,1.835,466,2.831,467,3.69,468,3.504,469,3.118,470,2.91,471,3.444,472,3.351,473,2.962,474,1.835,475,3.69,476,0.728,477,1.932,478,1.79,479,1.835,516,2.832,521,1.633,531,1.633,538,0.893,541,1.633,543,1.598,551,2.035,552,2.035,553,2.035,554,2.035,555,2.035,556,2.035,557,2.035,558,2.035,559,2.035,563,2.446,564,1.617,565,2.446,566,2.446,567,2.446,568,2.446,569,2.446,570,2.446,571,2.446,572,1.269,573,1.396,574,2.446,575,1.731,743,3.052,807,1.708,2540,3.807,2541,3.807,2542,3.807,2543,3.807,2544,3.807,2545,3.807,2546,3.807,2547,3.807,2548,3.807,2549,3.807,2550,3.807,2551,3.807,2552,3.807,2553,3.807,2554,3.807,2555,3.807,2556,3.807,2557,3.807,2558,3.807,2559,3.807,2560,3.807,2561,3.807,2562,3.127,2563,3.127,2564,3.127,2565,3.127,2566,3.127,2567,3.127,2568,3.127,2569,3.127,2570,3.127,2571,3.127,2572,3.127,2573,3.127,2574,3.127,2575,3.127,2576,3.127]],["title/classes/ModuleClassificationDTO.html",[0,0.341,521,2.044]],["body/classes/ModuleClassificationDTO.html",[0,0.685,2,0.243,3,0.035,4,0.03,5,0.035,7,0.171,9,0.949,12,0.573,13,1.357,14,0.055,15,0.203,18,0.124,19,0.006,20,0.452,21,0.154,24,0.24,27,0.63,30,1.572,34,0.09,37,0.7,38,1.028,39,0.75,44,0.458,45,1.481,49,1.637,53,0.007,54,0.007,55,0.007,56,0.007,91,1.724,96,1.539,97,0.704,104,0.964,106,1.059,114,0.762,115,1.182,171,0.646,180,0.59,219,0.968,352,1.269,369,1.07,370,1.246,371,1.642,372,1.397,373,2.452,376,1.195,379,0.849,382,1.864,402,1.162,403,1.994,404,2.238,405,2.138,406,1.05,407,1.571,408,1.834,419,1.069,421,1.13,422,1.465,433,1.118,442,1.142,444,0.98,461,1.54,476,1.25,480,1.471,484,1.68,485,1.889,486,2.472,487,0.76,488,2.472,489,2.472,496,2.313,497,2.313,498,1.68,499,2.528,500,1.162,501,0.525,502,1.68,503,1.606,504,1.366,505,1.68,506,1.68,507,1.68,508,1.68,509,1.246,510,1.606,511,1.68,512,1.642,513,1.246,514,0.762,515,1.448,516,3.093,517,1.68,518,1.68,519,1.142,520,2.472,521,2.805,522,2.933,523,3.235,524,2.933,525,2.933,526,1.572,527,3.645,528,1.34,529,1.642,530,1.68,531,2.364,532,1.68,533,1.68,534,1.68,535,1.68,536,1.68,537,1.68,538,1.155,539,1.68,540,1.606,541,2.364,542,1.419,543,2.313,544,1.68,545,1.68,546,2.417,547,1.68,548,1.68,549,2.364,550,1.68,551,1.366,552,1.366,553,1.366,554,1.366,555,1.366,556,1.366,557,1.366,558,1.366,559,1.366,560,1.68,561,1.68,562,1.68,563,1.642,564,1.598,565,1.642,566,1.642,567,1.642,568,1.642,569,1.642,570,1.642,571,1.642,572,0.852,573,1.379,574,1.642,575,1.71,576,0.865,577,1.68,578,1.68,579,0.908,580,1.68,581,1.572,582,1.606,583,2.218,584,0.984,585,1.392,586,1.123,587,2.472,588,1.195,589,1.805,590,1.182,591,1.419,592,2.417,593,1.366,594,1.642,595,2.933,596,1.642,597,1.392,598,2.868,599,2.256,600,1.606,601,1.68,602,1.572,603,1.419,604,1.68,605,1.419,2577,3.745,2578,3.745,2579,3.745,2580,3.745,2581,3.745,2582,3.745,2583,3.745]],["title/classes/ModuleConstraints.html",[0,0.341,965,2.137]],["body/classes/ModuleConstraints.html",[0,0.694,2,0.279,3,0.04,4,0.035,5,0.04,7,0.197,9,1.002,11,0.938,12,0.378,13,1.502,15,0.199,19,0.006,20,0.433,24,0.158,31,1.571,34,0.091,37,0.678,44,0.46,45,1.232,47,1.771,53,0.008,54,0.008,55,0.008,56,0.008,91,1.746,103,0.891,104,0.899,106,1.06,109,1.314,171,0.301,239,1.665,259,1.932,342,1.078,372,1.025,379,0.534,411,1.892,412,1.188,419,1.083,421,1.141,422,1.479,433,1.137,444,1.098,448,3.267,476,1.471,485,1.907,487,0.632,500,1.336,501,1.215,514,0.877,538,0.69,573,1.078,576,1.635,579,2.044,584,1.131,586,1.291,588,1.829,589,2.036,611,1.232,615,2.224,616,2.224,618,2.224,619,1.633,620,2.862,621,1.459,622,1.958,623,1.601,624,1.601,625,1.571,626,1.542,627,1.542,629,1.433,640,1.768,644,1.601,761,1.665,777,2.802,780,3.402,789,1.665,805,1.889,956,2.735,957,1.978,958,1.978,959,2.799,960,1.932,961,1.932,962,1.932,963,2.735,965,3.175,967,2.735,969,2.735,970,2.735,971,2.735,972,2.735,973,2.735,974,2.615,975,2.674,976,2.674,977,2.674,978,3.375,979,2.674,980,1.978,981,1.978,982,1.734,983,1.848,984,2.674,985,1.932,986,1.932,987,2.735,988,1.932,989,2.735,990,1.932,991,2.674,992,3.533,993,1.978,994,1.978,995,1.978,996,3.036,997,3.452,998,1.889,999,2.183,1000,1.978,1001,1.932,1002,1.848,1003,3.104,1004,1.978,1005,1.77,1006,1.808,1007,1.978,1008,1.932,1009,1.384,1010,3.175,1011,3.452,1012,1.699,1013,1.889,1014,1.859,1015,2.735,1016,2.735,1017,2.735,1018,2.799,1019,2.674,1020,1.932,1021,1.932,1022,1.932]],["title/classes/ModuleDTO.html",[0,0.341,407,1.358]],["body/classes/ModuleDTO.html",[0,0.673,2,0.214,3,0.031,4,0.027,5,0.031,7,0.151,9,0.913,12,0.593,13,1.234,14,0.048,15,0.191,18,0.142,19,0.006,20,0.451,21,0.18,24,0.223,27,0.554,30,1.384,34,0.089,37,0.726,38,0.965,39,0.661,44,0.454,45,1.447,49,1.582,53,0.006,54,0.006,55,0.006,56,0.006,91,1.696,96,1.355,97,0.62,99,0.928,104,0.739,106,1.056,114,0.671,115,1.041,171,0.642,180,0.955,219,0.852,352,1.117,369,1.177,370,1.097,371,1.446,372,1.414,373,2.338,375,4.186,376,2.02,379,0.839,382,1.728,402,1.023,403,1.848,404,2.921,405,1.981,406,0.925,407,1.728,408,1.667,419,1.052,421,1.112,422,1.441,433,1.09,442,1.006,444,0.887,461,1.445,476,1.158,480,1.338,484,1.479,485,1.857,486,2.248,487,0.742,488,2.248,489,2.718,496,2.103,497,2.103,498,1.479,499,2.343,500,1.023,501,0.462,502,1.479,503,1.414,504,1.203,505,1.479,506,1.479,507,1.479,508,1.479,509,1.097,510,1.414,511,1.479,512,1.446,513,1.097,514,0.671,515,1.275,516,3.418,517,1.479,518,1.479,519,1.006,520,1.479,521,2.6,522,1.479,523,2.248,524,1.479,525,1.479,526,1.384,527,3.494,528,1.18,529,1.446,530,1.479,531,2.6,532,1.479,533,1.479,534,1.479,535,1.479,536,1.479,537,1.479,538,1.228,539,1.479,540,1.414,541,2.6,542,1.25,543,2.544,544,1.479,545,1.479,546,2.197,547,1.479,548,1.479,549,2.149,550,1.479,551,2.211,552,2.211,553,2.211,554,2.211,555,2.211,556,2.211,557,2.211,558,2.211,559,2.211,560,2.248,561,2.248,562,2.248,563,2.658,564,1.963,565,2.658,566,2.658,567,2.658,568,2.658,569,2.658,570,2.658,571,2.658,572,1.378,573,1.694,574,2.658,575,2.1,576,0.762,577,1.479,578,1.479,579,0.799,580,1.479,581,1.384,582,1.414,583,2.017,584,0.866,585,1.226,586,0.989,587,2.248,588,1.087,589,1.709,590,1.041,591,1.25,592,2.197,593,1.203,594,1.446,595,2.718,596,1.446,597,1.226,598,2.658,599,2.091,600,1.414,601,1.479,602,1.384,603,1.25,604,1.479,605,1.25,743,2.872,2562,2.708,2563,2.708,2564,2.708,2565,2.708,2566,2.708,2567,2.708,2568,2.708,2569,2.708,2570,2.708,2571,2.708,2572,2.708,2573,2.708,2574,2.708,2575,2.708,2576,2.708,2584,3.297,2585,3.297,2586,3.297,2587,3.297,2588,3.297,2589,3.297,2590,3.297,2591,3.297,2592,3.297,2593,3.297,2594,3.297,2595,3.297,2596,3.297,2597,3.297]],["title/classes/ModuleExport.html",[0,0.341,974,2.044]],["body/classes/ModuleExport.html",[0,0.69,2,0.267,3,0.039,4,0.033,5,0.039,7,0.188,9,1.006,11,0.974,12,0.518,13,1.454,14,0.06,15,0.225,18,0.125,19,0.006,20,0.433,21,0.159,24,0.151,31,1.502,34,0.091,37,0.688,44,0.458,45,1.207,47,1.728,53,0.008,54,0.008,55,0.008,56,0.008,91,1.737,103,1.221,104,0.87,106,1.039,109,1.256,171,0.288,239,1.592,259,1.847,342,1.728,372,1.268,379,0.518,411,1.832,412,1.136,419,1.078,421,1.13,422,1.465,433,1.127,444,1.067,448,3.244,476,1.441,485,1.888,487,0.62,500,1.278,501,1.199,514,0.838,538,0.659,573,1.031,576,1.595,579,2.014,584,1.082,586,1.235,588,1.802,589,2.093,611,1.207,615,2.154,616,2.154,618,2.518,619,1.561,620,2.968,621,2.001,622,2.218,623,2.196,624,2.196,625,2.154,626,2.114,627,2.114,629,2.297,640,1.712,644,1.531,743,1.624,761,1.592,777,2.754,780,3.453,789,1.592,805,1.843,956,2.649,957,1.891,958,1.891,959,2.711,960,1.847,961,1.847,962,1.847,963,2.649,965,2.649,967,2.649,969,2.649,970,2.649,971,2.649,972,2.649,973,2.649,974,2.961,975,2.589,976,2.589,977,2.589,978,3.307,979,2.589,980,3.17,981,3.17,982,2.779,983,1.766,984,2.589,985,1.847,986,1.847,987,2.649,988,1.847,989,2.649,990,1.847,991,2.589,992,3.17,993,1.891,994,1.891,995,1.891,996,2.961,997,3.383,998,1.806,999,2.114,1000,1.891,1001,1.847,1002,1.766,1003,3.027,1004,1.891,1005,1.692,1006,1.729,1007,1.891,1008,1.847,1009,1.323,1010,3.097,1011,3.383,1012,1.624,1013,1.806,1014,1.801,1015,2.649,1016,2.649,1017,2.649,1018,2.711,1019,2.589,1020,1.847,1021,1.847,1022,1.847,2598,4.118,2599,4.118,2600,4.118,2601,4.118,2602,4.118,2603,4.118,2604,4.118]],["title/classes/ModuleInstance.html",[0,0.341,473,2.137]],["body/classes/ModuleInstance.html",[0,0.67,2,0.317,3,0.046,4,0.04,5,0.046,9,0.74,11,0.976,12,0.584,14,0.071,15,0.187,18,0.124,19,0.006,20,0.428,21,0.158,24,0.344,34,0.091,37,0.535,38,0.949,39,1.517,44,0.371,46,1.89,53,0.009,54,0.009,55,0.009,56,0.009,94,1.348,103,1.377,116,2.986,127,1.543,162,2.429,171,0.341,177,1.908,202,1.996,219,1.957,277,2.722,286,3.742,342,1.223,343,2.731,345,1.598,367,2.481,368,2.55,369,1.819,370,2.215,375,3.057,376,1.642,379,0.812,382,1.898,385,2.856,386,2.42,387,2.356,388,2.856,389,2.356,390,2.626,391,2.356,392,3.732,393,2.55,394,3.732,395,2.55,396,3.732,397,2.55,398,3.13,399,2.417,400,3.486,401,2.299,402,2.522,403,2.03,404,2.065,405,2.176,406,2.385,407,1.898,408,2.215,409,2.244,410,2.417,411,2.522,412,2.088,413,3.648,414,3.178,415,3.178,416,3.178,417,4.632,418,4.438,419,0.74,420,2.856,421,0.783,422,1.015,423,3.379,424,2.524,425,3.472,426,3.472,427,2.574,428,2.339,429,3.472,430,2.736,431,3.476,432,2.55,433,0.596,434,2.052,435,2.55,436,2.55,437,2.193,438,2.55,439,3.472,440,2.986,441,3.472,442,2.03,443,2.919,444,0.923,445,3.178,446,3.472,447,2.55,448,1.687,449,2.55,450,2.299,451,2.144,452,2.144,453,1.687,454,2.097,455,2.55,456,2.55,457,2.299,458,3.208,459,2.417,460,2.244,461,1.044,462,3.56,463,3.999,464,2.356,465,2.356,466,3.379,467,4.125,468,3.917,469,3.486,470,3.472,471,3.949,472,4.125,473,3.646,474,3.648,475,4.125,476,1.447,477,2.481,478,2.299,479,2.356,807,2.193,2605,4.889,2606,4.889,2607,4.889,2608,4.889,2609,4.889]],["title/classes/ModuleInstanceDTO.html",[0,0.341,406,1.336]],["body/classes/ModuleInstanceDTO.html",[0,0.687,2,0.248,3,0.036,4,0.031,5,0.036,7,0.175,9,0.973,12,0.58,13,1.378,14,0.056,15,0.205,18,0.097,19,0.006,20,0.452,21,0.104,24,0.243,27,0.643,30,1.605,34,0.09,37,0.703,38,1.038,39,0.766,44,0.458,45,1.498,49,1.574,53,0.007,54,0.007,55,0.007,56,0.007,91,1.728,96,1.572,97,0.719,104,0.825,106,1.068,114,0.779,115,1.207,171,0.649,180,0.602,219,0.988,352,1.296,369,1.087,370,1.273,371,1.677,372,1.407,373,2.222,376,1.214,379,0.848,382,1.887,402,1.187,403,2.222,404,2.26,405,2.164,406,1.57,407,1.596,408,1.863,419,1.072,421,1.133,422,1.469,433,1.111,442,1.166,444,0.945,461,1.655,476,1.482,480,1.494,484,1.716,485,1.894,486,2.511,487,0.769,488,2.511,489,2.511,496,2.349,497,2.349,498,1.716,499,2.559,500,1.187,501,0.536,502,1.716,503,1.64,504,1.395,505,1.716,506,1.716,507,1.716,508,1.716,509,1.273,510,1.64,511,1.716,512,1.677,513,1.273,514,0.779,515,1.479,516,3.125,517,1.716,518,1.716,519,1.166,520,1.716,521,2.401,522,1.716,523,2.511,524,1.716,525,1.716,526,1.605,527,3.669,528,1.369,529,1.677,530,1.716,531,2.401,532,1.716,533,1.716,534,1.716,535,1.716,536,1.716,537,1.716,538,1.166,539,1.716,540,1.64,541,2.401,542,1.45,543,2.349,544,1.716,545,1.716,546,2.454,547,1.716,548,1.716,549,2.401,550,1.716,551,1.395,552,1.395,553,1.395,554,1.395,555,1.395,556,1.395,557,1.395,558,1.395,559,1.395,560,1.716,561,1.716,562,1.716,563,1.677,564,1.623,565,1.677,566,1.677,567,1.677,568,1.677,569,1.677,570,1.677,571,1.677,572,0.87,573,1.401,574,1.677,575,1.737,576,0.884,577,1.716,578,1.716,579,0.927,580,1.716,581,1.605,582,1.64,583,2.253,584,1.005,585,1.422,586,1.147,587,2.511,588,1.214,589,1.902,590,1.207,591,1.45,592,2.454,593,1.395,594,1.677,595,3.268,596,1.677,597,1.422,598,3.195,599,2.513,600,1.64,601,1.716,602,1.605,603,1.45,604,1.716,605,1.45,2610,3.825,2611,3.825]],["title/classes/ModuleInstancePropertiesDTO.html",[0,0.341,403,1.453]],["body/classes/ModuleInstancePropertiesDTO.html",[0,0.685,2,0.243,3,0.035,4,0.03,5,0.035,7,0.171,9,0.968,12,0.573,13,1.357,14,0.055,15,0.216,18,0.121,19,0.006,20,0.452,21,0.149,24,0.24,27,0.63,30,1.572,34,0.09,37,0.668,38,1.146,39,0.75,44,0.458,45,1.493,49,1.563,53,0.007,54,0.007,55,0.007,56,0.007,91,1.724,96,1.539,97,0.704,104,0.812,106,1.059,114,0.762,115,1.182,171,0.646,180,0.59,219,0.968,352,1.269,369,1.07,370,1.246,371,1.642,372,1.463,373,2.2,376,1.195,379,0.851,382,1.864,402,1.162,403,2.2,404,2.238,405,2.138,406,1.05,407,1.571,408,1.834,419,1.069,421,1.13,422,1.465,433,1.118,442,1.142,444,0.98,461,1.54,476,1.25,480,1.925,484,1.68,485,1.889,486,2.472,487,0.766,488,2.472,489,2.472,496,2.313,497,2.313,498,1.68,499,2.528,500,1.162,501,0.525,502,1.68,503,1.606,504,1.366,505,1.68,506,1.68,507,1.68,508,1.68,509,1.246,510,1.606,511,1.68,512,1.642,513,1.246,514,0.762,515,1.448,516,3.093,517,1.68,518,1.68,519,1.142,520,1.68,521,2.364,522,1.68,523,2.472,524,1.68,525,1.68,526,1.572,527,3.645,528,1.34,529,1.642,530,1.68,531,2.364,532,1.68,533,1.68,534,1.68,535,1.68,536,1.68,537,1.68,538,1.287,539,1.68,540,1.606,541,2.364,542,1.419,543,2.313,544,1.68,545,1.68,546,2.417,547,1.68,548,1.68,549,2.364,550,1.68,551,1.366,552,1.366,553,1.366,554,1.366,555,1.366,556,1.366,557,1.366,558,1.366,559,1.366,560,1.68,561,1.68,562,1.68,563,1.642,564,1.598,565,1.642,566,1.642,567,1.642,568,1.642,569,1.642,570,1.642,571,1.642,572,0.852,573,1.379,574,1.642,575,1.71,576,0.865,577,1.68,578,1.68,579,0.908,580,1.68,581,1.572,582,1.606,583,2.632,584,0.984,585,1.392,586,1.123,587,2.933,588,1.418,589,1.887,590,2.064,591,2.479,592,2.417,593,1.366,594,1.642,595,2.933,596,1.642,597,1.392,598,2.868,599,2.256,600,1.606,601,1.68,602,1.572,603,1.419,604,1.68,605,1.419,2612,3.745,2613,3.745,2614,3.745,2615,3.745,2616,3.745,2617,3.745]],["title/classes/ModuleInstanceSimpleData.html",[0,0.341,631,2.718]],["body/classes/ModuleInstanceSimpleData.html",[0,0.682,2,0.365,3,0.053,4,0.046,5,0.053,7,0.257,9,1.016,11,0.813,12,0.754,13,1.801,14,0.082,15,0.251,18,0.107,19,0.006,20,0.436,21,0.136,24,0.207,34,0.09,37,0.691,38,0.802,44,0.456,53,0.01,54,0.01,55,0.01,56,0.01,91,1.723,94,1.553,103,1.164,166,1.528,171,0.393,342,1.409,372,1.366,379,0.712,412,1.553,419,1.069,421,1.12,422,1.452,433,1.048,444,1.086,461,1.836,476,1.643,480,1.952,485,1.88,487,0.463,501,1.249,538,1.171,564,1.632,573,1.409,575,1.747,576,1.301,584,1.479,585,2.093,588,1.933,589,2.019,590,1.777,593,2.054,606,4.312,607,3.438,608,3.32,609,4.312,610,3.438,611,1.171,612,5.07,615,2.668,616,2.963,617,4.312,618,2.668,619,2.134,620,2.093,621,1.907,622,1.808,623,2.093,624,2.093,625,2.054,626,2.015,627,2.015,628,3.113,629,1.873,630,4.172,631,4.634,632,4.312,633,4.312,634,4.634,635,3.438,636,3.32,637,4.312,638,3.32,639,4.312,640,1.632,641,3.32,642,3.438,643,3.438,644,2.093,645,3.438,646,3.212,647,3.438,648,3.438,2618,5.63,2619,5.63]],["title/classes/ModuleListDTO.html",[0,0.341,503,2.044]],["body/classes/ModuleListDTO.html",[0,0.683,2,0.237,3,0.034,4,0.03,5,0.034,7,0.167,9,0.942,12,0.565,13,1.334,14,0.053,15,0.201,18,0.132,19,0.006,20,0.452,21,0.166,24,0.237,27,0.615,30,1.535,34,0.09,37,0.663,38,1.016,39,0.733,44,0.457,45,1.475,49,1.551,53,0.007,54,0.007,55,0.007,56,0.007,91,1.719,96,1.503,97,0.688,104,0.798,106,1.167,114,0.744,115,1.154,171,0.644,180,0.576,219,1.399,352,1.239,369,1.051,370,1.217,371,1.603,372,1.387,373,2.174,376,1.174,379,0.86,382,1.839,402,1.134,403,1.967,404,2.361,405,2.108,406,1.025,407,1.544,408,1.802,419,1.066,421,1.127,422,1.461,433,1.101,442,1.651,444,0.928,461,1.625,476,1.232,480,1.446,484,1.64,485,1.883,486,2.429,487,0.757,488,2.429,489,2.429,496,2.707,497,2.707,498,1.64,499,2.493,500,1.68,501,0.759,502,2.429,503,2.323,504,2.352,505,2.893,506,2.893,507,2.893,508,2.893,509,2.146,510,2.766,511,2.893,512,2.828,513,2.146,514,0.744,515,1.414,516,3.058,517,1.64,518,1.64,519,1.115,520,1.64,521,2.323,522,1.64,523,2.429,524,1.64,525,1.64,526,1.535,527,3.617,528,1.309,529,1.603,530,1.64,531,2.323,532,1.64,533,1.64,534,1.64,535,1.64,536,1.64,537,1.64,538,1.141,539,1.64,540,1.568,541,2.323,542,1.386,543,2.273,544,1.64,545,1.64,546,2.375,547,1.64,548,1.64,549,2.323,550,1.64,551,1.334,552,1.334,553,1.334,554,1.334,555,1.334,556,1.334,557,1.334,558,1.334,559,1.334,560,1.64,561,1.64,562,1.64,563,1.603,564,1.57,565,1.603,566,1.603,567,1.603,568,1.603,569,1.603,570,1.603,571,1.603,572,0.832,573,1.355,574,1.603,575,1.68,576,0.845,577,1.64,578,1.64,579,0.886,580,1.64,581,1.535,582,1.568,583,2.18,584,0.96,585,1.359,586,1.096,587,2.429,588,1.174,589,1.787,590,1.154,591,1.386,592,2.375,593,1.334,594,1.603,595,2.893,596,1.603,597,1.359,598,2.828,599,2.225,600,1.568,601,1.64,602,1.535,603,1.386,604,1.64,605,1.386,2620,3.656,2621,3.656,2622,3.656,2623,3.656,2624,3.656,2625,3.656,2626,3.656,2627,3.656,2628,3.656,2629,3.656,2630,3.656]],["title/classes/ModuleModeDTO.html",[0,0.341,541,2.044]],["body/classes/ModuleModeDTO.html",[0,0.687,2,0.247,3,0.036,4,0.031,5,0.036,7,0.174,9,0.953,12,0.579,13,1.375,14,0.056,15,0.205,18,0.106,19,0.006,20,0.452,21,0.123,24,0.243,27,0.64,30,1.599,34,0.09,37,0.672,38,1.036,39,0.763,44,0.458,45,1.497,49,1.645,53,0.007,54,0.007,55,0.007,56,0.007,91,1.727,96,1.566,97,0.717,104,0.974,106,1.066,114,0.776,115,1.203,171,0.657,180,0.6,219,0.985,352,1.291,369,1.084,370,1.268,371,1.671,372,1.405,373,2.218,376,1.21,379,0.85,382,1.883,402,1.182,403,2.014,404,2.256,405,2.159,406,1.068,407,1.591,408,1.857,419,1.072,421,1.133,422,1.468,433,1.122,442,1.162,444,0.943,461,1.552,476,1.262,480,1.49,484,1.709,485,1.893,486,2.504,487,0.768,488,2.504,489,2.504,496,2.343,497,2.343,498,1.709,499,2.554,500,1.182,501,0.534,502,1.709,503,1.634,504,1.39,505,1.709,506,1.709,507,1.709,508,1.709,509,1.268,510,1.634,511,1.709,512,1.671,513,1.268,514,0.776,515,1.473,516,3.119,517,1.709,518,1.709,519,1.162,520,1.709,521,2.394,522,1.709,523,2.504,524,1.709,525,1.709,526,1.599,527,3.665,528,1.364,529,1.671,530,1.709,531,2.394,532,1.709,533,1.709,534,1.709,535,1.709,536,1.709,537,1.709,538,1.164,539,1.709,540,2.394,541,2.833,542,2.504,543,2.343,544,1.709,545,1.709,546,2.448,547,1.709,548,1.709,549,2.394,550,1.709,551,1.39,552,1.39,553,1.39,554,1.39,555,1.39,556,1.39,557,1.39,558,1.39,559,1.39,560,1.709,561,1.709,562,1.709,563,1.671,564,1.618,565,1.671,566,1.671,567,1.671,568,1.671,569,1.671,570,1.671,571,1.671,572,0.866,573,1.397,574,1.671,575,1.732,576,0.88,577,1.709,578,1.709,579,0.923,580,1.709,581,1.599,582,1.634,583,2.247,584,1.001,585,1.417,586,1.142,587,2.504,588,1.21,589,1.817,590,1.203,591,1.444,592,2.448,593,1.39,594,1.671,595,2.963,596,1.671,597,1.417,598,2.896,599,2.279,600,1.634,601,1.709,602,1.599,603,1.444,604,1.709,605,1.444,2631,3.81,2632,3.81,2633,3.81]],["title/classes/ModuleNetworkInterfaceDTO.html",[0,0.341,402,1.478]],["body/classes/ModuleNetworkInterfaceDTO.html",[0,0.685,2,0.242,3,0.035,4,0.03,5,0.035,7,0.171,9,0.968,12,0.573,13,1.356,14,0.055,15,0.203,18,0.124,19,0.006,20,0.452,21,0.154,24,0.24,27,0.629,30,1.57,34,0.09,37,0.699,38,1.145,39,0.749,44,0.458,45,1.492,49,1.637,53,0.007,54,0.007,55,0.007,56,0.007,91,1.724,96,1.537,97,0.703,104,0.812,106,1.058,114,0.761,115,1.18,171,0.646,180,0.589,219,0.967,352,1.267,369,1.069,370,1.244,371,1.64,372,1.397,373,2.451,376,1.417,379,0.849,382,1.863,402,1.708,403,1.993,404,2.236,405,2.136,406,1.049,407,1.863,408,1.832,419,1.069,421,1.13,422,1.465,433,1.118,442,1.141,444,0.936,461,1.539,476,1.249,480,1.47,484,1.678,485,1.889,486,2.47,487,0.76,488,2.47,489,2.47,496,2.311,497,2.311,498,1.678,499,2.787,500,1.16,501,0.524,502,1.678,503,1.604,504,1.364,505,1.678,506,1.678,507,1.678,508,1.678,509,1.244,510,1.604,511,1.678,512,1.64,513,1.244,514,0.761,515,1.446,516,3.092,517,1.678,518,1.678,519,1.141,520,1.678,521,2.362,522,1.678,523,2.47,524,1.678,525,1.678,526,1.57,527,3.643,528,1.339,529,1.64,530,1.678,531,2.362,532,1.678,533,1.678,534,1.678,535,1.678,536,1.678,537,1.678,538,1.154,539,1.678,540,1.604,541,2.362,542,1.418,543,2.311,544,1.678,545,1.678,546,2.414,547,1.678,548,1.678,549,2.362,550,1.678,551,1.364,552,1.364,553,1.364,554,1.364,555,1.364,556,1.364,557,1.364,558,1.364,559,1.364,560,1.678,561,1.678,562,1.678,563,1.64,564,1.596,565,1.64,566,1.64,567,1.64,568,1.64,569,1.64,570,1.64,571,1.64,572,0.851,573,1.378,574,1.64,575,1.708,576,1.272,577,2.47,578,2.931,579,1.584,580,2.931,581,1.57,582,1.604,583,2.216,584,0.982,585,1.39,586,1.121,587,2.47,588,1.194,589,1.804,590,1.18,591,1.418,592,2.414,593,1.364,594,1.64,595,2.931,596,1.64,597,1.39,598,2.865,599,2.254,600,1.604,601,1.678,602,1.57,603,1.418,604,1.678,605,1.418,2634,3.74,2635,3.74,2636,3.74,2637,3.74,2638,3.74,2639,3.74,2640,3.74]],["title/injectables/ModuleService.html",[229,3.022,649,1.918]],["body/injectables/ModuleService.html",[0,0.376,3,0.049,4,0.043,5,0.049,14,0.077,18,0.127,19,0.006,20,0.43,21,0.166,24,0.329,26,1.404,34,0.049,49,1.315,53,0.01,54,0.01,55,0.01,56,0.01,69,2.669,84,1.215,97,1.64,98,2.014,99,1.614,138,2.822,229,4.435,232,5.801,245,1.837,251,1.983,295,3.474,326,3.474,327,3.474,331,4.777,332,3.113,352,2.837,379,0.839,400,2.999,401,2.473,402,2.169,404,2.169,407,1.994,409,2.414,503,2.999,649,2.815,651,2.822,653,3.845,656,4.04,657,6.079,659,5.077,663,6.239,664,4.271,669,4.04,674,2.822,675,2.669,676,6.137,678,2.256,697,2.554,710,5.626,719,4.937,735,2.369,1569,3.21,1956,6.433,1957,6.433,1966,5.531,2012,6.877,2013,6.877,2014,6.877,2015,6.877,2016,6.877,2017,6.877,2641,5.259,2642,8.373,2643,6.993,2644,6.239,2645,6.993,2646,6.993,2647,5.259,2648,5.259,2649,6.993,2650,5.259,2651,7.856,2652,6.993,2653,5.259,2654,5.259,2655,5.259,2656,6.239,2657,6.993,2658,5.259,2659,6.993,2660,6.993,2661,5.259,2662,6.993,2663,5.259,2664,5.259,2665,5.259]],["title/classes/ModuleSimpleData.html",[0,0.341,975,2.089]],["body/classes/ModuleSimpleData.html",[0,0.693,2,0.275,3,0.04,4,0.034,5,0.04,7,0.194,9,0.999,11,0.96,12,0.372,13,1.486,14,0.062,15,0.227,18,0.088,19,0.006,20,0.432,21,0.112,24,0.156,31,1.549,34,0.091,37,0.709,44,0.459,45,1.224,47,1.757,53,0.008,54,0.008,55,0.008,56,0.008,91,1.743,103,0.878,104,1.035,106,1.053,109,1.295,171,0.297,239,1.641,259,1.904,342,1.062,372,1.015,379,0.529,411,1.872,412,1.171,419,1.082,421,1.139,422,1.477,433,1.134,444,1.094,448,3.26,476,1.604,485,1.904,487,0.628,500,1.317,501,1.21,514,0.864,538,0.68,573,1.062,576,1.622,579,2.034,584,1.115,586,1.273,588,1.82,589,2.027,611,1.224,615,2.201,616,2.561,618,2.201,619,1.609,620,3.003,621,1.438,622,1.938,623,1.578,624,1.578,625,1.549,626,1.52,627,1.52,629,1.413,640,1.75,644,1.578,761,1.641,777,2.787,780,3.393,789,1.641,805,1.874,956,2.707,957,1.949,958,1.949,959,2.771,960,1.904,961,1.904,962,1.904,963,2.707,965,2.707,967,2.707,969,2.707,970,2.707,971,2.707,972,2.707,973,2.707,974,2.589,975,3.079,976,2.646,977,2.646,978,3.353,979,2.646,980,1.949,981,1.949,982,1.709,983,2.589,984,3.079,985,1.904,986,1.904,987,2.707,988,1.904,989,2.707,990,1.904,991,2.646,992,3.224,993,1.949,994,1.949,995,1.949,996,3.012,997,3.43,998,1.862,999,2.16,1000,1.949,1001,1.904,1002,1.821,1003,3.079,1004,1.949,1005,1.745,1006,1.782,1007,1.949,1008,1.904,1009,1.364,1010,3.15,1011,3.43,1012,1.674,1013,1.862,1014,1.84,1015,2.707,1016,2.707,1017,2.707,1018,2.771,1019,2.646,1020,1.904,1021,1.904,1022,1.904,2666,4.245,2667,4.245]],["title/classes/ModuleStatusDTO.html",[0,0.341,543,2]],["body/classes/ModuleStatusDTO.html",[0,0.687,2,0.247,3,0.036,4,0.031,5,0.036,7,0.174,9,0.953,12,0.579,13,1.375,14,0.056,15,0.205,18,0.106,19,0.006,20,0.452,21,0.123,24,0.243,27,0.64,30,1.599,34,0.09,37,0.672,38,1.036,39,0.763,44,0.458,45,1.497,49,1.645,53,0.007,54,0.007,55,0.007,56,0.007,91,1.727,96,1.566,97,0.717,104,0.823,106,1.066,114,1.136,115,1.762,171,0.657,180,0.6,219,0.985,352,1.291,369,1.084,370,1.268,371,1.671,372,1.405,373,2.218,376,1.21,379,0.85,382,1.883,402,1.182,403,2.014,404,2.256,405,2.159,406,1.068,407,1.591,408,1.857,419,1.072,421,1.133,422,1.468,433,1.122,442,1.162,444,0.943,461,1.552,476,1.262,480,1.49,484,1.709,485,1.893,486,2.504,487,0.768,488,2.504,489,2.504,496,2.343,497,2.343,498,1.709,499,2.554,500,1.182,501,0.534,502,1.709,503,1.634,504,1.39,505,1.709,506,1.709,507,1.709,508,1.709,509,1.268,510,1.634,511,1.709,512,1.671,513,1.268,514,0.776,515,1.473,516,3.119,517,1.709,518,1.709,519,1.162,520,1.709,521,2.394,522,1.709,523,2.504,524,1.709,525,1.709,526,1.599,527,3.665,528,1.364,529,1.671,530,1.709,531,2.394,532,1.709,533,1.709,534,1.709,535,1.709,536,1.709,537,1.709,538,1.164,539,1.709,540,1.634,541,2.394,542,1.444,543,2.773,544,2.963,545,1.709,546,2.448,547,1.709,548,1.709,549,2.394,550,1.709,551,1.39,552,1.39,553,1.39,554,1.39,555,1.39,556,1.39,557,1.39,558,1.39,559,1.39,560,1.709,561,1.709,562,1.709,563,1.671,564,1.618,565,1.671,566,1.671,567,1.671,568,1.671,569,1.671,570,1.671,571,1.671,572,0.866,573,1.397,574,1.671,575,1.732,576,0.88,577,1.709,578,1.709,579,0.923,580,1.709,581,1.599,582,1.634,583,2.247,584,1.001,585,1.417,586,1.142,587,2.504,588,1.21,589,1.817,590,1.203,591,1.444,592,2.448,593,1.39,594,1.671,595,2.963,596,1.671,597,1.417,598,2.896,599,2.279,600,1.634,601,1.709,602,1.599,603,1.444,604,1.709,605,1.444,2668,3.81,2669,3.81,2670,3.81]],["title/interfaces/ModuleTopology.html",[411,1.478,472,2.418]],["body/interfaces/ModuleTopology.html",[0,0.673,3,0.047,4,0.041,5,0.047,9,0.751,11,0.982,12,0.592,14,0.073,15,0.19,18,0.099,19,0.006,20,0.427,24,0.346,34,0.091,38,0.962,39,1.534,44,0.375,46,1.93,53,0.009,54,0.009,55,0.009,56,0.009,94,1.377,103,1.397,116,3.029,127,1.576,162,2.463,171,0.349,177,1.925,202,2.073,219,1.978,277,2.739,286,3.783,342,1.249,343,2.751,345,1.632,367,2.534,368,2.604,369,1.826,370,2.247,376,1.083,379,0.816,382,1.925,385,2.896,386,2.435,387,2.406,388,2.896,389,2.406,390,2.663,391,2.406,392,3.932,393,2.604,394,3.932,395,2.604,396,3.932,397,2.604,398,3.175,399,2.468,400,3.517,401,2.347,402,2.544,403,1.522,404,2.095,405,2.207,406,1.894,407,1.925,408,2.247,409,2.292,410,2.468,411,2.544,412,2.111,413,3.688,414,3.212,415,3.212,416,3.212,417,4.692,418,4.539,419,0.751,420,2.896,421,0.794,422,1.029,423,3.427,424,2.56,425,3.522,426,3.522,427,2.611,428,2.373,429,3.522,430,2.775,431,3.513,432,2.604,433,0.608,434,2.095,435,2.604,436,2.604,437,2.239,438,2.604,439,3.522,440,3.029,441,3.522,442,2.059,443,2.961,444,0.933,445,3.212,446,3.522,447,2.604,448,1.722,449,2.604,450,2.347,451,2.189,452,2.189,453,1.722,454,2.141,455,2.604,456,2.604,457,2.347,458,3.254,459,2.468,460,2.292,461,1.066,462,3.175,463,4.028,464,2.406,465,2.406,466,3.884,467,4.161,468,3.951,469,3.517,470,3.522,471,3.991,472,4.161,473,3.433,474,2.406,475,4.161,476,0.954,477,2.534,478,2.347,479,2.406,576,1.153]],["title/classes/NameMappingDTO.html",[0,0.341,758,3.022]],["body/classes/NameMappingDTO.html",[0,0.669,2,0.374,3,0.054,4,0.047,5,0.054,7,0.264,12,0.787,14,0.084,15,0.209,18,0.127,19,0.006,20,0.45,21,0.161,24,0.212,27,0.971,34,0.088,44,0.454,45,1.39,49,1.546,53,0.011,54,0.011,55,0.011,56,0.011,91,1.699,98,1.9,106,0.795,114,1.175,115,1.822,171,0.574,342,1.445,372,1.382,373,1.761,379,0.761,382,1.646,406,1.619,407,1.646,419,1.054,421,1.114,422,1.444,430,2.373,433,1.002,461,1.755,485,1.845,487,0.738,501,0.809,514,1.175,515,2.232,538,0.924,542,2.188,551,2.106,552,2.106,553,2.106,554,2.106,555,2.106,556,2.106,557,2.106,558,2.106,559,2.106,564,1.674,575,1.791,589,1.355,603,2.188,605,2.188,629,1.921,739,4.54,740,3.814,746,3.526,747,4.54,748,4.54,749,3.814,750,3.814,751,3.661,752,3.814,753,3.661,754,3.814,755,3.814,756,3.814,757,5.431,758,5.214,759,5.431,760,5.431,761,3.178,762,5.431,763,3.814,764,4.54,765,3.814,766,3.814,767,3.661,768,3.661,769,3.661,770,3.814,771,3.814,772,3.661,2671,5.773,2672,5.773,2673,5.773,2674,5.773]],["title/components/NavbarComponent.html",[33,1.842,57,0.97]],["body/components/NavbarComponent.html",[0,0.348,3,0.046,4,0.04,5,0.046,7,0.222,8,2.671,9,0.738,12,0.711,14,0.071,18,0.118,19,0.006,20,0.293,21,0.163,24,0.244,26,1.299,27,1.473,32,2.342,33,3.136,34,0.046,35,6.626,38,0.946,39,1.33,41,2.919,44,0.428,45,1.062,47,2.03,48,3.804,52,1.741,53,0.009,54,0.009,55,0.009,56,0.009,57,1.351,58,1.999,59,1.881,60,2.087,61,2.087,62,2.087,66,2.087,67,4.299,68,4.066,70,2.785,72,2.785,83,4.196,84,1.745,97,0.915,98,1.124,99,0.9,102,3.831,104,0.978,107,2.248,114,1.351,115,2.094,128,4.583,136,1.459,137,2.169,149,3.36,164,2.087,165,2.846,166,1.32,167,2.087,168,2.391,169,2.087,170,1.958,171,0.647,172,2.133,173,1.958,174,3.311,175,1.958,176,1.999,177,1.558,178,2.133,179,1.999,180,1.5,181,2.133,182,1.999,183,2.133,184,2.133,185,1.919,186,2.133,187,1.958,188,2.133,189,1.919,190,1.958,191,2.133,192,1.919,193,1.919,194,2.133,195,2.133,196,1.999,197,2.133,198,1.919,199,1.999,200,2.133,201,2.042,202,1.904,203,2.042,204,2.91,205,2.042,206,2.042,207,1.919,208,1.919,209,2.133,210,1.919,211,1.919,212,1.919,213,2.133,214,1.958,215,2.133,216,2.133,217,2.133,245,1.743,251,1.509,252,2.303,332,1.809,343,1.562,345,2.169,421,0.78,444,0.809,452,2.91,487,0.75,501,0.93,572,1.993,611,1.062,795,2.248,796,2.248,806,5.45,807,2.182,825,5.098,829,2.275,831,2.248,849,2.617,1067,3.785,1140,4.583,1159,4.988,1189,4.34,1191,4.34,1200,5.098,1227,5.889,1255,4.583,1298,3.668,1387,4.817,1388,4.817,2050,6.662,2426,5.098,2675,4.864,2676,6.635,2677,7.551,2678,7.551,2679,6.635,2680,8.111,2681,6.635,2682,6.738,2683,6.635,2684,6.635,2685,4.864,2686,8.111,2687,6.635,2688,6.635,2689,4.864,2690,6.635,2691,8.111,2692,4.864,2693,6.635,2694,6.635,2695,6.635,2696,4.864,2697,4.864,2698,4.864,2699,4.864,2700,4.864,2701,4.864,2702,4.34,2703,4.864,2704,4.864,2705,4.864,2706,6.635]],["title/classes/NavbarElement.html",[0,0.341,35,3.459]],["body/classes/NavbarElement.html",[0,0.636,1,6.355,2,0.444,3,0.064,4,0.056,5,0.064,6,5.627,7,0.313,8,3.329,9,0.762,10,5.264,11,0.762,12,0.601,13,1.687,14,0.1,15,0.233,16,5.627,17,5.627,18,0.135,19,0.006,20,0.408,21,0.171,24,0.252,25,5.264,26,1.829,27,1.494,28,5.464,29,2.704,30,3.472,31,3.017,32,2.281,33,3.198,34,0.084,35,6.005,36,7.297,37,0.714,38,1.179,39,1.658,40,7.297,41,3.435,42,6.826,43,4.526,44,0.313,45,1.097,46,2.649,47,1.715,48,2.816,49,1.289,50,2.453,51,5.627,52,2.453,53,0.013,54,0.013,55,0.013,56,0.013,99,1.708,2707,6.852,2708,6.852,2709,6.852,2710,6.852]],["title/components/NavbarElementComponent.html",[57,0.97,196,1.958]],["body/components/NavbarElementComponent.html",[0,0.387,3,0.051,4,0.044,5,0.051,7,0.247,9,0.792,11,0.792,19,0.006,21,0.1,24,0.199,26,1.444,27,1.198,29,2.329,32,2.197,33,2.091,34,0.051,38,1.015,39,1.428,41,2.754,44,0.325,47,1.783,48,3.979,52,1.936,53,0.01,54,0.01,55,0.01,56,0.01,57,1.45,58,2.223,59,2.091,60,2.32,61,2.32,62,2.32,66,2.32,67,4.331,68,4.106,70,2.99,72,2.99,84,1.25,137,2.329,145,2.673,162,1.973,164,2.32,165,3.055,166,1.468,167,2.32,168,2.496,169,2.32,170,2.177,171,0.661,172,2.372,173,2.177,174,3.493,175,2.177,176,2.223,177,1.672,178,2.372,179,2.223,180,0.852,181,2.372,182,2.223,183,2.372,184,2.372,185,2.133,186,2.372,187,2.177,188,2.372,189,2.133,190,2.177,191,2.372,192,2.133,193,2.133,194,2.372,195,2.372,196,3.479,197,2.372,198,2.133,199,2.223,200,2.372,201,2.27,202,1.988,203,2.27,204,3.124,205,2.27,206,2.27,207,2.133,208,2.133,209,2.372,210,2.133,211,2.133,212,2.133,213,2.372,214,2.177,215,2.372,216,2.372,217,2.372,309,6.356,361,5.172,362,5.473,363,6.356,735,2.413,795,2.413,796,2.413,831,2.413,1225,4.921,1400,7.42,1561,4.351,2025,6.356,2142,5.851,2151,4.826,2153,6.356,2182,4.826,2183,8.64,2184,4.826,2185,6.356,2193,8.34,2711,7.123,2712,5.408,2713,7.123,2714,7.966,2715,7.123,2716,5.408,2717,5.408,2718,5.408,2719,5.408,2720,7.123,2721,7.108,2722,9.21,2723,9.21,2724,5.408,2725,7.123,2726,7.123,2727,7.123,2728,9.347,2729,8.466,2730,8.466,2731,8.466,2732,8.466,2733,5.408]],["title/classes/NavbarItem.html",[0,0.341,42,3.661]],["body/classes/NavbarItem.html",[0,0.636,1,6.826,2,0.444,3,0.064,4,0.056,5,0.064,6,5.627,7,0.313,8,3.576,9,0.762,10,5.264,11,0.762,12,0.601,13,1.687,14,0.1,15,0.233,16,5.627,17,5.627,18,0.135,19,0.006,20,0.424,21,0.171,24,0.252,25,5.264,26,1.829,27,1.494,28,4.526,29,2.24,30,2.876,31,2.499,32,1.89,33,2.649,34,0.084,35,4.974,36,5.627,37,0.551,38,0.977,39,1.373,40,5.627,41,2.649,42,6.826,43,5.464,44,0.378,45,1.324,46,3.198,47,2.07,48,3.399,49,1.671,50,3.18,51,7.297,52,3.18,53,0.013,54,0.013,55,0.013,56,0.013,99,1.708,2734,6.852,2735,6.852,2736,6.852,2737,6.852]],["title/classes/NetOSRouterDTO.html",[0,0.341,785,3.459]],["body/classes/NetOSRouterDTO.html",[0,0.646,2,0.417,3,0.061,4,0.052,5,0.061,7,0.294,9,0.962,14,0.094,15,0.224,18,0.132,19,0.006,20,0.445,21,0.168,34,0.085,37,0.518,44,0.442,49,1.778,53,0.012,54,0.012,55,0.012,56,0.012,77,3.674,91,1.62,104,0.949,106,0.887,171,0.556,373,2.884,379,0.849,419,1.005,421,1.062,422,1.377,485,1.705,499,3.079,514,1.311,538,1.031,579,1.93,743,2.54,773,6.558,774,4.948,775,3.184,776,4.948,777,3.202,780,3.154,783,5.051,784,5.261,785,6.277,786,6.94,787,3.674,788,4.948,789,2.49,790,4.948,791,4.948,792,4.449,2738,6.44,2739,6.44,2740,6.44,2741,6.44]],["title/components/NetworkComponent.html",[57,0.97,198,1.879]],["body/components/NetworkComponent.html",[0,0.313,3,0.058,4,0.036,5,0.041,14,0.064,15,0.174,18,0.113,19,0.006,21,0.162,24,0.311,26,1.168,27,1.036,32,1.207,33,1.691,34,0.041,37,0.495,38,0.879,39,1.235,48,1.798,50,2.774,52,1.566,53,0.008,54,0.008,55,0.008,56,0.008,57,1.578,58,1.798,59,1.691,60,1.876,61,1.876,62,1.876,66,1.876,67,4.248,68,3.996,70,2.587,72,2.587,74,2.587,83,3.047,84,1.011,86,4.284,87,4.284,97,0.823,98,1.011,99,0.81,106,1.168,107,2.768,108,2.924,109,1.88,137,1.43,140,3.946,145,3.528,162,3.177,164,1.876,165,2.644,166,1.187,167,1.876,168,2.285,169,1.876,170,1.761,171,0.659,172,1.918,173,1.761,174,3.13,175,1.761,176,1.798,177,1.819,178,1.918,179,1.798,180,1.221,181,1.918,182,1.798,183,1.918,184,1.918,185,1.725,186,1.918,187,1.761,188,1.918,189,1.725,190,1.761,191,1.918,192,1.725,193,1.725,194,1.918,195,1.918,196,1.798,197,1.918,198,3.057,199,1.798,200,1.918,201,1.836,202,1.918,203,1.836,204,2.703,205,1.836,206,1.836,207,1.725,208,1.725,209,1.918,210,1.725,211,1.725,212,1.725,213,1.918,214,1.761,215,1.918,216,1.918,217,1.918,239,2.383,245,1.619,251,0.995,252,1.334,267,1.658,268,2.431,269,1.691,277,2.759,338,3.185,369,1.197,386,2.528,411,1.912,504,2.98,509,2.579,528,2.207,572,0.995,579,1.06,692,3.765,714,4.715,775,4.038,889,1.626,916,2.898,1012,2.431,1032,3.765,1069,3.765,1072,4.421,1073,2.89,1074,2.89,1076,2.774,1078,4.835,1080,3.622,1082,3.516,1083,2.89,1104,3.128,1146,3.516,1147,3.516,1180,2.579,1340,2.774,1341,2.774,1343,3.593,1346,4.384,1347,2.579,1362,4.072,1401,2.672,1407,3.593,1411,4.475,1456,4.042,1473,3.765,1477,5.862,1548,4.072,1562,3.215,1564,5.181,1565,4.915,1569,2.008,1570,2.418,1612,2.827,1736,6.179,1737,1.962,1964,3.765,2147,2.89,2149,4.072,2200,4.93,2201,5.855,2205,5.862,2206,4.93,2207,4.93,2208,4.93,2209,5.353,2210,3.022,2217,3.022,2218,3.022,2219,2.774,2220,3.022,2221,3.022,2222,4.258,2223,3.765,2230,3.635,2231,4.258,2232,4.258,2233,4.258,2234,4.258,2235,4.258,2236,4.258,2237,4.258,2238,4.258,2239,3.022,2240,3.022,2241,3.022,2242,2.495,2243,2.89,2244,3.022,2245,3.022,2246,3.022,2247,3.022,2248,3.022,2249,4.258,2250,4.258,2251,3.022,2252,3.022,2253,5.353,2254,2.774,2255,2.89,2256,2.89,2257,3.022,2258,3.635,2259,4.258,2260,4.258,2261,3.022,2262,5.855,2263,3.022,2264,2.579,2265,3.022,2266,3.022,2267,3.022,2375,6.512,2742,4.374,2743,7.138,2744,6.164,2745,6.164,2746,4.374,2747,4.374,2748,4.374,2749,4.374,2750,4.374,2751,6.164,2752,8.476,2753,8.476,2754,4.374]],["title/classes/NetworkConstraints.html",[0,0.341,967,2.137]],["body/classes/NetworkConstraints.html",[0,0.694,2,0.279,3,0.04,4,0.035,5,0.04,7,0.196,9,1.002,11,0.938,12,0.377,13,1.5,15,0.199,19,0.006,20,0.433,24,0.158,31,1.569,34,0.091,37,0.677,44,0.46,45,1.231,47,1.77,53,0.008,54,0.008,55,0.008,56,0.008,91,1.746,103,0.89,104,0.898,106,1.06,109,1.312,171,0.3,239,1.663,259,1.929,342,1.076,372,1.024,379,0.534,411,1.89,412,1.186,419,1.083,421,1.141,422,1.479,433,1.136,444,1.098,448,3.266,476,1.47,485,1.907,487,0.632,500,1.334,501,1.241,514,0.876,538,0.689,573,1.076,576,1.634,579,2.101,584,1.13,586,1.29,588,1.828,589,2.035,611,1.231,615,2.222,616,2.222,618,2.222,619,1.63,620,2.86,621,1.457,622,1.956,623,1.599,624,1.599,625,1.569,626,1.54,627,1.54,629,1.431,640,1.766,644,1.599,761,1.663,777,2.801,780,3.401,789,1.663,805,1.888,956,2.732,957,1.975,958,1.975,959,2.796,960,1.929,961,1.929,962,1.929,963,2.732,965,2.732,967,3.172,969,2.732,970,2.732,971,2.732,972,2.732,973,2.732,974,2.613,975,2.671,976,2.671,977,2.671,978,3.373,979,2.671,980,1.975,981,1.975,982,1.731,983,1.845,984,2.671,985,1.929,986,1.929,987,2.732,988,1.929,989,2.732,990,1.929,991,2.671,992,3.531,993,1.975,994,1.975,995,1.975,996,3.033,997,3.45,998,1.886,999,2.18,1000,1.975,1001,1.929,1002,1.845,1003,3.101,1004,1.975,1005,1.768,1006,1.805,1007,1.975,1008,1.929,1009,1.382,1010,3.172,1011,3.45,1012,1.696,1013,1.886,1014,1.858,1015,2.732,1016,2.732,1017,2.732,1018,2.796,1019,2.671,1020,1.929,1021,1.929,1022,1.929]],["title/classes/NetworkDTO.html",[0,0.341,499,1.842]],["body/classes/NetworkDTO.html",[0,0.65,2,0.424,3,0.061,4,0.053,5,0.061,7,0.299,9,0.894,14,0.095,15,0.226,18,0.127,19,0.006,20,0.447,21,0.162,34,0.085,44,0.444,49,1.785,53,0.012,54,0.012,55,0.012,56,0.012,77,3.731,91,1.628,104,0.964,106,0.901,171,0.634,373,2.895,379,0.843,419,1.01,421,1.068,422,1.384,485,1.717,499,3.366,514,1.332,538,1.047,579,2.11,773,6.32,774,5.025,775,3.233,776,5.025,777,3.003,780,2.933,783,4.148,784,4.321,785,5.837,786,6.177,787,3.731,788,5.025,789,2.529,790,5.025,791,5.025,792,4.518,2755,6.54,2756,6.54,2757,6.54]],["title/classes/NetworkNode.html",[0,0.341,1626,3.459]],["body/classes/NetworkNode.html",[0,0.44,2,0.282,3,0.041,4,0.035,5,0.041,7,0.199,8,2.475,11,0.968,12,0.819,14,0.064,15,0.173,18,0.127,19,0.006,20,0.192,21,0.165,24,0.326,29,2.529,34,0.067,37,0.494,44,0.397,45,1.14,53,0.008,54,0.008,55,0.008,56,0.008,57,1.45,84,1.646,97,1.592,98,1.956,99,1.567,103,1.272,104,1.14,114,0.887,136,2.136,137,2.01,166,1.668,168,2.281,171,0.304,177,1.672,180,0.968,198,2.425,202,2.194,245,1.615,251,1.979,252,2.488,267,2.331,268,1.719,269,1.685,277,2.803,343,1.4,344,2.475,345,2.329,369,1.383,386,2.492,388,2.637,390,1.719,419,0.792,421,0.723,424,1.652,427,1.685,428,2.503,433,0.531,444,1.06,453,1.504,487,0.784,501,0.998,513,1.45,572,1.398,579,1.49,588,1.333,611,0.698,640,1.782,653,2.81,678,2.637,697,1.329,735,2.083,795,2.948,796,2.764,805,2.372,807,1.955,829,2.568,831,2.764,841,2.527,849,3.052,853,1.911,855,3.12,859,2.696,868,2.049,873,3.824,874,3.207,889,1.62,911,2.339,916,2.049,982,2.475,1009,3.122,1014,1.875,1039,2.212,1052,2.212,1117,1.652,1176,3.299,1252,2.049,1279,1.911,1282,3.207,1283,2.963,1391,4.152,1433,2.154,1434,4.464,1447,2.662,1456,2.273,1581,3.207,1583,3.207,1611,3.12,1612,3.619,1619,3.349,1626,6.146,1673,3.715,1699,2.212,1720,5.05,1737,2.758,1819,3.299,1945,3.399,2278,3.938,2279,4.247,2280,4.247,2281,4.247,2282,4.247,2283,4.247,2284,4.247,2286,3.938,2287,3.399,2289,4.914,2290,4.277,2291,3.823,2292,4.277,2293,4.277,2294,3.399,2295,3.299,2296,3.399,2297,3.011,2299,3.011,2300,3.399,2302,3.011,2304,3.011,2305,3.399,2307,3.399,2308,3.399,2309,3.399,2310,3.399,2311,3.299,2312,3.299,2313,3.399,2314,3.399,2315,3.011,2316,4.247,2317,3.938,2318,3.938,2320,3.011,2321,3.011,2322,3.011,2323,3.011,2324,2.154,2325,2.154,2326,2.41,2328,4.35,2329,2.41,2331,2.339,2332,2.339,2333,2.339,2334,2.339,2336,2.41,2337,2.41,2338,2.41,2339,2.41,2340,2.41,2341,3.399,2342,3.399,2343,2.41,2344,2.41,2345,2.41,2346,2.41,2347,2.41,2758,3.579,2759,6.148,2760,4.358,2761,4.358,2762,4.358,2763,4.358,2764,4.358,2765,4.358,2766,3.889,2767,5.486,2768,5.486,2769,3.889,2770,3.889]],["title/classes/NetworkSimpleData.html",[0,0.341,978,2.089]],["body/classes/NetworkSimpleData.html",[0,0.693,2,0.275,3,0.04,4,0.034,5,0.04,7,0.194,9,0.999,11,0.934,12,0.372,13,1.486,14,0.062,15,0.227,18,0.088,19,0.006,20,0.432,21,0.112,24,0.156,31,1.549,34,0.091,37,0.709,44,0.459,45,1.224,47,1.757,53,0.008,54,0.008,55,0.008,56,0.008,91,1.743,103,0.878,104,0.89,106,1.053,109,1.295,171,0.297,239,1.641,259,1.904,342,1.062,372,1.015,379,0.529,411,1.872,412,1.171,419,1.082,421,1.139,422,1.477,433,1.123,444,1.076,448,3.26,476,1.604,485,1.904,487,0.628,500,1.317,501,1.237,514,0.864,538,0.68,573,1.062,576,1.622,579,2.093,584,1.115,586,1.273,588,1.873,589,2.072,611,1.224,615,2.201,616,2.201,618,2.201,619,1.609,620,2.843,621,1.438,622,1.938,623,1.578,624,1.578,625,1.549,626,1.52,627,1.52,629,1.413,640,1.75,644,1.578,761,1.641,777,2.787,780,3.393,789,1.641,805,2.041,956,2.707,957,1.949,958,1.949,959,2.771,960,1.904,961,1.904,962,1.904,963,2.707,965,2.707,967,2.707,969,3.15,970,2.707,971,2.707,972,2.707,973,2.707,974,2.589,975,2.646,976,2.646,977,2.646,978,3.542,979,2.646,980,1.949,981,1.949,982,1.709,983,1.821,984,2.646,985,1.904,986,1.904,987,2.707,988,1.904,989,2.707,990,1.904,991,2.646,992,3.224,993,1.949,994,1.949,995,1.949,996,3.012,997,3.43,998,1.862,999,2.16,1000,1.949,1001,1.904,1002,1.821,1003,3.079,1004,1.949,1005,1.745,1006,1.782,1007,1.949,1008,1.904,1009,1.364,1010,3.15,1011,3.43,1012,1.674,1013,1.862,1014,2.141,1015,3.15,1016,2.707,1017,2.707,1018,2.771,1019,2.646,1020,1.904,1021,1.904,1022,1.904,2771,4.245,2772,4.245]],["title/classes/NodeSimpleData.html",[0,0.341,976,2.089]],["body/classes/NodeSimpleData.html",[0,0.692,2,0.272,3,0.039,4,0.034,5,0.039,7,0.192,9,0.996,11,0.93,12,0.368,13,1.473,14,0.061,15,0.226,18,0.111,19,0.006,20,0.432,21,0.141,24,0.154,31,1.53,34,0.091,37,0.707,44,0.459,45,1.287,47,1.745,53,0.008,54,0.008,55,0.008,56,0.008,91,1.741,103,0.867,104,0.882,106,1.048,109,1.279,171,0.293,239,1.621,259,1.881,342,1.05,372,1.006,379,0.524,411,1.856,412,1.924,419,1.08,421,1.137,422,1.474,433,1.12,444,1.072,448,3.253,476,1.598,485,1.892,487,0.625,500,1.301,501,1.233,514,1.218,538,0.672,573,1.05,576,1.612,579,2.026,584,1.102,586,1.258,588,1.866,589,2.065,611,1.287,615,2.182,616,2.182,618,2.182,619,1.59,620,2.827,621,1.421,622,1.922,623,1.559,624,1.559,625,1.53,626,1.501,627,1.501,629,1.396,640,1.734,644,1.559,761,1.621,777,2.774,780,3.44,789,1.621,805,1.862,956,2.684,957,1.926,958,1.926,959,2.747,960,1.881,961,1.881,962,1.881,963,2.684,965,2.684,967,2.684,969,2.684,970,3.128,971,2.684,972,2.684,973,2.684,974,2.992,975,2.624,976,3.058,977,2.624,978,3.335,979,2.624,980,1.926,981,1.926,982,1.688,983,1.799,984,2.624,985,1.881,986,1.881,987,2.684,988,1.881,989,2.684,990,1.881,991,2.624,992,3.202,993,1.926,994,1.926,995,1.926,996,2.992,997,3.411,998,1.839,999,2.142,1000,1.926,1001,1.881,1002,1.799,1003,3.058,1004,1.926,1005,1.724,1006,1.761,1007,1.926,1008,1.881,1009,1.922,1010,3.607,1011,3.607,1012,1.654,1013,1.839,1014,1.825,1015,2.684,1016,2.684,1017,2.684,1018,2.747,1019,2.624,1020,1.881,1021,1.881,1022,1.881,2773,4.194,2774,4.194,2775,4.194,2776,4.194]],["title/classes/NodeTopologyElement.html",[0,0.341,418,2.355]],["body/classes/NodeTopologyElement.html",[0,0.674,2,0.325,3,0.047,4,0.041,5,0.047,9,0.754,11,0.984,12,0.594,14,0.073,15,0.191,18,0.099,19,0.006,20,0.428,21,0.126,24,0.346,34,0.091,37,0.404,38,0.966,39,1.538,44,0.375,46,1.941,53,0.009,54,0.009,55,0.009,56,0.009,94,1.385,103,1.402,116,3.041,127,1.585,162,2.473,171,0.351,177,1.929,202,1.802,219,1.984,277,2.744,286,3.794,342,1.257,343,2.757,345,1.642,367,2.549,368,2.619,369,1.809,370,2.256,376,1.089,379,0.817,382,1.933,385,2.908,386,2.44,387,2.42,388,2.908,389,2.42,390,2.674,391,2.42,392,3.524,393,2.619,394,3.524,395,2.619,396,3.524,397,2.619,398,3.188,399,2.482,400,3.525,401,2.361,402,2.55,403,1.531,404,2.103,405,2.216,406,1.901,407,1.933,408,2.256,409,2.305,410,2.482,411,2.55,412,2.117,413,3.699,414,3.222,415,3.222,416,3.222,417,4.545,418,4.469,419,0.754,420,2.908,421,0.797,422,1.033,423,3.441,424,2.57,425,3.536,426,3.536,427,2.621,428,2.382,429,3.536,430,2.786,431,3.524,432,2.619,433,0.612,434,2.108,435,2.619,436,2.619,437,2.253,438,2.619,439,3.536,440,3.041,441,3.536,442,2.068,443,2.973,444,0.936,445,3.222,446,3.536,447,2.619,448,1.732,449,2.619,450,2.361,451,2.202,452,2.202,453,1.732,454,2.154,455,2.619,456,2.619,457,2.361,458,3.267,459,2.482,460,2.305,461,1.072,462,3.188,463,4.159,464,2.42,465,2.42,466,3.441,467,4.356,468,4.262,469,3.794,470,3.536,471,4.003,472,3.896,473,3.443,474,2.42,475,4.171,476,0.96,477,2.549,478,2.361,479,2.42,743,1.981,807,2.253,2777,5.022,2778,5.022]],["title/components/OffcanvasComponent.html",[57,0.97,199,1.958]],["body/components/OffcanvasComponent.html",[0,0.249,3,0.033,4,0.028,5,0.033,7,0.159,8,3.436,11,0.928,12,0.686,14,0.051,15,0.147,18,0.133,19,0.006,20,0.395,21,0.173,24,0.128,25,4.629,26,0.928,27,0.877,29,1.705,32,2.056,33,1.345,34,0.033,37,0.727,38,0.743,39,1.045,41,2.42,44,0.413,45,0.835,48,1.429,50,3.056,52,1.245,53,0.006,54,0.006,55,0.006,56,0.006,57,1.062,58,1.429,59,1.345,60,1.492,61,1.492,62,1.492,66,1.492,67,4.176,68,3.915,70,2.19,72,2.19,74,3.754,83,3.868,84,0.804,86,3.461,87,3.845,94,1.439,97,0.981,98,1.205,99,0.966,102,3.918,103,1.079,104,1.025,106,1.176,107,2.749,108,2.49,109,2.121,114,1.821,115,2.694,127,1.647,128,5.405,136,1.043,137,1.705,140,1.923,145,3.094,154,3.787,160,2.856,161,3.603,162,3.262,163,4.545,164,1.492,165,2.237,166,1.699,167,1.492,168,2.05,169,1.492,170,1.4,171,0.596,172,1.525,173,1.4,174,2.745,175,1.4,176,1.429,177,1.225,178,1.525,179,1.429,180,1.506,181,1.525,182,1.429,183,1.525,184,1.525,185,1.372,186,1.525,187,1.4,188,1.525,189,1.372,190,1.4,191,1.525,192,1.372,193,1.372,194,1.525,195,1.525,196,1.429,197,1.525,198,1.372,199,2.858,200,1.525,201,1.46,202,1.633,203,1.46,204,2.287,205,1.46,206,1.46,207,1.372,208,1.372,209,1.525,210,1.372,211,1.372,212,1.372,213,1.525,214,1.4,215,1.525,216,1.525,217,1.525,245,1.37,251,1.424,252,1.909,332,1.293,344,2.8,376,1.131,419,0.387,424,1.977,444,0.908,487,0.643,509,1.736,514,1.062,526,2.19,528,1.245,572,1.845,598,3.05,611,1.114,675,1.765,678,2.237,683,4.655,697,1.061,735,1.767,827,1.597,829,1.95,830,3.359,841,2.573,849,2.743,858,3.446,910,4.008,911,2.799,1067,2.976,1071,4.008,1072,2.976,1078,2.976,1080,3.53,1082,3.571,1146,1.984,1147,1.984,1155,2.525,1159,4.595,1167,3.97,1245,4.008,1274,5.344,1303,4.284,1347,4.101,1370,5.585,1371,5.585,1372,5.585,1373,6.206,1375,6.649,1382,4.284,1387,4.545,1395,7.979,1396,4.655,1397,4.655,1399,4.655,1400,4.284,1401,3.823,1405,4.655,1411,2.525,1415,3.103,1418,6.206,1420,3.103,1454,2.976,1550,4.655,1561,3.186,1562,1.814,1602,3.186,1964,3.823,2178,2.856,2194,5.585,2242,2.976,2243,4.135,2254,4.411,2256,4.595,2426,5.344,2429,5.585,2432,5.622,2434,5.585,2439,5.585,2440,5.585,2452,3.103,2454,3.103,2456,3.103,2457,3.103,2458,4.655,2508,4.655,2702,3.103,2721,3.103,2779,3.478,2780,4.284,2781,8.114,2782,4.655,2783,6.955,2784,8.694,2785,6.955,2786,5.216,2787,5.216,2788,5.216,2789,6.955,2790,6.955,2791,6.26,2792,5.216,2793,6.955,2794,6.649,2795,6.26,2796,5.216,2797,5.216,2798,3.478,2799,5.216,2800,4.655,2801,3.478,2802,5.216,2803,3.478,2804,3.478,2805,5.216,2806,8.828,2807,5.216,2808,5.216,2809,5.216,2810,5.216,2811,3.478,2812,3.478,2813,5.216,2814,5.216,2815,3.478,2816,3.478,2817,3.478,2818,5.216,2819,3.478,2820,4.284,2821,3.478,2822,3.478,2823,3.478,2824,3.478,2825,3.478,2826,3.478,2827,6.26,2828,3.478,2829,3.478,2830,6.012,2831,5.585,2832,3.103,2833,3.478,2834,4.655,2835,5.216,2836,5.216,2837,5.216,2838,3.478,2839,3.478,2840,3.478,2841,3.478,2842,3.103,2843,3.103,2844,3.478,2845,2.525,2846,3.478,2847,3.478,2848,3.478]],["title/classes/PageableDTO.html",[0,0.341,496,2]],["body/classes/PageableDTO.html",[0,0.59,2,0.442,3,0.064,4,0.055,5,0.064,7,0.312,12,0.724,14,0.1,15,0.232,18,0.143,19,0.006,20,0.423,21,0.178,34,0.078,44,0.421,53,0.013,54,0.013,55,0.013,56,0.013,91,1.48,106,1.336,379,0.841,419,0.918,421,0.97,422,1.258,485,1.628,487,0.678,496,3.465,497,3.724,510,3.805,513,2.272,1290,6.779,1484,5.992,1686,5.701,2849,6.092,2850,7.365,2851,7.916,2852,7.916,2853,7.916,2854,7.916,2855,7.916,2856,6.828,2857,6.828,2858,6.828,2859,6.828,2860,6.828,2861,6.828,2862,6.092,2863,6.092]],["title/classes/ParseDataForTheaterVisualizer.html",[0,0.341,2864,3.913]],["body/classes/ParseDataForTheaterVisualizer.html",[0,0.162,2,0.147,3,0.021,4,0.018,5,0.021,7,0.104,9,0.909,11,0.726,12,0.728,14,0.033,15,0.134,18,0.121,19,0.006,20,0.411,21,0.154,24,0.295,27,0.627,29,1.796,32,1.029,34,0.021,37,0.488,38,0.93,39,1.664,43,2.464,44,0.426,45,1.229,47,0.933,49,1.034,53,0.004,54,0.004,55,0.004,56,0.004,69,2.789,84,1.097,94,2.376,96,1.533,97,1.561,98,1.99,99,1.537,104,1.131,114,1.328,116,1.673,127,1.177,136,2.554,137,0.742,138,2.002,166,1.871,168,2.318,171,0.561,180,0.748,219,2.202,229,5.092,231,5.195,245,1.443,251,2.064,252,1.138,277,1.473,332,0.844,344,1.501,345,1.219,376,1.192,379,0.704,382,2.367,385,1.6,386,1.309,387,1.094,388,1.6,389,1.094,390,1.471,391,1.094,400,2.357,401,1.068,402,1.473,404,2.744,405,2.254,406,1.702,409,1.043,410,1.123,412,0.626,413,1.094,417,1.844,421,0.438,422,0.568,427,2.522,433,0.958,442,1.448,443,1.636,444,1.078,445,3.431,451,1.636,452,1.636,453,2.251,454,2.357,460,2.523,461,1.926,462,3.506,463,3.068,464,2.287,465,2.287,468,3.322,469,2.799,473,3.229,474,2.287,476,0.434,487,0.771,501,1.239,519,2.652,572,1.25,576,1.27,579,0.904,581,1.566,589,1.425,597,2.043,599,2.483,600,2.357,602,1.992,603,0.861,611,1.519,633,1.339,653,3.514,697,2.448,710,5.082,719,4.963,735,1.608,743,2.394,753,1.44,761,1.442,777,1.896,783,2.366,787,2.128,795,2.439,796,2.439,798,2.866,805,1.922,823,3.001,824,3.501,825,2.866,829,2.63,830,2.949,839,3.99,841,1.533,849,1.471,868,1.754,870,2.866,875,2.464,883,4.513,889,0.844,896,1.865,916,1.068,926,3.63,933,6.06,983,1.6,999,1.967,1005,1.533,1006,2.307,1009,1.198,1014,1.138,1054,4.386,1109,2.128,1204,2.026,1279,2.41,1298,3.607,1439,1.649,1454,2.128,1476,3.796,1483,3.064,1514,1.649,1602,2.278,1612,1.361,1653,2.577,1700,1.387,1755,3.647,1756,2.866,1820,4.513,1940,3.328,1959,2.866,1966,2.464,2051,2.866,2219,1.44,2223,2.899,2273,2.577,2864,3.064,2865,2.271,2866,4.222,2867,4.222,2868,5.495,2869,3.73,2870,5.495,2871,4.903,2872,4.903,2873,4.903,2874,4.903,2875,4.903,2876,5.495,2877,5.495,2878,5.495,2879,5.495,2880,3.328,2881,2.026,2882,2.271,2883,3.73,2884,2.271,2885,3.73,2886,3.73,2887,7.456,2888,3.73,2889,2.271,2890,3.73,2891,3.73,2892,3.73,2893,2.271,2894,3.328,2895,2.271,2896,3.73,2897,3.73,2898,3.328,2899,2.271,2900,3.73,2901,3.73,2902,3.73,2903,3.73,2904,3.328,2905,2.271,2906,6.525,2907,3.328,2908,2.271,2909,3.328,2910,2.271,2911,3.328,2912,4.513,2913,3.73,2914,5.495,2915,3.73,2916,3.73,2917,3.647,2918,3.647,2919,3.647,2920,3.328,2921,3.73,2922,2.271,2923,3.73,2924,3.73,2925,2.271,2926,3.328,2927,3.73,2928,3.328,2929,3.73,2930,3.73,2931,3.73,2932,2.271,2933,3.73,2934,3.73,2935,3.73,2936,3.73,2937,2.271,2938,3.73,2939,3.328,2940,2.271,2941,3.73,2942,3.73,2943,3.73,2944,3.73,2945,3.73,2946,3.73,2947,3.73,2948,3.73,2949,3.73,2950,2.026,2951,1.745,2952,1.865,2953,1.865,2954,1.865,2955,2.271,2956,2.271,2957,2.271,2958,4.747,2959,3.328,2960,2.271,2961,2.271,2962,2.271,2963,3.73,2964,2.271,2965,2.271,2966,2.271,2967,5.495,2968,2.271,2969,2.271,2970,3.73,2971,2.271,2972,2.271,2973,4.747,2974,2.271,2975,3.73,2976,2.271,2977,2.271,2978,2.271,2979,2.271,2980,2.271,2981,2.271,2982,2.271,2983,2.271,2984,2.271,2985,2.271,2986,2.026,2987,2.271,2988,2.026,2989,2.026,2990,3.328,2991,2.026,2992,2.026,2993,2.026,2994,2.026,2995,3.898,2996,2.026,2997,2.026,2998,4.235,2999,4.235,3000,2.026,3001,3.328,3002,3.328,3003,2.026,3004,3.064,3005,2.026,3006,2.271,3007,4.903,3008,2.271,3009,2.271,3010,2.271,3011,2.271,3012,2.271,3013,2.271,3014,2.271,3015,2.271,3016,2.271,3017,2.271,3018,2.271,3019,2.026,3020,3.73,3021,2.271,3022,2.271,3023,4.513,3024,2.271,3025,2.271,3026,2.271,3027,2.271,3028,3.898,3029,2.271,3030,2.271,3031,2.271,3032,2.026,3033,1.865,3034,3.898,3035,3.898,3036,3.898,3037,1.865,3038,3.064,3039,1.865,3040,1.865,3041,1.865,3042,3.898,3043,1.865,3044,3.064,3045,1.865,3046,1.865,3047,4.985,3048,1.865,3049,4.513,3050,1.865,3051,1.865,3052,3.064,3053,5.662,3054,1.865,3055,1.865,3056,1.865,3057,3.064,3058,3.064,3059,1.865,3060,1.865,3061,1.865,3062,1.865,3063,1.865,3064,1.865,3065,1.865,3066,1.865,3067,1.865,3068,1.865,3069,1.865,3070,1.865,3071,1.865]],["title/injectables/ParseService.html",[230,3.291,649,1.918]],["body/injectables/ParseService.html",[0,0.332,3,0.044,4,0.038,5,0.044,7,0.212,11,1.003,14,0.068,15,0.181,18,0.107,19,0.006,20,0.391,21,0.16,24,0.352,26,1.237,34,0.044,37,0.372,44,0.432,45,1.028,49,1.495,53,0.009,54,0.009,55,0.009,56,0.009,69,2.353,84,1.071,91,1.151,94,2.192,97,1.385,98,1.701,99,1.545,102,2.694,104,1.33,107,1.57,108,1.659,113,5.727,114,1.307,127,2.026,136,2.502,137,1.515,138,3.951,171,0.324,219,2.054,229,5.722,230,4.434,231,5.847,245,1.686,251,2.052,326,3.062,327,3.062,332,2.955,334,3.807,379,0.757,433,0.782,434,2.694,442,1.958,443,4.108,444,1.167,445,2.694,461,1.697,473,2.879,478,3.018,487,0.653,501,1.264,611,1.549,649,2.584,651,2.488,653,3.726,664,4.854,674,2.488,697,2.751,710,5.39,719,5.32,795,2.175,796,2.175,805,2.122,813,4.434,823,3.632,824,4.842,829,2.53,853,2.815,859,2.815,926,4.24,1284,4.66,1454,4.534,1476,4.434,1635,4.66,1700,2.831,1818,5.04,2003,6.932,2436,4.932,2864,6.528,2880,5.727,2881,4.136,2939,5.727,2950,4.136,2951,3.561,3072,4.635,3073,6.419,3074,6.419,3075,6.419,3076,6.419,3077,6.419,3078,7.091,3079,5.727,3080,7.091,3081,6.419,3082,4.635,3083,6.528,3084,7.948,3085,5.727,3086,4.635,3087,6.528,3088,7.363,3089,4.635,3090,6.419,3091,6.528,3092,7.948,3093,4.635,3094,7.363,3095,6.419,3096,6.419,3097,4.136,3098,7.948,3099,4.635,3100,4.635,3101,4.635,3102,4.635,3103,4.635,3104,7.948,3105,4.635,3106,4.635,3107,4.635,3108,4.635,3109,4.635,3110,4.635,3111,4.635]],["title/classes/PerseDataForModuleComposer.html",[0,0.341,3083,3.913]],["body/classes/PerseDataForModuleComposer.html",[0,0.432,2,0.391,3,0.057,4,0.049,5,0.057,7,0.276,11,0.851,12,0.852,14,0.088,18,0.112,19,0.006,21,0.156,24,0.308,27,1.286,32,2.11,34,0.057,44,0.425,47,1.914,53,0.011,54,0.011,55,0.011,56,0.011,84,1.395,97,1.439,98,1.768,99,1.416,104,1.128,114,1.557,136,2.294,245,2.009,251,2.007,399,2.985,433,0.932,443,4.08,444,0.932,478,4.496,479,2.91,487,0.725,501,1.304,611,1.413,653,3.312,675,3.065,697,2.333,710,4.79,719,3.561,795,2.592,796,2.592,805,2.356,813,6.097,823,3.079,824,4.105,829,2.475,830,4.105,859,3.354,1279,3.871,1700,3.688,1977,3.83,1978,3.83,1979,3.83,1995,6.606,2003,7.416,2436,5.877,2866,6.782,2867,6.782,3078,7.876,3083,6.283,3097,5.388,3112,6.039,3113,8.827,3114,6.039,3115,6.039,3116,7.65,3117,6.039,3118,6.039,3119,6.039,3120,6.039,3121,7.65,3122,6.039,3123,6.039,3124,6.039,3125,6.039,3126,6.039,3127,6.039]],["title/classes/PerseDataForModuleVisualizer.html",[0,0.341,3087,3.913]],["body/classes/PerseDataForModuleVisualizer.html",[0,0.259,2,0.234,3,0.034,4,0.029,5,0.034,7,0.165,9,0.598,11,0.939,12,0.818,14,0.053,18,0.12,19,0.006,20,0.393,21,0.153,24,0.323,27,0.903,32,1.482,34,0.034,38,1.299,44,0.42,47,1.345,49,1.334,53,0.007,54,0.007,55,0.007,56,0.007,84,1.481,94,2.536,97,1.546,98,1.9,99,1.522,104,1.294,114,1.444,136,2.465,168,2.091,171,0.253,180,0.57,229,5.649,245,1.411,251,2.026,252,1.104,277,1.988,332,1.998,342,0.905,344,2.163,345,1.756,379,0.756,385,2.305,386,1.768,387,1.744,388,2.305,389,1.744,390,2.119,391,1.744,400,3.042,401,1.701,402,1.988,407,2.622,409,1.661,412,0.998,413,1.744,414,1.519,415,1.519,416,1.519,417,1.789,418,2.656,433,1.121,434,3.451,443,3.11,444,1.099,451,2.356,453,2.913,460,2.467,463,2.526,464,2.589,465,2.589,468,3.089,469,2.749,474,2.589,487,0.652,501,1.113,519,1.104,572,1.222,576,1.242,579,1.302,602,2.255,611,1.539,653,3.656,675,1.836,697,2.311,710,5.287,719,4.847,735,2.69,777,2.447,783,3.408,787,3.065,795,2.403,796,2.403,805,2.254,823,2.163,829,2.529,830,2.883,841,2.915,859,2.356,889,1.345,916,1.701,926,3.549,999,2.539,1005,2.208,1006,2.977,1014,1.639,1255,3.712,1279,2.356,1298,2.971,1439,2.627,1454,4.046,1602,3.282,1612,1.96,1648,4.413,1700,2.21,1755,4.924,1756,2.78,1805,4.128,1934,4.794,1946,4.794,1959,4.128,1966,3.549,2051,4.128,2223,2.21,2273,3.712,2644,4.794,2780,4.413,2866,6.488,2867,4.128,2912,4.413,2917,4.924,2918,4.924,2919,4.924,2926,4.794,2951,2.78,2952,2.972,2954,2.972,2995,6.224,3004,4.413,3023,4.413,3028,4.413,3033,2.972,3034,5.264,3035,5.264,3036,5.264,3037,2.972,3038,4.413,3039,2.972,3040,2.972,3041,2.972,3042,5.264,3043,2.972,3044,4.413,3045,2.972,3046,2.972,3047,6.224,3048,2.972,3049,5.826,3050,2.972,3051,2.972,3052,4.413,3053,6.752,3054,2.972,3055,2.972,3056,2.972,3057,4.413,3058,4.413,3059,2.972,3060,2.972,3061,2.972,3062,2.972,3063,2.972,3064,2.972,3065,2.972,3066,2.972,3067,2.972,3068,2.972,3069,2.972,3070,2.972,3071,2.972,3079,4.794,3085,4.794,3087,4.413,3128,3.618,3129,7.093,3130,7.093,3131,7.093,3132,7.093,3133,7.093,3134,3.229,3135,3.618,3136,5.373,3137,3.618,3138,4.794,3139,5.373,3140,3.618,3141,7.093,3142,5.373,3143,5.373,3144,3.618,3145,5.373,3146,3.618,3147,4.794,3148,5.373,3149,5.373,3150,5.373,3151,3.618,3152,5.373,3153,5.373,3154,5.373,3155,5.373,3156,3.618,3157,3.618,3158,3.618,3159,5.373,3160,3.618,3161,3.618,3162,3.618,3163,3.618,3164,5.373,3165,3.618,3166,3.618]],["title/classes/PerseDataForTheaterComposer.html",[0,0.341,3091,3.913]],["body/classes/PerseDataForTheaterComposer.html",[0,0.219,2,0.198,3,0.029,4,0.025,5,0.029,7,0.14,9,0.526,11,0.966,12,0.78,14,0.045,18,0.113,19,0.006,20,0.403,21,0.153,24,0.309,27,0.794,29,1.545,32,1.304,34,0.029,37,0.598,38,0.674,44,0.42,45,1.283,47,1.628,53,0.006,54,0.006,55,0.006,56,0.006,84,1.335,94,2.052,97,1.459,98,1.792,99,1.436,104,1.239,114,0.962,136,2.326,166,1.282,168,1.918,171,0.575,180,0.481,219,2.343,229,5.58,245,1.241,251,2.044,252,0.932,277,1.793,332,1.136,344,2.327,345,1.545,372,0.514,376,1.025,379,0.507,385,2.027,386,1.594,387,1.472,388,2.027,389,1.472,390,1.864,391,1.472,400,2.79,401,1.436,402,1.793,404,2.888,406,1.325,409,1.402,412,0.843,413,1.472,422,0.72,423,2.398,427,2.876,428,1.661,433,0.576,443,2.072,444,0.793,451,2.072,452,3.514,453,2.244,458,2.277,461,1.588,462,4.022,463,2.222,464,2.277,465,2.277,468,2.785,469,2.479,473,3.155,474,2.785,476,0.584,480,0.816,487,0.658,501,1.289,519,2.683,538,0.489,572,1.075,576,1.503,579,1.145,590,0.964,591,1.158,599,1.63,602,1.984,611,1.518,653,3.628,675,1.55,678,2.027,697,2.366,710,5.247,719,5.121,735,1.958,743,2.775,777,2.244,783,2.997,787,2.696,795,2.204,796,2.204,805,1.986,823,1.902,824,2.536,829,2.579,830,4.3,841,3.293,859,2.853,883,6.109,889,1.136,895,2.886,898,2.018,916,1.436,926,4.297,933,6.077,999,2.329,1006,2.731,1054,4.509,1144,3.881,1252,2.222,1279,2.072,1298,3.596,1360,4.217,1393,4.217,1439,2.218,1486,2.509,1506,2.509,1540,4.217,1602,2.886,1612,1.724,1634,3.881,1677,3.881,1700,1.866,1755,4.441,1756,2.347,1822,4.217,1959,3.631,1966,3.122,2051,3.631,2223,1.866,2273,3.265,2780,3.881,2866,6.157,2867,3.631,2871,5.804,2872,4.217,2873,5.804,2874,5.804,2875,5.804,2894,4.217,2898,4.217,2904,4.217,2907,4.217,2909,4.217,2911,4.217,2912,6.109,2917,4.441,2918,4.441,2919,4.441,2920,4.217,2928,7.15,2951,2.347,2952,2.509,2953,2.509,2954,2.509,2959,4.217,2986,2.726,2988,2.726,2989,2.726,2990,4.217,2991,2.726,2992,2.726,2993,2.726,2994,2.726,2995,4.747,2996,2.726,2997,2.726,2998,5.157,2999,5.804,3000,2.726,3001,4.217,3002,4.217,3003,2.726,3004,3.881,3005,2.726,3007,4.217,3019,2.726,3023,3.881,3028,3.881,3032,2.726,3033,2.509,3034,4.747,3035,4.747,3036,4.747,3037,2.509,3038,3.881,3039,2.509,3040,2.509,3041,2.509,3042,4.747,3043,2.509,3044,3.881,3045,2.509,3046,2.509,3047,5.778,3048,2.509,3049,5.343,3050,2.509,3051,2.509,3052,3.881,3053,6.371,3054,2.509,3055,2.509,3056,2.509,3057,3.881,3058,3.881,3059,2.509,3060,2.509,3061,2.509,3062,2.509,3063,2.509,3064,2.509,3065,2.509,3066,2.509,3067,2.509,3068,2.509,3069,2.509,3070,2.509,3071,2.509,3080,5.804,3091,3.881,3134,2.726,3138,4.217,3147,4.217,3167,3.055,3168,6.505,3169,7.438,3170,3.055,3171,3.055,3172,4.217,3173,3.055,3174,3.055,3175,3.055,3176,4.726,3177,3.055,3178,4.726,3179,4.726,3180,4.726,3181,3.055,3182,4.726,3183,3.055,3184,4.726,3185,4.726,3186,3.055,3187,4.726,3188,4.726,3189,3.055,3190,3.055,3191,3.055,3192,3.055,3193,3.055,3194,3.055,3195,4.726,3196,3.055,3197,5.78,3198,3.055,3199,3.055,3200,2.218]],["title/classes/PortSimpleData.html",[0,0.341,977,2.089]],["body/classes/PortSimpleData.html",[0,0.693,2,0.275,3,0.04,4,0.034,5,0.04,7,0.194,9,0.999,11,0.934,12,0.372,13,1.486,14,0.062,15,0.227,18,0.088,19,0.006,20,0.432,21,0.112,24,0.156,31,1.549,34,0.091,37,0.709,44,0.459,45,1.224,47,1.914,53,0.008,54,0.008,55,0.008,56,0.008,91,1.743,103,0.878,104,0.89,106,1.053,109,1.295,171,0.297,239,1.641,259,1.904,342,1.062,372,1.015,379,0.529,411,1.872,412,1.171,419,1.082,421,1.139,422,1.477,433,1.123,444,1.076,448,3.26,476,1.461,485,1.904,487,0.628,500,1.317,501,1.237,514,0.864,538,0.68,573,1.062,576,1.622,579,2.034,584,1.115,586,1.273,588,1.873,589,2.072,611,1.224,615,2.201,616,2.201,618,2.201,619,1.609,620,2.843,621,1.438,622,1.938,623,1.578,624,1.578,625,1.549,626,1.52,627,1.52,629,1.413,640,1.75,644,1.578,761,1.641,777,2.787,780,3.393,789,1.641,805,2.041,956,2.707,957,1.949,958,1.949,959,2.771,960,1.904,961,1.904,962,1.904,963,2.707,965,2.707,967,2.707,969,2.707,970,2.707,971,3.15,972,2.707,973,2.707,974,2.589,975,2.646,976,2.646,977,3.079,978,3.353,979,2.646,980,1.949,981,1.949,982,1.709,983,1.821,984,2.646,985,1.904,986,1.904,987,2.707,988,1.904,989,2.707,990,1.904,991,2.646,992,3.224,993,1.949,994,1.949,995,1.949,996,3.012,997,3.43,998,1.862,999,2.16,1000,1.949,1001,1.904,1002,1.821,1003,3.079,1004,1.949,1005,1.745,1006,1.782,1007,1.949,1008,1.904,1009,1.364,1010,3.623,1011,3.623,1012,1.674,1013,2.646,1014,1.84,1015,2.707,1016,2.707,1017,2.707,1018,2.771,1019,2.646,1020,1.904,1021,1.904,1022,1.904,3201,4.245,3202,4.245]],["title/classes/PropertiesMISD.html",[0,0.341,634,2.718]],["body/classes/PropertiesMISD.html",[0,0.677,2,0.353,3,0.051,4,0.044,5,0.051,7,0.249,9,1.026,11,0.797,12,0.701,13,1.764,14,0.08,15,0.248,18,0.132,19,0.006,20,0.439,21,0.168,24,0.2,34,0.089,37,0.576,38,1.14,44,0.455,53,0.01,54,0.01,55,0.01,56,0.01,91,1.714,94,1.504,99,1.326,103,1.128,166,1.48,171,0.381,342,1.365,372,1.345,379,0.773,412,1.504,419,1.063,421,1.113,422,1.443,433,1.035,444,1.104,461,1.813,476,1.369,480,2.267,485,1.868,487,0.448,501,1.236,538,1.36,564,1.581,573,1.365,575,1.692,576,1.26,584,1.432,585,2.027,588,1.913,589,2.071,590,2.525,593,1.989,606,4.223,607,3.33,608,3.215,609,4.223,610,3.33,611,1.147,612,5.008,615,2.613,616,2.613,617,4.223,618,2.613,619,2.067,620,2.027,621,1.847,622,1.752,623,2.027,624,2.027,625,1.989,626,1.952,627,1.952,628,3.015,629,1.815,630,4.086,631,4.086,632,4.223,633,3.215,634,4.563,635,4.374,636,4.716,637,4.716,638,4.716,639,4.716,640,1.581,641,3.215,642,3.33,643,3.33,644,2.027,645,3.33,646,3.111,647,3.33,648,3.33,3203,5.453,3204,5.453,3205,5.453,3206,5.453,3207,5.453,3208,5.453]],["title/classes/PropertiesMSD.html",[0,0.341,984,2.089]],["body/classes/PropertiesMSD.html",[0,0.691,2,0.269,3,0.039,4,0.034,5,0.039,7,0.19,9,1.008,11,0.954,12,0.364,13,1.463,14,0.061,15,0.235,18,0.122,19,0.006,20,0.433,21,0.155,24,0.153,31,1.515,34,0.091,37,0.689,44,0.459,45,1.212,47,1.736,53,0.008,54,0.008,55,0.008,56,0.008,91,1.739,103,0.859,104,0.876,106,1.043,109,1.266,171,0.29,239,1.606,259,1.863,342,1.039,372,1.273,379,0.608,411,1.843,412,1.146,419,1.079,421,1.136,422,1.473,433,1.129,444,1.089,448,3.248,476,1.447,485,1.898,487,0.622,500,1.288,501,1.202,514,0.845,538,1.111,573,1.736,576,1.603,579,2.019,584,1.091,586,1.245,588,1.807,589,2.014,611,1.212,615,2.53,616,2.167,618,2.167,619,1.574,620,2.978,621,1.407,622,1.908,623,1.544,624,1.544,625,1.515,626,1.487,627,1.487,629,1.382,640,1.722,644,1.544,743,1.638,761,1.606,777,2.763,780,3.38,789,1.606,805,1.852,956,3.111,957,1.907,958,1.907,959,2.727,960,1.863,961,1.863,962,1.863,963,2.665,965,2.665,967,2.665,969,2.665,970,2.665,971,2.665,972,2.665,973,2.665,974,2.548,975,2.605,976,2.605,977,2.605,978,3.32,979,2.605,980,1.907,981,1.907,982,1.672,983,1.781,984,3.042,985,3.111,986,3.111,987,2.665,988,1.863,989,2.665,990,3.111,991,3.042,992,3.184,993,1.907,994,1.907,995,1.907,996,2.975,997,3.396,998,1.821,999,2.127,1000,1.907,1001,1.863,1002,1.781,1003,3.042,1004,1.907,1005,1.707,1006,1.743,1007,1.907,1008,1.863,1009,1.334,1010,3.111,1011,3.396,1012,1.638,1013,1.821,1014,1.812,1015,2.665,1016,2.665,1017,2.665,1018,2.727,1019,2.605,1020,1.863,1021,1.863,1022,1.863,3209,4.153,3210,4.153,3211,4.153,3212,4.153,3213,4.153,3214,4.153]],["title/classes/PropertiesNSD.html",[0,0.341,1015,2.137]],["body/classes/PropertiesNSD.html",[0,0.692,2,0.271,3,0.039,4,0.034,5,0.039,7,0.191,9,1.01,11,0.929,12,0.367,13,1.471,14,0.061,15,0.235,18,0.102,19,0.006,20,0.431,21,0.129,24,0.154,31,1.527,34,0.091,37,0.671,44,0.459,45,1.216,47,1.901,53,0.008,54,0.008,55,0.008,56,0.008,91,1.741,99,1.546,103,0.866,104,0.881,106,1.107,109,1.276,171,0.292,239,1.618,259,1.877,342,1.047,372,1.004,379,0.524,411,1.853,412,1.154,419,1.08,421,1.137,422,1.474,433,1.12,444,1.072,448,3.252,476,1.452,485,1.9,487,0.624,500,1.298,501,1.232,514,0.852,538,0.67,573,1.047,576,1.61,579,2.084,584,1.099,586,1.255,588,1.865,589,2.064,611,1.286,615,2.179,616,2.179,618,2.179,619,1.587,620,2.825,621,1.418,622,1.919,623,1.556,624,1.556,625,1.527,626,1.498,627,1.498,629,1.393,640,1.732,644,1.556,761,1.618,777,2.772,780,3.461,789,1.618,805,1.86,956,2.68,957,1.921,958,1.921,959,2.743,960,1.877,961,1.877,962,1.877,963,2.68,965,2.68,967,2.68,969,2.68,970,2.68,971,2.68,972,2.68,973,2.68,974,2.562,975,2.62,976,2.62,977,2.62,978,3.523,979,2.62,980,1.921,981,1.921,982,1.685,983,1.795,984,2.62,985,1.877,986,1.877,987,2.68,988,1.877,989,2.68,990,1.877,991,2.62,992,3.198,993,1.921,994,1.921,995,1.921,996,2.988,997,3.408,998,1.835,999,2.138,1000,1.921,1001,1.877,1002,1.795,1003,3.055,1004,1.921,1005,1.72,1006,1.757,1007,1.921,1008,1.877,1009,1.344,1010,3.125,1011,3.408,1012,1.651,1013,1.835,1014,1.822,1015,3.125,1016,3.408,1017,3.408,1018,3.488,1019,2.62,1020,1.877,1021,1.877,1022,1.877,3215,4.185,3216,4.185,3217,4.185]],["title/classes/PropertiesSSD.html",[0,0.341,1019,2.089]],["body/classes/PropertiesSSD.html",[0,0.691,2,0.269,3,0.039,4,0.034,5,0.039,7,0.19,9,1.008,11,0.927,12,0.364,13,1.464,14,0.061,15,0.235,18,0.111,19,0.006,20,0.431,21,0.141,24,0.153,31,1.516,34,0.091,37,0.69,44,0.459,45,1.212,47,1.895,53,0.008,54,0.008,55,0.008,56,0.008,91,1.739,99,1.624,103,0.86,104,0.876,106,1.104,109,1.267,171,0.29,239,1.607,259,1.864,342,1.04,372,0.999,379,0.521,411,1.844,412,1.146,419,1.079,421,1.136,422,1.473,433,1.118,444,1.07,448,3.249,476,1.447,485,1.899,487,0.622,500,1.289,501,1.23,514,0.846,538,0.665,573,1.04,576,1.603,579,2.02,584,1.092,586,1.246,588,1.861,589,2.06,611,1.283,615,2.168,616,2.168,618,2.168,619,1.575,620,2.816,621,1.408,622,1.909,623,1.545,624,1.545,625,1.516,626,1.488,627,1.488,629,1.383,640,1.723,644,1.545,743,1.639,761,1.607,777,3.028,780,3.457,789,1.607,805,1.852,956,2.666,957,1.908,958,1.908,959,2.729,960,1.864,961,1.864,962,1.864,963,2.666,965,2.666,967,2.666,969,2.666,970,2.666,971,2.666,972,2.666,973,2.666,974,2.549,975,2.606,976,2.606,977,2.606,978,3.513,979,2.606,980,1.908,981,1.908,982,1.673,983,1.783,984,2.606,985,1.864,986,1.864,987,2.666,988,1.864,989,2.666,990,1.864,991,2.606,992,3.186,993,1.908,994,1.908,995,1.908,996,2.976,997,3.397,998,1.822,999,2.128,1000,1.908,1001,1.864,1002,1.783,1003,3.043,1004,1.908,1005,1.708,1006,1.744,1007,1.908,1008,1.864,1009,1.335,1010,3.113,1011,3.397,1012,1.639,1013,1.822,1014,1.813,1015,2.666,1016,3.397,1017,3.397,1018,3.477,1019,3.043,1020,1.864,1021,1.864,1022,1.864,3218,4.156,3219,4.156,3220,4.156,3221,4.156]],["title/classes/PropertiesTSD.html",[0,0.341,612,2.809]],["body/classes/PropertiesTSD.html",[0,0.678,2,0.355,3,0.052,4,0.045,5,0.052,7,0.25,9,1.028,11,0.799,12,0.703,13,1.769,14,0.08,15,0.255,18,0.132,19,0.006,20,0.439,21,0.168,24,0.201,34,0.089,37,0.577,38,0.781,44,0.455,53,0.01,54,0.01,55,0.01,56,0.01,91,1.715,94,1.511,103,1.133,166,1.487,171,0.383,342,1.371,372,1.485,379,0.746,412,1.511,419,1.064,421,1.114,422,1.445,433,0.977,444,1.105,461,1.886,476,1.373,480,1.918,485,1.87,487,0.45,501,1.192,538,1.362,564,2.324,573,2.006,575,2.487,576,1.266,584,1.439,585,2.037,588,1.845,589,1.998,590,1.729,593,2.924,606,4.727,607,3.346,608,3.23,609,4.236,610,3.346,611,1.15,612,5.209,615,2.924,616,2.621,617,4.236,618,2.621,619,2.077,620,2.037,621,1.856,622,1.76,623,2.037,624,2.037,625,1.998,626,1.961,627,1.961,628,3.029,629,1.823,630,4.098,631,4.098,632,4.727,633,3.23,634,4.098,635,3.346,636,3.23,637,4.236,638,3.23,639,4.236,640,1.588,641,3.23,642,3.346,643,3.346,644,2.037,645,3.346,646,3.125,647,3.346,648,3.346,3222,5.478,3223,5.478,3224,5.478,3225,5.478,3226,5.478,3227,5.478]],["title/classes/RelationshipsExport.html",[0,0.341,1011,2.137]],["body/classes/RelationshipsExport.html",[0,0.693,2,0.276,3,0.04,4,0.035,5,0.04,7,0.194,9,1.013,11,0.934,12,0.373,13,1.488,14,0.062,15,0.228,18,0.088,19,0.006,20,0.433,21,0.112,24,0.156,31,1.552,34,0.091,37,0.71,44,0.459,45,1.225,47,1.759,53,0.008,54,0.008,55,0.008,56,0.008,91,1.744,103,0.88,104,0.891,106,1.054,109,1.298,171,0.297,239,1.645,259,1.908,342,1.065,372,1.016,379,0.53,411,1.875,412,1.174,419,1.082,421,1.139,422,1.477,433,1.123,444,1.076,448,3.261,476,1.463,485,1.904,487,0.629,500,1.32,501,1.211,514,0.866,538,0.681,573,1.065,576,1.624,579,2.036,584,1.117,586,1.276,588,1.822,589,2.028,611,1.225,615,2.205,616,2.205,618,2.205,619,1.613,620,2.846,621,1.441,622,2.258,623,1.582,624,1.582,625,1.552,626,1.523,627,1.523,629,1.416,640,1.752,644,2.247,761,1.645,777,2.789,780,3.395,789,1.645,805,1.877,956,2.711,957,1.953,958,1.953,959,2.775,960,1.908,961,1.908,962,1.908,963,2.711,965,2.711,967,2.711,969,2.711,970,2.711,971,2.711,972,3.153,973,2.711,974,2.593,975,2.65,976,2.65,977,2.65,978,3.356,979,2.65,980,1.953,981,1.953,982,1.713,983,1.825,984,2.65,985,1.908,986,1.908,987,2.711,988,1.908,989,2.711,990,1.908,991,2.65,992,3.227,993,1.953,994,1.953,995,1.953,996,3.015,997,3.433,998,1.866,999,2.164,1000,1.953,1001,1.908,1002,1.825,1003,3.083,1004,1.953,1005,1.748,1006,1.786,1007,1.953,1008,1.908,1009,1.367,1010,3.153,1011,3.626,1012,2.773,1013,1.866,1014,1.843,1015,2.711,1016,2.711,1017,2.711,1018,2.775,1019,2.65,1020,1.908,1021,1.908,1022,1.908,3228,4.255,3229,4.255]],["title/classes/ReteConnection.html",[0,0.341,463,2.24]],["body/classes/ReteConnection.html",[0,0.673,2,0.323,3,0.047,4,0.041,5,0.047,9,0.751,11,0.982,12,0.592,14,0.073,15,0.19,18,0.12,19,0.006,20,0.434,21,0.152,24,0.346,34,0.091,38,0.962,39,1.534,44,0.375,46,1.93,53,0.009,54,0.009,55,0.009,56,0.009,94,1.377,103,1.397,116,3.029,127,1.576,162,2.463,171,0.349,177,1.925,202,1.797,219,1.978,277,2.739,286,3.783,342,1.249,343,2.751,345,1.632,367,2.534,368,2.604,369,1.807,370,2.247,376,1.083,379,0.816,382,1.925,385,2.896,386,2.435,387,2.406,388,2.896,389,2.406,390,2.663,391,2.406,392,3.513,393,2.604,394,3.513,395,2.604,396,3.513,397,2.604,398,3.175,399,2.468,400,3.517,401,2.347,402,2.544,403,1.522,404,2.095,405,2.207,406,1.894,407,1.925,408,2.247,409,2.292,410,2.468,411,2.544,412,2.111,413,3.688,414,3.212,415,3.212,416,3.212,417,4.539,418,4.364,419,0.751,420,2.896,421,0.794,422,1.029,423,3.427,424,2.56,425,3.522,426,3.522,427,2.611,428,2.373,429,3.522,430,2.775,431,3.513,432,2.604,433,0.608,434,2.095,435,2.604,436,2.604,437,2.239,438,2.604,439,3.522,440,3.029,441,3.522,442,2.059,443,2.961,444,0.933,445,3.212,446,3.522,447,2.604,448,1.722,449,2.604,450,2.347,451,2.189,452,2.189,453,1.722,454,2.141,455,2.604,456,2.604,457,2.347,458,3.254,459,2.468,460,2.292,461,1.066,462,3.175,463,4.151,464,3.688,465,3.688,466,3.427,467,4.161,468,3.951,469,3.517,470,3.522,471,3.991,472,3.884,473,3.433,474,2.406,475,4.161,476,0.954,477,2.534,478,2.347,479,2.406,3230,4.992,3231,4.992,3232,4.992,3233,4.992]],["title/classes/ReteHostInfo.html",[0,0.341,385,2.044]],["body/classes/ReteHostInfo.html",[0,0.475,2,0.315,3,0.046,4,0.04,5,0.046,7,0.222,8,1.96,11,0.944,12,0.8,14,0.071,15,0.187,18,0.139,19,0.006,20,0.424,21,0.172,24,0.335,29,2.17,34,0.071,37,0.652,44,0.345,45,1.063,53,0.009,54,0.009,55,0.009,56,0.009,57,1.352,84,1.125,103,1.563,104,0.979,114,0.991,136,2.265,137,1.592,166,1.321,168,2.392,171,0.528,177,1.143,180,1.278,189,2.618,202,2.105,251,1.107,267,2.517,268,1.92,269,1.882,277,2.719,278,3.999,343,1.564,344,1.96,345,1.592,369,1.467,375,3.725,376,1.76,379,0.768,385,3.48,386,2.417,390,1.92,419,0.84,421,0.572,428,2.333,433,0.809,444,0.989,479,3.91,487,0.769,501,0.682,513,1.62,572,1.845,588,1.056,611,1.063,640,1.411,653,1.92,678,2.848,697,1.485,735,2.249,784,5.36,795,2.749,796,2.559,805,2.267,829,2.275,831,2.249,841,2.001,849,1.92,853,2.135,855,2.471,859,2.135,868,2.289,873,3.282,874,2.539,889,1.81,999,1.743,1009,2.973,1014,1.485,1039,2.471,1052,2.471,1117,1.846,1176,2.613,1252,2.289,1282,2.539,1283,2.346,1391,3.563,1433,3.282,1456,2.539,1581,2.539,1583,2.539,1611,2.471,1612,3.447,1617,5.101,1624,6.165,1673,2.539,1699,2.471,1715,6.205,1737,2.978,1819,2.613,1977,5.146,1978,5.146,1979,5.146,2277,3.999,2278,3.67,2286,3.67,2287,2.692,2289,4.557,2290,3.67,2291,3.563,2292,3.67,2293,3.67,2294,2.692,2295,2.613,2296,2.692,2300,2.692,2305,2.692,2307,2.692,2308,2.692,2309,2.692,2310,2.692,2311,2.613,2312,2.613,2313,2.692,2314,2.692,2317,2.692,2318,2.692,2324,2.407,2325,2.407,2326,2.692,2327,4.344,2328,5.477,2329,2.692,2330,3.563,2331,2.613,2332,2.613,2333,2.613,2334,2.613,2335,4.344,2336,2.692,2337,2.692,2338,2.692,2339,2.692,2340,2.692,2341,3.67,2342,3.67,2343,2.692,2344,2.692,2345,2.692,2346,2.692,2347,2.692,3234,4.869,3235,4.869,3236,4.869,3237,4.869,3238,4.869,3239,4.869,3240,3.999,3241,3.999,3242,3.999]],["title/classes/ReteMirroringModuleInstanceInfo.html",[0,0.341,392,2.187]],["body/classes/ReteMirroringModuleInstanceInfo.html",[0,0.466,2,0.307,3,0.045,4,0.038,5,0.045,7,0.216,8,1.906,11,0.935,12,0.795,14,0.069,15,0.183,18,0.142,19,0.006,20,0.401,21,0.177,24,0.333,29,2.13,34,0.07,37,0.645,38,1.061,44,0.34,45,1.043,53,0.009,54,0.009,55,0.009,56,0.009,57,1.326,84,1.094,103,1.54,104,0.96,114,0.964,136,2.233,137,1.548,166,1.285,168,2.365,171,0.52,177,1.112,180,1.263,192,2.569,202,2.09,251,1.077,267,2.469,268,1.868,269,1.831,277,1.469,343,1.521,344,1.906,345,1.548,369,1.446,372,1.252,375,4.384,376,2.071,379,0.737,386,1.306,392,3.861,403,2.65,414,3.126,415,3.126,416,3.126,419,0.828,421,0.557,428,2.289,433,0.908,444,0.978,480,1.988,487,0.765,501,0.664,513,1.576,538,1.192,572,1.824,583,1.906,588,1.027,590,2.351,591,2.823,611,1.043,640,1.373,653,1.868,678,2.794,697,1.444,735,2.849,795,2.717,796,2.523,805,2.245,829,2.249,831,2.207,841,1.946,849,1.868,853,2.077,855,2.403,859,2.077,868,2.227,873,3.22,874,2.47,889,1.761,1009,2.913,1014,1.444,1039,2.403,1052,2.403,1117,1.795,1176,2.541,1252,2.227,1282,2.47,1283,2.282,1391,3.496,1433,3.22,1461,2.541,1466,3.438,1581,2.47,1583,2.47,1584,5.005,1594,5.555,1611,2.403,1612,3.43,1673,2.47,1699,2.403,1737,2.922,1819,2.541,2278,3.602,2286,3.602,2287,2.618,2289,4.513,2290,3.602,2291,3.496,2292,3.602,2293,3.602,2294,2.618,2295,2.541,2296,2.618,2300,2.618,2305,2.618,2307,2.618,2308,2.618,2309,2.618,2310,2.618,2311,2.541,2312,2.541,2313,2.618,2314,2.618,2317,2.618,2318,2.618,2324,2.341,2325,2.341,2326,2.618,2329,2.618,2330,5.088,2331,2.541,2332,2.541,2333,2.541,2334,2.541,2336,2.618,2337,2.618,2338,2.618,2339,2.618,2340,2.618,2341,3.602,2342,3.602,2343,2.618,2344,2.618,2345,2.618,2346,2.618,2347,2.618,2400,3.89,2408,4.226,2409,6.644,2410,4.226,3243,3.89,3244,3.89,3245,3.89,3246,3.89,3247,3.89,3248,3.89,3249,3.89,3250,3.639,3251,3.639,3252,3.639,3253,3.639,3254,3.639,3255,3.639]],["title/classes/ReteModuleComposerSettings.html",[0,0.341,3256,4.251]],["body/classes/ReteModuleComposerSettings.html",[0,0.36,2,0.326,3,0.047,4,0.041,5,0.047,7,0.23,14,0.073,15,0.191,18,0.129,19,0.006,21,0.168,24,0.352,34,0.047,44,0.376,53,0.009,54,0.009,55,0.009,56,0.009,57,1.023,84,1.774,97,0.945,98,1.161,99,0.93,104,1,107,2.909,108,3.073,109,2.507,114,1.381,136,2.465,145,2.485,168,2,170,3.751,180,0.792,202,2.248,245,1.782,251,1.143,252,1.533,267,1.905,268,1.982,269,3.674,338,2.788,360,3.862,386,2.537,419,0.755,427,2.623,469,2.91,480,1.342,487,0.756,509,1.672,519,1.533,572,1.143,678,3.294,697,2.342,735,1.703,780,3.436,795,2.298,796,2.298,829,1.902,831,2.298,844,5.572,849,2.676,1045,6.111,1054,2.697,1080,2.551,1279,2.975,1346,2.697,1561,3.07,1562,2.621,1569,2.307,1570,2.779,1609,5.431,1612,1.833,1653,4.686,1945,3.751,2142,4.128,2242,2.867,2258,2.964,2264,4,2324,2.485,2325,2.485,2432,3.07,2448,4,2845,3.649,3200,3.649,3256,7.336,3257,7.065,3258,5.026,3259,6.317,3260,5.212,3261,5.212,3262,5.212,3263,6.797,3264,7.444,3265,5.9,3266,6.317,3267,5.212,3268,6.596,3269,6.784,3270,5.026,3271,5.026,3272,5.026,3273,5.026,3274,5.026,3275,5.212,3276,3.862,3277,3.862,3278,4.485,3279,3.862,3280,3.649,3281,3.649,3282,3.862,3283,3.862,3284,3.862,3285,3.472,3286,3.862,3287,3.472,3288,4.485,3289,4.128,3290,5.212,3291,3.862,3292,3.862,3293,3.649,3294,3.862,3295,3.862,3296,3.862,3297,3.862,3298,3.862,3299,3.862,3300,3.862,3301,3.862,3302,3.862,3303,3.862,3304,3.862,3305,3.862,3306,3.862,3307,3.649,3308,3.862,3309,3.649,3310,3.862,3311,5.9,3312,3.862,3313,3.862,3314,3.862,3315,3.862,3316,3.862,3317,3.862,3318,3.862,3319,3.862,3320,3.862,3321,3.862,3322,5.212,3323,3.862,3324,3.862,3325,3.862,3326,3.862,3327,3.862,3328,3.862,3329,3.862,3330,3.649,3331,3.862,3332,3.862,3333,3.862]],["title/classes/ReteModuleVisualizerSettings.html",[0,0.341,3334,4.251]],["body/classes/ReteModuleVisualizerSettings.html",[0,0.316,2,0.286,3,0.042,4,0.036,5,0.042,7,0.202,14,0.064,15,0.175,18,0.124,19,0.006,21,0.166,24,0.347,34,0.042,44,0.388,53,0.008,54,0.008,55,0.008,56,0.008,57,1.264,84,1.658,97,0.831,98,1.021,99,0.818,104,0.915,107,2.778,108,2.935,109,2.719,114,1.264,136,2.333,145,3.068,168,2.294,170,3.696,180,0.696,202,2.217,245,1.63,251,1.411,252,1.893,267,1.674,268,1.742,269,3.676,338,2.551,360,3.394,386,2.499,419,0.69,427,3.009,469,2.662,480,1.179,487,0.732,509,1.47,519,1.893,540,2.662,549,2.662,572,1.005,678,3.647,697,2.593,711,2.918,735,1.496,780,3.418,795,2.103,796,2.103,823,2.498,829,2.182,831,2.637,849,3.354,1045,5.873,1054,3.331,1080,3.15,1167,3.936,1279,2.721,1346,3.331,1561,2.698,1562,3.237,1569,3.294,1570,2.442,1609,5.416,1612,1.611,1653,4.287,1945,4.303,2242,3.54,2258,3.659,2264,4.589,2324,2.183,2325,2.183,2432,3.79,2448,4.589,2845,4.506,3200,4.506,3257,6.962,3259,6.533,3260,4.768,3261,4.768,3262,4.768,3263,6.533,3264,7.305,3265,5.513,3266,5.98,3267,4.768,3268,6.3,3275,6.533,3276,3.394,3277,3.394,3278,3.941,3279,3.394,3280,3.207,3281,3.207,3282,3.394,3283,3.394,3284,3.394,3285,3.051,3286,3.394,3287,3.051,3288,3.941,3289,3.628,3290,4.768,3291,3.394,3292,3.394,3293,3.207,3294,3.394,3295,3.394,3296,3.394,3297,3.394,3298,4.768,3299,4.768,3300,4.768,3301,3.394,3302,3.394,3303,3.394,3304,4.768,3305,4.768,3306,4.768,3307,3.207,3308,3.394,3309,3.207,3310,3.394,3311,5.98,3312,4.768,3313,4.768,3314,4.768,3315,4.768,3316,4.768,3317,4.768,3318,4.768,3319,4.768,3320,4.768,3321,4.768,3322,5.513,3323,4.768,3324,4.768,3325,4.768,3326,4.768,3327,4.768,3328,4.768,3329,3.394,3330,3.207,3331,4.768,3332,4.768,3333,4.768,3334,6.944,3335,4.417,3336,6.206,3337,6.944,3338,6.206,3339,4.417,3340,4.417,3341,4.417,3342,4.417,3343,4.417,3344,4.417,3345,5.538,3346,4.417,3347,3.941]],["title/classes/ReteNetworkInfo.html",[0,0.341,388,2.044]],["body/classes/ReteNetworkInfo.html",[0,0.489,2,0.33,3,0.048,4,0.041,5,0.048,7,0.232,8,2.048,11,0.959,12,0.808,14,0.074,15,0.193,18,0.136,19,0.006,20,0.381,21,0.165,24,0.339,29,2.236,34,0.073,37,0.664,44,0.353,45,1.095,53,0.009,54,0.009,55,0.009,56,0.009,57,1.392,84,1.175,103,1.598,104,1.008,114,1.036,136,2.316,137,1.663,166,1.38,168,2.436,171,0.54,177,1.194,180,1.301,198,2.697,202,2.129,251,1.157,267,2.592,268,2.006,269,1.967,277,2.397,343,1.634,344,2.048,345,1.663,369,1.5,375,3.793,376,1.792,386,2.131,388,3.314,390,2.006,419,0.859,421,0.598,428,2.403,433,0.834,444,1.007,487,0.776,501,0.713,513,1.693,572,1.879,579,1.233,588,1.103,611,1.095,640,1.475,653,2.006,678,2.933,697,1.551,735,2.317,795,2.799,796,2.617,805,2.301,829,2.317,831,2.317,841,2.09,849,2.006,853,2.231,855,2.582,859,2.231,868,2.392,873,3.381,874,2.653,889,1.891,916,2.392,1009,3.001,1014,1.551,1039,2.582,1052,2.582,1117,1.928,1176,2.73,1252,2.392,1282,2.653,1283,2.451,1391,3.67,1433,3.381,1434,5.609,1456,2.653,1581,2.653,1583,2.653,1611,2.582,1612,3.474,1619,3.908,1626,6.259,1673,2.653,1699,2.582,1720,6.345,1737,3.068,1819,2.73,2278,3.781,2286,3.781,2287,2.812,2289,4.626,2290,3.781,2291,3.67,2292,3.781,2293,3.781,2294,2.812,2295,2.73,2296,2.812,2300,2.812,2305,2.812,2307,2.812,2308,2.812,2309,2.812,2310,2.812,2311,2.73,2312,2.73,2313,2.812,2314,2.812,2317,2.812,2318,2.812,2324,2.514,2325,2.514,2326,2.812,2328,5.705,2329,2.812,2331,2.73,2332,2.73,2333,2.73,2334,2.73,2336,2.812,2337,2.812,2338,2.812,2339,2.812,2340,2.812,2341,3.781,2342,3.781,2343,2.812,2344,2.812,2345,2.812,2346,2.812,2347,2.812,2758,4.178,2766,4.539,2767,7.372,2768,7.372,2769,4.539,2770,4.539,3240,4.178,3241,4.178,3242,4.178,3348,5.087,3349,5.087,3350,5.087]],["title/classes/ReteSubnetInfo.html",[0,0.341,390,1.879]],["body/classes/ReteSubnetInfo.html",[0,0.483,2,0.324,3,0.047,4,0.041,5,0.047,7,0.228,8,2.011,11,0.953,12,0.805,14,0.073,15,0.19,18,0.137,19,0.006,20,0.411,21,0.168,24,0.337,29,2.209,34,0.072,37,0.659,44,0.35,45,1.082,53,0.009,54,0.009,55,0.009,56,0.009,57,1.376,84,1.154,103,1.584,104,0.996,106,0.931,114,1.017,136,2.295,137,1.633,166,1.356,168,2.418,171,0.535,177,1.173,180,1.292,202,2.12,207,2.665,251,1.136,267,2.561,268,1.971,269,1.932,277,2.544,343,1.605,344,2.011,345,1.633,369,1.486,375,3.765,376,1.779,379,0.592,386,2.262,390,3.379,419,0.852,421,0.587,428,2.374,433,0.823,444,1,487,0.773,501,0.7,513,1.663,538,1.313,572,1.865,588,1.084,611,1.082,640,1.448,653,1.971,678,2.898,697,1.524,735,2.289,777,1.724,789,3.171,792,5.665,795,2.779,796,2.594,805,2.287,829,2.3,831,2.289,841,2.053,849,1.971,853,2.191,855,2.536,859,2.191,868,2.349,873,3.34,874,2.606,889,1.858,1009,2.99,1014,1.524,1039,2.536,1052,2.536,1117,1.894,1176,2.681,1252,2.349,1282,2.606,1283,2.408,1391,3.626,1433,3.34,1456,2.606,1581,2.606,1583,2.606,1611,2.536,1612,3.463,1618,5.191,1628,6.22,1673,2.606,1699,2.536,1718,6.288,1737,3.031,1819,2.681,2278,3.736,2286,3.736,2287,2.762,2289,4.598,2290,3.736,2291,3.626,2292,3.736,2293,3.736,2294,2.762,2295,2.681,2296,2.762,2300,2.762,2305,2.762,2307,2.762,2308,2.762,2309,2.762,2310,2.762,2311,2.681,2312,2.681,2313,2.762,2314,2.762,2317,2.762,2318,2.762,2324,2.47,2325,2.47,2326,2.762,2328,5.514,2329,2.762,2330,3.626,2331,2.681,2332,2.681,2333,2.681,2334,2.681,2336,2.762,2337,2.762,2338,2.762,2339,2.762,2340,2.762,2341,3.736,2342,3.736,2343,2.762,2344,2.762,2345,2.762,2346,2.762,2347,2.762,3240,4.104,3241,4.104,3242,4.104,3351,4.104,3352,4.996,3353,4.996,3354,4.996,3355,4.996,3356,4.458,3357,4.458]],["title/classes/ReteTheaterComposerSettings.html",[0,0.341,3358,4.251]],["body/classes/ReteTheaterComposerSettings.html",[0,0.358,2,0.324,3,0.047,4,0.041,5,0.047,7,0.228,14,0.073,15,0.19,18,0.129,19,0.006,21,0.168,24,0.346,34,0.047,44,0.375,53,0.009,54,0.009,55,0.009,56,0.009,57,1.018,76,6.17,84,1.77,97,0.94,98,1.155,99,0.926,104,0.997,107,2.904,108,3.068,109,2.502,114,1.376,136,2.46,145,2.472,168,1.993,170,3.747,180,0.788,202,2.209,245,1.776,251,1.137,252,1.525,267,1.896,268,1.972,269,3.599,338,2.778,386,2.534,419,0.752,427,2.614,469,2.145,480,1.335,487,0.755,509,1.664,519,1.525,572,1.137,678,3.285,697,2.336,735,1.694,780,3.463,795,2.29,796,2.29,829,1.896,831,2.29,847,5.553,849,2.666,1045,6.102,1054,2.683,1080,2.538,1279,2.965,1346,2.683,1561,3.054,1562,2.608,1569,2.296,1570,2.765,1609,5.42,1612,1.824,1653,4.67,1945,3.738,2242,2.853,2258,2.948,2264,3.986,2324,2.472,2325,2.472,2432,3.054,2448,3.986,2845,3.63,3200,3.63,3257,7.057,3259,6.304,3260,5.194,3261,5.194,3262,5.194,3263,6.787,3264,7.438,3265,5.885,3266,6.304,3267,5.194,3268,6.585,3275,5.194,3276,3.842,3277,3.842,3279,3.842,3280,3.63,3281,3.63,3282,3.842,3283,3.842,3284,3.842,3285,3.454,3286,3.842,3287,3.454,3290,5.194,3291,3.842,3292,3.842,3293,3.63,3294,3.842,3295,3.842,3296,3.842,3297,3.842,3298,3.842,3299,3.842,3300,3.842,3301,3.842,3302,3.842,3303,3.842,3304,3.842,3305,3.842,3306,3.842,3307,3.63,3308,3.842,3309,3.63,3310,3.842,3311,5.194,3312,3.842,3313,3.842,3314,3.842,3315,3.842,3316,3.842,3317,3.842,3318,3.842,3319,3.842,3320,3.842,3321,3.842,3322,5.194,3323,3.842,3324,3.842,3325,3.842,3326,3.842,3327,3.842,3328,3.842,3329,3.842,3330,3.63,3331,3.842,3332,3.842,3333,3.842,3358,7.321,3359,5,3360,6.76,3361,5,3362,5,3363,5,3364,5,3365,5]],["title/classes/ReteTheaterInternalServiceModuleInstanceInfo.html",[0,0.341,394,2.187]],["body/classes/ReteTheaterInternalServiceModuleInstanceInfo.html",[0,0.466,2,0.307,3,0.045,4,0.038,5,0.045,7,0.216,8,1.906,11,0.935,12,0.795,14,0.069,15,0.183,18,0.142,19,0.006,20,0.401,21,0.177,24,0.333,29,2.13,34,0.07,37,0.645,38,1.061,44,0.34,45,1.043,53,0.009,54,0.009,55,0.009,56,0.009,57,1.326,84,1.094,103,1.54,104,0.96,114,0.964,136,2.233,137,1.548,166,1.285,168,2.365,171,0.52,177,1.112,180,1.263,202,2.09,210,2.569,251,1.077,267,2.469,268,1.868,269,1.831,277,1.469,343,1.521,344,1.906,345,1.548,369,1.446,372,1.252,375,4.384,376,2.071,379,0.737,386,1.306,394,3.861,403,2.65,414,3.126,415,3.126,416,3.126,419,0.828,421,0.557,428,2.289,433,0.908,444,0.978,480,1.988,487,0.765,501,0.664,513,1.576,538,1.192,572,1.824,583,1.906,588,1.027,590,2.351,591,2.823,611,1.043,640,1.373,653,1.868,678,2.794,697,1.444,735,2.849,795,2.717,796,2.523,805,2.245,829,2.249,831,2.207,841,1.946,849,1.868,853,2.077,855,2.403,859,2.077,868,2.227,873,3.22,874,2.47,889,1.761,1009,2.913,1014,1.444,1039,2.403,1052,2.403,1117,1.795,1176,2.541,1252,2.227,1282,2.47,1283,2.282,1391,3.496,1433,3.22,1461,2.541,1465,3.438,1581,2.47,1583,2.47,1586,5.005,1596,6.105,1611,2.403,1612,3.43,1673,2.47,1699,2.403,1737,2.922,1819,2.541,2278,3.602,2286,3.602,2287,2.618,2289,4.513,2290,3.602,2291,3.496,2292,3.602,2293,3.602,2294,2.618,2295,2.541,2296,2.618,2300,2.618,2305,2.618,2307,2.618,2308,2.618,2309,2.618,2310,2.618,2311,2.541,2312,2.541,2313,2.618,2314,2.618,2317,2.618,2318,2.618,2324,2.341,2325,2.341,2326,2.618,2329,2.618,2330,5.088,2331,2.541,2332,2.541,2333,2.541,2334,2.541,2336,2.618,2337,2.618,2338,2.618,2339,2.618,2340,2.618,2341,3.602,2342,3.602,2343,2.618,2344,2.618,2345,2.618,2346,2.618,2347,2.618,3243,3.89,3244,3.89,3245,3.89,3246,3.89,3247,3.89,3248,3.89,3249,3.89,3250,3.639,3251,3.639,3252,3.639,3253,3.639,3254,3.639,3255,3.639,3366,3.89,3367,6.644,3368,4.226,3369,4.226]],["title/classes/ReteTheaterModuleInstanceInfo.html",[0,0.341,396,2.187]],["body/classes/ReteTheaterModuleInstanceInfo.html",[0,0.466,2,0.307,3,0.045,4,0.038,5,0.045,7,0.216,8,1.906,11,0.935,12,0.795,14,0.069,15,0.183,18,0.142,19,0.006,20,0.401,21,0.177,24,0.333,29,2.13,34,0.07,37,0.645,38,1.061,44,0.34,45,1.043,53,0.009,54,0.009,55,0.009,56,0.009,57,1.326,84,1.094,103,1.54,104,0.96,114,0.964,136,2.233,137,1.548,166,1.285,168,2.365,171,0.52,177,1.112,180,1.263,202,2.09,211,2.569,251,1.077,267,2.469,268,1.868,269,1.831,277,1.469,343,1.521,344,1.906,345,1.548,369,1.446,372,1.252,375,4.384,376,2.071,379,0.737,386,1.306,396,3.861,403,2.65,414,3.126,415,3.126,416,3.126,419,0.828,421,0.557,428,2.289,433,0.908,444,0.978,480,1.988,487,0.765,501,0.664,513,1.576,538,1.192,572,1.824,583,1.906,588,1.027,590,2.351,591,2.823,611,1.043,640,1.373,653,1.868,678,2.794,697,1.444,735,2.849,795,2.717,796,2.523,805,2.245,829,2.249,831,2.207,841,1.946,849,1.868,853,2.077,855,2.403,859,2.077,868,2.227,873,3.22,874,2.47,889,1.761,1009,2.913,1014,1.444,1039,2.403,1052,2.403,1117,1.795,1176,2.541,1252,2.227,1282,2.47,1283,2.282,1391,3.496,1433,3.22,1461,2.541,1462,3.438,1581,2.47,1583,2.47,1585,5.005,1594,4.919,1598,4.729,1611,2.403,1612,3.43,1673,2.47,1699,2.403,1737,2.922,1819,2.541,2278,3.602,2286,3.602,2287,2.618,2289,4.513,2290,3.602,2291,3.496,2292,3.602,2293,3.602,2294,2.618,2295,2.541,2296,2.618,2300,2.618,2305,2.618,2307,2.618,2308,2.618,2309,2.618,2310,2.618,2311,2.541,2312,2.541,2313,2.618,2314,2.618,2317,2.618,2318,2.618,2324,2.341,2325,2.341,2326,2.618,2329,2.618,2330,5.088,2331,2.541,2332,2.541,2333,2.541,2334,2.541,2336,2.618,2337,2.618,2338,2.618,2339,2.618,2340,2.618,2341,3.602,2342,3.602,2343,2.618,2344,2.618,2345,2.618,2346,2.618,2347,2.618,3243,3.89,3244,3.89,3245,3.89,3246,3.89,3247,3.89,3248,3.89,3249,3.89,3250,3.639,3251,3.639,3252,3.639,3253,3.639,3254,3.639,3255,3.639,3370,3.89,3371,6.644,3372,4.226,3373,4.226]],["title/classes/ReteTheaterVisualizerSettings.html",[0,0.341,3374,4.251]],["body/classes/ReteTheaterVisualizerSettings.html",[0,0.32,2,0.29,3,0.042,4,0.036,5,0.042,7,0.204,14,0.065,15,0.176,18,0.125,19,0.006,21,0.166,24,0.338,34,0.042,44,0.39,53,0.008,54,0.008,55,0.008,56,0.008,57,1.274,84,1.669,97,0.841,98,1.033,99,0.828,104,0.923,107,2.79,108,2.948,109,2.727,114,1.274,136,2.346,145,3.094,168,2.307,170,3.705,180,0.704,202,2.161,245,1.644,251,1.423,252,1.909,267,1.695,268,1.763,269,3.597,338,2.572,386,2.506,419,0.696,427,3.025,469,1.917,480,1.193,487,0.735,509,1.488,519,1.909,540,2.685,549,2.685,572,1.017,678,3.661,697,2.603,735,1.515,780,3.425,795,2.12,796,2.12,823,2.519,829,2.194,831,2.651,849,3.366,1045,5.896,1054,3.359,1080,3.176,1167,3.969,1279,2.745,1346,3.359,1561,2.73,1562,3.264,1569,3.316,1570,2.472,1609,5.441,1612,1.631,1653,4.323,1945,4.326,2242,3.57,2258,3.69,2264,4.613,2324,2.21,2325,2.21,2432,3.823,2448,4.613,2845,4.544,3200,4.544,3257,6.981,3259,6.558,3260,4.809,3261,4.809,3262,4.809,3263,6.558,3264,7.318,3265,5.549,3266,6.011,3267,4.809,3268,6.328,3275,6.558,3276,3.435,3277,3.435,3279,3.435,3280,3.246,3281,3.246,3282,3.435,3283,3.435,3284,3.435,3285,3.088,3286,3.435,3287,3.088,3290,4.809,3291,3.435,3292,3.435,3293,3.246,3294,3.435,3295,3.435,3296,3.435,3297,3.435,3298,4.809,3299,4.809,3300,4.809,3301,3.435,3302,3.435,3303,3.435,3304,4.809,3305,4.809,3306,4.809,3307,3.246,3308,3.435,3309,3.246,3310,3.435,3311,6.011,3312,4.809,3313,4.809,3314,4.809,3315,4.809,3316,4.809,3317,4.809,3318,4.809,3319,4.809,3320,4.809,3321,4.809,3322,5.549,3323,4.809,3324,4.809,3325,4.809,3326,4.809,3327,4.809,3328,4.809,3329,3.435,3330,3.246,3331,4.809,3332,4.809,3333,4.809,3337,6.981,3345,5.585,3347,3.989,3374,6.981,3375,4.47,3376,6.259,3377,6.259,3378,4.47,3379,4.47,3380,4.47,3381,4.47,3382,4.47,3383,4.47]],["title/classes/SelectOption.html",[0,0.341,1108,2.809]],["body/classes/SelectOption.html",[0,0.686,2,0.397,3,0.058,4,0.05,5,0.058,7,0.28,9,0.859,11,0.859,14,0.089,15,0.217,18,0.142,19,0.006,20,0.435,21,0.157,27,1.03,32,1.69,34,0.09,37,0.62,41,2.984,46,2.369,47,1.533,49,1.452,50,3.394,53,0.011,54,0.011,55,0.011,56,0.011,99,1.429,106,1.222,127,1.934,180,1.398,352,2.076,369,1.641,379,0.537,420,2.628,487,0.634,519,2.706,611,1.535,622,1.968,725,3.495,733,3.495,827,2.813,1084,5.79,1085,4.762,1086,3.885,1087,4.026,1088,6.082,1089,3.885,1090,3.885,1096,3.495,1097,5.162,1098,3.612,1100,3.387,1101,3.885,1102,5.36,1103,3.742,1104,3.109,1105,3.742,1106,3.885,1107,3.885,1108,4.984,1109,3.495,1110,3.885,1111,3.742,1112,3.742,1113,4.026,1114,4.896,1115,4.896,1116,4.715,1117,2.926,1118,4.268,1119,3.885,1120,4.404,1121,3.742,1122,3.742,1123,3.742,1124,3.612,1125,3.742,3384,6.126,3385,6.126,3386,6.126]],["title/classes/SimpleAreaDTO.html",[0,0.341,408,1.585]],["body/classes/SimpleAreaDTO.html",[0,0.687,2,0.248,3,0.036,4,0.031,5,0.036,7,0.175,9,0.954,12,0.581,13,1.379,14,0.056,15,0.205,18,0.097,19,0.006,20,0.452,21,0.104,24,0.243,27,0.643,30,1.606,34,0.09,37,0.673,38,1.039,39,0.767,44,0.458,45,1.498,49,1.574,53,0.007,54,0.007,55,0.007,56,0.007,91,1.728,96,1.573,97,0.72,104,0.825,106,1.068,114,0.779,115,1.208,171,0.649,180,0.603,219,0.989,352,1.297,369,1.087,370,1.274,371,1.678,372,1.472,373,2.223,376,1.215,379,0.848,382,1.888,402,1.187,403,2.02,404,2.261,405,2.165,406,1.073,407,1.597,408,2.204,419,1.072,421,1.133,422,1.469,433,1.122,442,1.167,444,0.945,461,1.556,476,1.266,480,1.946,484,1.717,485,1.894,486,2.971,487,0.774,488,2.971,489,2.512,496,2.351,497,2.351,498,1.717,499,2.56,500,1.187,501,0.536,502,1.717,503,1.642,504,1.396,505,1.717,506,1.717,507,1.717,508,1.717,509,1.274,510,1.642,511,1.717,512,1.678,513,1.274,514,0.779,515,1.48,516,3.126,517,1.717,518,1.717,519,1.167,520,1.717,521,2.402,522,1.717,523,2.512,524,1.717,525,1.717,526,1.606,527,3.67,528,1.37,529,1.678,530,1.717,531,2.402,532,1.717,533,1.717,534,1.717,535,1.717,536,1.717,537,1.717,538,1.167,539,1.717,540,1.642,541,2.402,542,1.451,543,2.351,544,1.717,545,1.717,546,2.456,547,1.717,548,1.717,549,2.841,550,1.717,551,1.396,552,1.396,553,1.396,554,1.396,555,1.396,556,1.396,557,1.396,558,1.396,559,1.396,560,1.717,561,1.717,562,1.717,563,1.678,564,1.623,565,1.678,566,1.678,567,1.678,568,1.678,569,1.678,570,1.678,571,1.678,572,0.87,573,1.401,574,1.678,575,1.737,576,0.884,577,1.717,578,1.717,579,0.928,580,1.717,581,1.606,582,1.642,583,2.254,584,1.005,585,1.423,586,1.147,587,2.512,588,1.215,589,1.821,590,1.208,591,1.451,592,2.456,593,1.396,594,1.678,595,2.971,596,1.678,597,1.423,598,2.904,599,2.285,600,1.642,601,1.717,602,1.606,603,1.451,604,1.717,605,1.451,3387,3.827,3388,3.827]],["title/classes/SimpleModuleApplication.html",[0,0.341,462,2.24]],["body/classes/SimpleModuleApplication.html",[0,0.652,2,0.276,3,0.04,4,0.035,5,0.04,7,0.194,9,0.782,11,0.961,12,0.53,14,0.062,15,0.17,18,0.142,19,0.006,20,0.437,21,0.181,24,0.335,34,0.089,37,0.486,38,0.861,39,1.409,44,0.384,46,1.645,49,1.137,53,0.008,54,0.008,55,0.008,56,0.008,94,1.174,99,1.119,103,1.454,106,0.586,116,2.711,127,1.343,162,2.205,171,0.491,177,1.797,202,1.65,219,2.089,277,2.606,286,3.784,342,1.065,343,2.597,345,1.391,367,2.159,368,2.219,369,1.769,370,2.011,372,1.016,373,1.843,375,4.367,376,2.074,379,0.829,382,1.723,385,2.593,386,2.317,387,2.05,388,2.593,389,2.05,390,2.384,391,2.05,392,3.227,393,2.219,394,3.227,395,2.219,396,3.227,397,2.219,398,2.842,399,2.103,400,3.468,401,2.001,402,2.508,403,1.298,404,2.995,405,1.976,406,1.695,407,1.723,408,2.011,409,1.953,410,2.103,411,2.375,412,2.23,413,3.896,414,3.394,415,3.394,416,3.394,417,4.503,418,4.271,419,0.782,420,3.015,421,0.826,422,1.071,423,3.568,424,2.665,425,3.667,426,3.667,427,2.718,428,2.47,429,3.667,430,2.889,431,3.514,432,2.219,433,0.519,434,1.786,435,2.219,436,2.219,437,1.908,438,2.219,439,3.153,440,2.711,441,3.153,442,1.843,443,2.65,444,0.933,445,2.951,446,3.153,447,2.219,448,1.468,449,2.219,450,2.001,451,1.866,452,1.866,453,1.468,454,1.825,455,2.219,456,2.219,457,2.001,458,3.388,459,2.103,460,2.775,461,1.29,462,3.305,463,3.801,464,2.05,465,2.05,466,3.068,467,3.885,468,3.689,469,3.283,470,3.153,471,3.667,472,3.568,473,3.153,474,2.05,475,3.885,476,0.813,477,2.159,478,2.001,479,2.05,538,0.968,543,1.786,551,2.205,552,2.205,553,2.205,554,2.205,555,2.205,556,2.205,557,2.205,558,2.205,559,2.205,807,1.908,2562,3.494,2563,3.494,2564,3.494,2565,3.494,2566,3.494,2567,3.494,2568,3.494,2569,3.494,2570,3.494,2571,3.494,2572,3.494,2573,3.494,2574,3.494,2575,3.494,2576,3.494,3389,4.255,3390,4.255,3391,4.255,3392,4.255,3393,4.255,3394,4.255]],["title/classes/SimpleModuleDTO.html",[0,0.341,404,1.478]],["body/classes/SimpleModuleDTO.html",[0,0.682,2,0.233,3,0.034,4,0.029,5,0.034,7,0.164,9,0.938,12,0.62,13,1.318,14,0.053,15,0.199,18,0.136,19,0.006,20,0.452,21,0.172,24,0.235,27,0.605,30,1.511,34,0.09,37,0.692,38,1.009,39,0.722,44,0.456,45,1.471,49,1.621,53,0.007,54,0.007,55,0.007,56,0.007,91,1.715,96,1.48,97,0.677,99,0.991,104,0.789,106,1.092,114,0.733,115,1.137,171,0.651,180,0.567,219,0.931,352,1.22,369,1.039,370,1.198,371,1.579,372,1.449,373,2.417,376,1.161,379,0.848,382,1.822,402,1.117,403,1.949,404,2.346,405,2.089,406,1.01,407,1.526,408,1.781,419,1.064,421,1.125,422,1.458,433,1.11,442,1.098,444,0.966,461,1.614,476,1.221,480,1.429,484,1.615,485,1.88,486,2.401,487,0.755,488,2.401,489,2.401,496,2.247,497,2.247,498,1.615,499,2.471,500,1.117,501,0.505,502,1.615,503,1.544,504,1.313,505,1.615,506,1.615,507,1.615,508,1.615,509,1.198,510,1.544,511,1.615,512,1.579,513,1.198,514,0.733,515,1.392,516,3.035,517,1.615,518,1.615,519,1.098,520,1.615,521,2.296,522,1.615,523,2.401,524,1.615,525,1.615,526,1.511,527,3.599,528,1.289,529,1.579,530,1.615,531,2.296,532,1.615,533,1.615,534,1.615,535,1.615,536,1.615,537,1.615,538,1.269,539,1.615,540,1.544,541,2.296,542,1.365,543,2.683,544,1.615,545,1.615,546,2.348,547,1.615,548,1.615,549,2.741,550,2.401,551,2.331,552,2.331,553,2.331,554,2.331,555,2.331,556,2.331,557,2.331,558,2.331,559,2.331,560,1.615,561,1.615,562,1.615,563,1.579,564,1.552,565,1.579,566,1.579,567,1.579,568,1.579,569,1.579,570,1.579,571,1.579,572,0.819,573,1.34,574,1.579,575,1.661,576,0.832,577,1.615,578,1.615,579,0.873,580,1.615,581,1.511,582,1.544,583,2.155,584,0.946,585,1.339,586,1.08,587,2.401,588,1.161,589,1.775,590,1.137,591,1.365,592,2.348,593,1.313,594,1.579,595,2.867,596,1.579,597,1.339,598,2.802,599,2.205,600,1.544,601,1.615,602,1.511,603,1.365,604,1.615,605,1.365,3395,3.601,3396,3.601,3397,3.601,3398,3.601,3399,3.601,3400,3.601,3401,3.601,3402,3.601,3403,3.601,3404,3.601,3405,3.601,3406,3.601,3407,3.601,3408,3.601,3409,3.601]],["title/classes/SingleDataInputReturned.html",[0,0.341,1120,2.718]],["body/classes/SingleDataInputReturned.html",[0,0.685,2,0.394,3,0.057,4,0.049,5,0.057,7,0.278,9,0.676,11,0.676,14,0.089,15,0.216,18,0.142,19,0.006,20,0.437,21,0.164,27,1.292,32,1.678,34,0.09,37,0.711,41,2.971,46,2.971,47,1.522,49,1.665,50,3.388,53,0.011,54,0.011,55,0.011,56,0.011,106,1.219,127,2.426,180,1.394,352,2.061,369,1.636,379,0.533,420,2.609,487,0.631,519,2.699,611,1.533,622,1.954,725,3.47,733,3.47,827,2.792,1084,5.781,1085,4.898,1086,3.857,1087,4.394,1088,6.073,1089,3.857,1090,3.857,1096,3.47,1097,5.145,1098,3.586,1100,3.363,1101,3.857,1102,5.343,1103,3.715,1104,3.087,1105,3.715,1106,3.857,1107,3.857,1108,4.531,1109,3.47,1110,3.857,1111,3.715,1112,3.715,1113,3.172,1114,3.857,1115,3.857,1116,3.715,1117,3.193,1118,4.249,1119,3.857,1120,4.806,1121,3.715,1122,3.715,1123,3.715,1124,3.586,1125,4.693,3410,6.082,3411,6.082,3412,6.082,3413,6.082]],["title/classes/SortDTO.html",[0,0.341,497,2]],["body/classes/SortDTO.html",[0,0.602,2,0.457,3,0.066,4,0.057,5,0.066,7,0.322,12,0.737,14,0.103,15,0.237,18,0.139,19,0.006,20,0.397,21,0.167,34,0.079,44,0.425,53,0.013,54,0.013,55,0.013,56,0.013,91,1.508,106,1.356,379,0.788,419,0.936,421,0.989,422,1.282,485,1.659,487,0.691,496,2.958,497,3.775,510,3.023,513,2.992,1290,6.909,1484,6.108,1686,5.811,2849,6.289,2850,6.289,2851,6.289,2852,6.289,2853,6.289,2854,6.289,2855,6.289,2862,8.024,2863,8.024,3414,7.048,3415,7.048,3416,7.048,3417,7.048]],["title/classes/SourceExport.html",[0,0.341,637,2.809]],["body/classes/SourceExport.html",[0,0.68,2,0.361,3,0.052,4,0.045,5,0.052,7,0.255,9,1.032,11,0.808,12,0.708,13,1.789,14,0.081,15,0.25,18,0.118,19,0.006,20,0.439,21,0.15,24,0.205,34,0.089,37,0.584,38,0.794,44,0.456,53,0.01,54,0.01,55,0.01,56,0.01,91,1.72,94,1.537,103,1.152,166,1.512,171,0.389,342,1.394,372,1.359,379,0.708,412,2.229,419,1.067,421,1.118,422,1.449,433,1.044,444,1.11,461,1.828,476,1.388,480,1.939,485,1.876,487,0.597,501,1.245,538,1.163,564,1.615,573,1.394,575,1.729,576,1.287,584,1.463,585,3.005,588,1.926,589,2.085,590,1.759,593,2.032,606,4.283,607,3.403,608,3.285,609,4.283,610,3.403,611,1.163,612,5.05,615,2.65,616,2.65,617,4.283,618,2.65,619,2.112,620,2.071,621,1.888,622,1.79,623,2.071,624,2.071,625,2.032,626,1.994,627,1.994,628,3.08,629,1.854,630,4.144,631,4.144,632,4.283,633,3.285,634,4.144,635,3.403,636,3.285,637,4.765,638,3.285,639,4.283,640,2.106,641,4.283,642,3.403,643,3.403,644,2.071,645,3.403,646,3.178,647,3.403,648,3.403,999,2.6,3418,5.571,3419,5.571,3420,5.571]],["title/classes/SpinnerData.html",[0,0.341,3421,3.913]],["body/classes/SpinnerData.html",[0,0.558,2,0.404,3,0.059,4,0.051,5,0.059,7,0.285,11,0.868,14,0.091,15,0.22,18,0.114,19,0.006,20,0.376,21,0.145,24,0.313,26,1.663,29,2.037,34,0.059,37,0.501,44,0.389,50,3.406,53,0.012,54,0.012,55,0.012,56,0.012,59,2.409,65,5.117,69,3.162,74,2.615,80,6.411,81,6.167,84,1.439,93,6.646,102,2.615,103,1.614,106,1.173,111,6.544,114,1.909,115,2.902,130,4.115,136,2.554,251,1.417,297,4.787,332,2.316,419,0.868,424,2.362,487,0.641,611,1.249,649,3.14,674,3.343,675,3.162,697,1.9,829,1.747,843,5.994,861,4.303,1298,3.444,1365,5.994,1670,5.117,1686,4.303,1818,4.948,1877,5.117,2432,5.812,2448,4.6,2477,5.117,2820,5.117,3421,6.995,3422,5.559,3423,6.23,3424,6.23,3425,6.961,3426,7.965,3427,5.117,3428,5.559,3429,5.559,3430,5.559,3431,5.559,3432,5.559,3433,5.559,3434,5.559,3435,6.961,3436,5.559,3437,5.559,3438,5.559,3439,5.559,3440,5.559,3441,5.559,3442,5.559,3443,5.559]],["title/injectables/SpinnerService.html",[81,3.291,649,1.918]],["body/injectables/SpinnerService.html",[0,0.526,3,0.053,4,0.046,5,0.053,7,0.259,11,0.632,14,0.083,15,0.207,18,0.119,19,0.006,20,0.381,21,0.16,24,0.3,26,1.516,29,2.404,34,0.053,37,0.456,44,0.418,50,3.336,53,0.01,54,0.01,55,0.01,56,0.01,59,2.843,65,6.04,69,2.882,74,3.424,80,6.503,81,6.173,84,1.885,93,6.771,97,1.383,98,1.699,99,1.361,102,3.087,103,1.175,106,1.188,107,2.491,108,2.633,111,6.628,114,1.943,115,2.941,130,3.751,136,2.446,245,1.932,251,1.855,252,1.732,297,4.363,332,2.734,419,0.632,424,2.788,487,0.709,611,0.909,649,2.96,651,3.047,674,3.047,675,2.882,697,1.732,829,2.062,843,6.628,861,5.08,1298,4.066,1365,6.628,1670,6.04,1686,5.08,1818,5.471,1877,6.04,2432,5.591,2448,5.087,2477,6.04,2820,6.04,3421,7.085,3422,5.067,3425,7.698,3426,8.169,3427,6.04,3428,6.562,3429,6.562,3430,6.562,3431,6.562,3432,6.562,3433,6.562,3434,6.562,3435,7.278,3436,5.067,3437,6.562,3438,7.698,3439,5.067,3440,6.562,3441,5.067,3442,5.067,3443,5.067,3444,7.354,3445,5.679,3446,7.354,3447,5.679,3448,5.679]],["title/classes/StatisticItemDTO.html",[0,0.341,546,2.089]],["body/classes/StatisticItemDTO.html",[0,0.686,2,0.246,3,0.036,4,0.031,5,0.036,7,0.174,9,0.972,12,0.578,13,1.372,14,0.055,15,0.205,18,0.106,19,0.006,20,0.452,21,0.122,24,0.242,27,0.639,30,1.595,34,0.09,37,0.671,38,1.035,39,0.762,44,0.458,45,1.496,49,1.571,53,0.007,54,0.007,55,0.007,56,0.007,91,1.727,96,1.562,97,0.715,104,0.821,106,1.065,114,0.774,115,1.199,171,0.648,180,0.599,219,0.982,352,2.234,369,1.082,370,1.264,371,1.666,372,1.404,373,2.215,376,1.208,379,0.855,382,1.88,402,1.179,403,2.011,404,2.253,405,2.156,406,1.066,407,1.588,408,1.854,419,1.071,421,1.132,422,1.468,433,1.121,442,1.159,444,0.942,461,1.551,476,1.26,480,1.487,484,1.705,485,1.893,486,2.499,487,0.768,488,2.499,489,2.499,496,2.338,497,2.338,498,1.705,499,2.55,500,1.179,501,0.532,502,1.705,503,1.63,504,1.386,505,1.705,506,1.705,507,1.705,508,1.705,509,1.264,510,1.63,511,1.705,512,1.666,513,1.264,514,0.774,515,1.469,516,3.115,517,1.705,518,1.705,519,1.159,520,1.705,521,2.389,522,1.705,523,2.499,524,1.705,525,1.705,526,1.595,527,3.662,528,1.36,529,1.666,530,1.705,531,2.389,532,1.705,533,1.705,534,1.705,535,1.705,536,1.705,537,1.705,538,1.163,539,1.705,540,1.63,541,2.389,542,1.44,543,2.338,544,1.705,545,2.499,546,2.892,547,2.958,548,2.958,549,2.389,550,1.705,551,1.386,552,1.386,553,1.386,554,1.386,555,1.386,556,1.386,557,1.386,558,1.386,559,1.386,560,1.705,561,1.705,562,1.705,563,1.666,564,1.615,565,1.666,566,1.666,567,1.666,568,1.666,569,1.666,570,1.666,571,1.666,572,0.864,573,1.394,574,1.666,575,1.728,576,0.878,577,1.705,578,1.705,579,0.921,580,1.705,581,1.595,582,1.63,583,2.242,584,0.998,585,1.413,586,1.139,587,2.499,588,1.208,589,1.815,590,1.199,591,1.44,592,2.443,593,1.386,594,1.666,595,2.958,596,1.666,597,1.413,598,2.892,599,2.275,600,1.63,601,1.705,602,1.595,603,1.44,604,1.705,605,1.44,3449,3.8,3450,3.8,3451,3.8]],["title/injectables/StorageService.html",[649,1.918,821,3.459]],["body/injectables/StorageService.html",[0,0.477,3,0.063,4,0.054,5,0.063,7,0.305,9,1.017,14,0.097,15,0.229,18,0.119,19,0.006,21,0.17,24,0.245,26,1.78,34,0.063,44,0.445,53,0.012,54,0.012,55,0.012,56,0.012,59,3.145,69,3.383,84,1.54,93,5.619,97,1.254,98,1.54,99,1.234,102,3.414,137,2.659,138,4.711,177,2.2,251,1.516,252,2.033,376,1.764,487,0.751,621,2.756,649,3.274,651,3.577,674,3.577,697,2.033,805,2.545,821,5.906,823,3.274,824,4.365,829,2.563,861,5.619,1141,6.25,1245,6.25,1274,5.122,1298,4.497,1473,4.968,2503,6.681,2504,6.681,3452,6.666,3453,8.134,3454,8.134,3455,8.779,3456,6.666,3457,6.666,3458,7.258,3459,6.666,3460,6.666,3461,8.134,3462,6.666,3463,6.666,3464,6.666,3465,8.134]],["title/components/SubnetComponent.html",[57,0.97,207,1.879]],["body/components/SubnetComponent.html",[0,0.312,3,0.041,4,0.035,5,0.041,14,0.064,15,0.173,18,0.113,19,0.006,21,0.162,24,0.311,26,1.164,27,1.034,32,1.203,33,1.686,34,0.041,38,0.877,39,1.233,48,1.792,50,2.77,52,1.561,53,0.008,54,0.008,55,0.008,56,0.008,57,1.576,58,1.792,59,1.686,60,1.871,61,1.871,62,1.871,66,1.871,67,4.247,68,3.995,70,2.582,72,2.582,74,2.582,83,3.041,84,1.008,86,4.279,87,4.279,97,0.82,98,1.008,99,0.807,106,1.167,107,2.765,108,2.921,137,1.426,140,3.94,145,3.523,162,3.174,164,1.871,165,2.638,166,1.183,167,1.871,168,2.282,169,1.871,170,1.756,171,0.647,172,1.913,173,1.756,174,3.125,175,1.756,176,1.792,177,1.817,178,1.913,179,1.792,180,1.219,181,1.913,182,1.792,183,1.913,184,1.913,185,1.72,186,1.913,187,1.756,188,1.913,189,1.72,190,1.756,191,1.913,192,1.72,193,1.72,194,1.913,195,1.913,196,1.792,197,1.913,198,1.72,199,1.792,200,1.913,201,1.831,202,1.916,203,1.831,204,2.697,205,1.831,206,1.831,207,3.053,208,1.72,209,1.913,210,1.72,211,1.72,212,1.72,213,1.913,214,1.756,215,1.913,216,1.913,217,1.913,239,2.378,245,1.616,251,0.992,252,1.33,267,1.653,268,2.426,269,1.686,277,2.757,338,3.48,369,1.194,386,2.526,504,2.977,509,2.575,528,2.202,538,0.985,572,0.992,692,3.757,714,4.707,775,3.523,789,2.378,889,1.622,916,3.639,1012,2.426,1032,3.757,1069,2.664,1072,4.065,1073,2.881,1074,2.881,1076,2.766,1078,4.831,1080,3.617,1082,3.509,1083,2.881,1104,3.122,1146,3.509,1147,3.509,1180,2.572,1340,2.766,1341,2.766,1346,4.379,1347,2.572,1362,4.064,1401,2.664,1456,4.037,1473,3.757,1548,4.064,1562,3.208,1564,5.175,1565,4.908,1569,2.002,1570,2.411,1612,2.823,1736,6.175,1737,1.956,1964,3.757,2147,2.881,2149,4.064,2200,4.922,2201,5.849,2205,5.853,2206,4.922,2207,4.922,2208,4.922,2209,5.346,2210,3.013,2217,3.013,2218,3.013,2219,2.766,2220,3.013,2221,3.013,2222,4.249,2223,3.757,2230,3.627,2231,4.249,2232,4.249,2233,4.249,2234,4.249,2235,4.249,2236,4.249,2237,4.249,2238,4.249,2239,3.013,2240,3.013,2241,3.013,2242,2.488,2243,2.881,2244,3.013,2245,3.013,2246,3.013,2247,3.013,2248,3.013,2249,4.249,2250,4.249,2251,3.013,2252,3.013,2253,5.346,2254,2.766,2255,2.881,2256,2.881,2257,3.013,2258,3.627,2259,4.249,2260,4.249,2261,3.013,2262,5.849,2263,3.013,2264,2.572,2265,3.013,2266,3.013,2267,3.013,2377,6.506,2394,6.506,3466,4.361,3467,7.126,3468,6.151,3469,6.151,3470,4.361,3471,4.361,3472,4.361,3473,4.361,3474,4.361,3475,6.151,3476,8.468,3477,6.151,3478,6.151,3479,6.151]],["title/classes/SubnetDTO.html",[0,0.341,787,2.718]],["body/classes/SubnetDTO.html",[0,0.634,2,0.396,3,0.057,4,0.05,5,0.057,7,0.279,9,0.939,14,0.089,15,0.217,18,0.144,19,0.006,20,0.448,21,0.183,34,0.083,44,0.438,49,1.755,53,0.011,54,0.011,55,0.011,56,0.011,77,4.815,91,1.589,104,0.9,106,1.061,171,0.619,373,2.846,379,0.831,419,0.986,421,1.042,422,1.351,485,1.665,499,3.263,514,1.243,538,1.351,579,2.148,773,6.435,774,4.692,775,3.019,776,4.692,777,3.058,780,2.81,783,3.873,784,4.035,785,6.128,786,6.81,787,4.395,788,6.485,789,3.263,790,6.485,791,6.485,792,5.83,3480,6.107,3481,6.107,3482,6.107,3483,6.107,3484,6.107,3485,6.107,3486,6.107,3487,6.107,3488,6.107,3489,6.107,3490,6.107,3491,6.107]],["title/classes/SubnetExport.html",[0,0.341,997,2.137]],["body/classes/SubnetExport.html",[0,0.693,2,0.276,3,0.04,4,0.035,5,0.04,7,0.195,9,0.999,11,0.935,12,0.373,13,1.49,14,0.062,15,0.228,18,0.062,19,0.006,20,0.433,21,0.079,24,0.157,31,2.207,34,0.091,37,0.675,44,0.46,45,1.226,47,1.761,53,0.008,54,0.008,55,0.008,56,0.008,91,1.744,103,0.881,104,1.037,106,1.055,109,1.299,171,0.298,239,1.647,259,1.911,342,1.066,372,1.017,379,0.53,411,1.877,412,1.175,419,1.082,421,1.139,422,1.477,433,1.124,444,1.077,448,3.262,476,1.464,485,1.905,487,0.629,500,1.322,501,1.211,514,0.867,538,0.682,573,1.066,576,1.626,579,2.037,584,1.119,586,1.277,588,1.823,589,2.029,611,1.295,615,2.207,616,2.207,618,2.207,619,1.615,620,2.848,621,1.443,622,1.943,623,1.584,624,1.584,625,1.554,626,1.525,627,1.525,629,1.418,640,2.04,644,1.584,761,1.647,777,3.047,780,3.396,789,1.647,805,1.878,956,2.714,957,1.956,958,1.956,959,2.778,960,1.911,961,1.911,962,1.911,963,2.714,965,2.714,967,2.714,969,2.714,970,2.714,971,2.714,972,2.714,973,2.714,974,2.595,975,2.653,976,2.653,977,2.653,978,3.359,979,2.653,980,1.956,981,1.956,982,1.715,983,1.828,984,2.653,985,1.911,986,1.911,987,2.714,988,1.911,989,2.714,990,1.911,991,2.653,992,3.23,993,1.956,994,1.956,995,1.956,996,3.018,997,3.628,998,1.868,999,2.166,1000,1.956,1001,1.911,1002,1.828,1003,3.359,1004,1.956,1005,1.751,1006,1.788,1007,2.778,1008,2.714,1009,1.369,1010,3.156,1011,3.435,1012,1.681,1013,1.868,1014,1.845,1015,2.714,1016,2.714,1017,2.714,1018,2.778,1019,2.653,1020,1.911,1021,1.911,1022,1.911,3492,4.261]],["title/classes/SubnetNode.html",[0,0.341,1628,3.459]],["body/classes/SubnetNode.html",[0,0.438,2,0.281,3,0.041,4,0.035,5,0.041,7,0.198,8,2.465,11,0.966,12,0.818,14,0.063,15,0.172,18,0.127,19,0.006,20,0.314,21,0.165,24,0.326,29,2.523,34,0.067,37,0.492,44,0.397,45,1.137,53,0.008,54,0.008,55,0.008,56,0.008,57,1.446,84,1.641,97,1.589,98,1.952,99,1.564,103,1.266,104,1.137,106,0.597,114,0.882,136,2.129,137,2.001,166,1.661,168,2.275,171,0.303,177,1.667,180,0.964,202,2.192,207,2.415,245,1.608,251,1.975,252,2.483,267,2.321,268,1.709,269,1.675,277,2.799,343,1.392,344,2.465,345,2.321,369,1.379,379,0.38,386,2.488,390,3.044,419,0.79,421,0.72,424,1.642,427,1.675,428,2.495,433,0.528,444,1.059,453,1.495,487,0.784,501,0.995,513,1.442,538,0.98,572,1.392,588,1.328,611,0.694,640,1.775,653,2.801,678,2.626,697,1.321,735,2.074,777,2.112,789,2.367,792,4.229,795,2.943,796,2.758,805,2.368,807,1.943,829,2.564,831,2.758,841,2.516,849,3.044,853,1.9,855,3.107,859,2.685,868,2.037,873,3.814,874,3.193,889,1.611,911,2.325,982,2.465,1009,3.12,1014,1.867,1039,2.199,1052,2.199,1117,1.642,1176,3.286,1252,2.037,1279,1.9,1282,3.193,1283,2.951,1391,4.141,1433,2.142,1447,2.646,1456,2.26,1581,3.193,1583,3.193,1611,3.107,1612,3.617,1618,4.704,1628,6.135,1673,3.703,1699,2.199,1718,5.029,1737,2.746,1819,3.286,1945,3.385,2278,3.926,2279,4.229,2280,4.229,2281,4.229,2282,4.229,2283,4.229,2284,4.229,2286,3.926,2287,3.385,2289,4.908,2290,4.266,2291,3.81,2292,4.266,2293,4.266,2294,3.385,2295,3.286,2296,3.385,2297,2.993,2299,2.993,2300,3.385,2302,2.993,2304,2.993,2305,3.385,2307,3.385,2308,3.385,2309,3.385,2310,3.385,2311,3.286,2312,3.286,2313,3.385,2314,3.385,2315,2.993,2316,4.229,2317,3.926,2318,3.926,2320,2.993,2321,2.993,2322,2.993,2323,2.993,2324,2.142,2325,2.142,2326,2.395,2328,3.739,2329,2.395,2330,2.325,2331,2.325,2332,2.325,2333,2.325,2334,2.325,2336,2.395,2337,2.395,2338,2.395,2339,2.395,2340,2.395,2341,3.385,2342,3.385,2343,2.395,2344,2.395,2345,2.395,2346,2.395,2347,2.395,3351,3.558,3356,3.866,3357,3.866,3493,6.123,3494,4.333,3495,4.333,3496,4.333,3497,4.333,3498,4.333,3499,4.333]],["title/classes/SubnetSimpleData.html",[0,0.341,979,2.089]],["body/classes/SubnetSimpleData.html",[0,0.693,2,0.274,3,0.04,4,0.034,5,0.04,7,0.193,9,0.997,11,0.932,12,0.37,13,1.481,14,0.062,15,0.227,18,0.102,19,0.006,20,0.432,21,0.13,24,0.155,31,1.541,34,0.091,37,0.708,44,0.459,45,1.222,47,1.752,53,0.008,54,0.008,55,0.008,56,0.008,91,1.742,103,0.874,104,0.886,106,1.051,109,1.288,171,0.295,239,1.633,259,1.895,342,1.057,372,1.011,379,0.527,411,1.866,412,1.165,419,1.081,421,1.138,422,1.476,433,1.122,444,1.074,448,3.257,476,1.601,485,1.902,487,0.627,500,1.311,501,1.235,514,0.86,538,0.676,573,1.057,576,1.618,579,2.031,584,1.109,586,1.267,588,1.87,589,2.069,611,1.222,615,2.194,616,2.194,618,2.194,619,1.601,620,2.837,621,1.431,622,1.932,623,1.571,624,1.571,625,1.541,626,1.512,627,1.512,629,1.406,640,1.743,644,1.571,761,1.633,777,2.891,780,3.39,789,1.633,805,2.037,956,2.697,957,1.939,958,1.939,959,2.761,960,1.895,961,1.895,962,1.895,963,2.697,965,2.697,967,2.697,969,2.697,970,2.697,971,2.697,972,2.697,973,3.141,974,2.579,975,2.637,976,2.637,977,2.637,978,3.346,979,3.07,980,1.939,981,1.939,982,1.7,983,1.812,984,2.637,985,1.895,986,1.895,987,2.697,988,1.895,989,2.697,990,1.895,991,2.637,992,3.215,993,1.939,994,1.939,995,1.939,996,3.003,997,3.422,998,1.852,999,2.153,1000,1.939,1001,1.895,1002,1.812,1003,3.07,1004,1.939,1005,1.736,1006,1.773,1007,1.939,1008,1.895,1009,1.357,1010,3.616,1011,3.616,1012,1.666,1013,1.852,1014,2.135,1015,2.697,1016,2.697,1017,2.697,1018,2.761,1019,3.07,1020,1.895,1021,1.895,1022,1.895,3500,4.224,3501,4.224,3502,4.224]],["title/components/TabnavComponent.html",[57,0.97,208,1.879]],["body/components/TabnavComponent.html",[0,0.317,3,0.042,4,0.036,5,0.042,7,0.203,8,3.138,9,0.692,11,0.692,12,0.683,14,0.065,15,0.175,18,0.128,19,0.006,20,0.414,21,0.166,24,0.229,26,1.184,27,1.046,32,2.265,33,1.714,34,0.042,37,0.66,38,0.887,39,1.247,41,2.78,44,0.428,47,1.951,48,1.822,50,2.227,52,1.587,53,0.008,54,0.008,55,0.008,56,0.008,57,1.267,58,1.822,59,1.714,60,1.902,61,1.902,62,1.902,66,1.902,67,4.268,68,4.028,70,2.612,72,2.612,74,3.573,83,3.554,84,1.024,86,3.975,87,4.31,91,1.116,97,1.17,98,1.438,99,1.152,102,3.857,103,1.287,104,1.149,106,0.99,107,1.502,108,1.587,109,1.352,128,5.385,136,1.866,140,2.451,154,3.219,161,3.063,162,2.27,163,4.518,164,1.902,165,2.669,166,1.203,167,1.902,168,2.298,169,1.902,170,1.785,171,0.634,172,1.944,173,1.785,174,3.153,175,1.785,176,1.822,177,2.095,178,1.944,179,1.822,180,1.488,181,1.944,182,1.822,183,1.944,184,1.944,185,1.749,186,1.944,187,1.785,188,1.944,189,1.749,190,1.785,191,1.944,192,1.749,193,1.749,194,1.944,195,1.944,196,1.822,197,1.944,198,1.749,199,1.822,200,1.944,201,1.861,202,1.83,203,1.861,204,2.729,205,1.861,206,1.861,207,1.749,208,3.358,209,1.944,210,1.749,211,1.749,212,1.749,213,1.944,214,1.785,215,1.944,216,1.944,217,1.944,245,1.634,251,1.415,252,2.193,338,2.955,343,1.424,344,2.505,376,1.35,444,0.758,454,3.344,501,0.872,504,1.617,509,2.071,514,1.587,526,2.612,597,2.314,611,0.996,675,2.25,807,1.989,808,4.56,811,5.111,820,4.761,823,2.505,829,2.186,831,2.108,849,3.075,850,4.518,853,2.729,857,4.111,910,5.989,1067,4.101,1071,3.406,1072,4.101,1078,3.55,1080,2.25,1137,4.781,1155,3.219,1167,3.946,1200,4.781,1283,2.999,1340,3.946,1341,3.946,1347,2.614,1401,2.708,1408,3.956,1409,5.111,1411,3.219,1561,3.8,1562,2.312,1569,3.301,1964,2.708,2056,5.111,2075,5.552,2092,5.552,2178,3.641,2219,4.944,2255,2.929,2426,4.781,2436,4.781,2448,3.669,2794,6.415,2800,5.552,2830,7.53,2831,3.956,2832,3.956,2834,3.956,2842,3.956,2843,3.956,3503,4.433,3504,6.223,3505,6.223,3506,7.19,3507,6.223,3508,8.211,3509,7.19,3510,6.223,3511,4.433,3512,5.989,3513,4.433,3514,6.223,3515,4.433,3516,6.223,3517,4.433,3518,4.433,3519,6.956,3520,6.223,3521,6.223,3522,4.433,3523,4.433,3524,4.433,3525,4.433,3526,4.433,3527,4.433,3528,6.223,3529,4.433]],["title/classes/TabnavElement.html",[0,0.341,3512,3.661]],["body/classes/TabnavElement.html",[0,0.611,2,0.469,3,0.068,4,0.059,5,0.068,7,0.331,8,2.913,14,0.106,15,0.241,18,0.106,19,0.006,20,0.377,21,0.134,24,0.266,25,4.875,26,1.932,27,1.529,29,2.794,32,2.357,34,0.08,41,3.516,44,0.331,49,1.361,50,2.591,52,2.591,53,0.013,54,0.013,55,0.013,56,0.013,180,1.346,208,3.781,454,3.666,611,1.456,831,2.452,1600,6.566,2830,5.561,3512,6.566,3530,6.458,3531,7.47,3532,7.238,3533,6.458]],["title/classes/TabnavItem.html",[0,0.341,3531,3.913]],["body/classes/TabnavItem.html",[0,0.606,2,0.462,3,0.067,4,0.058,5,0.067,7,0.325,8,3.408,14,0.104,15,0.238,18,0.132,19,0.006,20,0.413,21,0.168,24,0.262,25,5.154,26,1.902,27,1.519,29,2.329,32,1.965,34,0.08,41,2.754,44,0.387,49,1.699,50,3.234,52,3.234,53,0.013,54,0.013,55,0.013,56,0.013,180,1.122,208,3.687,454,3.056,611,1.446,831,2.868,1600,5.474,2830,6.505,3512,5.474,3530,6.357,3531,7.42,3533,7.555,3534,7.124,3535,7.124,3536,7.124]],["title/classes/TagCatalogueDTO.html",[0,0.341,747,2.91]],["body/classes/TagCatalogueDTO.html",[0,0.669,2,0.375,3,0.054,4,0.047,5,0.054,7,0.264,12,0.788,14,0.084,15,0.21,18,0.12,19,0.006,20,0.45,21,0.153,24,0.213,27,0.972,34,0.088,44,0.454,45,1.439,49,1.69,53,0.011,54,0.011,55,0.011,56,0.011,91,1.7,98,1.72,106,0.797,114,1.178,115,1.826,171,0.628,342,1.448,372,1.511,373,1.764,379,0.788,382,1.649,406,1.622,407,1.649,419,1.054,421,1.114,422,1.445,430,2.377,433,0.907,461,1.855,485,1.846,487,0.769,501,0.811,514,1.178,515,2.877,538,0.926,542,2.193,551,2.11,552,2.11,553,2.11,554,2.11,555,2.11,556,2.11,557,2.11,558,2.11,559,2.11,564,1.677,575,1.795,589,1.358,603,2.193,605,2.193,629,1.925,739,4.545,740,3.821,746,4.545,747,5.026,748,4.545,749,3.821,750,3.821,751,3.668,752,3.821,753,3.668,754,3.821,755,3.821,756,3.821,757,4.916,758,4.72,759,3.821,760,3.821,761,2.236,762,3.821,763,3.821,764,4.545,765,3.821,766,3.821,767,3.668,768,3.668,769,3.668,770,3.821,771,3.821,772,3.668,3537,5.784,3538,5.784,3539,5.784]],["title/classes/TagTIP.html",[0,0.341,592,2.089]],["body/classes/TagTIP.html",[0,0.688,2,0.25,3,0.036,4,0.031,5,0.036,7,0.176,9,0.957,12,0.583,13,1.916,14,0.056,15,0.206,18,0.082,19,0.006,20,0.452,21,0.072,24,0.244,27,0.648,30,1.619,34,0.09,37,0.674,38,1.043,39,0.773,44,0.458,45,1.5,49,1.578,53,0.007,54,0.007,55,0.007,56,0.007,91,1.73,96,1.585,97,0.725,104,0.83,106,1.072,114,0.785,115,1.218,171,0.65,180,0.608,219,0.997,352,1.307,369,1.093,370,1.283,371,1.691,372,1.41,373,2.231,376,1.221,379,0.849,382,1.897,402,1.197,403,2.029,404,2.269,405,2.175,406,1.082,407,1.606,408,1.874,419,1.073,421,1.134,422,1.47,433,1.113,442,1.176,444,0.948,461,1.562,476,1.271,480,1.504,484,1.73,485,1.896,486,2.526,487,0.764,488,2.526,489,2.526,496,2.364,497,2.364,498,1.73,499,2.572,500,1.197,501,0.54,502,1.73,503,1.654,504,1.407,505,1.73,506,1.73,507,1.73,508,1.73,509,1.283,510,1.654,511,1.73,512,1.691,513,1.283,514,0.785,515,1.491,516,3.138,517,1.73,518,1.73,519,1.176,520,1.73,521,2.416,522,1.73,523,2.526,524,1.73,525,1.73,526,1.619,527,3.679,528,1.381,529,1.691,530,1.73,531,2.416,532,1.73,533,1.73,534,1.73,535,1.73,536,1.73,537,1.73,538,1.171,539,1.73,540,1.654,541,2.416,542,1.462,543,2.364,544,1.73,545,1.73,546,2.47,547,1.73,548,1.73,549,2.416,550,1.73,551,1.407,552,1.407,553,1.407,554,1.407,555,1.407,556,1.407,557,1.407,558,1.407,559,1.407,560,1.73,561,1.73,562,1.73,563,1.691,564,1.633,565,1.691,566,1.691,567,1.691,568,1.691,569,1.691,570,1.691,571,1.691,572,0.877,573,1.409,574,1.691,575,1.747,576,0.891,577,1.73,578,1.73,579,0.935,580,1.73,581,1.619,582,1.654,583,2.267,584,1.013,585,1.434,586,1.156,587,2.526,588,1.221,589,1.826,590,1.218,591,1.462,592,2.917,593,1.407,594,1.691,595,2.984,596,1.691,597,1.434,598,2.917,599,2.295,600,1.654,601,1.73,602,1.619,603,1.462,604,1.73,605,1.462,3540,3.857]],["title/classes/TagsExport.html",[0,0.341,632,2.809]],["body/classes/TagsExport.html",[0,0.682,2,0.367,3,0.053,4,0.046,5,0.053,7,0.258,9,1.017,11,0.816,12,0.714,13,2.198,14,0.083,15,0.258,18,0.083,19,0.006,20,0.438,21,0.105,24,0.208,34,0.09,37,0.589,38,0.806,44,0.456,53,0.01,54,0.01,55,0.01,56,0.01,91,1.725,94,1.56,103,1.17,166,1.535,171,0.395,342,1.416,372,1.369,379,0.714,412,1.56,419,1.07,421,1.121,422,1.453,433,0.992,444,1.115,461,1.905,476,1.402,480,1.958,485,1.881,487,0.465,501,1.207,538,1.175,564,1.64,573,1.416,575,1.755,576,1.307,584,1.486,585,2.103,588,1.868,589,2.022,590,1.786,593,2.063,606,4.326,607,3.455,608,3.336,609,4.801,610,3.455,611,1.304,612,5.263,615,2.676,616,2.676,617,4.326,618,2.676,619,2.144,620,2.103,621,1.916,622,1.817,623,2.103,624,2.103,625,2.063,626,2.025,627,2.025,628,3.128,629,1.882,630,4.185,631,4.185,632,4.801,633,3.336,634,4.185,635,3.455,636,3.336,637,4.326,638,3.336,639,4.326,640,1.64,641,3.336,642,3.455,643,3.455,644,2.103,645,3.455,646,3.227,647,3.455,648,3.455,3541,5.657]],["title/classes/TheaterApplication.html",[0,0.341,445,2]],["body/classes/TheaterApplication.html",[0,0.649,2,0.271,3,0.039,4,0.034,5,0.039,9,0.665,11,0.929,12,0.524,14,0.061,15,0.168,18,0.144,19,0.006,20,0.438,21,0.183,24,0.334,34,0.089,37,0.48,38,0.852,39,1.523,44,0.347,46,1.619,49,1.124,53,0.008,54,0.008,55,0.008,56,0.008,94,1.155,99,1.106,103,1.236,106,0.577,107,1.419,108,1.499,116,2.681,127,1.322,162,2.18,171,0.487,177,1.784,202,1.636,219,1.801,277,2.592,286,3.445,342,1.048,343,2.581,345,1.369,367,2.126,368,2.184,369,1.763,370,1.989,372,1.005,373,1.823,375,4.457,376,2.113,379,0.805,382,2.793,385,2.564,386,2.305,387,2.018,388,2.564,389,2.018,390,2.357,391,2.018,392,3.199,393,2.184,394,3.199,395,2.184,396,3.199,397,2.184,398,2.81,399,2.07,400,3.26,401,1.969,402,2.358,403,1.277,404,1.854,405,2.278,406,1.676,407,1.704,408,1.989,409,1.923,410,2.07,411,2.358,412,1.922,413,3.359,414,2.925,415,2.925,416,2.925,417,4.488,418,4.131,419,0.665,420,2.564,421,0.703,422,0.911,423,3.033,424,2.266,425,3.117,426,3.117,427,2.311,428,2.1,429,3.117,430,2.456,431,3.199,432,2.184,433,0.51,434,1.758,435,2.184,436,2.184,437,1.879,438,2.184,439,3.117,440,2.681,441,3.117,442,1.823,443,2.621,444,0.849,445,3.19,446,3.964,447,2.184,448,1.445,449,2.184,450,1.969,451,1.837,452,1.837,453,1.445,454,1.796,455,2.184,456,2.184,457,1.969,458,2.88,459,2.07,460,1.923,461,0.894,462,2.81,463,3.929,464,2.018,465,2.018,466,3.033,467,3.857,468,4.027,469,3.584,470,3.117,471,3.635,472,3.537,473,3.126,474,2.018,475,4.241,476,1.332,477,2.126,478,1.969,479,2.018,538,0.957,551,2.18,552,2.18,553,2.18,554,2.18,555,2.18,556,2.18,557,2.18,558,2.18,559,2.18,564,1.733,575,1.854,739,2.558,743,2.357,747,2.558,748,2.558,764,2.558,767,3.791,768,3.791,769,3.791,772,3.791,807,1.879,3542,4.188,3543,4.188,3544,4.188,3545,4.188,3546,4.188,3547,4.188,3548,4.188,3549,4.188,3550,4.188,3551,4.188,3552,4.188,3553,4.188,3554,4.188,3555,4.188,3556,4.188,3557,4.188,3558,4.188,3559,4.188,3560,4.188,3561,4.188,3562,4.188,3563,4.188,3564,4.188,3565,4.188,3566,4.188]],["title/classes/TheaterDTO.html",[0,0.341,382,1.358]],["body/classes/TheaterDTO.html",[0,0.652,2,0.336,3,0.049,4,0.042,5,0.049,7,0.237,12,0.761,14,0.076,15,0.195,18,0.145,19,0.006,20,0.451,21,0.184,24,0.191,27,0.872,34,0.086,37,0.417,44,0.448,45,1.334,49,1.632,53,0.01,54,0.01,55,0.01,56,0.01,91,1.661,98,1.602,106,0.955,114,1.057,115,1.638,171,0.606,342,1.299,372,1.459,373,2.38,379,0.783,382,1.976,406,1.455,407,1.48,419,1.03,421,1.089,422,1.412,430,2.133,433,0.845,461,1.666,485,1.798,487,0.713,501,0.727,514,1.057,515,2.006,538,1.25,542,1.967,551,2.847,552,2.847,553,2.847,554,2.847,555,2.847,556,2.847,557,2.847,558,2.847,559,2.847,564,2.262,575,2.421,589,1.218,603,1.967,605,1.967,629,1.727,739,4.766,740,3.428,743,2.047,746,3.169,747,4.766,748,4.766,749,3.428,750,3.428,751,3.291,752,3.428,753,3.291,754,3.428,755,3.428,756,3.428,757,4.579,758,4.396,759,3.428,760,3.428,761,2.006,762,3.428,763,3.428,764,4.766,765,3.428,766,4.579,767,4.949,768,4.949,769,4.949,770,3.428,771,3.428,772,4.949,3567,5.189,3568,5.189,3569,5.189,3570,5.189,3571,5.189,3572,5.189,3573,5.189,3574,5.189,3575,5.189,3576,5.189,3577,5.189,3578,5.189,3579,5.189,3580,5.189,3581,5.189,3582,5.189,3583,5.189,3584,5.189,3585,5.189,3586,5.189]],["title/classes/TheaterExport.html",[0,0.341,628,2.634]],["body/classes/TheaterExport.html",[0,0.679,2,0.358,3,0.052,4,0.045,5,0.052,7,0.252,9,1.03,11,0.949,12,0.748,13,1.779,14,0.081,15,0.249,18,0.125,19,0.006,20,0.438,21,0.159,24,0.203,34,0.089,37,0.647,38,0.787,44,0.454,53,0.01,54,0.01,55,0.01,56,0.01,91,1.718,94,1.524,103,1.494,166,1.499,171,0.386,342,2.014,372,1.489,379,0.706,412,1.524,419,1.066,421,1.104,422,1.431,433,0.981,444,1.08,461,1.891,476,1.38,480,1.928,485,1.852,487,0.454,501,1.196,538,1.157,564,1.602,573,1.382,575,1.714,576,1.277,584,1.451,585,2.054,588,1.851,589,2.133,590,1.744,593,2.015,606,4.259,607,3.374,608,3.257,609,4.259,610,3.374,611,1.157,612,5.034,615,2.635,616,2.635,617,4.259,618,2.936,619,2.094,620,2.686,621,2.447,622,2.32,623,2.686,624,2.686,625,2.635,626,2.586,627,2.586,628,3.994,629,2.678,630,4.121,631,4.121,632,4.259,633,3.257,634,4.121,635,3.374,636,3.257,637,4.259,638,3.257,639,4.259,640,1.602,641,3.257,642,3.374,643,3.374,644,2.054,645,3.374,646,3.152,647,3.374,648,3.374,743,2.179,3587,5.524,3588,5.524,3589,5.524,3590,5.524]],["title/classes/TheaterInstanceDTO.html",[0,0.341,605,1.806]],["body/classes/TheaterInstanceDTO.html",[0,0.687,2,0.248,3,0.036,4,0.031,5,0.036,7,0.175,9,0.973,12,0.58,13,1.378,14,0.056,15,0.205,18,0.097,19,0.006,20,0.452,21,0.104,24,0.243,27,0.643,30,1.605,34,0.09,37,0.703,38,1.038,39,0.766,44,0.458,45,1.498,49,1.574,53,0.007,54,0.007,55,0.007,56,0.007,91,1.728,96,1.572,97,0.719,104,0.825,106,1.068,114,0.779,115,1.207,171,0.649,180,0.602,219,0.988,352,1.296,369,1.087,370,1.273,371,1.677,372,1.407,373,2.222,376,1.214,379,0.848,382,1.887,402,1.187,403,2.019,404,2.26,405,2.382,406,1.073,407,1.596,408,1.863,419,1.072,421,1.133,422,1.469,433,1.122,442,1.166,444,0.945,461,1.555,476,1.482,480,1.494,484,1.716,485,1.894,486,2.511,487,0.769,488,2.511,489,2.511,496,2.349,497,2.349,498,1.716,499,2.559,500,1.187,501,0.536,502,1.716,503,1.64,504,1.395,505,1.716,506,1.716,507,1.716,508,1.716,509,1.273,510,1.64,511,1.716,512,1.677,513,1.273,514,0.779,515,1.479,516,3.125,517,1.716,518,1.716,519,1.166,520,1.716,521,2.401,522,1.716,523,2.511,524,1.716,525,1.716,526,1.605,527,3.669,528,1.369,529,1.677,530,1.716,531,2.401,532,1.716,533,1.716,534,1.716,535,1.716,536,1.716,537,1.716,538,1.166,539,1.716,540,1.64,541,2.401,542,1.45,543,2.349,544,1.716,545,1.716,546,2.454,547,1.716,548,1.716,549,2.401,550,1.716,551,1.395,552,1.395,553,1.395,554,1.395,555,1.395,556,1.395,557,1.395,558,1.395,559,1.395,560,1.716,561,1.716,562,1.716,563,1.677,564,1.623,565,1.677,566,1.677,567,1.677,568,1.677,569,1.677,570,1.677,571,1.677,572,0.87,573,1.401,574,1.677,575,1.737,576,0.884,577,1.716,578,1.716,579,0.927,580,1.716,581,1.605,582,1.64,583,2.253,584,1.005,585,1.422,586,1.147,587,2.511,588,1.214,589,1.902,590,1.207,591,1.45,592,2.454,593,1.395,594,1.677,595,3.268,596,1.677,597,1.422,598,3.195,599,2.513,600,1.64,601,1.716,602,1.605,603,1.45,604,1.716,605,2.122,3591,3.825,3592,3.825]],["title/classes/TheaterInstancePropertiesDTO.html",[0,0.341,405,1.558]],["body/classes/TheaterInstancePropertiesDTO.html",[0,0.685,2,0.243,3,0.035,4,0.03,5,0.035,7,0.171,9,0.969,12,0.574,13,1.358,14,0.055,15,0.217,18,0.121,19,0.006,20,0.452,21,0.149,24,0.24,27,0.63,30,1.574,34,0.09,37,0.668,38,1.029,39,0.751,44,0.458,45,1.493,49,1.564,53,0.007,54,0.007,55,0.007,56,0.007,91,1.724,96,1.541,97,0.705,104,0.813,106,1.059,114,0.763,115,1.183,171,0.646,180,0.591,219,0.969,352,1.27,369,1.071,370,1.248,371,1.644,372,1.464,373,2.201,376,1.196,379,0.849,382,1.866,402,1.163,403,1.996,404,2.239,405,2.359,406,1.051,407,1.573,408,2.178,419,1.07,421,1.13,422,1.465,433,1.107,442,1.143,444,0.98,461,1.642,476,1.251,480,1.473,484,1.682,485,1.889,486,2.474,487,0.766,488,2.474,489,2.474,496,2.315,497,2.315,498,1.682,499,2.53,500,1.163,501,0.525,502,1.682,503,1.608,504,1.368,505,1.682,506,1.682,507,1.682,508,1.682,509,1.248,510,1.608,511,1.682,512,1.644,513,1.248,514,0.763,515,1.45,516,3.095,517,1.682,518,1.682,519,1.143,520,1.682,521,2.366,522,1.682,523,2.474,524,1.682,525,1.682,526,1.574,527,3.646,528,1.342,529,1.644,530,1.682,531,2.366,532,1.682,533,1.682,534,1.682,535,1.682,536,1.682,537,1.682,538,1.288,539,1.682,540,1.608,541,2.366,542,1.421,543,2.315,544,1.682,545,1.682,546,2.419,547,1.682,548,1.682,549,2.366,550,1.682,551,1.368,552,1.368,553,1.368,554,1.368,555,1.368,556,1.368,557,1.368,558,1.368,559,1.368,560,1.682,561,1.682,562,1.682,563,1.644,564,2.092,565,1.644,566,1.644,567,1.644,568,1.644,569,1.644,570,1.644,571,1.644,572,0.853,573,1.806,574,1.644,575,2.239,576,0.866,577,1.682,578,1.682,579,0.909,580,1.682,581,1.574,582,1.608,583,2.22,584,0.985,585,1.394,586,1.124,587,2.935,588,1.419,589,1.888,590,1.183,591,1.421,592,2.87,593,2.387,594,1.644,595,2.935,596,1.644,597,1.394,598,2.87,599,2.258,600,1.608,601,1.682,602,1.574,603,1.421,604,1.682,605,1.421,3593,3.749,3594,3.749,3595,3.749,3596,3.749,3597,3.749,3598,3.749]],["title/components/TheaterInternalServiceModuleInstanceComponent.html",[57,0.97,210,1.879]],["body/components/TheaterInternalServiceModuleInstanceComponent.html",[0,0.298,3,0.039,4,0.034,5,0.039,14,0.061,15,0.168,18,0.111,19,0.006,21,0.17,24,0.306,26,1.113,27,1.001,32,1.15,33,1.611,34,0.039,38,0.849,39,1.194,48,1.713,50,2.714,52,1.492,53,0.008,54,0.008,55,0.008,56,0.008,57,1.544,58,1.713,59,1.611,60,1.788,61,1.788,62,1.788,66,1.788,67,4.23,68,3.973,70,2.5,72,2.5,74,2.5,83,2.944,84,0.963,86,4.192,87,4.192,97,0.784,98,0.963,99,0.771,106,1.149,107,3.029,108,3.2,137,1.362,140,3.842,145,3.436,162,3.133,164,1.788,165,2.555,166,1.131,167,1.788,168,2.235,169,1.788,170,1.678,171,0.641,172,1.827,173,1.678,174,3.048,175,1.678,176,1.713,177,1.78,178,1.827,179,1.713,180,1.194,181,1.827,182,1.713,183,1.827,184,1.827,185,1.644,186,1.827,187,1.678,188,1.827,189,1.644,190,1.678,191,1.827,192,1.644,193,1.644,194,1.827,195,1.827,196,1.713,197,1.827,198,1.644,199,1.713,200,1.827,201,1.749,202,1.883,203,1.749,204,2.612,205,1.749,206,1.749,207,1.644,208,1.644,209,1.827,210,2.991,211,1.644,212,1.644,213,1.827,214,1.678,215,1.827,216,1.827,217,1.827,239,2.303,245,1.564,251,0.948,252,1.271,267,1.58,268,2.349,269,1.611,277,2.876,338,3.609,369,1.156,386,2.599,480,1.59,504,2.926,509,2.523,528,2.132,538,0.954,572,0.948,692,3.638,714,4.591,735,2.826,775,3.436,889,1.549,916,2.8,1012,2.349,1032,3.638,1069,2.545,1072,3.965,1073,2.753,1074,2.753,1076,2.643,1078,4.759,1080,3.527,1082,3.398,1083,2.753,1104,3.023,1146,3.398,1147,3.398,1180,2.457,1340,2.643,1341,2.643,1346,4.304,1347,2.457,1362,3.934,1401,2.545,1461,4.069,1473,3.638,1548,3.934,1562,3.106,1564,5.087,1565,4.809,1569,1.913,1570,2.304,1612,2.766,1736,6.124,1737,1.869,1823,5.046,1964,3.638,2147,2.753,2149,3.934,2200,4.801,2201,5.763,2204,5.826,2206,4.801,2207,4.801,2208,4.801,2209,5.238,2210,2.879,2217,2.879,2218,2.879,2219,2.643,2220,2.879,2221,2.879,2222,4.114,2223,3.638,2230,3.512,2231,4.114,2232,4.114,2233,4.114,2234,4.114,2235,4.114,2236,4.114,2237,4.114,2238,4.114,2239,2.879,2240,2.879,2241,2.879,2242,2.377,2243,2.753,2244,2.879,2245,2.879,2246,2.879,2247,2.879,2248,2.879,2249,4.114,2250,4.114,2251,2.879,2252,2.879,2253,5.238,2254,2.643,2255,2.753,2256,2.753,2257,2.879,2258,3.512,2259,4.114,2260,4.114,2261,2.879,2262,5.763,2263,2.879,2264,2.457,2265,2.879,2266,2.879,2267,2.879,2375,5.826,2376,5.708,2377,5.826,2389,3.423,2390,3.423,2391,3.423,2393,6.852,2394,6.41,2395,4.892,2396,4.892,2397,6.228,2398,6.228,2399,6.228,3599,4.167,3600,6.95,3601,5.956,3602,6.95,3603,5.956,3604,4.167,3605,4.167,3606,4.167,3607,4.167,3608,4.167,3609,4.167,3610,4.167,3611,4.167,3612,6.95,3613,4.167,3614,5.956]],["title/classes/TheaterInternalServiceModuleInstanceNode.html",[0,0.341,1596,3.459]],["body/classes/TheaterInternalServiceModuleInstanceNode.html",[0,0.436,2,0.279,3,0.04,4,0.035,5,0.04,7,0.197,8,2.454,11,0.964,12,0.818,14,0.063,15,0.172,18,0.131,19,0.006,21,0.165,24,0.325,29,2.516,34,0.067,37,0.49,38,0.614,44,0.396,45,1.133,53,0.008,54,0.008,55,0.008,56,0.008,57,1.441,84,1.635,97,1.586,98,1.949,99,1.561,103,1.261,104,1.134,114,0.877,136,2.122,137,1.993,166,1.655,168,2.269,171,0.301,177,1.662,180,0.96,202,2.19,210,2.405,245,1.601,251,1.972,252,2.477,267,2.311,268,1.699,269,1.665,277,2.795,343,1.384,344,2.454,345,2.314,369,1.374,372,0.724,386,2.485,394,3.533,414,1.808,415,1.808,416,1.808,419,0.787,421,0.717,424,1.633,427,1.665,428,2.487,433,0.863,444,1.057,453,1.486,480,1.15,487,0.783,501,0.992,513,1.433,538,0.69,572,1.387,588,1.322,590,1.36,591,1.633,611,0.69,640,1.768,653,2.792,678,2.615,697,1.314,735,2.752,795,2.938,796,2.752,805,2.365,807,1.932,829,2.561,831,2.752,841,2.506,849,3.036,853,1.889,855,3.094,859,2.674,868,2.025,873,3.805,874,3.18,889,1.601,911,2.312,982,2.454,1009,3.092,1014,1.859,1039,2.186,1052,2.186,1117,1.633,1176,3.272,1252,2.025,1279,1.889,1282,3.18,1283,2.938,1391,4.13,1433,2.129,1447,2.631,1461,2.312,1465,4.427,1581,3.18,1583,3.18,1586,4.685,1596,6.123,1611,3.094,1612,3.639,1673,3.692,1699,2.186,1737,2.735,1819,3.272,1945,3.371,2278,3.913,2279,4.212,2280,4.212,2281,4.212,2282,4.212,2283,4.212,2284,4.212,2286,3.913,2287,3.371,2289,4.902,2290,4.255,2291,3.798,2292,4.255,2293,4.255,2294,3.371,2295,3.272,2296,3.371,2297,2.975,2299,2.975,2300,3.371,2302,2.975,2304,2.975,2305,3.371,2307,3.371,2308,3.371,2309,3.371,2310,3.371,2311,3.272,2312,3.272,2313,3.371,2314,3.371,2315,2.975,2316,4.212,2317,3.913,2318,3.913,2320,2.975,2321,2.975,2322,2.975,2323,2.975,2324,2.129,2325,2.129,2326,2.381,2329,2.381,2330,3.798,2331,2.312,2332,2.312,2333,2.312,2334,2.312,2336,2.381,2337,2.381,2338,2.381,2339,2.381,2340,2.381,2341,3.371,2342,3.371,2343,2.381,2344,2.381,2345,2.381,2346,2.381,2347,2.381,3366,3.538,3367,5.44,3368,3.843,3369,3.843,3615,6.097,3616,4.307,3617,4.307,3618,4.307,3619,4.307,3620,4.307,3621,4.307]],["title/components/TheaterModuleInstanceComponent.html",[57,0.97,211,1.879]],["body/components/TheaterModuleInstanceComponent.html",[0,0.298,3,0.039,4,0.034,5,0.039,14,0.061,15,0.168,18,0.111,19,0.006,21,0.17,24,0.306,26,1.113,27,1.001,32,1.15,33,1.611,34,0.039,38,0.849,39,1.194,48,1.713,50,2.714,52,1.492,53,0.008,54,0.008,55,0.008,56,0.008,57,1.544,58,1.713,59,1.611,60,1.788,61,1.788,62,1.788,66,1.788,67,4.23,68,3.973,70,2.5,72,2.5,74,2.5,83,2.944,84,0.963,86,4.192,87,4.192,97,0.784,98,0.963,99,0.771,106,1.149,107,3.029,108,3.2,137,1.362,140,3.842,145,3.436,162,3.133,164,1.788,165,2.555,166,1.131,167,1.788,168,2.235,169,1.788,170,1.678,171,0.641,172,1.827,173,1.678,174,3.048,175,1.678,176,1.713,177,1.78,178,1.827,179,1.713,180,1.194,181,1.827,182,1.713,183,1.827,184,1.827,185,1.644,186,1.827,187,1.678,188,1.827,189,1.644,190,1.678,191,1.827,192,1.644,193,1.644,194,1.827,195,1.827,196,1.713,197,1.827,198,1.644,199,1.713,200,1.827,201,1.749,202,1.883,203,1.749,204,2.612,205,1.749,206,1.749,207,1.644,208,1.644,209,1.827,210,1.644,211,2.991,212,1.644,213,1.827,214,1.678,215,1.827,216,1.827,217,1.827,239,2.303,245,1.564,251,0.948,252,1.271,267,1.58,268,2.349,269,1.611,277,2.876,338,3.609,369,1.156,386,2.599,480,1.59,504,2.926,509,2.523,528,2.132,538,0.954,572,0.948,692,3.638,714,4.591,735,2.826,775,3.436,889,1.549,916,2.8,1012,2.349,1032,3.638,1069,2.545,1072,3.965,1073,2.753,1074,2.753,1076,2.643,1078,4.759,1080,3.527,1082,3.398,1083,2.753,1104,3.023,1146,3.398,1147,3.398,1180,2.457,1340,2.643,1341,2.643,1346,4.304,1347,2.457,1362,3.934,1401,2.545,1461,4.069,1473,3.638,1548,3.934,1562,3.106,1564,5.087,1565,4.809,1569,1.913,1570,2.304,1612,2.766,1736,6.124,1737,1.869,1823,5.046,1964,3.638,2147,2.753,2149,3.934,2200,4.801,2201,5.763,2204,5.826,2206,4.801,2207,4.801,2208,4.801,2209,5.238,2210,2.879,2217,2.879,2218,2.879,2219,2.643,2220,2.879,2221,2.879,2222,4.114,2223,3.638,2230,3.512,2231,4.114,2232,4.114,2233,4.114,2234,4.114,2235,4.114,2236,4.114,2237,4.114,2238,4.114,2239,2.879,2240,2.879,2241,2.879,2242,2.377,2243,2.753,2244,2.879,2245,2.879,2246,2.879,2247,2.879,2248,2.879,2249,4.114,2250,4.114,2251,2.879,2252,2.879,2253,5.238,2254,2.643,2255,2.753,2256,2.753,2257,2.879,2258,3.512,2259,4.114,2260,4.114,2261,2.879,2262,5.763,2263,2.879,2264,2.457,2265,2.879,2266,2.879,2267,2.879,2375,5.826,2376,5.708,2377,5.826,2389,3.423,2390,3.423,2391,3.423,2393,6.852,2394,6.41,2395,4.892,2396,4.892,2397,6.228,2398,6.228,2399,6.228,3622,4.167,3623,6.95,3624,5.956,3625,6.95,3626,5.956,3627,4.167,3628,4.167,3629,4.167,3630,4.167,3631,4.167,3632,4.167,3633,4.167,3634,4.167,3635,6.95,3636,4.167,3637,5.956]],["title/classes/TheaterModuleInstanceNode.html",[0,0.341,1598,3.459]],["body/classes/TheaterModuleInstanceNode.html",[0,0.436,2,0.279,3,0.04,4,0.035,5,0.04,7,0.197,8,2.454,11,0.964,12,0.818,14,0.063,15,0.172,18,0.131,19,0.006,21,0.165,24,0.325,29,2.516,34,0.067,37,0.49,38,0.614,44,0.396,45,1.133,53,0.008,54,0.008,55,0.008,56,0.008,57,1.441,84,1.635,97,1.586,98,1.949,99,1.561,103,1.261,104,1.134,114,0.877,136,2.122,137,1.993,166,1.655,168,2.269,171,0.301,177,1.662,180,0.96,202,2.19,211,2.405,245,1.601,251,1.972,252,2.477,267,2.311,268,1.699,269,1.665,277,2.795,343,1.384,344,2.454,345,2.314,369,1.374,372,0.724,386,2.485,396,3.533,414,1.808,415,1.808,416,1.808,419,0.787,421,0.717,424,1.633,427,1.665,428,2.487,433,0.863,444,1.057,453,1.486,480,1.15,487,0.783,501,0.992,513,1.433,538,0.69,572,1.387,588,1.322,590,1.36,591,1.633,611,0.69,640,1.768,653,2.792,678,2.615,697,1.314,735,2.752,795,2.938,796,2.752,805,2.365,807,1.932,829,2.561,831,2.752,841,2.506,849,3.036,853,1.889,855,3.094,859,2.674,868,2.025,873,3.805,874,3.18,889,1.601,911,2.312,982,2.454,1009,3.092,1014,1.859,1039,2.186,1052,2.186,1117,1.633,1176,3.272,1252,2.025,1279,1.889,1282,3.18,1283,2.938,1391,4.13,1433,2.129,1447,2.631,1461,2.312,1462,4.427,1581,3.18,1583,3.18,1585,4.685,1594,4.675,1598,5.138,1611,3.094,1612,3.639,1673,3.692,1699,2.186,1737,2.735,1819,3.272,1945,3.371,2278,3.913,2279,4.212,2280,4.212,2281,4.212,2282,4.212,2283,4.212,2284,4.212,2286,3.913,2287,3.371,2289,4.902,2290,4.255,2291,3.798,2292,4.255,2293,4.255,2294,3.371,2295,3.272,2296,3.371,2297,2.975,2299,2.975,2300,3.371,2302,2.975,2304,2.975,2305,3.371,2307,3.371,2308,3.371,2309,3.371,2310,3.371,2311,3.272,2312,3.272,2313,3.371,2314,3.371,2315,2.975,2316,4.212,2317,3.913,2318,3.913,2320,2.975,2321,2.975,2322,2.975,2323,2.975,2324,2.129,2325,2.129,2326,2.381,2329,2.381,2330,3.798,2331,2.312,2332,2.312,2333,2.312,2334,2.312,2336,2.381,2337,2.381,2338,2.381,2339,2.381,2340,2.381,2341,3.371,2342,3.371,2343,2.381,2344,2.381,2345,2.381,2346,2.381,2347,2.381,3370,3.538,3371,5.44,3372,3.843,3373,3.843,3638,6.097,3639,4.307,3640,4.307,3641,4.307,3642,4.307,3643,4.307,3644,4.307]],["title/injectables/TheaterService.html",[231,3.147,649,1.918]],["body/injectables/TheaterService.html",[0,0.441,3,0.058,4,0.05,5,0.058,14,0.09,18,0.124,19,0.006,20,0.431,21,0.158,24,0.344,26,1.647,34,0.058,53,0.011,54,0.011,55,0.011,56,0.011,69,3.132,84,1.426,97,1.595,98,1.96,99,1.57,138,3.312,231,5.123,232,6.022,245,2.037,251,1.764,295,4.077,326,4.077,327,4.077,331,4.424,332,2.883,352,2.627,379,0.82,382,2.211,404,2.406,409,2.833,410,3.051,649,3.122,651,3.312,653,3.69,656,4.742,657,6.459,659,5.63,664,4.736,667,6.92,669,4.742,674,3.312,675,3.132,676,5.877,697,2.365,710,5.527,719,4.573,1956,4.742,1957,5.958,1966,5.123,2012,6.369,2013,6.369,2014,6.369,2015,6.369,2016,6.369,2017,6.369,2656,6.92,3645,6.171,3646,7.755,3647,7.755,3648,6.171,3649,7.755,3650,6.171,3651,7.755,3652,6.171,3653,6.171,3654,6.171,3655,6.171]],["title/classes/TheaterSimpleData.html",[0,0.341,630,2.718]],["body/classes/TheaterSimpleData.html",[0,0.682,2,0.365,3,0.053,4,0.046,5,0.053,7,0.257,9,1.016,11,0.813,12,0.754,13,1.801,14,0.082,15,0.251,18,0.107,19,0.006,20,0.436,21,0.136,24,0.207,34,0.09,37,0.691,38,0.802,44,0.456,53,0.01,54,0.01,55,0.01,56,0.01,91,1.723,94,1.553,103,1.164,166,1.528,171,0.393,342,1.409,372,1.366,379,0.712,412,1.553,419,1.069,421,1.12,422,1.452,433,0.99,444,1.086,461,1.903,476,1.643,480,1.952,485,1.88,487,0.463,501,1.249,538,1.171,564,1.632,573,1.409,575,1.747,576,1.301,584,1.479,585,2.093,588,1.933,589,2.092,590,1.777,593,2.054,606,4.312,607,3.438,608,3.32,609,4.312,610,3.438,611,1.171,612,5.255,615,2.668,616,2.668,617,4.79,618,2.668,619,2.134,620,2.093,621,1.907,622,1.808,623,2.093,624,2.093,625,2.054,626,2.015,627,2.015,628,3.113,629,1.873,630,4.634,631,4.172,632,4.312,633,3.32,634,4.172,635,3.438,636,3.32,637,4.312,638,3.32,639,4.312,640,1.632,641,3.32,642,3.438,643,3.438,644,2.093,645,3.438,646,3.212,647,3.438,648,3.438,3656,5.63,3657,5.63]],["title/interfaces/TheaterTopology.html",[411,1.478,475,2.418]],["body/interfaces/TheaterTopology.html",[0,0.674,3,0.047,4,0.041,5,0.047,9,0.754,11,0.983,12,0.594,14,0.073,15,0.191,18,0.099,19,0.006,20,0.428,24,0.346,34,0.091,37,0.545,38,0.966,39,1.538,44,0.375,46,1.94,53,0.009,54,0.009,55,0.009,56,0.009,94,1.384,103,1.402,116,3.039,127,1.584,162,2.472,171,0.35,177,1.929,202,1.801,219,1.983,277,2.743,286,3.793,342,1.256,343,2.756,345,1.64,367,2.546,368,2.617,369,1.828,370,2.255,376,1.088,379,0.817,382,1.932,385,2.906,386,2.439,387,2.418,388,2.906,389,2.418,390,2.673,391,2.418,392,3.522,393,2.617,394,3.522,395,2.617,396,3.522,397,2.617,398,3.186,399,2.48,400,3.524,401,2.359,402,2.549,403,1.53,404,2.102,405,2.215,406,1.9,407,1.932,408,2.255,409,2.304,410,2.48,411,2.549,412,2.116,413,3.697,414,3.221,415,3.221,416,3.221,417,4.544,418,4.371,419,0.754,420,2.906,421,0.797,422,1.033,423,3.439,424,2.569,425,3.534,426,3.534,427,2.62,428,2.381,429,3.534,430,2.785,431,3.522,432,2.617,433,0.612,434,2.106,435,2.617,436,2.617,437,2.251,438,2.617,439,3.534,440,3.039,441,3.534,442,2.067,443,2.971,444,0.935,445,3.221,446,3.534,447,2.617,448,1.731,449,2.617,450,2.359,451,2.2,452,2.2,453,1.731,454,2.152,455,2.617,456,2.617,457,2.359,458,3.266,459,2.48,460,2.304,461,1.071,462,3.186,463,4.25,464,2.418,465,2.418,466,3.439,467,4.355,468,4.356,469,3.877,470,3.534,471,4.002,472,3.894,473,3.441,474,2.418,475,4.355,476,0.959,477,2.546,478,2.359,479,2.418,576,1.159,743,2.673]],["title/classes/TheatreStatusDTO.html",[0,0.341,748,2.91]],["body/classes/TheatreStatusDTO.html",[0,0.67,2,0.376,3,0.054,4,0.047,5,0.054,7,0.265,12,0.762,14,0.085,15,0.21,18,0.12,19,0.006,20,0.45,21,0.153,24,0.213,27,0.974,34,0.088,44,0.454,45,1.44,49,1.691,53,0.011,54,0.011,55,0.011,56,0.011,91,1.7,98,1.722,106,0.798,114,1.517,115,2.352,171,0.628,342,1.45,372,1.385,373,1.768,379,0.788,382,1.652,406,1.625,407,1.652,419,1.055,421,1.115,422,1.445,430,2.382,433,0.908,461,1.856,485,1.847,487,0.756,501,0.812,514,1.18,515,2.241,538,0.928,542,3.122,551,2.114,552,2.114,553,2.114,554,2.114,555,2.114,556,2.114,557,2.114,558,2.114,559,2.114,564,1.68,575,1.798,589,1.361,603,2.197,605,2.197,629,1.929,739,4.551,740,3.829,746,3.54,747,4.551,748,5.03,749,3.829,750,3.829,751,3.676,752,3.829,753,3.676,754,3.829,755,3.829,756,3.829,757,4.923,758,4.726,759,3.829,760,3.829,761,2.241,762,3.829,763,3.829,764,4.551,765,3.829,766,3.829,767,3.676,768,3.676,769,3.676,770,3.829,771,3.829,772,3.676,3658,5.796,3659,5.796,3660,5.796]],["title/injectables/TokenService.html",[232,3.022,649,1.918]],["body/injectables/TokenService.html",[0,0.378,3,0.05,4,0.043,5,0.05,7,0.242,9,0.933,11,1.035,12,0.787,14,0.077,15,0.198,18,0.115,19,0.006,21,0.177,24,0.258,26,1.411,29,2.294,34,0.05,37,0.425,44,0.452,45,1.124,47,1.756,53,0.01,54,0.01,55,0.01,56,0.01,69,2.683,84,1.222,97,1.482,98,1.82,99,1.458,102,3.768,103,1.452,104,1.034,116,4.026,127,2.215,136,2.104,137,2.294,138,5.052,160,4.342,232,4.451,245,1.843,251,2.083,252,2.402,295,3.493,332,1.966,421,0.825,431,3.222,487,0.738,504,1.929,649,2.825,651,2.837,664,4.286,674,2.837,697,2.402,795,2.377,796,2.377,823,2.825,824,3.766,829,2.706,1014,2.14,1067,5.306,1116,5.125,1298,4.639,1476,4.848,1484,6.092,1549,7.792,1551,7.487,1647,6.892,1687,5.392,1818,4.451,1922,5.392,1933,6.262,1972,4.717,2448,4.138,2504,5.764,3172,7.487,3458,6.262,3661,5.287,3662,7.018,3663,7.877,3664,9.414,3665,8.391,3666,8.391,3667,8.391,3668,7.018,3669,7.018,3670,7.018,3671,7.018,3672,5.287,3673,8.391,3674,8.976,3675,5.287,3676,8.391,3677,5.287,3678,7.018,3679,5.287,3680,7.018,3681,5.287,3682,7.018,3683,5.287,3684,5.287,3685,7.018,3686,7.018,3687,5.287,3688,7.877,3689,8.391,3690,5.287,3691,5.287,3692,7.877,3693,5.287]],["title/classes/TopologyElement.html",[0,0.341,467,2.418]],["body/classes/TopologyElement.html",[0,0.674,2,0.326,3,0.047,4,0.041,5,0.047,9,0.755,11,0.984,12,0.595,14,0.073,15,0.191,18,0.099,19,0.006,20,0.428,21,0.126,24,0.346,34,0.091,37,0.404,38,0.967,39,1.54,44,0.376,46,1.945,53,0.009,54,0.009,55,0.009,56,0.009,94,1.388,103,1.404,116,3.045,127,1.588,162,2.476,171,0.351,177,1.931,202,1.804,219,1.985,277,2.745,286,3.798,342,1.259,343,2.758,345,1.644,367,2.553,368,2.624,369,1.81,370,2.259,376,1.091,379,0.817,382,1.935,385,2.911,386,2.441,387,2.424,388,2.911,389,2.424,390,2.677,391,2.424,392,3.527,393,2.624,394,3.527,395,2.624,396,3.527,397,2.624,398,3.192,399,2.487,400,3.528,401,2.365,402,2.552,403,1.534,404,2.106,405,2.219,406,1.903,407,1.935,408,2.259,409,2.309,410,2.487,411,2.552,412,2.119,413,3.702,414,3.225,415,3.225,416,3.225,417,4.547,418,4.374,419,0.755,420,2.911,421,0.798,422,1.034,423,3.445,424,2.573,425,3.54,426,3.54,427,2.624,428,2.385,429,3.54,430,2.79,431,3.527,432,2.624,433,0.613,434,2.111,435,2.624,436,2.624,437,2.256,438,2.624,439,3.54,440,3.045,441,3.54,442,2.07,443,2.976,444,0.936,445,3.225,446,3.54,447,2.624,448,1.735,449,2.624,450,2.365,451,2.206,452,2.206,453,1.735,454,2.158,455,2.624,456,2.624,457,2.365,458,3.271,459,2.487,460,2.309,461,1.074,462,3.192,463,4.161,464,2.424,465,2.424,466,3.445,467,4.358,468,4.264,469,3.795,470,3.54,471,4.007,472,3.899,473,3.446,474,2.424,475,4.174,476,0.961,477,2.553,478,2.365,479,2.424,743,1.984,3694,5.03,3695,5.03]],["title/interfaces/TopologyList.html",[411,1.478,466,2.418]],["body/interfaces/TopologyList.html",[0,0.674,3,0.047,4,0.041,5,0.047,9,0.755,11,0.984,12,0.595,14,0.073,15,0.191,18,0.099,19,0.006,20,0.428,24,0.346,34,0.091,38,0.968,39,1.54,44,0.376,46,1.946,53,0.009,54,0.009,55,0.009,56,0.009,94,1.389,99,1.257,103,1.405,116,3.046,127,1.589,162,2.477,171,0.352,177,1.931,202,2.078,219,1.986,277,2.746,286,3.799,342,1.26,343,2.759,345,1.646,367,2.555,368,2.626,369,1.81,370,2.26,376,1.092,379,0.817,382,1.936,385,2.913,386,2.441,387,2.426,388,2.913,389,2.426,390,2.679,391,2.426,392,3.529,393,2.626,394,3.529,395,2.626,396,3.529,397,2.626,398,3.193,399,2.489,400,3.529,401,2.367,402,2.552,403,1.535,404,2.107,405,2.22,406,1.905,407,1.936,408,2.26,409,2.311,410,2.489,411,2.552,412,2.12,413,3.704,414,3.226,415,3.226,416,3.226,417,4.699,418,4.375,419,0.755,420,2.913,421,0.798,422,1.035,423,3.447,424,2.575,425,3.542,426,3.542,427,2.626,428,2.386,429,3.542,430,2.791,431,3.529,432,2.626,433,0.614,434,2.113,435,2.626,436,2.626,437,2.258,438,2.626,439,3.542,440,3.046,441,3.542,442,2.071,443,2.978,444,0.937,445,3.226,446,3.542,447,2.626,448,1.737,449,2.626,450,2.367,451,2.208,452,2.208,453,1.737,454,2.159,455,2.626,456,2.626,457,2.367,458,3.273,459,2.489,460,2.311,461,1.075,462,3.193,463,4.039,464,2.426,465,2.426,466,3.901,467,4.492,468,3.965,469,3.529,470,3.542,471,4.009,472,3.901,473,3.447,474,2.426,475,4.175,476,0.962,477,2.555,478,2.367,479,2.426,576,1.163]],["title/classes/TypesCatalogueDTO.html",[0,0.341,516,2.044]],["body/classes/TypesCatalogueDTO.html",[0,0.686,2,0.246,3,0.036,4,0.031,5,0.036,7,0.173,9,0.952,12,0.636,13,1.37,14,0.055,15,0.204,18,0.118,19,0.006,20,0.452,21,0.135,24,0.242,27,0.638,30,1.592,34,0.09,37,0.688,38,1.034,39,0.76,44,0.458,45,1.485,49,1.643,53,0.007,54,0.007,55,0.007,56,0.007,91,1.727,96,1.559,97,0.713,104,0.82,106,1.064,114,0.772,115,1.197,171,0.648,180,0.597,219,0.98,352,1.285,369,1.08,370,1.262,371,1.663,372,1.403,373,2.213,376,1.207,379,0.85,382,1.878,402,1.177,403,2.009,404,2.251,405,2.154,406,1.064,407,1.586,408,1.851,419,1.071,421,1.132,422,1.467,433,1.11,442,1.157,444,0.984,461,1.549,476,1.259,480,1.485,484,1.701,485,1.884,486,2.495,487,0.762,488,2.495,489,2.495,496,2.335,497,2.335,498,1.701,499,2.547,500,1.177,501,0.531,502,1.701,503,1.627,504,1.383,505,1.701,506,1.701,507,1.701,508,1.701,509,1.262,510,1.627,511,1.701,512,1.663,513,1.262,514,1.133,515,2.151,516,3.314,517,2.955,518,2.955,519,2.009,520,1.701,521,2.386,522,1.701,523,2.495,524,1.701,525,1.701,526,1.592,527,3.66,528,1.358,529,1.663,530,1.701,531,2.386,532,1.701,533,1.701,534,1.701,535,1.701,536,1.701,537,1.701,538,1.162,539,1.701,540,1.627,541,2.386,542,1.438,543,2.335,544,1.701,545,1.701,546,2.439,547,1.701,548,1.701,549,2.386,550,1.701,551,1.383,552,1.383,553,1.383,554,1.383,555,1.383,556,1.383,557,1.383,558,1.383,559,1.383,560,1.701,561,1.701,562,1.701,563,1.663,564,1.613,565,1.663,566,1.663,567,1.663,568,1.663,569,1.663,570,1.663,571,1.663,572,0.863,573,1.392,574,1.663,575,1.726,576,0.876,577,1.701,578,1.701,579,0.919,580,1.701,581,1.592,582,1.627,583,2.239,584,0.996,585,1.41,586,1.137,587,2.495,588,1.207,589,1.814,590,1.197,591,1.438,592,2.439,593,1.383,594,1.663,595,2.955,596,1.663,597,1.41,598,2.889,599,2.273,600,1.627,601,1.701,602,1.592,603,1.438,604,1.701,605,1.438,743,1.496,3696,3.793,3697,3.793,3698,3.793,3699,3.793]],["title/components/UnderbarComponent.html",[57,0.97,212,1.879]],["body/components/UnderbarComponent.html",[0,0.367,3,0.048,4,0.042,5,0.048,7,0.235,14,0.075,18,0.113,19,0.006,21,0.154,24,0.253,26,1.371,27,1.394,31,3.025,32,2.386,33,1.985,34,0.048,37,0.413,38,0.981,39,1.379,41,3.001,44,0.432,45,1.102,48,3.19,49,1.46,52,1.838,53,0.009,54,0.009,55,0.009,56,0.009,57,1.401,58,2.11,59,1.985,60,2.203,61,2.203,62,2.203,66,2.203,67,4.316,68,4.087,70,2.889,72,2.889,84,1.794,91,1.234,97,0.966,98,1.187,99,0.951,102,3.481,136,1.54,137,2.25,149,3.547,164,2.203,165,2.952,166,1.393,167,2.203,168,2.445,169,2.203,170,2.067,171,0.654,172,2.252,173,2.067,174,3.404,175,2.067,176,2.11,177,1.947,178,2.252,179,2.11,180,1.432,181,2.252,182,2.11,183,2.252,184,2.252,185,2.025,186,2.252,187,2.067,188,2.252,189,2.025,190,2.067,191,2.252,192,2.025,193,2.025,194,2.252,195,2.252,196,2.11,197,2.252,198,2.025,199,2.11,200,2.252,201,2.156,202,1.947,203,2.156,204,3.018,205,2.156,206,2.156,207,2.025,208,2.025,209,2.252,210,2.025,211,2.025,212,3.511,213,2.252,214,2.067,215,2.252,216,2.252,217,2.252,245,1.808,251,1.565,252,1.566,332,1.909,338,2.11,421,0.975,458,3.317,487,0.681,572,1.886,611,1.102,697,2.099,823,2.77,829,1.93,831,2.332,857,4.547,918,5.288,1005,2.829,1109,2.929,1139,6.141,1140,5.729,1146,3.926,1147,3.926,1159,5.128,1180,3.028,1197,6.372,1225,4.754,1283,3.317,1298,3.805,1387,4.997,1388,4.997,1454,3.926,1569,3.16,2050,5.653,2056,5.653,2503,5.653,2682,7.4,3519,6.141,3700,5.135,3701,8.294,3702,6.883,3703,6.883,3704,7.763,3705,6.883,3706,6.883,3707,6.883,3708,6.883,3709,6.883,3710,6.372,3711,5.135,3712,6.883,3713,6.883,3714,6.883,3715,6.372,3716,5.135,3717,5.135,3718,5.135,3719,5.135,3720,5.135,3721,5.135,3722,6.883,3723,5.135,3724,5.135,3725,5.135,3726,5.135]],["title/classes/UnderbarElement.html",[0,0.341,3710,3.661]],["body/classes/UnderbarElement.html",[0,0.604,2,0.46,3,0.067,4,0.058,5,0.067,7,0.324,11,1.003,14,0.104,15,0.238,18,0.104,19,0.006,20,0.398,21,0.132,24,0.261,25,4.82,26,1.895,27,1.193,29,2.949,32,2.33,34,0.079,37,0.57,41,3.487,46,2.744,49,1.335,52,3.024,53,0.013,54,0.013,55,0.013,56,0.013,104,1.245,180,1.331,212,3.761,611,1.444,829,2.369,841,2.917,1113,3.703,1117,2.691,1134,5.358,2230,4.982,3710,6.491,3715,6.931,3727,6.334,3728,7.099,3729,6.334,3730,6.334,3731,6.334,3732,6.334]],["title/classes/UnderbarItem.html",[0,0.341,3715,3.661]],["body/classes/UnderbarItem.html",[0,0.592,2,0.444,3,0.064,4,0.056,5,0.064,7,0.313,11,0.988,14,0.1,15,0.233,18,0.135,19,0.006,20,0.408,21,0.171,24,0.252,25,5.068,26,1.829,27,1.391,29,2.904,32,1.89,34,0.078,37,0.741,41,2.649,46,3.198,49,1.671,52,3.381,53,0.013,54,0.013,55,0.013,56,0.013,99,1.708,104,1.01,180,1.079,212,3.639,611,1.423,743,2.702,829,1.921,841,3.399,1113,4.314,1117,3.135,1134,4.345,2230,5.569,3710,5.264,3715,6.826,3727,6.113,3729,7.38,3730,7.38,3731,6.113,3732,6.113,3733,6.852,3734,6.852,3735,6.852,3736,6.852]],["title/classes/VirtualMachine.html",[0,0.341,991,2.089]],["body/classes/VirtualMachine.html",[0,0.693,2,0.275,3,0.04,4,0.034,5,0.04,7,0.194,9,0.999,11,0.934,12,0.372,13,1.486,14,0.062,15,0.227,18,0.088,19,0.006,20,0.433,21,0.112,24,0.156,31,1.549,34,0.091,37,0.674,44,0.459,45,1.293,47,1.757,53,0.008,54,0.008,55,0.008,56,0.008,91,1.743,103,0.878,104,0.89,106,1.053,109,1.295,171,0.297,239,1.641,259,1.904,342,1.062,372,1.015,379,0.529,411,1.872,412,1.171,419,1.082,421,1.139,422,1.477,433,1.134,444,1.076,448,3.26,476,1.461,485,1.904,487,0.664,500,1.872,501,1.21,514,0.864,538,0.68,573,1.062,576,1.622,579,2.034,584,1.115,586,1.273,588,1.82,589,2.027,611,1.224,615,2.201,616,2.201,618,2.201,619,1.609,620,2.843,621,1.438,622,1.938,623,1.578,624,1.578,625,1.549,626,1.52,627,1.52,629,1.413,640,1.75,644,1.578,761,1.641,777,2.787,780,3.393,789,1.641,805,1.874,956,2.707,957,1.949,958,1.949,959,2.771,960,1.904,961,1.904,962,1.904,963,2.707,965,2.707,967,2.707,969,2.707,970,2.707,971,2.707,972,2.707,973,2.707,974,2.589,975,2.646,976,2.646,977,2.646,978,3.353,979,2.646,980,1.949,981,1.949,982,1.709,983,1.821,984,2.646,985,1.904,986,1.904,987,2.707,988,1.904,989,2.707,990,1.904,991,3.079,992,3.224,993,1.949,994,1.949,995,1.949,996,3.012,997,3.43,998,1.862,999,2.513,1000,2.771,1001,3.15,1002,3.012,1003,3.353,1004,1.949,1005,1.745,1006,1.782,1007,1.949,1008,1.904,1009,1.364,1010,3.15,1011,3.43,1012,1.674,1013,1.862,1014,1.84,1015,2.707,1016,2.707,1017,2.707,1018,2.771,1019,2.646,1020,1.904,1021,1.904,1022,1.904,3737,4.245,3738,4.245]],["title/classes/VirtualMachinePorts.html",[0,0.341,1003,2.089]],["body/classes/VirtualMachinePorts.html",[0,0.692,2,0.273,3,0.04,4,0.034,5,0.04,7,0.193,9,1.011,11,0.931,12,0.369,13,1.479,14,0.062,15,0.227,18,0.102,19,0.006,20,0.434,21,0.13,24,0.155,31,1.538,34,0.091,37,0.673,44,0.459,45,1.341,47,1.75,53,0.008,54,0.008,55,0.008,56,0.008,91,1.742,103,0.872,104,0.885,106,1.05,109,1.285,171,0.294,239,1.63,259,1.891,342,1.055,372,1.009,379,0.526,411,1.863,412,1.163,419,1.081,421,1.138,422,1.475,433,1.132,444,1.074,448,3.256,476,1.456,485,1.902,487,0.662,500,1.308,501,1.207,514,0.858,538,0.675,573,1.055,576,1.616,579,2.135,584,1.107,586,1.264,588,1.816,589,2.023,611,1.22,615,2.19,616,2.19,618,2.19,619,1.598,620,2.834,621,1.428,622,1.929,623,1.567,624,1.567,625,1.538,626,1.509,627,1.509,629,1.403,640,2.028,644,1.567,761,1.63,777,2.779,780,3.389,789,1.63,805,1.867,956,2.693,957,1.935,958,1.935,959,2.757,960,1.891,961,1.891,962,1.891,963,2.693,965,2.693,967,2.693,969,2.693,970,2.693,971,2.693,972,2.693,973,2.693,974,2.575,975,2.633,976,2.633,977,2.633,978,3.342,979,2.633,980,1.935,981,1.935,982,1.697,983,1.808,984,2.633,985,1.891,986,1.891,987,2.693,988,1.891,989,2.693,990,1.891,991,2.633,992,3.211,993,1.935,994,1.935,995,1.935,996,3.455,997,3.614,998,1.848,999,2.504,1000,1.935,1001,1.891,1002,1.808,1003,3.342,1004,2.757,1005,2.468,1006,2.936,1007,1.935,1008,1.891,1009,1.354,1010,3.137,1011,3.419,1012,1.663,1013,1.848,1014,1.831,1015,2.693,1016,2.693,1017,2.693,1018,2.757,1019,2.633,1020,1.891,1021,1.891,1022,1.891,3739,4.215,3740,4.215,3741,4.215]],["title/classes/VirtualizationEnvironmentTypeDTO.html",[0,0.341,1990,3.661]],["body/classes/VirtualizationEnvironmentTypeDTO.html",[0,0.626,2,0.429,3,0.062,4,0.054,5,0.062,7,0.302,14,0.097,15,0.228,18,0.139,19,0.006,20,0.442,21,0.179,34,0.082,44,0.435,49,1.715,53,0.012,54,0.012,55,0.012,56,0.012,91,1.569,171,0.637,338,2.718,369,1.572,372,1.471,373,2.78,379,0.853,398,4.114,419,0.973,421,1.028,422,1.333,444,0.987,485,1.726,813,6.043,1977,4.194,1978,4.194,1979,4.194,1984,5.432,1988,6.649,1989,6.649,1990,6.722,1991,7.185,1992,7.185,1993,7.185,1994,5.432,1995,4.569,1996,5.432,1997,5.432,3742,6.614,3743,6.614,3744,6.614,3745,6.614,3746,6.614,3747,6.614,3748,6.614]],["title/components/VisualizerComponent.html",[57,0.97,214,1.918]],["body/components/VisualizerComponent.html",[0,0.214,3,0.028,4,0.024,5,0.065,7,0.136,9,1.004,11,0.516,12,0.745,14,0.044,15,0.131,18,0.126,19,0.006,20,0.205,21,0.168,24,0.292,26,0.797,27,0.78,29,2.514,31,2.688,32,2.346,33,1.154,34,0.028,37,0.712,38,1.164,39,1.637,44,0.428,45,1.18,47,1.162,48,1.227,49,1.447,52,1.069,53,0.006,54,0.006,55,0.006,56,0.006,57,0.945,58,1.227,59,2.202,60,1.28,61,1.28,62,1.28,66,1.28,67,4.109,68,3.832,70,1.949,72,1.949,74,4.043,76,3.612,77,4.388,80,4.245,81,5.966,84,1.316,85,2.167,94,2.346,97,0.561,98,1.073,99,0.553,102,3.717,104,0.684,106,1.125,107,2.358,108,2.491,109,2.425,114,0.945,115,1.798,127,1.465,129,1.972,130,1.972,136,1.708,137,0.976,138,3.448,140,1.651,149,4.438,161,2.062,163,2.167,164,1.28,165,1.991,166,0.81,167,1.28,168,2.052,169,1.28,170,1.202,171,0.571,172,1.309,173,1.202,174,2.498,175,1.202,176,1.227,177,1.634,178,1.309,179,1.227,180,0.897,181,1.309,182,1.227,183,1.309,184,1.309,185,1.177,186,1.309,187,1.202,188,1.309,189,1.177,190,1.202,191,1.309,192,1.177,193,1.177,194,1.309,195,1.309,196,1.227,197,1.309,198,1.177,199,1.227,200,1.309,201,1.253,202,1.508,203,1.253,204,2.036,205,1.253,206,1.253,207,1.177,208,1.177,209,1.309,210,1.177,211,1.177,212,1.177,213,1.309,214,2.966,215,2.498,216,1.309,217,1.309,219,1.2,230,6.234,245,1.219,251,1.461,252,0.91,270,3.207,338,3.495,343,0.959,344,2.293,345,0.976,361,4.665,376,1.725,379,0.407,433,0.969,434,3.338,442,1.96,445,3.338,450,3.021,454,1.28,459,2.295,461,1.372,487,0.795,501,0.651,514,0.945,528,1.662,597,2.389,599,1.602,611,1.485,625,1.089,653,3.222,686,5.277,709,3.567,795,2.177,796,2.177,797,4.142,798,5.662,799,4.142,800,4.142,801,4.142,803,4.438,804,4.142,805,2.337,806,6.532,807,1.339,808,3.612,811,4.678,812,5.082,814,5.082,815,5.082,817,5.733,818,6.575,819,6.575,820,3.924,821,5.584,823,2.966,824,2.491,825,3.567,826,4.142,827,2.615,829,2.23,830,4.481,831,1.573,832,4.142,833,4.142,835,5.35,836,5.733,837,6.575,838,5.733,839,4.665,841,2.641,842,5.733,843,6.415,844,3.813,847,3.813,849,1.831,850,3.37,851,3.567,852,4.142,853,2.818,854,3.567,855,2.356,857,3.067,858,3.067,859,2.036,861,5.09,862,4.142,863,2.062,865,4.142,868,3.021,869,5.733,872,3.813,873,2.295,874,2.421,875,3.067,876,4.142,878,4.142,879,4.142,880,3.567,885,3.567,887,3.763,889,1.11,890,2.664,891,2.664,892,2.452,893,2.664,894,2.664,895,1.823,896,2.452,897,2.664,899,4.142,900,2.664,907,4.678,908,2.664,909,2.664,910,2.294,911,1.602,912,2.664,913,4.678,914,5.082,915,7.096,916,1.404,917,2.664,918,2.294,920,5.733,921,4.678,922,2.664,923,4.678,924,2.664,925,4.142,926,3.067,928,4.142,930,6.575,931,5.733,937,2.664,938,5.733,939,5.733,941,3.37,942,3.567,943,2.664,944,2.664,1454,3.665,1455,4.665,2118,6.21,3749,9.097,3750,2.985,3751,5.696,3752,4.642,3753,4.642,3754,2.985,3755,2.985,3756,6.425,3757,2.985,3758,2.985,3759,2.985,3760,2.985,3761,2.985,3762,2.985,3763,2.985,3764,2.985,3765,6.425,3766,6.425,3767,2.985,3768,2.985,3769,2.985,3770,2.985,3771,2.985,3772,2.985,3773,2.985,3774,2.985,3775,2.985,3776,2.985]],["title/classes/_Control.html",[0,0.341,1052,2.418]],["body/classes/_Control.html",[0,0.538,2,0.382,3,0.055,4,0.048,5,0.055,7,0.269,11,0.655,12,0.66,14,0.086,15,0.212,18,0.137,19,0.006,20,0.399,21,0.175,24,0.305,26,1.572,27,1.266,32,1.624,34,0.071,37,0.703,44,0.269,53,0.011,54,0.011,55,0.011,56,0.011,57,1.84,70,2.472,72,2.472,76,5.732,84,1.361,97,1.561,98,1.917,99,1.536,104,0.868,106,0.811,109,1.796,157,4.524,175,3.03,180,1.423,202,1.767,245,1.977,251,1.712,252,2.296,267,2.232,268,2.322,269,2.276,343,1.891,369,1.461,376,1.633,379,0.824,386,2.624,444,0.718,453,2.031,487,0.618,514,1.533,519,2.296,664,3.596,711,5.97,735,2.55,743,2.322,807,2.641,820,3.596,823,2.37,898,4.973,916,2.769,1030,5.254,1031,5.254,1032,5.645,1033,4.836,1034,5.254,1035,5.254,1036,5.254,1037,5.784,1038,6.717,1039,3.82,1045,6.243,1046,7.404,1047,5.254,1048,6.183,1049,6.717,1050,5.784,1051,6.717,1052,3.82,1053,7.404,1054,4.96,1055,5.254,1056,7.183,1057,5.254,1058,5.254,1059,5.254,1060,5.254,1061,5.254,1062,6.717,1063,5.254,1064,5.254,1065,6.183,1066,6.717,1067,4.734,1068,5.254,1243,6.717,3777,7.528,3778,5.888,3779,7.528,3780,5.888,3781,7.528,3782,5.888,3783,5.888]],["title/dependencies.html",[220,4.411,3784,3.534]],["body/dependencies.html",[19,0.006,26,1.738,53,0.012,54,0.012,55,0.012,56,0.012,80,4.302,129,4.302,130,4.302,162,2.375,202,2.332,220,5.003,242,6.586,254,6.586,255,6.161,267,3.294,268,2.568,269,3.804,287,5.81,291,6.161,297,6.676,299,5.81,300,7.155,323,5.348,330,5.81,360,5.003,437,2.921,440,2.921,469,3.439,480,1.738,673,5.81,711,4.302,1570,3.6,3280,4.727,3281,4.727,3285,4.498,3287,4.498,3289,5.348,3293,4.727,3330,4.727,3785,6.512,3786,8.78,3787,6.512,3788,6.512,3789,6.512,3790,6.512,3791,6.512,3792,6.512,3793,6.512,3794,6.512,3795,6.512,3796,6.512,3797,6.512,3798,6.512,3799,6.512,3800,6.512,3801,6.512,3802,6.512,3803,6.512,3804,6.512,3805,6.512,3806,6.512,3807,6.512,3808,6.512,3809,6.512,3810,6.512,3811,6.512,3812,6.512,3813,6.512,3814,6.512,3815,6.512,3816,6.512,3817,8.018,3818,6.512,3819,6.512,3820,5.81,3821,6.512,3822,6.512,3823,6.512,3824,6.512,3825,6.512,3826,6.512,3827,5.81,3828,6.512,3829,6.512,3830,6.512,3831,6.512,3832,6.512,3833,6.512]],["title/miscellaneous/functions.html",[3834,3.96,3835,5.741]],["body/miscellaneous/functions.html",[9,0.467,11,1.011,12,0.705,14,0.061,18,0.143,19,0.006,20,0.41,32,2.428,37,0.482,38,1.085,39,1.201,44,0.434,45,1.52,53,0.008,54,0.008,55,0.008,56,0.008,97,1.786,98,2.194,99,1.757,103,1.73,104,0.62,114,1.703,171,0.532,219,1.086,251,2.182,277,2.595,290,4.921,291,3.229,292,5.347,376,1.909,385,2.57,386,2.375,388,2.57,390,2.363,392,1.93,394,1.93,396,1.93,400,2.57,406,1.68,421,1.035,422,1.341,428,2.94,430,3.617,433,1.092,434,3.195,437,1.885,440,1.885,444,1.107,445,3.195,453,2.409,461,1.879,462,3.934,473,3.132,487,0.803,513,2.784,579,1.019,646,2.398,710,2.398,743,2.363,777,1.45,787,4.342,795,2.834,796,2.834,805,2.479,823,2.412,824,3.216,829,2.733,830,4.085,831,2.834,835,3.051,857,3.958,858,5.814,859,2.628,868,3.934,999,1.505,1009,2.765,1087,4.591,1117,3.171,1134,5.582,1252,3.934,1279,1.843,1283,2.026,1298,4.866,1454,4.342,1584,5.365,1585,5.365,1586,5.365,1594,2.777,1596,3.051,1598,3.051,1612,3.052,1617,5.365,1618,5.365,1619,5.365,1624,3.051,1626,3.051,1628,3.051,1635,4.35,1682,4.604,1832,5.347,1836,5.347,2277,3.452,2291,4.49,2312,4.085,2331,4.49,2332,4.49,2333,4.49,2334,4.49,2400,3.452,2758,3.452,2917,4.604,2918,4.604,2919,4.604,2953,4.921,3351,3.452,3366,3.452,3370,3.452,3427,6.252,3836,7.612,3837,5.992,3838,4.203,3839,4.203,3840,4.203,3841,4.203,3842,4.203,3843,4.203,3844,4.203,3845,5.992,3846,8.802,3847,5.992,3848,5.992,3849,5.992,3850,5.992,3851,5.992,3852,5.992,3853,5.992,3854,4.203,3855,4.203,3856,5.992,3857,4.203,3858,5.992,3859,4.203,3860,4.203,3861,4.203,3862,5.992,3863,4.203,3864,4.203,3865,4.203,3866,7.612,3867,5.992,3868,5.992,3869,5.992,3870,4.203,3871,4.203,3872,4.203,3873,4.203,3874,4.203,3875,4.203,3876,4.203,3877,4.203,3878,4.203,3879,4.203,3880,4.203,3881,4.203,3882,4.203]],["title/index.html",[932,3.534,1737,1.776,3883,3.96]],["body/index.html",[4,0.055,19,0.006,53,0.013,54,0.013,55,0.013,56,0.013,57,1.805,68,2.803,94,2.275,116,3.059,124,6.085,171,0.476,252,2.704,267,3.361,269,2.637,332,2.536,362,6.813,538,1.321,542,2.585,594,3.617,942,5.24,1005,2.803,1033,5.601,1037,5.24,1109,3.891,1140,4.711,1260,6.085,1447,4.165,1476,5.698,1612,3.009,1745,6.085,2254,5.843,3285,4.711,3287,4.711,3307,4.951,3309,4.951,3786,6.085,3820,7.912,3827,6.085,3884,8.248,3885,6.82,3886,6.82,3887,6.82,3888,6.82,3889,6.82,3890,6.82,3891,6.82,3892,6.82,3893,6.82,3894,6.82,3895,6.82,3896,6.82,3897,9.433,3898,9.699,3899,6.82,3900,6.82,3901,6.82,3902,6.82,3903,6.82,3904,6.82,3905,6.82,3906,8.867,3907,6.82,3908,9.433,3909,6.82,3910,6.82,3911,6.82,3912,6.82,3913,6.82,3914,6.82,3915,6.82,3916,8.248,3917,8.248,3918,9.212,3919,6.82,3920,8.248,3921,6.82,3922,6.82,3923,6.82,3924,6.82,3925,8.867,3926,6.82,3927,6.82]],["title/modules.html",[933,4.519]],["body/modules.html",[12,0.685,19,0.005,53,0.014,54,0.014,55,0.014,56,0.014,218,6.003,219,2.019,227,5.672,255,6.003,345,2.921,1880,6.971,2782,6.971,3928,7.813,3929,7.813,3930,8.934,3931,7.813]],["title/overview.html",[3932,6.542]],["body/overview.html",[2,0.382,19,0.006,33,3.634,53,0.011,54,0.011,55,0.011,56,0.011,58,3.912,59,2.281,173,3.523,175,3.343,176,3.863,179,3.413,182,3.413,185,3.276,187,3.343,189,3.276,190,3.343,192,3.276,193,3.276,196,3.863,198,3.276,199,3.863,201,3.486,203,3.486,205,3.486,206,3.486,207,3.276,208,3.276,210,3.276,211,3.276,212,3.276,214,3.523,218,7.936,219,1.525,220,5.791,221,5.264,222,5.264,223,5.264,224,5.264,225,5.264,226,5.264,227,6.03,228,7.411,229,5.267,230,5.737,231,5.487,232,5.267,233,5.264,234,4.846,235,5.264,576,1.363,651,3.166,735,1.999,1451,4.846,1607,3.897,2156,5.264,3933,5.9,3934,5.9,3935,5.9]],["title/properties.html",[476,1.097,3784,3.534]],["body/properties.html",[15,0.223,19,0.006,53,0.015,54,0.015,55,0.015,56,0.015,538,1.268,3936,7.917]],["title/classes/reteBasicModuleInfo.html",[0,0.341,2330,2.557]],["body/classes/reteBasicModuleInfo.html",[0,0.549,2,0.573,3,0.057,4,0.049,5,0.057,7,0.277,8,3.386,9,0.936,11,0.936,14,0.088,15,0.216,18,0.144,19,0.006,20,0.438,21,0.184,24,0.282,27,1.414,34,0.072,37,0.71,38,1.093,44,0.384,53,0.011,54,0.011,55,0.011,56,0.011,96,3.457,171,0.618,180,1.392,219,1.982,369,1.716,372,1.289,375,4.276,376,2.02,379,0.839,386,2.64,403,2.946,414,3.531,415,3.531,416,3.531,428,2.956,452,3.689,453,2.092,480,2.047,501,1.179,538,1.228,572,2.01,583,2.441,590,2.421,591,2.907,711,5.84,805,2.246,831,2.85,889,2.254,1456,4,1461,4.514,2328,3.703,2330,4.514,3250,4.659,3251,4.659,3252,4.659,3253,4.659,3254,4.659,3255,4.659,3937,5.41,3938,6.063,3939,6.063,3940,6.063,3941,6.063,3942,6.063,3943,6.063,3944,6.063,3945,5.41,3946,5.41]],["title/classes/reteBasicNodeInfo.html",[0,0.341,2328,2.91]],["body/classes/reteBasicNodeInfo.html",[0,0.583,2,0.593,3,0.063,4,0.054,5,0.063,7,0.305,8,3.537,9,0.977,11,0.977,14,0.097,15,0.229,18,0.134,19,0.006,20,0.434,21,0.17,24,0.299,27,1.477,34,0.077,37,0.735,44,0.401,53,0.012,54,0.012,55,0.012,56,0.012,96,3.611,171,0.639,180,1.441,219,1.727,369,1.706,379,0.77,386,2.587,403,2.484,414,2.804,415,2.804,416,2.804,428,3.088,452,3.854,453,2.81,501,1.231,572,2.081,711,6.043,805,2.346,831,2.977,889,2.484,1456,4.583,1461,4.371,2328,4.975,2330,4.371,3937,5.961,3945,5.961,3946,5.961,3947,6.681,3948,6.681,3949,6.681,3950,6.681]],["title/routes.html",[356,5.373]],["body/routes.html",[19,0.006,53,0.015,54,0.015,55,0.015,56,0.015,356,6.529]]],"invertedIndex":[["",{"_index":19,"title":{},"body":{"classes/Aoption.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"injectables/AttachmentsService.html":{},"injectables/AuthGuard.html":{},"classes/BlueprintFileDTO.html":{},"classes/BorderNetworkDTO.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"components/ControlTemplate.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputReturnedV2.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/DeployInstanceDTO.html":{},"components/DocsComponent.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"classes/FlavorApplication.html":{},"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"injectables/FlavorService.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"classes/HostModuleDTO.html":{},"classes/HostNode.html":{},"classes/HostPortModuleDTO.html":{},"components/HowToUseComponent.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModalButton.html":{},"components/ModalComponent.html":{},"classes/ModalItem.html":{},"injectables/ModalService.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"injectables/ModuleService.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"interfaces/ModuleTopology.html":{},"classes/NameMappingDTO.html":{},"components/NavbarComponent.html":{},"classes/NavbarElement.html":{},"components/NavbarElementComponent.html":{},"classes/NavbarItem.html":{},"classes/NetOSRouterDTO.html":{},"components/NetworkComponent.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkDTO.html":{},"classes/NetworkNode.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/NodeTopologyElement.html":{},"components/OffcanvasComponent.html":{},"classes/PageableDTO.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SelectOption.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/SingleDataInputReturned.html":{},"classes/SortDTO.html":{},"classes/SourceExport.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"classes/StatisticItemDTO.html":{},"injectables/StorageService.html":{},"components/SubnetComponent.html":{},"classes/SubnetDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"components/TabnavComponent.html":{},"classes/TabnavElement.html":{},"classes/TabnavItem.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"injectables/TheaterService.html":{},"classes/TheaterSimpleData.html":{},"interfaces/TheaterTopology.html":{},"classes/TheatreStatusDTO.html":{},"injectables/TokenService.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/TypesCatalogueDTO.html":{},"components/UnderbarComponent.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{},"routes.html":{}}}],["0",{"_index":735,"title":{},"body":{"injectables/AuthGuard.html":{},"components/ControlTemplate.html":{},"components/DataInputV2Component.html":{},"components/DocsComponent.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/HostNode.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"components/ModalComponent.html":{},"injectables/ModuleService.html":{},"components/NavbarElementComponent.html":{},"classes/NetworkNode.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SubnetNode.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/_Control.html":{},"overview.html":{}}}],["0!important",{"_index":1348,"title":{},"body":{"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{}}}],["0.1",{"_index":3324,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["0.2.0",{"_index":3815,"title":{},"body":{"dependencies.html":{}}}],["0.2.1",{"_index":3817,"title":{},"body":{"dependencies.html":{}}}],["0.2.2",{"_index":3826,"title":{},"body":{"dependencies.html":{}}}],["0.2s",{"_index":2184,"title":{},"body":{"components/HomeComponent.html":{},"components/NavbarElementComponent.html":{}}}],["0.3.0",{"_index":3827,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["0.3.1",{"_index":3823,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":3828,"title":{},"body":{"dependencies.html":{}}}],["0.5.0",{"_index":3818,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":3825,"title":{},"body":{"dependencies.html":{}}}],["0.6.1",{"_index":3821,"title":{},"body":{"dependencies.html":{}}}],["0.6s",{"_index":2725,"title":{},"body":{"components/NavbarElementComponent.html":{}}}],["0.7",{"_index":2157,"title":{},"body":{"components/HomeComponent.html":{}}}],["0.8.3",{"_index":3824,"title":{},"body":{"dependencies.html":{}}}],["0.9.1",{"_index":3833,"title":{},"body":{"dependencies.html":{}}}],["0.9em",{"_index":1422,"title":{},"body":{"components/DataItemComponent.html":{}}}],["000000",{"_index":2197,"title":{},"body":{"components/HomeComponent.html":{}}}],["0000005e",{"_index":2114,"title":{},"body":{"components/HomeComponent.html":{},"injectables/ModalService.html":{}}}],["05",{"_index":2175,"title":{},"body":{"components/HomeComponent.html":{}}}],["0d6fd0",{"_index":2174,"title":{},"body":{"components/HomeComponent.html":{}}}],["0f131a",{"_index":144,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["0px",{"_index":2195,"title":{},"body":{"components/HomeComponent.html":{}}}],["1",{"_index":1569,"title":{},"body":{"components/DocsComponent.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"injectables/ModuleService.html":{},"components/NetworkComponent.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{}}}],["1.0",{"_index":995,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["1.0.0",{"_index":3936,"title":{},"body":{"properties.html":{}}}],["1.0.1",{"_index":3809,"title":{},"body":{"dependencies.html":{}}}],["1.1.19",{"_index":3791,"title":{},"body":{"dependencies.html":{}}}],["1.14.0",{"_index":3811,"title":{},"body":{"dependencies.html":{}}}],["1.2.2",{"_index":3802,"title":{},"body":{"dependencies.html":{}}}],["1.2em",{"_index":2179,"title":{},"body":{"components/HomeComponent.html":{}}}],["1.4.1",{"_index":3814,"title":{},"body":{"dependencies.html":{}}}],["1.5em",{"_index":2834,"title":{},"body":{"components/OffcanvasComponent.html":{},"components/TabnavComponent.html":{}}}],["1.8.1",{"_index":3799,"title":{},"body":{"dependencies.html":{}}}],["1.9.0",{"_index":3831,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":1561,"title":{},"body":{"components/DocsComponent.html":{},"components/HomeComponent.html":{},"components/NavbarElementComponent.html":{},"components/OffcanvasComponent.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"components/TabnavComponent.html":{}}}],["10em",{"_index":3529,"title":{},"body":{"components/TabnavComponent.html":{}}}],["10px",{"_index":2241,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["11.0.2",{"_index":3805,"title":{},"body":{"dependencies.html":{}}}],["110",{"_index":1079,"title":{},"body":{"components/ControlTemplate.html":{}}}],["12",{"_index":3934,"title":{},"body":{"overview.html":{}}}],["12.0.1",{"_index":3806,"title":{},"body":{"dependencies.html":{}}}],["12.16.1",{"_index":3887,"title":{},"body":{"index.html":{}}}],["12.20",{"_index":3889,"title":{},"body":{"index.html":{}}}],["124",{"_index":3935,"title":{},"body":{"overview.html":{}}}],["140px",{"_index":1081,"title":{},"body":{"components/ControlTemplate.html":{}}}],["1459",{"_index":3774,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["14px",{"_index":2261,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["150",{"_index":2188,"title":{},"body":{"components/HomeComponent.html":{}}}],["16",{"_index":1453,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["18px",{"_index":2251,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["19",{"_index":2155,"title":{},"body":{"components/HomeComponent.html":{}}}],["1em",{"_index":1411,"title":{},"body":{"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/TabnavComponent.html":{}}}],["1px",{"_index":1075,"title":{},"body":{"components/ControlTemplate.html":{},"components/DocsComponent.html":{}}}],["1px!important",{"_index":1414,"title":{},"body":{"components/DataItemComponent.html":{}}}],["1rem",{"_index":2839,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["2",{"_index":1607,"title":{},"body":{"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"components/HomeComponent.html":{},"injectables/ModalService.html":{},"overview.html":{}}}],["2*$socket",{"_index":2266,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["2.0.1",{"_index":3796,"title":{},"body":{"dependencies.html":{}}}],["2.10.2",{"_index":3793,"title":{},"body":{"dependencies.html":{}}}],["2.7vw",{"_index":2177,"title":{},"body":{"components/HomeComponent.html":{}}}],["200",{"_index":3347,"title":{},"body":{"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["26",{"_index":2156,"title":{},"body":{"components/HomeComponent.html":{},"overview.html":{}}}],["2a2f34",{"_index":2826,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["2em",{"_index":3528,"title":{},"body":{"components/TabnavComponent.html":{}}}],["2px",{"_index":1073,"title":{},"body":{"components/ControlTemplate.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["3",{"_index":1789,"title":{},"body":{"classes/ExportModule.html":{},"classes/ExportTheater.html":{}}}],["3.6.0",{"_index":3801,"title":{},"body":{"dependencies.html":{}}}],["30px",{"_index":1070,"title":{},"body":{"components/ControlTemplate.html":{}}}],["39",{"_index":2720,"title":{},"body":{"components/NavbarElementComponent.html":{}}}],["39px",{"_index":2196,"title":{},"body":{"components/HomeComponent.html":{}}}],["4",{"_index":1451,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"overview.html":{}}}],["400",{"_index":3331,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["4000",{"_index":3327,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["5.1.3",{"_index":3797,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":2721,"title":{},"body":{"components/NavbarElementComponent.html":{},"components/OffcanvasComponent.html":{}}}],["50%!important",{"_index":2848,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["5000",{"_index":3326,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["502",{"_index":3776,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["5rem",{"_index":2838,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["6.10.3",{"_index":3813,"title":{},"body":{"dependencies.html":{}}}],["6.12.6",{"_index":3795,"title":{},"body":{"dependencies.html":{}}}],["6.4.0",{"_index":3829,"title":{},"body":{"dependencies.html":{}}}],["626a71",{"_index":1410,"title":{},"body":{"components/DataItemComponent.html":{}}}],["64",{"_index":3329,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["6px",{"_index":1074,"title":{},"body":{"components/ControlTemplate.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["768px",{"_index":2846,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["8",{"_index":1955,"title":{},"body":{"injectables/FileService.html":{}}}],["8.0.1",{"_index":3803,"title":{},"body":{"dependencies.html":{}}}],["8px",{"_index":2252,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["9.0.1",{"_index":3807,"title":{},"body":{"dependencies.html":{}}}],["9.1.12",{"_index":3786,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["9.2.0",{"_index":3808,"title":{},"body":{"dependencies.html":{}}}],["93a1ba",{"_index":2832,"title":{},"body":{"components/OffcanvasComponent.html":{},"components/TabnavComponent.html":{}}}],["99",{"_index":2836,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["999",{"_index":1077,"title":{},"body":{"components/ControlTemplate.html":{}}}],["_control",{"_index":1052,"title":{"classes/_Control.html":{}},"body":{"components/ControlTemplate.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/_Control.html":{}}}],["_data",{"_index":3455,"title":{},"body":{"injectables/StorageService.html":{}}}],["_show",{"_index":2429,"title":{},"body":{"components/ModalComponent.html":{},"components/OffcanvasComponent.html":{}}}],["_socket",{"_index":2324,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["_value",{"_index":1234,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["a.area",{"_index":1914,"title":{},"body":{"classes/ExportTheater.html":{}}}],["a.classlist.add('d",{"_index":691,"title":{},"body":{"injectables/AttachmentsService.html":{}}}],["a.click",{"_index":694,"title":{},"body":{"injectables/AttachmentsService.html":{}}}],["a.description",{"_index":1915,"title":{},"body":{"classes/ExportTheater.html":{}}}],["a.href",{"_index":693,"title":{},"body":{"injectables/AttachmentsService.html":{}}}],["a.remove",{"_index":696,"title":{},"body":{"injectables/AttachmentsService.html":{}}}],["a_element",{"_index":2698,"title":{},"body":{"components/NavbarComponent.html":{}}}],["a_element.setattribute(opt.attr_key",{"_index":2703,"title":{},"body":{"components/NavbarComponent.html":{}}}],["a_option",{"_index":51,"title":{},"body":{"classes/Aoption.html":{},"classes/NavbarElement.html":{},"classes/NavbarItem.html":{}}}],["access",{"_index":731,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["accessori",{"_index":1245,"title":{},"body":{"components/DataInputV2Component.html":{},"components/ModalComponent.html":{},"components/OffcanvasComponent.html":{},"injectables/StorageService.html":{}}}],["accettabile",{"_index":1941,"title":{},"body":{"injectables/FileService.html":{}}}],["accordion",{"_index":1353,"title":{},"body":{"components/DataItemComponent.html":{}}}],["activatedroutesnapshot",{"_index":705,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["activates",{"_index":2234,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["active",{"_index":811,"title":{},"body":{"components/ComposerComponent.html":{},"components/TabnavComponent.html":{},"components/VisualizerComponent.html":{}}}],["active(val",{"_index":3516,"title":{},"body":{"components/TabnavComponent.html":{}}}],["activetab",{"_index":3508,"title":{},"body":{"components/TabnavComponent.html":{}}}],["actual_component",{"_index":217,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["ad",{"_index":1005,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/ExportModule.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"components/UnderbarComponent.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"index.html":{}}}],["adattabile",{"_index":1656,"title":{},"body":{"classes/ExportModule.html":{},"classes/ExportTheater.html":{}}}],["adatto",{"_index":2948,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["add",{"_index":3053,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["additional",{"_index":730,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["adeguate",{"_index":852,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["adeguato",{"_index":1299,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["afterviewinit",{"_index":2677,"title":{},"body":{"components/NavbarComponent.html":{}}}],["aggiornamento",{"_index":1319,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["aggiornare",{"_index":1321,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["aggiungere",{"_index":3891,"title":{},"body":{"index.html":{}}}],["aggiunta",{"_index":3890,"title":{},"body":{"index.html":{}}}],["aggiuntiva",{"_index":1844,"title":{},"body":{"injectables/ExportService.html":{},"injectables/FileService.html":{}}}],["aggiunto",{"_index":2062,"title":{},"body":{"components/HomeComponent.html":{}}}],["ai",{"_index":804,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["ajv",{"_index":3794,"title":{},"body":{"dependencies.html":{}}}],["al",{"_index":127,"title":{},"body":{"components/AppComponent.html":{},"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"classes/FlavorApplication.html":{},"components/HomeComponent.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/ReteConnection.html":{},"classes/SelectOption.html":{},"classes/SimpleModuleApplication.html":{},"classes/SingleDataInputReturned.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"injectables/TokenService.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"components/VisualizerComponent.html":{}}}],["alert(e",{"_index":2130,"title":{},"body":{"components/HomeComponent.html":{}}}],["align",{"_index":2253,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["all'ambiente",{"_index":3261,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["all'app",{"_index":1925,"title":{},"body":{"injectables/FileService.html":{}}}],["all'applacazione",{"_index":3076,"title":{},"body":{"injectables/ParseService.html":{}}}],["all'applicazione",{"_index":2949,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["all'elemento",{"_index":1267,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["all'export",{"_index":1657,"title":{},"body":{"classes/ExportModule.html":{},"classes/ExportTheater.html":{}}}],["all'inizializzazione",{"_index":850,"title":{},"body":{"components/ComposerComponent.html":{},"components/DataInputV2Component.html":{},"components/DocsComponent.html":{},"components/TabnavComponent.html":{},"components/VisualizerComponent.html":{}}}],["all'interno",{"_index":588,"title":{},"body":{"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/ExportModule.html":{},"classes/GenericParameterDTO.html":{},"classes/HostNode.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkNode.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/SourceExport.html":{},"classes/StatisticItemDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/TheaterSimpleData.html":{},"classes/TypesCatalogueDTO.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["all'occorrenza",{"_index":119,"title":{},"body":{"components/AppComponent.html":{}}}],["all'oggetto",{"_index":2891,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["all'utente",{"_index":2024,"title":{},"body":{"components/HomeComponent.html":{}}}],["alla",{"_index":31,"title":{},"body":{"classes/Aoption.html":{},"components/ComposerComponent.html":{},"classes/ConstraintsMSD.html":{},"classes/DataInputElement.html":{},"components/DataInputV2Component.html":{},"classes/ExportModule.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModalButton.html":{},"classes/ModalItem.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NavbarElement.html":{},"classes/NavbarItem.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"components/UnderbarComponent.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"components/VisualizerComponent.html":{}}}],["alle",{"_index":1660,"title":{},"body":{"classes/ExportModule.html":{},"classes/ExportTheater.html":{}}}],["allo",{"_index":1877,"title":{},"body":{"classes/ExportTheater.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{}}}],["allocate(component",{"_index":3317,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["allocationpool",{"_index":788,"title":{},"body":{"classes/BorderNetworkDTO.html":{},"classes/NetOSRouterDTO.html":{},"classes/NetworkDTO.html":{},"classes/SubnetDTO.html":{}}}],["allow",{"_index":728,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["alt_title",{"_index":2794,"title":{},"body":{"components/OffcanvasComponent.html":{},"components/TabnavComponent.html":{}}}],["alternativo",{"_index":2800,"title":{},"body":{"components/OffcanvasComponent.html":{},"components/TabnavComponent.html":{}}}],["altra",{"_index":1497,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["altri",{"_index":1499,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["ambo",{"_index":1757,"title":{},"body":{"classes/ExportModule.html":{}}}],["anche",{"_index":841,"title":{},"body":{"components/ComposerComponent.html":{},"injectables/FileService.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModalButton.html":{},"components/ModalComponent.html":{},"classes/ModalItem.html":{},"classes/NetworkNode.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{},"components/VisualizerComponent.html":{}}}],["anchor_parameters",{"_index":532,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["angular",{"_index":267,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthGuard.html":{},"components/ControlTemplate.html":{},"components/HostComponent.html":{},"classes/HostNode.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"components/NetworkComponent.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"components/SubnetComponent.html":{},"classes/SubnetNode.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/_Control.html":{},"dependencies.html":{},"index.html":{}}}],["angular/animations",{"_index":3785,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":287,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":295,"title":{},"body":{"modules/AppModule.html":{},"injectables/AttachmentsService.html":{},"components/DocsComponent.html":{},"injectables/FlavorService.html":{},"injectables/ModuleService.html":{},"injectables/TheaterService.html":{},"injectables/TokenService.html":{}}}],["angular/compiler",{"_index":3787,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":26,"title":{},"body":{"classes/Aoption.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AttachmentsService.html":{},"injectables/AuthGuard.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"injectables/ExportService.html":{},"injectables/FileService.html":{},"injectables/FlavorService.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/ModalButton.html":{},"components/ModalComponent.html":{},"classes/ModalItem.html":{},"injectables/ModalService.html":{},"injectables/ModuleService.html":{},"components/NavbarComponent.html":{},"classes/NavbarElement.html":{},"components/NavbarElementComponent.html":{},"classes/NavbarItem.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"injectables/ParseService.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"injectables/StorageService.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"classes/TabnavElement.html":{},"classes/TabnavItem.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"injectables/TheaterService.html":{},"injectables/TokenService.html":{},"components/UnderbarComponent.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{},"dependencies.html":{}}}],["angular/elements",{"_index":3788,"title":{},"body":{"dependencies.html":{}}}],["angular/forms",{"_index":323,"title":{},"body":{"modules/AppModule.html":{},"components/DataInputComponent.html":{},"dependencies.html":{}}}],["angular/localize",{"_index":3789,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":254,"title":{},"body":{"modules/AppModule.html":{},"components/DocsComponent.html":{},"dependencies.html":{}}}],["angular/router",{"_index":129,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"components/ComposerComponent.html":{},"components/HomeComponent.html":{},"components/VisualizerComponent.html":{},"dependencies.html":{}}}],["angularcomponent",{"_index":2278,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["angularcomponentdata",{"_index":2286,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["angularcontrol",{"_index":1046,"title":{},"body":{"components/ControlTemplate.html":{},"classes/_Control.html":{}}}],["angularrenderplugin",{"_index":3282,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["animation",{"_index":2185,"title":{},"body":{"components/HomeComponent.html":{},"components/NavbarElementComponent.html":{}}}],["annessa",{"_index":3188,"title":{},"body":{"classes/PerseDataForTheaterComposer.html":{}}}],["annullare",{"_index":1163,"title":{},"body":{"components/DataInputComponent.html":{}}}],["aoption",{"_index":1,"title":{"classes/Aoption.html":{}},"body":{"classes/Aoption.html":{},"classes/NavbarElement.html":{},"classes/NavbarItem.html":{}}}],["aperto",{"_index":1379,"title":{},"body":{"components/DataItemComponent.html":{}}}],["api",{"_index":1484,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/PageableDTO.html":{},"classes/SortDTO.html":{},"injectables/TokenService.html":{}}}],["api/flavor.service",{"_index":3097,"title":{},"body":{"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{}}}],["api/module.service",{"_index":2951,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["api/theater.service",{"_index":2950,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{}}}],["app",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"index.html":{}}}],["app.component",{"_index":260,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":73,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.sass",{"_index":71,"title":{},"body":{"components/AppComponent.html":{}}}],["app_initializer",{"_index":256,"title":{},"body":{"modules/AppModule.html":{}}}],["appartenenti",{"_index":2933,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["appartenenza",{"_index":488,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["appcomponent",{"_index":58,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"overview.html":{}}}],["appena",{"_index":2050,"title":{},"body":{"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"components/UnderbarComponent.html":{}}}],["application",{"_index":1831,"title":{},"body":{"injectables/ExportService.html":{}}}],["application/json",{"_index":1972,"title":{},"body":{"injectables/FileService.html":{},"injectables/TokenService.html":{}}}],["application/zip",{"_index":685,"title":{},"body":{"injectables/AttachmentsService.html":{}}}],["applicationref",{"_index":248,"title":{},"body":{"modules/AppModule.html":{}}}],["appmodule",{"_index":218,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appoggio",{"_index":1303,"title":{},"body":{"components/DataInputV2Component.html":{},"components/ModalComponent.html":{},"components/OffcanvasComponent.html":{}}}],["apposita",{"_index":1500,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["appostita",{"_index":562,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["appref",{"_index":250,"title":{},"body":{"modules/AppModule.html":{}}}],["appref.bootstrap(appcomponent",{"_index":348,"title":{},"body":{"modules/AppModule.html":{}}}],["approutingmodule",{"_index":227,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["apptype",{"_index":470,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["area",{"_index":480,"title":{},"body":{"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"components/DataInputV2Component.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/ExportTheater.html":{},"classes/GenericParameterDTO.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesTSD.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/SourceExport.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/TheaterSimpleData.html":{},"classes/TypesCatalogueDTO.html":{},"dependencies.html":{},"classes/reteBasicModuleInfo.html":{}}}],["areaapplication",{"_index":367,"title":{"classes/AreaApplication.html":{}},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["areacolordto",{"_index":477,"title":{"classes/AreaColorDTO.html":{}},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["areadto",{"_index":370,"title":{"classes/AreaDTO.html":{}},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"interfaces/CommonModule.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/FlavorApplication.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterApplication.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/TypesCatalogueDTO.html":{}}}],["areadto:179",{"_index":380,"title":{},"body":{"classes/AreaApplication.html":{}}}],["areadto:180",{"_index":384,"title":{},"body":{"classes/AreaApplication.html":{}}}],["areadto:181",{"_index":381,"title":{},"body":{"classes/AreaApplication.html":{}}}],["areadto:182",{"_index":378,"title":{},"body":{"classes/AreaApplication.html":{}}}],["areadto:183",{"_index":383,"title":{},"body":{"classes/AreaApplication.html":{}}}],["areadto:184",{"_index":377,"title":{},"body":{"classes/AreaApplication.html":{}}}],["areaexport",{"_index":606,"title":{"classes/AreaExport.html":{}},"body":{"classes/AreaExport.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesTSD.html":{},"classes/SourceExport.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{}}}],["areaplugin",{"_index":3283,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["areaplugin.zoomat(this.editor",{"_index":3312,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["areas",{"_index":593,"title":{},"body":{"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/ExportTheater.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesTSD.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/SourceExport.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheaterSimpleData.html":{},"classes/TypesCatalogueDTO.html":{}}}],["aree",{"_index":608,"title":{},"body":{"classes/AreaExport.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/ExportTheater.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesTSD.html":{},"classes/SourceExport.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{}}}],["arrange",{"_index":3287,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"dependencies.html":{},"index.html":{}}}],["array",{"_index":733,"title":{},"body":{"injectables/AuthGuard.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{}}}],["arraybuffer",{"_index":681,"title":{},"body":{"injectables/AttachmentsService.html":{}}}],["arricchisce",{"_index":2902,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["arrow",{"_index":1399,"title":{},"body":{"components/DataItemComponent.html":{},"components/OffcanvasComponent.html":{}}}],["artifacts",{"_index":3909,"title":{},"body":{"index.html":{}}}],["assegna",{"_index":1581,"title":{},"body":{"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["assegnando",{"_index":1659,"title":{},"body":{"classes/ExportModule.html":{},"classes/ExportTheater.html":{}}}],["assegnare",{"_index":1265,"title":{},"body":{"components/DataInputV2Component.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{}}}],["assegnazioni",{"_index":3860,"title":{},"body":{"miscellaneous/functions.html":{}}}],["assign",{"_index":2223,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["associate",{"_index":1004,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["associato",{"_index":3429,"title":{},"body":{"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{}}}],["associazioni",{"_index":1881,"title":{},"body":{"classes/ExportTheater.html":{}}}],["astratta",{"_index":1358,"title":{},"body":{"components/DataItemComponent.html":{}}}],["async",{"_index":653,"title":{},"body":{"injectables/AttachmentsService.html":{},"injectables/AuthGuard.html":{},"components/ComposerComponent.html":{},"injectables/FileService.html":{},"injectables/FlavorService.html":{},"components/HomeComponent.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"injectables/ModuleService.html":{},"classes/NetworkNode.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"injectables/TheaterService.html":{},"components/VisualizerComponent.html":{}}}],["attachments",{"_index":563,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["attachments_uuid",{"_index":661,"title":{},"body":{"injectables/AttachmentsService.html":{}}}],["attachmentsservice",{"_index":650,"title":{"injectables/AttachmentsService.html":{}},"body":{"injectables/AttachmentsService.html":{}}}],["attenzione",{"_index":1508,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"injectables/ModalService.html":{}}}],["attiva",{"_index":3520,"title":{},"body":{"components/TabnavComponent.html":{}}}],["attivata",{"_index":2480,"title":{},"body":{"injectables/ModalService.html":{}}}],["attivit",{"_index":842,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["attr_key",{"_index":16,"title":{},"body":{"classes/Aoption.html":{},"classes/NavbarElement.html":{},"classes/NavbarItem.html":{}}}],["attr_val",{"_index":17,"title":{},"body":{"classes/Aoption.html":{},"classes/NavbarElement.html":{},"classes/NavbarItem.html":{}}}],["attraverso",{"_index":1141,"title":{},"body":{"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"injectables/ModalService.html":{},"injectables/StorageService.html":{}}}],["attributi",{"_index":422,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"classes/BlueprintFileDTO.html":{},"classes/BorderNetworkDTO.html":{},"interfaces/CommonModule.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/DeployInstanceDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/FlavorApplication.html":{},"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/HostModuleDTO.html":{},"classes/HostPortModuleDTO.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"interfaces/ModuleTopology.html":{},"classes/NameMappingDTO.html":{},"classes/NetOSRouterDTO.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkDTO.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/NodeTopologyElement.html":{},"classes/PageableDTO.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteConnection.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/SortDTO.html":{},"classes/SourceExport.html":{},"classes/StatisticItemDTO.html":{},"classes/SubnetDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheaterSimpleData.html":{},"interfaces/TheaterTopology.html":{},"classes/TheatreStatusDTO.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/TypesCatalogueDTO.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{},"miscellaneous/functions.html":{}}}],["attributo",{"_index":1289,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["attrubuti",{"_index":2694,"title":{},"body":{"components/NavbarComponent.html":{}}}],["attuale",{"_index":1275,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["attualmente",{"_index":1143,"title":{},"body":{"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{}}}],["authguard",{"_index":357,"title":{"injectables/AuthGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{}}}],["author",{"_index":564,"title":{},"body":{"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"classes/BlueprintFileDTO.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/DeployInstanceDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/ExportTheater.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/NameMappingDTO.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesTSD.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/SourceExport.html":{},"classes/StatisticItemDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheaterSimpleData.html":{},"classes/TheatreStatusDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["authorization",{"_index":3690,"title":{},"body":{"injectables/TokenService.html":{}}}],["auto",{"_index":1570,"title":{},"body":{"components/DocsComponent.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"dependencies.html":{}}}],["autoarrangeplugin",{"_index":3286,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["automatic",{"_index":1479,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["automatic_system",{"_index":1505,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["automatically",{"_index":3902,"title":{},"body":{"index.html":{}}}],["automatico",{"_index":1138,"title":{},"body":{"components/DataInputComponent.html":{},"injectables/ModalService.html":{}}}],["automaticsystem",{"_index":1470,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/EmptyModuleInfo.html":{}}}],["available",{"_index":2536,"title":{},"body":{"injectables/ModalService.html":{}}}],["aver",{"_index":2061,"title":{},"body":{"components/HomeComponent.html":{}}}],["avvale",{"_index":2943,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["avviene",{"_index":2311,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"injectables/ModalService.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["await",{"_index":719,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/FlavorService.html":{},"components/HomeComponent.html":{},"injectables/ModuleService.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"injectables/TheaterService.html":{}}}],["b3b3b3",{"_index":2828,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["background",{"_index":145,"title":{},"body":{"components/AppComponent.html":{},"components/ControlTemplate.html":{},"components/DocsComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["backgroundcolor",{"_index":2113,"title":{},"body":{"components/HomeComponent.html":{},"classes/ModalButton.html":{},"classes/ModalItem.html":{},"injectables/ModalService.html":{}}}],["bar",{"_index":1413,"title":{},"body":{"components/DataItemComponent.html":{}}}],["base",{"_index":803,"title":{},"body":{"components/ComposerComponent.html":{},"components/DataInputV2Component.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/ExportModule.html":{},"components/VisualizerComponent.html":{}}}],["base/area",{"_index":1101,"title":{},"body":{"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{}}}],["basis",{"_index":1573,"title":{},"body":{"components/DocsComponent.html":{}}}],["bearer",{"_index":3691,"title":{},"body":{"injectables/TokenService.html":{}}}],["behaviorsubject",{"_index":2512,"title":{},"body":{"injectables/ModalService.html":{}}}],["behaviorsubject(false",{"_index":2515,"title":{},"body":{"injectables/ModalService.html":{}}}],["behaviorsubject(modalitem",{"_index":2513,"title":{},"body":{"injectables/ModalService.html":{}}}],["bg",{"_index":2151,"title":{},"body":{"components/HomeComponent.html":{},"components/NavbarElementComponent.html":{}}}],["bi",{"_index":1395,"title":{},"body":{"components/DataItemComponent.html":{},"components/OffcanvasComponent.html":{}}}],["bisogna",{"_index":2290,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["blend",{"_index":2166,"title":{},"body":{"components/HomeComponent.html":{}}}],["blob",{"_index":683,"title":{},"body":{"injectables/AttachmentsService.html":{},"components/OffcanvasComponent.html":{}}}],["blob([data",{"_index":684,"title":{},"body":{"injectables/AttachmentsService.html":{}}}],["block",{"_index":1548,"title":{},"body":{"components/DocsComponent.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["blueprint",{"_index":603,"title":{},"body":{"classes/AreaDTO.html":{},"classes/BlueprintFileDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/NameMappingDTO.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterDTO.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheatreStatusDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["blueprintfile",{"_index":767,"title":{},"body":{"classes/BlueprintFileDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/NameMappingDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheatreStatusDTO.html":{}}}],["blueprintfiledto",{"_index":739,"title":{"classes/BlueprintFileDTO.html":{}},"body":{"classes/BlueprintFileDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/NameMappingDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheatreStatusDTO.html":{}}}],["blueprinttype",{"_index":522,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["blueprintuuid",{"_index":768,"title":{},"body":{"classes/BlueprintFileDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/NameMappingDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheatreStatusDTO.html":{}}}],["bnname",{"_index":776,"title":{},"body":{"classes/BorderNetworkDTO.html":{},"classes/NetOSRouterDTO.html":{},"classes/NetworkDTO.html":{},"classes/SubnetDTO.html":{}}}],["body",{"_index":160,"title":{},"body":{"components/AppComponent.html":{},"components/OffcanvasComponent.html":{},"injectables/TokenService.html":{}}}],["bold",{"_index":2842,"title":{},"body":{"components/OffcanvasComponent.html":{},"components/TabnavComponent.html":{}}}],["boolean",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"classes/AreaApplication.html":{},"classes/AreaDTO.html":{},"classes/BlueprintFileDTO.html":{},"classes/BorderNetworkDTO.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"components/ControlTemplate.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/DeployInstanceDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/ExportModule.html":{},"injectables/FileService.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"classes/HostModuleDTO.html":{},"classes/HostPortModuleDTO.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"classes/NameMappingDTO.html":{},"classes/NetOSRouterDTO.html":{},"components/NetworkComponent.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkDTO.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"components/OffcanvasComponent.html":{},"classes/PageableDTO.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteSubnetInfo.html":{},"classes/SelectOption.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/SingleDataInputReturned.html":{},"classes/SortDTO.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"classes/StatisticItemDTO.html":{},"components/SubnetComponent.html":{},"classes/SubnetDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"components/TabnavComponent.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheatreStatusDTO.html":{},"classes/TypesCatalogueDTO.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{}}}],["bootstrap",{"_index":242,"title":{},"body":{"modules/AppModule.html":{},"components/DataItemComponent.html":{},"dependencies.html":{}}}],["border",{"_index":775,"title":{},"body":{"classes/BorderNetworkDTO.html":{},"components/ControlTemplate.html":{},"components/DataItemComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/EmptyModuleInfo.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/NetOSRouterDTO.html":{},"components/NetworkComponent.html":{},"classes/NetworkDTO.html":{},"components/SubnetComponent.html":{},"classes/SubnetDTO.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["bordernetwork",{"_index":786,"title":{},"body":{"classes/BorderNetworkDTO.html":{},"classes/NetOSRouterDTO.html":{},"classes/NetworkDTO.html":{},"classes/SubnetDTO.html":{}}}],["bordernetworkdto",{"_index":773,"title":{"classes/BorderNetworkDTO.html":{}},"body":{"classes/BorderNetworkDTO.html":{},"classes/NetOSRouterDTO.html":{},"classes/NetworkDTO.html":{},"classes/SubnetDTO.html":{}}}],["both",{"_index":2726,"title":{},"body":{"components/NavbarElementComponent.html":{}}}],["bottom",{"_index":1347,"title":{},"body":{"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["box",{"_index":1082,"title":{},"body":{"components/ControlTemplate.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["branch",{"_index":2031,"title":{},"body":{"components/HomeComponent.html":{}}}],["branch===composer?\"create",{"_index":2145,"title":{},"body":{"components/HomeComponent.html":{}}}],["branch===composer?\"design",{"_index":2146,"title":{},"body":{"components/HomeComponent.html":{}}}],["break",{"_index":1409,"title":{},"body":{"components/DataItemComponent.html":{},"classes/ExportModule.html":{},"components/TabnavComponent.html":{}}}],["browser",{"_index":255,"title":{},"body":{"modules/AppModule.html":{},"components/DocsComponent.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":302,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":301,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":253,"title":{},"body":{"modules/AppModule.html":{}}}],["bs",{"_index":2231,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["btn",{"_index":1339,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["build",{"_index":3908,"title":{},"body":{"index.html":{}}}],["builder",{"_index":2279,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["builder(node",{"_index":2287,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["burn",{"_index":2172,"title":{},"body":{"components/HomeComponent.html":{}}}],["button",{"_index":2230,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/ModalButton.html":{},"classes/ModalItem.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{}}}],["buttonclick",{"_index":2040,"title":{},"body":{"components/HomeComponent.html":{}}}],["buttonclick(branch",{"_index":2045,"title":{},"body":{"components/HomeComponent.html":{}}}],["buttons",{"_index":2112,"title":{},"body":{"components/HomeComponent.html":{},"classes/ModalButton.html":{},"classes/ModalItem.html":{},"injectables/ModalService.html":{}}}],["c",{"_index":2396,"title":{},"body":{"components/MirroringModuleInstanceComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["c.output",{"_index":1906,"title":{},"body":{"classes/ExportTheater.html":{}}}],["calc(0.5rem",{"_index":2176,"title":{},"body":{"components/HomeComponent.html":{}}}],["calc(100",{"_index":2265,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["call",{"_index":561,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["cambiamento",{"_index":1285,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["campo",{"_index":1268,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["canactivate",{"_index":364,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["cancel",{"_index":1124,"title":{},"body":{"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/HomeComponent.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{}}}],["cancellato",{"_index":2304,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["cancellazione",{"_index":1363,"title":{},"body":{"components/DataItemComponent.html":{}}}],["canvas",{"_index":926,"title":{},"body":{"components/ComposerComponent.html":{},"classes/ExportModule.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"components/VisualizerComponent.html":{}}}],["canvas/editor",{"_index":1819,"title":{},"body":{"injectables/ExportService.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["capabilites",{"_index":981,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["capabilities",{"_index":565,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["capire",{"_index":1257,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["capta",{"_index":2445,"title":{},"body":{"components/ModalComponent.html":{}}}],["captare",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"injectables/ParseService.html":{}}}],["captato",{"_index":1935,"title":{},"body":{"injectables/FileService.html":{}}}],["caratterisiche",{"_index":2688,"title":{},"body":{"components/NavbarComponent.html":{}}}],["caratteristiche",{"_index":595,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["caratteristiche/quantit",{"_index":3514,"title":{},"body":{"components/TabnavComponent.html":{}}}],["caricato",{"_index":2086,"title":{},"body":{"components/HomeComponent.html":{}}}],["caso",{"_index":875,"title":{},"body":{"components/ComposerComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"components/VisualizerComponent.html":{}}}],["catalog1",{"_index":566,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["catalog2",{"_index":567,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["catalog3",{"_index":568,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["catalogo",{"_index":515,"title":{},"body":{"classes/AreaDTO.html":{},"classes/BlueprintFileDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/NameMappingDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterDTO.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheatreStatusDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["catch",{"_index":1966,"title":{},"body":{"injectables/FileService.html":{},"injectables/FlavorService.html":{},"injectables/ModuleService.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"injectables/TheaterService.html":{}}}],["catch((e",{"_index":2129,"title":{},"body":{"components/HomeComponent.html":{}}}],["catch((error",{"_index":349,"title":{},"body":{"modules/AppModule.html":{}}}],["category",{"_index":523,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["cdr",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["center",{"_index":2150,"title":{},"body":{"components/HomeComponent.html":{}}}],["centos",{"_index":1446,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["cerca",{"_index":3930,"title":{},"body":{"modules.html":{}}}],["cha",{"_index":1932,"title":{},"body":{"injectables/FileService.html":{}}}],["change",{"_index":1037,"title":{},"body":{"components/ControlTemplate.html":{},"components/DataInputV2Component.html":{},"classes/_Control.html":{},"index.html":{}}}],["changedetection",{"_index":1146,"title":{},"body":{"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{}}}],["changedetectionstrategy",{"_index":1180,"title":{},"body":{"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":1147,"title":{},"body":{"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{}}}],["changedetectorref",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["che",{"_index":44,"title":{},"body":{"classes/Aoption.html":{},"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"classes/BlueprintFileDTO.html":{},"classes/BorderNetworkDTO.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"components/ControlTemplate.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/DeployInstanceDTO.html":{},"components/DocsComponent.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"classes/FlavorApplication.html":{},"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"classes/HostModuleDTO.html":{},"classes/HostNode.html":{},"classes/HostPortModuleDTO.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModalButton.html":{},"components/ModalComponent.html":{},"classes/ModalItem.html":{},"injectables/ModalService.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"interfaces/ModuleTopology.html":{},"classes/NameMappingDTO.html":{},"components/NavbarComponent.html":{},"classes/NavbarElement.html":{},"components/NavbarElementComponent.html":{},"classes/NavbarItem.html":{},"classes/NetOSRouterDTO.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkDTO.html":{},"classes/NetworkNode.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/NodeTopologyElement.html":{},"components/OffcanvasComponent.html":{},"classes/PageableDTO.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/SortDTO.html":{},"classes/SourceExport.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"classes/StatisticItemDTO.html":{},"injectables/StorageService.html":{},"classes/SubnetDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"components/TabnavComponent.html":{},"classes/TabnavElement.html":{},"classes/TabnavItem.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/TheaterSimpleData.html":{},"interfaces/TheaterTopology.html":{},"classes/TheatreStatusDTO.html":{},"injectables/TokenService.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/TypesCatalogueDTO.html":{},"components/UnderbarComponent.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{},"miscellaneous/functions.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["check",{"_index":1109,"title":{},"body":{"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{},"components/UnderbarComponent.html":{},"index.html":{}}}],["check[e.id",{"_index":3722,"title":{},"body":{"components/UnderbarComponent.html":{}}}],["checkbox",{"_index":1098,"title":{},"body":{"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{}}}],["checked",{"_index":1112,"title":{},"body":{"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{}}}],["chiamata",{"_index":431,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"components/DataInputComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"components/DocsComponent.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"injectables/TokenService.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["chiamate",{"_index":3172,"title":{},"body":{"classes/PerseDataForTheaterComposer.html":{},"injectables/TokenService.html":{}}}],["chiuso",{"_index":1380,"title":{},"body":{"components/DataItemComponent.html":{}}}],["chiusura",{"_index":2508,"title":{},"body":{"injectables/ModalService.html":{},"components/OffcanvasComponent.html":{}}}],["ci",{"_index":910,"title":{},"body":{"components/ComposerComponent.html":{},"components/OffcanvasComponent.html":{},"components/TabnavComponent.html":{},"components/VisualizerComponent.html":{}}}],["cidr",{"_index":789,"title":{},"body":{"classes/BorderNetworkDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ExportModule.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetOSRouterDTO.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkDTO.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteSubnetInfo.html":{},"components/SubnetComponent.html":{},"classes/SubnetDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["cite",{"_index":2827,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["class",{"_index":0,"title":{"classes/Aoption.html":{},"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"classes/BlueprintFileDTO.html":{},"classes/BorderNetworkDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputReturnedV2.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/DeployInstanceDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"classes/FlavorApplication.html":{},"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/HostModuleDTO.html":{},"classes/HostNode.html":{},"classes/HostPortModuleDTO.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModalButton.html":{},"classes/ModalItem.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"classes/NameMappingDTO.html":{},"classes/NavbarElement.html":{},"classes/NavbarItem.html":{},"classes/NetOSRouterDTO.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkDTO.html":{},"classes/NetworkNode.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/NodeTopologyElement.html":{},"classes/PageableDTO.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SelectOption.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/SingleDataInputReturned.html":{},"classes/SortDTO.html":{},"classes/SourceExport.html":{},"classes/SpinnerData.html":{},"classes/StatisticItemDTO.html":{},"classes/SubnetDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"classes/TabnavElement.html":{},"classes/TabnavItem.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/TheaterSimpleData.html":{},"classes/TheatreStatusDTO.html":{},"classes/TopologyElement.html":{},"classes/TypesCatalogueDTO.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{},"classes/_Control.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}},"body":{"classes/Aoption.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"injectables/AttachmentsService.html":{},"injectables/AuthGuard.html":{},"classes/BlueprintFileDTO.html":{},"classes/BorderNetworkDTO.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"components/ControlTemplate.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputReturnedV2.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/DeployInstanceDTO.html":{},"components/DocsComponent.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"classes/FlavorApplication.html":{},"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"injectables/FlavorService.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"classes/HostModuleDTO.html":{},"classes/HostNode.html":{},"classes/HostPortModuleDTO.html":{},"components/HowToUseComponent.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModalButton.html":{},"components/ModalComponent.html":{},"classes/ModalItem.html":{},"injectables/ModalService.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"injectables/ModuleService.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"interfaces/ModuleTopology.html":{},"classes/NameMappingDTO.html":{},"components/NavbarComponent.html":{},"classes/NavbarElement.html":{},"components/NavbarElementComponent.html":{},"classes/NavbarItem.html":{},"classes/NetOSRouterDTO.html":{},"components/NetworkComponent.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkDTO.html":{},"classes/NetworkNode.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/NodeTopologyElement.html":{},"components/OffcanvasComponent.html":{},"classes/PageableDTO.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SelectOption.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/SingleDataInputReturned.html":{},"classes/SortDTO.html":{},"classes/SourceExport.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"classes/StatisticItemDTO.html":{},"injectables/StorageService.html":{},"components/SubnetComponent.html":{},"classes/SubnetDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"components/TabnavComponent.html":{},"classes/TabnavElement.html":{},"classes/TabnavItem.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"injectables/TheaterService.html":{},"classes/TheaterSimpleData.html":{},"interfaces/TheaterTopology.html":{},"classes/TheatreStatusDTO.html":{},"injectables/TokenService.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/TypesCatalogueDTO.html":{},"components/UnderbarComponent.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["class=\"modal",{"_index":2465,"title":{},"body":{"components/ModalComponent.html":{}}}],["classe",{"_index":419,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"classes/BlueprintFileDTO.html":{},"classes/BorderNetworkDTO.html":{},"interfaces/CommonModule.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/DeployInstanceDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"classes/FlavorApplication.html":{},"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/HostModuleDTO.html":{},"classes/HostNode.html":{},"classes/HostPortModuleDTO.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"interfaces/ModuleTopology.html":{},"classes/NameMappingDTO.html":{},"classes/NetOSRouterDTO.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkDTO.html":{},"classes/NetworkNode.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/NodeTopologyElement.html":{},"components/OffcanvasComponent.html":{},"classes/PageableDTO.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/SortDTO.html":{},"classes/SourceExport.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"classes/StatisticItemDTO.html":{},"classes/SubnetDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/TheaterSimpleData.html":{},"interfaces/TheaterTopology.html":{},"classes/TheatreStatusDTO.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/TypesCatalogueDTO.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{}}}],["classi",{"_index":2,"title":{},"body":{"classes/Aoption.html":{},"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"classes/BlueprintFileDTO.html":{},"classes/BorderNetworkDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputReturnedV2.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataItemComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/DeployInstanceDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"classes/FlavorApplication.html":{},"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/HostModuleDTO.html":{},"classes/HostNode.html":{},"classes/HostPortModuleDTO.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModalButton.html":{},"classes/ModalItem.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"classes/NameMappingDTO.html":{},"classes/NavbarElement.html":{},"classes/NavbarItem.html":{},"classes/NetOSRouterDTO.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkDTO.html":{},"classes/NetworkNode.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/NodeTopologyElement.html":{},"classes/PageableDTO.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SelectOption.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/SingleDataInputReturned.html":{},"classes/SortDTO.html":{},"classes/SourceExport.html":{},"classes/SpinnerData.html":{},"classes/StatisticItemDTO.html":{},"classes/SubnetDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"classes/TabnavElement.html":{},"classes/TabnavItem.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/TheaterSimpleData.html":{},"classes/TheatreStatusDTO.html":{},"classes/TopologyElement.html":{},"classes/TypesCatalogueDTO.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{},"classes/_Control.html":{},"overview.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["classification",{"_index":569,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["classificazione",{"_index":520,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["clear",{"_index":2524,"title":{},"body":{"injectables/ModalService.html":{}}}],["cli",{"_index":3820,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["cliccato",{"_index":2446,"title":{},"body":{"components/ModalComponent.html":{}}}],["click",{"_index":1227,"title":{},"body":{"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{}}}],["clickbutton",{"_index":2430,"title":{},"body":{"components/ModalComponent.html":{}}}],["clickbutton(val",{"_index":2443,"title":{},"body":{"components/ModalComponent.html":{}}}],["clicked",{"_index":2414,"title":{},"body":{"classes/ModalButton.html":{},"classes/ModalItem.html":{}}}],["closeiconclass",{"_index":1370,"title":{},"body":{"components/DataItemComponent.html":{},"components/OffcanvasComponent.html":{}}}],["closemodal",{"_index":2431,"title":{},"body":{"components/ModalComponent.html":{}}}],["closeoffcanvas",{"_index":2793,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["cluster_appmodule",{"_index":221,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":222,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":226,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_exports",{"_index":223,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":224,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":225,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":542,"title":{},"body":{"classes/AreaDTO.html":{},"classes/BlueprintFileDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/NameMappingDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterDTO.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheatreStatusDTO.html":{},"classes/TypesCatalogueDTO.html":{},"index.html":{}}}],["coerenza",{"_index":449,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["coinvolgono",{"_index":425,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["collapse",{"_index":1362,"title":{},"body":{"components/DataItemComponent.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["collega",{"_index":3138,"title":{},"body":{"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["collegamenti",{"_index":643,"title":{},"body":{"classes/AreaExport.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesTSD.html":{},"classes/SourceExport.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{}}}],["collegano",{"_index":1695,"title":{},"body":{"classes/ExportModule.html":{}}}],["collegare",{"_index":2926,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{}}}],["collegato",{"_index":2473,"title":{},"body":{"injectables/ModalService.html":{}}}],["color",{"_index":162,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"components/ControlTemplate.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"classes/FlavorApplication.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"classes/NodeTopologyElement.html":{},"components/OffcanvasComponent.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"classes/TheaterApplication.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"dependencies.html":{}}}],["color!important",{"_index":2840,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["color,4",{"_index":2247,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["colorpickermodule",{"_index":329,"title":{},"body":{"modules/AppModule.html":{}}}],["column",{"_index":1567,"title":{},"body":{"components/DocsComponent.html":{}}}],["come",{"_index":29,"title":{},"body":{"classes/Aoption.html":{},"components/ComposerComponent.html":{},"components/DataInputV2Component.html":{},"components/DocsComponent.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModalButton.html":{},"components/ModalComponent.html":{},"classes/ModalItem.html":{},"classes/NavbarElement.html":{},"components/NavbarElementComponent.html":{},"classes/NavbarItem.html":{},"classes/NetworkNode.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"classes/SubnetNode.html":{},"classes/TabnavElement.html":{},"classes/TabnavItem.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"injectables/TokenService.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{},"components/VisualizerComponent.html":{}}}],["commonmodule",{"_index":286,"title":{"interfaces/CommonModule.html":{}},"body":{"modules/AppModule.html":{},"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["compatibility",{"_index":994,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["completati",{"_index":1730,"title":{},"body":{"classes/ExportModule.html":{}}}],["complex",{"_index":489,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["compodoc",{"_index":1526,"title":{},"body":{"components/DocsComponent.html":{}}}],["compodoc/compodoc",{"_index":3790,"title":{},"body":{"dependencies.html":{}}}],["compodoc_index_html",{"_index":1531,"title":{},"body":{"components/DocsComponent.html":{}}}],["component",{"_index":57,"title":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"classes/HostNode.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"classes/NetworkNode.html":{},"components/OffcanvasComponent.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"components/SubnetComponent.html":{},"classes/SubnetNode.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{},"index.html":{}}}],["component.name",{"_index":3319,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["component_template",{"_index":169,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["componente",{"_index":32,"title":{},"body":{"classes/Aoption.html":{},"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputReturnedV2.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/ModalButton.html":{},"components/ModalComponent.html":{},"classes/ModalItem.html":{},"components/NavbarComponent.html":{},"classes/NavbarElement.html":{},"components/NavbarElementComponent.html":{},"classes/NavbarItem.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"classes/TabnavElement.html":{},"classes/TabnavItem.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{},"miscellaneous/functions.html":{}}}],["componenti",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"injectables/StorageService.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"overview.html":{}}}],["components",{"_index":170,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["components/data",{"_index":311,"title":{},"body":{"modules/AppModule.html":{}}}],["components/modal/modal.component",{"_index":314,"title":{},"body":{"modules/AppModule.html":{}}}],["components/modal/modaltype",{"_index":131,"title":{},"body":{"components/AppComponent.html":{}}}],["components/navbar/navbar.component",{"_index":307,"title":{},"body":{"modules/AppModule.html":{}}}],["components/offcanvas/offcanvas.component",{"_index":306,"title":{},"body":{"modules/AppModule.html":{}}}],["components/tabnav/tabnav.component",{"_index":318,"title":{},"body":{"modules/AppModule.html":{}}}],["components/underbar/underbar.component",{"_index":315,"title":{},"body":{"modules/AppModule.html":{}}}],["componete",{"_index":1536,"title":{},"body":{"components/DocsComponent.html":{}}}],["comporta",{"_index":2479,"title":{},"body":{"injectables/ModalService.html":{}}}],["comportamento",{"_index":1251,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["composer",{"_index":274,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ComposerComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"components/HomeComponent.html":{}}}],["composer'},{'name",{"_index":174,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["composer.component",{"_index":276,"title":{},"body":{"modules/AppModule.html":{}}}],["composer.component.html",{"_index":810,"title":{},"body":{"components/ComposerComponent.html":{}}}],["composer.component.sass",{"_index":809,"title":{},"body":{"components/ComposerComponent.html":{}}}],["composer/rete",{"_index":275,"title":{},"body":{"modules/AppModule.html":{}}}],["composercomponent",{"_index":173,"title":{"components/ComposerComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"overview.html":{}}}],["composervisualizertype",{"_index":1432,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"components/HomeComponent.html":{}}}],["composervisualizertype.composer",{"_index":2076,"title":{},"body":{"components/HomeComponent.html":{}}}],["composervisualizertype.visualizer",{"_index":2099,"title":{},"body":{"components/HomeComponent.html":{}}}],["composizione",{"_index":3090,"title":{},"body":{"injectables/ParseService.html":{}}}],["comprensibile",{"_index":3075,"title":{},"body":{"injectables/ParseService.html":{}}}],["computazioni",{"_index":2322,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["con",{"_index":166,"title":{},"body":{"components/AppComponent.html":{},"classes/AreaExport.html":{},"components/ComposerComponent.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"classes/ExportModule.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"classes/HostNode.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"classes/ModuleInstanceSimpleData.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"classes/NetworkNode.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesTSD.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SourceExport.html":{},"components/SubnetComponent.html":{},"classes/SubnetNode.html":{},"components/TabnavComponent.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/TheaterSimpleData.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["condivisibili",{"_index":3454,"title":{},"body":{"injectables/StorageService.html":{}}}],["conf",{"_index":2105,"title":{},"body":{"components/HomeComponent.html":{}}}],["conferma",{"_index":2506,"title":{},"body":{"injectables/ModalService.html":{}}}],["conferma/cancellazione",{"_index":2483,"title":{},"body":{"injectables/ModalService.html":{}}}],["conferma/non",{"_index":2505,"title":{},"body":{"injectables/ModalService.html":{}}}],["configurationtemplate",{"_index":570,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["configurationtemplatedto",{"_index":531,"title":{"classes/ConfigurationTemplateDTO.html":{}},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["configurazione",{"_index":529,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"components/ModalComponent.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["confirm",{"_index":2518,"title":{},"body":{"injectables/ModalService.html":{}}}],["conivolgono",{"_index":2321,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["connect",{"_index":2957,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["connection",{"_index":469,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteConnection.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"dependencies.html":{}}}],["connectionpathplugin",{"_index":3278,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{}}}],["connectionplugin",{"_index":3277,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["connections_list",{"_index":3023,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["connections_list.push",{"_index":3028,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["connesisoni",{"_index":1694,"title":{},"body":{"classes/ExportModule.html":{}}}],["connessa",{"_index":1007,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["connesse",{"_index":1806,"title":{},"body":{"classes/ExportModule.html":{}}}],["connessione",{"_index":959,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["connessioni",{"_index":581,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["connesso",{"_index":1769,"title":{},"body":{"classes/ExportModule.html":{}}}],["consente",{"_index":2503,"title":{},"body":{"injectables/ModalService.html":{},"injectables/StorageService.html":{},"components/UnderbarComponent.html":{}}}],["considerare",{"_index":2484,"title":{},"body":{"injectables/ModalService.html":{}}}],["considerata",{"_index":3052,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["console.error(\"problema",{"_index":1332,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["console.error(\"underbaritem",{"_index":3723,"title":{},"body":{"components/UnderbarComponent.html":{}}}],["console.error('[ngdobootstrap",{"_index":350,"title":{},"body":{"modules/AppModule.html":{}}}],["console.error(e",{"_index":3004,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["console.log(json.stringify(this.editor.tojson",{"_index":3314,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["console.log(this.datafromrouter",{"_index":3771,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["console.warn(\"module",{"_index":1722,"title":{},"body":{"classes/ExportModule.html":{}}}],["console.warn(\"only",{"_index":2535,"title":{},"body":{"injectables/ModalService.html":{}}}],["console.warn(\"root",{"_index":3013,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["console.warn(\"theater",{"_index":2978,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["console.warn(\"type",{"_index":1801,"title":{},"body":{"classes/ExportModule.html":{}}}],["const",{"_index":331,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AttachmentsService.html":{},"injectables/AuthGuard.html":{},"components/DocsComponent.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"injectables/FileService.html":{},"injectables/FlavorService.html":{},"injectables/ModuleService.html":{},"injectables/TheaterService.html":{}}}],["constraints",{"_index":985,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/ExportModule.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["constraintsmsd",{"_index":956,"title":{"classes/ConstraintsMSD.html":{}},"body":{"classes/ConstraintsMSD.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["constructor",{"_index":137,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"components/ComposerComponent.html":{},"components/DocsComponent.html":{},"injectables/ExportService.html":{},"injectables/FileService.html":{},"components/HostComponent.html":{},"classes/HostNode.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"classes/NetworkNode.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"injectables/StorageService.html":{},"components/SubnetComponent.html":{},"classes/SubnetNode.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"injectables/TokenService.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["constructor(cdr",{"_index":1155,"title":{},"body":{"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/OffcanvasComponent.html":{},"components/TabnavComponent.html":{}}}],["constructor(container",{"_index":3267,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["constructor(emitter",{"_index":3778,"title":{},"body":{"classes/_Control.html":{}}}],["constructor(flavorservice",{"_index":3114,"title":{},"body":{"classes/PerseDataForModuleComposer.html":{}}}],["constructor(http",{"_index":656,"title":{},"body":{"injectables/AttachmentsService.html":{},"injectables/FlavorService.html":{},"injectables/ModuleService.html":{},"injectables/TheaterService.html":{}}}],["constructor(module",{"_index":1644,"title":{},"body":{"classes/ExportModule.html":{}}}],["constructor(moduleservice",{"_index":3134,"title":{},"body":{"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["constructor(private",{"_index":675,"title":{},"body":{"injectables/AttachmentsService.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"injectables/FlavorService.html":{},"components/HomeComponent.html":{},"injectables/ModuleService.html":{},"components/OffcanvasComponent.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"components/TabnavComponent.html":{},"injectables/TheaterService.html":{}}}],["constructor(public",{"_index":1055,"title":{},"body":{"components/ControlTemplate.html":{},"classes/_Control.html":{}}}],["constructor(router",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"components/ComposerComponent.html":{},"components/HomeComponent.html":{},"components/VisualizerComponent.html":{}}}],["constructor(sanitizer",{"_index":1533,"title":{},"body":{"components/DocsComponent.html":{}}}],["constructor(service",{"_index":2210,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["constructor(ss",{"_index":3445,"title":{},"body":{"injectables/SpinnerService.html":{}}}],["constructor(theater",{"_index":1870,"title":{},"body":{"classes/ExportTheater.html":{}}}],["constructor(theaterservice",{"_index":2881,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{}}}],["consumer",{"_index":998,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["consumer/privisor",{"_index":1794,"title":{},"body":{"classes/ExportModule.html":{}}}],["consumer/provisor",{"_index":1688,"title":{},"body":{"classes/ExportModule.html":{}}}],["consumer_interface_link",{"_index":638,"title":{},"body":{"classes/AreaExport.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/ExportTheater.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesTSD.html":{},"classes/SourceExport.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{}}}],["consumer_interfaces_link",{"_index":591,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/TypesCatalogueDTO.html":{},"classes/reteBasicModuleInfo.html":{}}}],["consumerif",{"_index":1900,"title":{},"body":{"classes/ExportTheater.html":{}}}],["consumerif.connections.foreach(c",{"_index":1902,"title":{},"body":{"classes/ExportTheater.html":{}}}],["consumerinterfacelinkdto",{"_index":583,"title":{"classes/ConsumerInterfaceLinkDTO.html":{}},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{},"classes/reteBasicModuleInfo.html":{}}}],["consumerinterfacelinkexport",{"_index":639,"title":{"classes/ConsumerInterfaceLinkExport.html":{}},"body":{"classes/AreaExport.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesTSD.html":{},"classes/SourceExport.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{}}}],["consumers",{"_index":988,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/ExportModule.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["consumo",{"_index":917,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["contain",{"_index":2163,"title":{},"body":{"components/HomeComponent.html":{}}}],["contained",{"_index":1782,"title":{},"body":{"classes/ExportModule.html":{}}}],["contained_in",{"_index":1680,"title":{},"body":{"classes/ExportModule.html":{}}}],["container",{"_index":3263,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["contenente",{"_index":420,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/SelectOption.html":{},"classes/SimpleModuleApplication.html":{},"classes/SingleDataInputReturned.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["contenenti",{"_index":1603,"title":{},"body":{"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{}}}],["content",{"_index":504,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"components/DataItemComponent.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"components/NetworkComponent.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"injectables/TokenService.html":{},"classes/TypesCatalogueDTO.html":{}}}],["contenuto",{"_index":2426,"title":{},"body":{"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/OffcanvasComponent.html":{},"components/TabnavComponent.html":{}}}],["conterr",{"_index":2070,"title":{},"body":{"components/HomeComponent.html":{}}}],["context",{"_index":3280,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"dependencies.html":{}}}],["contextmenuplugin",{"_index":3279,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["contiene",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"classes/BlueprintFileDTO.html":{},"classes/BorderNetworkDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/DeployInstanceDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"classes/HostModuleDTO.html":{},"classes/HostPortModuleDTO.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"classes/NameMappingDTO.html":{},"classes/NetOSRouterDTO.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkDTO.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PageableDTO.html":{},"injectables/ParseService.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/SortDTO.html":{},"classes/SourceExport.html":{},"classes/StatisticItemDTO.html":{},"classes/SubnetDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"components/TabnavComponent.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterDTO.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheaterSimpleData.html":{},"classes/TheatreStatusDTO.html":{},"classes/TypesCatalogueDTO.html":{},"components/UnderbarComponent.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{}}}],["continue",{"_index":1724,"title":{},"body":{"classes/ExportModule.html":{}}}],["control",{"_index":1032,"title":{},"body":{"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/_Control.html":{}}}],["control.css",{"_index":1035,"title":{},"body":{"components/ControlTemplate.html":{},"classes/_Control.html":{}}}],["control.html",{"_index":1036,"title":{},"body":{"components/ControlTemplate.html":{},"classes/_Control.html":{}}}],["control_parameters",{"_index":536,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["controlla",{"_index":1283,"title":{},"body":{"components/DataInputV2Component.html":{},"classes/ExportModule.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"components/TabnavComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"components/UnderbarComponent.html":{},"miscellaneous/functions.html":{}}}],["controllare",{"_index":1940,"title":{},"body":{"injectables/FileService.html":{},"classes/ParseDataForTheaterVisualizer.html":{}}}],["controlli",{"_index":1169,"title":{},"body":{"components/DataInputComponent.html":{}}}],["controllo",{"_index":1756,"title":{},"body":{"classes/ExportModule.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["controls/control",{"_index":2326,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["controltemplate",{"_index":175,"title":{"components/ControlTemplate.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{},"overview.html":{}}}],["convalida",{"_index":1165,"title":{},"body":{"components/DataInputComponent.html":{}}}],["converte",{"_index":1876,"title":{},"body":{"classes/ExportTheater.html":{}}}],["convertire",{"_index":1634,"title":{},"body":{"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["convertirli",{"_index":3074,"title":{},"body":{"injectables/ParseService.html":{}}}],["convertmodule",{"_index":1638,"title":{},"body":{"classes/ExportModule.html":{}}}],["converttheater",{"_index":1867,"title":{},"body":{"classes/ExportTheater.html":{}}}],["correct",{"_index":3009,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["corretta",{"_index":1512,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["correttamente",{"_index":1364,"title":{},"body":{"components/DataItemComponent.html":{},"components/HomeComponent.html":{}}}],["corretto",{"_index":2063,"title":{},"body":{"components/HomeComponent.html":{}}}],["corrispondente",{"_index":56,"title":{},"body":{"classes/Aoption.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"injectables/AttachmentsService.html":{},"injectables/AuthGuard.html":{},"classes/BlueprintFileDTO.html":{},"classes/BorderNetworkDTO.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"components/ControlTemplate.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputReturnedV2.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/DeployInstanceDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"classes/FlavorApplication.html":{},"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"injectables/FlavorService.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"classes/HostModuleDTO.html":{},"classes/HostNode.html":{},"classes/HostPortModuleDTO.html":{},"components/HowToUseComponent.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModalButton.html":{},"components/ModalComponent.html":{},"classes/ModalItem.html":{},"injectables/ModalService.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"injectables/ModuleService.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"interfaces/ModuleTopology.html":{},"classes/NameMappingDTO.html":{},"components/NavbarComponent.html":{},"classes/NavbarElement.html":{},"components/NavbarElementComponent.html":{},"classes/NavbarItem.html":{},"classes/NetOSRouterDTO.html":{},"components/NetworkComponent.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkDTO.html":{},"classes/NetworkNode.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/NodeTopologyElement.html":{},"components/OffcanvasComponent.html":{},"classes/PageableDTO.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SelectOption.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/SingleDataInputReturned.html":{},"classes/SortDTO.html":{},"classes/SourceExport.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"classes/StatisticItemDTO.html":{},"injectables/StorageService.html":{},"components/SubnetComponent.html":{},"classes/SubnetDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"components/TabnavComponent.html":{},"classes/TabnavElement.html":{},"classes/TabnavItem.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"injectables/TheaterService.html":{},"classes/TheaterSimpleData.html":{},"interfaces/TheaterTopology.html":{},"classes/TheatreStatusDTO.html":{},"injectables/TokenService.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/TypesCatalogueDTO.html":{},"components/UnderbarComponent.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{},"routes.html":{}}}],["corrispondenza",{"_index":53,"title":{},"body":{"classes/Aoption.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"injectables/AttachmentsService.html":{},"injectables/AuthGuard.html":{},"classes/BlueprintFileDTO.html":{},"classes/BorderNetworkDTO.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"components/ControlTemplate.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputReturnedV2.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/DeployInstanceDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"classes/FlavorApplication.html":{},"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"injectables/FlavorService.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"classes/HostModuleDTO.html":{},"classes/HostNode.html":{},"classes/HostPortModuleDTO.html":{},"components/HowToUseComponent.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModalButton.html":{},"components/ModalComponent.html":{},"classes/ModalItem.html":{},"injectables/ModalService.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"injectables/ModuleService.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"interfaces/ModuleTopology.html":{},"classes/NameMappingDTO.html":{},"components/NavbarComponent.html":{},"classes/NavbarElement.html":{},"components/NavbarElementComponent.html":{},"classes/NavbarItem.html":{},"classes/NetOSRouterDTO.html":{},"components/NetworkComponent.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkDTO.html":{},"classes/NetworkNode.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/NodeTopologyElement.html":{},"components/OffcanvasComponent.html":{},"classes/PageableDTO.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SelectOption.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/SingleDataInputReturned.html":{},"classes/SortDTO.html":{},"classes/SourceExport.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"classes/StatisticItemDTO.html":{},"injectables/StorageService.html":{},"components/SubnetComponent.html":{},"classes/SubnetDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"components/TabnavComponent.html":{},"classes/TabnavElement.html":{},"classes/TabnavItem.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"injectables/TheaterService.html":{},"classes/TheaterSimpleData.html":{},"interfaces/TheaterTopology.html":{},"classes/TheatreStatusDTO.html":{},"injectables/TokenService.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/TypesCatalogueDTO.html":{},"components/UnderbarComponent.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{},"routes.html":{}}}],["costruire",{"_index":2073,"title":{},"body":{"components/HomeComponent.html":{}}}],["costruttore",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"injectables/AttachmentsService.html":{},"injectables/AuthGuard.html":{},"components/ComposerComponent.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"injectables/FlavorService.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"classes/HostNode.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"injectables/ModuleService.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"classes/NetworkNode.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"injectables/StorageService.html":{},"components/SubnetComponent.html":{},"classes/SubnetNode.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"injectables/TheaterService.html":{},"injectables/TokenService.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{}}}],["costrutture",{"_index":2436,"title":{},"body":{"components/ModalComponent.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"components/TabnavComponent.html":{}}}],["costruzione",{"_index":859,"title":{},"body":{"components/ComposerComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"components/VisualizerComponent.html":{},"miscellaneous/functions.html":{}}}],["counter",{"_index":3042,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["cover",{"_index":2171,"title":{},"body":{"components/HomeComponent.html":{}}}],["cpu",{"_index":1977,"title":{},"body":{"classes/FlavorApplication.html":{},"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"components/HostComponent.html":{},"classes/HostNode.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/ReteHostInfo.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{}}}],["crea",{"_index":3149,"title":{},"body":{"classes/PerseDataForModuleVisualizer.html":{}}}],["creare",{"_index":1611,"title":{},"body":{"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"components/HomeComponent.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["crearne",{"_index":2292,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["create",{"_index":2142,"title":{},"body":{"components/HomeComponent.html":{},"components/NavbarElementComponent.html":{},"classes/ReteModuleComposerSettings.html":{}}}],["created",{"_index":2280,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["created(node",{"_index":2297,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["createdby",{"_index":551,"title":{},"body":{"classes/AreaDTO.html":{},"classes/BlueprintFileDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/NameMappingDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheatreStatusDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["createddate",{"_index":552,"title":{},"body":{"classes/AreaDTO.html":{},"classes/BlueprintFileDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/NameMappingDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheatreStatusDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["createhost",{"_index":2917,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"miscellaneous/functions.html":{}}}],["createhost(host_name",{"_index":3041,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["createhost(name",{"_index":3855,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createmodulenode",{"_index":2953,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"miscellaneous/functions.html":{}}}],["createmodulenode(moduleinstancename",{"_index":3021,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["createmodulenode(name",{"_index":3857,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createmodulenode(undefined",{"_index":3198,"title":{},"body":{"classes/PerseDataForTheaterComposer.html":{}}}],["createnetwork",{"_index":2919,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"miscellaneous/functions.html":{}}}],["createnetwork(name",{"_index":3861,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createnetwork(network_name",{"_index":3062,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["createnewnode",{"_index":2281,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["createnewnode(node",{"_index":2300,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["createsubnet",{"_index":2918,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"miscellaneous/functions.html":{}}}],["createsubnet(name",{"_index":3863,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createsubnet(subnet_name",{"_index":3055,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["creato",{"_index":2299,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["creazione",{"_index":1682,"title":{},"body":{"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"components/HomeComponent.html":{},"miscellaneous/functions.html":{}}}],["cui",{"_index":873,"title":{},"body":{"components/ComposerComponent.html":{},"components/HomeComponent.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"injectables/ModalService.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"components/VisualizerComponent.html":{}}}],["currently",{"_index":716,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["currentpage",{"_index":2660,"title":{},"body":{"injectables/ModuleService.html":{}}}],["cursor",{"_index":1340,"title":{},"body":{"components/DataInputV2Component.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["custom",{"_index":2718,"title":{},"body":{"components/NavbarElementComponent.html":{}}}],["custom_elements_schema",{"_index":244,"title":{},"body":{"modules/AppModule.html":{}}}],["cyber",{"_index":2136,"title":{},"body":{"components/HomeComponent.html":{}}}],["cyberrange",{"_index":2143,"title":{},"body":{"components/HomeComponent.html":{}}}],["da",{"_index":376,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"components/ControlTemplate.html":{},"classes/DataInputCheck.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/ElementIntoTheaterDTO.html":{},"injectables/ExportService.html":{},"injectables/FileService.html":{},"classes/FlavorApplication.html":{},"classes/FlavorDTO.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"injectables/ModalService.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"injectables/StorageService.html":{},"components/TabnavComponent.html":{},"classes/TagTIP.html":{},"classes/TheaterApplication.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/TypesCatalogueDTO.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{},"miscellaneous/functions.html":{},"classes/reteBasicModuleInfo.html":{}}}],["dai",{"_index":1049,"title":{},"body":{"components/ControlTemplate.html":{},"classes/_Control.html":{}}}],["dal",{"_index":442,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"interfaces/CommonModule.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"components/DataInputV2Component.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"classes/FlavorApplication.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/ReteConnection.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterApplication.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/TypesCatalogueDTO.html":{},"components/VisualizerComponent.html":{}}}],["dall'applicazione",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"injectables/FileService.html":{}}}],["dall'input",{"_index":1936,"title":{},"body":{"injectables/FileService.html":{}}}],["dalla",{"_index":454,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"components/DataInputComponent.html":{},"components/DocsComponent.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"components/TabnavComponent.html":{},"classes/TabnavElement.html":{},"classes/TabnavItem.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"components/VisualizerComponent.html":{}}}],["dalle",{"_index":1686,"title":{},"body":{"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"classes/PageableDTO.html":{},"classes/SortDTO.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{}}}],["danger",{"_index":2419,"title":{},"body":{"classes/ModalButton.html":{},"classes/ModalItem.html":{}}}],["dare",{"_index":1272,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["data",{"_index":177,"title":{},"body":{"components/AppComponent.html":{},"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"injectables/AttachmentsService.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"components/DocsComponent.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"classes/FlavorApplication.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"classes/HostNode.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"components/ModalComponent.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"classes/NetworkNode.html":{},"classes/NodeTopologyElement.html":{},"components/OffcanvasComponent.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SimpleModuleApplication.html":{},"injectables/StorageService.html":{},"components/SubnetComponent.html":{},"classes/SubnetNode.html":{},"components/TabnavComponent.html":{},"classes/TheaterApplication.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["data(data",{"_index":3464,"title":{},"body":{"injectables/StorageService.html":{}}}],["data_appended",{"_index":1089,"title":{},"body":{"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{}}}],["data_input_template",{"_index":2032,"title":{},"body":{"components/HomeComponent.html":{}}}],["data_prepended",{"_index":1090,"title":{},"body":{"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{}}}],["dataeditor",{"_index":1636,"title":{},"body":{"classes/ExportModule.html":{},"classes/ExportTheater.html":{}}}],["dataform",{"_index":1150,"title":{},"body":{"components/DataInputComponent.html":{}}}],["dataformrouter",{"_index":897,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["datafromrouter",{"_index":812,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["datainput",{"_index":1084,"title":{"classes/DataInput.html":{}},"body":{"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{}}}],["datainput:14",{"_index":1129,"title":{},"body":{"classes/DataInputCheck.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{}}}],["datainput:15",{"_index":1131,"title":{},"body":{"classes/DataInputCheck.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{}}}],["datainput:16",{"_index":1132,"title":{},"body":{"classes/DataInputCheck.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{}}}],["datainput:17",{"_index":1128,"title":{},"body":{"classes/DataInputCheck.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{}}}],["datainput:18",{"_index":1127,"title":{},"body":{"classes/DataInputCheck.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{}}}],["datainput:19",{"_index":1130,"title":{},"body":{"classes/DataInputCheck.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{}}}],["datainputcheck",{"_index":1111,"title":{"classes/DataInputCheck.html":{}},"body":{"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{}}}],["datainputcomponent",{"_index":176,"title":{"components/DataInputComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"overview.html":{}}}],["datainputcomponet",{"_index":1088,"title":{},"body":{"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{}}}],["datainputelement",{"_index":1100,"title":{"classes/DataInputElement.html":{}},"body":{"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"components/HomeComponent.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{}}}],["datainputelement.element",{"_index":1333,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["datainputreturned",{"_index":1118,"title":{"classes/DataInputReturned.html":{}},"body":{"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"components/HomeComponent.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{}}}],["datainputreturned(val",{"_index":1292,"title":{},"body":{"components/DataInputV2Component.html":{},"components/HomeComponent.html":{}}}],["datainputreturnedv2",{"_index":1211,"title":{"classes/DataInputReturnedV2.html":{}},"body":{"classes/DataInputReturnedV2.html":{},"components/DataInputV2Component.html":{}}}],["datainputselection",{"_index":1105,"title":{"classes/DataInputSelection.html":{}},"body":{"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{}}}],["datainputtext",{"_index":1103,"title":{"classes/DataInputText.html":{}},"body":{"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{}}}],["datainputtype",{"_index":1182,"title":{},"body":{"components/DataInputComponent.html":{}}}],["datainputtypev2",{"_index":1309,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["datainputv2",{"_index":1213,"title":{},"body":{"classes/DataInputReturnedV2.html":{}}}],["datainputv2component",{"_index":179,"title":{"components/DataInputV2Component.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"overview.html":{}}}],["datainputv2componet",{"_index":1214,"title":{},"body":{"classes/DataInputReturnedV2.html":{}}}],["dataitemcomponent",{"_index":182,"title":{"components/DataItemComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"overview.html":{}}}],["datamodal",{"_index":2033,"title":{},"body":{"components/HomeComponent.html":{}}}],["dataroutecomposer",{"_index":863,"title":{"classes/DataRouteComposer.html":{}},"body":{"components/ComposerComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"components/HomeComponent.html":{},"components/VisualizerComponent.html":{}}}],["dataroutevisualizer",{"_index":1455,"title":{"classes/DataRouteVisualizer.html":{}},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"components/HomeComponent.html":{},"components/VisualizerComponent.html":{}}}],["datasubmitted",{"_index":1154,"title":{},"body":{"components/DataInputComponent.html":{}}}],["dati",{"_index":805,"title":{},"body":{"components/ComposerComponent.html":{},"classes/ConstraintsMSD.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"components/HomeComponent.html":{},"classes/HostNode.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/MirroringModuleInstanceNode.html":{},"injectables/ModalService.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkNode.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"injectables/StorageService.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"components/VisualizerComponent.html":{},"miscellaneous/functions.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["dato",{"_index":1087,"title":{},"body":{"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"components/HomeComponent.html":{},"classes/ModalButton.html":{},"classes/ModalItem.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{},"miscellaneous/functions.html":{}}}],["dc3545",{"_index":2173,"title":{},"body":{"components/HomeComponent.html":{}}}],["declarations",{"_index":341,"title":{},"body":{"modules/AppModule.html":{}}}],["declared",{"_index":3016,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["decoration",{"_index":1342,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["decorators",{"_index":2078,"title":{},"body":{"components/HomeComponent.html":{}}}],["dedicata",{"_index":126,"title":{},"body":{"components/AppComponent.html":{}}}],["dedotte",{"_index":1663,"title":{},"body":{"classes/ExportModule.html":{},"classes/ExportTheater.html":{}}}],["default",{"_index":528,"title":{},"body":{"classes/AreaDTO.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"injectables/ModalService.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"components/SubnetComponent.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TypesCatalogueDTO.html":{},"components/VisualizerComponent.html":{}}}],["definiti",{"_index":3194,"title":{},"body":{"classes/PerseDataForTheaterComposer.html":{}}}],["definito",{"_index":21,"title":{},"body":{"classes/Aoption.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"injectables/AttachmentsService.html":{},"injectables/AuthGuard.html":{},"classes/BlueprintFileDTO.html":{},"classes/BorderNetworkDTO.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"components/ControlTemplate.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputReturnedV2.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/DeployInstanceDTO.html":{},"components/DocsComponent.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"classes/FlavorApplication.html":{},"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"injectables/FlavorService.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"classes/HostModuleDTO.html":{},"classes/HostNode.html":{},"classes/HostPortModuleDTO.html":{},"components/HowToUseComponent.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModalButton.html":{},"components/ModalComponent.html":{},"classes/ModalItem.html":{},"injectables/ModalService.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"injectables/ModuleService.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"classes/NameMappingDTO.html":{},"components/NavbarComponent.html":{},"classes/NavbarElement.html":{},"components/NavbarElementComponent.html":{},"classes/NavbarItem.html":{},"classes/NetOSRouterDTO.html":{},"components/NetworkComponent.html":{},"classes/NetworkDTO.html":{},"classes/NetworkNode.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/NodeTopologyElement.html":{},"components/OffcanvasComponent.html":{},"classes/PageableDTO.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SelectOption.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/SingleDataInputReturned.html":{},"classes/SortDTO.html":{},"classes/SourceExport.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"classes/StatisticItemDTO.html":{},"injectables/StorageService.html":{},"components/SubnetComponent.html":{},"classes/SubnetDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"components/TabnavComponent.html":{},"classes/TabnavElement.html":{},"classes/TabnavItem.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"injectables/TheaterService.html":{},"classes/TheaterSimpleData.html":{},"classes/TheatreStatusDTO.html":{},"injectables/TokenService.html":{},"classes/TopologyElement.html":{},"classes/TypesCatalogueDTO.html":{},"components/UnderbarComponent.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["degli",{"_index":1602,"title":{},"body":{"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"components/HomeComponent.html":{},"classes/HostModuleDTO.html":{},"classes/HostPortModuleDTO.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["dei",{"_index":501,"title":{},"body":{"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"classes/BlueprintFileDTO.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/DeployInstanceDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"classes/HostNode.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/MirroringModuleInstanceNode.html":{},"components/ModalComponent.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"classes/NameMappingDTO.html":{},"components/NavbarComponent.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkNode.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/SourceExport.html":{},"classes/StatisticItemDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"components/TabnavComponent.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterDTO.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/TheaterSimpleData.html":{},"classes/TheatreStatusDTO.html":{},"classes/TypesCatalogueDTO.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"components/VisualizerComponent.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["del",{"_index":444,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"components/ControlTemplate.html":{},"components/DataInputV2Component.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"classes/FlavorApplication.html":{},"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"classes/HostNode.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/MirroringModuleInstanceNode.html":{},"components/ModalComponent.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"interfaces/ModuleTopology.html":{},"components/NavbarComponent.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkNode.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/NodeTopologyElement.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/SourceExport.html":{},"classes/StatisticItemDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"components/TabnavComponent.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterApplication.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/TheaterSimpleData.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/TypesCatalogueDTO.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{},"classes/_Control.html":{},"miscellaneous/functions.html":{}}}],["delete",{"_index":2985,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["deleted",{"_index":371,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["dell",{"_index":1546,"title":{},"body":{"components/DocsComponent.html":{}}}],["dell'applicazione",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{}}}],["dell'editor",{"_index":1648,"title":{},"body":{"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"classes/PerseDataForModuleVisualizer.html":{}}}],["dell'elemento",{"_index":1276,"title":{},"body":{"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"components/HomeComponent.html":{}}}],["dell'evento",{"_index":2413,"title":{},"body":{"classes/ModalButton.html":{},"classes/ModalItem.html":{}}}],["dell'hide",{"_index":2439,"title":{},"body":{"components/ModalComponent.html":{},"components/OffcanvasComponent.html":{}}}],["dell'host",{"_index":1008,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/ExportModule.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["dell'input",{"_index":1944,"title":{},"body":{"injectables/FileService.html":{}}}],["dell'inserimento",{"_index":2088,"title":{},"body":{"components/HomeComponent.html":{}}}],["dell'ip",{"_index":1448,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["dell'istanza",{"_index":587,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["dell'offcanvas",{"_index":2806,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["dell'oggetto",{"_index":1359,"title":{},"body":{"components/DataItemComponent.html":{}}}],["dell'underbar",{"_index":3712,"title":{},"body":{"components/UnderbarComponent.html":{}}}],["dell'upload",{"_index":2057,"title":{},"body":{"components/HomeComponent.html":{}}}],["dell'utente",{"_index":2486,"title":{},"body":{"injectables/ModalService.html":{}}}],["della",{"_index":47,"title":{},"body":{"classes/Aoption.html":{},"components/AppComponent.html":{},"components/ComposerComponent.html":{},"classes/ConstraintsMSD.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputReturnedV2.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"components/DocsComponent.html":{},"classes/ExportModule.html":{},"components/HomeComponent.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"components/NavbarComponent.html":{},"classes/NavbarElement.html":{},"components/NavbarElementComponent.html":{},"classes/NavbarItem.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"components/TabnavComponent.html":{},"injectables/TokenService.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"components/VisualizerComponent.html":{}}}],["delle",{"_index":1014,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"components/HomeComponent.html":{},"classes/HostNode.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/MirroringModuleInstanceNode.html":{},"injectables/ModalService.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkNode.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"injectables/TokenService.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["dello",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"injectables/StorageService.html":{}}}],["dependencies",{"_index":220,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dependes_on",{"_index":1758,"title":{},"body":{"classes/ExportModule.html":{}}}],["depends_on",{"_index":1679,"title":{},"body":{"classes/ExportModule.html":{}}}],["deploy",{"_index":750,"title":{},"body":{"classes/BlueprintFileDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/NameMappingDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TheaterDTO.html":{},"classes/TheatreStatusDTO.html":{}}}],["deployinstancedto",{"_index":751,"title":{"classes/DeployInstanceDTO.html":{}},"body":{"classes/BlueprintFileDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/NameMappingDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TheaterDTO.html":{},"classes/TheatreStatusDTO.html":{}}}],["deploymentsequence",{"_index":769,"title":{},"body":{"classes/BlueprintFileDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/NameMappingDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheatreStatusDTO.html":{}}}],["deps",{"_index":339,"title":{},"body":{"modules/AppModule.html":{}}}],["depth",{"_index":3333,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["description",{"_index":372,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"classes/BlueprintFileDTO.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/DeployInstanceDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"classes/NameMappingDTO.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/SourceExport.html":{},"classes/StatisticItemDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/TheaterSimpleData.html":{},"classes/TheatreStatusDTO.html":{},"classes/TypesCatalogueDTO.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{},"classes/reteBasicModuleInfo.html":{}}}],["descriptioncode",{"_index":544,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["descrittiva",{"_index":1459,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["descrizione",{"_index":7,"title":{},"body":{"classes/Aoption.html":{},"components/AppComponent.html":{},"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"classes/BlueprintFileDTO.html":{},"classes/BorderNetworkDTO.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"components/ControlTemplate.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputReturnedV2.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/DeployInstanceDTO.html":{},"components/DocsComponent.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"classes/HostModuleDTO.html":{},"classes/HostNode.html":{},"classes/HostPortModuleDTO.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModalButton.html":{},"components/ModalComponent.html":{},"classes/ModalItem.html":{},"injectables/ModalService.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"classes/NameMappingDTO.html":{},"components/NavbarComponent.html":{},"classes/NavbarElement.html":{},"components/NavbarElementComponent.html":{},"classes/NavbarItem.html":{},"classes/NetOSRouterDTO.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkDTO.html":{},"classes/NetworkNode.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"components/OffcanvasComponent.html":{},"classes/PageableDTO.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SelectOption.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/SingleDataInputReturned.html":{},"classes/SortDTO.html":{},"classes/SourceExport.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"classes/StatisticItemDTO.html":{},"injectables/StorageService.html":{},"classes/SubnetDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"components/TabnavComponent.html":{},"classes/TabnavElement.html":{},"classes/TabnavItem.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterDTO.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/TheaterSimpleData.html":{},"classes/TheatreStatusDTO.html":{},"injectables/TokenService.html":{},"classes/TypesCatalogueDTO.html":{},"components/UnderbarComponent.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["design",{"_index":855,"title":{},"body":{"components/ComposerComponent.html":{},"components/HomeComponent.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"components/VisualizerComponent.html":{}}}],["designer",{"_index":940,"title":{},"body":{"components/ComposerComponent.html":{},"components/HomeComponent.html":{}}}],["designer/visualize",{"_index":2047,"title":{},"body":{"components/HomeComponent.html":{}}}],["designing",{"_index":802,"title":{},"body":{"components/ComposerComponent.html":{}}}],["destra",{"_index":2787,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["destroyed",{"_index":2282,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["destroyed(node",{"_index":2302,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["detailjson",{"_index":1996,"title":{},"body":{"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{}}}],["detailproperties",{"_index":571,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["determinate",{"_index":1278,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["determinati",{"_index":1354,"title":{},"body":{"components/DataItemComponent.html":{}}}],["determinato",{"_index":1226,"title":{},"body":{"components/DataInputV2Component.html":{},"injectables/ModalService.html":{}}}],["dettagli",{"_index":2928,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["dettaglio",{"_index":3153,"title":{},"body":{"classes/PerseDataForModuleVisualizer.html":{}}}],["dev",{"_index":3899,"title":{},"body":{"index.html":{}}}],["deve",{"_index":596,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/ExportModule.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["development",{"_index":3896,"title":{},"body":{"index.html":{}}}],["devono",{"_index":623,"title":{},"body":{"classes/AreaExport.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"components/HomeComponent.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/SourceExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["dhcp",{"_index":3478,"title":{},"body":{"components/SubnetComponent.html":{}}}],["di",{"_index":487,"title":{},"body":{"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"classes/BlueprintFileDTO.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"components/ControlTemplate.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputReturnedV2.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/DeployInstanceDTO.html":{},"components/DocsComponent.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"classes/HostNode.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModalButton.html":{},"components/ModalComponent.html":{},"classes/ModalItem.html":{},"injectables/ModalService.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"classes/NameMappingDTO.html":{},"components/NavbarComponent.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkNode.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"components/OffcanvasComponent.html":{},"classes/PageableDTO.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SelectOption.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/SingleDataInputReturned.html":{},"classes/SortDTO.html":{},"classes/SourceExport.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"classes/StatisticItemDTO.html":{},"injectables/StorageService.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterDTO.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/TheaterSimpleData.html":{},"classes/TheatreStatusDTO.html":{},"injectables/TokenService.html":{},"classes/TypesCatalogueDTO.html":{},"components/UnderbarComponent.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{},"miscellaneous/functions.html":{}}}],["dichiarata",{"_index":2331,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"miscellaneous/functions.html":{}}}],["dichiarazioni",{"_index":237,"title":{},"body":{"modules/AppModule.html":{}}}],["dipendenza",{"_index":550,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["direct",{"_index":1248,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["directchange",{"_index":1240,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["directives",{"_index":216,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":3907,"title":{},"body":{"index.html":{}}}],["directory",{"_index":3912,"title":{},"body":{"index.html":{}}}],["direttamente",{"_index":451,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"components/DataInputV2Component.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"classes/FlavorApplication.html":{},"injectables/ModalService.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["direttive",{"_index":167,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["diretto",{"_index":1286,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["disk",{"_index":1978,"title":{},"body":{"classes/FlavorApplication.html":{},"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"components/HostComponent.html":{},"classes/HostNode.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/ReteHostInfo.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{}}}],["display",{"_index":1564,"title":{},"body":{"components/DocsComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["display_name",{"_index":759,"title":{},"body":{"classes/BlueprintFileDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/NameMappingDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TheaterDTO.html":{},"classes/TheatreStatusDTO.html":{}}}],["displayed",{"_index":1559,"title":{},"body":{"components/DocsComponent.html":{}}}],["displayer",{"_index":215,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["disponibile",{"_index":1880,"title":{},"body":{"classes/ExportTheater.html":{},"modules.html":{}}}],["disponibili",{"_index":1144,"title":{},"body":{"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["dist",{"_index":3911,"title":{},"body":{"index.html":{}}}],["div",{"_index":1407,"title":{},"body":{"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/NetworkComponent.html":{}}}],["diverga",{"_index":2886,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["diverse",{"_index":3434,"title":{},"body":{"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{}}}],["diversi",{"_index":1139,"title":{},"body":{"components/DataInputComponent.html":{},"components/UnderbarComponent.html":{}}}],["dizionario",{"_index":883,"title":{},"body":{"components/ComposerComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["dns",{"_index":790,"title":{},"body":{"classes/BorderNetworkDTO.html":{},"classes/NetOSRouterDTO.html":{},"classes/NetworkDTO.html":{},"classes/SubnetDTO.html":{}}}],["dobootstrap",{"_index":257,"title":{},"body":{"modules/AppModule.html":{}}}],["dock",{"_index":3289,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"dependencies.html":{}}}],["dockplugin",{"_index":3288,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{}}}],["docs",{"_index":1528,"title":{},"body":{"components/DocsComponent.html":{}}}],["docs'},{'name",{"_index":186,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["docs.component.html",{"_index":1530,"title":{},"body":{"components/DocsComponent.html":{}}}],["docs.component.sass",{"_index":1529,"title":{},"body":{"components/DocsComponent.html":{}}}],["docscomponent",{"_index":185,"title":{"components/DocsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"overview.html":{}}}],["document.body.appendchild(a",{"_index":690,"title":{},"body":{"injectables/AttachmentsService.html":{}}}],["document.body.style.background",{"_index":143,"title":{},"body":{"components/AppComponent.html":{}}}],["document.body.style.overflow",{"_index":139,"title":{},"body":{"components/AppComponent.html":{}}}],["document.createelement('a",{"_index":689,"title":{},"body":{"injectables/AttachmentsService.html":{}}}],["document.getelementbyid(el.id",{"_index":1191,"title":{},"body":{"components/DataInputComponent.html":{},"components/NavbarComponent.html":{}}}],["documentation",{"_index":363,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/NavbarElementComponent.html":{}}}],["documentazione",{"_index":1524,"title":{},"body":{"components/DocsComponent.html":{}}}],["doesn't",{"_index":2979,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["dom",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["domsanitizer",{"_index":1534,"title":{},"body":{"components/DocsComponent.html":{}}}],["dopo",{"_index":1728,"title":{},"body":{"classes/ExportModule.html":{},"components/HomeComponent.html":{}}}],["dovesse",{"_index":1845,"title":{},"body":{"injectables/ExportService.html":{},"injectables/FileService.html":{}}}],["dovute",{"_index":3859,"title":{},"body":{"miscellaneous/functions.html":{}}}],["dovuti",{"_index":3259,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["down",{"_index":1400,"title":{},"body":{"components/DataItemComponent.html":{},"components/NavbarElementComponent.html":{},"components/OffcanvasComponent.html":{}}}],["down:hover",{"_index":2724,"title":{},"body":{"components/NavbarElementComponent.html":{}}}],["download",{"_index":3867,"title":{},"body":{"miscellaneous/functions.html":{}}}],["dsl_definition",{"_index":980,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["due",{"_index":2490,"title":{},"body":{"injectables/ModalService.html":{}}}],["duplicated",{"_index":3724,"title":{},"body":{"components/UnderbarComponent.html":{}}}],["dx",{"_index":2808,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["dynamic",{"_index":3330,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"dependencies.html":{}}}],["e",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaExport.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"classes/FlavorApplication.html":{},"components/HomeComponent.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceSimpleData.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesTSD.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/SourceExport.html":{},"classes/TagsExport.html":{},"classes/TheaterApplication.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"components/VisualizerComponent.html":{},"index.html":{}}}],["e.required",{"_index":1185,"title":{},"body":{"components/DataInputComponent.html":{}}}],["e2e",{"_index":3922,"title":{},"body":{"index.html":{}}}],["ed",{"_index":2867,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["edito",{"_index":3268,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["editor",{"_index":1609,"title":{},"body":{"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"injectables/ExportService.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["editor).convertmodule",{"_index":1859,"title":{},"body":{"injectables/ExportService.html":{}}}],["editor).converttheater",{"_index":1863,"title":{},"body":{"injectables/ExportService.html":{}}}],["editoruse",{"_index":3266,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["editoruse_simple",{"_index":3337,"title":{},"body":{"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["effettivo",{"_index":3868,"title":{},"body":{"miscellaneous/functions.html":{}}}],["el",{"_index":149,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/DataInputComponent.html":{},"components/NavbarComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["el.a_option",{"_index":2700,"title":{},"body":{"components/NavbarComponent.html":{}}}],["el.a_option.foreach",{"_index":2701,"title":{},"body":{"components/NavbarComponent.html":{}}}],["el.element.foreach(e",{"_index":3721,"title":{},"body":{"components/UnderbarComponent.html":{}}}],["el.id",{"_index":1194,"title":{},"body":{"components/DataInputComponent.html":{}}}],["el.show",{"_index":151,"title":{},"body":{"components/AppComponent.html":{}}}],["el.text",{"_index":153,"title":{},"body":{"components/AppComponent.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{}}}],["el.type",{"_index":1192,"title":{},"body":{"components/DataInputComponent.html":{}}}],["el.value",{"_index":1338,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["elaborare",{"_index":1178,"title":{},"body":{"components/DataInputComponent.html":{}}}],["element",{"_index":41,"title":{},"body":{"classes/Aoption.html":{},"components/ComposerComponent.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"components/HomeComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"classes/NavbarElement.html":{},"components/NavbarElementComponent.html":{},"classes/NavbarItem.html":{},"components/OffcanvasComponent.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{},"components/TabnavComponent.html":{},"classes/TabnavElement.html":{},"classes/TabnavItem.html":{},"components/UnderbarComponent.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{}}}],["element'},{'name",{"_index":197,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["element.component",{"_index":310,"title":{},"body":{"modules/AppModule.html":{}}}],["element.component.css",{"_index":2714,"title":{},"body":{"components/NavbarElementComponent.html":{}}}],["element.component.html",{"_index":2715,"title":{},"body":{"components/NavbarElementComponent.html":{}}}],["element.component.ts",{"_index":2712,"title":{},"body":{"components/NavbarElementComponent.html":{}}}],["element.component.ts:11",{"_index":2716,"title":{},"body":{"components/NavbarElementComponent.html":{}}}],["element.data.type",{"_index":1714,"title":{},"body":{"classes/ExportModule.html":{}}}],["element.text_content",{"_index":2464,"title":{},"body":{"components/ModalComponent.html":{}}}],["element.title",{"_index":2462,"title":{},"body":{"components/ModalComponent.html":{}}}],["element.type",{"_index":2706,"title":{},"body":{"components/NavbarComponent.html":{}}}],["element/navbar",{"_index":309,"title":{},"body":{"modules/AppModule.html":{},"components/NavbarElementComponent.html":{}}}],["elementdto",{"_index":498,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["elementi",{"_index":1140,"title":{},"body":{"components/DataInputComponent.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"components/UnderbarComponent.html":{},"index.html":{}}}],["elementintotheaterdto",{"_index":600,"title":{"classes/ElementIntoTheaterDTO.html":{}},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["elemento",{"_index":27,"title":{},"body":{"classes/Aoption.html":{},"components/AppComponent.html":{},"classes/AreaDTO.html":{},"classes/BlueprintFileDTO.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"components/ControlTemplate.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/DeployInstanceDTO.html":{},"components/DocsComponent.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/ModalButton.html":{},"components/ModalComponent.html":{},"classes/ModalItem.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/NameMappingDTO.html":{},"components/NavbarComponent.html":{},"classes/NavbarElement.html":{},"components/NavbarElementComponent.html":{},"classes/NavbarItem.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/SelectOption.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/SingleDataInputReturned.html":{},"classes/StatisticItemDTO.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"classes/TabnavElement.html":{},"classes/TabnavItem.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterDTO.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheatreStatusDTO.html":{},"classes/TypesCatalogueDTO.html":{},"components/UnderbarComponent.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["elements",{"_index":468,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["elements[host_name",{"_index":3040,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["elements[host_name].output.push(port_name",{"_index":3066,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["elements[moduleinstancename",{"_index":3022,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["elements[network_name",{"_index":3061,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["elements[network_name].input.push(subnet_name",{"_index":3065,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["elements[subnet_name",{"_index":3054,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["elements[subnet_name].output.push(network_name",{"_index":3059,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["elimina",{"_index":1384,"title":{},"body":{"components/DataItemComponent.html":{}}}],["eliminazione",{"_index":1389,"title":{},"body":{"components/DataItemComponent.html":{}}}],["ellipsis",{"_index":1415,"title":{},"body":{"components/DataItemComponent.html":{},"components/OffcanvasComponent.html":{}}}],["embedded",{"_index":1558,"title":{},"body":{"components/DocsComponent.html":{}}}],["emette",{"_index":1387,"title":{},"body":{"components/DataItemComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/OffcanvasComponent.html":{},"components/UnderbarComponent.html":{}}}],["emettere",{"_index":1175,"title":{},"body":{"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{}}}],["emitter",{"_index":1056,"title":{},"body":{"components/ControlTemplate.html":{},"components/ModalComponent.html":{},"classes/_Control.html":{}}}],["empty",{"_index":513,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/NetworkNode.html":{},"classes/PageableDTO.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/SortDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/SubnetNode.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/TypesCatalogueDTO.html":{},"miscellaneous/functions.html":{}}}],["emptymoduleinfo",{"_index":1578,"title":{"classes/EmptyModuleInfo.html":{}},"body":{"classes/EmptyModuleInfo.html":{}}}],["emptynodeinfo",{"_index":1614,"title":{"classes/EmptyNodeInfo.html":{}},"body":{"classes/EmptyNodeInfo.html":{}}}],["enable_dhcp",{"_index":1021,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/ExportModule.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["end",{"_index":2254,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"index.html":{}}}],["endpage",{"_index":2661,"title":{},"body":{"injectables/ModuleService.html":{}}}],["ends",{"_index":2133,"title":{},"body":{"components/HomeComponent.html":{}}}],["engine",{"_index":3264,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["entitynamemappingfile",{"_index":772,"title":{},"body":{"classes/BlueprintFileDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/NameMappingDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheatreStatusDTO.html":{}}}],["entitynamemappingfiledto",{"_index":764,"title":{"classes/EntityNameMappingFileDTO.html":{}},"body":{"classes/BlueprintFileDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/NameMappingDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheatreStatusDTO.html":{}}}],["entrycomponents",{"_index":238,"title":{},"body":{"modules/AppModule.html":{}}}],["enum",{"_index":1431,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{}}}],["enummoduletype",{"_index":1461,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["enummoduletype.mirroringmoduleinstance",{"_index":2409,"title":{},"body":{"classes/MirroringModuleInstanceNode.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{}}}],["enummoduletype.theaterinternalservicemoduleinstance",{"_index":3367,"title":{},"body":{"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{}}}],["enummoduletype.theatermoduleinstance",{"_index":3371,"title":{},"body":{"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["enummoduletypedescription",{"_index":1471,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["enumnodetype",{"_index":1456,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/ExportModule.html":{},"components/HostComponent.html":{},"classes/HostNode.html":{},"components/NetworkComponent.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"components/SubnetComponent.html":{},"classes/SubnetNode.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["enumnodetype.host",{"_index":1715,"title":{},"body":{"classes/ExportModule.html":{},"classes/HostNode.html":{},"classes/ReteHostInfo.html":{}}}],["enumnodetype.network",{"_index":1720,"title":{},"body":{"classes/ExportModule.html":{},"classes/NetworkNode.html":{},"classes/ReteNetworkInfo.html":{}}}],["enumnodetype.subnet",{"_index":1718,"title":{},"body":{"classes/ExportModule.html":{},"classes/ReteSubnetInfo.html":{},"classes/SubnetNode.html":{}}}],["enumnodetypedescription",{"_index":1460,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["environment",{"_index":326,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AttachmentsService.html":{},"injectables/FlavorService.html":{},"injectables/ModuleService.html":{},"injectables/ParseService.html":{},"injectables/TheaterService.html":{}}}],["environment.getallflavor",{"_index":2011,"title":{},"body":{"injectables/FlavorService.html":{}}}],["environment.getallflavor+'/'+id",{"_index":2019,"title":{},"body":{"injectables/FlavorService.html":{}}}],["environment.getallmodules",{"_index":2659,"title":{},"body":{"injectables/ModuleService.html":{}}}],["environment.getmoduleattachment(module_id",{"_index":677,"title":{},"body":{"injectables/AttachmentsService.html":{}}}],["environment.getmoduleinterfacesbymoduleid",{"_index":2665,"title":{},"body":{"injectables/ModuleService.html":{}}}],["environment.getmoduleshostsbytheateruuid",{"_index":2663,"title":{},"body":{"injectables/ModuleService.html":{}}}],["environment.gettheaterattachment(theater_id",{"_index":699,"title":{},"body":{"injectables/AttachmentsService.html":{}}}],["environment.gettheaterbyid",{"_index":3653,"title":{},"body":{"injectables/TheaterService.html":{}}}],["environment.gettheatermodulesbyuuid",{"_index":3655,"title":{},"body":{"injectables/TheaterService.html":{}}}],["environment.gmhhost",{"_index":2664,"title":{},"body":{"injectables/ModuleService.html":{}}}],["environment.mocked",{"_index":334,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/ParseService.html":{}}}],["ereditato",{"_index":375,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/DataInputCheck.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"classes/FlavorApplication.html":{},"classes/FlavorDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstance.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"classes/reteBasicModuleInfo.html":{}}}],["error",{"_index":352,"title":{},"body":{"modules/AppModule.html":{},"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DocsComponent.html":{},"classes/ElementIntoTheaterDTO.html":{},"injectables/FileService.html":{},"injectables/FlavorService.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"injectables/ModuleService.html":{},"classes/ModuleStatusDTO.html":{},"classes/SelectOption.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/SingleDataInputReturned.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"injectables/TheaterService.html":{},"classes/TypesCatalogueDTO.html":{}}}],["errore",{"_index":879,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["esclusiva",{"_index":455,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["esclusivamente",{"_index":2482,"title":{},"body":{"injectables/ModalService.html":{}}}],["esegue",{"_index":830,"title":{},"body":{"components/ComposerComponent.html":{},"components/DataInputComponent.html":{},"components/DataItemComponent.html":{},"injectables/ExportService.html":{},"components/HomeComponent.html":{},"components/ModalComponent.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"components/VisualizerComponent.html":{},"miscellaneous/functions.html":{}}}],["eseguire",{"_index":1279,"title":{},"body":{"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"components/DocsComponent.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"injectables/ModalService.html":{},"classes/NetworkNode.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"miscellaneous/functions.html":{}}}],["esegure",{"_index":797,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["esporta",{"_index":2981,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["esportare",{"_index":2890,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["esposte",{"_index":577,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["espresse",{"_index":1480,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["essa",{"_index":1252,"title":{},"body":{"components/DataInputV2Component.html":{},"injectables/ExportService.html":{},"injectables/FileService.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"injectables/ModalService.html":{},"classes/NetworkNode.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"miscellaneous/functions.html":{}}}],["esserci",{"_index":624,"title":{},"body":{"classes/AreaExport.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"components/HomeComponent.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/SourceExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["essere",{"_index":597,"title":{},"body":{"classes/AreaDTO.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"classes/GenericParameterDTO.html":{},"injectables/ModalService.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"components/TabnavComponent.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{},"components/VisualizerComponent.html":{}}}],["esso",{"_index":1805,"title":{},"body":{"classes/ExportModule.html":{},"classes/ModalButton.html":{},"classes/ModalItem.html":{},"classes/PerseDataForModuleVisualizer.html":{}}}],["estende",{"_index":1102,"title":{},"body":{"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{}}}],["event",{"_index":1197,"title":{},"body":{"components/DataInputComponent.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"components/UnderbarComponent.html":{}}}],["event.d.ts",{"_index":3892,"title":{},"body":{"index.html":{}}}],["event.target.files[0",{"_index":1951,"title":{},"body":{"injectables/FileService.html":{}}}],["eventemitter",{"_index":1159,"title":{},"body":{"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/OffcanvasComponent.html":{},"components/UnderbarComponent.html":{}}}],["example",{"_index":1855,"title":{},"body":{"injectables/ExportService.html":{},"injectables/FileService.html":{}}}],["execute",{"_index":3920,"title":{},"body":{"index.html":{}}}],["exists",{"_index":3014,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["exit",{"_index":1151,"title":{},"body":{"components/DataInputComponent.html":{}}}],["exitstatus",{"_index":1122,"title":{},"body":{"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{}}}],["expectedinstancetype",{"_index":524,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["export",{"_index":34,"title":{},"body":{"classes/Aoption.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"injectables/AttachmentsService.html":{},"injectables/AuthGuard.html":{},"classes/BlueprintFileDTO.html":{},"classes/BorderNetworkDTO.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"components/ControlTemplate.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputReturnedV2.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/DeployInstanceDTO.html":{},"components/DocsComponent.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"classes/FlavorApplication.html":{},"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"injectables/FlavorService.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"classes/HostModuleDTO.html":{},"classes/HostNode.html":{},"classes/HostPortModuleDTO.html":{},"components/HowToUseComponent.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModalButton.html":{},"components/ModalComponent.html":{},"classes/ModalItem.html":{},"injectables/ModalService.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"injectables/ModuleService.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"interfaces/ModuleTopology.html":{},"classes/NameMappingDTO.html":{},"components/NavbarComponent.html":{},"classes/NavbarElement.html":{},"components/NavbarElementComponent.html":{},"classes/NavbarItem.html":{},"classes/NetOSRouterDTO.html":{},"components/NetworkComponent.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkDTO.html":{},"classes/NetworkNode.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/NodeTopologyElement.html":{},"components/OffcanvasComponent.html":{},"classes/PageableDTO.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SelectOption.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/SingleDataInputReturned.html":{},"classes/SortDTO.html":{},"classes/SourceExport.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"classes/StatisticItemDTO.html":{},"injectables/StorageService.html":{},"components/SubnetComponent.html":{},"classes/SubnetDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"components/TabnavComponent.html":{},"classes/TabnavElement.html":{},"classes/TabnavItem.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"injectables/TheaterService.html":{},"classes/TheaterSimpleData.html":{},"interfaces/TheaterTopology.html":{},"classes/TheatreStatusDTO.html":{},"injectables/TokenService.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/TypesCatalogueDTO.html":{},"components/UnderbarComponent.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["exportmodule",{"_index":1632,"title":{"classes/ExportModule.html":{}},"body":{"classes/ExportModule.html":{},"injectables/ExportService.html":{}}}],["exportmodule(module",{"_index":1858,"title":{},"body":{"injectables/ExportService.html":{}}}],["exportmoduletojson",{"_index":1824,"title":{},"body":{"injectables/ExportService.html":{}}}],["exportmoduletojson(module",{"_index":1829,"title":{},"body":{"injectables/ExportService.html":{}}}],["exportmoduletoyaml",{"_index":1825,"title":{},"body":{"injectables/ExportService.html":{}}}],["exportmoduletoyaml(module",{"_index":1833,"title":{},"body":{"injectables/ExportService.html":{}}}],["exports",{"_index":241,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["exportservice",{"_index":1816,"title":{"injectables/ExportService.html":{}},"body":{"injectables/ExportService.html":{}}}],["exporttheater",{"_index":1841,"title":{"classes/ExportTheater.html":{}},"body":{"injectables/ExportService.html":{},"classes/ExportTheater.html":{}}}],["exporttheater(theater",{"_index":1862,"title":{},"body":{"injectables/ExportService.html":{}}}],["exporttheatertojson",{"_index":1826,"title":{},"body":{"injectables/ExportService.html":{}}}],["exporttheatertojson(theater",{"_index":1837,"title":{},"body":{"injectables/ExportService.html":{}}}],["exporttheatertoyaml",{"_index":1827,"title":{},"body":{"injectables/ExportService.html":{}}}],["exporttheatertoyaml(theater",{"_index":1839,"title":{},"body":{"injectables/ExportService.html":{}}}],["exportto",{"_index":1854,"title":{},"body":{"injectables/ExportService.html":{}}}],["exporttojson",{"_index":1832,"title":{},"body":{"injectables/ExportService.html":{},"miscellaneous/functions.html":{}}}],["exporttojson(fn",{"_index":3865,"title":{},"body":{"miscellaneous/functions.html":{}}}],["exporttojson(module.name+this.moduletype",{"_index":1861,"title":{},"body":{"injectables/ExportService.html":{}}}],["exporttojson(theater.name+this.theatertype",{"_index":1865,"title":{},"body":{"injectables/ExportService.html":{}}}],["exporttoyaml",{"_index":1836,"title":{},"body":{"injectables/ExportService.html":{},"miscellaneous/functions.html":{}}}],["exporttoyaml(fn",{"_index":3870,"title":{},"body":{"miscellaneous/functions.html":{}}}],["exporttoyaml(module.name",{"_index":1860,"title":{},"body":{"injectables/ExportService.html":{}}}],["exporttoyaml(theater.name",{"_index":1864,"title":{},"body":{"injectables/ExportService.html":{}}}],["extends",{"_index":369,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"injectables/AuthGuard.html":{},"interfaces/CommonModule.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"components/ControlTemplate.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/FlavorApplication.html":{},"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"classes/GenericParameterDTO.html":{},"components/HostComponent.html":{},"classes/HostNode.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"interfaces/ModuleTopology.html":{},"components/NetworkComponent.html":{},"classes/NetworkNode.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SelectOption.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/SingleDataInputReturned.html":{},"classes/StatisticItemDTO.html":{},"components/SubnetComponent.html":{},"classes/SubnetNode.html":{},"classes/TagTIP.html":{},"classes/TheaterApplication.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/TypesCatalogueDTO.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{},"classes/_Control.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["external",{"_index":1477,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"components/NetworkComponent.html":{}}}],["external_virtual_machine",{"_index":1504,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["externalinterfacename",{"_index":2767,"title":{},"body":{"classes/NetworkNode.html":{},"classes/ReteNetworkInfo.html":{}}}],["externalinterfacetype",{"_index":2768,"title":{},"body":{"classes/NetworkNode.html":{},"classes/ReteNetworkInfo.html":{}}}],["externalvirtualmachine",{"_index":1469,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/EmptyModuleInfo.html":{}}}],["f.cpu",{"_index":3125,"title":{},"body":{"classes/PerseDataForModuleComposer.html":{}}}],["f.disk",{"_index":3127,"title":{},"body":{"classes/PerseDataForModuleComposer.html":{}}}],["f.name",{"_index":3124,"title":{},"body":{"classes/PerseDataForModuleComposer.html":{}}}],["f.ram",{"_index":3126,"title":{},"body":{"classes/PerseDataForModuleComposer.html":{}}}],["f124",{"_index":2240,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["f9fafb24",{"_index":2115,"title":{},"body":{"components/HomeComponent.html":{}}}],["fa",{"_index":3121,"title":{},"body":{"classes/PerseDataForModuleComposer.html":{}}}],["fa.push",{"_index":3123,"title":{},"body":{"classes/PerseDataForModuleComposer.html":{}}}],["failed",{"_index":351,"title":{},"body":{"modules/AppModule.html":{}}}],["false",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"classes/ConstraintsMSD.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/ExportModule.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"components/NetworkComponent.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"components/OffcanvasComponent.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"components/TabnavComponent.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{}}}],["fam",{"_index":2250,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["family",{"_index":2249,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["fare",{"_index":2488,"title":{},"body":{"injectables/ModalService.html":{}}}],["farlo",{"_index":117,"title":{},"body":{"components/AppComponent.html":{}}}],["fase",{"_index":2289,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"injectables/ModalService.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["fatto",{"_index":1727,"title":{},"body":{"classes/ExportModule.html":{}}}],["fetch",{"_index":2906,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["fetching",{"_index":2866,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["ff0000",{"_index":2248,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["fff",{"_index":2180,"title":{},"body":{"components/HomeComponent.html":{}}}],["ffff",{"_index":1563,"title":{},"body":{"components/DocsComponent.html":{}}}],["ffffff5e",{"_index":2424,"title":{},"body":{"classes/ModalButton.html":{},"classes/ModalItem.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/Aoption.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"injectables/AttachmentsService.html":{},"injectables/AuthGuard.html":{},"classes/BlueprintFileDTO.html":{},"classes/BorderNetworkDTO.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"components/ControlTemplate.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputReturnedV2.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/DeployInstanceDTO.html":{},"components/DocsComponent.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"classes/FlavorApplication.html":{},"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"injectables/FlavorService.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"classes/HostModuleDTO.html":{},"classes/HostNode.html":{},"classes/HostPortModuleDTO.html":{},"components/HowToUseComponent.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModalButton.html":{},"components/ModalComponent.html":{},"classes/ModalItem.html":{},"injectables/ModalService.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"injectables/ModuleService.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"interfaces/ModuleTopology.html":{},"classes/NameMappingDTO.html":{},"components/NavbarComponent.html":{},"classes/NavbarElement.html":{},"components/NavbarElementComponent.html":{},"classes/NavbarItem.html":{},"classes/NetOSRouterDTO.html":{},"components/NetworkComponent.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkDTO.html":{},"classes/NetworkNode.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/NodeTopologyElement.html":{},"components/OffcanvasComponent.html":{},"classes/PageableDTO.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SelectOption.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/SingleDataInputReturned.html":{},"classes/SortDTO.html":{},"classes/SourceExport.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"classes/StatisticItemDTO.html":{},"injectables/StorageService.html":{},"components/SubnetComponent.html":{},"classes/SubnetDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"components/TabnavComponent.html":{},"classes/TabnavElement.html":{},"classes/TabnavItem.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"injectables/TheaterService.html":{},"classes/TheaterSimpleData.html":{},"interfaces/TheaterTopology.html":{},"classes/TheatreStatusDTO.html":{},"injectables/TokenService.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/TypesCatalogueDTO.html":{},"components/UnderbarComponent.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["file.name.includes(this.moduletype",{"_index":1975,"title":{},"body":{"injectables/FileService.html":{}}}],["file.name.includes(this.theatertype",{"_index":1973,"title":{},"body":{"injectables/FileService.html":{}}}],["file.type",{"_index":1971,"title":{},"body":{"injectables/FileService.html":{}}}],["filefor",{"_index":1938,"title":{},"body":{"injectables/FileService.html":{}}}],["filefor:subjecttype",{"_index":1949,"title":{},"body":{"injectables/FileService.html":{}}}],["filejson",{"_index":2034,"title":{},"body":{"components/HomeComponent.html":{}}}],["fileloaded",{"_index":2035,"title":{},"body":{"components/HomeComponent.html":{}}}],["filereader",{"_index":1952,"title":{},"body":{"injectables/FileService.html":{}}}],["filereader.onerror",{"_index":1968,"title":{},"body":{"injectables/FileService.html":{}}}],["filereader.onload",{"_index":1958,"title":{},"body":{"injectables/FileService.html":{}}}],["filereader.readastext(this.selectedfile",{"_index":1953,"title":{},"body":{"injectables/FileService.html":{}}}],["files",{"_index":3904,"title":{},"body":{"index.html":{}}}],["fileservice",{"_index":1920,"title":{"injectables/FileService.html":{}},"body":{"injectables/FileService.html":{},"components/HomeComponent.html":{}}}],["filtraggio",{"_index":838,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["findnode",{"_index":1639,"title":{},"body":{"classes/ExportModule.html":{}}}],["findnode(name",{"_index":1668,"title":{},"body":{"classes/ExportModule.html":{}}}],["first",{"_index":512,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"injectables/ModalService.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["fix",{"_index":2885,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["fixare",{"_index":2947,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["fixed_parameters",{"_index":535,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["fixtheatername",{"_index":2868,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["fixtheatername(rowtheater",{"_index":2883,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["flag",{"_index":3914,"title":{},"body":{"index.html":{}}}],["flavor",{"_index":813,"title":{},"body":{"components/ComposerComponent.html":{},"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{}}}],["flavorapplication",{"_index":478,"title":{"classes/FlavorApplication.html":{}},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["flavorbasicinfo",{"_index":398,"title":{"classes/FlavorBasicInfo.html":{}},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{}}}],["flavorbasicinfo:5",{"_index":1981,"title":{},"body":{"classes/FlavorApplication.html":{},"classes/FlavorDTO.html":{}}}],["flavorbasicinfo:6",{"_index":1982,"title":{},"body":{"classes/FlavorApplication.html":{},"classes/FlavorDTO.html":{}}}],["flavorbasicinfo:7",{"_index":1983,"title":{},"body":{"classes/FlavorApplication.html":{},"classes/FlavorDTO.html":{}}}],["flavordto",{"_index":1995,"title":{"classes/FlavorDTO.html":{}},"body":{"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"injectables/FlavorService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{}}}],["flavordto.foreach(f",{"_index":3122,"title":{},"body":{"classes/PerseDataForModuleComposer.html":{}}}],["flavorname",{"_index":479,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/HostNode.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["flavorservice",{"_index":2003,"title":{"injectables/FlavorService.html":{}},"body":{"injectables/FlavorService.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{}}}],["flex",{"_index":1565,"title":{},"body":{"components/DocsComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["flow",{"_index":1566,"title":{},"body":{"components/DocsComponent.html":{}}}],["fn",{"_index":3869,"title":{},"body":{"miscellaneous/functions.html":{}}}],["fonr",{"_index":2843,"title":{},"body":{"components/OffcanvasComponent.html":{},"components/TabnavComponent.html":{}}}],["font",{"_index":1078,"title":{},"body":{"components/ControlTemplate.html":{},"components/DataInputV2Component.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["footer",{"_index":2466,"title":{},"body":{"components/ModalComponent.html":{}}}],["force",{"_index":713,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["foreach",{"_index":1744,"title":{},"body":{"classes/ExportModule.html":{}}}],["form",{"_index":1142,"title":{},"body":{"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/HomeComponent.html":{}}}],["formato",{"_index":1635,"title":{},"body":{"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/ParseService.html":{},"miscellaneous/functions.html":{}}}],["formcontrol",{"_index":1172,"title":{},"body":{"components/DataInputComponent.html":{}}}],["formelementcomposer",{"_index":2036,"title":{},"body":{"components/HomeComponent.html":{}}}],["formelementmodal",{"_index":2037,"title":{},"body":{"components/HomeComponent.html":{}}}],["formelementvisualizer",{"_index":2038,"title":{},"body":{"components/HomeComponent.html":{}}}],["formgroup",{"_index":1171,"title":{},"body":{"components/DataInputComponent.html":{}}}],["formsmodule",{"_index":320,"title":{},"body":{"modules/AppModule.html":{}}}],["formtype",{"_index":1241,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["fornire",{"_index":2941,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["fornisce",{"_index":2687,"title":{},"body":{"components/NavbarComponent.html":{}}}],["forniti",{"_index":1664,"title":{},"body":{"classes/ExportModule.html":{},"classes/ExportTheater.html":{}}}],["fornito",{"_index":1649,"title":{},"body":{"classes/ExportModule.html":{},"classes/ExportTheater.html":{}}}],["found",{"_index":1205,"title":{},"body":{"components/DataInputComponent.html":{}}}],["four",{"_index":1450,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["full",{"_index":2783,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["full/mid",{"_index":2818,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["function",{"_index":1039,"title":{},"body":{"components/ControlTemplate.html":{},"components/DataInputV2Component.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/_Control.html":{}}}],["functions",{"_index":3835,"title":{"miscellaneous/functions.html":{}},"body":{}}],["funzione",{"_index":829,"title":{},"body":{"components/ComposerComponent.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"components/NavbarComponent.html":{},"classes/NetworkNode.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"injectables/StorageService.html":{},"classes/SubnetNode.html":{},"components/TabnavComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"injectables/TokenService.html":{},"components/UnderbarComponent.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{},"components/VisualizerComponent.html":{},"miscellaneous/functions.html":{}}}],["funzioni",{"_index":835,"title":{},"body":{"components/ComposerComponent.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"components/VisualizerComponent.html":{},"miscellaneous/functions.html":{}}}],["funzone",{"_index":1670,"title":{},"body":{"classes/ExportModule.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{}}}],["further",{"_index":3924,"title":{},"body":{"index.html":{}}}],["future",{"_index":448,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/ConstraintsMSD.html":{},"classes/FlavorApplication.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleApplication.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstance.html":{},"classes/ModuleSimpleData.html":{},"interfaces/ModuleTopology.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/NodeTopologyElement.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["gateway",{"_index":791,"title":{},"body":{"classes/BorderNetworkDTO.html":{},"classes/NetOSRouterDTO.html":{},"classes/NetworkDTO.html":{},"classes/SubnetDTO.html":{}}}],["gateway_ip",{"_index":1022,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/ExportModule.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["genera",{"_index":2676,"title":{},"body":{"components/NavbarComponent.html":{}}}],["general",{"_index":134,"title":{},"body":{"components/AppComponent.html":{}}}],["generale",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["generali",{"_index":622,"title":{},"body":{"classes/AreaExport.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"classes/FlavorBasicInfo.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{},"classes/SourceExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["generare",{"_index":2332,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"miscellaneous/functions.html":{}}}],["generate",{"_index":3906,"title":{},"body":{"index.html":{}}}],["generated",{"_index":3885,"title":{},"body":{"index.html":{}}}],["generiche",{"_index":2474,"title":{},"body":{"injectables/ModalService.html":{}}}],["generici",{"_index":3703,"title":{},"body":{"components/UnderbarComponent.html":{}}}],["generico",{"_index":526,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"components/ModalComponent.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"components/OffcanvasComponent.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"components/TabnavComponent.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["genericparameterdto",{"_index":527,"title":{"classes/GenericParameterDTO.html":{}},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["gestione",{"_index":1922,"title":{},"body":{"injectables/FileService.html":{},"components/HomeComponent.html":{},"injectables/ModalService.html":{},"injectables/TokenService.html":{}}}],["gestire",{"_index":1136,"title":{},"body":{"components/DataInputComponent.html":{},"components/DataItemComponent.html":{},"injectables/FileService.html":{}}}],["get_and_remove_theater_properties_from_blueprint",{"_index":2869,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["get_and_remove_theater_properties_from_blueprint(rowtheater",{"_index":2888,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["getallflavor",{"_index":2005,"title":{},"body":{"injectables/FlavorService.html":{}}}],["getallmodules",{"_index":2642,"title":{},"body":{"injectables/ModuleService.html":{}}}],["getallmodulespage",{"_index":2643,"title":{},"body":{"injectables/ModuleService.html":{}}}],["getallmodulespage(pageindex",{"_index":2649,"title":{},"body":{"injectables/ModuleService.html":{}}}],["getcheckbox",{"_index":1236,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["getdata",{"_index":3459,"title":{},"body":{"injectables/StorageService.html":{}}}],["getemptyhostinfo",{"_index":1617,"title":{},"body":{"classes/EmptyNodeInfo.html":{},"classes/HostNode.html":{},"classes/ReteHostInfo.html":{},"miscellaneous/functions.html":{}}}],["getemptynetworkinfo",{"_index":1619,"title":{},"body":{"classes/EmptyNodeInfo.html":{},"classes/NetworkNode.html":{},"classes/ReteNetworkInfo.html":{},"miscellaneous/functions.html":{}}}],["getemptynetworkinfo():retenetworkinfo",{"_index":2769,"title":{},"body":{"classes/NetworkNode.html":{},"classes/ReteNetworkInfo.html":{}}}],["getemptyretemirroringmoduleinstanceinfo",{"_index":1584,"title":{},"body":{"classes/EmptyModuleInfo.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"miscellaneous/functions.html":{}}}],["getemptyretetheaterinternalservicemoduleinstanceinfo",{"_index":1586,"title":{},"body":{"classes/EmptyModuleInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"miscellaneous/functions.html":{}}}],["getemptyretetheatermoduleinstanceinfo",{"_index":1585,"title":{},"body":{"classes/EmptyModuleInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/TheaterModuleInstanceNode.html":{},"miscellaneous/functions.html":{}}}],["getemptysubnetinfo",{"_index":1618,"title":{},"body":{"classes/EmptyNodeInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/SubnetNode.html":{},"miscellaneous/functions.html":{}}}],["getfile",{"_index":1927,"title":{},"body":{"injectables/FileService.html":{}}}],["getflavorbyid",{"_index":2006,"title":{},"body":{"injectables/FlavorService.html":{}}}],["getflavorbyid(id",{"_index":2009,"title":{},"body":{"injectables/FlavorService.html":{}}}],["getheaders",{"_index":3665,"title":{},"body":{"injectables/TokenService.html":{}}}],["gethostexport",{"_index":1640,"title":{},"body":{"classes/ExportModule.html":{}}}],["gethostexport(node",{"_index":1674,"title":{},"body":{"classes/ExportModule.html":{}}}],["gethttpgetoption",{"_index":3666,"title":{},"body":{"injectables/TokenService.html":{}}}],["getmainmoduledetails",{"_index":3129,"title":{},"body":{"classes/PerseDataForModuleVisualizer.html":{}}}],["getmainmoduledetails(module",{"_index":3136,"title":{},"body":{"classes/PerseDataForModuleVisualizer.html":{}}}],["getmainmoduleinterfaces",{"_index":3130,"title":{},"body":{"classes/PerseDataForModuleVisualizer.html":{}}}],["getmainmoduleinterfaces(module",{"_index":3139,"title":{},"body":{"classes/PerseDataForModuleVisualizer.html":{}}}],["getmainmodulenodes",{"_index":3131,"title":{},"body":{"classes/PerseDataForModuleVisualizer.html":{}}}],["getmainmodulenodes(module",{"_index":3143,"title":{},"body":{"classes/PerseDataForModuleVisualizer.html":{}}}],["getmainmoduletopology",{"_index":3132,"title":{},"body":{"classes/PerseDataForModuleVisualizer.html":{}}}],["getmainmoduletopology(moduleinfo",{"_index":3145,"title":{},"body":{"classes/PerseDataForModuleVisualizer.html":{}}}],["getmodal",{"_index":2492,"title":{},"body":{"injectables/ModalService.html":{}}}],["getmoduleattachment",{"_index":654,"title":{},"body":{"injectables/AttachmentsService.html":{}}}],["getmoduleattachment(module_id",{"_index":660,"title":{},"body":{"injectables/AttachmentsService.html":{}}}],["getmodulebyid",{"_index":2644,"title":{},"body":{"injectables/ModuleService.html":{},"classes/PerseDataForModuleVisualizer.html":{}}}],["getmodulebyid(id",{"_index":2652,"title":{},"body":{"injectables/ModuleService.html":{}}}],["getmoduleconnection",{"_index":2870,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["getmoduleconnection(theater",{"_index":2892,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["getmoduledict",{"_index":2871,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["getmoduledict(modules",{"_index":2894,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["getmoduleexport",{"_index":1641,"title":{},"body":{"classes/ExportModule.html":{}}}],["getmodulehostbytheateruuid",{"_index":2645,"title":{},"body":{"injectables/ModuleService.html":{}}}],["getmodulehostbytheateruuid(theater_uuid",{"_index":2654,"title":{},"body":{"injectables/ModuleService.html":{}}}],["getmoduleinstanceexport",{"_index":1868,"title":{},"body":{"classes/ExportTheater.html":{}}}],["getmoduleinstanceexport(module",{"_index":1874,"title":{},"body":{"classes/ExportTheater.html":{}}}],["getmoduleinterfacesbymoduleid",{"_index":2646,"title":{},"body":{"injectables/ModuleService.html":{}}}],["getmoduleinterfacesbymoduleid(module_id",{"_index":2657,"title":{},"body":{"injectables/ModuleService.html":{}}}],["getmodulesdetails",{"_index":2872,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["getmodulesdetails(modules",{"_index":2898,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["getmodulesinterfaces",{"_index":2873,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["getmodulesinterfaces(modules",{"_index":2904,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["getmodulesnodes",{"_index":2874,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["getmodulesnodes(modules",{"_index":2907,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["getmodulestopology",{"_index":2875,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["getmodulestopology(modulesinfo",{"_index":2909,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["getnetworkexport",{"_index":1642,"title":{},"body":{"classes/ExportModule.html":{}}}],["getnetworkexport(network",{"_index":1689,"title":{},"body":{"classes/ExportModule.html":{}}}],["getselection",{"_index":1237,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["getshow",{"_index":2452,"title":{},"body":{"components/ModalComponent.html":{},"components/OffcanvasComponent.html":{}}}],["getspinner",{"_index":3438,"title":{},"body":{"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{}}}],["getsubnetexport",{"_index":1643,"title":{},"body":{"classes/ExportModule.html":{}}}],["getsubnetexport(subnet",{"_index":1692,"title":{},"body":{"classes/ExportModule.html":{}}}],["gettext",{"_index":1238,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["gettheaterattachment",{"_index":655,"title":{},"body":{"injectables/AttachmentsService.html":{}}}],["gettheaterattachment(theater_id",{"_index":665,"title":{},"body":{"injectables/AttachmentsService.html":{}}}],["gettheaterexport",{"_index":1869,"title":{},"body":{"classes/ExportTheater.html":{}}}],["gettheaterinfobyid",{"_index":3646,"title":{},"body":{"injectables/TheaterService.html":{}}}],["gettheaterinfobyid(theater_id",{"_index":3649,"title":{},"body":{"injectables/TheaterService.html":{}}}],["gettheatermodulesbyuuid",{"_index":3647,"title":{},"body":{"injectables/TheaterService.html":{}}}],["gettheatermodulesbyuuid(theater_uuid",{"_index":3651,"title":{},"body":{"injectables/TheaterService.html":{}}}],["getting",{"_index":932,"title":{"index.html":{}},"body":{"components/ComposerComponent.html":{}}}],["gettoken",{"_index":3667,"title":{},"body":{"injectables/TokenService.html":{}}}],["getvalue",{"_index":1306,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["gi",{"_index":2915,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["giusta",{"_index":1262,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["gli",{"_index":421,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"classes/BlueprintFileDTO.html":{},"classes/BorderNetworkDTO.html":{},"interfaces/CommonModule.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"components/DataInputComponent.html":{},"classes/DeployInstanceDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/FlavorApplication.html":{},"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/HostModuleDTO.html":{},"classes/HostNode.html":{},"classes/HostPortModuleDTO.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"interfaces/ModuleTopology.html":{},"classes/NameMappingDTO.html":{},"components/NavbarComponent.html":{},"classes/NetOSRouterDTO.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkDTO.html":{},"classes/NetworkNode.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/NodeTopologyElement.html":{},"classes/PageableDTO.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/SortDTO.html":{},"classes/SourceExport.html":{},"classes/StatisticItemDTO.html":{},"classes/SubnetDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/TheaterSimpleData.html":{},"interfaces/TheaterTopology.html":{},"classes/TheatreStatusDTO.html":{},"injectables/TokenService.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/TypesCatalogueDTO.html":{},"components/UnderbarComponent.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{},"miscellaneous/functions.html":{}}}],["global",{"_index":135,"title":{},"body":{"components/AppComponent.html":{}}}],["go",{"_index":942,"title":{},"body":{"components/ComposerComponent.html":{},"components/HomeComponent.html":{},"components/VisualizerComponent.html":{},"index.html":{}}}],["goes",{"_index":601,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["gohome",{"_index":817,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["gradient(rgba(15",{"_index":2154,"title":{},"body":{"components/HomeComponent.html":{}}}],["grafico",{"_index":3931,"title":{},"body":{"modules.html":{}}}],["groove",{"_index":2754,"title":{},"body":{"components/NetworkComponent.html":{}}}],["group",{"_index":517,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["grow",{"_index":1571,"title":{},"body":{"components/DocsComponent.html":{}}}],["guardare",{"_index":1731,"title":{},"body":{"classes/ExportModule.html":{}}}],["h",{"_index":2995,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["h[key",{"_index":3001,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["ha",{"_index":795,"title":{},"body":{"components/ComposerComponent.html":{},"components/DataInputV2Component.html":{},"components/DocsComponent.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"classes/NetworkNode.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"injectables/TokenService.html":{},"components/VisualizerComponent.html":{},"miscellaneous/functions.html":{}}}],["hanno",{"_index":2065,"title":{},"body":{"components/HomeComponent.html":{}}}],["hard",{"_index":2167,"title":{},"body":{"components/HomeComponent.html":{}}}],["hasfile",{"_index":814,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["hasmultipletag",{"_index":3509,"title":{},"body":{"components/TabnavComponent.html":{}}}],["hasproblem",{"_index":815,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["hasquery",{"_index":2269,"title":{},"body":{"classes/HostModuleDTO.html":{},"classes/HostPortModuleDTO.html":{}}}],["header",{"_index":3685,"title":{},"body":{"injectables/TokenService.html":{}}}],["headers",{"_index":1551,"title":{},"body":{"components/DocsComponent.html":{},"injectables/TokenService.html":{}}}],["height",{"_index":1562,"title":{},"body":{"components/DocsComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["help",{"_index":3925,"title":{},"body":{"index.html":{}}}],["hidden",{"_index":140,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/DataItemComponent.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/VisualizerComponent.html":{}}}],["hide",{"_index":2820,"title":{},"body":{"components/OffcanvasComponent.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{}}}],["hide/show",{"_index":2517,"title":{},"body":{"injectables/ModalService.html":{}}}],["history",{"_index":3293,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"dependencies.html":{}}}],["historyplugin",{"_index":3292,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["hn",{"_index":3034,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["home",{"_index":361,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ComposerComponent.html":{},"components/HomeComponent.html":{},"components/NavbarElementComponent.html":{},"components/VisualizerComponent.html":{}}}],["home'},{'name",{"_index":188,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["home.component.html",{"_index":2030,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.sass",{"_index":2029,"title":{},"body":{"components/HomeComponent.html":{}}}],["homecomponent",{"_index":187,"title":{"components/HomeComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"overview.html":{}}}],["host",{"_index":999,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/EmptyNodeInfo.html":{},"classes/HostModuleDTO.html":{},"classes/HostNode.html":{},"classes/HostPortModuleDTO.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteHostInfo.html":{},"classes/SourceExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"miscellaneous/functions.html":{}}}],["host.component.html",{"_index":2203,"title":{},"body":{"components/HostComponent.html":{}}}],["host.component.sass",{"_index":2202,"title":{},"body":{"components/HostComponent.html":{}}}],["host/hostnode",{"_index":1625,"title":{},"body":{"classes/EmptyNodeInfo.html":{}}}],["host:string",{"_index":642,"title":{},"body":{"classes/AreaExport.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesTSD.html":{},"classes/SourceExport.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{}}}],["host_name",{"_index":3038,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["host_number",{"_index":414,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/ReteConnection.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["hostcomponent",{"_index":189,"title":{"components/HostComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"classes/HostNode.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"classes/ReteHostInfo.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"overview.html":{}}}],["hostdto",{"_index":3856,"title":{},"body":{"miscellaneous/functions.html":{}}}],["hosticon",{"_index":2204,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["hosticon=hosticon",{"_index":2391,"title":{},"body":{"components/MirroringModuleInstanceComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["hostmoduledto",{"_index":400,"title":{"classes/HostModuleDTO.html":{}},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/HostModuleDTO.html":{},"classes/HostPortModuleDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"injectables/ModuleService.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"miscellaneous/functions.html":{}}}],["hostname",{"_index":471,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["hostnode",{"_index":1624,"title":{"classes/HostNode.html":{}},"body":{"classes/EmptyNodeInfo.html":{},"classes/HostNode.html":{},"classes/ReteHostInfo.html":{},"miscellaneous/functions.html":{}}}],["hostos1",{"_index":1441,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["hostos2",{"_index":1443,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["hostos3",{"_index":1445,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["hostportmoduledto",{"_index":2273,"title":{"classes/HostPortModuleDTO.html":{}},"body":{"classes/HostModuleDTO.html":{},"classes/HostPortModuleDTO.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["hosts",{"_index":413,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["hover",{"_index":2245,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["howtousecomponent",{"_index":190,"title":{"components/HowToUseComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"overview.html":{}}}],["html",{"_index":165,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["htmlelement",{"_index":2699,"title":{},"body":{"components/NavbarComponent.html":{}}}],["htmlinputelement",{"_index":1190,"title":{},"body":{"components/DataInputComponent.html":{}}}],["http",{"_index":659,"title":{},"body":{"injectables/AttachmentsService.html":{},"components/DocsComponent.html":{},"injectables/FlavorService.html":{},"injectables/ModuleService.html":{},"injectables/TheaterService.html":{}}}],["http://localhost:4200",{"_index":3901,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":657,"title":{},"body":{"injectables/AttachmentsService.html":{},"components/DocsComponent.html":{},"injectables/FlavorService.html":{},"injectables/ModuleService.html":{},"injectables/TheaterService.html":{}}}],["httpclientmodule",{"_index":294,"title":{},"body":{"modules/AppModule.html":{}}}],["httpgetoption",{"_index":3663,"title":{},"body":{"injectables/TokenService.html":{}}}],["httpheaders",{"_index":1549,"title":{},"body":{"components/DocsComponent.html":{},"injectables/TokenService.html":{}}}],["httpheaders().set('content",{"_index":1552,"title":{},"body":{"components/DocsComponent.html":{}}}],["httpoption",{"_index":3686,"title":{},"body":{"injectables/TokenService.html":{}}}],["httpresponse",{"_index":668,"title":{},"body":{"injectables/AttachmentsService.html":{}}}],["i.length",{"_index":2345,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["i.network.name",{"_index":1804,"title":{},"body":{"classes/ExportModule.html":{}}}],["i.nodename",{"_index":1803,"title":{},"body":{"classes/ExportModule.html":{}}}],["i.type",{"_index":1798,"title":{},"body":{"classes/ExportModule.html":{}}}],["i/o",{"_index":1678,"title":{},"body":{"classes/ExportModule.html":{}}}],["i[key",{"_index":3002,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["icon",{"_index":1404,"title":{},"body":{"components/DataItemComponent.html":{}}}],["icona",{"_index":1403,"title":{},"body":{"components/DataItemComponent.html":{}}}],["iconclass",{"_index":3731,"title":{},"body":{"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{}}}],["icone",{"_index":2824,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["icons",{"_index":3798,"title":{},"body":{"dependencies.html":{}}}],["id",{"_index":49,"title":{},"body":{"classes/Aoption.html":{},"classes/AreaApplication.html":{},"classes/AreaDTO.html":{},"classes/BlueprintFileDTO.html":{},"classes/BorderNetworkDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/DeployInstanceDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"injectables/FlavorService.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"classes/HostModuleDTO.html":{},"classes/HostPortModuleDTO.html":{},"classes/ModalButton.html":{},"classes/ModalItem.html":{},"injectables/ModalService.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"injectables/ModuleService.html":{},"classes/ModuleStatusDTO.html":{},"classes/NameMappingDTO.html":{},"classes/NavbarElement.html":{},"classes/NavbarItem.html":{},"classes/NetOSRouterDTO.html":{},"classes/NetworkDTO.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/SelectOption.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/SingleDataInputReturned.html":{},"classes/StatisticItemDTO.html":{},"classes/SubnetDTO.html":{},"classes/TabnavElement.html":{},"classes/TabnavItem.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheatreStatusDTO.html":{},"classes/TypesCatalogueDTO.html":{},"components/UnderbarComponent.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{},"components/VisualizerComponent.html":{}}}],["idforchanges",{"_index":1242,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["if(!this.name",{"_index":919,"title":{},"body":{"components/ComposerComponent.html":{}}}],["if(!val",{"_index":2530,"title":{},"body":{"injectables/ModalService.html":{}}}],["if(val.id===\"no",{"_index":2533,"title":{},"body":{"injectables/ModalService.html":{}}}],["if(val.id===\"yes",{"_index":2531,"title":{},"body":{"injectables/ModalService.html":{}}}],["iframe",{"_index":1560,"title":{},"body":{"components/DocsComponent.html":{}}}],["iframevisibility",{"_index":1532,"title":{},"body":{"components/DocsComponent.html":{}}}],["il",{"_index":12,"title":{},"body":{"classes/Aoption.html":{},"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"classes/BlueprintFileDTO.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/DeployInstanceDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"classes/FlavorApplication.html":{},"classes/FlavorBasicInfo.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"classes/HostNode.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModalButton.html":{},"classes/ModalItem.html":{},"injectables/ModalService.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"interfaces/ModuleTopology.html":{},"classes/NameMappingDTO.html":{},"components/NavbarComponent.html":{},"classes/NavbarElement.html":{},"classes/NavbarItem.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkNode.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/NodeTopologyElement.html":{},"components/OffcanvasComponent.html":{},"classes/PageableDTO.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/SortDTO.html":{},"classes/SourceExport.html":{},"classes/StatisticItemDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"components/TabnavComponent.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/TheaterSimpleData.html":{},"interfaces/TheaterTopology.html":{},"classes/TheatreStatusDTO.html":{},"injectables/TokenService.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/TypesCatalogueDTO.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{},"miscellaneous/functions.html":{},"modules.html":{}}}],["image",{"_index":2152,"title":{},"body":{"components/HomeComponent.html":{}}}],["images/bg",{"_index":2159,"title":{},"body":{"components/HomeComponent.html":{}}}],["images/node",{"_index":2169,"title":{},"body":{"components/HomeComponent.html":{}}}],["img",{"_index":2160,"title":{},"body":{"components/HomeComponent.html":{}}}],["immediatamente",{"_index":1879,"title":{},"body":{"classes/ExportTheater.html":{}}}],["imp",{"_index":944,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["implementa",{"_index":807,"title":{},"body":{"components/ComposerComponent.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DocsComponent.html":{},"classes/HostNode.html":{},"components/HowToUseComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"components/NavbarComponent.html":{},"classes/NetworkNode.html":{},"classes/NodeTopologyElement.html":{},"classes/SimpleModuleApplication.html":{},"classes/SubnetNode.html":{},"components/TabnavComponent.html":{},"classes/TheaterApplication.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{}}}],["implementazioni",{"_index":447,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["implements",{"_index":343,"title":{},"body":{"modules/AppModule.html":{},"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DocsComponent.html":{},"classes/FlavorApplication.html":{},"classes/HostNode.html":{},"components/HowToUseComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"components/NavbarComponent.html":{},"classes/NetworkNode.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SimpleModuleApplication.html":{},"classes/SubnetNode.html":{},"components/TabnavComponent.html":{},"classes/TheaterApplication.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{}}}],["import",{"_index":24,"title":{},"body":{"classes/Aoption.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"injectables/AttachmentsService.html":{},"injectables/AuthGuard.html":{},"classes/BlueprintFileDTO.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/DeployInstanceDTO.html":{},"components/DocsComponent.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"classes/FlavorApplication.html":{},"injectables/FlavorService.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"classes/HostModuleDTO.html":{},"classes/HostNode.html":{},"classes/HostPortModuleDTO.html":{},"components/HowToUseComponent.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModalButton.html":{},"components/ModalComponent.html":{},"classes/ModalItem.html":{},"injectables/ModalService.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"injectables/ModuleService.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"interfaces/ModuleTopology.html":{},"classes/NameMappingDTO.html":{},"components/NavbarComponent.html":{},"classes/NavbarElement.html":{},"components/NavbarElementComponent.html":{},"classes/NavbarItem.html":{},"components/NetworkComponent.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkNode.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/NodeTopologyElement.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/SourceExport.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"classes/StatisticItemDTO.html":{},"injectables/StorageService.html":{},"components/SubnetComponent.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"components/TabnavComponent.html":{},"classes/TabnavElement.html":{},"classes/TabnavItem.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"injectables/TheaterService.html":{},"classes/TheaterSimpleData.html":{},"interfaces/TheaterTopology.html":{},"classes/TheatreStatusDTO.html":{},"injectables/TokenService.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/TypesCatalogueDTO.html":{},"components/UnderbarComponent.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["importa",{"_index":240,"title":{},"body":{"modules/AppModule.html":{}}}],["important",{"_index":163,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/OffcanvasComponent.html":{},"components/TabnavComponent.html":{},"components/VisualizerComponent.html":{}}}],["importato",{"_index":862,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["importing",{"_index":1923,"title":{},"body":{"injectables/FileService.html":{}}}],["imports",{"_index":342,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaExport.html":{},"classes/BlueprintFileDTO.html":{},"interfaces/CommonModule.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/DeployInstanceDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/FlavorApplication.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleApplication.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleSimpleData.html":{},"interfaces/ModuleTopology.html":{},"classes/NameMappingDTO.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/NodeTopologyElement.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/SourceExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagsExport.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{},"interfaces/TheaterTopology.html":{},"classes/TheatreStatusDTO.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["incoerenza",{"_index":2969,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["index",{"_index":1737,"title":{"index.html":{}},"body":{"classes/ExportModule.html":{},"components/HostComponent.html":{},"classes/HostNode.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"components/NetworkComponent.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"components/SubnetComponent.html":{},"classes/SubnetNode.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["index:string]:deployinstancedto",{"_index":770,"title":{},"body":{"classes/BlueprintFileDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/NameMappingDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TheaterDTO.html":{},"classes/TheatreStatusDTO.html":{}}}],["index_selected",{"_index":1336,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["indexc",{"_index":1795,"title":{},"body":{"classes/ExportModule.html":{}}}],["indexmodulecomponent",{"_index":1605,"title":{},"body":{"classes/EmptyModuleInfo.html":{}}}],["indexnodecomponent",{"_index":1630,"title":{},"body":{"classes/EmptyNodeInfo.html":{}}}],["indexp",{"_index":1796,"title":{},"body":{"classes/ExportModule.html":{}}}],["indica",{"_index":514,"title":{},"body":{"classes/AreaDTO.html":{},"classes/BlueprintFileDTO.html":{},"classes/BorderNetworkDTO.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"components/ControlTemplate.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/DeployInstanceDTO.html":{},"components/DocsComponent.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"injectables/ExportService.html":{},"injectables/FileService.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModalButton.html":{},"classes/ModalItem.html":{},"injectables/ModalService.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"classes/NameMappingDTO.html":{},"classes/NetOSRouterDTO.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkDTO.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"components/OffcanvasComponent.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/SubnetDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"components/TabnavComponent.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterDTO.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheatreStatusDTO.html":{},"classes/TypesCatalogueDTO.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{}}}],["indicano",{"_index":485,"title":{},"body":{"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"classes/BlueprintFileDTO.html":{},"classes/BorderNetworkDTO.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/DeployInstanceDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/HostModuleDTO.html":{},"classes/HostPortModuleDTO.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"classes/NameMappingDTO.html":{},"classes/NetOSRouterDTO.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkDTO.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PageableDTO.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/SortDTO.html":{},"classes/SourceExport.html":{},"classes/StatisticItemDTO.html":{},"classes/SubnetDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterDTO.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheaterSimpleData.html":{},"classes/TheatreStatusDTO.html":{},"classes/TypesCatalogueDTO.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{}}}],["indicare",{"_index":1433,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["indicato",{"_index":2333,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"miscellaneous/functions.html":{}}}],["indicatrici",{"_index":1482,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["indicazione",{"_index":1498,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["indice",{"_index":14,"title":{},"body":{"classes/Aoption.html":{},"components/AppComponent.html":{},"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"injectables/AttachmentsService.html":{},"injectables/AuthGuard.html":{},"classes/BlueprintFileDTO.html":{},"classes/BorderNetworkDTO.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"components/ControlTemplate.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputReturnedV2.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/DeployInstanceDTO.html":{},"components/DocsComponent.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"classes/FlavorApplication.html":{},"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"injectables/FlavorService.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"classes/HostModuleDTO.html":{},"classes/HostNode.html":{},"classes/HostPortModuleDTO.html":{},"components/HowToUseComponent.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModalButton.html":{},"components/ModalComponent.html":{},"classes/ModalItem.html":{},"injectables/ModalService.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"injectables/ModuleService.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"interfaces/ModuleTopology.html":{},"classes/NameMappingDTO.html":{},"components/NavbarComponent.html":{},"classes/NavbarElement.html":{},"classes/NavbarItem.html":{},"classes/NetOSRouterDTO.html":{},"components/NetworkComponent.html":{},"classes/NetworkDTO.html":{},"classes/NetworkNode.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/NodeTopologyElement.html":{},"components/OffcanvasComponent.html":{},"classes/PageableDTO.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SelectOption.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/SingleDataInputReturned.html":{},"classes/SortDTO.html":{},"classes/SourceExport.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"classes/StatisticItemDTO.html":{},"injectables/StorageService.html":{},"components/SubnetComponent.html":{},"classes/SubnetDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"components/TabnavComponent.html":{},"classes/TabnavElement.html":{},"classes/TabnavItem.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"injectables/TheaterService.html":{},"classes/TheaterSimpleData.html":{},"interfaces/TheaterTopology.html":{},"classes/TheatreStatusDTO.html":{},"injectables/TokenService.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/TypesCatalogueDTO.html":{},"components/UnderbarComponent.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{},"miscellaneous/functions.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["indipendentemente",{"_index":120,"title":{},"body":{"components/AppComponent.html":{}}}],["indiretto",{"_index":1287,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/Aoption.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"injectables/AttachmentsService.html":{},"injectables/AuthGuard.html":{},"classes/BlueprintFileDTO.html":{},"classes/BorderNetworkDTO.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"components/ControlTemplate.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputReturnedV2.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/DeployInstanceDTO.html":{},"components/DocsComponent.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"classes/FlavorApplication.html":{},"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"injectables/FlavorService.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"classes/HostModuleDTO.html":{},"classes/HostNode.html":{},"classes/HostPortModuleDTO.html":{},"components/HowToUseComponent.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModalButton.html":{},"components/ModalComponent.html":{},"classes/ModalItem.html":{},"injectables/ModalService.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"injectables/ModuleService.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"interfaces/ModuleTopology.html":{},"classes/NameMappingDTO.html":{},"components/NavbarComponent.html":{},"classes/NavbarElement.html":{},"components/NavbarElementComponent.html":{},"classes/NavbarItem.html":{},"classes/NetOSRouterDTO.html":{},"components/NetworkComponent.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkDTO.html":{},"classes/NetworkNode.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/NodeTopologyElement.html":{},"components/OffcanvasComponent.html":{},"classes/PageableDTO.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SelectOption.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/SingleDataInputReturned.html":{},"classes/SortDTO.html":{},"classes/SourceExport.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"classes/StatisticItemDTO.html":{},"injectables/StorageService.html":{},"components/SubnetComponent.html":{},"classes/SubnetDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"components/TabnavComponent.html":{},"classes/TabnavElement.html":{},"classes/TabnavItem.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"injectables/TheaterService.html":{},"classes/TheaterSimpleData.html":{},"interfaces/TheaterTopology.html":{},"classes/TheatreStatusDTO.html":{},"injectables/TokenService.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/TypesCatalogueDTO.html":{},"components/UnderbarComponent.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["informazione",{"_index":2903,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["informazioni",{"_index":621,"title":{},"body":{"classes/AreaExport.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/SourceExport.html":{},"injectables/StorageService.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["informmazioni",{"_index":2081,"title":{},"body":{"components/HomeComponent.html":{}}}],["infra",{"_index":2733,"title":{},"body":{"components/NavbarElementComponent.html":{}}}],["infracreate",{"_index":124,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["infrastructure_parameters",{"_index":537,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["infrastructured",{"_index":2141,"title":{},"body":{"components/HomeComponent.html":{}}}],["ingrandisci",{"_index":233,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["ingresso",{"_index":641,"title":{},"body":{"classes/AreaExport.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/ExportTheater.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesTSD.html":{},"classes/SourceExport.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{}}}],["init",{"_index":347,"title":{},"body":{"modules/AppModule.html":{}}}],["initemptymoduleinstance",{"_index":3168,"title":{},"body":{"classes/PerseDataForTheaterComposer.html":{}}}],["initemptymoduleinstance(modules",{"_index":3180,"title":{},"body":{"classes/PerseDataForTheaterComposer.html":{}}}],["initializekeycloak",{"_index":292,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["initializekeycloak(keycloak",{"_index":3872,"title":{},"body":{"miscellaneous/functions.html":{}}}],["initmodule",{"_index":818,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["inittheater",{"_index":819,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["inittheaterafterfetch",{"_index":2876,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["inittheaterafterfetch(rowtheater",{"_index":2921,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["inizia",{"_index":1658,"title":{},"body":{"classes/ExportModule.html":{},"classes/ExportTheater.html":{}}}],["iniziale",{"_index":2312,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"miscellaneous/functions.html":{}}}],["inizializza",{"_index":2914,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["inizializzare",{"_index":3147,"title":{},"body":{"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["inizializzata",{"_index":1168,"title":{},"body":{"components/DataInputComponent.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{}}}],["inizializzato",{"_index":909,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["inizializzazione",{"_index":836,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["inizializzazioni",{"_index":1170,"title":{},"body":{"components/DataInputComponent.html":{}}}],["injectable",{"_index":649,"title":{"injectables/AttachmentsService.html":{},"injectables/AuthGuard.html":{},"injectables/ExportService.html":{},"injectables/FileService.html":{},"injectables/FlavorService.html":{},"injectables/ModalService.html":{},"injectables/ModuleService.html":{},"injectables/ParseService.html":{},"injectables/SpinnerService.html":{},"injectables/StorageService.html":{},"injectables/TheaterService.html":{},"injectables/TokenService.html":{}},"body":{"injectables/AttachmentsService.html":{},"injectables/AuthGuard.html":{},"injectables/ExportService.html":{},"injectables/FileService.html":{},"injectables/FlavorService.html":{},"injectables/ModalService.html":{},"injectables/ModuleService.html":{},"injectables/ParseService.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"injectables/StorageService.html":{},"injectables/TheaterService.html":{},"injectables/TokenService.html":{}}}],["injectables",{"_index":651,"title":{},"body":{"injectables/AttachmentsService.html":{},"injectables/AuthGuard.html":{},"injectables/ExportService.html":{},"injectables/FileService.html":{},"injectables/FlavorService.html":{},"injectables/ModalService.html":{},"injectables/ModuleService.html":{},"injectables/ParseService.html":{},"injectables/SpinnerService.html":{},"injectables/StorageService.html":{},"injectables/TheaterService.html":{},"injectables/TokenService.html":{},"overview.html":{}}}],["inline",{"_index":2260,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["input",{"_index":180,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AreaDTO.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"components/ControlTemplate.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputReturnedV2.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/ExportTheater.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"classes/HostNode.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"components/ModalComponent.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"classes/NetworkNode.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SelectOption.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/SingleDataInputReturned.html":{},"classes/StatisticItemDTO.html":{},"components/SubnetComponent.html":{},"classes/SubnetNode.html":{},"components/TabnavComponent.html":{},"classes/TabnavElement.html":{},"classes/TabnavItem.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/TypesCatalogueDTO.html":{},"components/UnderbarComponent.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["input'},{'name",{"_index":178,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["input.component",{"_index":313,"title":{},"body":{"modules/AppModule.html":{}}}],["input.component.html",{"_index":1149,"title":{},"body":{"components/DataInputComponent.html":{}}}],["input.component.sass",{"_index":1148,"title":{},"body":{"components/DataInputComponent.html":{}}}],["input.component.ts",{"_index":1133,"title":{},"body":{"components/DataInputComponent.html":{}}}],["input.component.ts:21",{"_index":1157,"title":{},"body":{"components/DataInputComponent.html":{}}}],["input.component.ts:27",{"_index":1160,"title":{},"body":{"components/DataInputComponent.html":{}}}],["input.component.ts:33",{"_index":1156,"title":{},"body":{"components/DataInputComponent.html":{}}}],["input.component.ts:48",{"_index":1166,"title":{},"body":{"components/DataInputComponent.html":{}}}],["input.component.ts:62",{"_index":1177,"title":{},"body":{"components/DataInputComponent.html":{}}}],["input.component.ts:85",{"_index":1162,"title":{},"body":{"components/DataInputComponent.html":{}}}],["input.component.ts:99",{"_index":1174,"title":{},"body":{"components/DataInputComponent.html":{}}}],["input.name",{"_index":2238,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["input.value",{"_index":2135,"title":{},"body":{"components/HomeComponent.html":{}}}],["input/data",{"_index":312,"title":{},"body":{"modules/AppModule.html":{},"components/DataInputComponent.html":{}}}],["input/datainputtype",{"_index":1308,"title":{},"body":{"components/DataInputV2Component.html":{},"components/HomeComponent.html":{}}}],["input/datainputtype.ts",{"_index":1086,"title":{},"body":{"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{}}}],["input/datainputtype.ts:14",{"_index":1093,"title":{},"body":{"classes/DataInput.html":{}}}],["input/datainputtype.ts:15",{"_index":1095,"title":{},"body":{"classes/DataInput.html":{}}}],["input/datainputtype.ts:16",{"_index":1099,"title":{},"body":{"classes/DataInput.html":{}}}],["input/datainputtype.ts:17",{"_index":1092,"title":{},"body":{"classes/DataInput.html":{}}}],["input/datainputtype.ts:18",{"_index":1091,"title":{},"body":{"classes/DataInput.html":{}}}],["input/datainputtype.ts:19",{"_index":1094,"title":{},"body":{"classes/DataInput.html":{}}}],["input/datainputtype.ts:27",{"_index":1223,"title":{},"body":{"classes/DataInputText.html":{}}}],["input/datainputtype.ts:35",{"_index":1220,"title":{},"body":{"classes/DataInputSelection.html":{}}}],["input/datainputtype.ts:36",{"_index":1221,"title":{},"body":{"classes/DataInputSelection.html":{}}}],["input/datainputtype.ts:37",{"_index":1222,"title":{},"body":{"classes/DataInputSelection.html":{}}}],["input/datainputtype.ts:45",{"_index":1126,"title":{},"body":{"classes/DataInputCheck.html":{}}}],["input/datainputtype.ts:53",{"_index":3386,"title":{},"body":{"classes/SelectOption.html":{}}}],["input/datainputtype.ts:54",{"_index":3385,"title":{},"body":{"classes/SelectOption.html":{}}}],["input/datainputtype.ts:55",{"_index":3384,"title":{},"body":{"classes/SelectOption.html":{}}}],["input/datainputtype.ts:6",{"_index":1207,"title":{},"body":{"classes/DataInputElement.html":{}}}],["input/datainputtype.ts:63",{"_index":1208,"title":{},"body":{"classes/DataInputReturned.html":{}}}],["input/datainputtype.ts:64",{"_index":1210,"title":{},"body":{"classes/DataInputReturned.html":{}}}],["input/datainputtype.ts:65",{"_index":1209,"title":{},"body":{"classes/DataInputReturned.html":{}}}],["input/datainputtype.ts:72",{"_index":3410,"title":{},"body":{"classes/SingleDataInputReturned.html":{}}}],["input/datainputtype.ts:73",{"_index":3411,"title":{},"body":{"classes/SingleDataInputReturned.html":{}}}],["input/datainputtype.ts:74",{"_index":3412,"title":{},"body":{"classes/SingleDataInputReturned.html":{}}}],["input/datainputtype.ts:75",{"_index":3413,"title":{},"body":{"classes/SingleDataInputReturned.html":{}}}],["input/output",{"_index":2314,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["inputdata",{"_index":1696,"title":{},"body":{"classes/ExportModule.html":{},"classes/ExportTheater.html":{}}}],["inputs",{"_index":2316,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["inserimento",{"_index":1654,"title":{},"body":{"classes/ExportModule.html":{}}}],["inserire",{"_index":2911,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["inserisco",{"_index":1793,"title":{},"body":{"classes/ExportModule.html":{}}}],["inseriti",{"_index":2916,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["inserito",{"_index":2930,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["inserted",{"_index":548,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["installare",{"_index":3895,"title":{},"body":{"index.html":{}}}],["instance",{"_index":2958,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["instance_parameters",{"_index":533,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["instanceof",{"_index":732,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["instanzia",{"_index":3178,"title":{},"body":{"classes/PerseDataForTheaterComposer.html":{}}}],["instanziamento",{"_index":2313,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["instanziare",{"_index":2291,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"miscellaneous/functions.html":{}}}],["intefracce",{"_index":3142,"title":{},"body":{"classes/PerseDataForModuleVisualizer.html":{}}}],["interfacce",{"_index":576,"title":{},"body":{"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"interfaces/CommonModule.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/ExportModule.html":{},"classes/GenericParameterDTO.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"interfaces/ModuleTopology.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/SourceExport.html":{},"classes/StatisticItemDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheaterSimpleData.html":{},"interfaces/TheaterTopology.html":{},"interfaces/TopologyList.html":{},"classes/TypesCatalogueDTO.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"overview.html":{}}}],["interfaccia",{"_index":582,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["interface",{"_index":411,"title":{"interfaces/CommonModule.html":{},"interfaces/ModuleTopology.html":{},"interfaces/TheaterTopology.html":{},"interfaces/TopologyList.html":{}},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/ConstraintsMSD.html":{},"classes/ExportModule.html":{},"classes/FlavorApplication.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleApplication.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstance.html":{},"classes/ModuleSimpleData.html":{},"interfaces/ModuleTopology.html":{},"components/NetworkComponent.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/NodeTopologyElement.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["interface_constraints",{"_index":960,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/ExportModule.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["interface_networks",{"_index":986,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/ExportModule.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["interfaceconstraints",{"_index":963,"title":{"classes/InterfaceConstraints.html":{}},"body":{"classes/ConstraintsMSD.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["interfacenetworksconsumer",{"_index":989,"title":{"classes/InterfaceNetworksConsumer.html":{}},"body":{"classes/ConstraintsMSD.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["interfacenetworksprovider",{"_index":987,"title":{"classes/InterfaceNetworksProvider.html":{}},"body":{"classes/ConstraintsMSD.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["interfaceporttype",{"_index":1434,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/ExportModule.html":{},"classes/NetworkNode.html":{},"classes/ReteNetworkInfo.html":{}}}],["interfaceporttype.consumer",{"_index":1799,"title":{},"body":{"classes/ExportModule.html":{}}}],["interfaceporttype.producer",{"_index":1800,"title":{},"body":{"classes/ExportModule.html":{}}}],["interfaces",{"_index":412,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaExport.html":{},"interfaces/CommonModule.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/ExportModule.html":{},"classes/FlavorApplication.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleApplication.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleSimpleData.html":{},"interfaces/ModuleTopology.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/SourceExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/TagsExport.html":{},"classes/TheaterApplication.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["internal",{"_index":1472,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["internal_theatre_service",{"_index":1502,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["intramodulo",{"_index":645,"title":{},"body":{"classes/AreaExport.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesTSD.html":{},"classes/SourceExport.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{}}}],["invalid.\\n",{"_index":3015,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["inversa",{"_index":1494,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["ip_version",{"_index":1020,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/ExportModule.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["ipversiontype",{"_index":1449,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["ir",{"_index":3276,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["isaccessallowed",{"_index":702,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["isaccessallowed(route",{"_index":704,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["isdhcp",{"_index":792,"title":{},"body":{"classes/BorderNetworkDTO.html":{},"classes/NetOSRouterDTO.html":{},"classes/NetworkDTO.html":{},"classes/ReteSubnetInfo.html":{},"classes/SubnetDTO.html":{},"classes/SubnetNode.html":{}}}],["isenabled",{"_index":1991,"title":{},"body":{"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{}}}],["isfilevalid",{"_index":1928,"title":{},"body":{"injectables/FileService.html":{}}}],["isfilevalid(file",{"_index":1937,"title":{},"body":{"injectables/FileService.html":{}}}],["isfull",{"_index":1375,"title":{},"body":{"components/DataItemComponent.html":{},"components/OffcanvasComponent.html":{}}}],["islocked",{"_index":553,"title":{},"body":{"classes/AreaDTO.html":{},"classes/BlueprintFileDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/NameMappingDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheatreStatusDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["ismodalactive",{"_index":2039,"title":{},"body":{"components/HomeComponent.html":{}}}],["istanze",{"_index":2927,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["istanziate",{"_index":894,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["isupdatetime",{"_index":1235,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["isvalid",{"_index":1121,"title":{},"body":{"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{}}}],["italic",{"_index":1351,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["item",{"_index":1367,"title":{},"body":{"components/DataItemComponent.html":{}}}],["item'},{'name",{"_index":184,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["item.component",{"_index":325,"title":{},"body":{"modules/AppModule.html":{}}}],["item.component.html",{"_index":1369,"title":{},"body":{"components/DataItemComponent.html":{}}}],["item.component.sass",{"_index":1368,"title":{},"body":{"components/DataItemComponent.html":{}}}],["item.component.ts",{"_index":1352,"title":{},"body":{"components/DataItemComponent.html":{}}}],["item.component.ts:21",{"_index":1385,"title":{},"body":{"components/DataItemComponent.html":{}}}],["item.component.ts:26",{"_index":1378,"title":{},"body":{"components/DataItemComponent.html":{}}}],["item.component.ts:31",{"_index":1381,"title":{},"body":{"components/DataItemComponent.html":{}}}],["item.component.ts:37",{"_index":1386,"title":{},"body":{"components/DataItemComponent.html":{}}}],["item.component.ts:40",{"_index":1402,"title":{},"body":{"components/DataItemComponent.html":{}}}],["item.component.ts:41",{"_index":1398,"title":{},"body":{"components/DataItemComponent.html":{}}}],["item.component.ts:42",{"_index":1377,"title":{},"body":{"components/DataItemComponent.html":{}}}],["item.component.ts:54",{"_index":1390,"title":{},"body":{"components/DataItemComponent.html":{}}}],["item.component.ts:63",{"_index":1392,"title":{},"body":{"components/DataItemComponent.html":{}}}],["item.data_appended",{"_index":1206,"title":{},"body":{"components/DataInputComponent.html":{}}}],["item.data_prepended",{"_index":1201,"title":{},"body":{"components/DataInputComponent.html":{}}}],["item.text",{"_index":1200,"title":{},"body":{"components/DataInputComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/TabnavComponent.html":{}}}],["item/data",{"_index":324,"title":{},"body":{"modules/AppModule.html":{},"components/DataItemComponent.html":{}}}],["itemclicked",{"_index":3706,"title":{},"body":{"components/UnderbarComponent.html":{}}}],["itemclicked(event",{"_index":3714,"title":{},"body":{"components/UnderbarComponent.html":{}}}],["items",{"_index":3306,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["itemselected",{"_index":2682,"title":{},"body":{"components/NavbarComponent.html":{},"components/UnderbarComponent.html":{}}}],["itemselected:eventemitter",{"_index":3718,"title":{},"body":{"components/UnderbarComponent.html":{}}}],["itera",{"_index":1665,"title":{},"body":{"classes/ExportModule.html":{},"classes/ExportTheater.html":{}}}],["jquery",{"_index":3800,"title":{},"body":{"dependencies.html":{}}}],["js",{"_index":3804,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":440,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"injectables/AttachmentsService.html":{},"interfaces/CommonModule.html":{},"injectables/ExportService.html":{},"injectables/FileService.html":{},"classes/FlavorApplication.html":{},"components/HomeComponent.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"dependencies.html":{},"miscellaneous/functions.html":{}}}],["json.parse(filereader.result",{"_index":1960,"title":{},"body":{"injectables/FileService.html":{}}}],["justify",{"_index":2149,"title":{},"body":{"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["karma",{"_index":3921,"title":{},"body":{"index.html":{}}}],["key",{"_index":1054,"title":{},"body":{"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"classes/DataInputReturnedV2.html":{},"components/DataInputV2Component.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/_Control.html":{}}}],["key.tolowercase().includes(moduleinstance.properties.module.tolowercase",{"_index":3010,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["key:string",{"_index":1119,"title":{},"body":{"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{}}}],["keyboard",{"_index":3303,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["keycloak",{"_index":291,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthGuard.html":{},"dependencies.html":{},"miscellaneous/functions.html":{}}}],["keycloakangularmodule",{"_index":289,"title":{},"body":{"modules/AppModule.html":{}}}],["keycloakauthguard",{"_index":701,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["keycloakservice",{"_index":290,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthGuard.html":{},"miscellaneous/functions.html":{}}}],["keyframes",{"_index":2727,"title":{},"body":{"components/NavbarElementComponent.html":{}}}],["l'ambiente",{"_index":801,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["l'appcomponent",{"_index":2476,"title":{},"body":{"injectables/ModalService.html":{}}}],["l'application",{"_index":1847,"title":{},"body":{"injectables/ExportService.html":{},"injectables/FileService.html":{}}}],["l'applicazione",{"_index":2923,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["l'area",{"_index":486,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["l'array",{"_index":763,"title":{},"body":{"classes/BlueprintFileDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/NameMappingDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TheaterDTO.html":{},"classes/TheatreStatusDTO.html":{}}}],["l'autore",{"_index":2071,"title":{},"body":{"components/HomeComponent.html":{}}}],["l'editor",{"_index":3275,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["l'effettivo",{"_index":1280,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["l'elaborazione",{"_index":2422,"title":{},"body":{"classes/ModalButton.html":{},"classes/ModalItem.html":{}}}],["l'elemento",{"_index":918,"title":{},"body":{"components/ComposerComponent.html":{},"components/HomeComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["l'environment",{"_index":1988,"title":{},"body":{"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{}}}],["l'estensione",{"_index":1843,"title":{},"body":{"injectables/ExportService.html":{},"injectables/FileService.html":{}}}],["l'evento",{"_index":1388,"title":{},"body":{"components/DataItemComponent.html":{},"injectables/FileService.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/UnderbarComponent.html":{}}}],["l'export",{"_index":620,"title":{},"body":{"classes/AreaExport.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"injectables/ExportService.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/SourceExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["l'header",{"_index":3673,"title":{},"body":{"injectables/TokenService.html":{}}}],["l'hide",{"_index":2451,"title":{},"body":{"components/ModalComponent.html":{}}}],["l'html",{"_index":1541,"title":{},"body":{"components/DocsComponent.html":{}}}],["l'http",{"_index":3676,"title":{},"body":{"injectables/TokenService.html":{}}}],["l'id",{"_index":2092,"title":{},"body":{"components/HomeComponent.html":{},"components/TabnavComponent.html":{}}}],["l'indicazione",{"_index":1457,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["l'indice",{"_index":1601,"title":{},"body":{"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{}}}],["l'insieme",{"_index":500,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["l'instanziazione",{"_index":3185,"title":{},"body":{"classes/PerseDataForTheaterComposer.html":{}}}],["l'isieme",{"_index":2083,"title":{},"body":{"components/HomeComponent.html":{}}}],["l'observable",{"_index":3437,"title":{},"body":{"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{}}}],["l'occorrenza",{"_index":3058,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["l'operazione",{"_index":1164,"title":{},"body":{"components/DataInputComponent.html":{}}}],["l'opzione",{"_index":3095,"title":{},"body":{"injectables/ParseService.html":{}}}],["l'underbar",{"_index":3729,"title":{},"body":{"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{}}}],["l'unsibscribe",{"_index":2491,"title":{},"body":{"injectables/ModalService.html":{}}}],["l'update",{"_index":2440,"title":{},"body":{"components/ModalComponent.html":{},"components/OffcanvasComponent.html":{}}}],["la",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"classes/AreaDTO.html":{},"classes/BorderNetworkDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"components/DocsComponent.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/ExportModule.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"classes/HostNode.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/MirroringModuleInstanceNode.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"components/NavbarComponent.html":{},"classes/NetOSRouterDTO.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkDTO.html":{},"classes/NetworkNode.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/SubnetDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"components/TabnavComponent.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"injectables/TokenService.html":{},"classes/TypesCatalogueDTO.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{},"miscellaneous/functions.html":{}}}],["label",{"_index":578,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["landing",{"_index":2025,"title":{},"body":{"components/HomeComponent.html":{},"components/NavbarElementComponent.html":{}}}],["large",{"_index":2190,"title":{},"body":{"components/HomeComponent.html":{}}}],["last",{"_index":506,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["lastmodifiedby",{"_index":554,"title":{},"body":{"classes/AreaDTO.html":{},"classes/BlueprintFileDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/NameMappingDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheatreStatusDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["lastmodifieddate",{"_index":555,"title":{},"body":{"classes/AreaDTO.html":{},"classes/BlueprintFileDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/NameMappingDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheatreStatusDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["le",{"_index":9,"title":{},"body":{"classes/Aoption.html":{},"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"classes/BorderNetworkDTO.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"classes/FlavorApplication.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"classes/HostModuleDTO.html":{},"classes/HostPortModuleDTO.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"injectables/ModalService.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"interfaces/ModuleTopology.html":{},"components/NavbarComponent.html":{},"classes/NavbarElement.html":{},"components/NavbarElementComponent.html":{},"classes/NavbarItem.html":{},"classes/NetOSRouterDTO.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkDTO.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteConnection.html":{},"classes/SelectOption.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/SingleDataInputReturned.html":{},"classes/SourceExport.html":{},"classes/StatisticItemDTO.html":{},"injectables/StorageService.html":{},"classes/SubnetDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"components/TabnavComponent.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterApplication.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheaterSimpleData.html":{},"interfaces/TheaterTopology.html":{},"injectables/TokenService.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/TypesCatalogueDTO.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"components/VisualizerComponent.html":{},"miscellaneous/functions.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["left",{"_index":2255,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["legenda",{"_index":164,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["lg",{"_index":1396,"title":{},"body":{"components/DataItemComponent.html":{},"components/OffcanvasComponent.html":{}}}],["li",{"_index":2900,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["libreria",{"_index":1033,"title":{},"body":{"components/ControlTemplate.html":{},"classes/_Control.html":{},"index.html":{}}}],["light",{"_index":2168,"title":{},"body":{"components/HomeComponent.html":{}}}],["lighten($node",{"_index":2246,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["line",{"_index":2263,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["linear",{"_index":2153,"title":{},"body":{"components/HomeComponent.html":{},"components/NavbarElementComponent.html":{}}}],["link",{"_index":676,"title":{},"body":{"injectables/AttachmentsService.html":{},"components/DataInputV2Component.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"injectables/FlavorService.html":{},"injectables/ModuleService.html":{},"injectables/TheaterService.html":{}}}],["link:hover",{"_index":1349,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["linux",{"_index":1442,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["list",{"_index":1204,"title":{},"body":{"components/DataInputComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{}}}],["literal",{"_index":743,"title":{},"body":{"classes/BlueprintFileDTO.html":{},"classes/BorderNetworkDTO.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/DataInputReturned.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"classes/FlavorDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/NetOSRouterDTO.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesSSD.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterExport.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"classes/TypesCatalogueDTO.html":{},"classes/UnderbarItem.html":{},"classes/_Control.html":{},"miscellaneous/functions.html":{}}}],["livelli",{"_index":1355,"title":{},"body":{"components/DataItemComponent.html":{}}}],["lo",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"classes/AreaDTO.html":{},"classes/BlueprintFileDTO.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/DeployInstanceDTO.html":{},"components/DocsComponent.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/NameMappingDTO.html":{},"components/NavbarComponent.html":{},"classes/NetworkNode.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"classes/StatisticItemDTO.html":{},"classes/SubnetNode.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterDTO.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/TheatreStatusDTO.html":{},"classes/TypesCatalogueDTO.html":{},"components/VisualizerComponent.html":{},"miscellaneous/functions.html":{}}}],["loading",{"_index":843,"title":{},"body":{"components/ComposerComponent.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"components/VisualizerComponent.html":{}}}],["local_interface",{"_index":584,"title":{},"body":{"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/ExportTheater.html":{},"classes/GenericParameterDTO.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/SourceExport.html":{},"classes/StatisticItemDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheaterSimpleData.html":{},"classes/TypesCatalogueDTO.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["locale",{"_index":1924,"title":{},"body":{"injectables/FileService.html":{}}}],["lockacquiredtimestamp",{"_index":556,"title":{},"body":{"classes/AreaDTO.html":{},"classes/BlueprintFileDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/NameMappingDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheatreStatusDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["locklastuseracquiring",{"_index":557,"title":{},"body":{"classes/AreaDTO.html":{},"classes/BlueprintFileDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/NameMappingDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheatreStatusDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["lockreleasedtimestamp",{"_index":558,"title":{},"body":{"classes/AreaDTO.html":{},"classes/BlueprintFileDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/NameMappingDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheatreStatusDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["log",{"_index":715,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["logo_img",{"_index":40,"title":{},"body":{"classes/Aoption.html":{},"classes/NavbarElement.html":{},"classes/NavbarItem.html":{}}}],["loro",{"_index":3709,"title":{},"body":{"components/UnderbarComponent.html":{}}}],["ma",{"_index":3197,"title":{},"body":{"classes/PerseDataForTheaterComposer.html":{}}}],["machine",{"_index":1478,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/ExportModule.html":{}}}],["make",{"_index":2131,"title":{},"body":{"components/HomeComponent.html":{}}}],["map",{"_index":602,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["mapping",{"_index":757,"title":{},"body":{"classes/BlueprintFileDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/NameMappingDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TheaterDTO.html":{},"classes/TheatreStatusDTO.html":{}}}],["margin",{"_index":1346,"title":{},"body":{"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["match",{"_index":2980,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["max",{"_index":2845,"title":{},"body":{"components/OffcanvasComponent.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["mb",{"_index":2227,"title":{},"body":{"components/HostComponent.html":{}}}],["mcclass",{"_index":525,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["me.description",{"_index":1706,"title":{},"body":{"classes/ExportModule.html":{}}}],["me.imports",{"_index":1708,"title":{},"body":{"classes/ExportModule.html":{}}}],["me.node_templates",{"_index":1734,"title":{},"body":{"classes/ExportModule.html":{}}}],["me.tosca_definitions_version",{"_index":1704,"title":{},"body":{"classes/ExportModule.html":{}}}],["media",{"_index":2844,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["memorizza",{"_index":861,"title":{},"body":{"components/ComposerComponent.html":{},"injectables/ModalService.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"injectables/StorageService.html":{},"components/VisualizerComponent.html":{}}}],["memorizzare",{"_index":1647,"title":{},"body":{"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"injectables/TokenService.html":{}}}],["memorizzati",{"_index":3461,"title":{},"body":{"injectables/StorageService.html":{}}}],["meno",{"_index":1284,"title":{},"body":{"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"injectables/FileService.html":{},"injectables/ParseService.html":{}}}],["menu",{"_index":3281,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"dependencies.html":{}}}],["messaggio",{"_index":2500,"title":{},"body":{"injectables/ModalService.html":{}}}],["messo",{"_index":2813,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["metadati",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["metodi",{"_index":245,"title":{},"body":{"modules/AppModule.html":{},"injectables/AttachmentsService.html":{},"injectables/AuthGuard.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"injectables/FlavorService.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"classes/HostNode.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"injectables/ModuleService.html":{},"components/NavbarComponent.html":{},"components/NetworkComponent.html":{},"classes/NetworkNode.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"injectables/SpinnerService.html":{},"components/SubnetComponent.html":{},"classes/SubnetNode.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"injectables/TheaterService.html":{},"injectables/TokenService.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{}}}],["mi",{"_index":1892,"title":{},"body":{"classes/ExportTheater.html":{}}}],["mi[module.data.name",{"_index":1907,"title":{},"body":{"classes/ExportTheater.html":{}}}],["mid",{"_index":2785,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["middle",{"_index":2259,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["min",{"_index":2242,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["minimap",{"_index":3285,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"dependencies.html":{},"index.html":{}}}],["minimapplugin",{"_index":3284,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["mirroring",{"_index":1474,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["mirroringmoduleinstance",{"_index":1466,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/EmptyModuleInfo.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{}}}],["mirroringmoduleinstance.component",{"_index":2408,"title":{},"body":{"classes/MirroringModuleInstanceNode.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{}}}],["mirroringmoduleinstance.component.html",{"_index":2373,"title":{},"body":{"components/MirroringModuleInstanceComponent.html":{}}}],["mirroringmoduleinstance.component.sass",{"_index":2372,"title":{},"body":{"components/MirroringModuleInstanceComponent.html":{}}}],["mirroringmoduleinstance/mirroringmoduleinstancenode",{"_index":1595,"title":{},"body":{"classes/EmptyModuleInfo.html":{}}}],["mirroringmoduleinstance_icon",{"_index":2380,"title":{},"body":{"components/MirroringModuleInstanceComponent.html":{}}}],["mirroringmoduleinstancecomponent",{"_index":192,"title":{"components/MirroringModuleInstanceComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"overview.html":{}}}],["mirroringmoduleinstanceicon",{"_index":2374,"title":{},"body":{"components/MirroringModuleInstanceComponent.html":{}}}],["mirroringmoduleinstancenode",{"_index":1594,"title":{"classes/MirroringModuleInstanceNode.html":{}},"body":{"classes/EmptyModuleInfo.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/TheaterModuleInstanceNode.html":{},"miscellaneous/functions.html":{}}}],["miscellaneous",{"_index":3834,"title":{"miscellaneous/functions.html":{}},"body":{}}],["mit",{"_index":3195,"title":{},"body":{"classes/PerseDataForTheaterComposer.html":{}}}],["mock",{"_index":3096,"title":{},"body":{"injectables/ParseService.html":{}}}],["mock/dataset",{"_index":3098,"title":{},"body":{"injectables/ParseService.html":{}}}],["mockato",{"_index":346,"title":{},"body":{"modules/AppModule.html":{}}}],["mocked",{"_index":3077,"title":{},"body":{"injectables/ParseService.html":{}}}],["mocked?=environment.mocked",{"_index":3103,"title":{},"body":{"injectables/ParseService.html":{}}}],["mockedallflavors",{"_index":3084,"title":{},"body":{"injectables/ParseService.html":{}}}],["mockedallmodules",{"_index":3092,"title":{},"body":{"injectables/ParseService.html":{}}}],["mockedmodule",{"_index":3088,"title":{},"body":{"injectables/ParseService.html":{}}}],["mockedmodule(id",{"_index":3109,"title":{},"body":{"injectables/ParseService.html":{}}}],["mockedtheater",{"_index":3094,"title":{},"body":{"injectables/ParseService.html":{}}}],["mockedtheater(id",{"_index":3105,"title":{},"body":{"injectables/ParseService.html":{}}}],["modal",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"classes/ModalButton.html":{},"components/ModalComponent.html":{},"classes/ModalItem.html":{}}}],["modal'},{'name",{"_index":194,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["modal.component.html",{"_index":2428,"title":{},"body":{"components/ModalComponent.html":{}}}],["modal.component.sass",{"_index":2427,"title":{},"body":{"components/ModalComponent.html":{}}}],["modalbutton",{"_index":2411,"title":{"classes/ModalButton.html":{}},"body":{"classes/ModalButton.html":{},"components/ModalComponent.html":{},"classes/ModalItem.html":{},"injectables/ModalService.html":{}}}],["modalcomponent",{"_index":193,"title":{"components/ModalComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/ModalButton.html":{},"components/ModalComponent.html":{},"classes/ModalItem.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"overview.html":{}}}],["modaldata",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"injectables/ModalService.html":{}}}],["modale",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{}}}],["modalit",{"_index":540,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["modalitem",{"_index":100,"title":{"classes/ModalItem.html":{}},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"classes/ModalButton.html":{},"components/ModalComponent.html":{},"classes/ModalItem.html":{},"injectables/ModalService.html":{}}}],["modalitem.text_content",{"_index":2527,"title":{},"body":{"injectables/ModalService.html":{}}}],["modalservice",{"_index":89,"title":{"injectables/ModalService.html":{}},"body":{"components/AppComponent.html":{},"injectables/ModalService.html":{}}}],["modaltype",{"_index":2455,"title":{},"body":{"components/ModalComponent.html":{}}}],["mode",{"_index":573,"title":{},"body":{"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/SourceExport.html":{},"classes/StatisticItemDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheaterSimpleData.html":{},"classes/TypesCatalogueDTO.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["modelsapplication/applicationmodels",{"_index":1700,"title":{},"body":{"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["modelsdto/falvordto",{"_index":399,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"injectables/FlavorService.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["modelsdto/hostdto",{"_index":401,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"injectables/ModuleService.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["modelsdto/moduledto",{"_index":409,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"injectables/ModuleService.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"injectables/TheaterService.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["modelsdto/networkdto",{"_index":2952,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["modelsdto/theaterdto",{"_index":410,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"injectables/TheaterService.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["modelsexport/moduleexport",{"_index":1701,"title":{},"body":{"classes/ExportModule.html":{},"injectables/ExportService.html":{}}}],["modelsexport/theaterexport",{"_index":1853,"title":{},"body":{"injectables/ExportService.html":{},"classes/ExportTheater.html":{}}}],["modelsexport/typeexport",{"_index":1702,"title":{},"body":{"classes/ExportModule.html":{},"classes/ExportTheater.html":{}}}],["modetypeexport",{"_index":615,"title":{},"body":{"classes/AreaExport.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/SourceExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["modetypeexport.managed",{"_index":1791,"title":{},"body":{"classes/ExportModule.html":{},"classes/ExportTheater.html":{}}}],["modifica",{"_index":1229,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["modifiche",{"_index":1260,"title":{},"body":{"components/DataInputV2Component.html":{},"index.html":{}}}],["modo",{"_index":1137,"title":{},"body":{"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"injectables/ModalService.html":{},"components/TabnavComponent.html":{}}}],["module",{"_index":38,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"classes/Aoption.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"classes/FlavorApplication.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"components/ModalComponent.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"interfaces/ModuleTopology.html":{},"components/NavbarComponent.html":{},"classes/NavbarElement.html":{},"components/NavbarElementComponent.html":{},"classes/NavbarItem.html":{},"components/NetworkComponent.html":{},"classes/NodeTopologyElement.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesTSD.html":{},"classes/ReteConnection.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/SourceExport.html":{},"classes/StatisticItemDTO.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterApplication.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/TheaterSimpleData.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/TypesCatalogueDTO.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"miscellaneous/functions.html":{},"classes/reteBasicModuleInfo.html":{}}}],["module.data.area",{"_index":1897,"title":{},"body":{"classes/ExportTheater.html":{}}}],["module.data.module",{"_index":1895,"title":{},"body":{"classes/ExportTheater.html":{}}}],["module.data.sequence",{"_index":1898,"title":{},"body":{"classes/ExportTheater.html":{}}}],["module.data.version",{"_index":1896,"title":{},"body":{"classes/ExportTheater.html":{}}}],["module.inputs",{"_index":1899,"title":{},"body":{"classes/ExportTheater.html":{}}}],["module.inputs[key",{"_index":1901,"title":{},"body":{"classes/ExportTheater.html":{}}}],["module/theater",{"_index":2048,"title":{},"body":{"components/HomeComponent.html":{}}}],["module_constraints",{"_index":961,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/ExportModule.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["module_content",{"_index":3025,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["module_content.properties.consumer_interfaces_link",{"_index":3026,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["module_id",{"_index":663,"title":{},"body":{"injectables/AttachmentsService.html":{},"injectables/ModuleService.html":{}}}],["module_instance",{"_index":585,"title":{},"body":{"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesTSD.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/SourceExport.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheaterSimpleData.html":{},"classes/TypesCatalogueDTO.html":{}}}],["module_instance_name",{"_index":760,"title":{},"body":{"classes/BlueprintFileDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/NameMappingDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TheaterDTO.html":{},"classes/TheatreStatusDTO.html":{}}}],["module_interface",{"_index":1026,"title":{},"body":{"classes/ConsumerInterfaceLinkExport.html":{},"classes/ExportTheater.html":{}}}],["module_interface:string",{"_index":647,"title":{},"body":{"classes/AreaExport.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesTSD.html":{},"classes/SourceExport.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{}}}],["module_name",{"_index":761,"title":{},"body":{"classes/BlueprintFileDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/DeployInstanceDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NameMappingDTO.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/TagCatalogueDTO.html":{},"classes/TheaterDTO.html":{},"classes/TheatreStatusDTO.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["moduleapplication",{"_index":434,"title":{"classes/ModuleApplication.html":{}},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"injectables/FileService.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"components/VisualizerComponent.html":{},"miscellaneous/functions.html":{}}}],["moduleapplication).validateobject",{"_index":1976,"title":{},"body":{"injectables/FileService.html":{}}}],["moduleclassificationdto",{"_index":521,"title":{"classes/ModuleClassificationDTO.html":{}},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["modulecomponents",{"_index":1613,"title":{},"body":{"classes/EmptyModuleInfo.html":{}}}],["modulecomposer",{"_index":840,"title":{},"body":{"components/ComposerComponent.html":{}}}],["moduleconnected",{"_index":1903,"title":{},"body":{"classes/ExportTheater.html":{}}}],["moduleconnected.data.name",{"_index":1905,"title":{},"body":{"classes/ExportTheater.html":{}}}],["moduleconstraints",{"_index":965,"title":{"classes/ModuleConstraints.html":{}},"body":{"classes/ConstraintsMSD.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["moduledesigner/mddata",{"_index":3101,"title":{},"body":{"injectables/ParseService.html":{}}}],["moduledict",{"_index":2990,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["moduledict[value.name",{"_index":2994,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["moduledto",{"_index":407,"title":{"classes/ModuleDTO.html":{}},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"classes/BlueprintFileDTO.html":{},"interfaces/CommonModule.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/FlavorApplication.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"injectables/ModuleService.html":{},"classes/ModuleStatusDTO.html":{},"interfaces/ModuleTopology.html":{},"classes/NameMappingDTO.html":{},"classes/NodeTopologyElement.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/ReteConnection.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"interfaces/TheaterTopology.html":{},"classes/TheatreStatusDTO.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/TypesCatalogueDTO.html":{}}}],["moduledto:124",{"_index":2548,"title":{},"body":{"classes/ModuleApplication.html":{}}}],["moduledto:125",{"_index":2549,"title":{},"body":{"classes/ModuleApplication.html":{}}}],["moduledto:126",{"_index":2550,"title":{},"body":{"classes/ModuleApplication.html":{}}}],["moduledto:127",{"_index":2551,"title":{},"body":{"classes/ModuleApplication.html":{}}}],["moduledto:128",{"_index":2552,"title":{},"body":{"classes/ModuleApplication.html":{}}}],["moduledto:129",{"_index":2553,"title":{},"body":{"classes/ModuleApplication.html":{}}}],["moduledto:130",{"_index":2554,"title":{},"body":{"classes/ModuleApplication.html":{}}}],["moduledto:131",{"_index":2555,"title":{},"body":{"classes/ModuleApplication.html":{}}}],["moduledto:132",{"_index":2556,"title":{},"body":{"classes/ModuleApplication.html":{}}}],["moduledto:133",{"_index":2557,"title":{},"body":{"classes/ModuleApplication.html":{}}}],["moduledto:134",{"_index":2559,"title":{},"body":{"classes/ModuleApplication.html":{}}}],["moduledto:135",{"_index":2558,"title":{},"body":{"classes/ModuleApplication.html":{}}}],["moduledto:136",{"_index":2560,"title":{},"body":{"classes/ModuleApplication.html":{}}}],["moduledto:137",{"_index":2561,"title":{},"body":{"classes/ModuleApplication.html":{}}}],["moduleexport",{"_index":974,"title":{"classes/ModuleExport.html":{}},"body":{"classes/ConstraintsMSD.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["moduleexport[this.module.name",{"_index":1814,"title":{},"body":{"classes/ExportModule.html":{}}}],["moduleinfo",{"_index":474,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["moduleinfo.host_number",{"_index":3069,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["moduleinfo.hosts.foreach",{"_index":3037,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["moduleinfo.interfaces",{"_index":3063,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["moduleinfo.network_number",{"_index":3071,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["moduleinfo.subnet_number",{"_index":3070,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["moduleinfo.topology",{"_index":3068,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["moduleinfo2",{"_index":3164,"title":{},"body":{"classes/PerseDataForModuleVisualizer.html":{}}}],["moduleinfo[key",{"_index":3000,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["moduleinstance",{"_index":473,"title":{"classes/ModuleInstance.html":{}},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"miscellaneous/functions.html":{}}}],["moduleinstance.properties.module",{"_index":3017,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["moduleinstanceconfigurationuuid",{"_index":752,"title":{},"body":{"classes/BlueprintFileDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/NameMappingDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TheaterDTO.html":{},"classes/TheatreStatusDTO.html":{}}}],["moduleinstancedto",{"_index":406,"title":{"classes/ModuleInstanceDTO.html":{}},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"classes/BlueprintFileDTO.html":{},"interfaces/CommonModule.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/FlavorApplication.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"interfaces/ModuleTopology.html":{},"classes/NameMappingDTO.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteConnection.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"interfaces/TheaterTopology.html":{},"classes/TheatreStatusDTO.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/TypesCatalogueDTO.html":{},"miscellaneous/functions.html":{}}}],["moduleinstancedto:227",{"_index":2608,"title":{},"body":{"classes/ModuleInstance.html":{}}}],["moduleinstancedto:228",{"_index":2609,"title":{},"body":{"classes/ModuleInstance.html":{}}}],["moduleinstancename",{"_index":753,"title":{},"body":{"classes/BlueprintFileDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/NameMappingDTO.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/TagCatalogueDTO.html":{},"classes/TheaterDTO.html":{},"classes/TheatreStatusDTO.html":{}}}],["moduleinstancepropertiesdto",{"_index":403,"title":{"classes/ModuleInstancePropertiesDTO.html":{}},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"interfaces/CommonModule.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/FlavorApplication.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterApplication.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/TypesCatalogueDTO.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["moduleinstancepropertiesdto:166",{"_index":3250,"title":{},"body":{"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/reteBasicModuleInfo.html":{}}}],["moduleinstancepropertiesdto:167",{"_index":3252,"title":{},"body":{"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/reteBasicModuleInfo.html":{}}}],["moduleinstancepropertiesdto:168",{"_index":3253,"title":{},"body":{"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/reteBasicModuleInfo.html":{}}}],["moduleinstancepropertiesdto:169",{"_index":3255,"title":{},"body":{"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/reteBasicModuleInfo.html":{}}}],["moduleinstancepropertiesdto:170",{"_index":3254,"title":{},"body":{"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/reteBasicModuleInfo.html":{}}}],["moduleinstancepropertiesdto:171",{"_index":3251,"title":{},"body":{"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/reteBasicModuleInfo.html":{}}}],["moduleinstances",{"_index":2959,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["moduleinstancesimpledata",{"_index":631,"title":{"classes/ModuleInstanceSimpleData.html":{}},"body":{"classes/AreaExport.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/ExportTheater.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesTSD.html":{},"classes/SourceExport.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{}}}],["moduleinstancesimpledata.properties.consumer_interface_link.push",{"_index":1904,"title":{},"body":{"classes/ExportTheater.html":{}}}],["moduleinstanceuuid",{"_index":754,"title":{},"body":{"classes/BlueprintFileDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/NameMappingDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TheaterDTO.html":{},"classes/TheatreStatusDTO.html":{}}}],["moduleinterfacedto",{"_index":3862,"title":{},"body":{"miscellaneous/functions.html":{}}}],["moduleintotheater",{"_index":2975,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["moduleintotheater.properties",{"_index":2984,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["moduleintotheater.type.tolowercase().includes(theatertype.theater.tolowercase",{"_index":2976,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["modulelistdto",{"_index":503,"title":{"classes/ModuleListDTO.html":{}},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"injectables/ModuleService.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["modulemodedto",{"_index":541,"title":{"classes/ModuleModeDTO.html":{}},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["modulenetworkinterfacedto",{"_index":402,"title":{"classes/ModuleNetworkInterfaceDTO.html":{}},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"interfaces/CommonModule.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/FlavorApplication.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"injectables/ModuleService.html":{},"classes/ModuleStatusDTO.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteConnection.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterApplication.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/TypesCatalogueDTO.html":{}}}],["modules",{"_index":933,"title":{"modules.html":{}},"body":{"components/ComposerComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["modules.ts",{"_index":1580,"title":{},"body":{"classes/EmptyModuleInfo.html":{}}}],["modules.ts:38",{"_index":1592,"title":{},"body":{"classes/EmptyModuleInfo.html":{}}}],["modules.ts:39",{"_index":1591,"title":{},"body":{"classes/EmptyModuleInfo.html":{}}}],["modules.ts:40",{"_index":1590,"title":{},"body":{"classes/EmptyModuleInfo.html":{}}}],["modules.ts:41",{"_index":1593,"title":{},"body":{"classes/EmptyModuleInfo.html":{}}}],["modules.ts:42",{"_index":1589,"title":{},"body":{"classes/EmptyModuleInfo.html":{}}}],["modules.ts:43",{"_index":1587,"title":{},"body":{"classes/EmptyModuleInfo.html":{}}}],["modules.ts:44",{"_index":1588,"title":{},"body":{"classes/EmptyModuleInfo.html":{}}}],["modules/export",{"_index":1579,"title":{},"body":{"classes/EmptyModuleInfo.html":{}}}],["modules/mirroringmoduleinstance/mirroringmoduleinstance.component",{"_index":281,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/mirroringmoduleinstance/mirroringmoduleinstance.component.ts",{"_index":2371,"title":{},"body":{"components/MirroringModuleInstanceComponent.html":{}}}],["modules/mirroringmoduleinstance/mirroringmoduleinstance.component.ts:17",{"_index":2387,"title":{},"body":{"components/MirroringModuleInstanceComponent.html":{}}}],["modules/mirroringmoduleinstance/mirroringmoduleinstance.component.ts:18",{"_index":2386,"title":{},"body":{"components/MirroringModuleInstanceComponent.html":{}}}],["modules/mirroringmoduleinstance/mirroringmoduleinstance.component.ts:19",{"_index":2385,"title":{},"body":{"components/MirroringModuleInstanceComponent.html":{}}}],["modules/mirroringmoduleinstance/mirroringmoduleinstance.component.ts:20",{"_index":2384,"title":{},"body":{"components/MirroringModuleInstanceComponent.html":{}}}],["modules/mirroringmoduleinstance/mirroringmoduleinstance.component.ts:22",{"_index":2381,"title":{},"body":{"components/MirroringModuleInstanceComponent.html":{}}}],["modules/mirroringmoduleinstance/mirroringmoduleinstance.component.ts:23",{"_index":2382,"title":{},"body":{"components/MirroringModuleInstanceComponent.html":{}}}],["modules/mirroringmoduleinstance/mirroringmoduleinstance.component.ts:24",{"_index":2388,"title":{},"body":{"components/MirroringModuleInstanceComponent.html":{}}}],["modules/mirroringmoduleinstance/mirroringmoduleinstance.component.ts:25",{"_index":2383,"title":{},"body":{"components/MirroringModuleInstanceComponent.html":{}}}],["modules/mirroringmoduleinstance/mirroringmoduleinstance.component.ts:26",{"_index":2378,"title":{},"body":{"components/MirroringModuleInstanceComponent.html":{}}}],["modules/mirroringmoduleinstance/mirroringmoduleinstance.component.ts:34",{"_index":2379,"title":{},"body":{"components/MirroringModuleInstanceComponent.html":{}}}],["modules/mirroringmoduleinstance/mirroringmoduleinstancenode",{"_index":393,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["modules/mirroringmoduleinstance/mirroringmoduleinstancenode.ts",{"_index":2400,"title":{},"body":{"classes/MirroringModuleInstanceNode.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"miscellaneous/functions.html":{}}}],["modules/mirroringmoduleinstance/mirroringmoduleinstancenode.ts:122",{"_index":2407,"title":{},"body":{"classes/MirroringModuleInstanceNode.html":{}}}],["modules/mirroringmoduleinstance/mirroringmoduleinstancenode.ts:130",{"_index":2403,"title":{},"body":{"classes/MirroringModuleInstanceNode.html":{}}}],["modules/mirroringmoduleinstance/mirroringmoduleinstancenode.ts:138",{"_index":2405,"title":{},"body":{"classes/MirroringModuleInstanceNode.html":{}}}],["modules/mirroringmoduleinstance/mirroringmoduleinstancenode.ts:49",{"_index":2401,"title":{},"body":{"classes/MirroringModuleInstanceNode.html":{}}}],["modules/mirroringmoduleinstance/mirroringmoduleinstancenode.ts:67",{"_index":2402,"title":{},"body":{"classes/MirroringModuleInstanceNode.html":{}}}],["modules/mirroringmoduleinstance/mirroringmoduleinstancenode.ts:79",{"_index":2404,"title":{},"body":{"classes/MirroringModuleInstanceNode.html":{}}}],["modules/mirroringmoduleinstance/mirroringmoduleinstancenode.ts:92",{"_index":2406,"title":{},"body":{"classes/MirroringModuleInstanceNode.html":{}}}],["modules/theaterinternalservicemoduleinstance/theaterinternalservicemoduleinstance.component",{"_index":282,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/theaterinternalservicemoduleinstance/theaterinternalservicemoduleinstance.component.ts",{"_index":3599,"title":{},"body":{"components/TheaterInternalServiceModuleInstanceComponent.html":{}}}],["modules/theaterinternalservicemoduleinstance/theaterinternalservicemoduleinstance.component.ts:16",{"_index":3610,"title":{},"body":{"components/TheaterInternalServiceModuleInstanceComponent.html":{}}}],["modules/theaterinternalservicemoduleinstance/theaterinternalservicemoduleinstance.component.ts:17",{"_index":3609,"title":{},"body":{"components/TheaterInternalServiceModuleInstanceComponent.html":{}}}],["modules/theaterinternalservicemoduleinstance/theaterinternalservicemoduleinstance.component.ts:18",{"_index":3608,"title":{},"body":{"components/TheaterInternalServiceModuleInstanceComponent.html":{}}}],["modules/theaterinternalservicemoduleinstance/theaterinternalservicemoduleinstance.component.ts:19",{"_index":3607,"title":{},"body":{"components/TheaterInternalServiceModuleInstanceComponent.html":{}}}],["modules/theaterinternalservicemoduleinstance/theaterinternalservicemoduleinstance.component.ts:21",{"_index":3613,"title":{},"body":{"components/TheaterInternalServiceModuleInstanceComponent.html":{}}}],["modules/theaterinternalservicemoduleinstance/theaterinternalservicemoduleinstance.component.ts:22",{"_index":3605,"title":{},"body":{"components/TheaterInternalServiceModuleInstanceComponent.html":{}}}],["modules/theaterinternalservicemoduleinstance/theaterinternalservicemoduleinstance.component.ts:23",{"_index":3611,"title":{},"body":{"components/TheaterInternalServiceModuleInstanceComponent.html":{}}}],["modules/theaterinternalservicemoduleinstance/theaterinternalservicemoduleinstance.component.ts:24",{"_index":3606,"title":{},"body":{"components/TheaterInternalServiceModuleInstanceComponent.html":{}}}],["modules/theaterinternalservicemoduleinstance/theaterinternalservicemoduleinstance.component.ts:25",{"_index":3603,"title":{},"body":{"components/TheaterInternalServiceModuleInstanceComponent.html":{}}}],["modules/theaterinternalservicemoduleinstance/theaterinternalservicemoduleinstance.component.ts:33",{"_index":3604,"title":{},"body":{"components/TheaterInternalServiceModuleInstanceComponent.html":{}}}],["modules/theaterinternalservicemoduleinstance/theaterinternalservicemoduleinstancenode",{"_index":395,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["modules/theaterinternalservicemoduleinstance/theaterinternalservicemoduleinstancenode.ts",{"_index":3366,"title":{},"body":{"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"miscellaneous/functions.html":{}}}],["modules/theaterinternalservicemoduleinstance/theaterinternalservicemoduleinstancenode.ts:122",{"_index":3621,"title":{},"body":{"classes/TheaterInternalServiceModuleInstanceNode.html":{}}}],["modules/theaterinternalservicemoduleinstance/theaterinternalservicemoduleinstancenode.ts:130",{"_index":3617,"title":{},"body":{"classes/TheaterInternalServiceModuleInstanceNode.html":{}}}],["modules/theaterinternalservicemoduleinstance/theaterinternalservicemoduleinstancenode.ts:138",{"_index":3619,"title":{},"body":{"classes/TheaterInternalServiceModuleInstanceNode.html":{}}}],["modules/theaterinternalservicemoduleinstance/theaterinternalservicemoduleinstancenode.ts:49",{"_index":3615,"title":{},"body":{"classes/TheaterInternalServiceModuleInstanceNode.html":{}}}],["modules/theaterinternalservicemoduleinstance/theaterinternalservicemoduleinstancenode.ts:67",{"_index":3616,"title":{},"body":{"classes/TheaterInternalServiceModuleInstanceNode.html":{}}}],["modules/theaterinternalservicemoduleinstance/theaterinternalservicemoduleinstancenode.ts:79",{"_index":3618,"title":{},"body":{"classes/TheaterInternalServiceModuleInstanceNode.html":{}}}],["modules/theaterinternalservicemoduleinstance/theaterinternalservicemoduleinstancenode.ts:92",{"_index":3620,"title":{},"body":{"classes/TheaterInternalServiceModuleInstanceNode.html":{}}}],["modules/theatermoduleinstance/theatermoduleinstance.component",{"_index":283,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/theatermoduleinstance/theatermoduleinstance.component.ts",{"_index":3622,"title":{},"body":{"components/TheaterModuleInstanceComponent.html":{}}}],["modules/theatermoduleinstance/theatermoduleinstance.component.ts:16",{"_index":3633,"title":{},"body":{"components/TheaterModuleInstanceComponent.html":{}}}],["modules/theatermoduleinstance/theatermoduleinstance.component.ts:17",{"_index":3632,"title":{},"body":{"components/TheaterModuleInstanceComponent.html":{}}}],["modules/theatermoduleinstance/theatermoduleinstance.component.ts:18",{"_index":3631,"title":{},"body":{"components/TheaterModuleInstanceComponent.html":{}}}],["modules/theatermoduleinstance/theatermoduleinstance.component.ts:19",{"_index":3630,"title":{},"body":{"components/TheaterModuleInstanceComponent.html":{}}}],["modules/theatermoduleinstance/theatermoduleinstance.component.ts:21",{"_index":3636,"title":{},"body":{"components/TheaterModuleInstanceComponent.html":{}}}],["modules/theatermoduleinstance/theatermoduleinstance.component.ts:22",{"_index":3628,"title":{},"body":{"components/TheaterModuleInstanceComponent.html":{}}}],["modules/theatermoduleinstance/theatermoduleinstance.component.ts:23",{"_index":3634,"title":{},"body":{"components/TheaterModuleInstanceComponent.html":{}}}],["modules/theatermoduleinstance/theatermoduleinstance.component.ts:24",{"_index":3629,"title":{},"body":{"components/TheaterModuleInstanceComponent.html":{}}}],["modules/theatermoduleinstance/theatermoduleinstance.component.ts:25",{"_index":3626,"title":{},"body":{"components/TheaterModuleInstanceComponent.html":{}}}],["modules/theatermoduleinstance/theatermoduleinstance.component.ts:33",{"_index":3627,"title":{},"body":{"components/TheaterModuleInstanceComponent.html":{}}}],["modules/theatermoduleinstance/theatermoduleinstancenode",{"_index":397,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["modules/theatermoduleinstance/theatermoduleinstancenode.ts",{"_index":3370,"title":{},"body":{"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/TheaterModuleInstanceNode.html":{},"miscellaneous/functions.html":{}}}],["modules/theatermoduleinstance/theatermoduleinstancenode.ts:122",{"_index":3644,"title":{},"body":{"classes/TheaterModuleInstanceNode.html":{}}}],["modules/theatermoduleinstance/theatermoduleinstancenode.ts:130",{"_index":3640,"title":{},"body":{"classes/TheaterModuleInstanceNode.html":{}}}],["modules/theatermoduleinstance/theatermoduleinstancenode.ts:138",{"_index":3642,"title":{},"body":{"classes/TheaterModuleInstanceNode.html":{}}}],["modules/theatermoduleinstance/theatermoduleinstancenode.ts:49",{"_index":3638,"title":{},"body":{"classes/TheaterModuleInstanceNode.html":{}}}],["modules/theatermoduleinstance/theatermoduleinstancenode.ts:67",{"_index":3639,"title":{},"body":{"classes/TheaterModuleInstanceNode.html":{}}}],["modules/theatermoduleinstance/theatermoduleinstancenode.ts:79",{"_index":3641,"title":{},"body":{"classes/TheaterModuleInstanceNode.html":{}}}],["modules/theatermoduleinstance/theatermoduleinstancenode.ts:92",{"_index":3643,"title":{},"body":{"classes/TheaterModuleInstanceNode.html":{}}}],["modules[key",{"_index":3011,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["modules[moduleinstance.properties.module",{"_index":3008,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["modulesapplication",{"_index":2991,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["modulesdict",{"_index":816,"title":{},"body":{"components/ComposerComponent.html":{}}}],["moduleservice",{"_index":229,"title":{"injectables/ModuleService.html":{}},"body":{"modules/AppModule.html":{},"injectables/ModuleService.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"overview.html":{}}}],["modulesimpledata",{"_index":975,"title":{"classes/ModuleSimpleData.html":{}},"body":{"classes/ConstraintsMSD.html":{},"classes/ExportModule.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["modulesimpledata.properties.interface_networks[type].push",{"_index":1802,"title":{},"body":{"classes/ExportModule.html":{}}}],["modulesimpledata.properties.interface_networks[type][index].subnets.push",{"_index":1812,"title":{},"body":{"classes/ExportModule.html":{}}}],["modulesinfo",{"_index":2920,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["modulestatusdto",{"_index":543,"title":{"classes/ModuleStatusDTO.html":{}},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["moduletopology",{"_index":472,"title":{"interfaces/ModuleTopology.html":{}},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["moduletype",{"_index":1823,"title":{},"body":{"injectables/ExportService.html":{},"injectables/FileService.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["moduletype.mirroringmoduleinstance",{"_index":2392,"title":{},"body":{"components/MirroringModuleInstanceComponent.html":{}}}],["moduletype.theaterinternalservicemoduleinstance",{"_index":3614,"title":{},"body":{"components/TheaterInternalServiceModuleInstanceComponent.html":{}}}],["moduletype.theatermoduleinstance",{"_index":3637,"title":{},"body":{"components/TheaterModuleInstanceComponent.html":{}}}],["moduletype1",{"_index":1495,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["moduletype2",{"_index":1506,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["moduletype2[smr.type",{"_index":3192,"title":{},"body":{"classes/PerseDataForTheaterComposer.html":{}}}],["moduletype=\".\"+subjecttype.module.tolowercase",{"_index":1857,"title":{},"body":{"injectables/ExportService.html":{}}}],["moduletypeexport",{"_index":616,"title":{},"body":{"classes/AreaExport.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/SourceExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["moduletypeexport[0",{"_index":1894,"title":{},"body":{"classes/ExportTheater.html":{}}}],["moduletypeexport[module.data.type",{"_index":1893,"title":{},"body":{"classes/ExportTheater.html":{}}}],["moduletypeexport[this.module.type]?moduletypeexport[this.module.type]:moduletypeexport[0",{"_index":1790,"title":{},"body":{"classes/ExportModule.html":{}}}],["moduletypelink",{"_index":1501,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["moduletypetheater",{"_index":1486,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["moduletypetheater[moduletype2[value.type",{"_index":3196,"title":{},"body":{"classes/PerseDataForTheaterComposer.html":{}}}],["moduleuuid",{"_index":755,"title":{},"body":{"classes/BlueprintFileDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/NameMappingDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TheaterDTO.html":{},"classes/TheatreStatusDTO.html":{}}}],["modulevisualizer/mvdata",{"_index":3100,"title":{},"body":{"injectables/ParseService.html":{}}}],["moduli",{"_index":219,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"classes/FlavorApplication.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteConnection.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterApplication.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/TypesCatalogueDTO.html":{},"components/VisualizerComponent.html":{},"miscellaneous/functions.html":{},"modules.html":{},"overview.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["modulo",{"_index":433,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"classes/BlueprintFileDTO.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/DeployInstanceDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"classes/FlavorApplication.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"classes/HostNode.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"interfaces/ModuleTopology.html":{},"classes/NameMappingDTO.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkNode.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/SourceExport.html":{},"classes/StatisticItemDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/TheaterSimpleData.html":{},"interfaces/TheaterTopology.html":{},"classes/TheatreStatusDTO.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/TypesCatalogueDTO.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"components/VisualizerComponent.html":{},"miscellaneous/functions.html":{}}}],["modulo/teatro",{"_index":2072,"title":{},"body":{"components/HomeComponent.html":{}}}],["modulto",{"_index":530,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["momento",{"_index":872,"title":{},"body":{"components/ComposerComponent.html":{},"components/HomeComponent.html":{},"components/VisualizerComponent.html":{}}}],["more",{"_index":3926,"title":{},"body":{"index.html":{}}}],["mostra",{"_index":2511,"title":{},"body":{"injectables/ModalService.html":{}}}],["mostrare",{"_index":1225,"title":{},"body":{"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"components/HomeComponent.html":{},"components/NavbarElementComponent.html":{},"components/UnderbarComponent.html":{}}}],["mostrare/nascondere",{"_index":118,"title":{},"body":{"components/AppComponent.html":{}}}],["mostrata",{"_index":3521,"title":{},"body":{"components/TabnavComponent.html":{}}}],["motivo",{"_index":1510,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["mounted",{"_index":1038,"title":{},"body":{"components/ControlTemplate.html":{},"classes/_Control.html":{}}}],["mouseevent",{"_index":3894,"title":{},"body":{"index.html":{}}}],["moz",{"_index":2198,"title":{},"body":{"components/HomeComponent.html":{}}}],["msdvm",{"_index":1735,"title":{},"body":{"classes/ExportModule.html":{}}}],["msdvm.ports[++index",{"_index":1751,"title":{},"body":{"classes/ExportModule.html":{}}}],["msdvm.ports[index].network",{"_index":1774,"title":{},"body":{"classes/ExportModule.html":{}}}],["msdvm.ports[index].subnets.push",{"_index":1765,"title":{},"body":{"classes/ExportModule.html":{}}}],["multi",{"_index":337,"title":{},"body":{"modules/AppModule.html":{}}}],["multi)selection",{"_index":1145,"title":{},"body":{"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{}}}],["multiple",{"_index":1106,"title":{},"body":{"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{}}}],["multiple_mode",{"_index":993,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["multiselect",{"_index":1115,"title":{},"body":{"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{}}}],["mynodecomponent",{"_index":3300,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["n",{"_index":1815,"title":{},"body":{"classes/ExportModule.html":{},"components/HomeComponent.html":{}}}],["name",{"_index":171,"title":{},"body":{"components/AppComponent.html":{},"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"classes/BlueprintFileDTO.html":{},"classes/BorderNetworkDTO.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/DeployInstanceDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"classes/FlavorApplication.html":{},"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"classes/HostModuleDTO.html":{},"classes/HostNode.html":{},"classes/HostPortModuleDTO.html":{},"components/HowToUseComponent.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"components/ModalComponent.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"interfaces/ModuleTopology.html":{},"classes/NameMappingDTO.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"classes/NetOSRouterDTO.html":{},"components/NetworkComponent.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkDTO.html":{},"classes/NetworkNode.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/NodeTopologyElement.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/SourceExport.html":{},"classes/StatisticItemDTO.html":{},"components/SubnetComponent.html":{},"classes/SubnetDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"components/TabnavComponent.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/TheaterSimpleData.html":{},"interfaces/TheaterTopology.html":{},"classes/TheatreStatusDTO.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/TypesCatalogueDTO.html":{},"components/UnderbarComponent.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{},"components/VisualizerComponent.html":{},"miscellaneous/functions.html":{},"index.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["name:string",{"_index":604,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["name:string]:moduleinstancedto|theaterinstancedto",{"_index":756,"title":{},"body":{"classes/BlueprintFileDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/NameMappingDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TheaterDTO.html":{},"classes/TheatreStatusDTO.html":{}}}],["name_mapping",{"_index":765,"title":{},"body":{"classes/BlueprintFileDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/NameMappingDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TheaterDTO.html":{},"classes/TheatreStatusDTO.html":{}}}],["namealias",{"_index":1992,"title":{},"body":{"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{}}}],["namemappingdto",{"_index":758,"title":{"classes/NameMappingDTO.html":{}},"body":{"classes/BlueprintFileDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/NameMappingDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TheaterDTO.html":{},"classes/TheatreStatusDTO.html":{}}}],["nav",{"_index":2690,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar",{"_index":48,"title":{},"body":{"classes/Aoption.html":{},"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"classes/NavbarElement.html":{},"components/NavbarElementComponent.html":{},"classes/NavbarItem.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["navbar'},{'name",{"_index":195,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["navbar.component.html",{"_index":2679,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.component.sass",{"_index":2678,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbarcomonent",{"_index":2684,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbarcomponent",{"_index":33,"title":{"components/NavbarComponent.html":{}},"body":{"classes/Aoption.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"classes/NavbarElement.html":{},"components/NavbarElementComponent.html":{},"classes/NavbarItem.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"overview.html":{}}}],["navbarelement",{"_index":35,"title":{"classes/NavbarElement.html":{}},"body":{"classes/Aoption.html":{},"components/NavbarComponent.html":{},"classes/NavbarElement.html":{},"classes/NavbarItem.html":{}}}],["navbarelementcomponent",{"_index":196,"title":{"components/NavbarElementComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"overview.html":{}}}],["navbaritem",{"_index":42,"title":{"classes/NavbarItem.html":{}},"body":{"classes/Aoption.html":{},"classes/NavbarElement.html":{},"classes/NavbarItem.html":{}}}],["navbartype",{"_index":2697,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navigate",{"_index":3900,"title":{},"body":{"index.html":{}}}],["nbsp",{"_index":3726,"title":{},"body":{"components/UnderbarComponent.html":{}}}],["nbsp;infra",{"_index":2717,"title":{},"body":{"components/NavbarElementComponent.html":{}}}],["necessari",{"_index":2323,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["negli",{"_index":1608,"title":{},"body":{"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{}}}],["nei",{"_index":1725,"title":{},"body":{"classes/ExportModule.html":{}}}],["nel",{"_index":599,"title":{},"body":{"classes/AreaDTO.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"components/DataInputV2Component.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"classes/ModalButton.html":{},"classes/ModalItem.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{},"components/VisualizerComponent.html":{}}}],["nell'appcomponent",{"_index":2477,"title":{},"body":{"injectables/ModalService.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{}}}],["nell'applicazione",{"_index":1822,"title":{},"body":{"injectables/ExportService.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["nell'export",{"_index":436,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["nell'offcanvas",{"_index":2802,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["nella",{"_index":430,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/BlueprintFileDTO.html":{},"interfaces/CommonModule.html":{},"classes/DeployInstanceDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/FlavorApplication.html":{},"components/HomeComponent.html":{},"injectables/ModalService.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NameMappingDTO.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TagCatalogueDTO.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"interfaces/TheaterTopology.html":{},"classes/TheatreStatusDTO.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"miscellaneous/functions.html":{}}}],["nelle",{"_index":609,"title":{},"body":{"classes/AreaExport.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"components/HomeComponent.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesTSD.html":{},"classes/SourceExport.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{}}}],["nello",{"_index":625,"title":{},"body":{"classes/AreaExport.html":{},"components/ComposerComponent.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/SourceExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"components/VisualizerComponent.html":{}}}],["nessun",{"_index":54,"title":{},"body":{"classes/Aoption.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"injectables/AttachmentsService.html":{},"injectables/AuthGuard.html":{},"classes/BlueprintFileDTO.html":{},"classes/BorderNetworkDTO.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"components/ControlTemplate.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputReturnedV2.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/DeployInstanceDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"classes/FlavorApplication.html":{},"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"injectables/FlavorService.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"classes/HostModuleDTO.html":{},"classes/HostNode.html":{},"classes/HostPortModuleDTO.html":{},"components/HowToUseComponent.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModalButton.html":{},"components/ModalComponent.html":{},"classes/ModalItem.html":{},"injectables/ModalService.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"injectables/ModuleService.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"interfaces/ModuleTopology.html":{},"classes/NameMappingDTO.html":{},"components/NavbarComponent.html":{},"classes/NavbarElement.html":{},"components/NavbarElementComponent.html":{},"classes/NavbarItem.html":{},"classes/NetOSRouterDTO.html":{},"components/NetworkComponent.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkDTO.html":{},"classes/NetworkNode.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/NodeTopologyElement.html":{},"components/OffcanvasComponent.html":{},"classes/PageableDTO.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SelectOption.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/SingleDataInputReturned.html":{},"classes/SortDTO.html":{},"classes/SourceExport.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"classes/StatisticItemDTO.html":{},"injectables/StorageService.html":{},"components/SubnetComponent.html":{},"classes/SubnetDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"components/TabnavComponent.html":{},"classes/TabnavElement.html":{},"classes/TabnavItem.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"injectables/TheaterService.html":{},"classes/TheaterSimpleData.html":{},"interfaces/TheaterTopology.html":{},"classes/TheatreStatusDTO.html":{},"injectables/TokenService.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/TypesCatalogueDTO.html":{},"components/UnderbarComponent.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{},"routes.html":{}}}],["net",{"_index":783,"title":{},"body":{"classes/BorderNetworkDTO.html":{},"classes/ExportModule.html":{},"classes/NetOSRouterDTO.html":{},"classes/NetworkDTO.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/SubnetDTO.html":{}}}],["netosrouterdto",{"_index":785,"title":{"classes/NetOSRouterDTO.html":{}},"body":{"classes/BorderNetworkDTO.html":{},"classes/NetOSRouterDTO.html":{},"classes/NetworkDTO.html":{},"classes/SubnetDTO.html":{}}}],["network",{"_index":579,"title":{},"body":{"classes/AreaDTO.html":{},"classes/BorderNetworkDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EmptyNodeInfo.html":{},"classes/ExportModule.html":{},"classes/GenericParameterDTO.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"classes/NetOSRouterDTO.html":{},"components/NetworkComponent.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkDTO.html":{},"classes/NetworkNode.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteNetworkInfo.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/SubnetDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"miscellaneous/functions.html":{}}}],["network.component",{"_index":2766,"title":{},"body":{"classes/NetworkNode.html":{},"classes/ReteNetworkInfo.html":{}}}],["network.component.html",{"_index":2744,"title":{},"body":{"components/NetworkComponent.html":{}}}],["network.component.sass",{"_index":2743,"title":{},"body":{"components/NetworkComponent.html":{}}}],["network.inputs",{"_index":1808,"title":{},"body":{"classes/ExportModule.html":{}}}],["network.inputs[key",{"_index":1810,"title":{},"body":{"classes/ExportModule.html":{}}}],["network/networknode",{"_index":1627,"title":{},"body":{"classes/EmptyNodeInfo.html":{}}}],["network_constraints",{"_index":962,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/ExportModule.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["network_name",{"_index":3049,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["network_number",{"_index":416,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/ReteConnection.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["networkcomponent",{"_index":198,"title":{"components/NetworkComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"classes/NetworkNode.html":{},"components/OffcanvasComponent.html":{},"classes/ReteNetworkInfo.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"overview.html":{}}}],["networkconnectedtosubnet",{"_index":1771,"title":{},"body":{"classes/ExportModule.html":{}}}],["networkconnectedtosubnet.data.name",{"_index":1773,"title":{},"body":{"classes/ExportModule.html":{}}}],["networkconstraints",{"_index":967,"title":{"classes/NetworkConstraints.html":{}},"body":{"classes/ConstraintsMSD.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["networkdto",{"_index":499,"title":{"classes/NetworkDTO.html":{}},"body":{"classes/AreaDTO.html":{},"classes/BorderNetworkDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/HostModuleDTO.html":{},"classes/HostPortModuleDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/NetOSRouterDTO.html":{},"classes/NetworkDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/SubnetDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["networkicon",{"_index":2375,"title":{},"body":{"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["networkicon=networkicon",{"_index":2390,"title":{},"body":{"components/MirroringModuleInstanceComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["networkinputport",{"_index":1809,"title":{},"body":{"classes/ExportModule.html":{}}}],["networkinputport.connections.foreach(c",{"_index":1811,"title":{},"body":{"classes/ExportModule.html":{}}}],["networknode",{"_index":1626,"title":{"classes/NetworkNode.html":{}},"body":{"classes/EmptyNodeInfo.html":{},"classes/NetworkNode.html":{},"classes/ReteNetworkInfo.html":{},"miscellaneous/functions.html":{}}}],["networks",{"_index":2276,"title":{},"body":{"classes/HostModuleDTO.html":{},"classes/HostPortModuleDTO.html":{}}}],["networksimpledata",{"_index":978,"title":{"classes/NetworkSimpleData.html":{}},"body":{"classes/ConstraintsMSD.html":{},"classes/ExportModule.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["networktypeexport",{"_index":969,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/ExportModule.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["networktypeexport.network",{"_index":1787,"title":{},"body":{"classes/ExportModule.html":{}}}],["new",{"_index":332,"title":{},"body":{"modules/AppModule.html":{},"injectables/AttachmentsService.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"injectables/FlavorService.html":{},"components/HomeComponent.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"injectables/ModuleService.html":{},"components/NavbarComponent.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"injectables/TheaterService.html":{},"injectables/TokenService.html":{},"components/UnderbarComponent.html":{},"index.html":{}}}],["new_value",{"_index":1215,"title":{},"body":{"classes/DataInputReturnedV2.html":{},"components/DataInputV2Component.html":{}}}],["newmodule",{"_index":3020,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["ng",{"_index":3898,"title":{},"body":{"index.html":{}}}],["ngafterviewinit",{"_index":2680,"title":{},"body":{"components/NavbarComponent.html":{}}}],["ngdobootstrap",{"_index":246,"title":{},"body":{"modules/AppModule.html":{}}}],["ngdobootstrap(appref",{"_index":247,"title":{},"body":{"modules/AppModule.html":{}}}],["ngform",{"_index":321,"title":{},"body":{"modules/AppModule.html":{}}}],["ngmodule",{"_index":258,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngoninit",{"_index":820,"title":{},"body":{"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DocsComponent.html":{},"components/HowToUseComponent.html":{},"components/TabnavComponent.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{}}}],["ngx",{"_index":297,"title":{},"body":{"modules/AppModule.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"dependencies.html":{}}}],["ngxpopper",{"_index":228,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["ngxspinnermodule",{"_index":296,"title":{},"body":{"modules/AppModule.html":{}}}],["ngxspinnerservice",{"_index":3425,"title":{},"body":{"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{}}}],["ngxtypeaheadmodule",{"_index":298,"title":{},"body":{"modules/AppModule.html":{}}}],["nlinked",{"_index":3018,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["nn",{"_index":3036,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["node",{"_index":1612,"title":{},"body":{"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/ExportModule.html":{},"components/HostComponent.html":{},"classes/HostNode.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"components/NetworkComponent.html":{},"classes/NetworkNode.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"components/SubnetComponent.html":{},"classes/SubnetNode.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["node.data",{"_index":2342,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["node.data.area",{"_index":2393,"title":{},"body":{"components/MirroringModuleInstanceComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["node.data.cidr",{"_index":3476,"title":{},"body":{"components/SubnetComponent.html":{}}}],["node.data.cpu",{"_index":2229,"title":{},"body":{"components/HostComponent.html":{}}}],["node.data.disk",{"_index":2228,"title":{},"body":{"components/HostComponent.html":{}}}],["node.data.externalinterfacename",{"_index":2752,"title":{},"body":{"components/NetworkComponent.html":{}}}],["node.data.externalinterfacetype",{"_index":2753,"title":{},"body":{"components/NetworkComponent.html":{}}}],["node.data.host_number",{"_index":2397,"title":{},"body":{"components/MirroringModuleInstanceComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["node.data.isdhcp",{"_index":3477,"title":{},"body":{"components/SubnetComponent.html":{}}}],["node.data.isdhcp?\"true\":\"false",{"_index":3479,"title":{},"body":{"components/SubnetComponent.html":{}}}],["node.data.name",{"_index":1736,"title":{},"body":{"classes/ExportModule.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["node.data.network_number",{"_index":2399,"title":{},"body":{"components/MirroringModuleInstanceComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["node.data.os",{"_index":2225,"title":{},"body":{"components/HostComponent.html":{}}}],["node.data.output",{"_index":1743,"title":{},"body":{"classes/ExportModule.html":{}}}],["node.data.ram",{"_index":2226,"title":{},"body":{"components/HostComponent.html":{}}}],["node.data.subnet_number",{"_index":2398,"title":{},"body":{"components/MirroringModuleInstanceComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["node.data.version",{"_index":2394,"title":{},"body":{"components/MirroringModuleInstanceComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["node.data['input",{"_index":2343,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["node.data['output",{"_index":2344,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["node.name",{"_index":3039,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["node.outputs",{"_index":1750,"title":{},"body":{"classes/ExportModule.html":{}}}],["node.outputs[portname",{"_index":1753,"title":{},"body":{"classes/ExportModule.html":{}}}],["node.ports.foreach",{"_index":3043,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["node_modules",{"_index":633,"title":{},"body":{"classes/AreaExport.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesTSD.html":{},"classes/SourceExport.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{}}}],["node_tempates",{"_index":1710,"title":{},"body":{"classes/ExportModule.html":{}}}],["node_template",{"_index":1683,"title":{},"body":{"classes/ExportModule.html":{},"classes/ExportTheater.html":{}}}],["node_template_name",{"_index":762,"title":{},"body":{"classes/BlueprintFileDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/NameMappingDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TheaterDTO.html":{},"classes/TheatreStatusDTO.html":{}}}],["node_templates",{"_index":589,"title":{},"body":{"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"classes/BlueprintFileDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/DeployInstanceDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"classes/NameMappingDTO.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/SourceExport.html":{},"classes/StatisticItemDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterDTO.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheaterSimpleData.html":{},"classes/TheatreStatusDTO.html":{},"classes/TypesCatalogueDTO.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["nodecomponent",{"_index":2200,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["nodecomponents",{"_index":1604,"title":{},"body":{"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{}}}],["nodedata",{"_index":1673,"title":{},"body":{"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["nodeeditor",{"_index":1045,"title":{},"body":{"components/ControlTemplate.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/_Control.html":{}}}],["nodename",{"_index":580,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["nodeport",{"_index":1752,"title":{},"body":{"classes/ExportModule.html":{}}}],["nodeport.connections.foreach(c",{"_index":1759,"title":{},"body":{"classes/ExportModule.html":{}}}],["nodeporttype",{"_index":1436,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["nodes",{"_index":3311,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["nodes.ts",{"_index":1616,"title":{},"body":{"classes/EmptyNodeInfo.html":{}}}],["nodes.ts:32",{"_index":1621,"title":{},"body":{"classes/EmptyNodeInfo.html":{}}}],["nodes.ts:33",{"_index":1623,"title":{},"body":{"classes/EmptyNodeInfo.html":{}}}],["nodes.ts:34",{"_index":1622,"title":{},"body":{"classes/EmptyNodeInfo.html":{}}}],["nodes/export",{"_index":1615,"title":{},"body":{"classes/EmptyNodeInfo.html":{}}}],["nodes/host/host.component",{"_index":278,"title":{},"body":{"modules/AppModule.html":{},"classes/HostNode.html":{},"classes/ReteHostInfo.html":{}}}],["nodes/host/host.component.ts",{"_index":2199,"title":{},"body":{"components/HostComponent.html":{}}}],["nodes/host/host.component.ts:17",{"_index":2216,"title":{},"body":{"components/HostComponent.html":{}}}],["nodes/host/host.component.ts:18",{"_index":2215,"title":{},"body":{"components/HostComponent.html":{}}}],["nodes/host/host.component.ts:19",{"_index":2214,"title":{},"body":{"components/HostComponent.html":{}}}],["nodes/host/host.component.ts:20",{"_index":2213,"title":{},"body":{"components/HostComponent.html":{}}}],["nodes/host/host.component.ts:21",{"_index":2211,"title":{},"body":{"components/HostComponent.html":{}}}],["nodes/host/host.component.ts:29",{"_index":2212,"title":{},"body":{"components/HostComponent.html":{}}}],["nodes/host/hostnode",{"_index":387,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["nodes/host/hostnode.ts",{"_index":2277,"title":{},"body":{"classes/HostNode.html":{},"classes/ReteHostInfo.html":{},"miscellaneous/functions.html":{}}}],["nodes/host/hostnode.ts:124",{"_index":2319,"title":{},"body":{"classes/HostNode.html":{}}}],["nodes/host/hostnode.ts:132",{"_index":2298,"title":{},"body":{"classes/HostNode.html":{}}}],["nodes/host/hostnode.ts:140",{"_index":2303,"title":{},"body":{"classes/HostNode.html":{}}}],["nodes/host/hostnode.ts:15",{"_index":3237,"title":{},"body":{"classes/ReteHostInfo.html":{}}}],["nodes/host/hostnode.ts:16",{"_index":3236,"title":{},"body":{"classes/ReteHostInfo.html":{}}}],["nodes/host/hostnode.ts:17",{"_index":3234,"title":{},"body":{"classes/ReteHostInfo.html":{}}}],["nodes/host/hostnode.ts:18",{"_index":3235,"title":{},"body":{"classes/ReteHostInfo.html":{}}}],["nodes/host/hostnode.ts:19",{"_index":3238,"title":{},"body":{"classes/ReteHostInfo.html":{}}}],["nodes/host/hostnode.ts:49",{"_index":2285,"title":{},"body":{"classes/HostNode.html":{}}}],["nodes/host/hostnode.ts:67",{"_index":2288,"title":{},"body":{"classes/HostNode.html":{}}}],["nodes/host/hostnode.ts:80",{"_index":2301,"title":{},"body":{"classes/HostNode.html":{}}}],["nodes/host/hostnode.ts:94",{"_index":2306,"title":{},"body":{"classes/HostNode.html":{}}}],["nodes/network/network.component",{"_index":280,"title":{},"body":{"modules/AppModule.html":{}}}],["nodes/network/network.component.ts",{"_index":2742,"title":{},"body":{"components/NetworkComponent.html":{}}}],["nodes/network/network.component.ts:16",{"_index":2750,"title":{},"body":{"components/NetworkComponent.html":{}}}],["nodes/network/network.component.ts:17",{"_index":2749,"title":{},"body":{"components/NetworkComponent.html":{}}}],["nodes/network/network.component.ts:18",{"_index":2748,"title":{},"body":{"components/NetworkComponent.html":{}}}],["nodes/network/network.component.ts:19",{"_index":2747,"title":{},"body":{"components/NetworkComponent.html":{}}}],["nodes/network/network.component.ts:20",{"_index":2745,"title":{},"body":{"components/NetworkComponent.html":{}}}],["nodes/network/network.component.ts:29",{"_index":2746,"title":{},"body":{"components/NetworkComponent.html":{}}}],["nodes/network/networknode",{"_index":389,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["nodes/network/networknode.ts",{"_index":2758,"title":{},"body":{"classes/NetworkNode.html":{},"classes/ReteNetworkInfo.html":{},"miscellaneous/functions.html":{}}}],["nodes/network/networknode.ts:119",{"_index":2765,"title":{},"body":{"classes/NetworkNode.html":{}}}],["nodes/network/networknode.ts:127",{"_index":2761,"title":{},"body":{"classes/NetworkNode.html":{}}}],["nodes/network/networknode.ts:135",{"_index":2763,"title":{},"body":{"classes/NetworkNode.html":{}}}],["nodes/network/networknode.ts:16",{"_index":3348,"title":{},"body":{"classes/ReteNetworkInfo.html":{}}}],["nodes/network/networknode.ts:17",{"_index":3349,"title":{},"body":{"classes/ReteNetworkInfo.html":{}}}],["nodes/network/networknode.ts:45",{"_index":2759,"title":{},"body":{"classes/NetworkNode.html":{}}}],["nodes/network/networknode.ts:63",{"_index":2760,"title":{},"body":{"classes/NetworkNode.html":{}}}],["nodes/network/networknode.ts:75",{"_index":2762,"title":{},"body":{"classes/NetworkNode.html":{}}}],["nodes/network/networknode.ts:88",{"_index":2764,"title":{},"body":{"classes/NetworkNode.html":{}}}],["nodes/rete",{"_index":2327,"title":{},"body":{"classes/HostNode.html":{},"classes/ReteHostInfo.html":{}}}],["nodes/subnet/subnet.component",{"_index":279,"title":{},"body":{"modules/AppModule.html":{}}}],["nodes/subnet/subnet.component.ts",{"_index":3466,"title":{},"body":{"components/SubnetComponent.html":{}}}],["nodes/subnet/subnet.component.ts:16",{"_index":3474,"title":{},"body":{"components/SubnetComponent.html":{}}}],["nodes/subnet/subnet.component.ts:17",{"_index":3473,"title":{},"body":{"components/SubnetComponent.html":{}}}],["nodes/subnet/subnet.component.ts:18",{"_index":3472,"title":{},"body":{"components/SubnetComponent.html":{}}}],["nodes/subnet/subnet.component.ts:19",{"_index":3471,"title":{},"body":{"components/SubnetComponent.html":{}}}],["nodes/subnet/subnet.component.ts:20",{"_index":3469,"title":{},"body":{"components/SubnetComponent.html":{}}}],["nodes/subnet/subnet.component.ts:28",{"_index":3470,"title":{},"body":{"components/SubnetComponent.html":{}}}],["nodes/subnet/subnetnode",{"_index":391,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["nodes/subnet/subnetnode.ts",{"_index":3351,"title":{},"body":{"classes/ReteSubnetInfo.html":{},"classes/SubnetNode.html":{},"miscellaneous/functions.html":{}}}],["nodes/subnet/subnetnode.ts:119",{"_index":3499,"title":{},"body":{"classes/SubnetNode.html":{}}}],["nodes/subnet/subnetnode.ts:127",{"_index":3495,"title":{},"body":{"classes/SubnetNode.html":{}}}],["nodes/subnet/subnetnode.ts:135",{"_index":3497,"title":{},"body":{"classes/SubnetNode.html":{}}}],["nodes/subnet/subnetnode.ts:15",{"_index":3352,"title":{},"body":{"classes/ReteSubnetInfo.html":{}}}],["nodes/subnet/subnetnode.ts:16",{"_index":3355,"title":{},"body":{"classes/ReteSubnetInfo.html":{}}}],["nodes/subnet/subnetnode.ts:17",{"_index":3353,"title":{},"body":{"classes/ReteSubnetInfo.html":{}}}],["nodes/subnet/subnetnode.ts:46",{"_index":3493,"title":{},"body":{"classes/SubnetNode.html":{}}}],["nodes/subnet/subnetnode.ts:64",{"_index":3494,"title":{},"body":{"classes/SubnetNode.html":{}}}],["nodes/subnet/subnetnode.ts:76",{"_index":3496,"title":{},"body":{"classes/SubnetNode.html":{}}}],["nodes/subnet/subnetnode.ts:89",{"_index":3498,"title":{},"body":{"classes/SubnetNode.html":{}}}],["nodesdata",{"_index":1697,"title":{},"body":{"classes/ExportModule.html":{}}}],["nodeselected",{"_index":3265,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["nodeservice",{"_index":2201,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["nodesimpledata",{"_index":976,"title":{"classes/NodeSimpleData.html":{}},"body":{"classes/ConstraintsMSD.html":{},"classes/ExportModule.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["nodesimpledata.relationships.push",{"_index":1746,"title":{},"body":{"classes/ExportModule.html":{}}}],["nodetopologyelement",{"_index":418,"title":{"classes/NodeTopologyElement.html":{}},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["nodetype",{"_index":2205,"title":{},"body":{"components/HostComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{}}}],["nodetype.host",{"_index":2224,"title":{},"body":{"components/HostComponent.html":{}}}],["nodetype.network",{"_index":2751,"title":{},"body":{"components/NetworkComponent.html":{}}}],["nodetype.subnet",{"_index":3475,"title":{},"body":{"components/SubnetComponent.html":{}}}],["nodetypeexport",{"_index":970,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/ExportModule.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["nodetypeexport.host",{"_index":1739,"title":{},"body":{"classes/ExportModule.html":{}}}],["nodi",{"_index":453,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"components/ControlTemplate.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/ExportModule.html":{},"classes/FlavorApplication.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NetworkNode.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/SubnetNode.html":{},"classes/TheaterApplication.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/_Control.html":{},"miscellaneous/functions.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["nodi/moduli",{"_index":1051,"title":{},"body":{"components/ControlTemplate.html":{},"classes/_Control.html":{}}}],["nodo",{"_index":1009,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"classes/HostNode.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkNode.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"miscellaneous/functions.html":{}}}],["nome",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AttachmentsService.html":{},"injectables/AuthGuard.html":{},"classes/BlueprintFileDTO.html":{},"components/ComposerComponent.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/DeployInstanceDTO.html":{},"components/DocsComponent.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"injectables/FlavorService.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"classes/HostNode.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"injectables/ModuleService.html":{},"classes/NameMappingDTO.html":{},"components/NavbarComponent.html":{},"components/NetworkComponent.html":{},"classes/NetworkNode.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"injectables/SpinnerService.html":{},"injectables/StorageService.html":{},"components/SubnetComponent.html":{},"classes/SubnetNode.html":{},"components/TabnavComponent.html":{},"classes/TagCatalogueDTO.html":{},"classes/TheaterDTO.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"injectables/TheaterService.html":{},"classes/TheatreStatusDTO.html":{},"injectables/TokenService.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{},"miscellaneous/functions.html":{}}}],["nomemosulo.module.json",{"_index":1849,"title":{},"body":{"injectables/ExportService.html":{},"injectables/FileService.html":{}}}],["nometeatro.theater.json",{"_index":1852,"title":{},"body":{"injectables/ExportService.html":{},"injectables/FileService.html":{}}}],["non",{"_index":345,"title":{},"body":{"modules/AppModule.html":{},"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"classes/FlavorApplication.html":{},"components/HomeComponent.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"injectables/ModalService.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"components/NavbarComponent.html":{},"classes/NetworkNode.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SimpleModuleApplication.html":{},"classes/SubnetNode.html":{},"classes/TheaterApplication.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"components/VisualizerComponent.html":{},"modules.html":{}}}],["none",{"_index":692,"title":{},"body":{"injectables/AttachmentsService.html":{},"components/DataInputV2Component.html":{},"components/DocsComponent.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["normal",{"_index":1344,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["normalizzazione",{"_index":2963,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["note",{"_index":2189,"title":{},"body":{"components/HomeComponent.html":{}}}],["notifica",{"_index":1318,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["nowrap",{"_index":1417,"title":{},"body":{"components/DataItemComponent.html":{}}}],["nt",{"_index":1711,"title":{},"body":{"classes/ExportModule.html":{},"classes/ExportTheater.html":{}}}],["null",{"_index":780,"title":{},"body":{"classes/BorderNetworkDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"injectables/ModalService.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetOSRouterDTO.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkDTO.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SubnetDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["number",{"_index":379,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"injectables/AttachmentsService.html":{},"classes/BlueprintFileDTO.html":{},"classes/BorderNetworkDTO.html":{},"interfaces/CommonModule.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"components/ControlTemplate.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/DeployInstanceDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"classes/FlavorApplication.html":{},"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"injectables/FlavorService.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"classes/HostModuleDTO.html":{},"classes/HostNode.html":{},"classes/HostPortModuleDTO.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"injectables/ModuleService.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"interfaces/ModuleTopology.html":{},"classes/NameMappingDTO.html":{},"classes/NetOSRouterDTO.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkDTO.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/NodeTopologyElement.html":{},"classes/PageableDTO.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SelectOption.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/SingleDataInputReturned.html":{},"classes/SortDTO.html":{},"classes/SourceExport.html":{},"classes/StatisticItemDTO.html":{},"classes/SubnetDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"injectables/TheaterService.html":{},"classes/TheaterSimpleData.html":{},"interfaces/TheaterTopology.html":{},"classes/TheatreStatusDTO.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/TypesCatalogueDTO.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["numberofelements",{"_index":511,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["number|string",{"_index":2018,"title":{},"body":{"injectables/FlavorService.html":{}}}],["nuovo",{"_index":2293,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["nvm",{"_index":3886,"title":{},"body":{"index.html":{}}}],["o",{"_index":853,"title":{},"body":{"components/ComposerComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"injectables/ParseService.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"components/TabnavComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"components/VisualizerComponent.html":{}}}],["o.length",{"_index":2347,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["object.assign",{"_index":1716,"title":{},"body":{"classes/ExportModule.html":{},"classes/ExportTheater.html":{}}}],["object.entries(module_content.properties.consumer_interfaces_link).map(([key",{"_index":3027,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["object.entries(modules).map(async",{"_index":2999,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["object.entries(modulesapplication).map(async",{"_index":2993,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["object.entries(modulesinfo).map(([key",{"_index":3032,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["object.entries(rowtheater.blueprintfile.node_templates).map(([key",{"_index":2974,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["object.entries(theater.blueprintfile.node_templates).map(([key",{"_index":3024,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["object.entries(theater.blueprintfile.node_templates).map(async",{"_index":3006,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["object.keys(node.data).length",{"_index":2338,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["objectdata",{"_index":3866,"title":{},"body":{"miscellaneous/functions.html":{}}}],["observable",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"injectables/ModalService.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{}}}],["observe",{"_index":3693,"title":{},"body":{"injectables/TokenService.html":{}}}],["occourence",{"_index":3033,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["occourence.get(network_name",{"_index":3060,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["occourence.get(subnet_name",{"_index":3051,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["occourence.set(network_name",{"_index":3064,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["occourence.set(subnet_name",{"_index":3056,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["occpa",{"_index":1031,"title":{},"body":{"components/ControlTemplate.html":{},"classes/_Control.html":{}}}],["occupa",{"_index":824,"title":{},"body":{"components/ComposerComponent.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForTheaterComposer.html":{},"injectables/StorageService.html":{},"injectables/TokenService.html":{},"components/VisualizerComponent.html":{},"miscellaneous/functions.html":{}}}],["occurred",{"_index":939,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["offcanvas",{"_index":2781,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["offcanvas'},{'name",{"_index":200,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["offcanvas.component.html",{"_index":2792,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["offcanvas.component.sass",{"_index":2791,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["offcanvascomponent",{"_index":199,"title":{"components/OffcanvasComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"overview.html":{}}}],["offcanvasinfo",{"_index":2847,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["offcavanvascomponent",{"_index":2797,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["offset",{"_index":2851,"title":{},"body":{"classes/PageableDTO.html":{},"classes/SortDTO.html":{}}}],["oggetto",{"_index":43,"title":{},"body":{"classes/Aoption.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"classes/NavbarElement.html":{},"classes/NavbarItem.html":{},"classes/ParseDataForTheaterVisualizer.html":{}}}],["ogni",{"_index":2913,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["oh",{"_index":943,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["ol",{"_index":2346,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["old",{"_index":2525,"title":{},"body":{"injectables/ModalService.html":{}}}],["old_value",{"_index":1216,"title":{},"body":{"classes/DataInputReturnedV2.html":{},"components/DataInputV2Component.html":{}}}],["onbuttonpressed",{"_index":2433,"title":{},"body":{"components/ModalComponent.html":{}}}],["onchange",{"_index":1243,"title":{},"body":{"components/DataInputV2Component.html":{},"classes/_Control.html":{}}}],["onchange(val",{"_index":1062,"title":{},"body":{"components/ControlTemplate.html":{},"classes/_Control.html":{}}}],["one",{"_index":1419,"title":{},"body":{"components/DataItemComponent.html":{}}}],["onfileselected",{"_index":1929,"title":{},"body":{"injectables/FileService.html":{},"components/HomeComponent.html":{}}}],["onfileselected(event",{"_index":1942,"title":{},"body":{"injectables/FileService.html":{},"components/HomeComponent.html":{}}}],["oninit",{"_index":808,"title":{},"body":{"components/ComposerComponent.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DocsComponent.html":{},"components/HomeComponent.html":{},"components/HowToUseComponent.html":{},"components/TabnavComponent.html":{},"components/VisualizerComponent.html":{}}}],["onlyresize",{"_index":1376,"title":{},"body":{"components/DataItemComponent.html":{}}}],["onremove",{"_index":1366,"title":{},"body":{"components/DataItemComponent.html":{}}}],["onreset",{"_index":2041,"title":{},"body":{"components/HomeComponent.html":{}}}],["onreset(input",{"_index":2058,"title":{},"body":{"components/HomeComponent.html":{}}}],["onupload",{"_index":2042,"title":{},"body":{"components/HomeComponent.html":{}}}],["op",{"_index":1412,"title":{},"body":{"components/DataItemComponent.html":{}}}],["opacity",{"_index":2835,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["openstack_config",{"_index":1016,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/ExportModule.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["operation",{"_index":2519,"title":{},"body":{"injectables/ModalService.html":{}}}],["operativo",{"_index":1438,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["operazione",{"_index":1179,"title":{},"body":{"components/DataInputComponent.html":{},"components/HomeComponent.html":{}}}],["operazioni",{"_index":424,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"components/DataInputV2Component.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/FlavorApplication.html":{},"components/HomeComponent.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"injectables/ModalService.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NetworkNode.html":{},"classes/NodeTopologyElement.html":{},"components/OffcanvasComponent.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"classes/SubnetNode.html":{},"classes/TheaterApplication.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["opportune",{"_index":2053,"title":{},"body":{"components/HomeComponent.html":{}}}],["oppure",{"_index":1176,"title":{},"body":{"components/DataInputComponent.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["opt",{"_index":2702,"title":{},"body":{"components/NavbarComponent.html":{},"components/OffcanvasComponent.html":{}}}],["opt.attr_val",{"_index":2704,"title":{},"body":{"components/NavbarComponent.html":{}}}],["opt.text",{"_index":1202,"title":{},"body":{"components/DataInputComponent.html":{}}}],["option",{"_index":1116,"title":{},"body":{"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{},"injectables/TokenService.html":{}}}],["opzionale",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AreaApplication.html":{},"injectables/AttachmentsService.html":{},"injectables/AuthGuard.html":{},"components/ComposerComponent.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/DeployInstanceDTO.html":{},"components/DocsComponent.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"injectables/FlavorService.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"classes/HostNode.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"components/ModalComponent.html":{},"classes/ModalItem.html":{},"injectables/ModalService.html":{},"classes/ModuleApplication.html":{},"classes/ModuleDTO.html":{},"injectables/ModuleService.html":{},"components/NavbarComponent.html":{},"classes/NavbarElement.html":{},"classes/NavbarItem.html":{},"components/NetworkComponent.html":{},"classes/NetworkNode.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SelectOption.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"injectables/SpinnerService.html":{},"injectables/StorageService.html":{},"components/SubnetComponent.html":{},"classes/SubnetNode.html":{},"components/TabnavComponent.html":{},"classes/TheaterApplication.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"injectables/TheaterService.html":{},"injectables/TokenService.html":{},"interfaces/TopologyList.html":{},"components/UnderbarComponent.html":{},"classes/UnderbarItem.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{},"miscellaneous/functions.html":{}}}],["opzioni",{"_index":10,"title":{},"body":{"classes/Aoption.html":{},"components/HomeComponent.html":{},"classes/NavbarElement.html":{},"classes/NavbarItem.html":{}}}],["ora",{"_index":1741,"title":{},"body":{"classes/ExportModule.html":{}}}],["orchestrator",{"_index":2140,"title":{},"body":{"components/HomeComponent.html":{}}}],["organizzare",{"_index":2934,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["organizzata",{"_index":2897,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["os",{"_index":784,"title":{},"body":{"classes/BorderNetworkDTO.html":{},"components/HostComponent.html":{},"classes/HostNode.html":{},"classes/NetOSRouterDTO.html":{},"classes/NetworkDTO.html":{},"classes/ReteHostInfo.html":{},"classes/SubnetDTO.html":{}}}],["ottimizzare",{"_index":1652,"title":{},"body":{"classes/ExportModule.html":{}}}],["out",{"_index":1745,"title":{},"body":{"classes/ExportModule.html":{},"index.html":{}}}],["output",{"_index":572,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/ExportModule.html":{},"classes/GenericParameterDTO.html":{},"components/HostComponent.html":{},"classes/HostNode.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"components/ModalComponent.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"components/NavbarComponent.html":{},"components/NetworkComponent.html":{},"classes/NetworkNode.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"components/SubnetComponent.html":{},"classes/SubnetNode.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/TypesCatalogueDTO.html":{},"components/UnderbarComponent.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["output.name",{"_index":2237,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["outputdata",{"_index":1698,"title":{},"body":{"classes/ExportModule.html":{}}}],["outputs",{"_index":982,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/HostNode.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkNode.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["outside",{"_index":2191,"title":{},"body":{"components/HomeComponent.html":{}}}],["overflow",{"_index":161,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/DataItemComponent.html":{},"components/OffcanvasComponent.html":{},"components/TabnavComponent.html":{},"components/VisualizerComponent.html":{}}}],["overview",{"_index":3932,"title":{"overview.html":{}},"body":{}}],["p",{"_index":2395,"title":{},"body":{"components/MirroringModuleInstanceComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["p,h4,h5",{"_index":2841,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["package",{"_index":3784,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padding",{"_index":1072,"title":{},"body":{"components/ControlTemplate.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["page",{"_index":2662,"title":{},"body":{"injectables/ModuleService.html":{}}}],["pageable",{"_index":505,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["pageabledto",{"_index":496,"title":{"classes/PageableDTO.html":{}},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/PageableDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/SortDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["paged",{"_index":2852,"title":{},"body":{"classes/PageableDTO.html":{},"classes/SortDTO.html":{}}}],["pageindex",{"_index":2651,"title":{},"body":{"injectables/ModuleService.html":{}}}],["pagenumber",{"_index":2853,"title":{},"body":{"classes/PageableDTO.html":{},"classes/SortDTO.html":{}}}],["pages/docs/docs.component",{"_index":328,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["pages/elements/navbar",{"_index":308,"title":{},"body":{"modules/AppModule.html":{}}}],["pages/home/home.component",{"_index":262,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["pages/how",{"_index":263,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["pagesize",{"_index":2854,"title":{},"body":{"classes/PageableDTO.html":{},"classes/SortDTO.html":{}}}],["pagina",{"_index":1523,"title":{},"body":{"components/DocsComponent.html":{},"components/HomeComponent.html":{}}}],["pagine",{"_index":833,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["paging",{"_index":2850,"title":{},"body":{"classes/PageableDTO.html":{},"classes/SortDTO.html":{}}}],["panel",{"_index":2232,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["param",{"_index":136,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/DataInputComponent.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"components/NavbarComponent.html":{},"classes/NetworkNode.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"classes/SubnetNode.html":{},"components/TabnavComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"injectables/TokenService.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["parameters",{"_index":865,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["parametri",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AreaDTO.html":{},"injectables/AttachmentsService.html":{},"injectables/AuthGuard.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"injectables/FlavorService.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"classes/HostNode.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"injectables/ModuleService.html":{},"classes/ModuleStatusDTO.html":{},"components/NavbarComponent.html":{},"components/NetworkComponent.html":{},"classes/NetworkNode.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"injectables/SpinnerService.html":{},"classes/StatisticItemDTO.html":{},"injectables/StorageService.html":{},"components/SubnetComponent.html":{},"classes/SubnetNode.html":{},"components/TabnavComponent.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"injectables/TheaterService.html":{},"injectables/TokenService.html":{},"classes/TypesCatalogueDTO.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{},"miscellaneous/functions.html":{}}}],["parametro",{"_index":30,"title":{},"body":{"classes/Aoption.html":{},"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/NavbarElement.html":{},"classes/NavbarItem.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["parentid",{"_index":518,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["pareserizzato",{"_index":2942,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["parsecommonelement",{"_index":2954,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["parsed",{"_index":1667,"title":{},"body":{"classes/ExportModule.html":{},"classes/ExportTheater.html":{}}}],["parsedatafortheatervisualizer",{"_index":2864,"title":{"classes/ParseDataForTheaterVisualizer.html":{}},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{}}}],["parsedatafortheatervisualizer(this.theaterservice",{"_index":3106,"title":{},"body":{"injectables/ParseService.html":{}}}],["parsedmodule",{"_index":3159,"title":{},"body":{"classes/PerseDataForModuleVisualizer.html":{}}}],["parseflavor",{"_index":3113,"title":{},"body":{"classes/PerseDataForModuleComposer.html":{}}}],["parseflavor(flavordto",{"_index":3116,"title":{},"body":{"classes/PerseDataForModuleComposer.html":{}}}],["parseflavorformodulecomposer",{"_index":3078,"title":{},"body":{"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{}}}],["parsemainmodule",{"_index":3133,"title":{},"body":{"classes/PerseDataForModuleVisualizer.html":{}}}],["parsemainmodule(id",{"_index":3150,"title":{},"body":{"classes/PerseDataForModuleVisualizer.html":{}}}],["parsemoduleformodulevisualizer",{"_index":3079,"title":{},"body":{"injectables/ParseService.html":{},"classes/PerseDataForModuleVisualizer.html":{}}}],["parsemoduleformodulevisualizer(id",{"_index":3085,"title":{},"body":{"injectables/ParseService.html":{},"classes/PerseDataForModuleVisualizer.html":{}}}],["parsemodulefortheatercomposer",{"_index":3080,"title":{},"body":{"injectables/ParseService.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["parsemoduleinstance",{"_index":2877,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["parsemoduleinstance(theater",{"_index":2924,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["parsemodulelist",{"_index":3169,"title":{},"body":{"classes/PerseDataForTheaterComposer.html":{}}}],["parsemodulesfromtheater",{"_index":2878,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["parsemodulesfromtheater(theateruuid",{"_index":2931,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["parser",{"_index":3766,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["parserizza",{"_index":2901,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["parserizzare",{"_index":1946,"title":{},"body":{"injectables/FileService.html":{},"classes/PerseDataForModuleVisualizer.html":{}}}],["parserizzati",{"_index":2896,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["parserizzato",{"_index":1934,"title":{},"body":{"injectables/FileService.html":{},"classes/PerseDataForModuleVisualizer.html":{}}}],["parseservice",{"_index":230,"title":{"injectables/ParseService.html":{}},"body":{"modules/AppModule.html":{},"components/ComposerComponent.html":{},"injectables/ParseService.html":{},"components/VisualizerComponent.html":{},"overview.html":{}}}],["parsetheater",{"_index":2879,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["parsetheater(id",{"_index":2936,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["parsetheaterfortheatervisualizer",{"_index":2880,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{}}}],["parsetheaterfortheatervisualizer(id",{"_index":2939,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{}}}],["parsing",{"_index":443,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["parte",{"_index":1653,"title":{},"body":{"classes/ExportModule.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["partendo",{"_index":1672,"title":{},"body":{"classes/ExportModule.html":{}}}],["particolare",{"_index":1282,"title":{},"body":{"components/DataInputV2Component.html":{},"components/HomeComponent.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["passaggio",{"_index":2068,"title":{},"body":{"components/HomeComponent.html":{}}}],["passare",{"_index":1304,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["passata",{"_index":2686,"title":{},"body":{"components/NavbarComponent.html":{}}}],["passati",{"_index":806,"title":{},"body":{"components/ComposerComponent.html":{},"components/NavbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["passato",{"_index":28,"title":{},"body":{"classes/Aoption.html":{},"classes/DataInputElement.html":{},"components/DataInputV2Component.html":{},"classes/ModalButton.html":{},"classes/ModalItem.html":{},"classes/NavbarElement.html":{},"classes/NavbarItem.html":{}}}],["path",{"_index":360,"title":{},"body":{"modules/AppRoutingModule.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"dependencies.html":{}}}],["per",{"_index":11,"title":{},"body":{"classes/Aoption.html":{},"components/AppComponent.html":{},"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaExport.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"components/ControlTemplate.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"components/DocsComponent.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/ExportModule.html":{},"injectables/FileService.html":{},"classes/FlavorApplication.html":{},"components/HomeComponent.html":{},"classes/HostNode.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModalButton.html":{},"components/ModalComponent.html":{},"classes/ModalItem.html":{},"injectables/ModalService.html":{},"classes/ModuleApplication.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleSimpleData.html":{},"interfaces/ModuleTopology.html":{},"classes/NavbarElement.html":{},"components/NavbarElementComponent.html":{},"classes/NavbarItem.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkNode.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/NodeTopologyElement.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SelectOption.html":{},"classes/SimpleModuleApplication.html":{},"classes/SingleDataInputReturned.html":{},"classes/SourceExport.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"components/TabnavComponent.html":{},"classes/TagsExport.html":{},"classes/TheaterApplication.html":{},"classes/TheaterExport.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/TheaterSimpleData.html":{},"interfaces/TheaterTopology.html":{},"injectables/TokenService.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{},"miscellaneous/functions.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["perch",{"_index":435,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["permette",{"_index":1361,"title":{},"body":{"components/DataItemComponent.html":{}}}],["permettono",{"_index":2945,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["persedataformodulecomposer",{"_index":3083,"title":{"classes/PerseDataForModuleComposer.html":{}},"body":{"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{}}}],["persedataformodulecomposer(this.flavorservice).parseflavorformodulecomposer",{"_index":3111,"title":{},"body":{"injectables/ParseService.html":{}}}],["persedataformodulevisualizer",{"_index":3087,"title":{"classes/PerseDataForModuleVisualizer.html":{}},"body":{"injectables/ParseService.html":{},"classes/PerseDataForModuleVisualizer.html":{}}}],["persedataformodulevisualizer(this.moduleservice).parsemoduleformodulevisualizer(id",{"_index":3110,"title":{},"body":{"injectables/ParseService.html":{}}}],["persedatafortheatercomposer",{"_index":3091,"title":{"classes/PerseDataForTheaterComposer.html":{}},"body":{"injectables/ParseService.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["persedatafortheatercomposer(this.moduleservice).parsemodulefortheatercomposer",{"_index":3108,"title":{},"body":{"injectables/ParseService.html":{}}}],["pi",{"_index":2219,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["picker",{"_index":330,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["place",{"_index":1230,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["placeholder",{"_index":1104,"title":{},"body":{"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["platform",{"_index":539,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["plugin",{"_index":269,"title":{},"body":{"modules/AppModule.html":{},"components/ControlTemplate.html":{},"components/HostComponent.html":{},"classes/HostNode.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"components/NetworkComponent.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"components/SubnetComponent.html":{},"classes/SubnetNode.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/_Control.html":{},"dependencies.html":{},"index.html":{}}}],["poi",{"_index":1317,"title":{},"body":{"components/DataInputV2Component.html":{},"classes/ExportModule.html":{},"injectables/ModalService.html":{}}}],["pointer",{"_index":1341,"title":{},"body":{"components/DataInputV2Component.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["popper",{"_index":300,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["popper.js",{"_index":3810,"title":{},"body":{"dependencies.html":{}}}],["popperjs/core",{"_index":3792,"title":{},"body":{"dependencies.html":{}}}],["port",{"_index":1006,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/ExportModule.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["port.name",{"_index":3045,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["port.subnets.foreach",{"_index":3046,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["port_dst",{"_index":465,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["port_name",{"_index":3044,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["port_src",{"_index":464,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["porta",{"_index":1013,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["portare",{"_index":1425,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["porte",{"_index":640,"title":{},"body":{"classes/AreaExport.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/ExportModule.html":{},"classes/HostModuleDTO.html":{},"classes/HostNode.html":{},"classes/HostPortModuleDTO.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkNode.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SourceExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/TheaterSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["portname",{"_index":1749,"title":{},"body":{"classes/ExportModule.html":{}}}],["ports",{"_index":1002,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/ExportModule.html":{},"classes/HostModuleDTO.html":{},"classes/HostPortModuleDTO.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["ports[portname",{"_index":1775,"title":{},"body":{"classes/ExportModule.html":{}}}],["portsimpledata",{"_index":977,"title":{"classes/PortSimpleData.html":{}},"body":{"classes/ConstraintsMSD.html":{},"classes/ExportModule.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["portsimpledata.relationships.push",{"_index":1762,"title":{},"body":{"classes/ExportModule.html":{}}}],["porttypeexport",{"_index":971,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/ExportModule.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["porttypeexport.port",{"_index":1754,"title":{},"body":{"classes/ExportModule.html":{}}}],["position",{"_index":2243,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["posizione",{"_index":2805,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["posizioni",{"_index":2786,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["possesso",{"_index":2309,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["possibile",{"_index":1228,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["possibilit",{"_index":1382,"title":{},"body":{"components/DataItemComponent.html":{},"injectables/ModalService.html":{},"components/OffcanvasComponent.html":{}}}],["possono",{"_index":1661,"title":{},"body":{"classes/ExportModule.html":{},"classes/ExportTheater.html":{}}}],["posto",{"_index":2814,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["poter",{"_index":839,"title":{},"body":{"components/ComposerComponent.html":{},"injectables/ExportService.html":{},"injectables/ModalService.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"components/VisualizerComponent.html":{}}}],["poterli",{"_index":3179,"title":{},"body":{"classes/PerseDataForTheaterComposer.html":{}}}],["potr",{"_index":2027,"title":{},"body":{"components/HomeComponent.html":{}}}],["predefinito",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"classes/InterfaceConstraints.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/ModalItem.html":{},"injectables/ModalService.html":{},"classes/ModuleApplication.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"injectables/ParseService.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"injectables/SpinnerService.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"classes/TheaterApplication.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/VisualizerComponent.html":{}}}],["predilige",{"_index":1254,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["predispone",{"_index":1277,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["preelaborazioni",{"_index":799,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["preferisce",{"_index":2972,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["prende",{"_index":460,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"classes/FlavorApplication.html":{},"components/HomeComponent.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["prendere",{"_index":450,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"components/VisualizerComponent.html":{}}}],["present",{"_index":736,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["presenta",{"_index":874,"title":{},"body":{"components/ComposerComponent.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"components/VisualizerComponent.html":{}}}],["presente",{"_index":598,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"components/OffcanvasComponent.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["presenti",{"_index":1000,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["preso",{"_index":876,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["prettamente",{"_index":429,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["pretty",{"_index":673,"title":{},"body":{"injectables/AttachmentsService.html":{},"dependencies.html":{}}}],["prevede",{"_index":1539,"title":{},"body":{"components/DocsComponent.html":{},"injectables/ExportService.html":{}}}],["prevenire",{"_index":141,"title":{},"body":{"components/AppComponent.html":{}}}],["previsto",{"_index":438,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["prima",{"_index":857,"title":{},"body":{"components/ComposerComponent.html":{},"components/DataInputV2Component.html":{},"classes/ExportModule.html":{},"components/TabnavComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"miscellaneous/functions.html":{}}}],["primary",{"_index":2417,"title":{},"body":{"classes/ModalButton.html":{},"classes/ModalItem.html":{},"injectables/ModalService.html":{}}}],["principale",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"injectables/ModalService.html":{}}}],["private",{"_index":138,"title":{},"body":{"components/AppComponent.html":{},"injectables/AttachmentsService.html":{},"components/ComposerComponent.html":{},"components/DocsComponent.html":{},"injectables/FlavorService.html":{},"components/HomeComponent.html":{},"injectables/ModuleService.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"injectables/StorageService.html":{},"injectables/TheaterService.html":{},"injectables/TokenService.html":{},"components/VisualizerComponent.html":{}}}],["probabile",{"_index":3012,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["problem",{"_index":938,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["procedere",{"_index":3708,"title":{},"body":{"components/UnderbarComponent.html":{}}}],["proceed",{"_index":729,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["processare",{"_index":1610,"title":{},"body":{"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{}}}],["processato",{"_index":1158,"title":{},"body":{"components/DataInputComponent.html":{}}}],["procura",{"_index":3152,"title":{},"body":{"classes/PerseDataForModuleVisualizer.html":{}}}],["prod",{"_index":3913,"title":{},"body":{"index.html":{}}}],["produce",{"_index":2929,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["producendo",{"_index":1356,"title":{},"body":{"components/DataItemComponent.html":{}}}],["producer",{"_index":1435,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["production",{"_index":3915,"title":{},"body":{"index.html":{}}}],["project",{"_index":3884,"title":{},"body":{"index.html":{}}}],["promise",{"_index":710,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/FileService.html":{},"injectables/FlavorService.html":{},"injectables/ModuleService.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"injectables/TheaterService.html":{},"miscellaneous/functions.html":{}}}],["promise((resolve",{"_index":1956,"title":{},"body":{"injectables/FileService.html":{},"injectables/FlavorService.html":{},"injectables/ModuleService.html":{},"injectables/TheaterService.html":{}}}],["promise.all",{"_index":2998,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["propeit",{"_index":635,"title":{},"body":{"classes/AreaExport.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesTSD.html":{},"classes/SourceExport.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{}}}],["properties",{"_index":476,"title":{"properties.html":{}},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"interfaces/CommonModule.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"classes/FlavorApplication.html":{},"classes/GenericParameterDTO.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"interfaces/ModuleTopology.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteConnection.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/SourceExport.html":{},"classes/StatisticItemDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterApplication.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheaterSimpleData.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/TypesCatalogueDTO.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["propertiesmisd",{"_index":634,"title":{"classes/PropertiesMISD.html":{}},"body":{"classes/AreaExport.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/ExportTheater.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesTSD.html":{},"classes/SourceExport.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{}}}],["propertiesmsd",{"_index":984,"title":{"classes/PropertiesMSD.html":{}},"body":{"classes/ConstraintsMSD.html":{},"classes/ExportModule.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["propertiesnsd",{"_index":1015,"title":{"classes/PropertiesNSD.html":{}},"body":{"classes/ConstraintsMSD.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["propertiesssd",{"_index":1019,"title":{"classes/PropertiesSSD.html":{}},"body":{"classes/ConstraintsMSD.html":{},"classes/ExportModule.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["propertiestsd",{"_index":612,"title":{"classes/PropertiesTSD.html":{}},"body":{"classes/AreaExport.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesTSD.html":{},"classes/SourceExport.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{}}}],["propriet",{"_index":15,"title":{},"body":{"classes/Aoption.html":{},"components/AppComponent.html":{},"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"classes/BlueprintFileDTO.html":{},"classes/BorderNetworkDTO.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputReturnedV2.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/DeployInstanceDTO.html":{},"components/DocsComponent.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"classes/FlavorApplication.html":{},"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"classes/HostModuleDTO.html":{},"classes/HostNode.html":{},"classes/HostPortModuleDTO.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModalButton.html":{},"components/ModalComponent.html":{},"classes/ModalItem.html":{},"injectables/ModalService.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"interfaces/ModuleTopology.html":{},"classes/NameMappingDTO.html":{},"classes/NavbarElement.html":{},"classes/NavbarItem.html":{},"classes/NetOSRouterDTO.html":{},"components/NetworkComponent.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkDTO.html":{},"classes/NetworkNode.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/NodeTopologyElement.html":{},"components/OffcanvasComponent.html":{},"classes/PageableDTO.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SelectOption.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/SingleDataInputReturned.html":{},"classes/SortDTO.html":{},"classes/SourceExport.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"classes/StatisticItemDTO.html":{},"injectables/StorageService.html":{},"components/SubnetComponent.html":{},"classes/SubnetDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"components/TabnavComponent.html":{},"classes/TabnavElement.html":{},"classes/TabnavItem.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/TheaterSimpleData.html":{},"interfaces/TheaterTopology.html":{},"classes/TheatreStatusDTO.html":{},"injectables/TokenService.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/TypesCatalogueDTO.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{},"properties.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["props",{"_index":1053,"title":{},"body":{"components/ControlTemplate.html":{},"classes/_Control.html":{}}}],["protected",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"components/ComposerComponent.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/VisualizerComponent.html":{}}}],["protractor",{"_index":3923,"title":{},"body":{"index.html":{}}}],["proveniente",{"_index":896,"title":{},"body":{"components/ComposerComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"components/VisualizerComponent.html":{}}}],["provenienti",{"_index":3073,"title":{},"body":{"injectables/ParseService.html":{}}}],["provide",{"_index":335,"title":{},"body":{"modules/AppModule.html":{}}}],["providedin",{"_index":674,"title":{},"body":{"injectables/AttachmentsService.html":{},"injectables/AuthGuard.html":{},"injectables/ExportService.html":{},"injectables/FileService.html":{},"injectables/FlavorService.html":{},"injectables/ModalService.html":{},"injectables/ModuleService.html":{},"injectables/ParseService.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"injectables/StorageService.html":{},"injectables/TheaterService.html":{},"injectables/TokenService.html":{}}}],["provider",{"_index":259,"title":{},"body":{"modules/AppModule.html":{},"classes/ConstraintsMSD.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["providerinitkeycloak",{"_index":333,"title":{},"body":{"modules/AppModule.html":{}}}],["providers",{"_index":239,"title":{},"body":{"modules/AppModule.html":{},"classes/ConstraintsMSD.html":{},"classes/ExportModule.html":{},"components/HostComponent.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"components/NetworkComponent.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"components/SubnetComponent.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["provvede",{"_index":3184,"title":{},"body":{"classes/PerseDataForTheaterComposer.html":{}}}],["provveder",{"_index":1261,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["ps",{"_index":426,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["pu",{"_index":1253,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["public",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"injectables/ModalService.html":{},"classes/ReteTheaterComposerSettings.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{}}}],["pulsante",{"_index":1383,"title":{},"body":{"components/DataItemComponent.html":{},"classes/ModalButton.html":{},"components/ModalComponent.html":{},"classes/ModalItem.html":{}}}],["pulsanti",{"_index":2441,"title":{},"body":{"components/ModalComponent.html":{}}}],["qs",{"_index":3812,"title":{},"body":{"dependencies.html":{}}}],["qualche",{"_index":1509,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["quando",{"_index":1167,"title":{},"body":{"components/DataInputComponent.html":{},"components/HomeComponent.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"components/OffcanvasComponent.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"components/TabnavComponent.html":{}}}],["quasi",{"_index":2481,"title":{},"body":{"injectables/ModalService.html":{}}}],["quasta",{"_index":2310,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["quattro",{"_index":2807,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["quei",{"_index":2944,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["quella",{"_index":456,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["quello",{"_index":2970,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["questa",{"_index":427,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"components/DataInputV2Component.html":{},"classes/FlavorApplication.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NetworkNode.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteConnection.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SimpleModuleApplication.html":{},"classes/SubnetNode.html":{},"classes/TheaterApplication.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["questi",{"_index":1666,"title":{},"body":{"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"injectables/ModalService.html":{}}}],["questo",{"_index":1365,"title":{},"body":{"components/DataItemComponent.html":{},"injectables/ModalService.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{}}}],["qui",{"_index":1511,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["radius",{"_index":1069,"title":{},"body":{"components/ControlTemplate.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["raggiungibile",{"_index":3432,"title":{},"body":{"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{}}}],["ram",{"_index":1979,"title":{},"body":{"classes/FlavorApplication.html":{},"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"components/HostComponent.html":{},"classes/HostNode.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/ReteHostInfo.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{}}}],["range",{"_index":2137,"title":{},"body":{"components/HomeComponent.html":{}}}],["rappresenta",{"_index":8,"title":{},"body":{"classes/Aoption.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"classes/NavbarElement.html":{},"classes/NavbarItem.html":{},"classes/NetworkNode.html":{},"components/OffcanvasComponent.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"components/TabnavComponent.html":{},"classes/TabnavElement.html":{},"classes/TabnavItem.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["rappresentazione",{"_index":983,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["rappresente",{"_index":2799,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["rc.1",{"_index":3819,"title":{},"body":{"dependencies.html":{}}}],["rc.2",{"_index":3816,"title":{},"body":{"dependencies.html":{}}}],["rc2",{"_index":3822,"title":{},"body":{"dependencies.html":{}}}],["reactiveformsmodule",{"_index":322,"title":{},"body":{"modules/AppModule.html":{}}}],["read",{"_index":1970,"title":{},"body":{"injectables/FileService.html":{}}}],["readme",{"_index":3927,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":711,"title":{},"body":{"injectables/AuthGuard.html":{},"components/ControlTemplate.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/_Control.html":{},"dependencies.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["readonlyplugin",{"_index":3346,"title":{},"body":{"classes/ReteModuleVisualizerSettings.html":{}}}],["recognized",{"_index":1723,"title":{},"body":{"classes/ExportModule.html":{}}}],["redirecturi",{"_index":721,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["redirezionamento",{"_index":2067,"title":{},"body":{"components/HomeComponent.html":{}}}],["redirezione",{"_index":832,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["redo",{"_index":3309,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"index.html":{}}}],["reduce",{"_index":1373,"title":{},"body":{"components/DataItemComponent.html":{},"components/OffcanvasComponent.html":{}}}],["reject",{"_index":1957,"title":{},"body":{"injectables/FileService.html":{},"injectables/FlavorService.html":{},"injectables/ModuleService.html":{},"injectables/TheaterService.html":{}}}],["reject(\"the",{"_index":1963,"title":{},"body":{"injectables/FileService.html":{}}}],["reject(\"unable",{"_index":1969,"title":{},"body":{"injectables/FileService.html":{}}}],["reject(e",{"_index":1967,"title":{},"body":{"injectables/FileService.html":{}}}],["reject(error",{"_index":2017,"title":{},"body":{"injectables/FlavorService.html":{},"injectables/ModuleService.html":{},"injectables/TheaterService.html":{}}}],["relation",{"_index":1740,"title":{},"body":{"classes/ExportModule.html":{}}}],["relationships",{"_index":1010,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/ExportModule.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["relationshipsexport",{"_index":1011,"title":{"classes/RelationshipsExport.html":{}},"body":{"classes/ConstraintsMSD.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["relationshipstypeexport",{"_index":972,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/ExportModule.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["relationshipstypeexport.connect_port",{"_index":1747,"title":{},"body":{"classes/ExportModule.html":{}}}],["relationshipstypeexport.contained_in",{"_index":1772,"title":{},"body":{"classes/ExportModule.html":{}}}],["relationshipstypeexport.depends_on",{"_index":1763,"title":{},"body":{"classes/ExportModule.html":{}}}],["relativa",{"_index":432,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["relative",{"_index":2244,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["relazioni",{"_index":644,"title":{},"body":{"classes/AreaExport.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/ExportModule.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/SourceExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["relevant",{"_index":2235,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["reload",{"_index":3903,"title":{},"body":{"index.html":{}}}],["remote_interface",{"_index":586,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/ExportTheater.html":{},"classes/GenericParameterDTO.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["remote_interface:string",{"_index":648,"title":{},"body":{"classes/AreaExport.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesTSD.html":{},"classes/SourceExport.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{}}}],["remove",{"_index":1374,"title":{},"body":{"components/DataItemComponent.html":{}}}],["rename(component",{"_index":3318,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["rende",{"_index":3431,"title":{},"body":{"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{}}}],["render",{"_index":268,"title":{},"body":{"modules/AppModule.html":{},"components/ControlTemplate.html":{},"components/HostComponent.html":{},"classes/HostNode.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"components/NetworkComponent.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"components/SubnetComponent.html":{},"classes/SubnetNode.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/_Control.html":{},"dependencies.html":{}}}],["rendering",{"_index":2780,"title":{},"body":{"components/OffcanvasComponent.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["renderizza",{"_index":3345,"title":{},"body":{"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["renderizzare",{"_index":1135,"title":{},"body":{"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{}}}],["repeat",{"_index":2164,"title":{},"body":{"components/HomeComponent.html":{}}}],["reperibili",{"_index":1685,"title":{},"body":{"classes/ExportModule.html":{},"classes/ExportTheater.html":{}}}],["reperimento",{"_index":837,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["reperire",{"_index":1540,"title":{},"body":{"components/DocsComponent.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["reperiti",{"_index":870,"title":{},"body":{"components/ComposerComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/ParseDataForTheaterVisualizer.html":{}}}],["reperito",{"_index":1544,"title":{},"body":{"components/DocsComponent.html":{},"classes/ExportModule.html":{}}}],["required",{"_index":725,"title":{},"body":{"injectables/AuthGuard.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"components/HomeComponent.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{}}}],["requiredroles",{"_index":726,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["requiredroles.every((role",{"_index":737,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["requiredroles.length",{"_index":734,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["res",{"_index":2015,"title":{},"body":{"injectables/FlavorService.html":{},"injectables/ModuleService.html":{},"injectables/TheaterService.html":{}}}],["reset",{"_index":234,"title":{},"body":{"modules/AppModule.html":{},"components/HomeComponent.html":{},"overview.html":{}}}],["resolve",{"_index":3654,"title":{},"body":{"injectables/TheaterService.html":{}}}],["resolve(data",{"_index":1962,"title":{},"body":{"injectables/FileService.html":{}}}],["resolve(res",{"_index":2016,"title":{},"body":{"injectables/FlavorService.html":{},"injectables/ModuleService.html":{},"injectables/TheaterService.html":{}}}],["resource_id",{"_index":1018,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["responsetype",{"_index":680,"title":{},"body":{"injectables/AttachmentsService.html":{},"components/DocsComponent.html":{}}}],["resposnse",{"_index":2526,"title":{},"body":{"injectables/ModalService.html":{}}}],["restituire",{"_index":2946,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["restituisce",{"_index":457,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["restituiscono",{"_index":1582,"title":{},"body":{"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{}}}],["restituzione",{"_index":1485,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["rete",{"_index":202,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/FlavorApplication.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"classes/HostNode.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"components/ModalComponent.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"classes/NetworkNode.html":{},"classes/NodeTopologyElement.html":{},"components/OffcanvasComponent.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SimpleModuleApplication.html":{},"components/SubnetComponent.html":{},"classes/SubnetNode.html":{},"components/TabnavComponent.html":{},"classes/TheaterApplication.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{},"dependencies.html":{}}}],["rete/types/core/data",{"_index":1699,"title":{},"body":{"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["retebasic",{"_index":2329,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["retebasicmoduleinfo",{"_index":2330,"title":{"classes/reteBasicModuleInfo.html":{}},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["retebasicmoduleinfo:15",{"_index":3243,"title":{},"body":{"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{}}}],["retebasicmoduleinfo:20",{"_index":3245,"title":{},"body":{"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{}}}],["retebasicmoduleinfo:21",{"_index":3248,"title":{},"body":{"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{}}}],["retebasicmoduleinfo:22",{"_index":3246,"title":{},"body":{"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{}}}],["retebasicmoduleinfo:23",{"_index":3244,"title":{},"body":{"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{}}}],["retebasicmoduleinfo:24",{"_index":3247,"title":{},"body":{"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{}}}],["retebasicmoduleinfo:25",{"_index":3249,"title":{},"body":{"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{}}}],["retebasicnodeinfo",{"_index":2328,"title":{"classes/reteBasicNodeInfo.html":{}},"body":{"classes/HostNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/SubnetNode.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["retebasicnodeinfo:10",{"_index":3241,"title":{},"body":{"classes/ReteHostInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{}}}],["retebasicnodeinfo:15",{"_index":3350,"title":{},"body":{"classes/ReteNetworkInfo.html":{}}}],["retebasicnodeinfo:18",{"_index":3354,"title":{},"body":{"classes/ReteSubnetInfo.html":{}}}],["retebasicnodeinfo:20",{"_index":3239,"title":{},"body":{"classes/ReteHostInfo.html":{}}}],["retebasicnodeinfo:8",{"_index":3240,"title":{},"body":{"classes/ReteHostInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{}}}],["retebasicnodeinfo:9",{"_index":3242,"title":{},"body":{"classes/ReteHostInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{}}}],["reteconnection",{"_index":463,"title":{"classes/ReteConnection.html":{}},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["retedisplaymoduledatamc",{"_index":3845,"title":{},"body":{"miscellaneous/functions.html":{}}}],["retedisplaymoduledatamc(module",{"_index":3874,"title":{},"body":{"miscellaneous/functions.html":{}}}],["retedisplaymoduledatamv",{"_index":3847,"title":{},"body":{"miscellaneous/functions.html":{}}}],["retedisplaymoduledatamv(module",{"_index":3875,"title":{},"body":{"miscellaneous/functions.html":{}}}],["retedisplaymoduledatatc",{"_index":3848,"title":{},"body":{"miscellaneous/functions.html":{}}}],["retedisplaymoduledatatc(module",{"_index":3876,"title":{},"body":{"miscellaneous/functions.html":{}}}],["retedisplaymoduledatatv",{"_index":3849,"title":{},"body":{"miscellaneous/functions.html":{}}}],["retedisplaymoduledatatv(module",{"_index":3877,"title":{},"body":{"miscellaneous/functions.html":{}}}],["retedisplaymoduleinstancetc",{"_index":3850,"title":{},"body":{"miscellaneous/functions.html":{}}}],["retedisplaymoduleinstancetc(node",{"_index":3878,"title":{},"body":{"miscellaneous/functions.html":{}}}],["retedisplaynodedatamv",{"_index":3851,"title":{},"body":{"miscellaneous/functions.html":{}}}],["retedisplaynodedatamv(node",{"_index":3880,"title":{},"body":{"miscellaneous/functions.html":{}}}],["retedisplaytheaterdatatc",{"_index":3852,"title":{},"body":{"miscellaneous/functions.html":{}}}],["retedisplaytheaterdatatc(theater",{"_index":3881,"title":{},"body":{"miscellaneous/functions.html":{}}}],["retedisplaytheaterdatatv",{"_index":3853,"title":{},"body":{"miscellaneous/functions.html":{}}}],["retedisplaytheaterdatatv(theater",{"_index":3882,"title":{},"body":{"miscellaneous/functions.html":{}}}],["retehostinfo",{"_index":385,"title":{"classes/ReteHostInfo.html":{}},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/EmptyNodeInfo.html":{},"classes/FlavorApplication.html":{},"classes/HostNode.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"miscellaneous/functions.html":{}}}],["retejs",{"_index":1034,"title":{},"body":{"components/ControlTemplate.html":{},"classes/_Control.html":{}}}],["retemirroringmoduleinstanceinfo",{"_index":392,"title":{"classes/ReteMirroringModuleInstanceInfo.html":{}},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/EmptyModuleInfo.html":{},"classes/FlavorApplication.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"miscellaneous/functions.html":{}}}],["retemodule",{"_index":266,"title":{},"body":{"modules/AppModule.html":{}}}],["retemodulecomposer",{"_index":844,"title":{},"body":{"components/ComposerComponent.html":{},"classes/ReteModuleComposerSettings.html":{},"components/VisualizerComponent.html":{}}}],["retemodulecomposercomponent",{"_index":201,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"overview.html":{}}}],["retemodulecomposersettings",{"_index":3256,"title":{"classes/ReteModuleComposerSettings.html":{}},"body":{"classes/ReteModuleComposerSettings.html":{}}}],["retemodulenodeinfo",{"_index":3946,"title":{},"body":{"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["retemodulevisualizer",{"_index":3336,"title":{},"body":{"classes/ReteModuleVisualizerSettings.html":{}}}],["retemodulevisualizercomponent",{"_index":203,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"overview.html":{}}}],["retemodulevisualizersettings",{"_index":3334,"title":{"classes/ReteModuleVisualizerSettings.html":{}},"body":{"classes/ReteModuleVisualizerSettings.html":{}}}],["retenetworkinfo",{"_index":388,"title":{"classes/ReteNetworkInfo.html":{}},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/EmptyNodeInfo.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NetworkNode.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteConnection.html":{},"classes/ReteNetworkInfo.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"miscellaneous/functions.html":{}}}],["retesubnetinfo",{"_index":390,"title":{"classes/ReteSubnetInfo.html":{}},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/EmptyNodeInfo.html":{},"classes/FlavorApplication.html":{},"classes/HostNode.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NetworkNode.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/SimpleModuleApplication.html":{},"classes/SubnetNode.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"miscellaneous/functions.html":{}}}],["retetheatercomposer",{"_index":847,"title":{},"body":{"components/ComposerComponent.html":{},"classes/ReteTheaterComposerSettings.html":{},"components/VisualizerComponent.html":{}}}],["retetheatercomposercomponent",{"_index":205,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"overview.html":{}}}],["retetheatercomposersettings",{"_index":3358,"title":{"classes/ReteTheaterComposerSettings.html":{}},"body":{"classes/ReteTheaterComposerSettings.html":{}}}],["retetheaterinternalservicemoduleinstanceinfo",{"_index":394,"title":{"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{}},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/EmptyModuleInfo.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"miscellaneous/functions.html":{}}}],["retetheatermoduleinstanceinfo",{"_index":396,"title":{"classes/ReteTheaterModuleInstanceInfo.html":{}},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/EmptyModuleInfo.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"classes/TheaterModuleInstanceNode.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"miscellaneous/functions.html":{}}}],["retetheatervisualizer",{"_index":3376,"title":{},"body":{"classes/ReteTheaterVisualizerSettings.html":{}}}],["retetheatervisualizercomponent",{"_index":206,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"overview.html":{}}}],["retetheatervisualizersettings",{"_index":3374,"title":{"classes/ReteTheaterVisualizerSettings.html":{}},"body":{"classes/ReteTheaterVisualizerSettings.html":{}}}],["return",{"_index":697,"title":{},"body":{"injectables/AttachmentsService.html":{},"injectables/AuthGuard.html":{},"components/DataInputV2Component.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"injectables/FlavorService.html":{},"components/HomeComponent.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"injectables/ModuleService.html":{},"classes/NetworkNode.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"injectables/StorageService.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"injectables/TheaterService.html":{},"injectables/TokenService.html":{},"components/UnderbarComponent.html":{}}}],["returnoutput",{"_index":1152,"title":{},"body":{"components/DataInputComponent.html":{}}}],["returnoutput(val",{"_index":1173,"title":{},"body":{"components/DataInputComponent.html":{}}}],["returns",{"_index":251,"title":{},"body":{"modules/AppModule.html":{},"injectables/AttachmentsService.html":{},"injectables/AuthGuard.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"injectables/FlavorService.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"classes/HostNode.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"injectables/ModuleService.html":{},"components/NavbarComponent.html":{},"components/NetworkComponent.html":{},"classes/NetworkNode.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"injectables/StorageService.html":{},"components/SubnetComponent.html":{},"classes/SubnetNode.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"injectables/TheaterService.html":{},"injectables/TokenService.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{},"miscellaneous/functions.html":{}}}],["revealed",{"_index":2233,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["rgb(41",{"_index":2719,"title":{},"body":{"components/NavbarElementComponent.html":{}}}],["rgba(0,0,0,.53)!important",{"_index":2829,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["ricavato",{"_index":3765,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["ricevere",{"_index":2489,"title":{},"body":{"injectables/ModalService.html":{}}}],["richiama",{"_index":851,"title":{},"body":{"components/ComposerComponent.html":{},"classes/ExportModule.html":{},"components/HomeComponent.html":{},"components/VisualizerComponent.html":{}}}],["richiamata",{"_index":849,"title":{},"body":{"components/ComposerComponent.html":{},"components/DataInputV2Component.html":{},"components/DocsComponent.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"components/NavbarComponent.html":{},"classes/NetworkNode.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SubnetNode.html":{},"components/TabnavComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"components/VisualizerComponent.html":{}}}],["richiamta",{"_index":2320,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["riconoscimento",{"_index":1266,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["riferimento",{"_index":746,"title":{},"body":{"classes/BlueprintFileDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/NameMappingDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TheaterDTO.html":{},"classes/TheatreStatusDTO.html":{}}}],["righe",{"_index":3321,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["right",{"_index":1401,"title":{},"body":{"components/DataItemComponent.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["riguarda",{"_index":3262,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["rimpocciolisci",{"_index":235,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["rimuove",{"_index":2982,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["riporato",{"_index":2971,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["rispettivamente",{"_index":1547,"title":{},"body":{"components/DocsComponent.html":{}}}],["rispettive",{"_index":826,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["risultante",{"_index":441,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["risultato",{"_index":55,"title":{},"body":{"classes/Aoption.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"injectables/AttachmentsService.html":{},"injectables/AuthGuard.html":{},"classes/BlueprintFileDTO.html":{},"classes/BorderNetworkDTO.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"components/ControlTemplate.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputReturnedV2.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/DeployInstanceDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"classes/FlavorApplication.html":{},"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"injectables/FlavorService.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"classes/HostModuleDTO.html":{},"classes/HostNode.html":{},"classes/HostPortModuleDTO.html":{},"components/HowToUseComponent.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModalButton.html":{},"components/ModalComponent.html":{},"classes/ModalItem.html":{},"injectables/ModalService.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"injectables/ModuleService.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"interfaces/ModuleTopology.html":{},"classes/NameMappingDTO.html":{},"components/NavbarComponent.html":{},"classes/NavbarElement.html":{},"components/NavbarElementComponent.html":{},"classes/NavbarItem.html":{},"classes/NetOSRouterDTO.html":{},"components/NetworkComponent.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkDTO.html":{},"classes/NetworkNode.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/NodeTopologyElement.html":{},"components/OffcanvasComponent.html":{},"classes/PageableDTO.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SelectOption.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/SingleDataInputReturned.html":{},"classes/SortDTO.html":{},"classes/SourceExport.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"classes/StatisticItemDTO.html":{},"injectables/StorageService.html":{},"components/SubnetComponent.html":{},"classes/SubnetDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"components/TabnavComponent.html":{},"classes/TabnavElement.html":{},"classes/TabnavItem.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"injectables/TheaterService.html":{},"classes/TheaterSimpleData.html":{},"interfaces/TheaterTopology.html":{},"classes/TheatreStatusDTO.html":{},"injectables/TokenService.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/TypesCatalogueDTO.html":{},"components/UnderbarComponent.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{},"routes.html":{}}}],["ritorato",{"_index":560,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["ritorna",{"_index":1298,"title":{},"body":{"components/DataInputV2Component.html":{},"injectables/ModalService.html":{},"components/NavbarComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"injectables/StorageService.html":{},"injectables/TokenService.html":{},"components/UnderbarComponent.html":{},"miscellaneous/functions.html":{}}}],["ritornare",{"_index":1933,"title":{},"body":{"injectables/FileService.html":{},"injectables/TokenService.html":{}}}],["ritornata",{"_index":1161,"title":{},"body":{"components/DataInputComponent.html":{}}}],["ritornati",{"_index":502,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["ritornato",{"_index":1290,"title":{},"body":{"components/DataInputV2Component.html":{},"classes/PageableDTO.html":{},"classes/SortDTO.html":{}}}],["ritorno",{"_index":1117,"title":{},"body":{"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputReturnedV2.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"components/HomeComponent.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModalButton.html":{},"classes/ModalItem.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{},"miscellaneous/functions.html":{}}}],["roles",{"_index":724,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["root",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"injectables/AttachmentsService.html":{},"injectables/AuthGuard.html":{},"injectables/ExportService.html":{},"injectables/FileService.html":{},"injectables/FlavorService.html":{},"injectables/ModalService.html":{},"injectables/ModuleService.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"injectables/StorageService.html":{},"injectables/TheaterService.html":{},"injectables/TokenService.html":{}}}],["root'},{'name",{"_index":172,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["rotate",{"_index":2722,"title":{},"body":{"components/NavbarElementComponent.html":{}}}],["rotatez(0",{"_index":2729,"title":{},"body":{"components/NavbarElementComponent.html":{}}}],["rotatez(180deg",{"_index":2731,"title":{},"body":{"components/NavbarElementComponent.html":{}}}],["rotatez(360deg",{"_index":2732,"title":{},"body":{"components/NavbarElementComponent.html":{}}}],["round",{"_index":2165,"title":{},"body":{"components/HomeComponent.html":{}}}],["rounded",{"_index":1421,"title":{},"body":{"components/DataItemComponent.html":{}}}],["route",{"_index":709,"title":{},"body":{"injectables/AuthGuard.html":{},"components/ComposerComponent.html":{},"components/HomeComponent.html":{},"components/VisualizerComponent.html":{}}}],["route.data.roles",{"_index":727,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["router",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"classes/BorderNetworkDTO.html":{},"components/ComposerComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"components/HomeComponent.html":{},"classes/NetOSRouterDTO.html":{},"classes/NetworkDTO.html":{},"classes/SubnetDTO.html":{},"components/VisualizerComponent.html":{}}}],["routermodule",{"_index":355,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":366,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":707,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["routes",{"_index":356,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"routes.html":{}}}],["routesguard",{"_index":359,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routessimple",{"_index":365,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routing",{"_index":2054,"title":{},"body":{"components/HomeComponent.html":{}}}],["routing.module",{"_index":261,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":354,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["rowmodules",{"_index":2986,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["rowtheater",{"_index":2887,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["rowtheater.blueprintfile.node_templates[rowtheater.name",{"_index":2973,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["rowtheater.name",{"_index":2977,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["rox.content",{"_index":1574,"title":{},"body":{"components/DocsComponent.html":{}}}],["rox.footer",{"_index":1575,"title":{},"body":{"components/DocsComponent.html":{}}}],["rox.header",{"_index":1568,"title":{},"body":{"components/DocsComponent.html":{}}}],["rpt",{"_index":2161,"title":{},"body":{"components/HomeComponent.html":{}}}],["run",{"_index":3897,"title":{},"body":{"index.html":{}}}],["running",{"_index":3916,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":130,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"injectables/ModalService.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"components/VisualizerComponent.html":{},"dependencies.html":{}}}],["salva",{"_index":1687,"title":{},"body":{"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"components/HomeComponent.html":{},"injectables/TokenService.html":{}}}],["salvare",{"_index":3458,"title":{},"body":{"injectables/StorageService.html":{},"injectables/TokenService.html":{}}}],["salvataggio",{"_index":1281,"title":{},"body":{"components/DataInputV2Component.html":{},"injectables/FileService.html":{}}}],["salvato",{"_index":3674,"title":{},"body":{"injectables/TokenService.html":{}}}],["sanitized",{"_index":1543,"title":{},"body":{"components/DocsComponent.html":{}}}],["sanitizer",{"_index":1537,"title":{},"body":{"components/DocsComponent.html":{}}}],["sarebbe",{"_index":1848,"title":{},"body":{"injectables/ExportService.html":{},"injectables/FileService.html":{}}}],["save",{"_index":1153,"title":{},"body":{"components/DataInputComponent.html":{}}}],["scaffolding",{"_index":3905,"title":{},"body":{"index.html":{}}}],["scale",{"_index":2723,"title":{},"body":{"components/NavbarElementComponent.html":{}}}],["scale(0.5",{"_index":2730,"title":{},"body":{"components/NavbarElementComponent.html":{}}}],["scale(1",{"_index":2728,"title":{},"body":{"components/NavbarElementComponent.html":{}}}],["scale(1.5",{"_index":2187,"title":{},"body":{"components/HomeComponent.html":{}}}],["scaleextent",{"_index":3323,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["scaricabile",{"_index":1821,"title":{},"body":{"injectables/ExportService.html":{}}}],["scaricare",{"_index":1846,"title":{},"body":{"injectables/ExportService.html":{},"injectables/FileService.html":{}}}],["sceglie",{"_index":2507,"title":{},"body":{"injectables/ModalService.html":{}}}],["scegliere",{"_index":2028,"title":{},"body":{"components/HomeComponent.html":{}}}],["scelta",{"_index":1263,"title":{},"body":{"components/DataInputV2Component.html":{},"components/HomeComponent.html":{},"injectables/ModalService.html":{}}}],["scelto",{"_index":854,"title":{},"body":{"components/ComposerComponent.html":{},"components/DataInputV2Component.html":{},"components/HomeComponent.html":{},"components/VisualizerComponent.html":{}}}],["schemas",{"_index":243,"title":{},"body":{"modules/AppModule.html":{}}}],["schermate",{"_index":2713,"title":{},"body":{"components/NavbarElementComponent.html":{}}}],["scopo",{"_index":796,"title":{},"body":{"components/ComposerComponent.html":{},"components/DataInputV2Component.html":{},"components/DocsComponent.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"classes/NetworkNode.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"injectables/TokenService.html":{},"components/VisualizerComponent.html":{},"miscellaneous/functions.html":{}}}],["screen",{"_index":2784,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["scrolling",{"_index":142,"title":{},"body":{"components/AppComponent.html":{}}}],["se",{"_index":344,"title":{},"body":{"modules/AppModule.html":{},"components/ComposerComponent.html":{},"components/DataInputV2Component.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"components/TabnavComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"components/VisualizerComponent.html":{}}}],["searchbar",{"_index":3305,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["secondary",{"_index":2418,"title":{},"body":{"classes/ModalButton.html":{},"classes/ModalItem.html":{},"injectables/ModalService.html":{}}}],["secondo",{"_index":2485,"title":{},"body":{"injectables/ModalService.html":{}}}],["see",{"_index":611,"title":{},"body":{"classes/AreaExport.html":{},"components/ComposerComponent.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputReturnedV2.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"components/DocsComponent.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"components/HomeComponent.html":{},"classes/HostNode.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModalButton.html":{},"components/ModalComponent.html":{},"classes/ModalItem.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleSimpleData.html":{},"components/NavbarComponent.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkNode.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{},"classes/SourceExport.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"components/TabnavComponent.html":{},"classes/TabnavElement.html":{},"classes/TabnavItem.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/TheaterSimpleData.html":{},"components/UnderbarComponent.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"components/VisualizerComponent.html":{}}}],["segno",{"_index":3057,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["segue",{"_index":3141,"title":{},"body":{"classes/PerseDataForModuleVisualizer.html":{}}}],["seguito",{"_index":2938,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["select",{"_index":2147,"title":{},"body":{"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["select_item",{"_index":2681,"title":{},"body":{"components/NavbarComponent.html":{}}}],["select_item(val",{"_index":2695,"title":{},"body":{"components/NavbarComponent.html":{}}}],["selectable",{"_index":1203,"title":{},"body":{"components/DataInputComponent.html":{}}}],["selected",{"_index":1964,"title":{},"body":{"injectables/FileService.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["selected_number",{"_index":1107,"title":{},"body":{"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{}}}],["selectedfile",{"_index":1926,"title":{},"body":{"injectables/FileService.html":{}}}],["selection",{"_index":1097,"title":{},"body":{"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{}}}],["selectoption",{"_index":1108,"title":{"classes/SelectOption.html":{}},"body":{"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{}}}],["selector",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["seleziona",{"_index":2056,"title":{},"body":{"components/HomeComponent.html":{},"components/TabnavComponent.html":{},"components/UnderbarComponent.html":{}}}],["selezionata",{"_index":2075,"title":{},"body":{"components/HomeComponent.html":{},"components/TabnavComponent.html":{}}}],["selezionato",{"_index":2691,"title":{},"body":{"components/NavbarComponent.html":{}}}],["selezionatp",{"_index":3713,"title":{},"body":{"components/UnderbarComponent.html":{}}}],["selezioni",{"_index":1114,"title":{},"body":{"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{}}}],["semplicemente",{"_index":1662,"title":{},"body":{"classes/ExportModule.html":{},"classes/ExportTheater.html":{}}}],["senza",{"_index":2334,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"miscellaneous/functions.html":{}}}],["separator",{"_index":3730,"title":{},"body":{"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{}}}],["sequence",{"_index":590,"title":{},"body":{"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/ExportTheater.html":{},"classes/GenericParameterDTO.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesTSD.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/SourceExport.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/TheaterSimpleData.html":{},"classes/TypesCatalogueDTO.html":{},"classes/reteBasicModuleInfo.html":{}}}],["sequenza",{"_index":749,"title":{},"body":{"classes/BlueprintFileDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/NameMappingDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TheaterDTO.html":{},"classes/TheatreStatusDTO.html":{}}}],["serivizio",{"_index":3428,"title":{},"body":{"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{}}}],["serve",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"components/DataInputV2Component.html":{},"classes/ExportModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"injectables/TokenService.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"index.html":{}}}],["server",{"_index":1476,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"injectables/TokenService.html":{},"index.html":{}}}],["service",{"_index":1473,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"injectables/StorageService.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["services/api/module.service",{"_index":304,"title":{},"body":{"modules/AppModule.html":{}}}],["services/api/theater.service",{"_index":305,"title":{},"body":{"modules/AppModule.html":{}}}],["services/application/modal/modal.service",{"_index":132,"title":{},"body":{"components/AppComponent.html":{}}}],["services/application/parse/parse.service",{"_index":319,"title":{},"body":{"modules/AppModule.html":{}}}],["services/application/spinner/spinner.service",{"_index":133,"title":{},"body":{"components/AppComponent.html":{}}}],["services/token/token.service",{"_index":303,"title":{},"body":{"modules/AppModule.html":{}}}],["servita",{"_index":1527,"title":{},"body":{"components/DocsComponent.html":{}}}],["servizio",{"_index":1818,"title":{},"body":{"injectables/ExportService.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"injectables/ModalService.html":{},"injectables/ParseService.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"injectables/TokenService.html":{}}}],["set",{"_index":1274,"title":{},"body":{"components/DataInputV2Component.html":{},"components/ModalComponent.html":{},"components/OffcanvasComponent.html":{},"injectables/StorageService.html":{}}}],["setconfirmationmodal",{"_index":2493,"title":{},"body":{"injectables/ModalService.html":{}}}],["setconfirmationmodal(text_content",{"_index":2498,"title":{},"body":{"injectables/ModalService.html":{}}}],["setdata(data",{"_index":3462,"title":{},"body":{"injectables/StorageService.html":{}}}],["setheaders",{"_index":3668,"title":{},"body":{"injectables/TokenService.html":{}}}],["setheaders(val",{"_index":3678,"title":{},"body":{"injectables/TokenService.html":{}}}],["sethttpgetoption",{"_index":3669,"title":{},"body":{"injectables/TokenService.html":{}}}],["sethttpgetoption(val",{"_index":3680,"title":{},"body":{"injectables/TokenService.html":{}}}],["setresponse",{"_index":2494,"title":{},"body":{"injectables/ModalService.html":{}}}],["setresponse(val",{"_index":2501,"title":{},"body":{"injectables/ModalService.html":{}}}],["setshow(val",{"_index":2454,"title":{},"body":{"components/ModalComponent.html":{},"components/OffcanvasComponent.html":{}}}],["setspinner",{"_index":3444,"title":{},"body":{"injectables/SpinnerService.html":{}}}],["setspinner(show",{"_index":3440,"title":{},"body":{"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{}}}],["setta",{"_index":2448,"title":{},"body":{"components/ModalComponent.html":{},"injectables/ModalService.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"components/TabnavComponent.html":{},"injectables/TokenService.html":{}}}],["settaggi",{"_index":3260,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["settaggio",{"_index":3427,"title":{},"body":{"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"miscellaneous/functions.html":{}}}],["settare",{"_index":2504,"title":{},"body":{"injectables/ModalService.html":{},"injectables/StorageService.html":{},"injectables/TokenService.html":{}}}],["settings/controls/control",{"_index":288,"title":{},"body":{"modules/AppModule.html":{}}}],["settings/controls/control.ts",{"_index":1030,"title":{},"body":{"components/ControlTemplate.html":{},"classes/_Control.html":{}}}],["settings/controls/control.ts:15",{"_index":1043,"title":{},"body":{"components/ControlTemplate.html":{}}}],["settings/controls/control.ts:16",{"_index":1042,"title":{},"body":{"components/ControlTemplate.html":{}}}],["settings/controls/control.ts:17",{"_index":1040,"title":{},"body":{"components/ControlTemplate.html":{}}}],["settings/controls/control.ts:18",{"_index":1041,"title":{},"body":{"components/ControlTemplate.html":{}}}],["settings/controls/control.ts:20",{"_index":1044,"title":{},"body":{"components/ControlTemplate.html":{}}}],["settings/controls/control.ts:31",{"_index":3780,"title":{},"body":{"classes/_Control.html":{}}}],["settings/controls/control.ts:32",{"_index":3779,"title":{},"body":{"classes/_Control.html":{}}}],["settings/controls/control.ts:34",{"_index":3781,"title":{},"body":{"classes/_Control.html":{}}}],["settings/controls/control.ts:50",{"_index":3782,"title":{},"body":{"classes/_Control.html":{}}}],["settings/controls/control.ts:55",{"_index":3783,"title":{},"body":{"classes/_Control.html":{}}}],["settings/models/retemodeltype",{"_index":2218,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["settings/nodes/rete",{"_index":277,"title":{},"body":{"modules/AppModule.html":{},"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/FlavorApplication.html":{},"components/HostComponent.html":{},"classes/HostNode.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"components/NetworkComponent.html":{},"classes/NetworkNode.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SimpleModuleApplication.html":{},"components/SubnetComponent.html":{},"classes/SubnetNode.html":{},"classes/TheaterApplication.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"miscellaneous/functions.html":{}}}],["settings/nodes/retebasic.ts",{"_index":3937,"title":{},"body":{"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["settings/nodes/retebasic.ts:10",{"_index":3948,"title":{},"body":{"classes/reteBasicNodeInfo.html":{}}}],["settings/nodes/retebasic.ts:11",{"_index":3950,"title":{},"body":{"classes/reteBasicNodeInfo.html":{}}}],["settings/nodes/retebasic.ts:20",{"_index":3939,"title":{},"body":{"classes/reteBasicModuleInfo.html":{}}}],["settings/nodes/retebasic.ts:21",{"_index":3942,"title":{},"body":{"classes/reteBasicModuleInfo.html":{}}}],["settings/nodes/retebasic.ts:22",{"_index":3940,"title":{},"body":{"classes/reteBasicModuleInfo.html":{}}}],["settings/nodes/retebasic.ts:23",{"_index":3938,"title":{},"body":{"classes/reteBasicModuleInfo.html":{}}}],["settings/nodes/retebasic.ts:24",{"_index":3941,"title":{},"body":{"classes/reteBasicModuleInfo.html":{}}}],["settings/nodes/retebasic.ts:25",{"_index":3943,"title":{},"body":{"classes/reteBasicModuleInfo.html":{}}}],["settings/nodes/retebasic.ts:26",{"_index":3944,"title":{},"body":{"classes/reteBasicModuleInfo.html":{}}}],["settings/nodes/retebasic.ts:8",{"_index":3947,"title":{},"body":{"classes/reteBasicNodeInfo.html":{}}}],["settings/nodes/retebasic.ts:9",{"_index":3949,"title":{},"body":{"classes/reteBasicNodeInfo.html":{}}}],["settings/retemodulecomposersettings.ts",{"_index":3258,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{}}}],["settings/retemodulecomposersettings.ts:20",{"_index":3271,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{}}}],["settings/retemodulecomposersettings.ts:21",{"_index":3272,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{}}}],["settings/retemodulecomposersettings.ts:22",{"_index":3270,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{}}}],["settings/retemodulecomposersettings.ts:23",{"_index":3273,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{}}}],["settings/retemodulecomposersettings.ts:24",{"_index":3269,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{}}}],["settings/retemodulecomposersettings.ts:43",{"_index":3274,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{}}}],["settings/retemodulevisualizersettings.ts",{"_index":3335,"title":{},"body":{"classes/ReteModuleVisualizerSettings.html":{}}}],["settings/retemodulevisualizersettings.ts:107",{"_index":3344,"title":{},"body":{"classes/ReteModuleVisualizerSettings.html":{}}}],["settings/retemodulevisualizersettings.ts:21",{"_index":3340,"title":{},"body":{"classes/ReteModuleVisualizerSettings.html":{}}}],["settings/retemodulevisualizersettings.ts:22",{"_index":3341,"title":{},"body":{"classes/ReteModuleVisualizerSettings.html":{}}}],["settings/retemodulevisualizersettings.ts:23",{"_index":3339,"title":{},"body":{"classes/ReteModuleVisualizerSettings.html":{}}}],["settings/retemodulevisualizersettings.ts:24",{"_index":3342,"title":{},"body":{"classes/ReteModuleVisualizerSettings.html":{}}}],["settings/retemodulevisualizersettings.ts:25",{"_index":3338,"title":{},"body":{"classes/ReteModuleVisualizerSettings.html":{}}}],["settings/retemodulevisualizersettings.ts:44",{"_index":3343,"title":{},"body":{"classes/ReteModuleVisualizerSettings.html":{}}}],["settings/retetheatercomposersettings.ts",{"_index":3359,"title":{},"body":{"classes/ReteTheaterComposerSettings.html":{}}}],["settings/retetheatercomposersettings.ts:17",{"_index":3362,"title":{},"body":{"classes/ReteTheaterComposerSettings.html":{}}}],["settings/retetheatercomposersettings.ts:18",{"_index":3363,"title":{},"body":{"classes/ReteTheaterComposerSettings.html":{}}}],["settings/retetheatercomposersettings.ts:19",{"_index":3361,"title":{},"body":{"classes/ReteTheaterComposerSettings.html":{}}}],["settings/retetheatercomposersettings.ts:20",{"_index":3364,"title":{},"body":{"classes/ReteTheaterComposerSettings.html":{}}}],["settings/retetheatercomposersettings.ts:21",{"_index":3360,"title":{},"body":{"classes/ReteTheaterComposerSettings.html":{}}}],["settings/retetheatercomposersettings.ts:42",{"_index":3365,"title":{},"body":{"classes/ReteTheaterComposerSettings.html":{}}}],["settings/retetheatervisualizersettings.ts",{"_index":3375,"title":{},"body":{"classes/ReteTheaterVisualizerSettings.html":{}}}],["settings/retetheatervisualizersettings.ts:108",{"_index":3383,"title":{},"body":{"classes/ReteTheaterVisualizerSettings.html":{}}}],["settings/retetheatervisualizersettings.ts:18",{"_index":3379,"title":{},"body":{"classes/ReteTheaterVisualizerSettings.html":{}}}],["settings/retetheatervisualizersettings.ts:19",{"_index":3380,"title":{},"body":{"classes/ReteTheaterVisualizerSettings.html":{}}}],["settings/retetheatervisualizersettings.ts:20",{"_index":3378,"title":{},"body":{"classes/ReteTheaterVisualizerSettings.html":{}}}],["settings/retetheatervisualizersettings.ts:21",{"_index":3381,"title":{},"body":{"classes/ReteTheaterVisualizerSettings.html":{}}}],["settings/retetheatervisualizersettings.ts:22",{"_index":3377,"title":{},"body":{"classes/ReteTheaterVisualizerSettings.html":{}}}],["settings/retetheatervisualizersettings.ts:42",{"_index":3382,"title":{},"body":{"classes/ReteTheaterVisualizerSettings.html":{}}}],["settings/settings/displaydata.ts",{"_index":3873,"title":{},"body":{"miscellaneous/functions.html":{}}}],["settings/settings/editor",{"_index":3257,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["settings/style/styleiconconfig",{"_index":2217,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["settoken",{"_index":3670,"title":{},"body":{"injectables/TokenService.html":{}}}],["settoken(val",{"_index":3682,"title":{},"body":{"injectables/TokenService.html":{}}}],["setvalue",{"_index":3777,"title":{},"body":{"classes/_Control.html":{}}}],["setvalue(val",{"_index":1065,"title":{},"body":{"components/ControlTemplate.html":{},"components/DataInputV2Component.html":{},"classes/_Control.html":{}}}],["shadow",{"_index":2194,"title":{},"body":{"components/HomeComponent.html":{},"components/OffcanvasComponent.html":{}}}],["show",{"_index":2432,"title":{},"body":{"components/ModalComponent.html":{},"injectables/ModalService.html":{},"components/OffcanvasComponent.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{}}}],["show(val",{"_index":2456,"title":{},"body":{"components/ModalComponent.html":{},"components/OffcanvasComponent.html":{}}}],["show/hide",{"_index":2094,"title":{},"body":{"components/HomeComponent.html":{},"injectables/ModalService.html":{}}}],["showchange",{"_index":2434,"title":{},"body":{"components/ModalComponent.html":{},"components/OffcanvasComponent.html":{}}}],["showconfirmationmodal",{"_index":2495,"title":{},"body":{"injectables/ModalService.html":{}}}],["showconfirmationmodal(text_content",{"_index":2509,"title":{},"body":{"injectables/ModalService.html":{}}}],["showcontextmenu",{"_index":3893,"title":{},"body":{"index.html":{}}}],["showfooter",{"_index":2376,"title":{},"body":{"components/MirroringModuleInstanceComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["showhidesocket",{"_index":2209,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["showinputoutlet",{"_index":2206,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["showmodal",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"components/ModalComponent.html":{}}}],["showoutputoutlet",{"_index":2207,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["showports",{"_index":2208,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["showspinner",{"_index":79,"title":{},"body":{"components/AppComponent.html":{}}}],["shrink",{"_index":1572,"title":{},"body":{"components/DocsComponent.html":{}}}],["si",{"_index":823,"title":{},"body":{"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputV2Component.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"injectables/ModalService.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"injectables/StorageService.html":{},"components/TabnavComponent.html":{},"injectables/TokenService.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{},"miscellaneous/functions.html":{}}}],["siano",{"_index":3519,"title":{},"body":{"components/TabnavComponent.html":{},"components/UnderbarComponent.html":{}}}],["side",{"_index":1420,"title":{},"body":{"components/DataItemComponent.html":{},"components/OffcanvasComponent.html":{}}}],["simple",{"_index":549,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["simpleareadto",{"_index":408,"title":{"classes/SimpleAreaDTO.html":{}},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"interfaces/CommonModule.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/FlavorApplication.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterApplication.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/TypesCatalogueDTO.html":{}}}],["simpleareadto:191",{"_index":482,"title":{},"body":{"classes/AreaColorDTO.html":{}}}],["simpleareadto:192",{"_index":483,"title":{},"body":{"classes/AreaColorDTO.html":{}}}],["simplemoduleapplication",{"_index":462,"title":{"classes/SimpleModuleApplication.html":{}},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"miscellaneous/functions.html":{}}}],["simplemoduledto",{"_index":404,"title":{"classes/SimpleModuleDTO.html":{}},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"interfaces/CommonModule.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/FlavorApplication.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"injectables/ModuleService.html":{},"classes/ModuleStatusDTO.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteConnection.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterApplication.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"injectables/TheaterService.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/TypesCatalogueDTO.html":{}}}],["simplemoduledto:102",{"_index":2562,"title":{},"body":{"classes/ModuleApplication.html":{},"classes/ModuleDTO.html":{},"classes/SimpleModuleApplication.html":{}}}],["simplemoduledto:103",{"_index":2563,"title":{},"body":{"classes/ModuleApplication.html":{},"classes/ModuleDTO.html":{},"classes/SimpleModuleApplication.html":{}}}],["simplemoduledto:104",{"_index":2564,"title":{},"body":{"classes/ModuleApplication.html":{},"classes/ModuleDTO.html":{},"classes/SimpleModuleApplication.html":{}}}],["simplemoduledto:105",{"_index":2565,"title":{},"body":{"classes/ModuleApplication.html":{},"classes/ModuleDTO.html":{},"classes/SimpleModuleApplication.html":{}}}],["simplemoduledto:106",{"_index":2566,"title":{},"body":{"classes/ModuleApplication.html":{},"classes/ModuleDTO.html":{},"classes/SimpleModuleApplication.html":{}}}],["simplemoduledto:107",{"_index":2567,"title":{},"body":{"classes/ModuleApplication.html":{},"classes/ModuleDTO.html":{},"classes/SimpleModuleApplication.html":{}}}],["simplemoduledto:108",{"_index":2568,"title":{},"body":{"classes/ModuleApplication.html":{},"classes/ModuleDTO.html":{},"classes/SimpleModuleApplication.html":{}}}],["simplemoduledto:109",{"_index":2569,"title":{},"body":{"classes/ModuleApplication.html":{},"classes/ModuleDTO.html":{},"classes/SimpleModuleApplication.html":{}}}],["simplemoduledto:110",{"_index":2570,"title":{},"body":{"classes/ModuleApplication.html":{},"classes/ModuleDTO.html":{},"classes/SimpleModuleApplication.html":{}}}],["simplemoduledto:111",{"_index":2571,"title":{},"body":{"classes/ModuleApplication.html":{},"classes/ModuleDTO.html":{},"classes/SimpleModuleApplication.html":{}}}],["simplemoduledto:112",{"_index":2572,"title":{},"body":{"classes/ModuleApplication.html":{},"classes/ModuleDTO.html":{},"classes/SimpleModuleApplication.html":{}}}],["simplemoduledto:113",{"_index":2573,"title":{},"body":{"classes/ModuleApplication.html":{},"classes/ModuleDTO.html":{},"classes/SimpleModuleApplication.html":{}}}],["simplemoduledto:114",{"_index":2574,"title":{},"body":{"classes/ModuleApplication.html":{},"classes/ModuleDTO.html":{},"classes/SimpleModuleApplication.html":{}}}],["simplemoduledto:115",{"_index":2575,"title":{},"body":{"classes/ModuleApplication.html":{},"classes/ModuleDTO.html":{},"classes/SimpleModuleApplication.html":{}}}],["simplemoduledto:116",{"_index":2576,"title":{},"body":{"classes/ModuleApplication.html":{},"classes/ModuleDTO.html":{},"classes/SimpleModuleApplication.html":{}}}],["simplemoduleroot",{"_index":3858,"title":{},"body":{"miscellaneous/functions.html":{}}}],["singledatainputreturned",{"_index":1120,"title":{"classes/SingleDataInputReturned.html":{}},"body":{"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{}}}],["singlenetwork",{"_index":1786,"title":{},"body":{"classes/ExportModule.html":{}}}],["singlenetwork[network.data.name",{"_index":1788,"title":{},"body":{"classes/ExportModule.html":{}}}],["singlenode",{"_index":1738,"title":{},"body":{"classes/ExportModule.html":{}}}],["singlenode[node.data.name",{"_index":1748,"title":{},"body":{"classes/ExportModule.html":{}}}],["singlesubnet",{"_index":1777,"title":{},"body":{"classes/ExportModule.html":{}}}],["singlesubnet[subnet.data.name",{"_index":1785,"title":{},"body":{"classes/ExportModule.html":{}}}],["singola",{"_index":3533,"title":{},"body":{"classes/TabnavElement.html":{},"classes/TabnavItem.html":{}}}],["singoli",{"_index":452,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"components/NavbarComponent.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["singolo",{"_index":46,"title":{},"body":{"classes/Aoption.html":{},"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NavbarElement.html":{},"classes/NavbarItem.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/SelectOption.html":{},"classes/SimpleModuleApplication.html":{},"classes/SingleDataInputReturned.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{}}}],["sinistra",{"_index":2788,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["sinonimi",{"_index":1463,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["sinonimo",{"_index":1606,"title":{},"body":{"classes/EmptyModuleInfo.html":{}}}],["sistma",{"_index":1437,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["situate",{"_index":2983,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["situato",{"_index":3430,"title":{},"body":{"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{}}}],["sixsteen",{"_index":1452,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["size",{"_index":509,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"components/ControlTemplate.html":{},"components/DataInputV2Component.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TypesCatalogueDTO.html":{}}}],["size/2",{"_index":2267,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["sizing",{"_index":1083,"title":{},"body":{"components/ControlTemplate.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["small",{"_index":1345,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["smr",{"_index":3007,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["smr.name",{"_index":3019,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["sn",{"_index":3035,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["snap",{"_index":3322,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["socket",{"_index":2262,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["sockets/socket",{"_index":2325,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["solamente",{"_index":1691,"title":{},"body":{"classes/ExportModule.html":{}}}],["solid",{"_index":1076,"title":{},"body":{"components/ControlTemplate.html":{},"components/DataItemComponent.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["solo",{"_index":1742,"title":{},"body":{"classes/ExportModule.html":{}}}],["sommario",{"_index":3933,"title":{},"body":{"overview.html":{}}}],["sono",{"_index":911,"title":{},"body":{"components/ComposerComponent.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"components/OffcanvasComponent.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"components/VisualizerComponent.html":{}}}],["sopra",{"_index":2790,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["sort",{"_index":510,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/PageableDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/SortDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["sortdto",{"_index":497,"title":{"classes/SortDTO.html":{}},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/PageableDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/SortDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["sorted",{"_index":2862,"title":{},"body":{"classes/PageableDTO.html":{},"classes/SortDTO.html":{}}}],["sorting",{"_index":3414,"title":{},"body":{"classes/SortDTO.html":{}}}],["sotto",{"_index":2789,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["sottoforma",{"_index":1820,"title":{},"body":{"injectables/ExportService.html":{},"injectables/FileService.html":{},"classes/ParseDataForTheaterVisualizer.html":{}}}],["sottoposta",{"_index":3702,"title":{},"body":{"components/UnderbarComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/Aoption.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"injectables/AttachmentsService.html":{},"injectables/AuthGuard.html":{},"classes/BlueprintFileDTO.html":{},"classes/BorderNetworkDTO.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"components/ControlTemplate.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputReturnedV2.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/DeployInstanceDTO.html":{},"components/DocsComponent.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"classes/FlavorApplication.html":{},"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"injectables/FlavorService.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"classes/HostModuleDTO.html":{},"classes/HostNode.html":{},"classes/HostPortModuleDTO.html":{},"components/HowToUseComponent.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModalButton.html":{},"components/ModalComponent.html":{},"classes/ModalItem.html":{},"injectables/ModalService.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"injectables/ModuleService.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"interfaces/ModuleTopology.html":{},"classes/NameMappingDTO.html":{},"components/NavbarComponent.html":{},"classes/NavbarElement.html":{},"components/NavbarElementComponent.html":{},"classes/NavbarItem.html":{},"classes/NetOSRouterDTO.html":{},"components/NetworkComponent.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkDTO.html":{},"classes/NetworkNode.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/NodeTopologyElement.html":{},"components/OffcanvasComponent.html":{},"classes/PageableDTO.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SelectOption.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/SingleDataInputReturned.html":{},"classes/SortDTO.html":{},"classes/SourceExport.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"classes/StatisticItemDTO.html":{},"injectables/StorageService.html":{},"components/SubnetComponent.html":{},"classes/SubnetDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"components/TabnavComponent.html":{},"classes/TabnavElement.html":{},"classes/TabnavItem.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"injectables/TheaterService.html":{},"classes/TheaterSimpleData.html":{},"interfaces/TheaterTopology.html":{},"classes/TheatreStatusDTO.html":{},"injectables/TokenService.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/TypesCatalogueDTO.html":{},"components/UnderbarComponent.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{},"index.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["sourceexport",{"_index":637,"title":{"classes/SourceExport.html":{}},"body":{"classes/AreaExport.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesTSD.html":{},"classes/SourceExport.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{}}}],["sources",{"_index":636,"title":{},"body":{"classes/AreaExport.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/ExportTheater.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesTSD.html":{},"classes/SourceExport.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{}}}],["space",{"_index":1416,"title":{},"body":{"components/DataItemComponent.html":{}}}],["specifiche",{"_index":1324,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["spinner",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ComposerComponent.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"components/VisualizerComponent.html":{},"dependencies.html":{}}}],["spinnerdata",{"_index":3421,"title":{"classes/SpinnerData.html":{}},"body":{"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{}}}],["spinnerservice",{"_index":81,"title":{"injectables/SpinnerService.html":{}},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"components/VisualizerComponent.html":{}}}],["spinnerservice.getspinner",{"_index":147,"title":{},"body":{"components/AppComponent.html":{}}}],["square",{"_index":1397,"title":{},"body":{"components/DataItemComponent.html":{},"components/OffcanvasComponent.html":{}}}],["src/.../app.init.ts",{"_index":3844,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../displaydata.ts",{"_index":3846,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../exportto.ts",{"_index":3837,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../hostnode.ts",{"_index":3838,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../mirroringmoduleinstancenode.ts",{"_index":3840,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../networknode.ts",{"_index":3839,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../parsecommonelement.ts",{"_index":3836,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../subnetnode.ts",{"_index":3843,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../theaterinternalservicemoduleinstancenode.ts",{"_index":3841,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../theatermoduleinstancenode.ts",{"_index":3842,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/app",{"_index":353,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":63,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:22",{"_index":125,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:29",{"_index":112,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:30",{"_index":110,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:31",{"_index":123,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:36",{"_index":101,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:37",{"_index":90,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:48",{"_index":105,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:49",{"_index":122,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":236,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/app.module.ts:160",{"_index":249,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/components/data",{"_index":1085,"title":{},"body":{"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputReturnedV2.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{}}}],["src/app/components/modal/modal.component.ts",{"_index":2425,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/components/modal/modal.component.ts:20",{"_index":2437,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/components/modal/modal.component.ts:26",{"_index":2450,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/components/modal/modal.component.ts:33",{"_index":2438,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/components/modal/modal.component.ts:37",{"_index":2453,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/components/modal/modal.component.ts:40",{"_index":2442,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/components/modal/modal.component.ts:46",{"_index":2435,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/components/modal/modal.component.ts:58",{"_index":2447,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/components/modal/modal.component.ts:66",{"_index":2449,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/components/modal/modal.component.ts:75",{"_index":2444,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/components/modal/modaltype",{"_index":2102,"title":{},"body":{"components/HomeComponent.html":{},"injectables/ModalService.html":{}}}],["src/app/components/modal/modaltype.ts",{"_index":2412,"title":{},"body":{"classes/ModalButton.html":{},"classes/ModalItem.html":{}}}],["src/app/components/modal/modaltype.ts:10",{"_index":2469,"title":{},"body":{"classes/ModalItem.html":{}}}],["src/app/components/modal/modaltype.ts:11",{"_index":2468,"title":{},"body":{"classes/ModalItem.html":{}}}],["src/app/components/modal/modaltype.ts:12",{"_index":2467,"title":{},"body":{"classes/ModalItem.html":{}}}],["src/app/components/modal/modaltype.ts:20",{"_index":2415,"title":{},"body":{"classes/ModalButton.html":{}}}],["src/app/components/modal/modaltype.ts:21",{"_index":2416,"title":{},"body":{"classes/ModalButton.html":{}}}],["src/app/components/modal/modaltype.ts:22",{"_index":2421,"title":{},"body":{"classes/ModalButton.html":{}}}],["src/app/components/modal/modaltype.ts:8",{"_index":2471,"title":{},"body":{"classes/ModalItem.html":{}}}],["src/app/components/modal/modaltype.ts:9",{"_index":2470,"title":{},"body":{"classes/ModalItem.html":{}}}],["src/app/components/navbar/navbar.component.ts",{"_index":2675,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:19",{"_index":2685,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:23",{"_index":2689,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:27",{"_index":2683,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:39",{"_index":2692,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:57",{"_index":2696,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbartype.ts",{"_index":6,"title":{},"body":{"classes/Aoption.html":{},"classes/NavbarElement.html":{},"classes/NavbarItem.html":{}}}],["src/app/components/navbar/navbartype.ts:10",{"_index":2707,"title":{},"body":{"classes/NavbarElement.html":{}}}],["src/app/components/navbar/navbartype.ts:17",{"_index":2735,"title":{},"body":{"classes/NavbarItem.html":{}}}],["src/app/components/navbar/navbartype.ts:18",{"_index":2737,"title":{},"body":{"classes/NavbarItem.html":{}}}],["src/app/components/navbar/navbartype.ts:19",{"_index":2734,"title":{},"body":{"classes/NavbarItem.html":{}}}],["src/app/components/navbar/navbartype.ts:20",{"_index":2736,"title":{},"body":{"classes/NavbarItem.html":{}}}],["src/app/components/navbar/navbartype.ts:27",{"_index":22,"title":{},"body":{"classes/Aoption.html":{}}}],["src/app/components/navbar/navbartype.ts:28",{"_index":23,"title":{},"body":{"classes/Aoption.html":{}}}],["src/app/components/navbar/navbartype.ts:7",{"_index":2709,"title":{},"body":{"classes/NavbarElement.html":{}}}],["src/app/components/navbar/navbartype.ts:8",{"_index":2710,"title":{},"body":{"classes/NavbarElement.html":{}}}],["src/app/components/navbar/navbartype.ts:9",{"_index":2708,"title":{},"body":{"classes/NavbarElement.html":{}}}],["src/app/components/offcanvas/offcanvas.component.ts",{"_index":2779,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["src/app/components/offcanvas/offcanvas.component.ts:100",{"_index":2817,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["src/app/components/offcanvas/offcanvas.component.ts:19",{"_index":2819,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["src/app/components/offcanvas/offcanvas.component.ts:25",{"_index":2810,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["src/app/components/offcanvas/offcanvas.component.ts:29",{"_index":2823,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["src/app/components/offcanvas/offcanvas.component.ts:32",{"_index":2815,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["src/app/components/offcanvas/offcanvas.component.ts:38",{"_index":2811,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["src/app/components/offcanvas/offcanvas.component.ts:43",{"_index":2798,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["src/app/components/offcanvas/offcanvas.component.ts:48",{"_index":2812,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["src/app/components/offcanvas/offcanvas.component.ts:54",{"_index":2801,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["src/app/components/offcanvas/offcanvas.component.ts:64",{"_index":2804,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["src/app/components/offcanvas/offcanvas.component.ts:71",{"_index":2803,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["src/app/components/offcanvas/offcanvas.component.ts:74",{"_index":2822,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["src/app/components/offcanvas/offcanvas.component.ts:75",{"_index":2821,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["src/app/components/offcanvas/offcanvas.component.ts:76",{"_index":2796,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["src/app/components/offcanvas/offcanvas.component.ts:91",{"_index":2816,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["src/app/components/tabnav/tabnav.component.ts",{"_index":3503,"title":{},"body":{"components/TabnavComponent.html":{}}}],["src/app/components/tabnav/tabnav.component.ts:18",{"_index":3515,"title":{},"body":{"components/TabnavComponent.html":{}}}],["src/app/components/tabnav/tabnav.component.ts:23",{"_index":3511,"title":{},"body":{"components/TabnavComponent.html":{}}}],["src/app/components/tabnav/tabnav.component.ts:28",{"_index":3513,"title":{},"body":{"components/TabnavComponent.html":{}}}],["src/app/components/tabnav/tabnav.component.ts:34",{"_index":3522,"title":{},"body":{"components/TabnavComponent.html":{}}}],["src/app/components/tabnav/tabnav.component.ts:40",{"_index":3510,"title":{},"body":{"components/TabnavComponent.html":{}}}],["src/app/components/tabnav/tabnav.component.ts:53",{"_index":3518,"title":{},"body":{"components/TabnavComponent.html":{}}}],["src/app/components/tabnav/tabnav.component.ts:63",{"_index":3517,"title":{},"body":{"components/TabnavComponent.html":{}}}],["src/app/components/tabnav/tabnavtype.ts",{"_index":3530,"title":{},"body":{"classes/TabnavElement.html":{},"classes/TabnavItem.html":{}}}],["src/app/components/tabnav/tabnavtype.ts:16",{"_index":3534,"title":{},"body":{"classes/TabnavItem.html":{}}}],["src/app/components/tabnav/tabnavtype.ts:17",{"_index":3536,"title":{},"body":{"classes/TabnavItem.html":{}}}],["src/app/components/tabnav/tabnavtype.ts:18",{"_index":3535,"title":{},"body":{"classes/TabnavItem.html":{}}}],["src/app/components/tabnav/tabnavtype.ts:8",{"_index":3532,"title":{},"body":{"classes/TabnavElement.html":{}}}],["src/app/components/underbar/underbar.component.ts",{"_index":3700,"title":{},"body":{"components/UnderbarComponent.html":{}}}],["src/app/components/underbar/underbar.component.ts:19",{"_index":3711,"title":{},"body":{"components/UnderbarComponent.html":{}}}],["src/app/components/underbar/underbar.component.ts:23",{"_index":3707,"title":{},"body":{"components/UnderbarComponent.html":{}}}],["src/app/components/underbar/underbar.component.ts:54",{"_index":3716,"title":{},"body":{"components/UnderbarComponent.html":{}}}],["src/app/components/underbar/underbartype.ts",{"_index":3727,"title":{},"body":{"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{}}}],["src/app/components/underbar/underbartype.ts:16",{"_index":3734,"title":{},"body":{"classes/UnderbarItem.html":{}}}],["src/app/components/underbar/underbartype.ts:17",{"_index":3736,"title":{},"body":{"classes/UnderbarItem.html":{}}}],["src/app/components/underbar/underbartype.ts:18",{"_index":3733,"title":{},"body":{"classes/UnderbarItem.html":{}}}],["src/app/components/underbar/underbartype.ts:22",{"_index":3735,"title":{},"body":{"classes/UnderbarItem.html":{}}}],["src/app/components/underbar/underbartype.ts:7",{"_index":3728,"title":{},"body":{"classes/UnderbarElement.html":{}}}],["src/app/composer",{"_index":793,"title":{},"body":{"components/ComposerComponent.html":{}}}],["src/app/models/apptype",{"_index":889,"title":{},"body":{"components/ComposerComponent.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"classes/HostNode.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"components/NetworkComponent.html":{},"classes/NetworkNode.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"components/SubnetComponent.html":{},"classes/SubnetNode.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"components/VisualizerComponent.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["src/app/models/apptype.ts",{"_index":1424,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["src/app/models/apptype.ts:58",{"_index":1516,"title":{},"body":{"classes/DataRouteVisualizer.html":{}}}],["src/app/models/apptype.ts:59",{"_index":1517,"title":{},"body":{"classes/DataRouteVisualizer.html":{}}}],["src/app/models/apptype.ts:65",{"_index":1429,"title":{},"body":{"classes/DataRouteComposer.html":{}}}],["src/app/models/apptype.ts:66",{"_index":1428,"title":{},"body":{"classes/DataRouteComposer.html":{}}}],["src/app/models/apptype.ts:67",{"_index":1427,"title":{},"body":{"classes/DataRouteComposer.html":{}}}],["src/app/models/apptype.ts:68",{"_index":1430,"title":{},"body":{"classes/DataRouteComposer.html":{}}}],["src/app/pages/docs/docs.component.ts",{"_index":1522,"title":{},"body":{"components/DocsComponent.html":{}}}],["src/app/pages/docs/docs.component.ts:20",{"_index":1542,"title":{},"body":{"components/DocsComponent.html":{}}}],["src/app/pages/docs/docs.component.ts:25",{"_index":1535,"title":{},"body":{"components/DocsComponent.html":{}}}],["src/app/pages/docs/docs.component.ts:42",{"_index":1538,"title":{},"body":{"components/DocsComponent.html":{}}}],["src/app/pages/elements/navbar",{"_index":2711,"title":{},"body":{"components/NavbarElementComponent.html":{}}}],["src/app/pages/home/home.component.ts",{"_index":2023,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:108",{"_index":2087,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:134",{"_index":2090,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:154",{"_index":2093,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:158",{"_index":2082,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:167",{"_index":2085,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:173",{"_index":2044,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:197",{"_index":2046,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:225",{"_index":2049,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:246",{"_index":2064,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:289",{"_index":2055,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:30",{"_index":2091,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:306",{"_index":2060,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:315",{"_index":2059,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:35",{"_index":2096,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:40",{"_index":2084,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:45",{"_index":2069,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:53",{"_index":2080,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:63",{"_index":2077,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:68",{"_index":2100,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:73",{"_index":2095,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:78",{"_index":2097,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:88",{"_index":2074,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:93",{"_index":2098,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:98",{"_index":2089,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/how",{"_index":2352,"title":{},"body":{"components/HowToUseComponent.html":{}}}],["src/app/rete",{"_index":386,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"components/ControlTemplate.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/FlavorApplication.html":{},"components/HostComponent.html":{},"classes/HostNode.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"components/NetworkComponent.html":{},"classes/NetworkNode.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SimpleModuleApplication.html":{},"components/SubnetComponent.html":{},"classes/SubnetNode.html":{},"classes/TheaterApplication.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/_Control.html":{},"miscellaneous/functions.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["src/app/services/api/attachments.service.ts",{"_index":652,"title":{},"body":{"injectables/AttachmentsService.html":{}}}],["src/app/services/api/attachments.service.ts:11",{"_index":658,"title":{},"body":{"injectables/AttachmentsService.html":{}}}],["src/app/services/api/attachments.service.ts:15",{"_index":662,"title":{},"body":{"injectables/AttachmentsService.html":{}}}],["src/app/services/api/attachments.service.ts:37",{"_index":666,"title":{},"body":{"injectables/AttachmentsService.html":{}}}],["src/app/services/api/flavor.service.ts",{"_index":2004,"title":{},"body":{"injectables/FlavorService.html":{}}}],["src/app/services/api/flavor.service.ts:10",{"_index":2007,"title":{},"body":{"injectables/FlavorService.html":{}}}],["src/app/services/api/flavor.service.ts:14",{"_index":2008,"title":{},"body":{"injectables/FlavorService.html":{}}}],["src/app/services/api/flavor.service.ts:40",{"_index":2010,"title":{},"body":{"injectables/FlavorService.html":{}}}],["src/app/services/api/module.service.ts",{"_index":2641,"title":{},"body":{"injectables/ModuleService.html":{}}}],["src/app/services/api/module.service.ts:108",{"_index":2650,"title":{},"body":{"injectables/ModuleService.html":{}}}],["src/app/services/api/module.service.ts:11",{"_index":2647,"title":{},"body":{"injectables/ModuleService.html":{}}}],["src/app/services/api/module.service.ts:15",{"_index":2653,"title":{},"body":{"injectables/ModuleService.html":{}}}],["src/app/services/api/module.service.ts:41",{"_index":2648,"title":{},"body":{"injectables/ModuleService.html":{}}}],["src/app/services/api/module.service.ts:56",{"_index":2655,"title":{},"body":{"injectables/ModuleService.html":{}}}],["src/app/services/api/module.service.ts:82",{"_index":2658,"title":{},"body":{"injectables/ModuleService.html":{}}}],["src/app/services/api/theater.service.ts",{"_index":3645,"title":{},"body":{"injectables/TheaterService.html":{}}}],["src/app/services/api/theater.service.ts:11",{"_index":3648,"title":{},"body":{"injectables/TheaterService.html":{}}}],["src/app/services/api/theater.service.ts:15",{"_index":3650,"title":{},"body":{"injectables/TheaterService.html":{}}}],["src/app/services/api/theater.service.ts:43",{"_index":3652,"title":{},"body":{"injectables/TheaterService.html":{}}}],["src/app/services/application/export/export.service.ts",{"_index":1817,"title":{},"body":{"injectables/ExportService.html":{}}}],["src/app/services/application/export/export.service.ts:26",{"_index":1851,"title":{},"body":{"injectables/ExportService.html":{}}}],["src/app/services/application/export/export.service.ts:32",{"_index":1828,"title":{},"body":{"injectables/ExportService.html":{}}}],["src/app/services/application/export/export.service.ts:43",{"_index":1834,"title":{},"body":{"injectables/ExportService.html":{}}}],["src/app/services/application/export/export.service.ts:54",{"_index":1830,"title":{},"body":{"injectables/ExportService.html":{}}}],["src/app/services/application/export/export.service.ts:66",{"_index":1840,"title":{},"body":{"injectables/ExportService.html":{}}}],["src/app/services/application/export/export.service.ts:77",{"_index":1838,"title":{},"body":{"injectables/ExportService.html":{}}}],["src/app/services/application/export/exportmodule.ts",{"_index":1633,"title":{},"body":{"classes/ExportModule.html":{}}}],["src/app/services/application/export/exportmodule.ts:17",{"_index":1650,"title":{},"body":{"classes/ExportModule.html":{}}}],["src/app/services/application/export/exportmodule.ts:180",{"_index":1693,"title":{},"body":{"classes/ExportModule.html":{}}}],["src/app/services/application/export/exportmodule.ts:217",{"_index":1690,"title":{},"body":{"classes/ExportModule.html":{}}}],["src/app/services/application/export/exportmodule.ts:22",{"_index":1646,"title":{},"body":{"classes/ExportModule.html":{}}}],["src/app/services/application/export/exportmodule.ts:241",{"_index":1681,"title":{},"body":{"classes/ExportModule.html":{}}}],["src/app/services/application/export/exportmodule.ts:28",{"_index":1645,"title":{},"body":{"classes/ExportModule.html":{}}}],["src/app/services/application/export/exportmodule.ts:316",{"_index":1669,"title":{},"body":{"classes/ExportModule.html":{}}}],["src/app/services/application/export/exportmodule.ts:50",{"_index":1655,"title":{},"body":{"classes/ExportModule.html":{}}}],["src/app/services/application/export/exportmodule.ts:92",{"_index":1675,"title":{},"body":{"classes/ExportModule.html":{}}}],["src/app/services/application/export/exporttheater.ts",{"_index":1866,"title":{},"body":{"classes/ExportTheater.html":{}}}],["src/app/services/application/export/exporttheater.ts:101",{"_index":1882,"title":{},"body":{"classes/ExportTheater.html":{}}}],["src/app/services/application/export/exporttheater.ts:14",{"_index":1872,"title":{},"body":{"classes/ExportTheater.html":{}}}],["src/app/services/application/export/exporttheater.ts:19",{"_index":1871,"title":{},"body":{"classes/ExportTheater.html":{}}}],["src/app/services/application/export/exporttheater.ts:37",{"_index":1873,"title":{},"body":{"classes/ExportTheater.html":{}}}],["src/app/services/application/export/exporttheater.ts:62",{"_index":1875,"title":{},"body":{"classes/ExportTheater.html":{}}}],["src/app/services/application/export/exportto.ts",{"_index":3864,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/services/application/file/file.service",{"_index":2103,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/services/application/file/file.service.ts",{"_index":1921,"title":{},"body":{"injectables/FileService.html":{}}}],["src/app/services/application/file/file.service.ts:18",{"_index":1948,"title":{},"body":{"injectables/FileService.html":{}}}],["src/app/services/application/file/file.service.ts:24",{"_index":1947,"title":{},"body":{"injectables/FileService.html":{}}}],["src/app/services/application/file/file.service.ts:31",{"_index":1930,"title":{},"body":{"injectables/FileService.html":{}}}],["src/app/services/application/file/file.service.ts:41",{"_index":1943,"title":{},"body":{"injectables/FileService.html":{}}}],["src/app/services/application/file/file.service.ts:69",{"_index":1931,"title":{},"body":{"injectables/FileService.html":{}}}],["src/app/services/application/file/file.service.ts:79",{"_index":1939,"title":{},"body":{"injectables/FileService.html":{}}}],["src/app/services/application/modal/modal.service.ts",{"_index":2472,"title":{},"body":{"injectables/ModalService.html":{}}}],["src/app/services/application/modal/modal.service.ts:106",{"_index":2510,"title":{},"body":{"injectables/ModalService.html":{}}}],["src/app/services/application/modal/modal.service.ts:44",{"_index":2514,"title":{},"body":{"injectables/ModalService.html":{}}}],["src/app/services/application/modal/modal.service.ts:50",{"_index":2516,"title":{},"body":{"injectables/ModalService.html":{}}}],["src/app/services/application/modal/modal.service.ts:56",{"_index":2496,"title":{},"body":{"injectables/ModalService.html":{}}}],["src/app/services/application/modal/modal.service.ts:66",{"_index":2497,"title":{},"body":{"injectables/ModalService.html":{}}}],["src/app/services/application/modal/modal.service.ts:74",{"_index":2499,"title":{},"body":{"injectables/ModalService.html":{}}}],["src/app/services/application/modal/modal.service.ts:86",{"_index":2502,"title":{},"body":{"injectables/ModalService.html":{}}}],["src/app/services/application/parse/parse.service",{"_index":890,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["src/app/services/application/parse/parse.service.ts",{"_index":3072,"title":{},"body":{"injectables/ParseService.html":{}}}],["src/app/services/application/parse/parse.service.ts:113",{"_index":3082,"title":{},"body":{"injectables/ParseService.html":{}}}],["src/app/services/application/parse/parse.service.ts:27",{"_index":3081,"title":{},"body":{"injectables/ParseService.html":{}}}],["src/app/services/application/parse/parse.service.ts:63",{"_index":3093,"title":{},"body":{"injectables/ParseService.html":{}}}],["src/app/services/application/parse/parse.service.ts:79",{"_index":3089,"title":{},"body":{"injectables/ParseService.html":{}}}],["src/app/services/application/parse/parse.service.ts:96",{"_index":3086,"title":{},"body":{"injectables/ParseService.html":{}}}],["src/app/services/application/parse/parsecommonelement.ts",{"_index":3854,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/services/application/parse/parsedatafortheatervisualizer.ts",{"_index":2865,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["src/app/services/application/parse/parsedatafortheatervisualizer.ts:112",{"_index":2884,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["src/app/services/application/parse/parsedatafortheatervisualizer.ts:135",{"_index":2889,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["src/app/services/application/parse/parsedatafortheatervisualizer.ts:156",{"_index":2932,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["src/app/services/application/parse/parsedatafortheatervisualizer.ts:174",{"_index":2895,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["src/app/services/application/parse/parsedatafortheatervisualizer.ts:18",{"_index":2882,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["src/app/services/application/parse/parsedatafortheatervisualizer.ts:193",{"_index":2899,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["src/app/services/application/parse/parsedatafortheatervisualizer.ts:219",{"_index":2908,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["src/app/services/application/parse/parsedatafortheatervisualizer.ts:244",{"_index":2905,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["src/app/services/application/parse/parsedatafortheatervisualizer.ts:269",{"_index":2925,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["src/app/services/application/parse/parsedatafortheatervisualizer.ts:299",{"_index":2893,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["src/app/services/application/parse/parsedatafortheatervisualizer.ts:331",{"_index":2910,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["src/app/services/application/parse/parsedatafortheatervisualizer.ts:44",{"_index":2940,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["src/app/services/application/parse/parsedatafortheatervisualizer.ts:75",{"_index":2937,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["src/app/services/application/parse/parsedatafortheatervisualizer.ts:91",{"_index":2922,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["src/app/services/application/parse/persedataformodulecomposer.ts",{"_index":3112,"title":{},"body":{"classes/PerseDataForModuleComposer.html":{}}}],["src/app/services/application/parse/persedataformodulecomposer.ts:27",{"_index":3118,"title":{},"body":{"classes/PerseDataForModuleComposer.html":{}}}],["src/app/services/application/parse/persedataformodulecomposer.ts:41",{"_index":3117,"title":{},"body":{"classes/PerseDataForModuleComposer.html":{}}}],["src/app/services/application/parse/persedataformodulecomposer.ts:9",{"_index":3115,"title":{},"body":{"classes/PerseDataForModuleComposer.html":{}}}],["src/app/services/application/parse/persedataformodulevisualizer.ts",{"_index":3128,"title":{},"body":{"classes/PerseDataForModuleVisualizer.html":{}}}],["src/app/services/application/parse/persedataformodulevisualizer.ts:115",{"_index":3140,"title":{},"body":{"classes/PerseDataForModuleVisualizer.html":{}}}],["src/app/services/application/parse/persedataformodulevisualizer.ts:136",{"_index":3146,"title":{},"body":{"classes/PerseDataForModuleVisualizer.html":{}}}],["src/app/services/application/parse/persedataformodulevisualizer.ts:16",{"_index":3135,"title":{},"body":{"classes/PerseDataForModuleVisualizer.html":{}}}],["src/app/services/application/parse/persedataformodulevisualizer.ts:35",{"_index":3156,"title":{},"body":{"classes/PerseDataForModuleVisualizer.html":{}}}],["src/app/services/application/parse/persedataformodulevisualizer.ts:54",{"_index":3151,"title":{},"body":{"classes/PerseDataForModuleVisualizer.html":{}}}],["src/app/services/application/parse/persedataformodulevisualizer.ts:71",{"_index":3137,"title":{},"body":{"classes/PerseDataForModuleVisualizer.html":{}}}],["src/app/services/application/parse/persedataformodulevisualizer.ts:96",{"_index":3144,"title":{},"body":{"classes/PerseDataForModuleVisualizer.html":{}}}],["src/app/services/application/parse/persedatafortheatercomposer.ts",{"_index":3167,"title":{},"body":{"classes/PerseDataForTheaterComposer.html":{}}}],["src/app/services/application/parse/persedatafortheatercomposer.ts:114",{"_index":3175,"title":{},"body":{"classes/PerseDataForTheaterComposer.html":{}}}],["src/app/services/application/parse/persedatafortheatercomposer.ts:138",{"_index":3174,"title":{},"body":{"classes/PerseDataForTheaterComposer.html":{}}}],["src/app/services/application/parse/persedatafortheatercomposer.ts:164",{"_index":3177,"title":{},"body":{"classes/PerseDataForTheaterComposer.html":{}}}],["src/app/services/application/parse/persedatafortheatercomposer.ts:18",{"_index":3170,"title":{},"body":{"classes/PerseDataForTheaterComposer.html":{}}}],["src/app/services/application/parse/persedatafortheatercomposer.ts:240",{"_index":3181,"title":{},"body":{"classes/PerseDataForTheaterComposer.html":{}}}],["src/app/services/application/parse/persedatafortheatercomposer.ts:36",{"_index":3183,"title":{},"body":{"classes/PerseDataForTheaterComposer.html":{}}}],["src/app/services/application/parse/persedatafortheatercomposer.ts:53",{"_index":3186,"title":{},"body":{"classes/PerseDataForTheaterComposer.html":{}}}],["src/app/services/application/parse/persedatafortheatercomposer.ts:70",{"_index":3171,"title":{},"body":{"classes/PerseDataForTheaterComposer.html":{}}}],["src/app/services/application/parse/persedatafortheatercomposer.ts:89",{"_index":3173,"title":{},"body":{"classes/PerseDataForTheaterComposer.html":{}}}],["src/app/services/application/spinner/spinner.service",{"_index":891,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["src/app/services/application/spinner/spinner.service.ts",{"_index":3422,"title":{},"body":{"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{}}}],["src/app/services/application/spinner/spinner.service.ts:10",{"_index":3423,"title":{},"body":{"classes/SpinnerData.html":{}}}],["src/app/services/application/spinner/spinner.service.ts:11",{"_index":3424,"title":{},"body":{"classes/SpinnerData.html":{}}}],["src/app/services/application/spinner/spinner.service.ts:28",{"_index":3446,"title":{},"body":{"injectables/SpinnerService.html":{}}}],["src/app/services/application/spinner/spinner.service.ts:43",{"_index":3447,"title":{},"body":{"injectables/SpinnerService.html":{}}}],["src/app/services/application/spinner/spinner.service.ts:52",{"_index":3448,"title":{},"body":{"injectables/SpinnerService.html":{}}}],["src/app/services/application/storage/storage.service",{"_index":892,"title":{},"body":{"components/ComposerComponent.html":{},"components/HomeComponent.html":{},"components/VisualizerComponent.html":{}}}],["src/app/services/application/storage/storage.service.ts",{"_index":3452,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/services/application/storage/storage.service.ts:14",{"_index":3457,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/services/application/storage/storage.service.ts:19",{"_index":3463,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/services/application/storage/storage.service.ts:25",{"_index":3460,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/services/application/storage/storage.service.ts:27",{"_index":3456,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/services/modelsapplication/applicationmodels",{"_index":893,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["src/app/services/modelsapplication/applicationmodels.ts",{"_index":368,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["src/app/services/modelsapplication/applicationmodels.ts:101",{"_index":3544,"title":{},"body":{"classes/TheaterApplication.html":{}}}],["src/app/services/modelsapplication/applicationmodels.ts:102",{"_index":3545,"title":{},"body":{"classes/TheaterApplication.html":{}}}],["src/app/services/modelsapplication/applicationmodels.ts:104",{"_index":3546,"title":{},"body":{"classes/TheaterApplication.html":{}}}],["src/app/services/modelsapplication/applicationmodels.ts:108",{"_index":374,"title":{},"body":{"classes/AreaApplication.html":{}}}],["src/app/services/modelsapplication/applicationmodels.ts:111",{"_index":481,"title":{},"body":{"classes/AreaColorDTO.html":{}}}],["src/app/services/modelsapplication/applicationmodels.ts:116",{"_index":1980,"title":{},"body":{"classes/FlavorApplication.html":{}}}],["src/app/services/modelsapplication/applicationmodels.ts:28",{"_index":2542,"title":{},"body":{"classes/ModuleApplication.html":{}}}],["src/app/services/modelsapplication/applicationmodels.ts:29",{"_index":2543,"title":{},"body":{"classes/ModuleApplication.html":{}}}],["src/app/services/modelsapplication/applicationmodels.ts:30",{"_index":2541,"title":{},"body":{"classes/ModuleApplication.html":{}}}],["src/app/services/modelsapplication/applicationmodels.ts:31",{"_index":2540,"title":{},"body":{"classes/ModuleApplication.html":{}}}],["src/app/services/modelsapplication/applicationmodels.ts:32",{"_index":2545,"title":{},"body":{"classes/ModuleApplication.html":{}}}],["src/app/services/modelsapplication/applicationmodels.ts:33",{"_index":2544,"title":{},"body":{"classes/ModuleApplication.html":{}}}],["src/app/services/modelsapplication/applicationmodels.ts:34",{"_index":2546,"title":{},"body":{"classes/ModuleApplication.html":{}}}],["src/app/services/modelsapplication/applicationmodels.ts:36",{"_index":2547,"title":{},"body":{"classes/ModuleApplication.html":{}}}],["src/app/services/modelsapplication/applicationmodels.ts:44",{"_index":3391,"title":{},"body":{"classes/SimpleModuleApplication.html":{}}}],["src/app/services/modelsapplication/applicationmodels.ts:45",{"_index":3390,"title":{},"body":{"classes/SimpleModuleApplication.html":{}}}],["src/app/services/modelsapplication/applicationmodels.ts:46",{"_index":3389,"title":{},"body":{"classes/SimpleModuleApplication.html":{}}}],["src/app/services/modelsapplication/applicationmodels.ts:47",{"_index":3393,"title":{},"body":{"classes/SimpleModuleApplication.html":{}}}],["src/app/services/modelsapplication/applicationmodels.ts:48",{"_index":3392,"title":{},"body":{"classes/SimpleModuleApplication.html":{}}}],["src/app/services/modelsapplication/applicationmodels.ts:49",{"_index":3394,"title":{},"body":{"classes/SimpleModuleApplication.html":{}}}],["src/app/services/modelsapplication/applicationmodels.ts:54",{"_index":3230,"title":{},"body":{"classes/ReteConnection.html":{}}}],["src/app/services/modelsapplication/applicationmodels.ts:55",{"_index":3232,"title":{},"body":{"classes/ReteConnection.html":{}}}],["src/app/services/modelsapplication/applicationmodels.ts:56",{"_index":3233,"title":{},"body":{"classes/ReteConnection.html":{}}}],["src/app/services/modelsapplication/applicationmodels.ts:57",{"_index":3231,"title":{},"body":{"classes/ReteConnection.html":{}}}],["src/app/services/modelsapplication/applicationmodels.ts:65",{"_index":3695,"title":{},"body":{"classes/TopologyElement.html":{}}}],["src/app/services/modelsapplication/applicationmodels.ts:66",{"_index":3694,"title":{},"body":{"classes/TopologyElement.html":{}}}],["src/app/services/modelsapplication/applicationmodels.ts:72",{"_index":2778,"title":{},"body":{"classes/NodeTopologyElement.html":{}}}],["src/app/services/modelsapplication/applicationmodels.ts:73",{"_index":2777,"title":{},"body":{"classes/NodeTopologyElement.html":{}}}],["src/app/services/modelsapplication/applicationmodels.ts:83",{"_index":2606,"title":{},"body":{"classes/ModuleInstance.html":{}}}],["src/app/services/modelsapplication/applicationmodels.ts:84",{"_index":2607,"title":{},"body":{"classes/ModuleInstance.html":{}}}],["src/app/services/modelsapplication/applicationmodels.ts:86",{"_index":2605,"title":{},"body":{"classes/ModuleInstance.html":{}}}],["src/app/services/modelsapplication/applicationmodels.ts:98",{"_index":3543,"title":{},"body":{"classes/TheaterApplication.html":{}}}],["src/app/services/modelsapplication/applicationmodels.ts:99",{"_index":3542,"title":{},"body":{"classes/TheaterApplication.html":{}}}],["src/app/services/modelsdto/elementdto.ts",{"_index":2849,"title":{},"body":{"classes/PageableDTO.html":{},"classes/SortDTO.html":{}}}],["src/app/services/modelsdto/elementdto.ts:13",{"_index":2856,"title":{},"body":{"classes/PageableDTO.html":{}}}],["src/app/services/modelsdto/elementdto.ts:14",{"_index":2858,"title":{},"body":{"classes/PageableDTO.html":{}}}],["src/app/services/modelsdto/elementdto.ts:15",{"_index":2859,"title":{},"body":{"classes/PageableDTO.html":{}}}],["src/app/services/modelsdto/elementdto.ts:16",{"_index":2857,"title":{},"body":{"classes/PageableDTO.html":{}}}],["src/app/services/modelsdto/elementdto.ts:17",{"_index":2860,"title":{},"body":{"classes/PageableDTO.html":{}}}],["src/app/services/modelsdto/elementdto.ts:18",{"_index":2861,"title":{},"body":{"classes/PageableDTO.html":{}}}],["src/app/services/modelsdto/elementdto.ts:5",{"_index":3415,"title":{},"body":{"classes/SortDTO.html":{}}}],["src/app/services/modelsdto/elementdto.ts:6",{"_index":3416,"title":{},"body":{"classes/SortDTO.html":{}}}],["src/app/services/modelsdto/elementdto.ts:7",{"_index":3417,"title":{},"body":{"classes/SortDTO.html":{}}}],["src/app/services/modelsdto/falvordto.ts",{"_index":1984,"title":{},"body":{"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{}}}],["src/app/services/modelsdto/falvordto.ts:14",{"_index":3742,"title":{},"body":{"classes/VirtualizationEnvironmentTypeDTO.html":{}}}],["src/app/services/modelsdto/falvordto.ts:15",{"_index":3743,"title":{},"body":{"classes/VirtualizationEnvironmentTypeDTO.html":{}}}],["src/app/services/modelsdto/falvordto.ts:16",{"_index":3744,"title":{},"body":{"classes/VirtualizationEnvironmentTypeDTO.html":{}}}],["src/app/services/modelsdto/falvordto.ts:17",{"_index":3745,"title":{},"body":{"classes/VirtualizationEnvironmentTypeDTO.html":{}}}],["src/app/services/modelsdto/falvordto.ts:18",{"_index":3746,"title":{},"body":{"classes/VirtualizationEnvironmentTypeDTO.html":{}}}],["src/app/services/modelsdto/falvordto.ts:19",{"_index":3747,"title":{},"body":{"classes/VirtualizationEnvironmentTypeDTO.html":{}}}],["src/app/services/modelsdto/falvordto.ts:20",{"_index":3748,"title":{},"body":{"classes/VirtualizationEnvironmentTypeDTO.html":{}}}],["src/app/services/modelsdto/falvordto.ts:29",{"_index":2000,"title":{},"body":{"classes/FlavorDTO.html":{}}}],["src/app/services/modelsdto/falvordto.ts:30",{"_index":1998,"title":{},"body":{"classes/FlavorDTO.html":{}}}],["src/app/services/modelsdto/falvordto.ts:31",{"_index":1999,"title":{},"body":{"classes/FlavorDTO.html":{}}}],["src/app/services/modelsdto/falvordto.ts:32",{"_index":2001,"title":{},"body":{"classes/FlavorDTO.html":{}}}],["src/app/services/modelsdto/falvordto.ts:33",{"_index":2002,"title":{},"body":{"classes/FlavorDTO.html":{}}}],["src/app/services/modelsdto/falvordto.ts:5",{"_index":1985,"title":{},"body":{"classes/FlavorBasicInfo.html":{}}}],["src/app/services/modelsdto/falvordto.ts:6",{"_index":1986,"title":{},"body":{"classes/FlavorBasicInfo.html":{}}}],["src/app/services/modelsdto/falvordto.ts:7",{"_index":1987,"title":{},"body":{"classes/FlavorBasicInfo.html":{}}}],["src/app/services/modelsdto/hostdto.ts",{"_index":2268,"title":{},"body":{"classes/HostModuleDTO.html":{},"classes/HostPortModuleDTO.html":{}}}],["src/app/services/modelsdto/hostdto.ts:10",{"_index":2351,"title":{},"body":{"classes/HostPortModuleDTO.html":{}}}],["src/app/services/modelsdto/hostdto.ts:17",{"_index":2270,"title":{},"body":{"classes/HostModuleDTO.html":{}}}],["src/app/services/modelsdto/hostdto.ts:18",{"_index":2271,"title":{},"body":{"classes/HostModuleDTO.html":{}}}],["src/app/services/modelsdto/hostdto.ts:19",{"_index":2272,"title":{},"body":{"classes/HostModuleDTO.html":{}}}],["src/app/services/modelsdto/hostdto.ts:20",{"_index":2274,"title":{},"body":{"classes/HostModuleDTO.html":{}}}],["src/app/services/modelsdto/hostdto.ts:21",{"_index":2275,"title":{},"body":{"classes/HostModuleDTO.html":{}}}],["src/app/services/modelsdto/hostdto.ts:7",{"_index":2348,"title":{},"body":{"classes/HostPortModuleDTO.html":{}}}],["src/app/services/modelsdto/hostdto.ts:8",{"_index":2349,"title":{},"body":{"classes/HostPortModuleDTO.html":{}}}],["src/app/services/modelsdto/hostdto.ts:9",{"_index":2350,"title":{},"body":{"classes/HostPortModuleDTO.html":{}}}],["src/app/services/modelsdto/moduledto",{"_index":3945,"title":{},"body":{"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["src/app/services/modelsdto/moduledto.ts",{"_index":484,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:10",{"_index":2626,"title":{},"body":{"classes/ModuleListDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:102",{"_index":3395,"title":{},"body":{"classes/SimpleModuleDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:103",{"_index":3396,"title":{},"body":{"classes/SimpleModuleDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:104",{"_index":3397,"title":{},"body":{"classes/SimpleModuleDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:105",{"_index":3398,"title":{},"body":{"classes/SimpleModuleDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:106",{"_index":3399,"title":{},"body":{"classes/SimpleModuleDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:107",{"_index":3400,"title":{},"body":{"classes/SimpleModuleDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:108",{"_index":3401,"title":{},"body":{"classes/SimpleModuleDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:109",{"_index":3402,"title":{},"body":{"classes/SimpleModuleDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:11",{"_index":2623,"title":{},"body":{"classes/ModuleListDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:110",{"_index":3403,"title":{},"body":{"classes/SimpleModuleDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:111",{"_index":3404,"title":{},"body":{"classes/SimpleModuleDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:112",{"_index":3405,"title":{},"body":{"classes/SimpleModuleDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:113",{"_index":3406,"title":{},"body":{"classes/SimpleModuleDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:114",{"_index":3407,"title":{},"body":{"classes/SimpleModuleDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:115",{"_index":3408,"title":{},"body":{"classes/SimpleModuleDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:116",{"_index":3409,"title":{},"body":{"classes/SimpleModuleDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:12",{"_index":2630,"title":{},"body":{"classes/ModuleListDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:124",{"_index":2584,"title":{},"body":{"classes/ModuleDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:125",{"_index":2585,"title":{},"body":{"classes/ModuleDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:126",{"_index":2586,"title":{},"body":{"classes/ModuleDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:127",{"_index":2587,"title":{},"body":{"classes/ModuleDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:128",{"_index":2588,"title":{},"body":{"classes/ModuleDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:129",{"_index":2589,"title":{},"body":{"classes/ModuleDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:13",{"_index":2629,"title":{},"body":{"classes/ModuleListDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:130",{"_index":2590,"title":{},"body":{"classes/ModuleDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:131",{"_index":2591,"title":{},"body":{"classes/ModuleDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:132",{"_index":2592,"title":{},"body":{"classes/ModuleDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:133",{"_index":2593,"title":{},"body":{"classes/ModuleDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:134",{"_index":2595,"title":{},"body":{"classes/ModuleDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:135",{"_index":2594,"title":{},"body":{"classes/ModuleDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:136",{"_index":2596,"title":{},"body":{"classes/ModuleDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:137",{"_index":2597,"title":{},"body":{"classes/ModuleDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:14",{"_index":2627,"title":{},"body":{"classes/ModuleListDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:144",{"_index":2634,"title":{},"body":{"classes/ModuleNetworkInterfaceDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:145",{"_index":2635,"title":{},"body":{"classes/ModuleNetworkInterfaceDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:146",{"_index":2636,"title":{},"body":{"classes/ModuleNetworkInterfaceDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:147",{"_index":2637,"title":{},"body":{"classes/ModuleNetworkInterfaceDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:148",{"_index":2638,"title":{},"body":{"classes/ModuleNetworkInterfaceDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:149",{"_index":2639,"title":{},"body":{"classes/ModuleNetworkInterfaceDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:15",{"_index":2624,"title":{},"body":{"classes/ModuleListDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:150",{"_index":2640,"title":{},"body":{"classes/ModuleNetworkInterfaceDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:157",{"_index":1023,"title":{},"body":{"classes/ConsumerInterfaceLinkDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:158",{"_index":1024,"title":{},"body":{"classes/ConsumerInterfaceLinkDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:159",{"_index":1025,"title":{},"body":{"classes/ConsumerInterfaceLinkDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:16",{"_index":2628,"title":{},"body":{"classes/ModuleListDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:166",{"_index":2612,"title":{},"body":{"classes/ModuleInstancePropertiesDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:167",{"_index":2614,"title":{},"body":{"classes/ModuleInstancePropertiesDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:168",{"_index":2615,"title":{},"body":{"classes/ModuleInstancePropertiesDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:169",{"_index":2617,"title":{},"body":{"classes/ModuleInstancePropertiesDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:17",{"_index":2625,"title":{},"body":{"classes/ModuleListDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:170",{"_index":2616,"title":{},"body":{"classes/ModuleInstancePropertiesDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:171",{"_index":2613,"title":{},"body":{"classes/ModuleInstancePropertiesDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:179",{"_index":492,"title":{},"body":{"classes/AreaDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:18",{"_index":2622,"title":{},"body":{"classes/ModuleListDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:180",{"_index":495,"title":{},"body":{"classes/AreaDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:181",{"_index":493,"title":{},"body":{"classes/AreaDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:182",{"_index":491,"title":{},"body":{"classes/AreaDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:183",{"_index":494,"title":{},"body":{"classes/AreaDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:184",{"_index":490,"title":{},"body":{"classes/AreaDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:19",{"_index":2621,"title":{},"body":{"classes/ModuleListDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:191",{"_index":3387,"title":{},"body":{"classes/SimpleAreaDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:192",{"_index":3388,"title":{},"body":{"classes/SimpleAreaDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:199",{"_index":3596,"title":{},"body":{"classes/TheaterInstancePropertiesDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:200",{"_index":3597,"title":{},"body":{"classes/TheaterInstancePropertiesDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:201",{"_index":3593,"title":{},"body":{"classes/TheaterInstancePropertiesDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:202",{"_index":3594,"title":{},"body":{"classes/TheaterInstancePropertiesDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:203",{"_index":3598,"title":{},"body":{"classes/TheaterInstancePropertiesDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:204",{"_index":3595,"title":{},"body":{"classes/TheaterInstancePropertiesDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:211",{"_index":3540,"title":{},"body":{"classes/TagTIP.html":{}}}],["src/app/services/modelsdto/moduledto.ts:218",{"_index":1576,"title":{},"body":{"classes/ElementIntoTheaterDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:219",{"_index":1577,"title":{},"body":{"classes/ElementIntoTheaterDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:227",{"_index":2610,"title":{},"body":{"classes/ModuleInstanceDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:228",{"_index":2611,"title":{},"body":{"classes/ModuleInstanceDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:234",{"_index":3591,"title":{},"body":{"classes/TheaterInstanceDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:235",{"_index":3592,"title":{},"body":{"classes/TheaterInstanceDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:26",{"_index":3696,"title":{},"body":{"classes/TypesCatalogueDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:27",{"_index":3697,"title":{},"body":{"classes/TypesCatalogueDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:28",{"_index":3698,"title":{},"body":{"classes/TypesCatalogueDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:29",{"_index":3699,"title":{},"body":{"classes/TypesCatalogueDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:36",{"_index":2577,"title":{},"body":{"classes/ModuleClassificationDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:37",{"_index":2578,"title":{},"body":{"classes/ModuleClassificationDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:38",{"_index":2579,"title":{},"body":{"classes/ModuleClassificationDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:39",{"_index":2580,"title":{},"body":{"classes/ModuleClassificationDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:40",{"_index":2581,"title":{},"body":{"classes/ModuleClassificationDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:41",{"_index":2582,"title":{},"body":{"classes/ModuleClassificationDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:42",{"_index":2583,"title":{},"body":{"classes/ModuleClassificationDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:49",{"_index":2022,"title":{},"body":{"classes/GenericParameterDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:50",{"_index":2020,"title":{},"body":{"classes/GenericParameterDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:51",{"_index":2021,"title":{},"body":{"classes/GenericParameterDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:58",{"_index":945,"title":{},"body":{"classes/ConfigurationTemplateDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:59",{"_index":951,"title":{},"body":{"classes/ConfigurationTemplateDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:60",{"_index":954,"title":{},"body":{"classes/ConfigurationTemplateDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:61",{"_index":949,"title":{},"body":{"classes/ConfigurationTemplateDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:62",{"_index":947,"title":{},"body":{"classes/ConfigurationTemplateDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:63",{"_index":950,"title":{},"body":{"classes/ConfigurationTemplateDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:64",{"_index":952,"title":{},"body":{"classes/ConfigurationTemplateDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:65",{"_index":948,"title":{},"body":{"classes/ConfigurationTemplateDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:66",{"_index":946,"title":{},"body":{"classes/ConfigurationTemplateDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:67",{"_index":955,"title":{},"body":{"classes/ConfigurationTemplateDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:68",{"_index":953,"title":{},"body":{"classes/ConfigurationTemplateDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:75",{"_index":2631,"title":{},"body":{"classes/ModuleModeDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:76",{"_index":2632,"title":{},"body":{"classes/ModuleModeDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:77",{"_index":2633,"title":{},"body":{"classes/ModuleModeDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:84",{"_index":2668,"title":{},"body":{"classes/ModuleStatusDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:85",{"_index":2669,"title":{},"body":{"classes/ModuleStatusDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:86",{"_index":2670,"title":{},"body":{"classes/ModuleStatusDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:9",{"_index":2620,"title":{},"body":{"classes/ModuleListDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:93",{"_index":3449,"title":{},"body":{"classes/StatisticItemDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:94",{"_index":3451,"title":{},"body":{"classes/StatisticItemDTO.html":{}}}],["src/app/services/modelsdto/moduledto.ts:95",{"_index":3450,"title":{},"body":{"classes/StatisticItemDTO.html":{}}}],["src/app/services/modelsdto/networkdto.ts",{"_index":774,"title":{},"body":{"classes/BorderNetworkDTO.html":{},"classes/NetOSRouterDTO.html":{},"classes/NetworkDTO.html":{},"classes/SubnetDTO.html":{}}}],["src/app/services/modelsdto/networkdto.ts:14",{"_index":778,"title":{},"body":{"classes/BorderNetworkDTO.html":{}}}],["src/app/services/modelsdto/networkdto.ts:15",{"_index":779,"title":{},"body":{"classes/BorderNetworkDTO.html":{}}}],["src/app/services/modelsdto/networkdto.ts:16",{"_index":781,"title":{},"body":{"classes/BorderNetworkDTO.html":{}}}],["src/app/services/modelsdto/networkdto.ts:17",{"_index":782,"title":{},"body":{"classes/BorderNetworkDTO.html":{}}}],["src/app/services/modelsdto/networkdto.ts:24",{"_index":2738,"title":{},"body":{"classes/NetOSRouterDTO.html":{}}}],["src/app/services/modelsdto/networkdto.ts:25",{"_index":2739,"title":{},"body":{"classes/NetOSRouterDTO.html":{}}}],["src/app/services/modelsdto/networkdto.ts:26",{"_index":2740,"title":{},"body":{"classes/NetOSRouterDTO.html":{}}}],["src/app/services/modelsdto/networkdto.ts:27",{"_index":2741,"title":{},"body":{"classes/NetOSRouterDTO.html":{}}}],["src/app/services/modelsdto/networkdto.ts:35",{"_index":3480,"title":{},"body":{"classes/SubnetDTO.html":{}}}],["src/app/services/modelsdto/networkdto.ts:36",{"_index":3481,"title":{},"body":{"classes/SubnetDTO.html":{}}}],["src/app/services/modelsdto/networkdto.ts:37",{"_index":3482,"title":{},"body":{"classes/SubnetDTO.html":{}}}],["src/app/services/modelsdto/networkdto.ts:38",{"_index":3483,"title":{},"body":{"classes/SubnetDTO.html":{}}}],["src/app/services/modelsdto/networkdto.ts:39",{"_index":3484,"title":{},"body":{"classes/SubnetDTO.html":{}}}],["src/app/services/modelsdto/networkdto.ts:40",{"_index":3485,"title":{},"body":{"classes/SubnetDTO.html":{}}}],["src/app/services/modelsdto/networkdto.ts:41",{"_index":3486,"title":{},"body":{"classes/SubnetDTO.html":{}}}],["src/app/services/modelsdto/networkdto.ts:42",{"_index":3487,"title":{},"body":{"classes/SubnetDTO.html":{}}}],["src/app/services/modelsdto/networkdto.ts:43",{"_index":3488,"title":{},"body":{"classes/SubnetDTO.html":{}}}],["src/app/services/modelsdto/networkdto.ts:44",{"_index":3489,"title":{},"body":{"classes/SubnetDTO.html":{}}}],["src/app/services/modelsdto/networkdto.ts:45",{"_index":3490,"title":{},"body":{"classes/SubnetDTO.html":{}}}],["src/app/services/modelsdto/networkdto.ts:46",{"_index":3491,"title":{},"body":{"classes/SubnetDTO.html":{}}}],["src/app/services/modelsdto/networkdto.ts:5",{"_index":2755,"title":{},"body":{"classes/NetworkDTO.html":{}}}],["src/app/services/modelsdto/networkdto.ts:6",{"_index":2756,"title":{},"body":{"classes/NetworkDTO.html":{}}}],["src/app/services/modelsdto/networkdto.ts:7",{"_index":2757,"title":{},"body":{"classes/NetworkDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts",{"_index":740,"title":{},"body":{"classes/BlueprintFileDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/NameMappingDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TheaterDTO.html":{},"classes/TheatreStatusDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts:16",{"_index":3658,"title":{},"body":{"classes/TheatreStatusDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts:17",{"_index":3659,"title":{},"body":{"classes/TheatreStatusDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts:18",{"_index":3660,"title":{},"body":{"classes/TheatreStatusDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts:25",{"_index":1518,"title":{},"body":{"classes/DeployInstanceDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts:26",{"_index":1519,"title":{},"body":{"classes/DeployInstanceDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts:27",{"_index":1520,"title":{},"body":{"classes/DeployInstanceDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts:28",{"_index":1521,"title":{},"body":{"classes/DeployInstanceDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts:35",{"_index":741,"title":{},"body":{"classes/BlueprintFileDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts:36",{"_index":742,"title":{},"body":{"classes/BlueprintFileDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts:37",{"_index":744,"title":{},"body":{"classes/BlueprintFileDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts:38",{"_index":745,"title":{},"body":{"classes/BlueprintFileDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts:45",{"_index":2671,"title":{},"body":{"classes/NameMappingDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts:46",{"_index":2672,"title":{},"body":{"classes/NameMappingDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts:47",{"_index":2673,"title":{},"body":{"classes/NameMappingDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts:48",{"_index":2674,"title":{},"body":{"classes/NameMappingDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts:54",{"_index":1631,"title":{},"body":{"classes/EntityNameMappingFileDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts:61",{"_index":3567,"title":{},"body":{"classes/TheaterDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts:62",{"_index":3568,"title":{},"body":{"classes/TheaterDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts:63",{"_index":3569,"title":{},"body":{"classes/TheaterDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts:64",{"_index":3570,"title":{},"body":{"classes/TheaterDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts:65",{"_index":3571,"title":{},"body":{"classes/TheaterDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts:66",{"_index":3572,"title":{},"body":{"classes/TheaterDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts:67",{"_index":3573,"title":{},"body":{"classes/TheaterDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts:68",{"_index":3574,"title":{},"body":{"classes/TheaterDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts:69",{"_index":3575,"title":{},"body":{"classes/TheaterDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts:7",{"_index":3537,"title":{},"body":{"classes/TagCatalogueDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts:70",{"_index":3576,"title":{},"body":{"classes/TheaterDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts:71",{"_index":3577,"title":{},"body":{"classes/TheaterDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts:72",{"_index":3578,"title":{},"body":{"classes/TheaterDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts:73",{"_index":3579,"title":{},"body":{"classes/TheaterDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts:74",{"_index":3580,"title":{},"body":{"classes/TheaterDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts:75",{"_index":3581,"title":{},"body":{"classes/TheaterDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts:76",{"_index":3582,"title":{},"body":{"classes/TheaterDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts:77",{"_index":3583,"title":{},"body":{"classes/TheaterDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts:78",{"_index":3584,"title":{},"body":{"classes/TheaterDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts:79",{"_index":3585,"title":{},"body":{"classes/TheaterDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts:8",{"_index":3538,"title":{},"body":{"classes/TagCatalogueDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts:80",{"_index":3586,"title":{},"body":{"classes/TheaterDTO.html":{}}}],["src/app/services/modelsdto/theaterdto.ts:9",{"_index":3539,"title":{},"body":{"classes/TagCatalogueDTO.html":{}}}],["src/app/services/modelsexport/moduleexport.ts",{"_index":957,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:10",{"_index":2599,"title":{},"body":{"classes/ModuleExport.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:106",{"_index":3492,"title":{},"body":{"classes/SubnetExport.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:11",{"_index":2601,"title":{},"body":{"classes/ModuleExport.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:114",{"_index":2776,"title":{},"body":{"classes/NodeSimpleData.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:115",{"_index":2774,"title":{},"body":{"classes/NodeSimpleData.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:116",{"_index":2773,"title":{},"body":{"classes/NodeSimpleData.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:117",{"_index":2775,"title":{},"body":{"classes/NodeSimpleData.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:12",{"_index":2602,"title":{},"body":{"classes/ModuleExport.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:124",{"_index":3229,"title":{},"body":{"classes/RelationshipsExport.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:125",{"_index":3228,"title":{},"body":{"classes/RelationshipsExport.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:13",{"_index":2600,"title":{},"body":{"classes/ModuleExport.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:131",{"_index":3202,"title":{},"body":{"classes/PortSimpleData.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:132",{"_index":3201,"title":{},"body":{"classes/PortSimpleData.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:138",{"_index":2772,"title":{},"body":{"classes/NetworkSimpleData.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:139",{"_index":2771,"title":{},"body":{"classes/NetworkSimpleData.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:14",{"_index":2598,"title":{},"body":{"classes/ModuleExport.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:146",{"_index":3215,"title":{},"body":{"classes/PropertiesNSD.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:147",{"_index":3217,"title":{},"body":{"classes/PropertiesNSD.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:148",{"_index":3216,"title":{},"body":{"classes/PropertiesNSD.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:15",{"_index":2603,"title":{},"body":{"classes/ModuleExport.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:155",{"_index":3502,"title":{},"body":{"classes/SubnetSimpleData.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:156",{"_index":3501,"title":{},"body":{"classes/SubnetSimpleData.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:157",{"_index":3500,"title":{},"body":{"classes/SubnetSimpleData.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:164",{"_index":3220,"title":{},"body":{"classes/PropertiesSSD.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:170",{"_index":3218,"title":{},"body":{"classes/PropertiesSSD.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:171",{"_index":3221,"title":{},"body":{"classes/PropertiesSSD.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:172",{"_index":3219,"title":{},"body":{"classes/PropertiesSSD.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:22",{"_index":2667,"title":{},"body":{"classes/ModuleSimpleData.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:23",{"_index":2666,"title":{},"body":{"classes/ModuleSimpleData.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:30",{"_index":3212,"title":{},"body":{"classes/PropertiesMSD.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:31",{"_index":3210,"title":{},"body":{"classes/PropertiesMSD.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:32",{"_index":3213,"title":{},"body":{"classes/PropertiesMSD.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:33",{"_index":3209,"title":{},"body":{"classes/PropertiesMSD.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:34",{"_index":3211,"title":{},"body":{"classes/PropertiesMSD.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:38",{"_index":3214,"title":{},"body":{"classes/PropertiesMSD.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:44",{"_index":964,"title":{},"body":{"classes/ConstraintsMSD.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:45",{"_index":966,"title":{},"body":{"classes/ConstraintsMSD.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:46",{"_index":968,"title":{},"body":{"classes/ConstraintsMSD.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:52",{"_index":2359,"title":{},"body":{"classes/InterfaceConstraints.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:53",{"_index":2361,"title":{},"body":{"classes/InterfaceConstraints.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:54",{"_index":2360,"title":{},"body":{"classes/InterfaceConstraints.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:55",{"_index":2358,"title":{},"body":{"classes/InterfaceConstraints.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:56",{"_index":2362,"title":{},"body":{"classes/InterfaceConstraints.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:72",{"_index":2367,"title":{},"body":{"classes/InterfaceNetworksProvider.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:73",{"_index":2368,"title":{},"body":{"classes/InterfaceNetworksProvider.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:74",{"_index":2370,"title":{},"body":{"classes/InterfaceNetworksProvider.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:75",{"_index":2369,"title":{},"body":{"classes/InterfaceNetworksProvider.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:81",{"_index":2363,"title":{},"body":{"classes/InterfaceNetworksConsumer.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:82",{"_index":2364,"title":{},"body":{"classes/InterfaceNetworksConsumer.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:83",{"_index":2366,"title":{},"body":{"classes/InterfaceNetworksConsumer.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:84",{"_index":2365,"title":{},"body":{"classes/InterfaceNetworksConsumer.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:9",{"_index":2604,"title":{},"body":{"classes/ModuleExport.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:90",{"_index":3738,"title":{},"body":{"classes/VirtualMachine.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:91",{"_index":3737,"title":{},"body":{"classes/VirtualMachine.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:97",{"_index":3740,"title":{},"body":{"classes/VirtualMachinePorts.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:98",{"_index":3739,"title":{},"body":{"classes/VirtualMachinePorts.html":{}}}],["src/app/services/modelsexport/moduleexport.ts:99",{"_index":3741,"title":{},"body":{"classes/VirtualMachinePorts.html":{}}}],["src/app/services/modelsexport/theaterexport.ts",{"_index":607,"title":{},"body":{"classes/AreaExport.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesTSD.html":{},"classes/SourceExport.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{}}}],["src/app/services/modelsexport/theaterexport.ts:10",{"_index":3588,"title":{},"body":{"classes/TheaterExport.html":{}}}],["src/app/services/modelsexport/theaterexport.ts:11",{"_index":3589,"title":{},"body":{"classes/TheaterExport.html":{}}}],["src/app/services/modelsexport/theaterexport.ts:17",{"_index":3657,"title":{},"body":{"classes/TheaterSimpleData.html":{}}}],["src/app/services/modelsexport/theaterexport.ts:18",{"_index":3656,"title":{},"body":{"classes/TheaterSimpleData.html":{}}}],["src/app/services/modelsexport/theaterexport.ts:24",{"_index":3227,"title":{},"body":{"classes/PropertiesTSD.html":{}}}],["src/app/services/modelsexport/theaterexport.ts:25",{"_index":3224,"title":{},"body":{"classes/PropertiesTSD.html":{}}}],["src/app/services/modelsexport/theaterexport.ts:26",{"_index":3225,"title":{},"body":{"classes/PropertiesTSD.html":{}}}],["src/app/services/modelsexport/theaterexport.ts:27",{"_index":3223,"title":{},"body":{"classes/PropertiesTSD.html":{}}}],["src/app/services/modelsexport/theaterexport.ts:28",{"_index":3226,"title":{},"body":{"classes/PropertiesTSD.html":{}}}],["src/app/services/modelsexport/theaterexport.ts:29",{"_index":3222,"title":{},"body":{"classes/PropertiesTSD.html":{}}}],["src/app/services/modelsexport/theaterexport.ts:36",{"_index":3541,"title":{},"body":{"classes/TagsExport.html":{}}}],["src/app/services/modelsexport/theaterexport.ts:43",{"_index":613,"title":{},"body":{"classes/AreaExport.html":{}}}],["src/app/services/modelsexport/theaterexport.ts:44",{"_index":614,"title":{},"body":{"classes/AreaExport.html":{}}}],["src/app/services/modelsexport/theaterexport.ts:51",{"_index":2619,"title":{},"body":{"classes/ModuleInstanceSimpleData.html":{}}}],["src/app/services/modelsexport/theaterexport.ts:52",{"_index":2618,"title":{},"body":{"classes/ModuleInstanceSimpleData.html":{}}}],["src/app/services/modelsexport/theaterexport.ts:58",{"_index":3205,"title":{},"body":{"classes/PropertiesMISD.html":{}}}],["src/app/services/modelsexport/theaterexport.ts:59",{"_index":3208,"title":{},"body":{"classes/PropertiesMISD.html":{}}}],["src/app/services/modelsexport/theaterexport.ts:60",{"_index":3203,"title":{},"body":{"classes/PropertiesMISD.html":{}}}],["src/app/services/modelsexport/theaterexport.ts:61",{"_index":3206,"title":{},"body":{"classes/PropertiesMISD.html":{}}}],["src/app/services/modelsexport/theaterexport.ts:62",{"_index":3207,"title":{},"body":{"classes/PropertiesMISD.html":{}}}],["src/app/services/modelsexport/theaterexport.ts:63",{"_index":3204,"title":{},"body":{"classes/PropertiesMISD.html":{}}}],["src/app/services/modelsexport/theaterexport.ts:69",{"_index":3420,"title":{},"body":{"classes/SourceExport.html":{}}}],["src/app/services/modelsexport/theaterexport.ts:70",{"_index":3418,"title":{},"body":{"classes/SourceExport.html":{}}}],["src/app/services/modelsexport/theaterexport.ts:71",{"_index":3419,"title":{},"body":{"classes/SourceExport.html":{}}}],["src/app/services/modelsexport/theaterexport.ts:77",{"_index":1027,"title":{},"body":{"classes/ConsumerInterfaceLinkExport.html":{}}}],["src/app/services/modelsexport/theaterexport.ts:78",{"_index":1028,"title":{},"body":{"classes/ConsumerInterfaceLinkExport.html":{}}}],["src/app/services/modelsexport/theaterexport.ts:79",{"_index":1029,"title":{},"body":{"classes/ConsumerInterfaceLinkExport.html":{}}}],["src/app/services/modelsexport/theaterexport.ts:8",{"_index":3590,"title":{},"body":{"classes/TheaterExport.html":{}}}],["src/app/services/modelsexport/theaterexport.ts:9",{"_index":3587,"title":{},"body":{"classes/TheaterExport.html":{}}}],["src/app/services/token/token.service.ts",{"_index":3661,"title":{},"body":{"injectables/TokenService.html":{}}}],["src/app/services/token/token.service.ts:16",{"_index":3687,"title":{},"body":{"injectables/TokenService.html":{}}}],["src/app/services/token/token.service.ts:20",{"_index":3684,"title":{},"body":{"injectables/TokenService.html":{}}}],["src/app/services/token/token.service.ts:24",{"_index":3671,"title":{},"body":{"injectables/TokenService.html":{}}}],["src/app/services/token/token.service.ts:32",{"_index":3683,"title":{},"body":{"injectables/TokenService.html":{}}}],["src/app/services/token/token.service.ts:46",{"_index":3677,"title":{},"body":{"injectables/TokenService.html":{}}}],["src/app/services/token/token.service.ts:54",{"_index":3679,"title":{},"body":{"injectables/TokenService.html":{}}}],["src/app/services/token/token.service.ts:60",{"_index":3672,"title":{},"body":{"injectables/TokenService.html":{}}}],["src/app/services/token/token.service.ts:67",{"_index":3681,"title":{},"body":{"injectables/TokenService.html":{}}}],["src/app/services/token/token.service.ts:74",{"_index":3675,"title":{},"body":{"injectables/TokenService.html":{}}}],["src/app/utility/app.guard.ts",{"_index":700,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["src/app/utility/app.guard.ts:12",{"_index":703,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["src/app/utility/app.guard.ts:20",{"_index":708,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["src/app/utility/app.init.ts",{"_index":3871,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/visualizer",{"_index":3749,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["src/environments/environment",{"_index":327,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AttachmentsService.html":{},"injectables/FlavorService.html":{},"injectables/ModuleService.html":{},"injectables/ParseService.html":{},"injectables/TheaterService.html":{}}}],["ss",{"_index":3435,"title":{},"body":{"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{}}}],["sta",{"_index":1258,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["standard",{"_index":626,"title":{},"body":{"classes/AreaExport.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/SourceExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["standrard",{"_index":1835,"title":{},"body":{"injectables/ExportService.html":{}}}],["start",{"_index":2256,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["startapplication",{"_index":2043,"title":{},"body":{"components/HomeComponent.html":{}}}],["started",{"_index":3883,"title":{"index.html":{}},"body":{}}],["stata",{"_index":2051,"title":{},"body":{"components/HomeComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["state",{"_index":706,"title":{},"body":{"injectables/AuthGuard.html":{},"components/HomeComponent.html":{}}}],["state.url",{"_index":723,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["stati",{"_index":1729,"title":{},"body":{"classes/ExportModule.html":{}}}],["static",{"_index":1620,"title":{},"body":{"classes/EmptyNodeInfo.html":{}}}],["staticvalue",{"_index":1439,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["staticvalue.subnetoutput",{"_index":3067,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["statisticitemdto",{"_index":546,"title":{"classes/StatisticItemDTO.html":{}},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["statistics",{"_index":574,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["statitistiche",{"_index":545,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["stato",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"classes/AreaDTO.html":{},"classes/BlueprintFileDTO.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"components/DataItemComponent.html":{},"classes/DeployInstanceDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/NameMappingDTO.html":{},"components/NavbarComponent.html":{},"components/OffcanvasComponent.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"classes/StatisticItemDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterDTO.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheatreStatusDTO.html":{},"classes/TypesCatalogueDTO.html":{},"components/VisualizerComponent.html":{}}}],["status",{"_index":559,"title":{},"body":{"classes/AreaDTO.html":{},"classes/BlueprintFileDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/NameMappingDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheatreStatusDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["stessi",{"_index":3187,"title":{},"body":{"classes/PerseDataForTheaterComposer.html":{}}}],["stesso",{"_index":3433,"title":{},"body":{"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{}}}],["stilizzata",{"_index":1525,"title":{},"body":{"components/DocsComponent.html":{}}}],["storage",{"_index":912,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["storageservice",{"_index":821,"title":{"injectables/StorageService.html":{}},"body":{"components/ComposerComponent.html":{},"components/HomeComponent.html":{},"injectables/StorageService.html":{},"components/VisualizerComponent.html":{}}}],["storaging",{"_index":3453,"title":{},"body":{"injectables/StorageService.html":{}}}],["stored",{"_index":3910,"title":{},"body":{"index.html":{}}}],["string",{"_index":20,"title":{},"body":{"classes/Aoption.html":{},"components/AppComponent.html":{},"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"injectables/AttachmentsService.html":{},"classes/BlueprintFileDTO.html":{},"classes/BorderNetworkDTO.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"components/ControlTemplate.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputReturnedV2.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/DeployInstanceDTO.html":{},"components/DocsComponent.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"classes/FlavorApplication.html":{},"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"injectables/FlavorService.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"classes/HostModuleDTO.html":{},"classes/HostNode.html":{},"classes/HostPortModuleDTO.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModalButton.html":{},"classes/ModalItem.html":{},"injectables/ModalService.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"injectables/ModuleService.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"interfaces/ModuleTopology.html":{},"classes/NameMappingDTO.html":{},"components/NavbarComponent.html":{},"classes/NavbarElement.html":{},"classes/NavbarItem.html":{},"classes/NetOSRouterDTO.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkDTO.html":{},"classes/NetworkNode.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/NodeTopologyElement.html":{},"components/OffcanvasComponent.html":{},"classes/PageableDTO.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SelectOption.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/SingleDataInputReturned.html":{},"classes/SortDTO.html":{},"classes/SourceExport.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"classes/StatisticItemDTO.html":{},"classes/SubnetDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"components/TabnavComponent.html":{},"classes/TabnavElement.html":{},"classes/TabnavItem.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"injectables/TheaterService.html":{},"classes/TheaterSimpleData.html":{},"interfaces/TheaterTopology.html":{},"classes/TheatreStatusDTO.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/TypesCatalogueDTO.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{},"miscellaneous/functions.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["stringify",{"_index":671,"title":{},"body":{"injectables/AttachmentsService.html":{}}}],["string|number",{"_index":698,"title":{},"body":{"injectables/AttachmentsService.html":{}}}],["structural_parameters",{"_index":534,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["struttura",{"_index":428,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/FlavorApplication.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NetworkNode.html":{},"classes/NodeTopologyElement.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SimpleModuleApplication.html":{},"classes/SubnetNode.html":{},"classes/TheaterApplication.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"miscellaneous/functions.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["strutturare",{"_index":3148,"title":{},"body":{"classes/PerseDataForModuleVisualizer.html":{}}}],["style",{"_index":1343,"title":{},"body":{"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/NetworkComponent.html":{}}}],["styles",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["styleurls",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{}}}],["su",{"_index":1255,"title":{},"body":{"components/DataInputV2Component.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"classes/PerseDataForModuleVisualizer.html":{}}}],["sua",{"_index":1483,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/ParseDataForTheaterVisualizer.html":{}}}],["sub",{"_index":1755,"title":{},"body":{"classes/ExportModule.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["subject",{"_index":3426,"title":{},"body":{"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{}}}],["subjecttype",{"_index":887,"title":{},"body":{"components/ComposerComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"injectables/ExportService.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"components/VisualizerComponent.html":{}}}],["subjecttype.module",{"_index":880,"title":{},"body":{"components/ComposerComponent.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"components/VisualizerComponent.html":{}}}],["subjecttype.module.tolowercase",{"_index":1842,"title":{},"body":{"injectables/ExportService.html":{},"injectables/FileService.html":{}}}],["subjecttype.theater",{"_index":885,"title":{},"body":{"components/ComposerComponent.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"components/VisualizerComponent.html":{}}}],["subjecttype.theater.tolowercase",{"_index":1850,"title":{},"body":{"injectables/ExportService.html":{},"injectables/FileService.html":{}}}],["submit",{"_index":1125,"title":{},"body":{"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{}}}],["submitted",{"_index":1123,"title":{},"body":{"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{}}}],["subnet",{"_index":777,"title":{},"body":{"classes/BorderNetworkDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/EmptyNodeInfo.html":{},"classes/ExportModule.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetOSRouterDTO.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkDTO.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteSubnetInfo.html":{},"classes/SubnetDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"miscellaneous/functions.html":{}}}],["subnet.component",{"_index":3356,"title":{},"body":{"classes/ReteSubnetInfo.html":{},"classes/SubnetNode.html":{}}}],["subnet.component.html",{"_index":3468,"title":{},"body":{"components/SubnetComponent.html":{}}}],["subnet.component.sass",{"_index":3467,"title":{},"body":{"components/SubnetComponent.html":{}}}],["subnet.data.cidr",{"_index":1780,"title":{},"body":{"classes/ExportModule.html":{}}}],["subnet.data.isdhcp",{"_index":1781,"title":{},"body":{"classes/ExportModule.html":{}}}],["subnet.data.name",{"_index":1813,"title":{},"body":{"classes/ExportModule.html":{}}}],["subnet.data.output",{"_index":1783,"title":{},"body":{"classes/ExportModule.html":{}}}],["subnet.data.version",{"_index":1779,"title":{},"body":{"classes/ExportModule.html":{}}}],["subnet.name",{"_index":3048,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["subnet.network.name",{"_index":3050,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["subnet/subnetnode",{"_index":1629,"title":{},"body":{"classes/EmptyNodeInfo.html":{}}}],["subnet_name",{"_index":3047,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["subnet_number",{"_index":415,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/ReteConnection.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["subnetcomponent",{"_index":207,"title":{"components/SubnetComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"classes/ReteSubnetInfo.html":{},"components/SubnetComponent.html":{},"classes/SubnetNode.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"overview.html":{}}}],["subnetdto",{"_index":787,"title":{"classes/SubnetDTO.html":{}},"body":{"classes/BorderNetworkDTO.html":{},"classes/HostModuleDTO.html":{},"classes/HostPortModuleDTO.html":{},"classes/NetOSRouterDTO.html":{},"classes/NetworkDTO.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/SubnetDTO.html":{},"miscellaneous/functions.html":{}}}],["subnetexport",{"_index":997,"title":{"classes/SubnetExport.html":{}},"body":{"classes/ConstraintsMSD.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["subneticon",{"_index":2377,"title":{},"body":{"components/MirroringModuleInstanceComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["subneticon=subneticon",{"_index":2389,"title":{},"body":{"components/MirroringModuleInstanceComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["subnetlinkedtoport",{"_index":1760,"title":{},"body":{"classes/ExportModule.html":{}}}],["subnetlinkedtoport.data.name",{"_index":1764,"title":{},"body":{"classes/ExportModule.html":{}}}],["subnetlinkedtoport.outputs",{"_index":1766,"title":{},"body":{"classes/ExportModule.html":{}}}],["subnetlinkedtoport.outputs[key",{"_index":1768,"title":{},"body":{"classes/ExportModule.html":{}}}],["subnetnode",{"_index":1628,"title":{"classes/SubnetNode.html":{}},"body":{"classes/EmptyNodeInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/SubnetNode.html":{},"miscellaneous/functions.html":{}}}],["subnetoutput",{"_index":1440,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["subnetport",{"_index":1767,"title":{},"body":{"classes/ExportModule.html":{}}}],["subnetport.connections.foreach(c",{"_index":1770,"title":{},"body":{"classes/ExportModule.html":{}}}],["subnets",{"_index":996,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/ExportModule.html":{},"classes/HostModuleDTO.html":{},"classes/HostPortModuleDTO.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["subnetsimpledata",{"_index":979,"title":{"classes/SubnetSimpleData.html":{}},"body":{"classes/ConstraintsMSD.html":{},"classes/ExportModule.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["subnetsimpledata.relationships.push",{"_index":1784,"title":{},"body":{"classes/ExportModule.html":{}}}],["subnettypeexport",{"_index":973,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/ExportModule.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["subnettypeexport.subnet",{"_index":1778,"title":{},"body":{"classes/ExportModule.html":{}}}],["subscribe",{"_index":935,"title":{},"body":{"components/ComposerComponent.html":{},"injectables/ModalService.html":{}}}],["subscribe(data",{"_index":1555,"title":{},"body":{"components/DocsComponent.html":{}}}],["subscribe(el",{"_index":928,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["subscriber",{"_index":92,"title":{},"body":{"components/AppComponent.html":{}}}],["success",{"_index":2420,"title":{},"body":{"classes/ModalButton.html":{},"classes/ModalItem.html":{}}}],["suddivisione",{"_index":3504,"title":{},"body":{"components/TabnavComponent.html":{}}}],["sugli",{"_index":3176,"title":{},"body":{"classes/PerseDataForTheaterComposer.html":{}}}],["sui",{"_index":3154,"title":{},"body":{"classes/PerseDataForModuleVisualizer.html":{}}}],["sul",{"_index":1393,"title":{},"body":{"components/DataItemComponent.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["sulle",{"_index":1677,"title":{},"body":{"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["suo",{"_index":2308,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["suoi",{"_index":1360,"title":{},"body":{"components/DataItemComponent.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["super(enummoduletype.mirroringmoduleinstance",{"_index":2410,"title":{},"body":{"classes/MirroringModuleInstanceNode.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{}}}],["super(enummoduletype.theaterinternalservicemoduleinstance",{"_index":3369,"title":{},"body":{"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{}}}],["super(enummoduletype.theatermoduleinstance",{"_index":3373,"title":{},"body":{"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["super(enumnodetype.host",{"_index":2335,"title":{},"body":{"classes/HostNode.html":{},"classes/ReteHostInfo.html":{}}}],["super(enumnodetype.network",{"_index":2770,"title":{},"body":{"classes/NetworkNode.html":{},"classes/ReteNetworkInfo.html":{}}}],["super(enumnodetype.subnet",{"_index":3357,"title":{},"body":{"classes/ReteSubnetInfo.html":{},"classes/SubnetNode.html":{}}}],["super(key",{"_index":1057,"title":{},"body":{"components/ControlTemplate.html":{},"classes/_Control.html":{}}}],["super(router",{"_index":712,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["super(service",{"_index":2221,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["support",{"_index":2104,"title":{},"body":{"components/HomeComponent.html":{}}}],["supporta",{"_index":2782,"title":{},"body":{"components/OffcanvasComponent.html":{},"modules.html":{}}}],["supportmachineid",{"_index":1993,"title":{},"body":{"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{}}}],["supporto",{"_index":1651,"title":{},"body":{"classes/ExportModule.html":{},"components/HomeComponent.html":{}}}],["sure",{"_index":2132,"title":{},"body":{"components/HomeComponent.html":{}}}],["svg",{"_index":3929,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":1301,"title":{},"body":{"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{}}}],["switchare",{"_index":800,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["sx",{"_index":2809,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["sysman.creo.nodes.automaticsystem",{"_index":1492,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["sysman.creo.nodes.border",{"_index":1493,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["sysman.creo.nodes.externalvirtualmachine",{"_index":1491,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["sysman.creo.nodes.mirroringmoduleinstance",{"_index":1488,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["sysman.creo.nodes.theater",{"_index":1515,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["sysman.creo.nodes.theaterinternalservicemoduleinstance",{"_index":1489,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["sysman.creo.nodes.theatermoduleinstance",{"_index":1487,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["sysman.creo.nodes.theatremoduleinstance",{"_index":1496,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["sysman.creo.nodes.virtualservermoduleinstance",{"_index":1490,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["system",{"_index":941,"title":{},"body":{"components/ComposerComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"components/HomeComponent.html":{},"components/VisualizerComponent.html":{}}}],["system/composer/composer.component",{"_index":285,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["system/composer/composer.component.ts",{"_index":794,"title":{},"body":{"components/ComposerComponent.html":{}}}],["system/composer/composer.component.ts:118",{"_index":848,"title":{},"body":{"components/ComposerComponent.html":{}}}],["system/composer/composer.component.ts:140",{"_index":834,"title":{},"body":{"components/ComposerComponent.html":{}}}],["system/composer/composer.component.ts:162",{"_index":845,"title":{},"body":{"components/ComposerComponent.html":{}}}],["system/composer/composer.component.ts:182",{"_index":828,"title":{},"body":{"components/ComposerComponent.html":{}}}],["system/composer/composer.component.ts:25",{"_index":864,"title":{},"body":{"components/ComposerComponent.html":{}}}],["system/composer/composer.component.ts:27",{"_index":884,"title":{},"body":{"components/ComposerComponent.html":{}}}],["system/composer/composer.component.ts:28",{"_index":866,"title":{},"body":{"components/ComposerComponent.html":{}}}],["system/composer/composer.component.ts:29",{"_index":860,"title":{},"body":{"components/ComposerComponent.html":{}}}],["system/composer/composer.component.ts:30",{"_index":888,"title":{},"body":{"components/ComposerComponent.html":{}}}],["system/composer/composer.component.ts:32",{"_index":881,"title":{},"body":{"components/ComposerComponent.html":{}}}],["system/composer/composer.component.ts:33",{"_index":886,"title":{},"body":{"components/ComposerComponent.html":{}}}],["system/composer/composer.component.ts:40",{"_index":877,"title":{},"body":{"components/ComposerComponent.html":{}}}],["system/composer/composer.component.ts:47",{"_index":856,"title":{},"body":{"components/ComposerComponent.html":{}}}],["system/composer/composer.component.ts:54",{"_index":867,"title":{},"body":{"components/ComposerComponent.html":{}}}],["system/composer/composer.component.ts:61",{"_index":882,"title":{},"body":{"components/ComposerComponent.html":{}}}],["system/composer/composer.component.ts:67",{"_index":871,"title":{},"body":{"components/ComposerComponent.html":{}}}],["system/composer/composer.component.ts:74",{"_index":822,"title":{},"body":{"components/ComposerComponent.html":{}}}],["system/rete",{"_index":271,"title":{},"body":{"modules/AppModule.html":{}}}],["system/visualizer/visualizer.component",{"_index":284,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["system/visualizer/visualizer.component.ts",{"_index":3750,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["system/visualizer/visualizer.component.ts:117",{"_index":3758,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["system/visualizer/visualizer.component.ts:137",{"_index":3755,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["system/visualizer/visualizer.component.ts:170",{"_index":3757,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["system/visualizer/visualizer.component.ts:199",{"_index":3754,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["system/visualizer/visualizer.component.ts:26",{"_index":3760,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["system/visualizer/visualizer.component.ts:28",{"_index":3763,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["system/visualizer/visualizer.component.ts:29",{"_index":3770,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["system/visualizer/visualizer.component.ts:32",{"_index":3767,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["system/visualizer/visualizer.component.ts:33",{"_index":3769,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["system/visualizer/visualizer.component.ts:41",{"_index":3762,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["system/visualizer/visualizer.component.ts:48",{"_index":3759,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["system/visualizer/visualizer.component.ts:55",{"_index":3764,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["system/visualizer/visualizer.component.ts:62",{"_index":3768,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["system/visualizer/visualizer.component.ts:68",{"_index":3761,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["system/visualizer/visualizer.component.ts:75",{"_index":3753,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["t",{"_index":2341,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["t.name",{"_index":1918,"title":{},"body":{"classes/ExportTheater.html":{}}}],["tab",{"_index":2830,"title":{},"body":{"components/OffcanvasComponent.html":{},"components/TabnavComponent.html":{},"classes/TabnavElement.html":{},"classes/TabnavItem.html":{}}}],["tabnav",{"_index":3505,"title":{},"body":{"components/TabnavComponent.html":{}}}],["tabnav'},{'name",{"_index":209,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["tabnav.component.html",{"_index":3507,"title":{},"body":{"components/TabnavComponent.html":{}}}],["tabnav.component.sass",{"_index":3506,"title":{},"body":{"components/TabnavComponent.html":{}}}],["tabnavcomponent",{"_index":208,"title":{"components/TabnavComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"classes/TabnavElement.html":{},"classes/TabnavItem.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"overview.html":{}}}],["tabnavelement",{"_index":3512,"title":{"classes/TabnavElement.html":{}},"body":{"components/TabnavComponent.html":{},"classes/TabnavElement.html":{},"classes/TabnavItem.html":{}}}],["tabnavitem",{"_index":3531,"title":{"classes/TabnavItem.html":{}},"body":{"classes/TabnavElement.html":{},"classes/TabnavItem.html":{}}}],["tabnavtype",{"_index":3523,"title":{},"body":{"components/TabnavComponent.html":{}}}],["tag",{"_index":13,"title":{},"body":{"classes/Aoption.html":{},"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"classes/GenericParameterDTO.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"classes/NavbarElement.html":{},"classes/NavbarItem.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/SourceExport.html":{},"classes/StatisticItemDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheaterSimpleData.html":{},"classes/TypesCatalogueDTO.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["tagcataloguedto",{"_index":747,"title":{"classes/TagCatalogueDTO.html":{}},"body":{"classes/BlueprintFileDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/NameMappingDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheatreStatusDTO.html":{}}}],["tags",{"_index":575,"title":{},"body":{"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"classes/BlueprintFileDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/DeployInstanceDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/ExportTheater.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/NameMappingDTO.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesTSD.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/SourceExport.html":{},"classes/StatisticItemDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheaterSimpleData.html":{},"classes/TheatreStatusDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["tagsexport",{"_index":632,"title":{"classes/TagsExport.html":{}},"body":{"classes/AreaExport.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesTSD.html":{},"classes/SourceExport.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{}}}],["tagtip",{"_index":592,"title":{"classes/TagTIP.html":{}},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["take(2",{"_index":2487,"title":{},"body":{"injectables/ModalService.html":{}}}],["tale",{"_index":2026,"title":{},"body":{"components/HomeComponent.html":{}}}],["target",{"_index":1012,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/ExportModule.html":{},"components/HostComponent.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"components/NetworkComponent.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"components/SubnetComponent.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["tasto",{"_index":1394,"title":{},"body":{"components/DataItemComponent.html":{}}}],["te",{"_index":1883,"title":{},"body":{"classes/ExportTheater.html":{}}}],["te.description",{"_index":1885,"title":{},"body":{"classes/ExportTheater.html":{}}}],["te.imports",{"_index":1887,"title":{},"body":{"classes/ExportTheater.html":{}}}],["te.node_templates",{"_index":1891,"title":{},"body":{"classes/ExportTheater.html":{}}}],["te.tosca_definitions_version",{"_index":1884,"title":{},"body":{"classes/ExportTheater.html":{}}}],["teaatro",{"_index":766,"title":{},"body":{"classes/BlueprintFileDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/NameMappingDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TheaterDTO.html":{},"classes/TheatreStatusDTO.html":{}}}],["teatr",{"_index":610,"title":{},"body":{"classes/AreaExport.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesTSD.html":{},"classes/SourceExport.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{}}}],["teatre",{"_index":1513,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["teatri",{"_index":459,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"components/VisualizerComponent.html":{}}}],["teatro",{"_index":461,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"classes/BlueprintFileDTO.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/DeployInstanceDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"classes/FlavorApplication.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"interfaces/ModuleTopology.html":{},"classes/NameMappingDTO.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesTSD.html":{},"classes/ReteConnection.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/SourceExport.html":{},"classes/StatisticItemDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheaterSimpleData.html":{},"interfaces/TheaterTopology.html":{},"classes/TheatreStatusDTO.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/TypesCatalogueDTO.html":{},"components/VisualizerComponent.html":{},"miscellaneous/functions.html":{}}}],["template",{"_index":52,"title":{},"body":{"classes/Aoption.html":{},"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/ModalButton.html":{},"components/ModalComponent.html":{},"classes/ModalItem.html":{},"components/NavbarComponent.html":{},"classes/NavbarElement.html":{},"components/NavbarElementComponent.html":{},"classes/NavbarItem.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"classes/TabnavElement.html":{},"classes/TabnavItem.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{},"components/VisualizerComponent.html":{}}}],["template_title",{"_index":36,"title":{},"body":{"classes/Aoption.html":{},"classes/NavbarElement.html":{},"classes/NavbarItem.html":{}}}],["templateref",{"_index":25,"title":{},"body":{"classes/Aoption.html":{},"components/HomeComponent.html":{},"classes/ModalButton.html":{},"classes/ModalItem.html":{},"classes/NavbarElement.html":{},"classes/NavbarItem.html":{},"components/OffcanvasComponent.html":{},"classes/TabnavElement.html":{},"classes/TabnavItem.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{}}}],["templates",{"_index":1726,"title":{},"body":{"classes/ExportModule.html":{}}}],["templateurl",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{}}}],["termini",{"_index":1481,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["test",{"_index":3919,"title":{},"body":{"index.html":{}}}],["tests",{"_index":3918,"title":{},"body":{"index.html":{}}}],["testuale",{"_index":1458,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["text",{"_index":50,"title":{},"body":{"classes/Aoption.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/ModalButton.html":{},"classes/ModalItem.html":{},"injectables/ModalService.html":{},"classes/NavbarElement.html":{},"classes/NavbarItem.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"classes/TabnavElement.html":{},"classes/TabnavItem.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["text/html",{"_index":1553,"title":{},"body":{"components/DocsComponent.html":{}}}],["text_content",{"_index":2423,"title":{},"body":{"classes/ModalButton.html":{},"classes/ModalItem.html":{},"injectables/ModalService.html":{}}}],["textarea",{"_index":1096,"title":{},"body":{"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"components/HomeComponent.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{}}}],["textspinner",{"_index":82,"title":{},"body":{"components/AppComponent.html":{}}}],["theater",{"_index":39,"title":{},"body":{"classes/Aoption.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/ElementIntoTheaterDTO.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"classes/FlavorApplication.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"interfaces/ModuleTopology.html":{},"components/NavbarComponent.html":{},"classes/NavbarElement.html":{},"components/NavbarElementComponent.html":{},"classes/NavbarItem.html":{},"components/NetworkComponent.html":{},"classes/NodeTopologyElement.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/ReteConnection.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"classes/TagTIP.html":{},"classes/TheaterApplication.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/TypesCatalogueDTO.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"miscellaneous/functions.html":{}}}],["theater.service",{"_index":670,"title":{},"body":{"injectables/AttachmentsService.html":{}}}],["theater.topology",{"_index":2961,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["theater_id",{"_index":667,"title":{},"body":{"injectables/AttachmentsService.html":{},"injectables/TheaterService.html":{}}}],["theater_uuid",{"_index":2656,"title":{},"body":{"injectables/ModuleService.html":{},"injectables/TheaterService.html":{}}}],["theaterapplication",{"_index":445,"title":{"classes/TheaterApplication.html":{}},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"components/VisualizerComponent.html":{},"miscellaneous/functions.html":{}}}],["theaterapplication).validateobject",{"_index":1974,"title":{},"body":{"injectables/FileService.html":{}}}],["theatercomposer",{"_index":846,"title":{},"body":{"components/ComposerComponent.html":{}}}],["theaterdesigner/tddata",{"_index":3102,"title":{},"body":{"injectables/ParseService.html":{}}}],["theaterdto",{"_index":382,"title":{"classes/TheaterDTO.html":{}},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"classes/BlueprintFileDTO.html":{},"interfaces/CommonModule.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/FlavorApplication.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"interfaces/ModuleTopology.html":{},"classes/NameMappingDTO.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/ReteConnection.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"injectables/TheaterService.html":{},"interfaces/TheaterTopology.html":{},"classes/TheatreStatusDTO.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/TypesCatalogueDTO.html":{}}}],["theaterdto:61",{"_index":3547,"title":{},"body":{"classes/TheaterApplication.html":{}}}],["theaterdto:62",{"_index":3548,"title":{},"body":{"classes/TheaterApplication.html":{}}}],["theaterdto:63",{"_index":3549,"title":{},"body":{"classes/TheaterApplication.html":{}}}],["theaterdto:64",{"_index":3550,"title":{},"body":{"classes/TheaterApplication.html":{}}}],["theaterdto:65",{"_index":3551,"title":{},"body":{"classes/TheaterApplication.html":{}}}],["theaterdto:66",{"_index":3552,"title":{},"body":{"classes/TheaterApplication.html":{}}}],["theaterdto:67",{"_index":3553,"title":{},"body":{"classes/TheaterApplication.html":{}}}],["theaterdto:68",{"_index":3554,"title":{},"body":{"classes/TheaterApplication.html":{}}}],["theaterdto:69",{"_index":3555,"title":{},"body":{"classes/TheaterApplication.html":{}}}],["theaterdto:70",{"_index":3556,"title":{},"body":{"classes/TheaterApplication.html":{}}}],["theaterdto:71",{"_index":3557,"title":{},"body":{"classes/TheaterApplication.html":{}}}],["theaterdto:72",{"_index":3558,"title":{},"body":{"classes/TheaterApplication.html":{}}}],["theaterdto:73",{"_index":3559,"title":{},"body":{"classes/TheaterApplication.html":{}}}],["theaterdto:74",{"_index":3560,"title":{},"body":{"classes/TheaterApplication.html":{}}}],["theaterdto:75",{"_index":3561,"title":{},"body":{"classes/TheaterApplication.html":{}}}],["theaterdto:76",{"_index":3562,"title":{},"body":{"classes/TheaterApplication.html":{}}}],["theaterdto:77",{"_index":3563,"title":{},"body":{"classes/TheaterApplication.html":{}}}],["theaterdto:78",{"_index":3564,"title":{},"body":{"classes/TheaterApplication.html":{}}}],["theaterdto:79",{"_index":3565,"title":{},"body":{"classes/TheaterApplication.html":{}}}],["theaterdto:80",{"_index":3566,"title":{},"body":{"classes/TheaterApplication.html":{}}}],["theaterexport",{"_index":628,"title":{"classes/TheaterExport.html":{}},"body":{"classes/AreaExport.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesTSD.html":{},"classes/SourceExport.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{}}}],["theaterinstancedto",{"_index":605,"title":{"classes/TheaterInstanceDTO.html":{}},"body":{"classes/AreaDTO.html":{},"classes/BlueprintFileDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/NameMappingDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterDTO.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheatreStatusDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["theaterinstancepropertiesdto",{"_index":405,"title":{"classes/TheaterInstancePropertiesDTO.html":{}},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"interfaces/CommonModule.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/FlavorApplication.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/ReteConnection.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterApplication.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/TypesCatalogueDTO.html":{}}}],["theaterinternalservicemoduleinstance",{"_index":1465,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/EmptyModuleInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{}}}],["theaterinternalservicemoduleinstance.component",{"_index":3368,"title":{},"body":{"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{}}}],["theaterinternalservicemoduleinstance.component.html",{"_index":3601,"title":{},"body":{"components/TheaterInternalServiceModuleInstanceComponent.html":{}}}],["theaterinternalservicemoduleinstance.component.sass",{"_index":3600,"title":{},"body":{"components/TheaterInternalServiceModuleInstanceComponent.html":{}}}],["theaterinternalservicemoduleinstance/theaterinternalservicemoduleinstancenode",{"_index":1597,"title":{},"body":{"classes/EmptyModuleInfo.html":{}}}],["theaterinternalservicemoduleinstance_icon",{"_index":3612,"title":{},"body":{"components/TheaterInternalServiceModuleInstanceComponent.html":{}}}],["theaterinternalservicemoduleinstancecomponent",{"_index":210,"title":{"components/TheaterInternalServiceModuleInstanceComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"overview.html":{}}}],["theaterinternalservicemoduleinstanceicon",{"_index":3602,"title":{},"body":{"components/TheaterInternalServiceModuleInstanceComponent.html":{}}}],["theaterinternalservicemoduleinstancenode",{"_index":1596,"title":{"classes/TheaterInternalServiceModuleInstanceNode.html":{}},"body":{"classes/EmptyModuleInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"miscellaneous/functions.html":{}}}],["theatermoduleinstance",{"_index":1462,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/EmptyModuleInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["theatermoduleinstance.component",{"_index":3372,"title":{},"body":{"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["theatermoduleinstance.component.html",{"_index":3624,"title":{},"body":{"components/TheaterModuleInstanceComponent.html":{}}}],["theatermoduleinstance.component.sass",{"_index":3623,"title":{},"body":{"components/TheaterModuleInstanceComponent.html":{}}}],["theatermoduleinstance/theatermoduleinstancenode",{"_index":1599,"title":{},"body":{"classes/EmptyModuleInfo.html":{}}}],["theatermoduleinstance_icon",{"_index":3635,"title":{},"body":{"components/TheaterModuleInstanceComponent.html":{}}}],["theatermoduleinstancecomponent",{"_index":211,"title":{"components/TheaterModuleInstanceComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"overview.html":{}}}],["theatermoduleinstanceicon",{"_index":3625,"title":{},"body":{"components/TheaterModuleInstanceComponent.html":{}}}],["theatermoduleinstancenode",{"_index":1598,"title":{"classes/TheaterModuleInstanceNode.html":{}},"body":{"classes/EmptyModuleInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/TheaterModuleInstanceNode.html":{},"miscellaneous/functions.html":{}}}],["theaterproperties",{"_index":2967,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["theaterservice",{"_index":231,"title":{"injectables/TheaterService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AttachmentsService.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"injectables/TheaterService.html":{},"overview.html":{}}}],["theatersimpledata",{"_index":630,"title":{"classes/TheaterSimpleData.html":{}},"body":{"classes/AreaExport.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/ExportTheater.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesTSD.html":{},"classes/SourceExport.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{}}}],["theatersimpledata.properties.areas.push",{"_index":1913,"title":{},"body":{"classes/ExportTheater.html":{}}}],["theatersimpledata.properties.tags.push",{"_index":1917,"title":{},"body":{"classes/ExportTheater.html":{}}}],["theatertopology",{"_index":475,"title":{"interfaces/TheaterTopology.html":{}},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["theatertype",{"_index":1514,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"injectables/ExportService.html":{},"injectables/FileService.html":{},"classes/ParseDataForTheaterVisualizer.html":{}}}],["theatertype=\".\"+subjecttype.theater.tolowercase",{"_index":1856,"title":{},"body":{"injectables/ExportService.html":{}}}],["theatertypeexport",{"_index":617,"title":{},"body":{"classes/AreaExport.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/ExportTheater.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesTSD.html":{},"classes/SourceExport.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{}}}],["theatertypeexport.theater",{"_index":1909,"title":{},"body":{"classes/ExportTheater.html":{}}}],["theateruuid",{"_index":2935,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["theatervisualizer",{"_index":3756,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["theatervisualizer/tvdata",{"_index":3099,"title":{},"body":{"injectables/ParseService.html":{}}}],["theatre",{"_index":1507,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["theatremoduleinstance",{"_index":1464,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/EmptyModuleInfo.html":{}}}],["theatrestatusdto",{"_index":748,"title":{"classes/TheatreStatusDTO.html":{}},"body":{"classes/BlueprintFileDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/NameMappingDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheatreStatusDTO.html":{}}}],["then((v",{"_index":2126,"title":{},"body":{"components/HomeComponent.html":{}}}],["this._data",{"_index":3465,"title":{},"body":{"injectables/StorageService.html":{}}}],["this._show",{"_index":2458,"title":{},"body":{"components/ModalComponent.html":{},"components/OffcanvasComponent.html":{}}}],["this._value",{"_index":1316,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["this.active",{"_index":931,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["this.active(this.element.element[0].id",{"_index":3526,"title":{},"body":{"components/TabnavComponent.html":{}}}],["this.activetab",{"_index":3527,"title":{},"body":{"components/TabnavComponent.html":{}}}],["this.authenticated",{"_index":718,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["this.author",{"_index":905,"title":{},"body":{"components/ComposerComponent.html":{},"components/HomeComponent.html":{}}}],["this.branch",{"_index":2106,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.cdr.detectchanges",{"_index":154,"title":{},"body":{"components/AppComponent.html":{},"components/DataInputComponent.html":{},"components/DataItemComponent.html":{},"components/OffcanvasComponent.html":{},"components/TabnavComponent.html":{}}}],["this.compodoc_index_html",{"_index":1556,"title":{},"body":{"components/DocsComponent.html":{}}}],["this.component",{"_index":1058,"title":{},"body":{"components/ControlTemplate.html":{},"classes/_Control.html":{}}}],["this.components",{"_index":3296,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["this.container",{"_index":3294,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["this.createnewnode(node",{"_index":2339,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["this.data",{"_index":915,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["this.data.component",{"_index":2337,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["this.data.render",{"_index":2336,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["this.data_input_template",{"_index":2111,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.dataeditor",{"_index":1703,"title":{},"body":{"classes/ExportModule.html":{},"classes/ExportTheater.html":{}}}],["this.dataeditor.nodes",{"_index":1712,"title":{},"body":{"classes/ExportModule.html":{},"classes/ExportTheater.html":{}}}],["this.dataeditor.nodes[c.node",{"_index":1761,"title":{},"body":{"classes/ExportModule.html":{},"classes/ExportTheater.html":{}}}],["this.dataeditor.nodes[key",{"_index":1713,"title":{},"body":{"classes/ExportModule.html":{},"classes/ExportTheater.html":{}}}],["this.dataform",{"_index":1183,"title":{},"body":{"components/DataInputComponent.html":{}}}],["this.dataform.addcontrol(e.id",{"_index":1186,"title":{},"body":{"components/DataInputComponent.html":{}}}],["this.datafromrouter",{"_index":899,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["this.datafromrouter.author",{"_index":906,"title":{},"body":{"components/ComposerComponent.html":{}}}],["this.datafromrouter.description",{"_index":904,"title":{},"body":{"components/ComposerComponent.html":{}}}],["this.datafromrouter.id",{"_index":3772,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.datafromrouter.name",{"_index":902,"title":{},"body":{"components/ComposerComponent.html":{}}}],["this.datafromrouter.type",{"_index":908,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["this.datainputelement",{"_index":1327,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["this.datainputelement.element",{"_index":1325,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["this.datamodal",{"_index":2110,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.datasubmitted.emit(val",{"_index":1199,"title":{},"body":{"components/DataInputComponent.html":{}}}],["this.description",{"_index":903,"title":{},"body":{"components/ComposerComponent.html":{},"components/HomeComponent.html":{}}}],["this.directchange",{"_index":1311,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["this.editor",{"_index":3295,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["this.editor.nodes",{"_index":3313,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["this.editor.tojson",{"_index":3315,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["this.editor.trigger(\"redo",{"_index":3310,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["this.editor.trigger(\"undo",{"_index":3308,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["this.editor.use(angularrenderplugin",{"_index":3299,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["this.editor.use(areaplugin",{"_index":3320,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["this.editor.use(autoarrangeplugin",{"_index":3328,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["this.editor.use(connectionplugin",{"_index":3298,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["this.editor.use(contextmenuplugin",{"_index":3304,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["this.editor.use(historyplugin",{"_index":3302,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["this.editor.use(minimapplugin",{"_index":3301,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["this.element",{"_index":3719,"title":{},"body":{"components/UnderbarComponent.html":{}}}],["this.element.element.foreach",{"_index":1189,"title":{},"body":{"components/DataInputComponent.html":{},"components/NavbarComponent.html":{}}}],["this.element.element.foreach(e",{"_index":1184,"title":{},"body":{"components/DataInputComponent.html":{}}}],["this.element.element.length",{"_index":3525,"title":{},"body":{"components/TabnavComponent.html":{}}}],["this.element.foreach",{"_index":3720,"title":{},"body":{"components/UnderbarComponent.html":{}}}],["this.emitter.trigger('process",{"_index":1064,"title":{},"body":{"components/ControlTemplate.html":{},"classes/_Control.html":{}}}],["this.engine",{"_index":3297,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["this.filejson",{"_index":2127,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.fileloaded",{"_index":2128,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.fileservice.onfileselected(event,this.type",{"_index":2125,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.findnode(i.network.name",{"_index":1807,"title":{},"body":{"classes/ExportModule.html":{}}}],["this.fixtheatername(rowtheater",{"_index":2966,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["this.flavor",{"_index":929,"title":{},"body":{"components/ComposerComponent.html":{}}}],["this.flavorservice.getallflavor",{"_index":3119,"title":{},"body":{"classes/PerseDataForModuleComposer.html":{}}}],["this.formelementcomposer",{"_index":2108,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.formelementmodal",{"_index":2107,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.formelementvisualizer",{"_index":2109,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.formtype",{"_index":1326,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["this.get_and_remove_theater_properties_from_blueprint(rowtheater",{"_index":2968,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["this.getcheckbox",{"_index":1329,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["this.gethostexport(element",{"_index":1717,"title":{},"body":{"classes/ExportModule.html":{}}}],["this.getmainmoduledetails(module",{"_index":3160,"title":{},"body":{"classes/PerseDataForModuleVisualizer.html":{}}}],["this.getmainmoduleinterfaces(module",{"_index":3163,"title":{},"body":{"classes/PerseDataForModuleVisualizer.html":{}}}],["this.getmainmodulenodes(module",{"_index":3162,"title":{},"body":{"classes/PerseDataForModuleVisualizer.html":{}}}],["this.getmainmoduletopology(parsedmodule",{"_index":3161,"title":{},"body":{"classes/PerseDataForModuleVisualizer.html":{}}}],["this.getmodal",{"_index":2539,"title":{},"body":{"injectables/ModalService.html":{}}}],["this.getmoduleconnection(theater",{"_index":2962,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["this.getmoduledict(rowmodules",{"_index":2988,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["this.getmoduleexport",{"_index":1733,"title":{},"body":{"classes/ExportModule.html":{}}}],["this.getmoduleinstanceexport(element",{"_index":1889,"title":{},"body":{"classes/ExportTheater.html":{}}}],["this.getmodulesdetails(modules",{"_index":2992,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["this.getmodulesinterfaces(modules",{"_index":2997,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["this.getmodulesnodes(modules",{"_index":2996,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["this.getmodulestopology(modules",{"_index":2989,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["this.getnetworkexport(element",{"_index":1721,"title":{},"body":{"classes/ExportModule.html":{}}}],["this.getselection",{"_index":1331,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["this.getsubnetexport(element",{"_index":1719,"title":{},"body":{"classes/ExportModule.html":{}}}],["this.gettext",{"_index":1328,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["this.gettheaterexport",{"_index":1890,"title":{},"body":{"classes/ExportTheater.html":{}}}],["this.hasfile",{"_index":914,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["this.hasmultipletag",{"_index":3524,"title":{},"body":{"components/TabnavComponent.html":{}}}],["this.hasproblem",{"_index":920,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["this.headers",{"_index":3689,"title":{},"body":{"injectables/TokenService.html":{}}}],["this.http.get",{"_index":2012,"title":{},"body":{"injectables/FlavorService.html":{},"injectables/ModuleService.html":{},"injectables/TheaterService.html":{}}}],["this.http.get('assets/documentation/index.html",{"_index":1554,"title":{},"body":{"components/DocsComponent.html":{}}}],["this.http.get(link",{"_index":679,"title":{},"body":{"injectables/AttachmentsService.html":{}}}],["this.httpgetoption",{"_index":3692,"title":{},"body":{"injectables/TokenService.html":{}}}],["this.id",{"_index":2118,"title":{},"body":{"components/HomeComponent.html":{},"components/VisualizerComponent.html":{}}}],["this.idforchanges",{"_index":1314,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["this.initemptymoduleinstance(modules",{"_index":3190,"title":{},"body":{"classes/PerseDataForTheaterComposer.html":{}}}],["this.initmodule",{"_index":922,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["this.inittheater",{"_index":924,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["this.inittheaterafterfetch(rowtheater",{"_index":2965,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["this.isfilevalid(this.selectedfile",{"_index":1961,"title":{},"body":{"injectables/FileService.html":{}}}],["this.isfull",{"_index":1405,"title":{},"body":{"components/DataItemComponent.html":{},"components/OffcanvasComponent.html":{}}}],["this.ismodalactive",{"_index":2116,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.itemselected.emit(event",{"_index":3725,"title":{},"body":{"components/UnderbarComponent.html":{}}}],["this.itemselected.emit(val",{"_index":2705,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.keycloak.login",{"_index":720,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["this.mocked",{"_index":3104,"title":{},"body":{"injectables/ParseService.html":{}}}],["this.modal.modaldata.asobservable().subscribe(v",{"_index":155,"title":{},"body":{"components/AppComponent.html":{}}}],["this.modal.show.asobservable().subscribe(v",{"_index":158,"title":{},"body":{"components/AppComponent.html":{}}}],["this.modaldata",{"_index":156,"title":{},"body":{"components/AppComponent.html":{}}}],["this.modaldata.next(modalitem",{"_index":2528,"title":{},"body":{"injectables/ModalService.html":{}}}],["this.module",{"_index":921,"title":{},"body":{"components/ComposerComponent.html":{},"classes/ExportModule.html":{},"components/VisualizerComponent.html":{}}}],["this.module.description",{"_index":1707,"title":{},"body":{"classes/ExportModule.html":{}}}],["this.module.imports",{"_index":1709,"title":{},"body":{"classes/ExportModule.html":{}}}],["this.module.interfaces.foreach(i",{"_index":1797,"title":{},"body":{"classes/ExportModule.html":{}}}],["this.module.version",{"_index":1792,"title":{},"body":{"classes/ExportModule.html":{}}}],["this.modulesdict",{"_index":936,"title":{},"body":{"components/ComposerComponent.html":{}}}],["this.moduleservice).parsetheaterfortheatervisualizer(id",{"_index":3107,"title":{},"body":{"injectables/ParseService.html":{}}}],["this.moduleservice.getallmodules",{"_index":3191,"title":{},"body":{"classes/PerseDataForTheaterComposer.html":{}}}],["this.moduleservice.getmodulebyid(id",{"_index":3158,"title":{},"body":{"classes/PerseDataForModuleVisualizer.html":{}}}],["this.moduleservice.getmodulehostbytheateruuid(module.uuid",{"_index":3165,"title":{},"body":{"classes/PerseDataForModuleVisualizer.html":{}}}],["this.moduleservice.getmodulehostbytheateruuid(simplemoduledto.uuid",{"_index":3003,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["this.moduleservice.getmoduleinterfacesbymoduleid(module.id",{"_index":3166,"title":{},"body":{"classes/PerseDataForModuleVisualizer.html":{}}}],["this.moduleservice.getmoduleinterfacesbymoduleid(simplemoduledto.id",{"_index":3005,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["this.mounted",{"_index":1047,"title":{},"body":{"components/ControlTemplate.html":{},"classes/_Control.html":{}}}],["this.name",{"_index":901,"title":{},"body":{"components/ComposerComponent.html":{},"components/HomeComponent.html":{}}}],["this.onbuttonpressed.emit(val",{"_index":2461,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.onchange(v",{"_index":1060,"title":{},"body":{"components/ControlTemplate.html":{},"classes/_Control.html":{}}}],["this.onchange.emit",{"_index":1313,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["this.onremove.emit(null",{"_index":1406,"title":{},"body":{"components/DataItemComponent.html":{}}}],["this.parseflavor(flavordto",{"_index":3120,"title":{},"body":{"classes/PerseDataForModuleComposer.html":{}}}],["this.parsemainmodule(id",{"_index":3157,"title":{},"body":{"classes/PerseDataForModuleVisualizer.html":{}}}],["this.parsemoduleinstance(theater",{"_index":2960,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["this.parsemodulelist",{"_index":3189,"title":{},"body":{"classes/PerseDataForTheaterComposer.html":{}}}],["this.parsemodulesfromtheater(theater.uuid",{"_index":2956,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["this.parseservice.parseflavorformodulecomposer",{"_index":927,"title":{},"body":{"components/ComposerComponent.html":{}}}],["this.parseservice.parsemoduleformodulevisualizer(this.id",{"_index":3773,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.parseservice.parsemodulefortheatercomposer",{"_index":934,"title":{},"body":{"components/ComposerComponent.html":{}}}],["this.parseservice.parsetheaterfortheatervisualizer(this.id",{"_index":3775,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.parsetheater(id",{"_index":2955,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["this.props",{"_index":1059,"title":{},"body":{"components/ControlTemplate.html":{},"classes/_Control.html":{}}}],["this.props.value",{"_index":1066,"title":{},"body":{"components/ControlTemplate.html":{},"classes/_Control.html":{}}}],["this.putdata(this.key",{"_index":1068,"title":{},"body":{"components/ControlTemplate.html":{},"classes/_Control.html":{}}}],["this.required",{"_index":1335,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["this.returnoutput(event",{"_index":1198,"title":{},"body":{"components/DataInputComponent.html":{}}}],["this.roles.includes(role",{"_index":738,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["this.router.getcurrentnavigation().extras.state",{"_index":900,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["this.router.navigate(['/home",{"_index":937,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["this.router.navigatebyurl",{"_index":2124,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.sanitizer.bypasssecuritytrusthtml(data",{"_index":1557,"title":{},"body":{"components/DocsComponent.html":{}}}],["this.selectedfile",{"_index":1950,"title":{},"body":{"injectables/FileService.html":{}}}],["this.selectoption",{"_index":1330,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["this.selectoption.findindex((el",{"_index":1337,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["this.setconfirmationmodal",{"_index":2521,"title":{},"body":{"injectables/ModalService.html":{}}}],["this.setconfirmationmodal(text_content",{"_index":2538,"title":{},"body":{"injectables/ModalService.html":{}}}],["this.setspinner(false",{"_index":3436,"title":{},"body":{"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{}}}],["this.setvalue(+(this.getdata(key",{"_index":1061,"title":{},"body":{"components/ControlTemplate.html":{},"classes/_Control.html":{}}}],["this.setvalue(val",{"_index":1063,"title":{},"body":{"components/ControlTemplate.html":{},"classes/_Control.html":{}}}],["this.show",{"_index":2825,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["this.show.next(false",{"_index":2537,"title":{},"body":{"injectables/ModalService.html":{}}}],["this.show.next(true",{"_index":2529,"title":{},"body":{"injectables/ModalService.html":{}}}],["this.show=false",{"_index":2459,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.show=true",{"_index":2460,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.showchange.emit(val",{"_index":2457,"title":{},"body":{"components/ModalComponent.html":{},"components/OffcanvasComponent.html":{}}}],["this.showmodal",{"_index":159,"title":{},"body":{"components/AppComponent.html":{}}}],["this.showports",{"_index":2222,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["this.showspinner",{"_index":150,"title":{},"body":{"components/AppComponent.html":{}}}],["this.spinner",{"_index":146,"title":{},"body":{"components/AppComponent.html":{}}}],["this.spinner.subscribe",{"_index":148,"title":{},"body":{"components/AppComponent.html":{}}}],["this.spinnerdata.asobservable",{"_index":3439,"title":{},"body":{"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{}}}],["this.spinnerdata.next",{"_index":3441,"title":{},"body":{"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{}}}],["this.spinnerservice.setspinner(false",{"_index":930,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["this.spinnerservice.setspinner(true",{"_index":925,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["this.ss.hide",{"_index":3443,"title":{},"body":{"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{}}}],["this.ss.show",{"_index":3442,"title":{},"body":{"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{}}}],["this.startapplication",{"_index":2123,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.storageservice.data",{"_index":913,"title":{},"body":{"components/ComposerComponent.html":{},"components/HomeComponent.html":{},"components/VisualizerComponent.html":{}}}],["this.textspinner",{"_index":152,"title":{},"body":{"components/AppComponent.html":{}}}],["this.theater",{"_index":923,"title":{},"body":{"components/ComposerComponent.html":{},"classes/ExportTheater.html":{},"components/VisualizerComponent.html":{}}}],["this.theater.author",{"_index":1911,"title":{},"body":{"classes/ExportTheater.html":{}}}],["this.theater.blueprintfile.imports",{"_index":1888,"title":{},"body":{"classes/ExportTheater.html":{}}}],["this.theater.description",{"_index":1886,"title":{},"body":{"classes/ExportTheater.html":{}}}],["this.theater.properties.areas.foreach(a",{"_index":1912,"title":{},"body":{"classes/ExportTheater.html":{}}}],["this.theater.tags.foreach(t",{"_index":1916,"title":{},"body":{"classes/ExportTheater.html":{}}}],["this.theater.version",{"_index":1910,"title":{},"body":{"classes/ExportTheater.html":{}}}],["this.theaterservice.gettheaterinfobyid(id",{"_index":2964,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["this.theaterservice.gettheatermodulesbyuuid(theateruuid",{"_index":2987,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["this.title",{"_index":1315,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["this.token",{"_index":3688,"title":{},"body":{"injectables/TokenService.html":{}}}],["this.tokenservice.gethttpgetoption",{"_index":2013,"title":{},"body":{"injectables/FlavorService.html":{},"injectables/ModuleService.html":{},"injectables/TheaterService.html":{}}}],["this.type",{"_index":907,"title":{},"body":{"components/ComposerComponent.html":{},"components/HomeComponent.html":{},"components/VisualizerComponent.html":{}}}],["this.type.tolowercase",{"_index":2134,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.valorizenode(node",{"_index":2340,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["this.value",{"_index":1334,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["this.value.asobservable",{"_index":2522,"title":{},"body":{"injectables/ModalService.html":{}}}],["this.value.next(false",{"_index":2534,"title":{},"body":{"injectables/ModalService.html":{}}}],["this.value.next(null",{"_index":2523,"title":{},"body":{"injectables/ModalService.html":{}}}],["this.value.next(true",{"_index":2532,"title":{},"body":{"injectables/ModalService.html":{}}}],["this.valuechange.emit(val",{"_index":1312,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["this.virtualmachines",{"_index":1732,"title":{},"body":{"classes/ExportModule.html":{}}}],["this.virtualmachines.push(msdvm",{"_index":1776,"title":{},"body":{"classes/ExportModule.html":{}}}],["ti",{"_index":1908,"title":{},"body":{"classes/ExportTheater.html":{}}}],["ti[this.theater.name",{"_index":1919,"title":{},"body":{"classes/ExportTheater.html":{}}}],["times",{"_index":2463,"title":{},"body":{"components/ModalComponent.html":{}}}],["tipi",{"_index":898,"title":{},"body":{"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"components/HomeComponent.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/_Control.html":{}}}],["tipo",{"_index":18,"title":{},"body":{"classes/Aoption.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"injectables/AttachmentsService.html":{},"injectables/AuthGuard.html":{},"classes/BlueprintFileDTO.html":{},"classes/BorderNetworkDTO.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"components/ControlTemplate.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputReturnedV2.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/DeployInstanceDTO.html":{},"components/DocsComponent.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"classes/FlavorApplication.html":{},"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"injectables/FlavorService.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"classes/HostModuleDTO.html":{},"classes/HostNode.html":{},"classes/HostPortModuleDTO.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModalButton.html":{},"components/ModalComponent.html":{},"classes/ModalItem.html":{},"injectables/ModalService.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"injectables/ModuleService.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"interfaces/ModuleTopology.html":{},"classes/NameMappingDTO.html":{},"components/NavbarComponent.html":{},"classes/NavbarElement.html":{},"classes/NavbarItem.html":{},"classes/NetOSRouterDTO.html":{},"components/NetworkComponent.html":{},"classes/NetworkDTO.html":{},"classes/NetworkNode.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/NodeTopologyElement.html":{},"components/OffcanvasComponent.html":{},"classes/PageableDTO.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleComposer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SelectOption.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/SingleDataInputReturned.html":{},"classes/SortDTO.html":{},"classes/SourceExport.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"classes/StatisticItemDTO.html":{},"injectables/StorageService.html":{},"components/SubnetComponent.html":{},"classes/SubnetDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"components/TabnavComponent.html":{},"classes/TabnavElement.html":{},"classes/TabnavItem.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"injectables/TheaterService.html":{},"classes/TheaterSimpleData.html":{},"interfaces/TheaterTopology.html":{},"classes/TheatreStatusDTO.html":{},"injectables/TokenService.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/TypesCatalogueDTO.html":{},"components/UnderbarComponent.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{},"miscellaneous/functions.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["title",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/ModalButton.html":{},"classes/ModalItem.html":{},"injectables/ModalService.html":{},"components/NavbarComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["title,.output",{"_index":2257,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["title_template",{"_index":2795,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["titolo",{"_index":128,"title":{},"body":{"components/AppComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/NavbarComponent.html":{},"components/OffcanvasComponent.html":{},"components/TabnavComponent.html":{}}}],["todo",{"_index":1468,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/EmptyModuleInfo.html":{}}}],["toggle",{"_index":1110,"title":{},"body":{"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{}}}],["token",{"_index":3664,"title":{},"body":{"injectables/TokenService.html":{}}}],["token/token.service",{"_index":669,"title":{},"body":{"injectables/AttachmentsService.html":{},"injectables/FlavorService.html":{},"injectables/ModuleService.html":{},"injectables/TheaterService.html":{}}}],["tokenservice",{"_index":232,"title":{"injectables/TokenService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AttachmentsService.html":{},"injectables/FlavorService.html":{},"injectables/ModuleService.html":{},"injectables/TheaterService.html":{},"injectables/TokenService.html":{},"overview.html":{}}}],["toker",{"_index":3662,"title":{},"body":{"injectables/TokenService.html":{}}}],["tooltiptext",{"_index":3732,"title":{},"body":{"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{}}}],["toopeniconclass",{"_index":1371,"title":{},"body":{"components/DataItemComponent.html":{},"components/OffcanvasComponent.html":{}}}],["top",{"_index":1418,"title":{},"body":{"components/DataItemComponent.html":{},"components/OffcanvasComponent.html":{}}}],["topologia",{"_index":2912,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["topologie",{"_index":3155,"title":{},"body":{"classes/PerseDataForModuleVisualizer.html":{}}}],["topology",{"_index":417,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["topologyelement",{"_index":467,"title":{"classes/TopologyElement.html":{}},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["topologylist",{"_index":466,"title":{"interfaces/TopologyList.html":{}},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["topromise",{"_index":2014,"title":{},"body":{"injectables/FlavorService.html":{},"injectables/ModuleService.html":{},"injectables/TheaterService.html":{}}}],["toreduceiconclass",{"_index":1372,"title":{},"body":{"components/DataItemComponent.html":{},"components/OffcanvasComponent.html":{}}}],["tosca",{"_index":627,"title":{},"body":{"classes/AreaExport.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/SourceExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["tosca_definitions_version",{"_index":629,"title":{},"body":{"classes/AreaExport.html":{},"classes/BlueprintFileDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/DeployInstanceDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleSimpleData.html":{},"classes/NameMappingDTO.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/SourceExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagsExport.html":{},"classes/TheaterDTO.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{},"classes/TheatreStatusDTO.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["toscadefinitiontype",{"_index":618,"title":{},"body":{"classes/AreaExport.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/SourceExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["toscadefinitiontype.cloudify",{"_index":1705,"title":{},"body":{"classes/ExportModule.html":{},"classes/ExportTheater.html":{}}}],["tosee",{"_index":771,"title":{},"body":{"classes/BlueprintFileDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/NameMappingDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TheaterDTO.html":{},"classes/TheatreStatusDTO.html":{}}}],["totalelements",{"_index":508,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["totalpages",{"_index":507,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["tra",{"_index":3193,"title":{},"body":{"classes/PerseDataForTheaterComposer.html":{}}}],["transform",{"_index":2183,"title":{},"body":{"components/HomeComponent.html":{},"components/NavbarElementComponent.html":{}}}],["transition",{"_index":2182,"title":{},"body":{"components/HomeComponent.html":{},"components/NavbarElementComponent.html":{}}}],["translateextent",{"_index":3325,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["trattando",{"_index":1259,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["tratti",{"_index":1426,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["tree",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["trigger",{"_index":2236,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["trova",{"_index":2478,"title":{},"body":{"injectables/ModalService.html":{}}}],["trovare",{"_index":1671,"title":{},"body":{"classes/ExportModule.html":{}}}],["true",{"_index":338,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthGuard.html":{},"components/ComposerComponent.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"injectables/FileService.html":{},"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NetworkComponent.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{},"components/VisualizerComponent.html":{}}}],["try",{"_index":1959,"title":{},"body":{"injectables/FileService.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{}}}],["tslib",{"_index":3830,"title":{},"body":{"dependencies.html":{}}}],["tuo",{"_index":3928,"title":{},"body":{"modules.html":{}}}],["tutte",{"_index":798,"title":{},"body":{"components/ComposerComponent.html":{},"injectables/ModalService.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"components/VisualizerComponent.html":{}}}],["tutti",{"_index":458,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/ExportModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"components/UnderbarComponent.html":{}}}],["two",{"_index":1423,"title":{},"body":{"components/DataItemComponent.html":{}}}],["type",{"_index":37,"title":{},"body":{"classes/Aoption.html":{},"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"injectables/AttachmentsService.html":{},"classes/BlueprintFileDTO.html":{},"classes/BorderNetworkDTO.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"components/ControlTemplate.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"components/DocsComponent.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"classes/FlavorDTO.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"classes/HostNode.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModalButton.html":{},"components/ModalComponent.html":{},"classes/ModalItem.html":{},"injectables/ModalService.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"classes/NavbarElement.html":{},"classes/NavbarItem.html":{},"classes/NetOSRouterDTO.html":{},"components/NetworkComponent.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkNode.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/NodeTopologyElement.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SelectOption.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/SingleDataInputReturned.html":{},"classes/SourceExport.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"classes/StatisticItemDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"components/TabnavComponent.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/TheaterSimpleData.html":{},"interfaces/TheaterTopology.html":{},"injectables/TokenService.html":{},"classes/TopologyElement.html":{},"classes/TypesCatalogueDTO.html":{},"components/UnderbarComponent.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{},"miscellaneous/functions.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["typeahead",{"_index":299,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["typeexport",{"_index":619,"title":{},"body":{"classes/AreaExport.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/SourceExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["typescataloguedto",{"_index":516,"title":{"classes/TypesCatalogueDTO.html":{}},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["ubuntu",{"_index":1444,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["un",{"_index":45,"title":{},"body":{"classes/Aoption.html":{},"classes/AreaDTO.html":{},"classes/BlueprintFileDTO.html":{},"components/ComposerComponent.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"components/DataInputV2Component.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/DeployInstanceDTO.html":{},"components/DocsComponent.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"classes/GenericParameterDTO.html":{},"components/HomeComponent.html":{},"classes/HostNode.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/MirroringModuleInstanceNode.html":{},"injectables/ModalService.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"classes/NameMappingDTO.html":{},"components/NavbarComponent.html":{},"classes/NavbarElement.html":{},"classes/NavbarItem.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkNode.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterDTO.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/TheatreStatusDTO.html":{},"injectables/TokenService.html":{},"classes/TypesCatalogueDTO.html":{},"components/UnderbarComponent.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"components/VisualizerComponent.html":{},"miscellaneous/functions.html":{}}}],["un'instanza",{"_index":3879,"title":{},"body":{"miscellaneous/functions.html":{}}}],["una",{"_index":831,"title":{},"body":{"components/ComposerComponent.html":{},"components/DataItemComponent.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SubnetNode.html":{},"components/TabnavComponent.html":{},"classes/TabnavElement.html":{},"classes/TabnavItem.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"miscellaneous/functions.html":{},"classes/reteBasicModuleInfo.html":{},"classes/reteBasicNodeInfo.html":{}}}],["unauthenticated",{"_index":717,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["undefined",{"_index":916,"title":{},"body":{"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"classes/ExportModule.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"classes/NetworkNode.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteNetworkInfo.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{}}}],["underbar",{"_index":3701,"title":{},"body":{"components/UnderbarComponent.html":{}}}],["underbar'},{'name",{"_index":213,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["underbar.component.html",{"_index":3705,"title":{},"body":{"components/UnderbarComponent.html":{}}}],["underbar.component.sass",{"_index":3704,"title":{},"body":{"components/UnderbarComponent.html":{}}}],["underbarcomponent",{"_index":212,"title":{"components/UnderbarComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{},"components/VisualizerComponent.html":{},"overview.html":{}}}],["underbarelement",{"_index":3710,"title":{"classes/UnderbarElement.html":{}},"body":{"components/UnderbarComponent.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{}}}],["underbaritem",{"_index":3715,"title":{"classes/UnderbarItem.html":{}},"body":{"components/UnderbarComponent.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{}}}],["underbartype",{"_index":3717,"title":{},"body":{"components/UnderbarComponent.html":{}}}],["underline",{"_index":1350,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["undo",{"_index":3307,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"index.html":{}}}],["unit",{"_index":3917,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":664,"title":{},"body":{"injectables/AttachmentsService.html":{},"components/ControlTemplate.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"injectables/ModuleService.html":{},"injectables/ParseService.html":{},"injectables/TheaterService.html":{},"injectables/TokenService.html":{},"classes/_Control.html":{}}}],["uno",{"_index":1391,"title":{},"body":{"components/DataItemComponent.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["unpaged",{"_index":2855,"title":{},"body":{"classes/PageableDTO.html":{},"classes/SortDTO.html":{}}}],["unselected",{"_index":2831,"title":{},"body":{"components/OffcanvasComponent.html":{},"components/TabnavComponent.html":{}}}],["unsorted",{"_index":2863,"title":{},"body":{"classes/PageableDTO.html":{},"classes/SortDTO.html":{}}}],["update/install",{"_index":3888,"title":{},"body":{"index.html":{}}}],["updated",{"_index":547,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{}}}],["updatetime",{"_index":1239,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["upload",{"_index":2148,"title":{},"body":{"components/HomeComponent.html":{}}}],["url",{"_index":686,"title":{},"body":{"injectables/AttachmentsService.html":{},"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["url(/../assets/images/bg",{"_index":2158,"title":{},"body":{"components/HomeComponent.html":{}}}],["usare",{"_index":3182,"title":{},"body":{"classes/PerseDataForTheaterComposer.html":{}}}],["usata",{"_index":1134,"title":{},"body":{"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"classes/ExportModule.html":{},"components/ModalComponent.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{},"miscellaneous/functions.html":{}}}],["usato",{"_index":1113,"title":{},"body":{"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/ModalButton.html":{},"classes/ModalItem.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{},"classes/UnderbarElement.html":{},"classes/UnderbarItem.html":{}}}],["uscita",{"_index":1676,"title":{},"body":{"classes/ExportModule.html":{}}}],["use",{"_index":362,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/HowToUseComponent.html":{},"components/NavbarElementComponent.html":{},"index.html":{}}}],["use'},{'name",{"_index":191,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["use.component",{"_index":265,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["use.component.css",{"_index":2354,"title":{},"body":{"components/HowToUseComponent.html":{}}}],["use.component.html",{"_index":2355,"title":{},"body":{"components/HowToUseComponent.html":{}}}],["use.component.ts",{"_index":2353,"title":{},"body":{"components/HowToUseComponent.html":{}}}],["use.component.ts:12",{"_index":2357,"title":{},"body":{"components/HowToUseComponent.html":{}}}],["use.component.ts:8",{"_index":2356,"title":{},"body":{"components/HowToUseComponent.html":{}}}],["use/how",{"_index":264,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/HowToUseComponent.html":{}}}],["use_external_resource",{"_index":1017,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/ExportModule.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["usefactory",{"_index":336,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":714,"title":{},"body":{"injectables/AuthGuard.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["usevalue",{"_index":340,"title":{},"body":{"modules/AppModule.html":{}}}],["utf",{"_index":1954,"title":{},"body":{"injectables/FileService.html":{}}}],["utility/app.guard",{"_index":358,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["utility/app.init",{"_index":293,"title":{},"body":{"modules/AppModule.html":{}}}],["utilizzabili",{"_index":1994,"title":{},"body":{"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{}}}],["utilizzare",{"_index":1048,"title":{},"body":{"components/ControlTemplate.html":{},"injectables/ExportService.html":{},"classes/_Control.html":{}}}],["utilizzata",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"classes/AreaExport.html":{},"interfaces/CommonModule.html":{},"components/ComposerComponent.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/FlavorApplication.html":{},"components/HomeComponent.html":{},"classes/HostNode.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/MirroringModuleInstanceNode.html":{},"injectables/ModalService.html":{},"classes/ModuleApplication.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstance.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleSimpleData.html":{},"interfaces/ModuleTopology.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkNode.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/NodeTopologyElement.html":{},"components/OffcanvasComponent.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteConnection.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SimpleModuleApplication.html":{},"classes/SourceExport.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"components/TabnavComponent.html":{},"classes/TagsExport.html":{},"classes/TheaterApplication.html":{},"classes/TheaterExport.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/TheaterSimpleData.html":{},"interfaces/TheaterTopology.html":{},"injectables/TokenService.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"miscellaneous/functions.html":{}}}],["utilizzati",{"_index":423,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["utilizzato",{"_index":1600,"title":{},"body":{"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/TabnavElement.html":{},"classes/TabnavItem.html":{}}}],["uuid",{"_index":373,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaDTO.html":{},"classes/BlueprintFileDTO.html":{},"classes/BorderNetworkDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/DeployInstanceDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/HostModuleDTO.html":{},"classes/HostPortModuleDTO.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/NameMappingDTO.html":{},"classes/NetOSRouterDTO.html":{},"classes/NetworkDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/SubnetDTO.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TheatreStatusDTO.html":{},"classes/TypesCatalogueDTO.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{}}}],["v",{"_index":157,"title":{},"body":{"components/AppComponent.html":{},"components/ControlTemplate.html":{},"components/HomeComponent.html":{},"classes/_Control.html":{}}}],["v2",{"_index":1231,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["v2'},{'name",{"_index":181,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["v2.component",{"_index":317,"title":{},"body":{"modules/AppModule.html":{}}}],["v2.component.html",{"_index":1233,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["v2.component.sass",{"_index":1232,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["v2.component.ts",{"_index":1224,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["v2.component.ts:107",{"_index":1297,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["v2.component.ts:123",{"_index":1296,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["v2.component.ts:136",{"_index":1295,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["v2.component.ts:152",{"_index":1294,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["v2.component.ts:169",{"_index":1300,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["v2.component.ts:181",{"_index":1293,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["v2.component.ts:21",{"_index":1302,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["v2.component.ts:30",{"_index":1273,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["v2.component.ts:37",{"_index":1307,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["v2.component.ts:40",{"_index":1291,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["v2.component.ts:46",{"_index":1288,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["v2.component.ts:54",{"_index":1264,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["v2.component.ts:62",{"_index":1249,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["v2.component.ts:68",{"_index":1271,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["v2.component.ts:78",{"_index":1256,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["v2.component.ts:81",{"_index":1270,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["v2.component.ts:82",{"_index":1247,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["v2.component.ts:83",{"_index":1269,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["v2.component.ts:89",{"_index":1305,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["v2.component.ts:94",{"_index":1246,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["v2/data",{"_index":316,"title":{},"body":{"modules/AppModule.html":{},"components/DataInputV2Component.html":{}}}],["v2/datainputtypev2.ts",{"_index":1212,"title":{},"body":{"classes/DataInputReturnedV2.html":{}}}],["v2/datainputtypev2.ts:6",{"_index":1217,"title":{},"body":{"classes/DataInputReturnedV2.html":{}}}],["v2/datainputtypev2.ts:7",{"_index":1219,"title":{},"body":{"classes/DataInputReturnedV2.html":{}}}],["v2/datainputtypev2.ts:8",{"_index":1218,"title":{},"body":{"classes/DataInputReturnedV2.html":{}}}],["va",{"_index":2295,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"injectables/ModalService.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["val",{"_index":1067,"title":{},"body":{"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/HomeComponent.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"components/NavbarComponent.html":{},"components/OffcanvasComponent.html":{},"components/TabnavComponent.html":{},"injectables/TokenService.html":{},"classes/_Control.html":{}}}],["val.checked",{"_index":1195,"title":{},"body":{"components/DataInputComponent.html":{}}}],["val.element[\"id\"].value",{"_index":2119,"title":{},"body":{"components/HomeComponent.html":{}}}],["val.element['author'].value",{"_index":2122,"title":{},"body":{"components/HomeComponent.html":{}}}],["val.element['description'].value",{"_index":2121,"title":{},"body":{"components/HomeComponent.html":{}}}],["val.element['name'].value",{"_index":2120,"title":{},"body":{"components/HomeComponent.html":{}}}],["val.isvalid",{"_index":2117,"title":{},"body":{"components/HomeComponent.html":{}}}],["val.value",{"_index":1196,"title":{},"body":{"components/DataInputComponent.html":{}}}],["valid",{"_index":1965,"title":{},"body":{"injectables/FileService.html":{}}}],["validare",{"_index":439,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["validata",{"_index":2052,"title":{},"body":{"components/HomeComponent.html":{}}}],["validateobject",{"_index":446,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"interfaces/CommonModule.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{}}}],["validators",{"_index":1181,"title":{},"body":{"components/DataInputComponent.html":{}}}],["validators.required",{"_index":1187,"title":{},"body":{"components/DataInputComponent.html":{}}}],["valore",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"classes/InterfaceConstraints.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"classes/ModalItem.html":{},"injectables/ModalService.html":{},"classes/ModuleApplication.html":{},"components/NavbarComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"injectables/ParseService.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"injectables/SpinnerService.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"classes/TheaterApplication.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/VisualizerComponent.html":{}}}],["valori",{"_index":895,"title":{},"body":{"components/ComposerComponent.html":{},"components/DataInputV2Component.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"injectables/ModalService.html":{},"classes/PerseDataForTheaterComposer.html":{},"components/VisualizerComponent.html":{}}}],["valorizenode",{"_index":2283,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["valorizenode(node",{"_index":2305,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["valorizza",{"_index":1684,"title":{},"body":{"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"components/HomeComponent.html":{}}}],["valorizzando",{"_index":1878,"title":{},"body":{"classes/ExportTheater.html":{}}}],["valorizzare",{"_index":825,"title":{},"body":{"components/ComposerComponent.html":{},"components/NavbarComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"components/VisualizerComponent.html":{}}}],["valorizzata",{"_index":869,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["valorizzati",{"_index":2066,"title":{},"body":{"components/HomeComponent.html":{}}}],["valorizzato",{"_index":2296,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["valorizzazione",{"_index":2307,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["value",{"_index":519,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"components/ControlTemplate.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"components/DataInputComponent.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataInputV2Component.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"injectables/ModalService.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SelectOption.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/SingleDataInputReturned.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{},"classes/_Control.html":{}}}],["value(val",{"_index":1310,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["value.local_interface",{"_index":3029,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["value.module_instance",{"_index":3030,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["value.remote_interface",{"_index":3031,"title":{},"body":{"classes/ParseDataForTheaterVisualizer.html":{}}}],["valuechange",{"_index":1244,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["values",{"_index":1188,"title":{},"body":{"components/DataInputComponent.html":{}}}],["values[el.id",{"_index":1193,"title":{},"body":{"components/DataInputComponent.html":{}}}],["var",{"_index":168,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"classes/HostNode.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"classes/NetworkNode.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"components/SubnetComponent.html":{},"classes/SubnetNode.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["vari",{"_index":1050,"title":{},"body":{"components/ControlTemplate.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/_Control.html":{}}}],["variabile",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"components/NavbarComponent.html":{},"components/OffcanvasComponent.html":{},"injectables/ParseService.html":{},"classes/SpinnerData.html":{},"injectables/SpinnerService.html":{},"injectables/StorageService.html":{},"components/TabnavComponent.html":{},"injectables/TokenService.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["variabili",{"_index":827,"title":{},"body":{"components/ComposerComponent.html":{},"classes/DataInput.html":{},"classes/DataInputCheck.html":{},"classes/DataInputElement.html":{},"classes/DataInputReturned.html":{},"classes/DataInputSelection.html":{},"classes/DataInputText.html":{},"components/DataItemComponent.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"components/HomeComponent.html":{},"components/OffcanvasComponent.html":{},"classes/SelectOption.html":{},"classes/SingleDataInputReturned.html":{},"components/VisualizerComponent.html":{}}}],["varibile",{"_index":1250,"title":{},"body":{"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{}}}],["varibili",{"_index":1323,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["varie",{"_index":646,"title":{},"body":{"classes/AreaExport.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/ExportTheater.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesTSD.html":{},"classes/SourceExport.html":{},"classes/TagsExport.html":{},"classes/TheaterExport.html":{},"classes/TheaterSimpleData.html":{},"miscellaneous/functions.html":{}}}],["vars",{"_index":2239,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["veloce",{"_index":2220,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["verificato",{"_index":878,"title":{},"body":{"components/ComposerComponent.html":{},"components/VisualizerComponent.html":{}}}],["version",{"_index":538,"title":{},"body":{"classes/AreaDTO.html":{},"classes/AreaExport.html":{},"classes/BlueprintFileDTO.html":{},"classes/BorderNetworkDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConstraintsMSD.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ConsumerInterfaceLinkExport.html":{},"classes/DeployInstanceDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/EntityNameMappingFileDTO.html":{},"classes/ExportModule.html":{},"classes/ExportTheater.html":{},"classes/GenericParameterDTO.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/ModuleApplication.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleDTO.html":{},"classes/ModuleExport.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleInstanceSimpleData.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleSimpleData.html":{},"classes/ModuleStatusDTO.html":{},"classes/NameMappingDTO.html":{},"classes/NetOSRouterDTO.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkDTO.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMISD.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/PropertiesTSD.html":{},"classes/RelationshipsExport.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleApplication.html":{},"classes/SimpleModuleDTO.html":{},"classes/SourceExport.html":{},"classes/StatisticItemDTO.html":{},"components/SubnetComponent.html":{},"classes/SubnetDTO.html":{},"classes/SubnetExport.html":{},"classes/SubnetNode.html":{},"classes/SubnetSimpleData.html":{},"classes/TagCatalogueDTO.html":{},"classes/TagTIP.html":{},"classes/TagsExport.html":{},"classes/TheaterApplication.html":{},"classes/TheaterDTO.html":{},"classes/TheaterExport.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"classes/TheaterSimpleData.html":{},"classes/TheatreStatusDTO.html":{},"classes/TypesCatalogueDTO.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{},"index.html":{},"properties.html":{},"classes/reteBasicModuleInfo.html":{}}}],["versione",{"_index":1447,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"index.html":{}}}],["verso",{"_index":2475,"title":{},"body":{"injectables/ModalService.html":{}}}],["vertical",{"_index":2258,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["via",{"_index":594,"title":{},"body":{"classes/AreaDTO.html":{},"classes/ConfigurationTemplateDTO.html":{},"classes/ConsumerInterfaceLinkDTO.html":{},"classes/ElementIntoTheaterDTO.html":{},"classes/GenericParameterDTO.html":{},"classes/ModuleClassificationDTO.html":{},"classes/ModuleDTO.html":{},"classes/ModuleInstanceDTO.html":{},"classes/ModuleInstancePropertiesDTO.html":{},"classes/ModuleListDTO.html":{},"classes/ModuleModeDTO.html":{},"classes/ModuleNetworkInterfaceDTO.html":{},"classes/ModuleStatusDTO.html":{},"classes/SimpleAreaDTO.html":{},"classes/SimpleModuleDTO.html":{},"classes/StatisticItemDTO.html":{},"classes/TagTIP.html":{},"classes/TheaterInstanceDTO.html":{},"classes/TheaterInstancePropertiesDTO.html":{},"classes/TypesCatalogueDTO.html":{},"index.html":{}}}],["viconli",{"_index":992,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["viene",{"_index":868,"title":{},"body":{"components/ComposerComponent.html":{},"components/DataInputComponent.html":{},"injectables/FileService.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{},"components/VisualizerComponent.html":{},"miscellaneous/functions.html":{}}}],["viewchild",{"_index":2101,"title":{},"body":{"components/HomeComponent.html":{}}}],["viewchild('data_input_template",{"_index":2079,"title":{},"body":{"components/HomeComponent.html":{}}}],["viewport",{"_index":2192,"title":{},"body":{"components/HomeComponent.html":{}}}],["vincoli",{"_index":958,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["virtual",{"_index":1475,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/ExportModule.html":{}}}],["virtual_machine",{"_index":1001,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/ExportModule.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["virtual_machines",{"_index":990,"title":{},"body":{"classes/ConstraintsMSD.html":{},"classes/ExportModule.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["virtual_server",{"_index":1503,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{}}}],["virtualizationenvironmenttype",{"_index":1997,"title":{},"body":{"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{}}}],["virtualizationenvironmenttypedto",{"_index":1990,"title":{"classes/VirtualizationEnvironmentTypeDTO.html":{}},"body":{"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{}}}],["virtualizzato",{"_index":1989,"title":{},"body":{"classes/FlavorBasicInfo.html":{},"classes/FlavorDTO.html":{},"classes/VirtualizationEnvironmentTypeDTO.html":{}}}],["virtualmachine",{"_index":991,"title":{"classes/VirtualMachine.html":{}},"body":{"classes/ConstraintsMSD.html":{},"classes/ExportModule.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["virtualmachineports",{"_index":1003,"title":{"classes/VirtualMachinePorts.html":{}},"body":{"classes/ConstraintsMSD.html":{},"classes/ExportModule.html":{},"classes/InterfaceConstraints.html":{},"classes/InterfaceNetworksConsumer.html":{},"classes/InterfaceNetworksProvider.html":{},"classes/ModuleConstraints.html":{},"classes/ModuleExport.html":{},"classes/ModuleSimpleData.html":{},"classes/NetworkConstraints.html":{},"classes/NetworkSimpleData.html":{},"classes/NodeSimpleData.html":{},"classes/PortSimpleData.html":{},"classes/PropertiesMSD.html":{},"classes/PropertiesNSD.html":{},"classes/PropertiesSSD.html":{},"classes/RelationshipsExport.html":{},"classes/SubnetExport.html":{},"classes/SubnetSimpleData.html":{},"classes/VirtualMachine.html":{},"classes/VirtualMachinePorts.html":{}}}],["virtualmachines",{"_index":1637,"title":{},"body":{"classes/ExportModule.html":{}}}],["virtualservermoduleinstance",{"_index":1467,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"classes/EmptyModuleInfo.html":{}}}],["visibile",{"_index":2693,"title":{},"body":{"components/NavbarComponent.html":{}}}],["visibilit",{"_index":1545,"title":{},"body":{"components/DocsComponent.html":{}}}],["visibility",{"_index":2837,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["visible",{"_index":1550,"title":{},"body":{"components/DocsComponent.html":{},"components/OffcanvasComponent.html":{}}}],["vista",{"_index":1357,"title":{},"body":{"components/DataItemComponent.html":{}}}],["visual",{"_index":2139,"title":{},"body":{"components/HomeComponent.html":{}}}],["visualization/constructor",{"_index":2138,"title":{},"body":{"components/HomeComponent.html":{}}}],["visualize",{"_index":2144,"title":{},"body":{"components/HomeComponent.html":{}}}],["visualizer",{"_index":270,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"components/HomeComponent.html":{},"components/VisualizerComponent.html":{}}}],["visualizer'},{'name",{"_index":204,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["visualizer.component",{"_index":273,"title":{},"body":{"modules/AppModule.html":{}}}],["visualizer.component.html",{"_index":3752,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["visualizer.component.sass",{"_index":3751,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["visualizer/rete",{"_index":272,"title":{},"body":{"modules/AppModule.html":{}}}],["visualizercomponent",{"_index":214,"title":{"components/VisualizerComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"overview.html":{}}}],["visualizing",{"_index":2294,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["visualizzare",{"_index":858,"title":{},"body":{"components/ComposerComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/OffcanvasComponent.html":{},"components/VisualizerComponent.html":{},"miscellaneous/functions.html":{}}}],["visualizzazione",{"_index":1454,"title":{},"body":{"classes/DataRouteComposer.html":{},"classes/DataRouteVisualizer.html":{},"components/HomeComponent.html":{},"components/ModalComponent.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"injectables/ParseService.html":{},"classes/PerseDataForModuleVisualizer.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"miscellaneous/functions.html":{}}}],["voglia",{"_index":1320,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["void",{"_index":252,"title":{},"body":{"modules/AppModule.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/DocsComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"classes/HostNode.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"classes/MirroringModuleInstanceNode.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"components/NavbarComponent.html":{},"components/NetworkComponent.html":{},"classes/NetworkNode.html":{},"components/OffcanvasComponent.html":{},"classes/ParseDataForTheaterVisualizer.html":{},"classes/PerseDataForModuleVisualizer.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"injectables/SpinnerService.html":{},"injectables/StorageService.html":{},"components/SubnetComponent.html":{},"classes/SubnetNode.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"components/TheaterModuleInstanceComponent.html":{},"classes/TheaterModuleInstanceNode.html":{},"injectables/TokenService.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{},"classes/_Control.html":{},"index.html":{}}}],["volta",{"_index":1945,"title":{},"body":{"injectables/FileService.html":{},"components/HomeComponent.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["vue",{"_index":3290,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["vue/dist/vue.esm",{"_index":3291,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["vuole",{"_index":1322,"title":{},"body":{"components/DataInputV2Component.html":{}}}],["vuota",{"_index":1583,"title":{},"body":{"classes/EmptyModuleInfo.html":{},"classes/EmptyNodeInfo.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["webkit",{"_index":2193,"title":{},"body":{"components/HomeComponent.html":{},"components/NavbarElementComponent.html":{}}}],["weight",{"_index":2178,"title":{},"body":{"components/HomeComponent.html":{},"components/OffcanvasComponent.html":{},"components/TabnavComponent.html":{}}}],["white",{"_index":1071,"title":{},"body":{"components/ControlTemplate.html":{},"components/DataItemComponent.html":{},"components/OffcanvasComponent.html":{},"components/TabnavComponent.html":{}}}],["width",{"_index":1080,"title":{},"body":{"components/ControlTemplate.html":{},"components/DocsComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["window",{"_index":183,"title":{},"body":{"components/AppComponent.html":{},"components/ComposerComponent.html":{},"components/ControlTemplate.html":{},"components/DataInputComponent.html":{},"components/DataInputV2Component.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"components/HostComponent.html":{},"components/HowToUseComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/ModalComponent.html":{},"components/NavbarComponent.html":{},"components/NavbarElementComponent.html":{},"components/NetworkComponent.html":{},"components/OffcanvasComponent.html":{},"components/SubnetComponent.html":{},"components/TabnavComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{},"components/UnderbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["window.location.origin",{"_index":722,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["window.open(url",{"_index":688,"title":{},"body":{"injectables/AttachmentsService.html":{}}}],["window.url.createobjecturl(blob",{"_index":687,"title":{},"body":{"injectables/AttachmentsService.html":{}}}],["window.url.revokeobjecturl(url",{"_index":695,"title":{},"body":{"injectables/AttachmentsService.html":{}}}],["word",{"_index":1408,"title":{},"body":{"components/DataItemComponent.html":{},"components/TabnavComponent.html":{}}}],["worker",{"_index":2284,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["worker(node",{"_index":2315,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["workerinputs",{"_index":2317,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["workeroutputs",{"_index":2318,"title":{},"body":{"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"classes/NetworkNode.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["wrapper",{"_index":2833,"title":{},"body":{"components/OffcanvasComponent.html":{}}}],["x",{"_index":678,"title":{},"body":{"injectables/AttachmentsService.html":{},"components/DataItemComponent.html":{},"components/HomeComponent.html":{},"classes/HostNode.html":{},"classes/MirroringModuleInstanceNode.html":{},"injectables/ModuleService.html":{},"classes/NetworkNode.html":{},"components/OffcanvasComponent.html":{},"classes/PerseDataForTheaterComposer.html":{},"classes/ReteHostInfo.html":{},"classes/ReteMirroringModuleInstanceInfo.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteNetworkInfo.html":{},"classes/ReteSubnetInfo.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{},"classes/ReteTheaterModuleInstanceInfo.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"classes/SubnetNode.html":{},"classes/TheaterInternalServiceModuleInstanceNode.html":{},"classes/TheaterModuleInstanceNode.html":{}}}],["x.jpg",{"_index":2170,"title":{},"body":{"components/HomeComponent.html":{}}}],["x.subscribe",{"_index":682,"title":{},"body":{"injectables/AttachmentsService.html":{}}}],["x[\"instance",{"_index":3199,"title":{},"body":{"classes/PerseDataForTheaterComposer.html":{}}}],["x[key",{"_index":3200,"title":{},"body":{"classes/PerseDataForTheaterComposer.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["xy.png",{"_index":2162,"title":{},"body":{"components/HomeComponent.html":{}}}],["y",{"_index":3332,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["yaml",{"_index":437,"title":{},"body":{"classes/AreaApplication.html":{},"classes/AreaColorDTO.html":{},"injectables/AttachmentsService.html":{},"interfaces/CommonModule.html":{},"classes/ExportModule.html":{},"injectables/ExportService.html":{},"classes/ExportTheater.html":{},"classes/FlavorApplication.html":{},"classes/ModuleApplication.html":{},"classes/ModuleInstance.html":{},"interfaces/ModuleTopology.html":{},"classes/NodeTopologyElement.html":{},"classes/ReteConnection.html":{},"classes/SimpleModuleApplication.html":{},"classes/TheaterApplication.html":{},"interfaces/TheaterTopology.html":{},"classes/TopologyElement.html":{},"interfaces/TopologyList.html":{},"dependencies.html":{},"miscellaneous/functions.html":{}}}],["yamlstringfy",{"_index":672,"title":{},"body":{"injectables/AttachmentsService.html":{}}}],["yes",{"_index":2520,"title":{},"body":{"injectables/ModalService.html":{}}}],["z",{"_index":2264,"title":{},"body":{"components/HostComponent.html":{},"components/MirroringModuleInstanceComponent.html":{},"components/NetworkComponent.html":{},"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{},"components/SubnetComponent.html":{},"components/TheaterInternalServiceModuleInstanceComponent.html":{},"components/TheaterModuleInstanceComponent.html":{}}}],["z.push(value",{"_index":3316,"title":{},"body":{"classes/ReteModuleComposerSettings.html":{},"classes/ReteModuleVisualizerSettings.html":{},"classes/ReteTheaterComposerSettings.html":{},"classes/ReteTheaterVisualizerSettings.html":{}}}],["zone.js",{"_index":3832,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":2181,"title":{},"body":{"components/HomeComponent.html":{}}}],["zoom:hover",{"_index":2186,"title":{},"body":{"components/HomeComponent.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/Aoption.html":{"url":"classes/Aoption.html","title":"class - Aoption","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  Aoption\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/navbar/navbarType.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Rappresenta le opzioni per il tag \n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                attr_key\n                            \n                            \n                                attr_val\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        attr_key\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/navbar/navbarType.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        attr_val\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/navbar/navbarType.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { TemplateRef } from \"@angular/core\";\n\n/**\n * Elemento passato come parametro alla componente NavbarComponent\n */\nexport class NavbarElement {\n    template_title?: TemplateRef;\n    type: \"module\" | \"theater\";\n    logo_img?: any;\n    element: NavbarItem[];\n}\n\n/**\n * Oggetto che rappresenta un singolo elemento della Navbar\n */\nexport class NavbarItem{\n    id: string;\n    text: string;\n    a_option?: Aoption[];\n    template?: TemplateRef;\n}\n\n/**\n * Rappresenta le opzioni per il tag \n */\nexport class Aoption {\n    attr_key: string;\n    attr_val: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Componenti\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n    \n        Descrizione\n    \n    \n        Componente principale dell'applicazione.\n\n    \n\n\n\n\n\n    Metadati\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                modalData\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                    Protected\n                                showmodal\n                            \n                            \n                                    Protected\n                                showspinner\n                            \n                            \n                                    Protected\n                                spinner\n                            \n                            \n                                    Public\n                                spinnerService\n                            \n                            \n                                    Protected\n                                textspinner\n                            \n                            \n                                    Protected\n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Costruttore\n        \n            \n                \n                    \nconstructor(router: Router, spinnerService: SpinnerService, cdr: ChangeDetectorRef, modal: ModalService)\n                    \n                \n                        \n                            \n                                Definito in src/app/app.component.ts:37\n                            \n                        \n\n                \n                    \n                            Costruttore della componente principale dell'applicazione.\nContiene i subscriber dello spinner e modale generale\n\n                            \n                                    Parametri :\n                                    \n                                        \n                                            \n                                                Nome\n                                                    Tipo\n                                                Opzionale\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        spinnerService\n                                                  \n                                                        \n                                                                        SpinnerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modal\n                                                  \n                                                        \n                                                                        ModalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        modalData\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ModalItem\n\n                    \n                \n                    \n                        \n                                Definito in src/app/app.component.ts:36\n                        \n                    \n\n            \n                \n                    Variabile utilizzata per la modale generale.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         Router\n\n                    \n                \n                    \n                        \n                                Definito in src/app/app.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        showmodal\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                    \n                        \n                                Definito in src/app/app.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        showspinner\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                \n                    \n                        Valore predefinito : false\n                    \n                \n                    \n                        \n                                Definito in src/app/app.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        spinner\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     Observable\n\n                    \n                \n                    \n                        \n                                Definito in src/app/app.component.ts:29\n                        \n                    \n\n            \n                \n                    Variabile utilizzata per captare lo stato dello spinner generale.\nServe a farlo mostrare/nascondere all'occorrenza, indipendentemente dall'applicazione\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        spinnerService\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         SpinnerService\n\n                    \n                \n                    \n                        \n                                Definito in src/app/app.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        textspinner\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                \n                    \n                        Valore predefinito : \"\"\n                    \n                \n                    \n                        \n                                Definito in src/app/app.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                \n                    \n                        Valore predefinito : 'InfraCreate'\n                    \n                \n                    \n                        \n                                Definito in src/app/app.component.ts:22\n                        \n                    \n\n            \n                \n                    Variabile dedicata al titolo dell'applicazione\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectorRef, Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { ModalItem } from './components/modal/modalType';\nimport { ModalService } from './services/application/modal/modal.service';\nimport { SpinnerService } from './services/application/spinner/spinner.service';\n\n/**\n * Componente principale dell'applicazione.\n */\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.sass']\n})\nexport class AppComponent {\n\n  // general\n  /**\n   * Variabile dedicata al titolo dell'applicazione\n   */\n  protected title = 'InfraCreate';\n\n  // global spinner\n  /**\n   * Variabile utilizzata per captare lo stato dello spinner generale.\n   * Serve a farlo mostrare/nascondere all'occorrenza, indipendentemente dall'applicazione\n   */\n  protected spinner: Observable;\n  protected showspinner: boolean = false;\n  protected textspinner: string = \"\";\n\n  /**\n   * Variabile utilizzata per la modale generale.\n   */\n  protected modalData: ModalItem;\n  protected showmodal: boolean;\n\n  /**\n   * Costruttore della componente principale dell'applicazione.\n   * Contiene i subscriber dello spinner e modale generale\n   * @param router \n   * @param spinnerService \n   * @param cdr \n   * @param modal \n   */\n  constructor(\n    public router: Router,\n    public spinnerService: SpinnerService,\n    private cdr: ChangeDetectorRef,\n    protected modal: ModalService\n  ) {\n\n    document.body.style.overflow = 'hidden'; // per prevenire lo scrolling\n    document.body.style.background = '#0f131a'; // per background\n\n    this.spinner = spinnerService.getSpinner();\n    this.spinner.subscribe(\n      el => {\n        this.showspinner = el.show;\n        this.textspinner = el.text;\n        this.cdr.detectChanges();\n      }\n    )\n\n    this.modal.modalData.asObservable().subscribe(v => this.modalData = v);\n    this.modal.show.asObservable().subscribe(v => this.showmodal = v);\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n    {{textspinner}}...\n \n\n\n\n\n\n    \n\n    \n                \n                    ./app.component.sass\n                \n                body\n    overflow: hidden\n    background-color: '#0f131a' !important\n    \n\n    \n        \n        \n            \n                Legenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento html con direttive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{textspinner}}... '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ComposerComponent', 'selector': 'app-composer'},{'name': 'ControlTemplate', 'selector': ''},{'name': 'DataInputComponent', 'selector': 'app-data-input'},{'name': 'DataInputV2Component', 'selector': 'app-data-input-v2'},{'name': 'DataItemComponent', 'selector': 'app-window-item'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HostComponent', 'selector': ''},{'name': 'HowToUseComponent', 'selector': 'app-how-to-use'},{'name': 'MirroringModuleInstanceComponent', 'selector': ''},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavbarElementComponent', 'selector': 'app-navbar-element'},{'name': 'NetworkComponent', 'selector': ''},{'name': 'OffcanvasComponent', 'selector': 'app-offcanvas'},{'name': 'ReteModuleComposerComponent', 'selector': 'app-rete-module-composer'},{'name': 'ReteModuleVisualizerComponent', 'selector': 'app-rete-module-visualizer'},{'name': 'ReteTheaterComposerComponent', 'selector': 'app-rete-theater-composer'},{'name': 'ReteTheaterVisualizerComponent', 'selector': 'app-rete-theater-visualizer'},{'name': 'SubnetComponent', 'selector': ''},{'name': 'TabnavComponent', 'selector': 'app-tabnav'},{'name': 'TheaterInternalServiceModuleInstanceComponent', 'selector': ''},{'name': 'TheaterModuleInstanceComponent', 'selector': ''},{'name': 'UnderbarComponent', 'selector': 'app-underbar'},{'name': 'VisualizerComponent', 'selector': 'app-displayer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Moduli\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_exports\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nComposerComponent\n\nComposerComponent\n\nAppModule -->\n\nComposerComponent->AppModule\n\n\n\nAppModule -->\n\nComposerComponent->AppModule\n\n\n\n\n\nControlTemplate\n\nControlTemplate\n\nAppModule -->\n\nControlTemplate->AppModule\n\n\n\n\n\nDataInputComponent\n\nDataInputComponent\n\nAppModule -->\n\nDataInputComponent->AppModule\n\n\n\n\n\nDataInputV2Component\n\nDataInputV2Component\n\nAppModule -->\n\nDataInputV2Component->AppModule\n\n\n\n\n\nDataItemComponent\n\nDataItemComponent\n\nAppModule -->\n\nDataItemComponent->AppModule\n\n\n\n\n\nDocsComponent\n\nDocsComponent\n\nAppModule -->\n\nDocsComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nHostComponent\n\nHostComponent\n\nAppModule -->\n\nHostComponent->AppModule\n\n\n\n\n\nHowToUseComponent\n\nHowToUseComponent\n\nAppModule -->\n\nHowToUseComponent->AppModule\n\n\n\n\n\nMirroringModuleInstanceComponent\n\nMirroringModuleInstanceComponent\n\nAppModule -->\n\nMirroringModuleInstanceComponent->AppModule\n\n\n\n\n\nModalComponent\n\nModalComponent\n\nAppModule -->\n\nModalComponent->AppModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nAppModule -->\n\nNavbarComponent->AppModule\n\n\n\n\n\nNavbarElementComponent\n\nNavbarElementComponent\n\nAppModule -->\n\nNavbarElementComponent->AppModule\n\n\n\n\n\nNetworkComponent\n\nNetworkComponent\n\nAppModule -->\n\nNetworkComponent->AppModule\n\n\n\n\n\nOffcanvasComponent\n\nOffcanvasComponent\n\nAppModule -->\n\nOffcanvasComponent->AppModule\n\n\n\n\n\nReteModuleComposerComponent\n\nReteModuleComposerComponent\n\nAppModule -->\n\nReteModuleComposerComponent->AppModule\n\n\n\n\n\nReteModuleVisualizerComponent\n\nReteModuleVisualizerComponent\n\nAppModule -->\n\nReteModuleVisualizerComponent->AppModule\n\n\n\n\n\nReteTheaterComposerComponent\n\nReteTheaterComposerComponent\n\nAppModule -->\n\nReteTheaterComposerComponent->AppModule\n\n\n\n\n\nReteTheaterVisualizerComponent\n\nReteTheaterVisualizerComponent\n\nAppModule -->\n\nReteTheaterVisualizerComponent->AppModule\n\n\n\n\n\nSubnetComponent\n\nSubnetComponent\n\nAppModule -->\n\nSubnetComponent->AppModule\n\n\n\n\n\nTabnavComponent\n\nTabnavComponent\n\nAppModule -->\n\nTabnavComponent->AppModule\n\n\n\n\n\nTheaterInternalServiceModuleInstanceComponent\n\nTheaterInternalServiceModuleInstanceComponent\n\nAppModule -->\n\nTheaterInternalServiceModuleInstanceComponent->AppModule\n\n\n\n\n\nTheaterModuleInstanceComponent\n\nTheaterModuleInstanceComponent\n\nAppModule -->\n\nTheaterModuleInstanceComponent->AppModule\n\n\n\n\n\nUnderbarComponent\n\nUnderbarComponent\n\nAppModule -->\n\nUnderbarComponent->AppModule\n\n\n\n\n\nVisualizerComponent\n\nVisualizerComponent\n\nAppModule -->\n\nVisualizerComponent->AppModule\n\n\n\nAppModule -->\n\nVisualizerComponent->AppModule\n\n\n\n\n\nDataInputComponent \n\nDataInputComponent \n\nDataInputComponent  -->\n\nAppModule->DataInputComponent \n\n\n\n\n\nNavbarComponent \n\nNavbarComponent \n\nNavbarComponent  -->\n\nAppModule->NavbarComponent \n\n\n\n\n\nNavbarElementComponent \n\nNavbarElementComponent \n\nNavbarElementComponent  -->\n\nAppModule->NavbarElementComponent \n\n\n\n\n\nOffcanvasComponent \n\nOffcanvasComponent \n\nOffcanvasComponent  -->\n\nAppModule->OffcanvasComponent \n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nNgxPopper\n\nNgxPopper\n\nAppModule -->\n\nNgxPopper->AppModule\n\n\n\n\n\nModuleService\n\nModuleService\n\nAppModule -->\n\nModuleService->AppModule\n\n\n\n\n\nParseService\n\nParseService\n\nAppModule -->\n\nParseService->AppModule\n\n\n\n\n\nTheaterService\n\nTheaterService\n\nAppModule -->\n\nTheaterService->AppModule\n\n\n\n\n\nTokenService\n\nTokenService\n\nAppModule -->\n\nTokenService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Ingrandisci\n        Reset\n        Rimpocciolisci\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Dichiarazioni\n                    \n                        \n                            AppComponent\n                        \n                        \n                            AppComponent\n                        \n                        \n                            ComposerComponent\n                        \n                        \n                            ComposerComponent\n                        \n                        \n                            ControlTemplate\n                        \n                        \n                            DataInputComponent\n                        \n                        \n                            DataInputV2Component\n                        \n                        \n                            DataItemComponent\n                        \n                        \n                            DocsComponent\n                        \n                        \n                            HomeComponent\n                        \n                        \n                            HostComponent\n                        \n                        \n                            HowToUseComponent\n                        \n                        \n                            MirroringModuleInstanceComponent\n                        \n                        \n                            ModalComponent\n                        \n                        \n                            NavbarComponent\n                        \n                        \n                            NavbarElementComponent\n                        \n                        \n                            NetworkComponent\n                        \n                        \n                            OffcanvasComponent\n                        \n                        \n                            ReteModuleComposerComponent\n                        \n                        \n                            ReteModuleVisualizerComponent\n                        \n                        \n                            ReteTheaterComposerComponent\n                        \n                        \n                            ReteTheaterVisualizerComponent\n                        \n                        \n                            SubnetComponent\n                        \n                        \n                            TabnavComponent\n                        \n                        \n                            TheaterInternalServiceModuleInstanceComponent\n                        \n                        \n                            TheaterModuleInstanceComponent\n                        \n                        \n                            UnderbarComponent\n                        \n                        \n                            VisualizerComponent\n                        \n                        \n                            VisualizerComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            HostComponent\n                        \n                        \n                            MirroringModuleInstanceComponent\n                        \n                        \n                            NetworkComponent\n                        \n                        \n                            SubnetComponent\n                        \n                        \n                            TheaterInternalServiceModuleInstanceComponent\n                        \n                        \n                            TheaterModuleInstanceComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ModuleService\n                        \n                        \n                            ParseService\n                        \n                        \n                            TheaterService\n                        \n                        \n                            TokenService\n                        \n                    \n                \n                \n                    Importa\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            NgxPopper\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DataInputComponent\n                        \n                        \n                            NavbarComponent\n                        \n                        \n                            NavbarElementComponent\n                        \n                        \n                            OffcanvasComponent\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Schemas\n                    \n                        \n                            CUSTOM_ELEMENTS_SCHEMA\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        ngDoBootstrap\n                        \n                    \n                \n            \n            \n                \nngDoBootstrap(appRef: ApplicationRef)\n                \n            \n\n\n            \n                \n                    Definito in src/app/app.module.ts:160\n                \n            \n\n\n            \n                \n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    appRef\n                                    \n                                                ApplicationRef\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { ApplicationRef, APP_INITIALIZER, CUSTOM_ELEMENTS_SCHEMA, DoBootstrap, NgModule, Provider } from '@angular/core';\n\nimport { AppComponent } from './app.component';\n\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { HomeComponent } from './pages/home/home.component';\nimport { HowToUseComponent } from './pages/how-to-use/how-to-use.component';\n\nimport { ReteModule } from 'rete-angular-render-plugin';\n\nimport { ReteTheaterVisualizerComponent } from './visualizer-system/rete-theater-visualizer/rete-theater-visualizer.component';\nimport { ReteModuleVisualizerComponent } from './visualizer-system/rete-module-visualizer/rete-module-visualizer.component';\n\nimport { ReteModuleComposerComponent } from './composer-system/rete-module-composer/rete-module-composer.component';\nimport { ReteTheaterComposerComponent } from './composer-system/rete-theater-composer/rete-theater-composer.component';\n\n\nimport { HostComponent } from './rete-settings/nodes/rete-nodes/host/host.component';\nimport { SubnetComponent } from './rete-settings/nodes/rete-nodes/subnet/subnet.component';\nimport { NetworkComponent } from './rete-settings/nodes/rete-nodes/network/network.component';\nimport { MirroringModuleInstanceComponent } from './rete-settings/nodes/rete-modules/mirroringModuleInstance/mirroringModuleInstance.component';\nimport { TheaterInternalServiceModuleInstanceComponent } from './rete-settings/nodes/rete-modules/theaterInternalServiceModuleInstance/theaterInternalServiceModuleInstance.component';\nimport { TheaterModuleInstanceComponent } from './rete-settings/nodes/rete-modules/theaterModuleInstance/theaterModuleInstance.component';\n\nimport { VisualizerComponent } from './visualizer-system/visualizer/visualizer.component';\nimport { ComposerComponent } from './composer-system/composer/composer.component';\n\nimport { CommonModule } from '@angular/common';\n\nimport { ControlTemplate } from './rete-settings/controls/control'; \n\nimport { KeycloakAngularModule, KeycloakService } from 'keycloak-angular';\nimport { initializeKeycloak } from './utility/app.init';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { NgxSpinnerModule } from 'ngx-spinner';\nimport { NgxTypeaheadModule } from \"ngx-typeahead\";\nimport { NgxPopper } from 'angular-popper';\n\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { TokenService } from './services/token/token.service';\nimport { ModuleService } from './services/api/module.service';\nimport { TheaterService } from './services/api/theater.service';\n\nimport { OffcanvasComponent } from './components/offcanvas/offcanvas.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\n\nimport { NavbarElementComponent } from './pages/elements/navbar-element/navbar-element.component';\nimport { DataInputComponent } from './components/data-input/data-input.component';\nimport { ModalComponent } from './components/modal/modal.component';\nimport { UnderbarComponent } from './components/underbar/underbar.component';\nimport { DataInputV2Component } from './components/data-input-v2/data-input-v2.component';\nimport { TabnavComponent } from './components/tabnav/tabnav.component';\nimport { ParseService } from './services/application/parse/parse.service';\nimport { FormsModule, NgForm, ReactiveFormsModule } from '@angular/forms';\nimport { DataItemComponent } from './components/data-item/data-item.component';\nimport { environment } from 'src/environments/environment';\nimport { DocsComponent } from './pages/docs/docs.component';\n// import { ColorPickerModule } from 'ngx-color-picker';\n\nconst keycloakService = new KeycloakService();\nlet providerInitKeycloak: Provider = (!environment.mocked)\n  ? {\n    provide: APP_INITIALIZER,\n    useFactory: initializeKeycloak,\n    multi: true,\n    deps: [KeycloakService],\n    // provide: KeycloakService,\n    // useValue: keycloakService,\n  }\n  : [];\n\n\n@NgModule({\n  declarations: [\n\n    AppComponent,\n\n    VisualizerComponent,\n    ComposerComponent,\n\n    ReteTheaterVisualizerComponent,\n    ReteModuleVisualizerComponent,\n    ReteModuleComposerComponent,\n    ReteTheaterComposerComponent,\n\n    HostComponent,\n    SubnetComponent,\n    NetworkComponent,\n    MirroringModuleInstanceComponent,\n    TheaterInternalServiceModuleInstanceComponent,\n    TheaterModuleInstanceComponent,\n\n    AppComponent,\n    HomeComponent,\n    HowToUseComponent,\n    NavbarElementComponent,\n\n    VisualizerComponent,\n    ComposerComponent,\n    OffcanvasComponent,\n    NavbarComponent,\n    DataInputComponent,\n    ModalComponent,\n    UnderbarComponent,\n    DataInputV2Component,\n    TabnavComponent,\n    DataItemComponent,\n    DocsComponent,\n\n    ControlTemplate\n  ],\n  imports: [\n    BrowserModule,\n\n    AppRoutingModule,\n\n    ReteModule,\n\n    NgxPopper,\n\n    CommonModule,\n\n    KeycloakAngularModule,\n\n    HttpClientModule,\n\n    NgxSpinnerModule,\n    NgxTypeaheadModule,\n\n    BrowserAnimationsModule,\n\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [\n    providerInitKeycloak,\n    TokenService,\n    ModuleService,\n    TheaterService,\n    ParseService\n  ],\n  exports: [OffcanvasComponent, NavbarComponent, NavbarElementComponent, DataInputComponent],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\n  bootstrap: [AppComponent],\n  entryComponents: [\n    MirroringModuleInstanceComponent,\n    TheaterInternalServiceModuleInstanceComponent,\n    TheaterModuleInstanceComponent,\n    SubnetComponent,\n    NetworkComponent,\n    HostComponent\n  ]\n})\n\nexport class AppModule implements DoBootstrap {\n  ngDoBootstrap(appRef: ApplicationRef) {\n    if (!environment.mocked) { // se non è mockato\n      keycloakService\n        .init()\n        .then(() => {\n          appRef.bootstrap(AppComponent);\n        })\n        .catch((error) =>\n          console.error('[ngDoBootstrap] init Keycloak failed', error)\n        );\n    }\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Moduli\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomeComponent } from './pages/home/home.component';\nimport { HowToUseComponent } from './pages/how-to-use/how-to-use.component';\nimport { VisualizerComponent } from './visualizer-system/visualizer/visualizer.component';\nimport { ComposerComponent } from './composer-system/composer/composer.component';\nimport { AuthGuard } from './utility/app.guard';\nimport { environment } from 'src/environments/environment';\nimport { DocsComponent } from './pages/docs/docs.component';\n\nconst routesGuard: Routes = [\n  {\n    path: \"\",\n    component: HomeComponent,\n  },\n  {\n    path: \"home\",\n    component: HomeComponent,\n  },\n  {\n    path: \"how-to-use\",\n    component: HowToUseComponent,\n  },\n  {\n    path: \"documentation\",\n    component: DocsComponent,\n  },\n  {\n    path: \"visualizer\",\n    component: VisualizerComponent,\n    canActivate: [AuthGuard]\n  },\n  {\n    path: \"composer\",\n    component: ComposerComponent,\n    canActivate: [AuthGuard]\n\n  },\n  {\n    path: \"**\",\n    component: HomeComponent,\n  },\n];\n\nconst routesSimple: Routes = [\n  {\n    path: \"\",\n    component: HomeComponent,\n  },\n  {\n    path: \"home\",\n    component: HomeComponent,\n  },\n  {\n    path: \"how-to-use\",\n    component: HowToUseComponent,\n  },\n  {\n    path: \"documentation\",\n    component: DocsComponent,\n  },\n  {\n    path: \"visualizer\",\n    component: VisualizerComponent,\n  },\n  {\n    path: \"composer\",\n    component: ComposerComponent,\n  },\n  {\n    path: \"**\",\n    component: HomeComponent,\n  },\n];\n\nlet ROUTES: Routes = environment.mocked ? routesSimple : routesGuard;\n\n@NgModule({\n  imports: [RouterModule.forRoot(ROUTES)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/AreaApplication.html":{"url":"classes/AreaApplication.html","title":"class - AreaApplication","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  AreaApplication\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsApplication/applicationModels.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AreaDTO\n            \n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                    Opzionale\n                                color\n                            \n                            \n                                deleted\n                            \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                theater\n                            \n                            \n                                uuid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        color\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsApplication/applicationModels.ts:108\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleted\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     boolean | string\n\n                    \n                \n                        \n                            \n                                ereditato da         AreaDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         AreaDTO:184\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         AreaDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         AreaDTO:182\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                        \n                            \n                                ereditato da         AreaDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         AreaDTO:179\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         AreaDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         AreaDTO:181\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        theater\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         TheaterDTO\n\n                    \n                \n                        \n                            \n                                ereditato da         AreaDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         AreaDTO:183\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uuid\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         AreaDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         AreaDTO:180\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ReteHostInfo } from \"src/app/rete-settings/nodes/rete-nodes/host/hostNode\";\nimport { ReteNetworkInfo } from \"src/app/rete-settings/nodes/rete-nodes/network/networkNode\";\nimport { ReteSubnetInfo } from \"src/app/rete-settings/nodes/rete-nodes/subnet/subnetNode\";\nimport { ReteMirroringModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/mirroringModuleInstance/mirroringModuleInstanceNode\";\nimport { ReteTheaterInternalServiceModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/theaterInternalServiceModuleInstance/theaterInternalServiceModuleInstanceNode\";\nimport { ReteTheaterModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/theaterModuleInstance/theaterModuleInstanceNode\";\nimport { FlavorBasicInfo } from \"../modelsDTO/falvorDTO\";\nimport { HostModuleDTO } from \"../modelsDTO/hostDTO\";\nimport { ModuleNetworkInterfaceDTO, ModuleInstancePropertiesDTO, SimpleModuleDTO, TheaterInstancePropertiesDTO, ModuleInstanceDTO, ModuleDTO, SimpleAreaDTO, AreaDTO } from \"../modelsDTO/moduleDTO\";\nimport { TheaterDTO } from \"../modelsDTO/theaterDTO\";\n\n\nexport interface CommonModule {\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n}\n\n\n/**\n * Classe contenente gli attributi utilizzati per le operazioni che coinvolgono i moduli.\n * ps. Questa struttura è prettamente utilizzata nella chiamata relativa al singolo modulo.\n */\nexport class ModuleApplication extends ModuleDTO implements CommonModule {\n    imports: string[] // perchè nell'export yaml è previsto\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n    // serve per validare il json risultante dal parsing del theaterApplication\n    validateObject?: string = \"module\";\n}\n// PER IMPLEMENTAZIONI FUTURE, PER COERENZA, PRENDERE DIRETTAMENTE I SINGOLI NODI DALLA CHIAMATA ESCLUSIVA E NON DA QUELLA CHE RESTITUISCE TUTTI I TEATRI\n/**\n * Classe contenente gli attributi utilizzati per le operazioni che coinvolgono i moduli.\n * ps. Questa struttura è prettamente utilizzata nella chiamata che prende tutti i moduli del teatro.\n */\nexport class SimpleModuleApplication extends SimpleModuleDTO implements CommonModule {\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n}\n\n\nexport class ReteConnection {\n    from: string;\n    port_src: string;\n    to: string;\n    port_dst: string;\n}\n\nexport interface TopologyList {\n    rete: any;\n    topology?: TopologyElement\n}\nexport class TopologyElement {\n    elements: { [name: string]: any };\n    connection: ReteConnection[]\n}\n\n// apptype module topology\n\nexport class NodeTopologyElement implements TopologyElement {\n    elements: { [hostName: string]: ReteHostInfo | ReteSubnetInfo | ReteNetworkInfo };\n    connection: ReteConnection[]\n}\n\nexport interface ModuleTopology extends TopologyList {\n    rete: ReteMirroringModuleInstanceInfo | ReteTheaterInternalServiceModuleInstanceInfo | ReteTheaterModuleInstanceInfo\n    topology: NodeTopologyElement;\n}\n\nexport class ModuleInstance extends ModuleInstanceDTO implements ModuleTopology {\n    // moduleTopology data\n    rete: ReteTheaterModuleInstanceInfo | ReteTheaterInternalServiceModuleInstanceInfo | ReteMirroringModuleInstanceInfo;\n    topology: NodeTopologyElement;\n    // other data\n    moduleInfo: SimpleModuleApplication\n}\n\n// apptype theater theater\n\nexport interface TheaterTopology extends TopologyElement {\n    elements: { [hostName: string]: ModuleInstance };\n    connection: ReteConnection[];\n}\n\nexport class TheaterApplication extends TheaterDTO implements TheaterTopology {\n    // theaterTopology data\n    elements: { [hostName: string]: ModuleInstance; };\n    connection: ReteConnection[];\n    // other data\n    properties: TheaterInstancePropertiesDTO;\n    topology: TheaterTopology;\n    // serve per validare il json risultante dal parsing del theaterApplication\n    validateObject?: string = \"theater\";\n}\n\nexport class AreaApplication extends AreaDTO {\n    color?: string;\n}\nexport class AreaColorDTO extends SimpleAreaDTO {\n    color: string;\n}\n\n\nexport class FlavorApplication extends FlavorBasicInfo {\n    flavorName: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/AreaColorDTO.html":{"url":"classes/AreaColorDTO.html","title":"class - AreaColorDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  AreaColorDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsApplication/applicationModels.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        SimpleAreaDTO\n            \n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                area\n                            \n                            \n                                description\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        color\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsApplication/applicationModels.ts:111\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        area\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleAreaDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleAreaDTO:191\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleAreaDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleAreaDTO:192\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ReteHostInfo } from \"src/app/rete-settings/nodes/rete-nodes/host/hostNode\";\nimport { ReteNetworkInfo } from \"src/app/rete-settings/nodes/rete-nodes/network/networkNode\";\nimport { ReteSubnetInfo } from \"src/app/rete-settings/nodes/rete-nodes/subnet/subnetNode\";\nimport { ReteMirroringModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/mirroringModuleInstance/mirroringModuleInstanceNode\";\nimport { ReteTheaterInternalServiceModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/theaterInternalServiceModuleInstance/theaterInternalServiceModuleInstanceNode\";\nimport { ReteTheaterModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/theaterModuleInstance/theaterModuleInstanceNode\";\nimport { FlavorBasicInfo } from \"../modelsDTO/falvorDTO\";\nimport { HostModuleDTO } from \"../modelsDTO/hostDTO\";\nimport { ModuleNetworkInterfaceDTO, ModuleInstancePropertiesDTO, SimpleModuleDTO, TheaterInstancePropertiesDTO, ModuleInstanceDTO, ModuleDTO, SimpleAreaDTO, AreaDTO } from \"../modelsDTO/moduleDTO\";\nimport { TheaterDTO } from \"../modelsDTO/theaterDTO\";\n\n\nexport interface CommonModule {\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n}\n\n\n/**\n * Classe contenente gli attributi utilizzati per le operazioni che coinvolgono i moduli.\n * ps. Questa struttura è prettamente utilizzata nella chiamata relativa al singolo modulo.\n */\nexport class ModuleApplication extends ModuleDTO implements CommonModule {\n    imports: string[] // perchè nell'export yaml è previsto\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n    // serve per validare il json risultante dal parsing del theaterApplication\n    validateObject?: string = \"module\";\n}\n// PER IMPLEMENTAZIONI FUTURE, PER COERENZA, PRENDERE DIRETTAMENTE I SINGOLI NODI DALLA CHIAMATA ESCLUSIVA E NON DA QUELLA CHE RESTITUISCE TUTTI I TEATRI\n/**\n * Classe contenente gli attributi utilizzati per le operazioni che coinvolgono i moduli.\n * ps. Questa struttura è prettamente utilizzata nella chiamata che prende tutti i moduli del teatro.\n */\nexport class SimpleModuleApplication extends SimpleModuleDTO implements CommonModule {\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n}\n\n\nexport class ReteConnection {\n    from: string;\n    port_src: string;\n    to: string;\n    port_dst: string;\n}\n\nexport interface TopologyList {\n    rete: any;\n    topology?: TopologyElement\n}\nexport class TopologyElement {\n    elements: { [name: string]: any };\n    connection: ReteConnection[]\n}\n\n// apptype module topology\n\nexport class NodeTopologyElement implements TopologyElement {\n    elements: { [hostName: string]: ReteHostInfo | ReteSubnetInfo | ReteNetworkInfo };\n    connection: ReteConnection[]\n}\n\nexport interface ModuleTopology extends TopologyList {\n    rete: ReteMirroringModuleInstanceInfo | ReteTheaterInternalServiceModuleInstanceInfo | ReteTheaterModuleInstanceInfo\n    topology: NodeTopologyElement;\n}\n\nexport class ModuleInstance extends ModuleInstanceDTO implements ModuleTopology {\n    // moduleTopology data\n    rete: ReteTheaterModuleInstanceInfo | ReteTheaterInternalServiceModuleInstanceInfo | ReteMirroringModuleInstanceInfo;\n    topology: NodeTopologyElement;\n    // other data\n    moduleInfo: SimpleModuleApplication\n}\n\n// apptype theater theater\n\nexport interface TheaterTopology extends TopologyElement {\n    elements: { [hostName: string]: ModuleInstance };\n    connection: ReteConnection[];\n}\n\nexport class TheaterApplication extends TheaterDTO implements TheaterTopology {\n    // theaterTopology data\n    elements: { [hostName: string]: ModuleInstance; };\n    connection: ReteConnection[];\n    // other data\n    properties: TheaterInstancePropertiesDTO;\n    topology: TheaterTopology;\n    // serve per validare il json risultante dal parsing del theaterApplication\n    validateObject?: string = \"theater\";\n}\n\nexport class AreaApplication extends AreaDTO {\n    color?: string;\n}\nexport class AreaColorDTO extends SimpleAreaDTO {\n    color: string;\n}\n\n\nexport class FlavorApplication extends FlavorBasicInfo {\n    flavorName: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/AreaDTO.html":{"url":"classes/AreaDTO.html","title":"class - AreaDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  AreaDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsDTO/moduleDTO.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano l'area di appartenenza di un modulo (complex).\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                deleted\n                            \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                theater\n                            \n                            \n                                uuid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        deleted\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     boolean | string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:184\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:182\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:179\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:181\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        theater\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         TheaterDTO\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:183\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uuid\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:180\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PageableDTO, SortDTO } from './elementDTO';\nimport { NetworkDTO } from './networkDTO';\nimport { TheaterDTO } from './theaterDTO';\n\n/**\n * Classe che contiene gli attributi che indicano l'insieme dei moduli ritornati dal teatro.\n */\nexport class ModuleListDTO {\n    content: SimpleModuleDTO[]\n    pageable: PageableDTO\n    last: boolean\n    totalPages: string | number\n    totalElements: string | number\n    size: string | number\n    number: string | number\n    sort: SortDTO\n    numberOfElements: string | number\n    first: boolean\n    empty: boolean\n}\n\n/**\n * Classe che contiene gli attributi che indica il catalogo del tipo.\n */\nexport class TypesCatalogueDTO {\n    group: string\n    id: string | number\n    parentId: {}\n    value: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano la classificazione del modulo.\n */\nexport class ModuleClassificationDTO {\n    blueprintType: string\n    category: string\n    expectedInstanceType: string\n    id: string | number\n    mcClass: string\n    type: string\n    uuid: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano un parametro generico.\n */\nexport class GenericParameterDTO {\n    type: string\n    default: string\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano i parametri di configurazione di un modulto.\n */\nexport class ConfigurationTemplateDTO {\n    anchor_parameters: { [name: string]: GenericParameterDTO | string }\n    instance_parameters: { [name: string]: GenericParameterDTO }\n    structural_parameters: { [name: string]: GenericParameterDTO }\n    fixed_parameters: { [name: string]: GenericParameterDTO }\n    control_parameters: { [name: string]: GenericParameterDTO }\n    infrastructure_parameters: { [name: string]: GenericParameterDTO }\n    module: string\n    description: string\n    category: string\n    version: string | number\n    platform: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano la modalità di un modulo.\n */\nexport class ModuleModeDTO {\n    code: string\n    id: string | number\n    name: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano lo stato di un modulo.\n */\nexport class ModuleStatusDTO {\n    descriptionCode: string\n    id: string | number\n    name: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le statitistiche di un modulo.\n */\nexport class StatisticItemDTO {\n    error: string | number\n    updated: string | number\n    inserted: string | number\n}\n\n/**\n * Classe che contiene gli attributi che indicano il modulo (simple - in dipendenza del teatro).\n */\nexport class SimpleModuleDTO {\n    createdBy: string\n    createdDate: string\n    description: string\n    id: string | number\n    isLocked: boolean\n    lastModifiedBy: string\n    lastModifiedDate: string\n    lockAcquiredTimestamp: string\n    lockLastUserAcquiring: string\n    lockReleasedTimestamp: string\n    name: string\n    status: ModuleStatusDTO\n    type?: string | any\n    uuid: string\n    version: string | number\n}\n\n/**\n * Classe che contiene gli attributi che indicano il modulo (complex - ritorato da call appostita).\n * @extends {SimpleModuleDTO}\n */\nexport class ModuleDTO extends SimpleModuleDTO {\n    attachments: string[]\n    author: string\n    capabilities: { [name: string]: string }\n    catalog1: TypesCatalogueDTO\n    catalog2: TypesCatalogueDTO\n    catalog3: TypesCatalogueDTO\n    classification: ModuleClassificationDTO\n    configurationTemplate: ConfigurationTemplateDTO\n    detailProperties: {}\n    input: { [name: string]: string }\n    output: { [name: string]: string }\n    mode: ModuleModeDTO\n    statistics: { [name: string]: StatisticItemDTO | string | number }\n    tags: []\n}\n\n/**\n * Classe che contiene gli attributi che indicano le interfacce esposte da un modulo.\n */\nexport class ModuleNetworkInterfaceDTO {\n    id: string | number\n    label: string\n    module: ModuleDTO\n    network: NetworkDTO\n    nodeName: string\n    type: string\n    uuid: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le connessioni interfaccia-modulo.\n */\nexport class ConsumerInterfaceLinkDTO {\n    local_interface: string\n    module_instance: string\n    remote_interface: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà dell'istanza di un modulo all'interno del node_templates.\n */\nexport class ModuleInstancePropertiesDTO {\n    area: string\n    description: string\n    module: string\n    version: string | number\n    sequence: string | number\n    consumer_interfaces_link: ConsumerInterfaceLinkDTO[]\n}\n\n\n/**\n * Classe che contiene gli attributi che indicano l'area di appartenenza di un modulo (complex).\n */\nexport class AreaDTO {\n    id: string | number;\n    uuid: string;\n    name: string;\n    description: string;\n    theater: TheaterDTO;\n    deleted: boolean | string;\n}\n\n/**\n * Classe che contiene gli attributi che indicano l'area di appartenenza di un modulo (simple).\n */\nexport class SimpleAreaDTO {\n    area: string\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà dell'istanza di un teatro all'interno del node_templates.\n */\nexport class TheaterInstancePropertiesDTO {\n    mode: string\n    tags: TagTIP[]\n    areas: SimpleAreaDTO[]\n    author: string\n    version: string | number\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano un tag.\n */\nexport class TagTIP{\n    tag: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano in via generale le caratteristiche di un elemento che deve essere presente nel node_templates.\n */\nexport class ElementIntoTheaterDTO {  // goes into map in blueprint [name:string]: Module...\n    properties: ModuleInstancePropertiesDTO | TheaterInstancePropertiesDTO\n    type: string\n}\n\n\n/**\n * Classe che contiene gli attributi che indicano le caratteristiche di un teatro presente nel node_templates.\n */\nexport class ModuleInstanceDTO {\n    properties: ModuleInstancePropertiesDTO\n    type: string\n}\n/**\n * Classe che contiene gli attributi che indicano le caratteristiche di un modulo presente nel node_templates.\n */\nexport class TheaterInstanceDTO {\n    properties: TheaterInstancePropertiesDTO\n    type: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/AreaExport.html":{"url":"classes/AreaExport.html","title":"class - AreaExport","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  AreaExport\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsExport/theaterExport.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano le aree nelle proprietà del teatr.\nSee {PropertiesTSD}\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                area\n                            \n                            \n                                description\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        area\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/theaterExport.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/theaterExport.ts:44\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ModeTypeExport, ModuleTypeExport, TheaterTypeExport, ToscaDefinitionType } from \"./TypeExport\"\n\n/**\n * Classe utilizzata per l'export. \n * Contiene le informazioni generali per il teatro che devono esserci nello standard Tosca.\n */\nexport class TheaterExport {\n    tosca_definitions_version: ToscaDefinitionType\n    description: string\n    imports: string[]\n    node_templates: { [name: string]: TheaterSimpleData | ModuleInstanceSimpleData }\n}\n/**\n * Classe che contiene gli attributi che indicano il teatro all'interno dei node_templates.\n */\nexport class TheaterSimpleData {\n    type: TheaterTypeExport\n    properties: PropertiesTSD\n}\n/**\n * Classe che contiene gli attributi che indicano le proprietà del teatro.\n */\nexport class PropertiesTSD {\n    version: string | number\n    description: string\n    mode: ModeTypeExport\n    author: string\n    tags: TagsExport[]\n    areas: AreaExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano i tag nelle proprietà del teatro.\n * @see {PropertiesTSD}\n */\nexport class TagsExport {\n    tag: string\n}\n/**\n * Classe che contiene gli attributi che indicano le aree nelle proprietà del teatr.\n * @see {PropertiesTSD}\n */\nexport class AreaExport {\n    area: string\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano il modulo all'interno dei node_modules.\n */\nexport class ModuleInstanceSimpleData {\n    type: ModuleTypeExport\n    properties: PropertiesMISD\n}\n/**\n * Classe che contiene gli attributi che indicano le propeitò del modulo all'interno dei node_templates.\n */\nexport class PropertiesMISD{\n    module: string\n    version: string | number\n    area: string\n    sequence: number\n    sources?: SourceExport[]\n    consumer_interface_link: ConsumerInterfaceLinkExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano le porte di ingresso del modulo all'interno dei node_templates.\n */\nexport class SourceExport{\n    module_instance: string\n    host:string\n    interfaces: string[]\n}\n/**\n * Classe che contiene gli attributi che indicano i collegamenti e relazioni intramodulo con le varie interfacce.\n */\nexport class ConsumerInterfaceLinkExport{\n    local_interface: string\n    module_interface:string\n    remote_interface:string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"injectables/AttachmentsService.html":{"url":"injectables/AttachmentsService.html","title":"injectable - AttachmentsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AttachmentsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/api/attachments.service.ts\n        \n\n\n\n\n\n            \n    Indice\n    \n        \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getModuleAttachment\n                            \n                            \n                                    Async\n                                getTheaterAttachment\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Costruttore\n        \n            \n                \n                    \nconstructor(http: HttpClient, tokenService: TokenService, theaterService: TheaterService)\n                    \n                \n                        \n                            \n                                Definito in src/app/services/api/attachments.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parametri :\n                                    \n                                        \n                                            \n                                                Nome\n                                                    Tipo\n                                                Opzionale\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tokenService\n                                                  \n                                                        \n                                                                        TokenService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        theaterService\n                                                  \n                                                        \n                                                                        TheaterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getModuleAttachment\n                        \n                    \n                \n            \n            \n                \n                    \n                    getModuleAttachment(module_id: string | number, attachments_uuid: string | number)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/api/attachments.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    module_id\n                                    \n                                            string | number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    attachments_uuid\n                                    \n                                            string | number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getTheaterAttachment\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTheaterAttachment(theater_id: string | number)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/api/attachments.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    theater_id\n                                    \n                                            string | number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { TokenService } from '../token/token.service';\nimport { TheaterService } from './theater.service';\nimport { stringify as YAMLstringfy } from \"json-to-pretty-yaml\"\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AttachmentsService {\n\n  constructor(private http: HttpClient, private tokenService: TokenService, private theaterService: TheaterService) { }\n\n  async getModuleAttachment(module_id: string | number, attachments_uuid: string | number) {\n    let link: string = environment.getModuleAttachment(module_id, attachments_uuid);\n    let x = this.http.get(link, { responseType: 'arraybuffer' });\n    x.subscribe(\n      data => {\n        const blob = new Blob([data], {\n          type: 'application/zip'\n        });\n        const url = window.URL.createObjectURL(blob);\n        // window.open(url);\n        const a = document.createElement('a');\n        document.body.appendChild(a);\n        a.classList.add('d-none');\n        a.href = url;\n        a.click();\n        window.URL.revokeObjectURL(url);\n        a.remove();\n      }\n    )\n    return x;\n  }\n\n  async getTheaterAttachment(theater_id: string|number){\n    let link: string = environment.getTheaterAttachment(theater_id);\n    let x = this.http.get(link, { responseType: 'arraybuffer' });\n    x.subscribe(\n      data => {\n        const blob = new Blob([data], {\n          type: 'application/zip'\n        });\n        const url = window.URL.createObjectURL(blob);\n        // window.open(url);\n        const a = document.createElement('a');\n        document.body.appendChild(a);\n        a.classList.add('d-none');\n        a.href = url;\n        a.click();\n        window.URL.revokeObjectURL(url);\n        a.remove();\n      }\n    )\n    return x;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"injectables/AuthGuard.html":{"url":"injectables/AuthGuard.html","title":"injectable - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/utility/app.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        KeycloakAuthGuard\n            \n\n\n            \n    Indice\n    \n        \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                isAccessAllowed\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Costruttore\n        \n            \n                \n                    \nconstructor(router: Router, keycloak: KeycloakService)\n                    \n                \n                        \n                            \n                                Definito in src/app/utility/app.guard.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parametri :\n                                    \n                                        \n                                            \n                                                Nome\n                                                    Tipo\n                                                Opzionale\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        keycloak\n                                                  \n                                                        \n                                                                    KeycloakService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        isAccessAllowed\n                        \n                    \n                \n            \n            \n                \n                    \n                    isAccessAllowed(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Definito in src/app/utility/app.guard.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n    ActivatedRouteSnapshot,\n    Router,\n    RouterStateSnapshot,\n} from '@angular/router';\nimport { KeycloakAuthGuard, KeycloakService } from 'keycloak-angular';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AuthGuard extends KeycloakAuthGuard {\n    constructor(\n        protected readonly router: Router,\n        protected readonly keycloak: KeycloakService\n    ) {\n        super(router, keycloak);\n    }\n\n    public async isAccessAllowed(\n        route: ActivatedRouteSnapshot,\n        state: RouterStateSnapshot\n    ): Promise {\n        // Force the user to log in if currently unauthenticated.\n        if (!this.authenticated) {\n            await this.keycloak.login({\n                redirectUri: window.location.origin + state.url,\n            });\n        }\n\n        // Get the roles required from the route.\n        const requiredRoles = route.data.roles;\n\n        // Allow the user to to proceed if no additional roles are required to access the route.\n        if (!(requiredRoles instanceof Array) || requiredRoles.length === 0) {\n            return true;\n        }\n\n        // Allow the user to proceed if all the required roles are present.\n        return requiredRoles.every((role) => this.roles.includes(role));\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/BlueprintFileDTO.html":{"url":"classes/BlueprintFileDTO.html","title":"class - BlueprintFileDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  BlueprintFileDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsDTO/theaterDTO.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano il blueprint di un teatro.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                imports\n                            \n                            \n                                node_templates\n                            \n                            \n                                tosca_definitions_version\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/theaterDTO.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        imports\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/theaterDTO.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        node_templates\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     literal type\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/theaterDTO.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tosca_definitions_version\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/theaterDTO.ts:38\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ModuleInstanceDTO, TheaterInstanceDTO } from \"./moduleDTO\"\n\n/**\n * Classe che contiene gli attributi che indicano il catalogo di riferimento di un teatro.\n */\nexport class TagCatalogueDTO {\n    description: string\n    id: string | number\n    name: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano lo stato di un teatro.\n */\nexport class TheatreStatusDTO {\n    code: string\n    id: string | number\n    name: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano un elemento nella sequenza di deploy.\n */\nexport class DeployInstanceDTO {\n    moduleInstanceConfigurationUUID?: string\n    moduleInstanceName: string\n    moduleInstanceUUID: string\n    moduleUUID: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano il blueprint di un teatro.\n */\nexport class BlueprintFileDTO {\n    description: string\n    imports: string[]\n    node_templates: {[name:string]:ModuleInstanceDTO|TheaterInstanceDTO}\n    tosca_definitions_version: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano il mapping nome-modulo.\n */\nexport class NameMappingDTO {\n    display_name: string\n    module_instance_name: string\n    module_name: string\n    node_template_name: string\n}\n/**\n * Classe che contiene gli attributi che indica l'array dei mapping nome-modulo.\n */\nexport class EntityNameMappingFileDTO {\n    name_mapping: NameMappingDTO[]\n}\n\n/**\n * Classe che contiene gli attributi che indicano il teaatro.\n */\nexport class TheaterDTO {\n    author: string\n    blueprintFile: BlueprintFileDTO\n    blueprintUUID: string | number\n    createdBy: string\n    createdDate: string\n    deploymentSequence: {[index:string]:DeployInstanceDTO} //tosee\n    description: string\n    entityNameMappingFile: EntityNameMappingFileDTO\n    id: string | number\n    isLocked: boolean\n    lastModifiedBy: string\n    lastModifiedDate: string\n    lockAcquiredTimestamp: string\n    lockLastUserAcquiring: string\n    lockReleasedTimestamp: string\n    name: string\n    status: TheatreStatusDTO\n    tags: TagCatalogueDTO[]\n    uuid: string\n    version: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/BorderNetworkDTO.html":{"url":"classes/BorderNetworkDTO.html","title":"class - BorderNetworkDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  BorderNetworkDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsDTO/networkDTO.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indica la border network.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                bnName\n                            \n                            \n                                id\n                            \n                            \n                                subnet\n                            \n                            \n                                uuid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        bnName\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/networkDTO.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/networkDTO.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subnet\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     literal type | null\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/networkDTO.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uuid\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/networkDTO.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class NetworkDTO {\n    id: string | number\n    name: string\n    uuid: string\n}\n\n/**\n * Classe che contiene gli attributi che indica la border network.\n */\nexport class BorderNetworkDTO {\n    bnName: string\n    id: string | number\n    subnet: {} | null\n    uuid: string | number\n}\n\n/**\n * Classe che contiene gli attributi che indicano le net os.\n */\nexport class NetOSRouterDTO {\n    borderNetwork: BorderNetworkDTO\n    id: string | number\n    subnet: {} | null\n    uuid: string | number\n}\n\n\n/**\n * Classe che contiene gli attributi che indicano le subnet.\n */\nexport class SubnetDTO {\n    allocationPool: string\n    borderNetwork: BorderNetworkDTO\n    cidr: string\n    dns: string\n    gateway: string\n    id: string | number\n    isDhcp: boolean\n    name: string\n    network: NetworkDTO\n    router: NetOSRouterDTO\n    uuid: string\n    version: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"interfaces/CommonModule.html":{"url":"interfaces/CommonModule.html","title":"interface - CommonModule","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfacce\n  \n  CommonModule\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsApplication/applicationModels.ts\n        \n\n\n\n\n        \n            Indice\n            \n                \n                    \n                        \n                            Proprietà\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            host_number\n                                        \n                                \n                                \n                                        \n                                            hosts\n                                        \n                                \n                                \n                                        \n                                            interfaces\n                                        \n                                \n                                \n                                        \n                                            network_number\n                                        \n                                \n                                \n                                        \n                                            subnet_number\n                                        \n                                \n                                \n                                        \n                                            topology\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Proprietà\n                    \n                        \n                                \n                                    \n                                        \n                                        host_number\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        host_number:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hosts\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hosts:     HostModuleDTO[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :     HostModuleDTO[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        interfaces\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        interfaces:         ModuleNetworkInterfaceDTO[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         ModuleNetworkInterfaceDTO[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        network_number\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        network_number:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subnet_number\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subnet_number:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        topology\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        topology:         NodeTopologyElement\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         NodeTopologyElement\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ReteHostInfo } from \"src/app/rete-settings/nodes/rete-nodes/host/hostNode\";\nimport { ReteNetworkInfo } from \"src/app/rete-settings/nodes/rete-nodes/network/networkNode\";\nimport { ReteSubnetInfo } from \"src/app/rete-settings/nodes/rete-nodes/subnet/subnetNode\";\nimport { ReteMirroringModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/mirroringModuleInstance/mirroringModuleInstanceNode\";\nimport { ReteTheaterInternalServiceModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/theaterInternalServiceModuleInstance/theaterInternalServiceModuleInstanceNode\";\nimport { ReteTheaterModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/theaterModuleInstance/theaterModuleInstanceNode\";\nimport { FlavorBasicInfo } from \"../modelsDTO/falvorDTO\";\nimport { HostModuleDTO } from \"../modelsDTO/hostDTO\";\nimport { ModuleNetworkInterfaceDTO, ModuleInstancePropertiesDTO, SimpleModuleDTO, TheaterInstancePropertiesDTO, ModuleInstanceDTO, ModuleDTO, SimpleAreaDTO, AreaDTO } from \"../modelsDTO/moduleDTO\";\nimport { TheaterDTO } from \"../modelsDTO/theaterDTO\";\n\n\nexport interface CommonModule {\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n}\n\n\n/**\n * Classe contenente gli attributi utilizzati per le operazioni che coinvolgono i moduli.\n * ps. Questa struttura è prettamente utilizzata nella chiamata relativa al singolo modulo.\n */\nexport class ModuleApplication extends ModuleDTO implements CommonModule {\n    imports: string[] // perchè nell'export yaml è previsto\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n    // serve per validare il json risultante dal parsing del theaterApplication\n    validateObject?: string = \"module\";\n}\n// PER IMPLEMENTAZIONI FUTURE, PER COERENZA, PRENDERE DIRETTAMENTE I SINGOLI NODI DALLA CHIAMATA ESCLUSIVA E NON DA QUELLA CHE RESTITUISCE TUTTI I TEATRI\n/**\n * Classe contenente gli attributi utilizzati per le operazioni che coinvolgono i moduli.\n * ps. Questa struttura è prettamente utilizzata nella chiamata che prende tutti i moduli del teatro.\n */\nexport class SimpleModuleApplication extends SimpleModuleDTO implements CommonModule {\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n}\n\n\nexport class ReteConnection {\n    from: string;\n    port_src: string;\n    to: string;\n    port_dst: string;\n}\n\nexport interface TopologyList {\n    rete: any;\n    topology?: TopologyElement\n}\nexport class TopologyElement {\n    elements: { [name: string]: any };\n    connection: ReteConnection[]\n}\n\n// apptype module topology\n\nexport class NodeTopologyElement implements TopologyElement {\n    elements: { [hostName: string]: ReteHostInfo | ReteSubnetInfo | ReteNetworkInfo };\n    connection: ReteConnection[]\n}\n\nexport interface ModuleTopology extends TopologyList {\n    rete: ReteMirroringModuleInstanceInfo | ReteTheaterInternalServiceModuleInstanceInfo | ReteTheaterModuleInstanceInfo\n    topology: NodeTopologyElement;\n}\n\nexport class ModuleInstance extends ModuleInstanceDTO implements ModuleTopology {\n    // moduleTopology data\n    rete: ReteTheaterModuleInstanceInfo | ReteTheaterInternalServiceModuleInstanceInfo | ReteMirroringModuleInstanceInfo;\n    topology: NodeTopologyElement;\n    // other data\n    moduleInfo: SimpleModuleApplication\n}\n\n// apptype theater theater\n\nexport interface TheaterTopology extends TopologyElement {\n    elements: { [hostName: string]: ModuleInstance };\n    connection: ReteConnection[];\n}\n\nexport class TheaterApplication extends TheaterDTO implements TheaterTopology {\n    // theaterTopology data\n    elements: { [hostName: string]: ModuleInstance; };\n    connection: ReteConnection[];\n    // other data\n    properties: TheaterInstancePropertiesDTO;\n    topology: TheaterTopology;\n    // serve per validare il json risultante dal parsing del theaterApplication\n    validateObject?: string = \"theater\";\n}\n\nexport class AreaApplication extends AreaDTO {\n    color?: string;\n}\nexport class AreaColorDTO extends SimpleAreaDTO {\n    color: string;\n}\n\n\nexport class FlavorApplication extends FlavorBasicInfo {\n    flavorName: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"components/ComposerComponent.html":{"url":"components/ComposerComponent.html","title":"component - ComposerComponent","body":"\n                   \n\n\n\n\n\n  Componenti\n  \n  ComposerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/composer-system/composer/composer.component.ts\n\n\n\n    \n        Descrizione\n    \n    \n        Componente che ha come scopo di esegure tutte le preelaborazioni e switchare l'ambiente di designing moduli e teatri in base ai dati passati.\n\n    \n\n\n    \n        Implementa\n    \n    \n                    OnInit\n    \n\n\n\n    Metadati\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-composer\n            \n\n            \n                styleUrls\n                ./composer.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./composer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                active\n                            \n                            \n                                    Protected\n                                author\n                            \n                            \n                                    Protected\n                                data\n                            \n                            \n                                    Protected\n                                dataFromRouter\n                            \n                            \n                                    Protected\n                                description\n                            \n                            \n                                    Protected\n                                flavor\n                            \n                            \n                                    Protected\n                                hasFile\n                            \n                            \n                                    Protected\n                                hasproblem\n                            \n                            \n                                    Protected\n                                MODULE\n                            \n                            \n                                    Protected\n                                modulesDict\n                            \n                            \n                                    Protected\n                                name\n                            \n                            \n                                    Protected\n                                THEATER\n                            \n                            \n                                    Protected\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                gohome\n                            \n                            \n                                    Async\n                                initMODULE\n                            \n                            \n                                    Async\n                                initTHEATER\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Costruttore\n        \n            \n                \n                    \nconstructor(router: Router, parseService: ParseService, spinnerService: SpinnerService, storageService: StorageService)\n                    \n                \n                        \n                            \n                                Definito in src/app/composer-system/composer/composer.component.ts:74\n                            \n                        \n\n                \n                    \n                            Costruttore di ComposerComponent.\nSi occupa di prendere i dati di route url e valorizzare le rispettive variabili.\n\n                            \n                                    Parametri :\n                                    \n                                        \n                                            \n                                                Nome\n                                                    Tipo\n                                                Opzionale\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parseService\n                                                  \n                                                        \n                                                                        ParseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        spinnerService\n                                                  \n                                                        \n                                                                        SpinnerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        gohome\n                        \n                    \n                \n            \n            \n                \n                    \n                    gohome()\n                \n            \n\n\n            \n                \n                    Definito in src/app/composer-system/composer/composer.component.ts:182\n                \n            \n\n\n            \n                \n                    Funzione che esegue una redirezione alla pagine home\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        initMODULE\n                        \n                    \n                \n            \n            \n                \n                    \n                    initMODULE()\n                \n            \n\n\n            \n                \n                    Definito in src/app/composer-system/composer/composer.component.ts:140\n                \n            \n\n\n            \n                \n                    Funzione che esegue tutte le funzioni di inizializzazione, reperimento e filtraggio dati da poter essere passati alla componente di ModuleComposer.\nEsegue anche le attività di spinner-loading.\nSee {ReteModuleComposer}\nSee {SpinnerService}\nSee {parseService}\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        initTHEATER\n                        \n                    \n                \n            \n            \n                \n                    \n                    initTHEATER()\n                \n            \n\n\n            \n                \n                    Definito in src/app/composer-system/composer/composer.component.ts:162\n                \n            \n\n\n            \n                \n                    Funzione che esegue tutte le funzioni di inizializzazione, reperimento e filtraggio dati da poter essere passati alla componente di TheaterComposer.\nEsegue anche le attività di spinner-loading.\nSee {ReteTheaterComposer}\nSee {SpinnerService}\nSee {parseService}\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Definito in src/app/composer-system/composer/composer.component.ts:118\n                \n            \n\n\n            \n                \n                    Funzione richiamata all'inizializzazione della componente ComposerComponent.\nRichiama le funzioni adeguate in base al tipo di componente Modulo o Teatro scelto per il design.\nSee {initMODULE}\nSee {initTHEATER}\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        active\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                \n                    \n                        Valore predefinito : false\n                    \n                \n                    \n                        \n                                Definito in src/app/composer-system/composer/composer.component.ts:47\n                        \n                    \n\n            \n                \n                    Variabile che indica lo stato di reperimento dei dati prima di visualizzare le componenti di costruzione\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        author\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/composer-system/composer/composer.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     TheaterApplication | ModuleApplication\n\n                    \n                \n                    \n                        \n                                Definito in src/app/composer-system/composer/composer.component.ts:74\n                        \n                    \n\n            \n                \n                    Variabile che memorizza il teatro o il modulo importato da un file\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        dataFromRouter\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         DataRouteComposer\n\n                    \n                \n                    \n                        \n                                Definito in src/app/composer-system/composer/composer.component.ts:25\n                        \n                    \n\n            \n                \n                    Variabile che ha come scopo prendere i dati passati come url-parameters\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/composer-system/composer/composer.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        flavor\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         FlavorApplication[]\n\n                    \n                \n                \n                    \n                        Valore predefinito : []\n                    \n                \n                    \n                        \n                                Definito in src/app/composer-system/composer/composer.component.ts:54\n                        \n                    \n\n            \n                \n                    Variabile che viene valorizzata con i flavor reperiti per poter essere utilizzata dalla componente di costruzione del moduli\nSee {ReteModuleComposer}\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        hasFile\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                \n                    \n                        Valore predefinito : false\n                    \n                \n                    \n                        \n                                Definito in src/app/composer-system/composer/composer.component.ts:67\n                        \n                    \n\n            \n                \n                    Variabile che viene valorizzata nel momento in cui si presenta il caso di design da un file preso in input\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        hasproblem\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                \n                    \n                        Valore predefinito : false\n                    \n                \n                    \n                        \n                                Definito in src/app/composer-system/composer/composer.component.ts:40\n                        \n                    \n\n            \n                \n                    Variabile che viene valorizzata a true se si è verificato un errore.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        MODULE\n                        \n                    \n                \n            \n                \n                    \n                        Valore predefinito : SubjectType.MODULE\n                    \n                \n                    \n                        \n                                Definito in src/app/composer-system/composer/composer.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        modulesDict\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     literal type\n\n                    \n                \n                    \n                        \n                                Definito in src/app/composer-system/composer/composer.component.ts:61\n                        \n                    \n\n            \n                \n                    Variabile che viene valorizzata come dizionario di moduli utilizzata dalla componente di costruzione del teatro.\nSee {ReteTheaterComposer}\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/composer-system/composer/composer.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        THEATER\n                        \n                    \n                \n            \n                \n                    \n                        Valore predefinito : SubjectType.THEATER\n                    \n                \n                    \n                        \n                                Definito in src/app/composer-system/composer/composer.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         SubjectType\n\n                    \n                \n                    \n                        \n                                Definito in src/app/composer-system/composer/composer.component.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { from } from 'rxjs';\nimport { DataRouteComposer, SubjectType } from 'src/app/models/appType';\nimport { ParseService } from 'src/app/services/application/parse/parse.service';\nimport { SpinnerService } from 'src/app/services/application/spinner/spinner.service';\nimport { StorageService } from 'src/app/services/application/storage/storage.service';\nimport { FlavorApplication, ModuleApplication, ModuleInstance, TheaterApplication } from 'src/app/services/modelsApplication/applicationModels';\n\n\n/**\n * Componente che ha come scopo di esegure tutte le preelaborazioni e switchare l'ambiente di designing moduli e teatri in base ai dati passati.\n */\n@Component({\n  selector: 'app-composer',\n  templateUrl: './composer.component.html',\n  styleUrls: ['./composer.component.sass']\n})\nexport class ComposerComponent implements OnInit {\n\n  /**\n   * Variabile che ha come scopo prendere i dati passati come url-parameters\n   * @type {DataRouteComposer} \n   */\n  protected dataFromRouter: DataRouteComposer;\n  // variabili istanziate come valori proveniente dalla dataFormRouter\n  protected name: string;\n  protected description: string;\n  protected author: string;\n  protected type: SubjectType;\n  // variabili che indicano i tipi - moduli e teatro\n  protected MODULE = SubjectType.MODULE;\n  protected THEATER = SubjectType.THEATER;\n\n  /**\n   * Variabile che viene valorizzata a true se si è verificato un errore.\n   * @type {boolean}\n   * @default false\n   */\n  protected hasproblem: boolean = false;\n\n  /**\n   * Variabile che indica lo stato di reperimento dei dati prima di visualizzare le componenti di costruzione\n   * @type  {boolean}\n   * @default false\n   */\n  protected active: boolean = false;\n\n  /**\n   * Variabile che viene valorizzata con i flavor reperiti per poter essere utilizzata dalla componente di costruzione del moduli\n   * @type {FlavorApplication}\n   * @see {ReteModuleComposer}\n   */\n  protected flavor: FlavorApplication[] = [];\n\n  /**\n   * Variabile che viene valorizzata come dizionario di moduli utilizzata dalla componente di costruzione del teatro.\n   * @type { [name: string]: ModuleInstance }\n   * @see {ReteTheaterComposer}\n   */\n  protected modulesDict: { [name: string]: ModuleInstance };\n\n  /**\n   * Variabile che viene valorizzata nel momento in cui si presenta il caso di design da un file preso in input\n   * @type {boolean} \n   */\n  protected hasFile: boolean = false;\n\n  /**\n   * Variabile che memorizza il teatro o il modulo importato da un file\n   * @type {TheaterApplication}\n   * @type {ModuleApplication}\n   */\n  protected data: TheaterApplication | ModuleApplication;\n\n\n  /**\n   * Costruttore di ComposerComponent.\n   * Si occupa di prendere i dati di route url e valorizzare le rispettive variabili.\n   * @param router \n   * @param parseService \n   * @param spinnerService \n   * @param storageService \n   */\n  constructor(\n    private router: Router,\n    private parseService: ParseService,\n    private spinnerService: SpinnerService,\n    private storageService: StorageService\n  ) {\n\n    this.dataFromRouter = this.router.getCurrentNavigation().extras.state as DataRouteComposer\n    if (this.dataFromRouter) {\n      this.name = this.dataFromRouter.name as string;\n      this.description = this.dataFromRouter.description as string;\n      this.author = this.dataFromRouter.author as string;\n      this.type = this.dataFromRouter.type as SubjectType;\n    }\n    // se non è stato inizializzato il nome e ci sono dati nello storage\n    if (!this.name && this.storageService.data) {\n      this.hasFile = true;\n      this.data = this.storageService.data;\n      this.storageService.data = undefined; // consumo l'elemento\n    }\n    \n    if(!this.name && !this.data){\n      this.hasproblem = true;\n    }\n\n  }\n\n  /**\n   * Funzione richiamata all'inizializzazione della componente ComposerComponent.\n   * Richiama le funzioni adeguate in base al tipo di componente Modulo o Teatro scelto per il design.\n   * @see {initMODULE}\n   * @see {initTHEATER}\n   */\n  ngOnInit() {\n\n    if (this.type === this.MODULE) {\n      this.initMODULE();\n    }\n    else if (this.type === this.THEATER) {\n      this.initTHEATER();\n    }\n    else {\n      this.hasproblem = true;\n    }\n\n  }\n\n\n  /**\n   * Funzione che esegue tutte le funzioni di inizializzazione, reperimento e filtraggio dati da poter essere passati alla componente di ModuleComposer.\n   * Esegue anche le attività di spinner-loading.\n   * @see {ReteModuleComposer}\n   * @see {SpinnerService}\n   * @see {parseService}\n   */\n  async initMODULE() {\n    this.spinnerService.setSpinner(true, \"Loading canvas element\");\n    if (this.hasFile) {\n      this.data = this.data as ModuleApplication;\n    }\n    from(\n      this.parseService.parseFlavorForModuleComposer()\n    )\n      .subscribe(el => {\n        this.flavor = el\n        this.spinnerService.setSpinner(false);\n        this.active = true;\n      });\n  }\n\n  /**\n   * Funzione che esegue tutte le funzioni di inizializzazione, reperimento e filtraggio dati da poter essere passati alla componente di TheaterComposer.\n   * Esegue anche le attività di spinner-loading.\n   * @see {ReteTheaterComposer}\n   * @see {SpinnerService}\n   * @see {parseService}\n   */\n  async initTHEATER() {\n    this.spinnerService.setSpinner(true, \"Getting Theater modules\")\n    if (this.hasFile) {\n      this.data = this.data as TheaterApplication;\n    }\n    from(\n      this.parseService.parseModuleForTheaterComposer()\n    )\n      .subscribe(\n        el => {\n          this.modulesDict = el;\n          this.spinnerService.setSpinner(false);\n          this.active = true;\n        }\n      )\n  }\n\n  /**\n   * Funzione che esegue una redirezione alla pagine home\n   */\n  public gohome() {\n    this.router.navigate(['/home']);\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n\n\n\n\n    \n        \n            \n                \n                 A Problem occurred when loading designer system \n            \n            \n                \n                     Go home \n            \n        \n    \n\n    \n\n    \n                \n                    ./composer.component.sass\n                \n                .oh-imp\n    overflow: hidden !important\n    \n\n    \n        \n        \n            \n                Legenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento html con direttive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                         A Problem occurred when loading designer system                                                              Go home                         '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ComposerComponent', 'selector': 'app-composer'},{'name': 'ControlTemplate', 'selector': ''},{'name': 'DataInputComponent', 'selector': 'app-data-input'},{'name': 'DataInputV2Component', 'selector': 'app-data-input-v2'},{'name': 'DataItemComponent', 'selector': 'app-window-item'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HostComponent', 'selector': ''},{'name': 'HowToUseComponent', 'selector': 'app-how-to-use'},{'name': 'MirroringModuleInstanceComponent', 'selector': ''},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavbarElementComponent', 'selector': 'app-navbar-element'},{'name': 'NetworkComponent', 'selector': ''},{'name': 'OffcanvasComponent', 'selector': 'app-offcanvas'},{'name': 'ReteModuleComposerComponent', 'selector': 'app-rete-module-composer'},{'name': 'ReteModuleVisualizerComponent', 'selector': 'app-rete-module-visualizer'},{'name': 'ReteTheaterComposerComponent', 'selector': 'app-rete-theater-composer'},{'name': 'ReteTheaterVisualizerComponent', 'selector': 'app-rete-theater-visualizer'},{'name': 'SubnetComponent', 'selector': ''},{'name': 'TabnavComponent', 'selector': 'app-tabnav'},{'name': 'TheaterInternalServiceModuleInstanceComponent', 'selector': ''},{'name': 'TheaterModuleInstanceComponent', 'selector': ''},{'name': 'UnderbarComponent', 'selector': 'app-underbar'},{'name': 'VisualizerComponent', 'selector': 'app-displayer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ComposerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/ConfigurationTemplateDTO.html":{"url":"classes/ConfigurationTemplateDTO.html","title":"class - ConfigurationTemplateDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  ConfigurationTemplateDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsDTO/moduleDTO.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano i parametri di configurazione di un modulto.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                anchor_parameters\n                            \n                            \n                                category\n                            \n                            \n                                control_parameters\n                            \n                            \n                                description\n                            \n                            \n                                fixed_parameters\n                            \n                            \n                                infrastructure_parameters\n                            \n                            \n                                instance_parameters\n                            \n                            \n                                module\n                            \n                            \n                                platform\n                            \n                            \n                                structural_parameters\n                            \n                            \n                                version\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        anchor_parameters\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     literal type\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        control_parameters\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     literal type\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fixed_parameters\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     literal type\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        infrastructure_parameters\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     literal type\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        instance_parameters\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     literal type\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        platform\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        structural_parameters\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     literal type\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:67\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PageableDTO, SortDTO } from './elementDTO';\nimport { NetworkDTO } from './networkDTO';\nimport { TheaterDTO } from './theaterDTO';\n\n/**\n * Classe che contiene gli attributi che indicano l'insieme dei moduli ritornati dal teatro.\n */\nexport class ModuleListDTO {\n    content: SimpleModuleDTO[]\n    pageable: PageableDTO\n    last: boolean\n    totalPages: string | number\n    totalElements: string | number\n    size: string | number\n    number: string | number\n    sort: SortDTO\n    numberOfElements: string | number\n    first: boolean\n    empty: boolean\n}\n\n/**\n * Classe che contiene gli attributi che indica il catalogo del tipo.\n */\nexport class TypesCatalogueDTO {\n    group: string\n    id: string | number\n    parentId: {}\n    value: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano la classificazione del modulo.\n */\nexport class ModuleClassificationDTO {\n    blueprintType: string\n    category: string\n    expectedInstanceType: string\n    id: string | number\n    mcClass: string\n    type: string\n    uuid: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano un parametro generico.\n */\nexport class GenericParameterDTO {\n    type: string\n    default: string\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano i parametri di configurazione di un modulto.\n */\nexport class ConfigurationTemplateDTO {\n    anchor_parameters: { [name: string]: GenericParameterDTO | string }\n    instance_parameters: { [name: string]: GenericParameterDTO }\n    structural_parameters: { [name: string]: GenericParameterDTO }\n    fixed_parameters: { [name: string]: GenericParameterDTO }\n    control_parameters: { [name: string]: GenericParameterDTO }\n    infrastructure_parameters: { [name: string]: GenericParameterDTO }\n    module: string\n    description: string\n    category: string\n    version: string | number\n    platform: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano la modalità di un modulo.\n */\nexport class ModuleModeDTO {\n    code: string\n    id: string | number\n    name: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano lo stato di un modulo.\n */\nexport class ModuleStatusDTO {\n    descriptionCode: string\n    id: string | number\n    name: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le statitistiche di un modulo.\n */\nexport class StatisticItemDTO {\n    error: string | number\n    updated: string | number\n    inserted: string | number\n}\n\n/**\n * Classe che contiene gli attributi che indicano il modulo (simple - in dipendenza del teatro).\n */\nexport class SimpleModuleDTO {\n    createdBy: string\n    createdDate: string\n    description: string\n    id: string | number\n    isLocked: boolean\n    lastModifiedBy: string\n    lastModifiedDate: string\n    lockAcquiredTimestamp: string\n    lockLastUserAcquiring: string\n    lockReleasedTimestamp: string\n    name: string\n    status: ModuleStatusDTO\n    type?: string | any\n    uuid: string\n    version: string | number\n}\n\n/**\n * Classe che contiene gli attributi che indicano il modulo (complex - ritorato da call appostita).\n * @extends {SimpleModuleDTO}\n */\nexport class ModuleDTO extends SimpleModuleDTO {\n    attachments: string[]\n    author: string\n    capabilities: { [name: string]: string }\n    catalog1: TypesCatalogueDTO\n    catalog2: TypesCatalogueDTO\n    catalog3: TypesCatalogueDTO\n    classification: ModuleClassificationDTO\n    configurationTemplate: ConfigurationTemplateDTO\n    detailProperties: {}\n    input: { [name: string]: string }\n    output: { [name: string]: string }\n    mode: ModuleModeDTO\n    statistics: { [name: string]: StatisticItemDTO | string | number }\n    tags: []\n}\n\n/**\n * Classe che contiene gli attributi che indicano le interfacce esposte da un modulo.\n */\nexport class ModuleNetworkInterfaceDTO {\n    id: string | number\n    label: string\n    module: ModuleDTO\n    network: NetworkDTO\n    nodeName: string\n    type: string\n    uuid: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le connessioni interfaccia-modulo.\n */\nexport class ConsumerInterfaceLinkDTO {\n    local_interface: string\n    module_instance: string\n    remote_interface: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà dell'istanza di un modulo all'interno del node_templates.\n */\nexport class ModuleInstancePropertiesDTO {\n    area: string\n    description: string\n    module: string\n    version: string | number\n    sequence: string | number\n    consumer_interfaces_link: ConsumerInterfaceLinkDTO[]\n}\n\n\n/**\n * Classe che contiene gli attributi che indicano l'area di appartenenza di un modulo (complex).\n */\nexport class AreaDTO {\n    id: string | number;\n    uuid: string;\n    name: string;\n    description: string;\n    theater: TheaterDTO;\n    deleted: boolean | string;\n}\n\n/**\n * Classe che contiene gli attributi che indicano l'area di appartenenza di un modulo (simple).\n */\nexport class SimpleAreaDTO {\n    area: string\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà dell'istanza di un teatro all'interno del node_templates.\n */\nexport class TheaterInstancePropertiesDTO {\n    mode: string\n    tags: TagTIP[]\n    areas: SimpleAreaDTO[]\n    author: string\n    version: string | number\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano un tag.\n */\nexport class TagTIP{\n    tag: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano in via generale le caratteristiche di un elemento che deve essere presente nel node_templates.\n */\nexport class ElementIntoTheaterDTO {  // goes into map in blueprint [name:string]: Module...\n    properties: ModuleInstancePropertiesDTO | TheaterInstancePropertiesDTO\n    type: string\n}\n\n\n/**\n * Classe che contiene gli attributi che indicano le caratteristiche di un teatro presente nel node_templates.\n */\nexport class ModuleInstanceDTO {\n    properties: ModuleInstancePropertiesDTO\n    type: string\n}\n/**\n * Classe che contiene gli attributi che indicano le caratteristiche di un modulo presente nel node_templates.\n */\nexport class TheaterInstanceDTO {\n    properties: TheaterInstancePropertiesDTO\n    type: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/ConstraintsMSD.html":{"url":"classes/ConstraintsMSD.html","title":"class - ConstraintsMSD","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  ConstraintsMSD\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsExport/moduleExport.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano i vincoli di connessione del modulo per l'export.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                interface_constraints\n                            \n                            \n                                module_constraints\n                            \n                            \n                                network_constraints\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        interface_constraints\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         InterfaceConstraints[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        module_constraints\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ModuleConstraints[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        network_constraints\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         NetworkConstraints[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:46\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ModeTypeExport, ModuleTypeExport, NetworkTypeExport, NodeTypeExport, PortTypeExport, RelationshipsTypeExport, SubnetTypeExport, ToscaDefinitionType } from \"./TypeExport\"\n\n\n/**\n * Classe utilizzata per l'export. \n * Contiene le informazioni generali per il modulo che devono esserci nello standard Tosca.\n */\nexport class ModuleExport {\n    tosca_definitions_version: ToscaDefinitionType\n    description: string\n    imports: string[]\n    node_templates: { [name: string]: ModuleSimpleData | NodeSimpleData | PortSimpleData | NetworkSimpleData | SubnetSimpleData }\n    dsl_definition: any | null; //future\n    capabilites: any | null //future\n    outputs: any | null //future\n}\n\n/**\n * Classe che contiene gli attributi che indicano la rappresentazione del modulo per l'export.\n */\nexport class ModuleSimpleData {\n    type: ModuleTypeExport\n    properties: PropertiesMSD\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà del modulo per l'export.\n */\nexport class PropertiesMSD {\n    mode: ModeTypeExport\n    description: string\n    version: string | number\n    constraints: ConstraintsMSD\n    interface_networks: {\n        providers: InterfaceNetworksProvider[]\n        consumers: InterfaceNetworksConsumer[]\n    }\n    virtual_machines: VirtualMachine[]\n}\n/**\n * Classe che contiene gli attributi che indicano i vincoli di connessione del modulo per l'export.\n */\nexport class ConstraintsMSD {\n    interface_constraints: InterfaceConstraints[]\n    module_constraints: ModuleConstraints[]\n    network_constraints: NetworkConstraints[]\n}\n/**\n * Classe che contiene gli attributi che indicano i viconli per le interfacce di connessione del modulo.\n */\nexport class InterfaceConstraints {\n    local_interface: string\n    multiple_mode: boolean = false //future\n    module_name: string\n    compatibility: string = \"1.0\" // future\n    remote_interface: string\n}\n/**\n * Classe che contiene gli attributi che indicano i viconli del modulo.\n */\nexport class ModuleConstraints {\n}\n/**\n * Classe che contiene gli attributi che indicano i viconli dei network del modulo.\n */\nexport class NetworkConstraints {\n}\n/**\n * Classe che contiene gli attributi che indicano le interfacce provider del modulo.\n */\nexport class InterfaceNetworksProvider {\n    interface: string\n    network: string\n    tag: string\n    subnets: SubnetExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano le interfacce consumer del modulo.\n */\nexport class InterfaceNetworksConsumer {\n    interface: string\n    network: string\n    tag: string\n    subnets: SubnetExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano l'insieme di host presenti in un modulo.\n */\nexport class VirtualMachine {\n    virtual_machine: string\n    ports: VirtualMachinePorts[]\n}\n/**\n * Classe che contiene gli attributi che indicano le porte associate ad un host di un modulo.\n */\nexport class VirtualMachinePorts {\n    port: string\n    network: string\n    subnets: SubnetExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano la subnet connessa alla porte dell'host.\n * @see {VirtualMachinePorts}\n */\nexport class SubnetExport {\n    subnet: string;\n}\n\n/**\n * Classe che contiene gli attributi che indica un nodo all'interno dei node_templates.\n * @see {ModuleExport}\n */\nexport class NodeSimpleData {\n    type: NodeTypeExport\n    properties: any | null // future\n    interfaces: any | null // future\n    relationships: RelationshipsExport[]\n}\n\n/**\n * Classe che contiene gli attributi che indicano le relazioni generali.\n */\nexport class RelationshipsExport {\n    type: RelationshipsTypeExport\n    target: string\n}\n/**\n * Classe che contiene gli attributi che indicano i dati della porta all'interno dei node_templates.\n */\nexport class PortSimpleData {\n    type: PortTypeExport\n    relationships: RelationshipsExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano i dati delle network all'interno dei node_templates.\n */\nexport class NetworkSimpleData {\n    type: NetworkTypeExport\n    properties: PropertiesNSD\n}\n/**\n * Classe che contiene gli attributi che indicano le proprietà della network all'interno dei node_templates.\n * @see {NetworkSimpleData}\n */\nexport class PropertiesNSD {\n    openstack_config?: any | null // future\n    use_external_resource?: boolean | null // future\n    resource_id?: any | null // future\n}\n\n/**\n * Classe che contiene gli attributi che indicano i dati delle subnet all'interno dei node_templates.\n */\nexport class SubnetSimpleData {\n    type: SubnetTypeExport\n    relationships: RelationshipsExport[]\n    properties: PropertiesSSD\n}\n/**\n * Classe che contiene gli attributi che indicano le proprietà della subnet all'interno dei node_templates.\n * @see {NetworkSimpleData}\n */\nexport class PropertiesSSD {\n    subnet?: {\n        ip_version: string | number\n        cidr: string\n        enable_dhcp: boolean\n        gateway_ip?: any | null // future\n    }\n    openstack_config?: any | null // future\n    use_external_resource?: boolean | null // future\n    resource_id?: any | null // future\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/ConsumerInterfaceLinkDTO.html":{"url":"classes/ConsumerInterfaceLinkDTO.html","title":"class - ConsumerInterfaceLinkDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  ConsumerInterfaceLinkDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsDTO/moduleDTO.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano le connessioni interfaccia-modulo.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                local_interface\n                            \n                            \n                                module_instance\n                            \n                            \n                                remote_interface\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        local_interface\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:157\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        module_instance\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:158\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remote_interface\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:159\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PageableDTO, SortDTO } from './elementDTO';\nimport { NetworkDTO } from './networkDTO';\nimport { TheaterDTO } from './theaterDTO';\n\n/**\n * Classe che contiene gli attributi che indicano l'insieme dei moduli ritornati dal teatro.\n */\nexport class ModuleListDTO {\n    content: SimpleModuleDTO[]\n    pageable: PageableDTO\n    last: boolean\n    totalPages: string | number\n    totalElements: string | number\n    size: string | number\n    number: string | number\n    sort: SortDTO\n    numberOfElements: string | number\n    first: boolean\n    empty: boolean\n}\n\n/**\n * Classe che contiene gli attributi che indica il catalogo del tipo.\n */\nexport class TypesCatalogueDTO {\n    group: string\n    id: string | number\n    parentId: {}\n    value: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano la classificazione del modulo.\n */\nexport class ModuleClassificationDTO {\n    blueprintType: string\n    category: string\n    expectedInstanceType: string\n    id: string | number\n    mcClass: string\n    type: string\n    uuid: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano un parametro generico.\n */\nexport class GenericParameterDTO {\n    type: string\n    default: string\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano i parametri di configurazione di un modulto.\n */\nexport class ConfigurationTemplateDTO {\n    anchor_parameters: { [name: string]: GenericParameterDTO | string }\n    instance_parameters: { [name: string]: GenericParameterDTO }\n    structural_parameters: { [name: string]: GenericParameterDTO }\n    fixed_parameters: { [name: string]: GenericParameterDTO }\n    control_parameters: { [name: string]: GenericParameterDTO }\n    infrastructure_parameters: { [name: string]: GenericParameterDTO }\n    module: string\n    description: string\n    category: string\n    version: string | number\n    platform: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano la modalità di un modulo.\n */\nexport class ModuleModeDTO {\n    code: string\n    id: string | number\n    name: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano lo stato di un modulo.\n */\nexport class ModuleStatusDTO {\n    descriptionCode: string\n    id: string | number\n    name: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le statitistiche di un modulo.\n */\nexport class StatisticItemDTO {\n    error: string | number\n    updated: string | number\n    inserted: string | number\n}\n\n/**\n * Classe che contiene gli attributi che indicano il modulo (simple - in dipendenza del teatro).\n */\nexport class SimpleModuleDTO {\n    createdBy: string\n    createdDate: string\n    description: string\n    id: string | number\n    isLocked: boolean\n    lastModifiedBy: string\n    lastModifiedDate: string\n    lockAcquiredTimestamp: string\n    lockLastUserAcquiring: string\n    lockReleasedTimestamp: string\n    name: string\n    status: ModuleStatusDTO\n    type?: string | any\n    uuid: string\n    version: string | number\n}\n\n/**\n * Classe che contiene gli attributi che indicano il modulo (complex - ritorato da call appostita).\n * @extends {SimpleModuleDTO}\n */\nexport class ModuleDTO extends SimpleModuleDTO {\n    attachments: string[]\n    author: string\n    capabilities: { [name: string]: string }\n    catalog1: TypesCatalogueDTO\n    catalog2: TypesCatalogueDTO\n    catalog3: TypesCatalogueDTO\n    classification: ModuleClassificationDTO\n    configurationTemplate: ConfigurationTemplateDTO\n    detailProperties: {}\n    input: { [name: string]: string }\n    output: { [name: string]: string }\n    mode: ModuleModeDTO\n    statistics: { [name: string]: StatisticItemDTO | string | number }\n    tags: []\n}\n\n/**\n * Classe che contiene gli attributi che indicano le interfacce esposte da un modulo.\n */\nexport class ModuleNetworkInterfaceDTO {\n    id: string | number\n    label: string\n    module: ModuleDTO\n    network: NetworkDTO\n    nodeName: string\n    type: string\n    uuid: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le connessioni interfaccia-modulo.\n */\nexport class ConsumerInterfaceLinkDTO {\n    local_interface: string\n    module_instance: string\n    remote_interface: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà dell'istanza di un modulo all'interno del node_templates.\n */\nexport class ModuleInstancePropertiesDTO {\n    area: string\n    description: string\n    module: string\n    version: string | number\n    sequence: string | number\n    consumer_interfaces_link: ConsumerInterfaceLinkDTO[]\n}\n\n\n/**\n * Classe che contiene gli attributi che indicano l'area di appartenenza di un modulo (complex).\n */\nexport class AreaDTO {\n    id: string | number;\n    uuid: string;\n    name: string;\n    description: string;\n    theater: TheaterDTO;\n    deleted: boolean | string;\n}\n\n/**\n * Classe che contiene gli attributi che indicano l'area di appartenenza di un modulo (simple).\n */\nexport class SimpleAreaDTO {\n    area: string\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà dell'istanza di un teatro all'interno del node_templates.\n */\nexport class TheaterInstancePropertiesDTO {\n    mode: string\n    tags: TagTIP[]\n    areas: SimpleAreaDTO[]\n    author: string\n    version: string | number\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano un tag.\n */\nexport class TagTIP{\n    tag: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano in via generale le caratteristiche di un elemento che deve essere presente nel node_templates.\n */\nexport class ElementIntoTheaterDTO {  // goes into map in blueprint [name:string]: Module...\n    properties: ModuleInstancePropertiesDTO | TheaterInstancePropertiesDTO\n    type: string\n}\n\n\n/**\n * Classe che contiene gli attributi che indicano le caratteristiche di un teatro presente nel node_templates.\n */\nexport class ModuleInstanceDTO {\n    properties: ModuleInstancePropertiesDTO\n    type: string\n}\n/**\n * Classe che contiene gli attributi che indicano le caratteristiche di un modulo presente nel node_templates.\n */\nexport class TheaterInstanceDTO {\n    properties: TheaterInstancePropertiesDTO\n    type: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/ConsumerInterfaceLinkExport.html":{"url":"classes/ConsumerInterfaceLinkExport.html","title":"class - ConsumerInterfaceLinkExport","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  ConsumerInterfaceLinkExport\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsExport/theaterExport.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano i collegamenti e relazioni intramodulo con le varie interfacce.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                local_interface\n                            \n                            \n                                module_interface\n                            \n                            \n                                remote_interface\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        local_interface\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/theaterExport.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        module_interface\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/theaterExport.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remote_interface\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/theaterExport.ts:79\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ModeTypeExport, ModuleTypeExport, TheaterTypeExport, ToscaDefinitionType } from \"./TypeExport\"\n\n/**\n * Classe utilizzata per l'export. \n * Contiene le informazioni generali per il teatro che devono esserci nello standard Tosca.\n */\nexport class TheaterExport {\n    tosca_definitions_version: ToscaDefinitionType\n    description: string\n    imports: string[]\n    node_templates: { [name: string]: TheaterSimpleData | ModuleInstanceSimpleData }\n}\n/**\n * Classe che contiene gli attributi che indicano il teatro all'interno dei node_templates.\n */\nexport class TheaterSimpleData {\n    type: TheaterTypeExport\n    properties: PropertiesTSD\n}\n/**\n * Classe che contiene gli attributi che indicano le proprietà del teatro.\n */\nexport class PropertiesTSD {\n    version: string | number\n    description: string\n    mode: ModeTypeExport\n    author: string\n    tags: TagsExport[]\n    areas: AreaExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano i tag nelle proprietà del teatro.\n * @see {PropertiesTSD}\n */\nexport class TagsExport {\n    tag: string\n}\n/**\n * Classe che contiene gli attributi che indicano le aree nelle proprietà del teatr.\n * @see {PropertiesTSD}\n */\nexport class AreaExport {\n    area: string\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano il modulo all'interno dei node_modules.\n */\nexport class ModuleInstanceSimpleData {\n    type: ModuleTypeExport\n    properties: PropertiesMISD\n}\n/**\n * Classe che contiene gli attributi che indicano le propeitò del modulo all'interno dei node_templates.\n */\nexport class PropertiesMISD{\n    module: string\n    version: string | number\n    area: string\n    sequence: number\n    sources?: SourceExport[]\n    consumer_interface_link: ConsumerInterfaceLinkExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano le porte di ingresso del modulo all'interno dei node_templates.\n */\nexport class SourceExport{\n    module_instance: string\n    host:string\n    interfaces: string[]\n}\n/**\n * Classe che contiene gli attributi che indicano i collegamenti e relazioni intramodulo con le varie interfacce.\n */\nexport class ConsumerInterfaceLinkExport{\n    local_interface: string\n    module_interface:string\n    remote_interface:string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"components/ControlTemplate.html":{"url":"components/ControlTemplate.html","title":"component - ControlTemplate","body":"\n                   \n\n\n\n\n\n  Componenti\n  \n  ControlTemplate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/rete-settings/controls/control.ts\n\n\n\n    \n        Descrizione\n    \n    \n        Componente che si occpa del control per i nodi la libreria retejs\n\n    \n\n\n\n\n\n    Metadati\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                styleUrls\n                ./control.css\n            \n\n\n\n            \n                templateUrl\n                ./control.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Indice\n    \n        \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Input\n                    \n                \n                \n                    \n                        \n                            \n                                change\n                            \n                            \n                                mounted\n                            \n                            \n                                readonly\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Input\n        \n            \n                \n                    \n                        \n                        change\n                    \n                \n                \n                    \n                        Tipo :         Function\n\n                    \n                \n                        \n                            \n                                    Definito in src/app/rete-settings/controls/control.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mounted\n                    \n                \n                \n                    \n                        Tipo :         Function\n\n                    \n                \n                        \n                            \n                                    Definito in src/app/rete-settings/controls/control.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        readonly\n                    \n                \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                        \n                            \n                                    Definito in src/app/rete-settings/controls/control.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Tipo :         number\n\n                    \n                \n                        \n                            \n                                    Definito in src/app/rete-settings/controls/control.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/controls/control.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Type } from '@angular/core';\nimport { Control, NodeEditor } from 'rete';\nimport { AngularControl } from 'rete-angular-render-plugin';\n\n\n/**\n * Componente che si occpa del control per i nodi la libreria retejs\n */\n@Component({\n  templateUrl: './control.html',\n  styleUrls:  ['./control.css'],\n})\nexport class ControlTemplate {\n\n  @Input() value!: number;\n  @Input() readonly!: boolean;\n  @Input() change!: Function;\n  @Input() mounted!: Function;\n\n  ngOnInit() {\n    this.mounted();\n  }\n}\n\n\n/**\n * Elemento indica il control da utilizzare dai vari tipi di nodi/moduli \n */\nexport class _Control extends Control implements AngularControl {\n  \n  component: Type\n  props: { [key: string]: unknown }\n\n  constructor(public emitter: NodeEditor, public key: string, readonly = false) {\n    \n    super(key);\n\n    this.component = ControlTemplate;\n    this.props = {\n      readonly,\n      change: (v: undefined) => this.onChange(v),\n      value: 0,\n      mounted: () => {\n        this.setValue(+(this.getData(key) as any) || 0)\n      },\n  };\n    \n  }\n\n  onChange(val: number) {\n    this.setValue(val);\n    this.emitter.trigger('process');\n  }\n\n  setValue(val: number) {\n    this.props.value = +val;\n    this.putData(this.key, this.props.value)\n  }\n\n}\n\n    \n\n    \n        \n    \n\n    \n                \n                    ./control.css\n                \n                input {\n    border-radius: 30px;\n    background-color: white;\n    padding: 2px 6px;\n    border: 1px solid #999;\n    font-size: 110%;\n    width: 140px;\n    box-sizing: border-box;\n  }\n    \n\n    \n        \n        \n            \n                Legenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento html con direttive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ComposerComponent', 'selector': 'app-composer'},{'name': 'ControlTemplate', 'selector': ''},{'name': 'DataInputComponent', 'selector': 'app-data-input'},{'name': 'DataInputV2Component', 'selector': 'app-data-input-v2'},{'name': 'DataItemComponent', 'selector': 'app-window-item'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HostComponent', 'selector': ''},{'name': 'HowToUseComponent', 'selector': 'app-how-to-use'},{'name': 'MirroringModuleInstanceComponent', 'selector': ''},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavbarElementComponent', 'selector': 'app-navbar-element'},{'name': 'NetworkComponent', 'selector': ''},{'name': 'OffcanvasComponent', 'selector': 'app-offcanvas'},{'name': 'ReteModuleComposerComponent', 'selector': 'app-rete-module-composer'},{'name': 'ReteModuleVisualizerComponent', 'selector': 'app-rete-module-visualizer'},{'name': 'ReteTheaterComposerComponent', 'selector': 'app-rete-theater-composer'},{'name': 'ReteTheaterVisualizerComponent', 'selector': 'app-rete-theater-visualizer'},{'name': 'SubnetComponent', 'selector': ''},{'name': 'TabnavComponent', 'selector': 'app-tabnav'},{'name': 'TheaterInternalServiceModuleInstanceComponent', 'selector': ''},{'name': 'TheaterModuleInstanceComponent', 'selector': ''},{'name': 'UnderbarComponent', 'selector': 'app-underbar'},{'name': 'VisualizerComponent', 'selector': 'app-displayer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ControlTemplate'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/DataInput.html":{"url":"classes/DataInput.html","title":"class - DataInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  DataInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/data-input/dataInputType.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Tipo di dato Input contenente variabili generali.\nSee {DataInputComponet}\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                    Opzionale\n                                data_appended\n                            \n                            \n                                    Opzionale\n                                data_prepended\n                            \n                            \n                                id\n                            \n                            \n                                required\n                            \n                            \n                                    Opzionale\n                                text\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        data_appended\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/data-input/dataInputType.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        data_prepended\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/data-input/dataInputType.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/data-input/dataInputType.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        required\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/data-input/dataInputType.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        text\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/data-input/dataInputType.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     \"textarea\" | \"text\" | \"selection\" | \"checkbox\"\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/data-input/dataInputType.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class DataInputElement{\n    element: Array;\n}\n\n/**\n * Tipo di dato Input contenente variabili generali.\n * @see {DataInputComponet}\n */\nexport class DataInput{\n    id: string;\n    text?: string;\n    type: \"textarea\" | \"text\" | \"selection\" | \"checkbox\";\n    data_prepended?: string;\n    data_appended?: string;\n    required: boolean;\n}\n/**\n * Tipo input text base/area.\n * Estende DataInput.\n  * @see {DataInputComponet}\n */\nexport class DataInputText extends DataInput{\n    placeholder?: string;\n}\n/**\n * Tipo input selection.\n * Estende DataInput.\n  * @see {DataInputComponet}\n */\nexport class DataInputSelection extends DataInput{\n    multiple?: boolean;\n    selected_number: number;\n    selection: SelectOption[];\n}\n/**\n * Tipo input check (toggle).\n * Estende DataInput.\n * @see {DataInputComponet}\n */\nexport class DataInputCheck  extends DataInput{\n    checked?: boolean;\n}\n\n/**\n * Tipo usato per le selezioni (multiselect option).\n  * @see {DataInputComponet}\n */\nexport class SelectOption{\n    value: string;\n    text: string;\n    other?: any;\n}\n\n/**\n * Tipo di ritorno della componente DataInputReturned.\n  * @see {DataInputComponet}\n */\nexport class DataInputReturned{\n    element: { [key:string]: SingleDataInputReturned};\n    isValid: boolean;\n    exitStatus?: 'submitted' | 'cancel' | 'error';\n}\n/**\n * Singolo elemento dato in ritorno al submit.\n  * @see {DataInputComponet}\n */\nexport class SingleDataInputReturned{\n    id: string;\n    text: string;\n    type: string;\n    value: any;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/DataInputCheck.html":{"url":"classes/DataInputCheck.html","title":"class - DataInputCheck","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  DataInputCheck\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/data-input/dataInputType.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Tipo input check (toggle).\nEstende DataInput.\nSee {DataInputComponet}\n\n            \n\n            \n                Extends\n            \n            \n                        DataInput\n            \n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                    Opzionale\n                                checked\n                            \n                            \n                                    Opzionale\n                                data_appended\n                            \n                            \n                                    Opzionale\n                                data_prepended\n                            \n                            \n                                id\n                            \n                            \n                                required\n                            \n                            \n                                    Opzionale\n                                text\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        checked\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/data-input/dataInputType.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        data_appended\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         DataInput\n\n                            \n                        \n                    \n                        \n                                Definito in         DataInput:18\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        data_prepended\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         DataInput\n\n                            \n                        \n                    \n                        \n                                Definito in         DataInput:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         DataInput\n\n                            \n                        \n                    \n                        \n                                Definito in         DataInput:14\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        required\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                        \n                            \n                                ereditato da         DataInput\n\n                            \n                        \n                    \n                        \n                                Definito in         DataInput:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        text\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         DataInput\n\n                            \n                        \n                    \n                        \n                                Definito in         DataInput:15\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     \"textarea\" | \"text\" | \"selection\" | \"checkbox\"\n\n                    \n                \n                        \n                            \n                                ereditato da         DataInput\n\n                            \n                        \n                    \n                        \n                                Definito in         DataInput:16\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class DataInputElement{\n    element: Array;\n}\n\n/**\n * Tipo di dato Input contenente variabili generali.\n * @see {DataInputComponet}\n */\nexport class DataInput{\n    id: string;\n    text?: string;\n    type: \"textarea\" | \"text\" | \"selection\" | \"checkbox\";\n    data_prepended?: string;\n    data_appended?: string;\n    required: boolean;\n}\n/**\n * Tipo input text base/area.\n * Estende DataInput.\n  * @see {DataInputComponet}\n */\nexport class DataInputText extends DataInput{\n    placeholder?: string;\n}\n/**\n * Tipo input selection.\n * Estende DataInput.\n  * @see {DataInputComponet}\n */\nexport class DataInputSelection extends DataInput{\n    multiple?: boolean;\n    selected_number: number;\n    selection: SelectOption[];\n}\n/**\n * Tipo input check (toggle).\n * Estende DataInput.\n * @see {DataInputComponet}\n */\nexport class DataInputCheck  extends DataInput{\n    checked?: boolean;\n}\n\n/**\n * Tipo usato per le selezioni (multiselect option).\n  * @see {DataInputComponet}\n */\nexport class SelectOption{\n    value: string;\n    text: string;\n    other?: any;\n}\n\n/**\n * Tipo di ritorno della componente DataInputReturned.\n  * @see {DataInputComponet}\n */\nexport class DataInputReturned{\n    element: { [key:string]: SingleDataInputReturned};\n    isValid: boolean;\n    exitStatus?: 'submitted' | 'cancel' | 'error';\n}\n/**\n * Singolo elemento dato in ritorno al submit.\n  * @see {DataInputComponet}\n */\nexport class SingleDataInputReturned{\n    id: string;\n    text: string;\n    type: string;\n    value: any;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"components/DataInputComponent.html":{"url":"components/DataInputComponent.html","title":"component - DataInputComponent","body":"\n                   \n\n\n\n\n\n  Componenti\n  \n  DataInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/data-input/data-input.component.ts\n\n\n\n    \n        Descrizione\n    \n    \n        Componente usata per renderizzare e gestire in modo automatico diversi elementi di input attraverso form.\nAttualmente disponibili sono: text, textarea, (multi)selection e checkbox.\n\n    \n\n\n    \n        Implementa\n    \n    \n                    OnInit\n    \n\n\n\n    Metadati\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-data-input\n            \n\n            \n                styleUrls\n                ./data-input.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./data-input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                dataForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                exit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                returnOutput\n                            \n                            \n                                save\n                            \n                        \n                    \n                \n\n                \n                    \n                        Input\n                    \n                \n                \n                    \n                        \n                            \n                                element\n                            \n                        \n                    \n                \n\n                \n                    \n                        Output\n                    \n                \n                \n                    \n                        \n                            \n                                dataSubmitted\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Costruttore\n        \n            \n                \n                    \nconstructor(cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Definito in src/app/components/data-input/data-input.component.ts:33\n                            \n                        \n\n                \n                    \n                            Costruttore di DataInputComponent.\n\n                            \n                                    Parametri :\n                                    \n                                        \n                                            \n                                                Nome\n                                                    Tipo\n                                                Opzionale\n                                            \n                                        \n                                        \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Input\n        \n            \n                \n                    \n                        \n                        element\n                    \n                \n                \n                    \n                        Tipo :         DataInputElement\n\n                    \n                \n                        \n                            \n                                    Definito in src/app/components/data-input/data-input.component.ts:21\n                            \n                        \n                \n                    \n                        Variabile dato in input per essere processato.\n\n                    \n                \n            \n        \n\n    \n    Output\n        \n            \n                \n                    \n                        \n                        dataSubmitted\n                    \n                \n                \n                    \n                        Tipo :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Definito in src/app/components/data-input/data-input.component.ts:27\n                            \n                        \n                \n                    \n                        Variabile ritornata in output.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        exit\n                        \n                    \n                \n            \n            \n                \nexit()\n                \n            \n\n\n            \n                \n                    Definito in src/app/components/data-input/data-input.component.ts:85\n                \n            \n\n\n            \n                \n                    Funzione usata per annullare l'operazione di convalida di risultato.\nSee {returnOutput}\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Definito in src/app/components/data-input/data-input.component.ts:48\n                \n            \n\n\n            \n                \n                    Funzione chiamata quando la componente viene inizializzata.\nEsegue controlli e inizializzazioni dei Form element e Form control.\nSee {dataForm}\nSee {FormGroup}\nSee {FormControl}\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        returnOutput\n                        \n                    \n                \n            \n            \n                \nreturnOutput(val: DataInputReturned)\n                \n            \n\n\n            \n                \n                    Definito in src/app/components/data-input/data-input.component.ts:99\n                \n            \n\n\n            \n                \n                    Funzione usata per emettere il valore processato dalla exit() oppure dalla save().\nSee {dataSubmitted}\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                DataInputReturned\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        save\n                        \n                    \n                \n            \n            \n                \nsave()\n                \n            \n\n\n            \n                \n                    Definito in src/app/components/data-input/data-input.component.ts:62\n                \n            \n\n\n            \n                \n                    Funzione usata per elaborare gli elementi della form.\nSee {returnOutput}\nSee {SingleDataInputReturned}\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        dataForm\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         FormGroup\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/data-input/data-input.component.ts:33\n                        \n                    \n\n            \n                \n                    Variabile usata per le operazione form.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output, OnInit, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { DataInputElement, DataInputReturned, SingleDataInputReturned } from './dataInputType';\n\n/**\n * Componente usata per renderizzare e gestire in modo automatico diversi elementi di input attraverso form.\n * Attualmente disponibili sono: text, textarea, (multi)selection e checkbox.  \n */\n@Component({\n  selector: 'app-data-input',\n  templateUrl: './data-input.component.html',\n  styleUrls: ['./data-input.component.sass'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DataInputComponent implements OnInit {\n\n  /**\n   * Variabile dato in input per essere processato.\n   * @type {DataInputElement}\n   */\n  @Input() element: DataInputElement;\n  \n  /**\n   * Variabile ritornata in output.\n   * @type {EventEmitter}\n   */\n  @Output() dataSubmitted = new EventEmitter();\n\n  /**\n   * Variabile usata per le operazione form.\n   * @type {FormGroup}\n   */\n  protected dataForm: FormGroup;\n\n  /**\n   * Costruttore di DataInputComponent.\n   */\n  constructor(private cdr: ChangeDetectorRef) {\n  }\n\n  /**\n   * Funzione chiamata quando la componente viene inizializzata.\n   * Esegue controlli e inizializzazioni dei Form element e Form control.\n   * @see {dataForm}\n   * @see {FormGroup}\n   * @see {FormControl}\n   */\n  ngOnInit(): void {\n    this.dataForm = new FormGroup({});\n    this.element.element.forEach(e => {\n      e.required\n        ? this.dataForm.addControl(e.id, new FormControl('', Validators.required))\n        : this.dataForm.addControl(e.id, new FormControl())\n    })\n  }\n\n  /**\n   * Funzione usata per elaborare gli elementi della form.\n   * @see {returnOutput}\n   * @see {SingleDataInputReturned}\n   */\n  save() {\n    let values: { [key: string]: SingleDataInputReturned } = {};\n    this.element.element.forEach(\n      (el) => {\n        let val: HTMLInputElement = document.getElementById(el.id) as HTMLInputElement;\n        if (el.type === 'checkbox')\n          values[el.id] = { id: el.id, text: el.text, type: el.type, value: val.checked };\n        else\n          values[el.id] = { id: el.id, text: el.text, type: el.type, value: val ? val.value : undefined };\n      }\n    )\n    let event: DataInputReturned = {\n      element: values,\n      isValid: true,\n      exitStatus: 'submitted'\n    }\n    this.returnOutput(event);\n  }\n\n  /**\n   * Funzione usata per annullare l'operazione di convalida di risultato.\n   * @see {returnOutput}\n   */\n  exit() {\n    let event: DataInputReturned = {\n      element: {},\n      isValid: false,\n      exitStatus: 'cancel'\n    }\n    this.returnOutput(event);\n  }\n\n  /**\n   * Funzione usata per emettere il valore processato dalla exit() oppure dalla save().\n   * @param val \n   * @see {dataSubmitted}\n   */\n  returnOutput(val: DataInputReturned) {\n    this.dataSubmitted.emit(val);\n    this.cdr.detectChanges();\n  }\n\n\n}\n\n    \n\n    \n        \n    \n        \n            \n                 - {{item.text}} \n            \n            \n                \n                \n                     {{item.data_prepended}} \n                \n                \n                \n                \n                    \n                    \n                \n                \n                    \n                \n                \n                \n                    \n                        \n                            {{opt.text}}\n                        \n                    \n                     No selectable list found \n                \n                \n                \n                    \n                        \n                        {{item.text}}\n                    \n                \n                \n                \n                     {{item.data_appended}} \n                \n            \n        \n        \n            \n                Submit\n            \n            \n                Cancel\n            \n        \n    \n\n    \n\n    \n                \n                    ./data-input.component.sass\n                \n                \n    \n\n    \n        \n        \n            \n                Legenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento html con direttive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                         - {{item.text}}                                                                              {{item.data_prepended}}                                                                                                                                                                                                                                                                                     {{opt.text}}                                                                 No selectable list found                                                                                                                     {{item.text}}                                                                                         {{item.data_appended}}                                                                         Submit                                        Cancel                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ComposerComponent', 'selector': 'app-composer'},{'name': 'ControlTemplate', 'selector': ''},{'name': 'DataInputComponent', 'selector': 'app-data-input'},{'name': 'DataInputV2Component', 'selector': 'app-data-input-v2'},{'name': 'DataItemComponent', 'selector': 'app-window-item'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HostComponent', 'selector': ''},{'name': 'HowToUseComponent', 'selector': 'app-how-to-use'},{'name': 'MirroringModuleInstanceComponent', 'selector': ''},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavbarElementComponent', 'selector': 'app-navbar-element'},{'name': 'NetworkComponent', 'selector': ''},{'name': 'OffcanvasComponent', 'selector': 'app-offcanvas'},{'name': 'ReteModuleComposerComponent', 'selector': 'app-rete-module-composer'},{'name': 'ReteModuleVisualizerComponent', 'selector': 'app-rete-module-visualizer'},{'name': 'ReteTheaterComposerComponent', 'selector': 'app-rete-theater-composer'},{'name': 'ReteTheaterVisualizerComponent', 'selector': 'app-rete-theater-visualizer'},{'name': 'SubnetComponent', 'selector': ''},{'name': 'TabnavComponent', 'selector': 'app-tabnav'},{'name': 'TheaterInternalServiceModuleInstanceComponent', 'selector': ''},{'name': 'TheaterModuleInstanceComponent', 'selector': ''},{'name': 'UnderbarComponent', 'selector': 'app-underbar'},{'name': 'VisualizerComponent', 'selector': 'app-displayer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DataInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/DataInputElement.html":{"url":"classes/DataInputElement.html","title":"class - DataInputElement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  DataInputElement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/data-input/dataInputType.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Tipo di dato passato alla componente DataInput\nSee {DataInputComponet}\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                element\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        element\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     Array\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/data-input/dataInputType.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class DataInputElement{\n    element: Array;\n}\n\n/**\n * Tipo di dato Input contenente variabili generali.\n * @see {DataInputComponet}\n */\nexport class DataInput{\n    id: string;\n    text?: string;\n    type: \"textarea\" | \"text\" | \"selection\" | \"checkbox\";\n    data_prepended?: string;\n    data_appended?: string;\n    required: boolean;\n}\n/**\n * Tipo input text base/area.\n * Estende DataInput.\n  * @see {DataInputComponet}\n */\nexport class DataInputText extends DataInput{\n    placeholder?: string;\n}\n/**\n * Tipo input selection.\n * Estende DataInput.\n  * @see {DataInputComponet}\n */\nexport class DataInputSelection extends DataInput{\n    multiple?: boolean;\n    selected_number: number;\n    selection: SelectOption[];\n}\n/**\n * Tipo input check (toggle).\n * Estende DataInput.\n * @see {DataInputComponet}\n */\nexport class DataInputCheck  extends DataInput{\n    checked?: boolean;\n}\n\n/**\n * Tipo usato per le selezioni (multiselect option).\n  * @see {DataInputComponet}\n */\nexport class SelectOption{\n    value: string;\n    text: string;\n    other?: any;\n}\n\n/**\n * Tipo di ritorno della componente DataInputReturned.\n  * @see {DataInputComponet}\n */\nexport class DataInputReturned{\n    element: { [key:string]: SingleDataInputReturned};\n    isValid: boolean;\n    exitStatus?: 'submitted' | 'cancel' | 'error';\n}\n/**\n * Singolo elemento dato in ritorno al submit.\n  * @see {DataInputComponet}\n */\nexport class SingleDataInputReturned{\n    id: string;\n    text: string;\n    type: string;\n    value: any;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/DataInputReturned.html":{"url":"classes/DataInputReturned.html","title":"class - DataInputReturned","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  DataInputReturned\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/data-input/dataInputType.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Tipo di ritorno della componente DataInputReturned.\nSee {DataInputComponet}\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                element\n                            \n                            \n                                    Opzionale\n                                exitStatus\n                            \n                            \n                                isValid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        element\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     literal type\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/data-input/dataInputType.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        exitStatus\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     \"submitted\" | \"cancel\" | \"error\"\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/data-input/dataInputType.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isValid\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/data-input/dataInputType.ts:64\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class DataInputElement{\n    element: Array;\n}\n\n/**\n * Tipo di dato Input contenente variabili generali.\n * @see {DataInputComponet}\n */\nexport class DataInput{\n    id: string;\n    text?: string;\n    type: \"textarea\" | \"text\" | \"selection\" | \"checkbox\";\n    data_prepended?: string;\n    data_appended?: string;\n    required: boolean;\n}\n/**\n * Tipo input text base/area.\n * Estende DataInput.\n  * @see {DataInputComponet}\n */\nexport class DataInputText extends DataInput{\n    placeholder?: string;\n}\n/**\n * Tipo input selection.\n * Estende DataInput.\n  * @see {DataInputComponet}\n */\nexport class DataInputSelection extends DataInput{\n    multiple?: boolean;\n    selected_number: number;\n    selection: SelectOption[];\n}\n/**\n * Tipo input check (toggle).\n * Estende DataInput.\n * @see {DataInputComponet}\n */\nexport class DataInputCheck  extends DataInput{\n    checked?: boolean;\n}\n\n/**\n * Tipo usato per le selezioni (multiselect option).\n  * @see {DataInputComponet}\n */\nexport class SelectOption{\n    value: string;\n    text: string;\n    other?: any;\n}\n\n/**\n * Tipo di ritorno della componente DataInputReturned.\n  * @see {DataInputComponet}\n */\nexport class DataInputReturned{\n    element: { [key:string]: SingleDataInputReturned};\n    isValid: boolean;\n    exitStatus?: 'submitted' | 'cancel' | 'error';\n}\n/**\n * Singolo elemento dato in ritorno al submit.\n  * @see {DataInputComponet}\n */\nexport class SingleDataInputReturned{\n    id: string;\n    text: string;\n    type: string;\n    value: any;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/DataInputReturnedV2.html":{"url":"classes/DataInputReturnedV2.html","title":"class - DataInputReturnedV2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  DataInputReturnedV2\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/data-input-v2/dataInputTypeV2.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Tipo di ritorno della componente DataInputV2\nSee {DataInputV2Componet}\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                key\n                            \n                            \n                                new_value\n                            \n                            \n                                old_value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/data-input-v2/dataInputTypeV2.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        new_value\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         any\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/data-input-v2/dataInputTypeV2.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        old_value\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         any\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/data-input-v2/dataInputTypeV2.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class DataInputReturnedV2{\n    key: string;\n    old_value: any;\n    new_value: any;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/DataInputSelection.html":{"url":"classes/DataInputSelection.html","title":"class - DataInputSelection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  DataInputSelection\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/data-input/dataInputType.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Tipo input selection.\nEstende DataInput.\nSee {DataInputComponet}\n\n            \n\n            \n                Extends\n            \n            \n                        DataInput\n            \n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                    Opzionale\n                                multiple\n                            \n                            \n                                selected_number\n                            \n                            \n                                selection\n                            \n                            \n                                    Opzionale\n                                data_appended\n                            \n                            \n                                    Opzionale\n                                data_prepended\n                            \n                            \n                                id\n                            \n                            \n                                required\n                            \n                            \n                                    Opzionale\n                                text\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        multiple\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/data-input/dataInputType.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selected_number\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/data-input/dataInputType.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selection\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         SelectOption[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/data-input/dataInputType.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        data_appended\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         DataInput\n\n                            \n                        \n                    \n                        \n                                Definito in         DataInput:18\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        data_prepended\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         DataInput\n\n                            \n                        \n                    \n                        \n                                Definito in         DataInput:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         DataInput\n\n                            \n                        \n                    \n                        \n                                Definito in         DataInput:14\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        required\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                        \n                            \n                                ereditato da         DataInput\n\n                            \n                        \n                    \n                        \n                                Definito in         DataInput:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        text\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         DataInput\n\n                            \n                        \n                    \n                        \n                                Definito in         DataInput:15\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     \"textarea\" | \"text\" | \"selection\" | \"checkbox\"\n\n                    \n                \n                        \n                            \n                                ereditato da         DataInput\n\n                            \n                        \n                    \n                        \n                                Definito in         DataInput:16\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class DataInputElement{\n    element: Array;\n}\n\n/**\n * Tipo di dato Input contenente variabili generali.\n * @see {DataInputComponet}\n */\nexport class DataInput{\n    id: string;\n    text?: string;\n    type: \"textarea\" | \"text\" | \"selection\" | \"checkbox\";\n    data_prepended?: string;\n    data_appended?: string;\n    required: boolean;\n}\n/**\n * Tipo input text base/area.\n * Estende DataInput.\n  * @see {DataInputComponet}\n */\nexport class DataInputText extends DataInput{\n    placeholder?: string;\n}\n/**\n * Tipo input selection.\n * Estende DataInput.\n  * @see {DataInputComponet}\n */\nexport class DataInputSelection extends DataInput{\n    multiple?: boolean;\n    selected_number: number;\n    selection: SelectOption[];\n}\n/**\n * Tipo input check (toggle).\n * Estende DataInput.\n * @see {DataInputComponet}\n */\nexport class DataInputCheck  extends DataInput{\n    checked?: boolean;\n}\n\n/**\n * Tipo usato per le selezioni (multiselect option).\n  * @see {DataInputComponet}\n */\nexport class SelectOption{\n    value: string;\n    text: string;\n    other?: any;\n}\n\n/**\n * Tipo di ritorno della componente DataInputReturned.\n  * @see {DataInputComponet}\n */\nexport class DataInputReturned{\n    element: { [key:string]: SingleDataInputReturned};\n    isValid: boolean;\n    exitStatus?: 'submitted' | 'cancel' | 'error';\n}\n/**\n * Singolo elemento dato in ritorno al submit.\n  * @see {DataInputComponet}\n */\nexport class SingleDataInputReturned{\n    id: string;\n    text: string;\n    type: string;\n    value: any;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/DataInputText.html":{"url":"classes/DataInputText.html","title":"class - DataInputText","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  DataInputText\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/data-input/dataInputType.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Tipo input text base/area.\nEstende DataInput.\nSee {DataInputComponet}\n\n            \n\n            \n                Extends\n            \n            \n                        DataInput\n            \n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                    Opzionale\n                                placeholder\n                            \n                            \n                                    Opzionale\n                                data_appended\n                            \n                            \n                                    Opzionale\n                                data_prepended\n                            \n                            \n                                id\n                            \n                            \n                                required\n                            \n                            \n                                    Opzionale\n                                text\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        placeholder\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/data-input/dataInputType.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        data_appended\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         DataInput\n\n                            \n                        \n                    \n                        \n                                Definito in         DataInput:18\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        data_prepended\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         DataInput\n\n                            \n                        \n                    \n                        \n                                Definito in         DataInput:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         DataInput\n\n                            \n                        \n                    \n                        \n                                Definito in         DataInput:14\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        required\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                        \n                            \n                                ereditato da         DataInput\n\n                            \n                        \n                    \n                        \n                                Definito in         DataInput:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        text\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         DataInput\n\n                            \n                        \n                    \n                        \n                                Definito in         DataInput:15\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     \"textarea\" | \"text\" | \"selection\" | \"checkbox\"\n\n                    \n                \n                        \n                            \n                                ereditato da         DataInput\n\n                            \n                        \n                    \n                        \n                                Definito in         DataInput:16\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class DataInputElement{\n    element: Array;\n}\n\n/**\n * Tipo di dato Input contenente variabili generali.\n * @see {DataInputComponet}\n */\nexport class DataInput{\n    id: string;\n    text?: string;\n    type: \"textarea\" | \"text\" | \"selection\" | \"checkbox\";\n    data_prepended?: string;\n    data_appended?: string;\n    required: boolean;\n}\n/**\n * Tipo input text base/area.\n * Estende DataInput.\n  * @see {DataInputComponet}\n */\nexport class DataInputText extends DataInput{\n    placeholder?: string;\n}\n/**\n * Tipo input selection.\n * Estende DataInput.\n  * @see {DataInputComponet}\n */\nexport class DataInputSelection extends DataInput{\n    multiple?: boolean;\n    selected_number: number;\n    selection: SelectOption[];\n}\n/**\n * Tipo input check (toggle).\n * Estende DataInput.\n * @see {DataInputComponet}\n */\nexport class DataInputCheck  extends DataInput{\n    checked?: boolean;\n}\n\n/**\n * Tipo usato per le selezioni (multiselect option).\n  * @see {DataInputComponet}\n */\nexport class SelectOption{\n    value: string;\n    text: string;\n    other?: any;\n}\n\n/**\n * Tipo di ritorno della componente DataInputReturned.\n  * @see {DataInputComponet}\n */\nexport class DataInputReturned{\n    element: { [key:string]: SingleDataInputReturned};\n    isValid: boolean;\n    exitStatus?: 'submitted' | 'cancel' | 'error';\n}\n/**\n * Singolo elemento dato in ritorno al submit.\n  * @see {DataInputComponet}\n */\nexport class SingleDataInputReturned{\n    id: string;\n    text: string;\n    type: string;\n    value: any;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"components/DataInputV2Component.html":{"url":"components/DataInputV2Component.html","title":"component - DataInputV2Component","body":"\n                   \n\n\n\n\n\n  Componenti\n  \n  DataInputV2Component\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/data-input-v2/data-input-v2.component.ts\n\n\n\n    \n        Descrizione\n    \n    \n        Componente usata per mostrare il valore di un determinato elemento.\nAttraverso un click, è possibile visualizzare un form di modifica in place.\nI form attualmente disponibili sono: text, textarea, (multi)selection e checkbox.\n\n    \n\n\n    \n        Implementa\n    \n    \n                    OnInit\n    \n\n\n\n    Metadati\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-data-input-v2\n            \n\n            \n                styleUrls\n                ./data-input-v2.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./data-input-v2.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _value\n                            \n                            \n                                    Protected\n                                dataInputElement\n                            \n                            \n                                    Protected\n                                isUpdateTime\n                            \n                        \n                    \n                \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                dataInputReturned\n                            \n                            \n                                getCheckbox\n                            \n                            \n                                getSelection\n                            \n                            \n                                getText\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                updateTime\n                            \n                        \n                    \n                \n\n                \n                    \n                        Input\n                    \n                \n                \n                    \n                        \n                            \n                                checked\n                            \n                            \n                                directChange\n                            \n                            \n                                formType\n                            \n                            \n                                idForChanges\n                            \n                            \n                                required\n                            \n                            \n                                selectOption\n                            \n                            \n                                title\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Output\n                    \n                \n                \n                    \n                        \n                            \n                                onChange\n                            \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessori\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Costruttore\n        \n            \n                \n                    \nconstructor(cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Definito in src/app/components/data-input-v2/data-input-v2.component.ts:94\n                            \n                        \n\n                \n                    \n                            Costruttore di DataInputV2Component.\n\n                            \n                                    Parametri :\n                                    \n                                        \n                                            \n                                                Nome\n                                                    Tipo\n                                                Opzionale\n                                            \n                                        \n                                        \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Input\n        \n            \n                \n                    \n                        \n                        checked\n                    \n                \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                        \n                            \n                                    Definito in src/app/components/data-input-v2/data-input-v2.component.ts:82\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        directChange\n                    \n                \n                \n                    \n                        Tipo :     \"function\" | \"direct\"\n\n                    \n                \n                        \n                            \n                                    Definito in src/app/components/data-input-v2/data-input-v2.component.ts:62\n                            \n                        \n                \n                    \n                        Varibile (opzionale) data in input che serve per il comportamento della componente.\nEssa può essere:\nLa funzione di base predilige un comportamento su \"direct\".\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        formType\n                    \n                \n                \n                    \n                        Tipo :     \"textarea\" | \"text\" | \"selection\" | \"checkbox\"\n\n                    \n                \n                        \n                            \n                                    Definito in src/app/components/data-input-v2/data-input-v2.component.ts:78\n                            \n                        \n                \n                    \n                        Variabile data in input che serve per capire che tipo di elemento sta trattando.\nNel caso di modifiche si provvederà a renderizzare la giusta scelta.\nEssa può essere:\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        idForChanges\n                    \n                \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                    Definito in src/app/components/data-input-v2/data-input-v2.component.ts:54\n                            \n                        \n                \n                    \n                        Varibile (opzionale) data in input per assegnare un \"riconoscimento\" all'elemento di ritorno.\nSee {DataInputReturnedV2} per il campo \"key\".\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                        \n                            \n                                    Definito in src/app/components/data-input-v2/data-input-v2.component.ts:83\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selectOption\n                    \n                \n                \n                    \n                        Tipo :         SelectOption[]\n\n                    \n                \n                        \n                            \n                                    Definito in src/app/components/data-input-v2/data-input-v2.component.ts:81\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                    Definito in src/app/components/data-input-v2/data-input-v2.component.ts:68\n                            \n                        \n                \n                    \n                        Variabile data in input che serve per dare un titolo all'elemento\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Tipo :         any\n\n                    \n                \n                        \n                            \n                                    Definito in src/app/components/data-input-v2/data-input-v2.component.ts:30\n                            \n                        \n                \n                    \n                        Variabile (set) in input che rappresenta il valore attuale dell'elemento passato.\nQuesta variabile predispone di determinate operazioni prima di eseguire l'effettivo salvataggio del valore.\nIn particolare controlla se emettere o meno il cambiamento della variabile in modo diretto o indiretto\nSee {directChange}\nSee {_value}\n\n                    \n                \n            \n        \n\n    \n    Output\n        \n            \n                \n                    \n                        \n                        onChange\n                    \n                \n                \n                    \n                        Tipo :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Definito in src/app/components/data-input-v2/data-input-v2.component.ts:46\n                            \n                        \n                \n                    \n                        Attributo ritornato in output.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Tipo :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Definito in src/app/components/data-input-v2/data-input-v2.component.ts:40\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        dataInputReturned\n                        \n                    \n                \n            \n            \n                \ndataInputReturned(val: DataInputReturned)\n                \n            \n\n\n            \n                \n                    Definito in src/app/components/data-input-v2/data-input-v2.component.ts:181\n                \n            \n\n\n            \n                \n                    Funzione usata per emettere il valore di ritorno dal form.\nSee {dataInputElement}\nSee {updateTime}\nSee {onChange}\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                DataInputReturned\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCheckbox\n                        \n                    \n                \n            \n            \n                \ngetCheckbox()\n                \n            \n\n\n            \n                \n                    Definito in src/app/components/data-input-v2/data-input-v2.component.ts:152\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         DataInputElement\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSelection\n                        \n                    \n                \n            \n            \n                \ngetSelection()\n                \n            \n\n\n            \n                \n                    Definito in src/app/components/data-input-v2/data-input-v2.component.ts:136\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         DataInputElement\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getText\n                        \n                    \n                \n            \n            \n                \ngetText()\n                \n            \n\n\n            \n                \n                    Definito in src/app/components/data-input-v2/data-input-v2.component.ts:123\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         DataInputElement\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Definito in src/app/components/data-input-v2/data-input-v2.component.ts:107\n                \n            \n\n\n            \n                \n                    Funzione richiamata all'inizializzazione della componente e ritorna il form adeguato scelto.\nSee {getSelection}\nSee {getCheckbox}\nSee {getText}\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateTime\n                        \n                    \n                \n            \n            \n                \nupdateTime()\n                \n            \n\n\n            \n                \n                    Definito in src/app/components/data-input-v2/data-input-v2.component.ts:169\n                \n            \n\n\n            \n                \n                    Funzione che ha come scopo lo switch della variabile di modifica.\nSee {isUpdateTime}\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _value\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         any\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/data-input-v2/data-input-v2.component.ts:21\n                        \n                    \n\n            \n                \n                    Variabile di appoggio per value\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        dataInputElement\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         DataInputElement\n\n                    \n                \n                \n                    \n                        Valore predefinito : new DataInputElement()\n                    \n                \n                    \n                        \n                                Definito in src/app/components/data-input-v2/data-input-v2.component.ts:94\n                        \n                    \n\n            \n                \n                    Variabile usata per passare i valori alla componente @see {DataInputComponent}.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        isUpdateTime\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                \n                    \n                        Valore predefinito : false\n                    \n                \n                    \n                        \n                                Definito in src/app/components/data-input-v2/data-input-v2.component.ts:89\n                        \n                    \n\n            \n                \n                    Variabile usata per eseguire la modifica del valore.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessori\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Definito in src/app/components/data-input-v2/data-input-v2.component.ts:37\n                                \n                            \n\n                \n                    \n                        setvalue(val: any)\n                    \n                \n                            \n                                \n                                    Definito in src/app/components/data-input-v2/data-input-v2.component.ts:30\n                                \n                            \n                    \n                        \n                                Variabile (set) in input che rappresenta il valore attuale dell'elemento passato.\nQuesta variabile predispone di determinate operazioni prima di eseguire l'effettivo salvataggio del valore.\nIn particolare controlla se emettere o meno il cambiamento della variabile in modo diretto o indiretto\nSee {directChange}\nSee {_value}\n\n\n                                \n                                        Parametri :\n                                        \n                                            \n                                                \n                                                    Nome\n                                                        Tipo\n                                                    Opzionale\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                            any\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { DataInputElement, DataInputReturned, SelectOption, SingleDataInputReturned } from '../data-input/dataInputType';\nimport { DataInputReturnedV2 } from './dataInputTypeV2';\n\n/**\n * Componente usata per mostrare il valore di un determinato elemento. \n * Attraverso un click, è possibile visualizzare un form di modifica in place.\n * I form attualmente disponibili sono: text, textarea, (multi)selection e checkbox. \n */\n@Component({\n  selector: 'app-data-input-v2',\n  templateUrl: './data-input-v2.component.html',\n  styleUrls: ['./data-input-v2.component.sass'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DataInputV2Component implements OnInit {\n\n  /**\n   * Variabile di appoggio per value\n   */\n  protected _value: any;\n  /**\n   * Variabile (set) in input che rappresenta il valore attuale dell'elemento passato.\n   * Questa variabile predispone di determinate operazioni prima di eseguire l'effettivo salvataggio del valore.\n   * In particolare controlla se emettere o meno il cambiamento della variabile in modo diretto o indiretto\n   * @see {directChange}\n   * @see {_value}\n   */\n  @Input()\n  set value(val: any) {\n    if (!this.directChange || this.directChange === \"direct\") {\n      this.valueChange.emit(val);\n      this.onChange.emit({ key: this.idForChanges ? this.idForChanges : this.title, old_value: this._value, new_value: val }); // poi notifica aggiornamento\n    }\n    this._value = val;\n  }\n  get value() {\n    return this._value;\n  }\n  @Output() valueChange: EventEmitter = new EventEmitter();\n  \n  /**\n   * Attributo ritornato in output.\n   * @type {EventEmitter}\n   */\n  @Output() onChange: EventEmitter = new EventEmitter();\n\n\n  /**\n   * Varibile (opzionale) data in input per assegnare un \"riconoscimento\" all'elemento di ritorno.\n   * @see {DataInputReturnedV2} per il campo \"key\".\n   * @type {string}\n   */\n  @Input() idForChanges?: string;\n  /**\n   * Varibile (opzionale) data in input che serve per il comportamento della componente.\n   * Essa può essere: \n   * @type {\"function\"} : nel caso si voglia aggiornare il valore passato in input alla funzione.\n   * @type {\"direct\"} : nel caso si vuole aggiornare direttamente il valore.\n   * La funzione di base predilige un comportamento su \"direct\".\n   */\n  @Input() directChange?: \"function\" | \"direct\";\n\n  /**\n   * Variabile data in input che serve per dare un titolo all'elemento\n   * @type {string}\n   */\n  @Input() title: string;\n  /**\n   * Variabile data in input che serve per capire che tipo di elemento sta trattando.\n   * Nel caso di modifiche si provvederà a renderizzare la giusta scelta. \n   * Essa può essere:\n   * @type {\"text\"} : nel caso si voglia un input text base.\n   * @type {\"textarea\"} : nel caso si voglia un input text-area.\n   * @type {\"selection\"} : nel caso si voglia un input selection.\n   * @type {\"checkbox\"} : nel caso si voglia un input checkbox.\n   */\n  @Input() formType: \"textarea\" | \"text\" | \"selection\" | \"checkbox\";\n\n  // varibili specifiche dei form.\n  @Input() selectOption?: SelectOption[];\n  @Input() checked?: boolean;\n  @Input() required?: boolean;\n\n  /**\n   * Variabile usata per eseguire la modifica del valore.\n   * @type {boolean}\n   */\n  protected isUpdateTime: boolean = false;\n  /**\n   * Variabile usata per passare i valori alla componente @see {DataInputComponent}.\n   * @type {DataInputElement}\n   */\n  protected dataInputElement: DataInputElement = new DataInputElement();;\n\n  /**\n   * Costruttore di DataInputV2Component.\n   */\n  constructor(private cdr: ChangeDetectorRef) { }\n\n  /**\n   * Funzione richiamata all'inizializzazione della componente e ritorna il form adeguato scelto.\n   * @see {getSelection}\n   * @see {getCheckbox}\n   * @see {getText}\n   */\n  ngOnInit(): void {\n    this.dataInputElement.element = [];\n    if (this.formType === 'text' || this.formType === 'textarea') {\n      this.dataInputElement = this.getText();\n    }\n    else if (this.formType === 'checkbox') {\n      this.dataInputElement = this.getCheckbox();\n    }\n    else if (this.formType === 'selection' && this.selectOption) {\n      this.dataInputElement = this.getSelection();\n    }\n    else {\n      console.error(\"PROBLEMA CON TIPO O DATO PASSATO\");\n    }\n  }\n\n  getText(): DataInputElement {\n    let dataInputElement: DataInputElement = new DataInputElement;\n    dataInputElement.element = [\n      {\n        id: this.idForChanges ? this.idForChanges : this.title,\n        placeholder: this.value ? this.value as string : '',\n        type: this.formType,\n        required: this.required ? true : false\n      }\n    ];\n    return dataInputElement;\n  }\n\n  getSelection(): DataInputElement {\n    let index_selected = this.selectOption.findIndex((el) => el.value === this.value || el.text === this.value)\n    index_selected = (index_selected \n    \n\n    \n        \n    {{title}}:\n    \n         {{value}} \n        click to change\n    \n    \n        \n        \n        \n        \n    \n\n\n    \n\n    \n                \n                    ./data-input-v2.component.sass\n                \n                .btn-text-link\n    cursor: pointer\n    text-decoration: none\n    font-style: normal\n    font-size: small\n    margin-bottom: 0!important\n.btn-text-link:hover\n    text-decoration: underline\n    font-style: italic\n\n.title-element\n    margin: 0\n    font-style: italic\n    font-size: small\n\n    \n\n    \n        \n        \n            \n                Legenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento html con direttive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{title}}:             {{value}}         click to change                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ComposerComponent', 'selector': 'app-composer'},{'name': 'ControlTemplate', 'selector': ''},{'name': 'DataInputComponent', 'selector': 'app-data-input'},{'name': 'DataInputV2Component', 'selector': 'app-data-input-v2'},{'name': 'DataItemComponent', 'selector': 'app-window-item'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HostComponent', 'selector': ''},{'name': 'HowToUseComponent', 'selector': 'app-how-to-use'},{'name': 'MirroringModuleInstanceComponent', 'selector': ''},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavbarElementComponent', 'selector': 'app-navbar-element'},{'name': 'NetworkComponent', 'selector': ''},{'name': 'OffcanvasComponent', 'selector': 'app-offcanvas'},{'name': 'ReteModuleComposerComponent', 'selector': 'app-rete-module-composer'},{'name': 'ReteModuleVisualizerComponent', 'selector': 'app-rete-module-visualizer'},{'name': 'ReteTheaterComposerComponent', 'selector': 'app-rete-theater-composer'},{'name': 'ReteTheaterVisualizerComponent', 'selector': 'app-rete-theater-visualizer'},{'name': 'SubnetComponent', 'selector': ''},{'name': 'TabnavComponent', 'selector': 'app-tabnav'},{'name': 'TheaterInternalServiceModuleInstanceComponent', 'selector': ''},{'name': 'TheaterModuleInstanceComponent', 'selector': ''},{'name': 'UnderbarComponent', 'selector': 'app-underbar'},{'name': 'VisualizerComponent', 'selector': 'app-displayer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DataInputV2Component'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"components/DataItemComponent.html":{"url":"components/DataItemComponent.html","title":"component - DataItemComponent","body":"\n                   \n\n\n\n\n\n  Componenti\n  \n  DataItemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/data-item/data-item.component.ts\n\n\n\n    \n        Descrizione\n    \n    \n        Componente usata per mostrare, tipo accordion, determinati livelli.\nProducendo una vista \"astratta\" dell'oggetto e i suoi elementi.\nPermette di eseguire il collapse.\nPermette di mostrare la cancellazione. Gestire correttamente questo caso.\nSee {onRemove}\n\n    \n\n\n\n\n\n    Metadati\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-window-item\n            \n\n            \n                styleUrls\n                ./data-item.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./data-item.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                closeIconClass\n                            \n                            \n                                    Protected\n                                toOpenIconClass\n                            \n                            \n                                    Protected\n                                toReduceIconClass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                reduce\n                            \n                            \n                                remove\n                            \n                        \n                    \n                \n\n                \n                    \n                        Input\n                    \n                \n                \n                    \n                        \n                            \n                                isfull\n                            \n                            \n                                onlyResize\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Output\n                    \n                \n                \n                    \n                        \n                            \n                                onRemove\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Costruttore\n        \n            \n                \n                    \nconstructor(cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Definito in src/app/components/data-item/data-item.component.ts:42\n                            \n                        \n\n                \n                    \n                            Costruttore componente DataItemComponent.\n\n                            \n                                    Parametri :\n                                    \n                                        \n                                            \n                                                Nome\n                                                    Tipo\n                                                Opzionale\n                                            \n                                        \n                                        \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Input\n        \n            \n                \n                    \n                        \n                        isfull\n                    \n                \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                \n                    \n                        Valore predefinito : false\n                    \n                \n                        \n                            \n                                    Definito in src/app/components/data-item/data-item.component.ts:26\n                            \n                        \n                \n                    \n                        Varibile in input che rappresenta lo stato \"aperto\" o \"chiuso\" della componente\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        onlyResize\n                    \n                \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                \n                    \n                        Valore predefinito : false\n                    \n                \n                        \n                            \n                                    Definito in src/app/components/data-item/data-item.component.ts:31\n                            \n                        \n                \n                    \n                        Variabile di input che permette o meno la possibilità di visualizzare il pulsante di elimina.\nSee {remove}\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                    Definito in src/app/components/data-item/data-item.component.ts:21\n                            \n                        \n                \n                    \n                        Varibile di input che rappresenta il titolo della componente\n\n                    \n                \n            \n        \n\n    \n    Output\n        \n            \n                \n                    \n                        \n                        onRemove\n                    \n                \n                \n                    \n                        Tipo :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Definito in src/app/components/data-item/data-item.component.ts:37\n                            \n                        \n                \n                    \n                        Variabile di output che emette l'evento di eliminazione elemento.\nSee {remove}\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        reduce\n                        \n                    \n                \n            \n            \n                \nreduce()\n                \n            \n\n\n            \n                \n                    Definito in src/app/components/data-item/data-item.component.ts:54\n                \n            \n\n\n            \n                \n                    Funzione che esegue uno switch di valore della variabile che rappresenta il collapse dell'elemento.\nSee {isfull}\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove()\n                \n            \n\n\n            \n                \n                    Definito in src/app/components/data-item/data-item.component.ts:63\n                \n            \n\n\n            \n                \n                    Funzione che emette l'evento di click sul tasto di cancellazione.\nSee {onRemove}\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        closeIconClass\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                \n                    \n                        Valore predefinito : \"bi bi-x-lg\"\n                    \n                \n                    \n                        \n                                Definito in src/app/components/data-item/data-item.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        toOpenIconClass\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                \n                    \n                        Valore predefinito : \"bi bi-square\"\n                    \n                \n                    \n                        \n                                Definito in src/app/components/data-item/data-item.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        toReduceIconClass\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                \n                    \n                        Valore predefinito : \"bi bi-box-arrow-in-down-right\"\n                    \n                \n                    \n                        \n                                Definito in src/app/components/data-item/data-item.component.ts:40\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, Input, Output } from '@angular/core';\n\n/**\n * Componente usata per mostrare, tipo accordion, determinati livelli.\n * Producendo una vista \"astratta\" dell'oggetto e i suoi elementi.\n * Permette di eseguire il collapse.\n * Permette di mostrare la cancellazione. Gestire correttamente questo caso.\n * @see {onRemove}\n */\n@Component({\n  selector: 'app-window-item',\n  templateUrl: './data-item.component.html',\n  styleUrls: ['./data-item.component.sass'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DataItemComponent{\n  /**\n   * Varibile di input che rappresenta il titolo della componente\n   * @type {string}\n   */\n  @Input() title?: string;\n  /**\n   * Varibile in input che rappresenta lo stato \"aperto\" o \"chiuso\" della componente\n   * @type {boolean}\n   */\n  @Input() isfull?: boolean = false;\n  /**\n   * Variabile di input che permette o meno la possibilità di visualizzare il pulsante di elimina.\n   * @see {remove}\n   */\n  @Input() onlyResize?: boolean = false;\n\n  /**\n   * Variabile di output che emette l'evento di eliminazione elemento.\n   * @see {remove}\n   */\n  @Output() onRemove: EventEmitter = new EventEmitter();\n\n  // variabili classi icona -> bootstrap-icon\n  protected toReduceIconClass: string = \"bi bi-box-arrow-in-down-right\";\n  protected toOpenIconClass: string = \"bi bi-square\";\n  protected closeIconClass: string = \"bi bi-x-lg\";\n\n  /**\n   * Costruttore componente DataItemComponent.\n   * @param cdr \n   */\n  constructor(private cdr: ChangeDetectorRef) { }\n\n  /**\n   * Funzione che esegue uno switch di valore della variabile che rappresenta il collapse dell'elemento.\n   * @see {isfull} \n  */\n  reduce() {\n    this.isfull = !this.isfull;\n    this.cdr.detectChanges();\n  }\n  \n  /**\n   * Funzione che emette l'evento di click sul tasto di cancellazione.\n   * @see {onRemove} \n   */\n  remove(){\n    this.onRemove.emit(null);\n    this.cdr.detectChanges();\n  }\n\n\n}\n\n\n    \n\n    \n        \n    \n        \n            {{title}}\n        \n        \n            \n                  \n                 \n                \n            \n            \n                \n                    \n                \n            \n        \n    \n    \n        \n        \n    \n\n    \n\n    \n                \n                    ./data-item.component.sass\n                \n                .div-data-item\n    word-break: break-all\n    border-color: #626a71\n    border-radius: 1em\n    border-style: solid\n    margin: 1em\n\n.op-bar\n    padding: 1px!important\n\n.text-break\n    text-overflow: ellipsis\n    white-space: nowrap\n    overflow: hidden\n\n.content-div\n    padding-top: 0!important\n    padding: 1em\n\n.one-side-rounded\n    border-top-right-radius: 0.9em\n\n.two-side-rounded\n     border-top-right-radius: 0.9em\n     border-bottom-right-radius: 0.9em\n\n    \n    \n\n    \n        \n        \n            \n                Legenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento html con direttive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        {{title}}                                                                                                                                                                                                           '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ComposerComponent', 'selector': 'app-composer'},{'name': 'ControlTemplate', 'selector': ''},{'name': 'DataInputComponent', 'selector': 'app-data-input'},{'name': 'DataInputV2Component', 'selector': 'app-data-input-v2'},{'name': 'DataItemComponent', 'selector': 'app-window-item'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HostComponent', 'selector': ''},{'name': 'HowToUseComponent', 'selector': 'app-how-to-use'},{'name': 'MirroringModuleInstanceComponent', 'selector': ''},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavbarElementComponent', 'selector': 'app-navbar-element'},{'name': 'NetworkComponent', 'selector': ''},{'name': 'OffcanvasComponent', 'selector': 'app-offcanvas'},{'name': 'ReteModuleComposerComponent', 'selector': 'app-rete-module-composer'},{'name': 'ReteModuleVisualizerComponent', 'selector': 'app-rete-module-visualizer'},{'name': 'ReteTheaterComposerComponent', 'selector': 'app-rete-theater-composer'},{'name': 'ReteTheaterVisualizerComponent', 'selector': 'app-rete-theater-visualizer'},{'name': 'SubnetComponent', 'selector': ''},{'name': 'TabnavComponent', 'selector': 'app-tabnav'},{'name': 'TheaterInternalServiceModuleInstanceComponent', 'selector': ''},{'name': 'TheaterModuleInstanceComponent', 'selector': ''},{'name': 'UnderbarComponent', 'selector': 'app-underbar'},{'name': 'VisualizerComponent', 'selector': 'app-displayer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DataItemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/DataRouteComposer.html":{"url":"classes/DataRouteComposer.html","title":"class - DataRouteComposer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  DataRouteComposer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/appType.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Elemento che contiene le variabili da portare al router nel caso si tratti della costruzione.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                author\n                            \n                            \n                                description\n                            \n                            \n                                name\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        author\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/models/appType.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/models/appType.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/models/appType.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         SubjectType\n\n                    \n                \n                    \n                        \n                                Definito in src/app/models/appType.ts:68\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export enum SubjectType {\n    MODULE = \"Module\",\n    THEATER = \"Theater\"\n}\n\n/**\n * Enum per eseguire le operazioni in base al tipo\n */\nexport enum ComposerVisualizerType {\n    COMPOSER = \"Composer\",\n    VISUALIZER = \"Visualizer\"\n}\n\n/**\n * Enum per indicare il tipo di interfaccia\n */\nexport enum InterfacePortType {\n    CONSUMER = \"CONSUMER\",\n    PRODUCER = \"PRODUCER\"\n}\n\n/**\n * Enum per indicare il tipo di porta\n */\nexport enum NodePortType {\n    INPUT = \"input\",\n    OUTPUT = \"output\"\n}\n\n/**\n * Enum per indicare il tipo di sistma operativo\n */\nexport enum StaticValue {\n    SubnetOutput = \"Link\",\n    hostOS1 = \"Linux\",\n    hostOS2 = \"Ubuntu\",\n    hostOS3 = \"CentOS\",\n}\n\n/**\n * Enum per indicare la versione dell'ip\n */\nexport enum IpVersionType {\n    FOUR = \"4\",\n    SIXSTEEN = \"16\"\n}\n\n\n//// Router data\n\n/**\n * Elemento che contiene le variabili da portare al router nel caso si tratti della visualizzazione.\n */\nexport class DataRouteVisualizer {\n    id: number;\n    type: SubjectType;\n}\n/**\n * Elemento che contiene le variabili da portare al router nel caso si tratti della costruzione.\n */\nexport class DataRouteComposer {\n    name: string;\n    description: string;\n    author: string;\n    type: SubjectType;\n}\n\n\n/**\n * Enum per indicare i tipi di nodi nel modulo.\n */\nexport enum EnumNodeType {\n    Host = \"Host\",\n    Subnet = \"Subnet\",\n    Network = \"Network\",\n}\n/**\n * Enum per l'indicazione testuale descrittiva dei tipi di nodi nel modulo.\n */\nexport enum EnumNodeTypeDescription {\n    Host = \"Nodo Host\",\n    Subnet = \"Nodo Subnet\",\n    Network = \"Nodo Network\",\n}\n\n/**\n * Enum per indicare i tipi di moduli nel teatro.\n */\nexport enum EnumModuleType {\n    TheaterModuleInstance = \"TheaterModuleInstance\", // SINONIMI -> TheatreModuleInstance = \"TheatreModuleInstance\",\n    TheaterInternalServiceModuleInstance = \"TheaterInternalServiceModuleInstance\",\n    MirroringModuleInstance = \"MirroringModuleInstance\",\n    VirtualServerModuleInstance = \"VirtualServerModuleInstance\", //TODO\n    ExternalVirtualMachine = \"ExternalVirtualMachine\", //TODO\n    AutomaticSystem = \"AutomaticSystem\", //TODO\n    Border = \"Border\", //TODO\n}\n/**\n * Enum per l'indicazione testuale descrittiva dei tipi di modulo nel teatro.\n */\nexport enum EnumModuleTypeDescription {\n    TheaterModuleInstance = \"Module\", // SINONIMI -> TheatreModuleInstance = \"Module\",\n    TheaterInternalServiceModuleInstance = \"Internal Service\",\n    MirroringModuleInstance = \"Mirroring Module\",\n    VirtualServerModuleInstance = \"Virtual Server\", // TODO\n    ExternalVirtualMachine = \"External Virtual Machine\", // TODO\n    AutomaticSystem = \"Automatic System\", //TODO\n    Border = \"Border\", //TODO\n}\n\n\n// MODULES PROPERTIES\n\n\n/**\n * Enum che restituisce delle proprietà, espresse in termini di variabili indicatrici dei moduli.\n * Indica il tipo di un modulo e la sua rappresentazione. (api-restituzione moduli da teatro)\n */\nexport enum ModuleTypeTheater {\n    TheaterModuleInstance = \"sysman.creo.nodes.TheaterModuleInstance\",\n    MirroringModuleInstance = \"sysman.creo.nodes.MirroringModuleInstance\",\n    TheaterInternalServiceModuleInstance = \"sysman.creo.nodes.TheaterInternalServiceModuleInstance\",\n    VirtualServerModuleInstance = \"sysman.creo.nodes.VirtualServerModuleInstance\", //TODO\n    ExternalVirtualMachine = \"sysman.creo.nodes.ExternalVirtualMachine\", //TODO\n    AutomaticSystem = \"sysman.creo.nodes.AutomaticSystem\", //TODO\n    Border = \"sysman.creo.nodes.Border\", //TODO\n}\n/**\n * Rappresentazione inversa di @see {ModuleTypeTheater}\n */\nexport enum ModuleType1 {\n    \"sysman.creo.nodes.TheaterModuleInstance\" = \"TheaterModuleInstance\", // SINONIMI -> \"sysman.creo.nodes.TheatreModuleInstance\" = \"TheaterModuleInstance\",\n    \"sysman.creo.nodes.MirroringModuleInstance\" = \"MirroringModuleInstance\",\n    \"sysman.creo.nodes.TheaterInternalServiceModuleInstance\" = \"TheaterInternalServiceModuleInstance\",\n    \"sysman.creo.nodes.VirtualServerModuleInstance\" = \"VirtualServerModuleInstance\", //TODO\n    \"sysman.creo.nodes.ExternalVirtualMachine\" = \"ExternalVirtualMachine\", //TODO\n    \"sysman.creo.nodes.AutomaticSystem\" = \"AutomaticSystem\", //TODO\n    \"sysman.creo.nodes.Border\" = \"Border\", //TODO\n}\n\n\n/**\n * Enum che restituisce delle proprietà, espresse in termini di variabili indicatrici dei moduli.\n * Indica il tipo di un modulo e la sua altra indicazione in altri tipi di dati reperiti. (api-restituzione moduli da chiamata apposita)\n */\nexport enum ModuleTypeLink {\n    TheaterModuleInstance = \"THEATER\",\n    MirroringModuleInstance = \"MIRRORING\",\n    TheaterInternalServiceModuleInstance = \"INTERNAL_THEATRE_SERVICE\",\n    VirtualServerModuleInstance = \"VIRTUAL_SERVER\", // TODO\n    ExternalVirtualMachine = \"EXTERNAL_VIRTUAL_MACHINE\", // TODO\n    AutomaticSystem = \"AUTOMATIC_SYSTEM\", //TODO\n    Border = \"BORDER\", //TODO\n}\n/**\n * Rappresentazione inversa di @see {ModuleTypeLink}\n */\nexport enum ModuleType2 {\n    \"THEATRE\" = \"TheaterModuleInstance\", //Attenzione, per qualche motivo qui la corretta è teatRE. SINONIMI -> \"THEATRE\" = \"TheaterModuleInstance\",\n    \"MIRRORING\" = \"MirroringModuleInstance\",\n    \"INTERNAL_THEATRE_SERVICE\" = \"TheaterInternalServiceModuleInstance\",\n    \"VIRTUAL_SERVER\" = \"VirtualServerModuleInstance\", // TODO\n    \"EXTERNAL_VIRTUAL_MACHINE\" = \"ExternalVirtualMachine\", // TODO\n    \"AUTOMATIC_SYSTEM\" = \"AutomaticSystem\", // TODO\n    \"BORDER\" = \"Border\", // TODO\n}\n\n\n/**\n * Enum che restituisce il tipi (type) di un teatro (api-restituzione moduli da teatro)\n */\nexport enum TheaterType {\n    theater = \"sysman.creo.nodes.Theater\"\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/DataRouteVisualizer.html":{"url":"classes/DataRouteVisualizer.html","title":"class - DataRouteVisualizer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  DataRouteVisualizer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/appType.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Elemento che contiene le variabili da portare al router nel caso si tratti della visualizzazione.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/models/appType.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         SubjectType\n\n                    \n                \n                    \n                        \n                                Definito in src/app/models/appType.ts:59\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export enum SubjectType {\n    MODULE = \"Module\",\n    THEATER = \"Theater\"\n}\n\n/**\n * Enum per eseguire le operazioni in base al tipo\n */\nexport enum ComposerVisualizerType {\n    COMPOSER = \"Composer\",\n    VISUALIZER = \"Visualizer\"\n}\n\n/**\n * Enum per indicare il tipo di interfaccia\n */\nexport enum InterfacePortType {\n    CONSUMER = \"CONSUMER\",\n    PRODUCER = \"PRODUCER\"\n}\n\n/**\n * Enum per indicare il tipo di porta\n */\nexport enum NodePortType {\n    INPUT = \"input\",\n    OUTPUT = \"output\"\n}\n\n/**\n * Enum per indicare il tipo di sistma operativo\n */\nexport enum StaticValue {\n    SubnetOutput = \"Link\",\n    hostOS1 = \"Linux\",\n    hostOS2 = \"Ubuntu\",\n    hostOS3 = \"CentOS\",\n}\n\n/**\n * Enum per indicare la versione dell'ip\n */\nexport enum IpVersionType {\n    FOUR = \"4\",\n    SIXSTEEN = \"16\"\n}\n\n\n//// Router data\n\n/**\n * Elemento che contiene le variabili da portare al router nel caso si tratti della visualizzazione.\n */\nexport class DataRouteVisualizer {\n    id: number;\n    type: SubjectType;\n}\n/**\n * Elemento che contiene le variabili da portare al router nel caso si tratti della costruzione.\n */\nexport class DataRouteComposer {\n    name: string;\n    description: string;\n    author: string;\n    type: SubjectType;\n}\n\n\n/**\n * Enum per indicare i tipi di nodi nel modulo.\n */\nexport enum EnumNodeType {\n    Host = \"Host\",\n    Subnet = \"Subnet\",\n    Network = \"Network\",\n}\n/**\n * Enum per l'indicazione testuale descrittiva dei tipi di nodi nel modulo.\n */\nexport enum EnumNodeTypeDescription {\n    Host = \"Nodo Host\",\n    Subnet = \"Nodo Subnet\",\n    Network = \"Nodo Network\",\n}\n\n/**\n * Enum per indicare i tipi di moduli nel teatro.\n */\nexport enum EnumModuleType {\n    TheaterModuleInstance = \"TheaterModuleInstance\", // SINONIMI -> TheatreModuleInstance = \"TheatreModuleInstance\",\n    TheaterInternalServiceModuleInstance = \"TheaterInternalServiceModuleInstance\",\n    MirroringModuleInstance = \"MirroringModuleInstance\",\n    VirtualServerModuleInstance = \"VirtualServerModuleInstance\", //TODO\n    ExternalVirtualMachine = \"ExternalVirtualMachine\", //TODO\n    AutomaticSystem = \"AutomaticSystem\", //TODO\n    Border = \"Border\", //TODO\n}\n/**\n * Enum per l'indicazione testuale descrittiva dei tipi di modulo nel teatro.\n */\nexport enum EnumModuleTypeDescription {\n    TheaterModuleInstance = \"Module\", // SINONIMI -> TheatreModuleInstance = \"Module\",\n    TheaterInternalServiceModuleInstance = \"Internal Service\",\n    MirroringModuleInstance = \"Mirroring Module\",\n    VirtualServerModuleInstance = \"Virtual Server\", // TODO\n    ExternalVirtualMachine = \"External Virtual Machine\", // TODO\n    AutomaticSystem = \"Automatic System\", //TODO\n    Border = \"Border\", //TODO\n}\n\n\n// MODULES PROPERTIES\n\n\n/**\n * Enum che restituisce delle proprietà, espresse in termini di variabili indicatrici dei moduli.\n * Indica il tipo di un modulo e la sua rappresentazione. (api-restituzione moduli da teatro)\n */\nexport enum ModuleTypeTheater {\n    TheaterModuleInstance = \"sysman.creo.nodes.TheaterModuleInstance\",\n    MirroringModuleInstance = \"sysman.creo.nodes.MirroringModuleInstance\",\n    TheaterInternalServiceModuleInstance = \"sysman.creo.nodes.TheaterInternalServiceModuleInstance\",\n    VirtualServerModuleInstance = \"sysman.creo.nodes.VirtualServerModuleInstance\", //TODO\n    ExternalVirtualMachine = \"sysman.creo.nodes.ExternalVirtualMachine\", //TODO\n    AutomaticSystem = \"sysman.creo.nodes.AutomaticSystem\", //TODO\n    Border = \"sysman.creo.nodes.Border\", //TODO\n}\n/**\n * Rappresentazione inversa di @see {ModuleTypeTheater}\n */\nexport enum ModuleType1 {\n    \"sysman.creo.nodes.TheaterModuleInstance\" = \"TheaterModuleInstance\", // SINONIMI -> \"sysman.creo.nodes.TheatreModuleInstance\" = \"TheaterModuleInstance\",\n    \"sysman.creo.nodes.MirroringModuleInstance\" = \"MirroringModuleInstance\",\n    \"sysman.creo.nodes.TheaterInternalServiceModuleInstance\" = \"TheaterInternalServiceModuleInstance\",\n    \"sysman.creo.nodes.VirtualServerModuleInstance\" = \"VirtualServerModuleInstance\", //TODO\n    \"sysman.creo.nodes.ExternalVirtualMachine\" = \"ExternalVirtualMachine\", //TODO\n    \"sysman.creo.nodes.AutomaticSystem\" = \"AutomaticSystem\", //TODO\n    \"sysman.creo.nodes.Border\" = \"Border\", //TODO\n}\n\n\n/**\n * Enum che restituisce delle proprietà, espresse in termini di variabili indicatrici dei moduli.\n * Indica il tipo di un modulo e la sua altra indicazione in altri tipi di dati reperiti. (api-restituzione moduli da chiamata apposita)\n */\nexport enum ModuleTypeLink {\n    TheaterModuleInstance = \"THEATER\",\n    MirroringModuleInstance = \"MIRRORING\",\n    TheaterInternalServiceModuleInstance = \"INTERNAL_THEATRE_SERVICE\",\n    VirtualServerModuleInstance = \"VIRTUAL_SERVER\", // TODO\n    ExternalVirtualMachine = \"EXTERNAL_VIRTUAL_MACHINE\", // TODO\n    AutomaticSystem = \"AUTOMATIC_SYSTEM\", //TODO\n    Border = \"BORDER\", //TODO\n}\n/**\n * Rappresentazione inversa di @see {ModuleTypeLink}\n */\nexport enum ModuleType2 {\n    \"THEATRE\" = \"TheaterModuleInstance\", //Attenzione, per qualche motivo qui la corretta è teatRE. SINONIMI -> \"THEATRE\" = \"TheaterModuleInstance\",\n    \"MIRRORING\" = \"MirroringModuleInstance\",\n    \"INTERNAL_THEATRE_SERVICE\" = \"TheaterInternalServiceModuleInstance\",\n    \"VIRTUAL_SERVER\" = \"VirtualServerModuleInstance\", // TODO\n    \"EXTERNAL_VIRTUAL_MACHINE\" = \"ExternalVirtualMachine\", // TODO\n    \"AUTOMATIC_SYSTEM\" = \"AutomaticSystem\", // TODO\n    \"BORDER\" = \"Border\", // TODO\n}\n\n\n/**\n * Enum che restituisce il tipi (type) di un teatro (api-restituzione moduli da teatro)\n */\nexport enum TheaterType {\n    theater = \"sysman.creo.nodes.Theater\"\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/DeployInstanceDTO.html":{"url":"classes/DeployInstanceDTO.html","title":"class - DeployInstanceDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  DeployInstanceDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsDTO/theaterDTO.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano un elemento nella sequenza di deploy.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                    Opzionale\n                                moduleInstanceConfigurationUUID\n                            \n                            \n                                moduleInstanceName\n                            \n                            \n                                moduleInstanceUUID\n                            \n                            \n                                moduleUUID\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        moduleInstanceConfigurationUUID\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/theaterDTO.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        moduleInstanceName\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/theaterDTO.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        moduleInstanceUUID\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/theaterDTO.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        moduleUUID\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/theaterDTO.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ModuleInstanceDTO, TheaterInstanceDTO } from \"./moduleDTO\"\n\n/**\n * Classe che contiene gli attributi che indicano il catalogo di riferimento di un teatro.\n */\nexport class TagCatalogueDTO {\n    description: string\n    id: string | number\n    name: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano lo stato di un teatro.\n */\nexport class TheatreStatusDTO {\n    code: string\n    id: string | number\n    name: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano un elemento nella sequenza di deploy.\n */\nexport class DeployInstanceDTO {\n    moduleInstanceConfigurationUUID?: string\n    moduleInstanceName: string\n    moduleInstanceUUID: string\n    moduleUUID: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano il blueprint di un teatro.\n */\nexport class BlueprintFileDTO {\n    description: string\n    imports: string[]\n    node_templates: {[name:string]:ModuleInstanceDTO|TheaterInstanceDTO}\n    tosca_definitions_version: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano il mapping nome-modulo.\n */\nexport class NameMappingDTO {\n    display_name: string\n    module_instance_name: string\n    module_name: string\n    node_template_name: string\n}\n/**\n * Classe che contiene gli attributi che indica l'array dei mapping nome-modulo.\n */\nexport class EntityNameMappingFileDTO {\n    name_mapping: NameMappingDTO[]\n}\n\n/**\n * Classe che contiene gli attributi che indicano il teaatro.\n */\nexport class TheaterDTO {\n    author: string\n    blueprintFile: BlueprintFileDTO\n    blueprintUUID: string | number\n    createdBy: string\n    createdDate: string\n    deploymentSequence: {[index:string]:DeployInstanceDTO} //tosee\n    description: string\n    entityNameMappingFile: EntityNameMappingFileDTO\n    id: string | number\n    isLocked: boolean\n    lastModifiedBy: string\n    lastModifiedDate: string\n    lockAcquiredTimestamp: string\n    lockLastUserAcquiring: string\n    lockReleasedTimestamp: string\n    name: string\n    status: TheatreStatusDTO\n    tags: TagCatalogueDTO[]\n    uuid: string\n    version: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"components/DocsComponent.html":{"url":"components/DocsComponent.html","title":"component - DocsComponent","body":"\n                   \n\n\n\n\n\n  Componenti\n  \n  DocsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/docs/docs.component.ts\n\n\n\n    \n        Descrizione\n    \n    \n        Componente (pagina) che ha lo scopo di mostrare la documentazione stilizzata con compodoc.\n\nServita come html in un .\n\n\n    \n\n\n    \n        Implementa\n    \n    \n                    OnInit\n    \n\n\n\n    Metadati\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-docs\n            \n\n            \n                styleUrls\n                ./docs.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./docs.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                compodoc_index_html\n                            \n                            \n                                    Protected\n                                IFRAMEvisibility\n                            \n                        \n                    \n                \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Costruttore\n        \n            \n                \n                    \nconstructor(sanitizer: DomSanitizer, http: HttpClient)\n                    \n                \n                        \n                            \n                                Definito in src/app/pages/docs/docs.component.ts:25\n                            \n                        \n\n                \n                    \n                            Costruttore componete DocsComponent\n\n                            \n                                    Parametri :\n                                    \n                                        \n                                            \n                                                Nome\n                                                    Tipo\n                                                Opzionale\n                                            \n                                        \n                                        \n                                                \n                                                        sanitizer\n                                                  \n                                                        \n                                                                        DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Definito in src/app/pages/docs/docs.component.ts:42\n                \n            \n\n\n            \n                \n                    Funzione richiamata all'inizializzazione della componente.\nPrevede di eseguire la chiamata per reperire l'html della documentazione.\nSee {compodoc_index_html}\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        compodoc_index_html\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         any\n\n                    \n                \n                    \n                        \n                                Definito in src/app/pages/docs/docs.component.ts:20\n                        \n                    \n\n            \n                \n                    Variabile che indica l'html (sanitized) reperito dalla documentazione.\nSee {DomSanitizer}\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        IFRAMEvisibility\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                \n                    \n                        Valore predefinito : 'none'\n                    \n                \n                    \n                        \n                                Definito in src/app/pages/docs/docs.component.ts:25\n                        \n                    \n\n            \n                \n                    Variabile che indica la visibilit o meno dell' rispettivamente: \"none\" \"block\".\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { DomSanitizer} from '@angular/platform-browser';\n\n/**\n * Componente (pagina) che ha lo scopo di mostrare la documentazione stilizzata con compodoc.\n * - Servita come html in un .\n */\n@Component({\n  selector: 'app-docs',\n  templateUrl: './docs.component.html',\n  styleUrls: ['./docs.component.sass']\n})\nexport class DocsComponent implements OnInit {\n\n  /**\n   * Variabile che indica l'html (sanitized) reperito dalla documentazione.\n   * @see {DomSanitizer}\n   */\n  protected compodoc_index_html: any;\n  /**\n   * Variabile che indica la visibilit o meno dell' rispettivamente: \"none\" \"block\".\n   * @type {string} -> \"none\" | \"visible\".\n  */\n  protected IFRAMEvisibility: string = 'none';\n\n  /**\n   * Costruttore componete DocsComponent\n   * @param sanitizer \n   * @param http \n   */\n  constructor(\n    private sanitizer: DomSanitizer,\n    private http: HttpClient\n  ) {}\n\n  /**\n   * Funzione richiamata all'inizializzazione della componente.\n   * Prevede di eseguire la chiamata per reperire l'html della documentazione.\n   * @see {compodoc_index_html}\n   */\n  ngOnInit(): void {\n    const headers = new HttpHeaders().set('Content-Type', 'text/html');\n    this.http.get('assets/documentation/index.html', {headers, responseType: 'text'})\n    .subscribe(data => {\n      this.compodoc_index_html = this.sanitizer.bypassSecurityTrustHtml(data as string);\n    })\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n    \n    \n        \n             \n                \n                    \n                    Error: Embedded data could not be displayed.\n                 -->\n        \n    \n    \n    \n\n    \n\n    \n                \n                    ./docs.component.sass\n                \n                iframe\n    width: 100%\n    height: 100%\n    background-color: #ffff\n\n.box\n    display: flex\n    flex-flow: column\n    height: 100%\n    width: 100%\n\n.box .rox.header\n    flex: 0 1 auto\n//   flex-grow: 0,\n//   flex-shrink: 1,\n//   flex-basis: auto\n\n.box .rox.content\n    flex: 1 1 auto\n\n.box .rox.footer\n    flex: 0 1 1px\n    \n\n    \n        \n        \n            \n                Legenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento html con direttive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                 Error: Embedded data could not be displayed.                 -->                    "},"classes/ElementIntoTheaterDTO.html":{"url":"classes/ElementIntoTheaterDTO.html","title":"class - ElementIntoTheaterDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  ElementIntoTheaterDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsDTO/moduleDTO.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano in via generale le caratteristiche di un elemento che deve essere presente nel node_templates.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                properties\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        properties\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     ModuleInstancePropertiesDTO | TheaterInstancePropertiesDTO\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:218\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:219\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PageableDTO, SortDTO } from './elementDTO';\nimport { NetworkDTO } from './networkDTO';\nimport { TheaterDTO } from './theaterDTO';\n\n/**\n * Classe che contiene gli attributi che indicano l'insieme dei moduli ritornati dal teatro.\n */\nexport class ModuleListDTO {\n    content: SimpleModuleDTO[]\n    pageable: PageableDTO\n    last: boolean\n    totalPages: string | number\n    totalElements: string | number\n    size: string | number\n    number: string | number\n    sort: SortDTO\n    numberOfElements: string | number\n    first: boolean\n    empty: boolean\n}\n\n/**\n * Classe che contiene gli attributi che indica il catalogo del tipo.\n */\nexport class TypesCatalogueDTO {\n    group: string\n    id: string | number\n    parentId: {}\n    value: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano la classificazione del modulo.\n */\nexport class ModuleClassificationDTO {\n    blueprintType: string\n    category: string\n    expectedInstanceType: string\n    id: string | number\n    mcClass: string\n    type: string\n    uuid: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano un parametro generico.\n */\nexport class GenericParameterDTO {\n    type: string\n    default: string\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano i parametri di configurazione di un modulto.\n */\nexport class ConfigurationTemplateDTO {\n    anchor_parameters: { [name: string]: GenericParameterDTO | string }\n    instance_parameters: { [name: string]: GenericParameterDTO }\n    structural_parameters: { [name: string]: GenericParameterDTO }\n    fixed_parameters: { [name: string]: GenericParameterDTO }\n    control_parameters: { [name: string]: GenericParameterDTO }\n    infrastructure_parameters: { [name: string]: GenericParameterDTO }\n    module: string\n    description: string\n    category: string\n    version: string | number\n    platform: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano la modalità di un modulo.\n */\nexport class ModuleModeDTO {\n    code: string\n    id: string | number\n    name: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano lo stato di un modulo.\n */\nexport class ModuleStatusDTO {\n    descriptionCode: string\n    id: string | number\n    name: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le statitistiche di un modulo.\n */\nexport class StatisticItemDTO {\n    error: string | number\n    updated: string | number\n    inserted: string | number\n}\n\n/**\n * Classe che contiene gli attributi che indicano il modulo (simple - in dipendenza del teatro).\n */\nexport class SimpleModuleDTO {\n    createdBy: string\n    createdDate: string\n    description: string\n    id: string | number\n    isLocked: boolean\n    lastModifiedBy: string\n    lastModifiedDate: string\n    lockAcquiredTimestamp: string\n    lockLastUserAcquiring: string\n    lockReleasedTimestamp: string\n    name: string\n    status: ModuleStatusDTO\n    type?: string | any\n    uuid: string\n    version: string | number\n}\n\n/**\n * Classe che contiene gli attributi che indicano il modulo (complex - ritorato da call appostita).\n * @extends {SimpleModuleDTO}\n */\nexport class ModuleDTO extends SimpleModuleDTO {\n    attachments: string[]\n    author: string\n    capabilities: { [name: string]: string }\n    catalog1: TypesCatalogueDTO\n    catalog2: TypesCatalogueDTO\n    catalog3: TypesCatalogueDTO\n    classification: ModuleClassificationDTO\n    configurationTemplate: ConfigurationTemplateDTO\n    detailProperties: {}\n    input: { [name: string]: string }\n    output: { [name: string]: string }\n    mode: ModuleModeDTO\n    statistics: { [name: string]: StatisticItemDTO | string | number }\n    tags: []\n}\n\n/**\n * Classe che contiene gli attributi che indicano le interfacce esposte da un modulo.\n */\nexport class ModuleNetworkInterfaceDTO {\n    id: string | number\n    label: string\n    module: ModuleDTO\n    network: NetworkDTO\n    nodeName: string\n    type: string\n    uuid: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le connessioni interfaccia-modulo.\n */\nexport class ConsumerInterfaceLinkDTO {\n    local_interface: string\n    module_instance: string\n    remote_interface: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà dell'istanza di un modulo all'interno del node_templates.\n */\nexport class ModuleInstancePropertiesDTO {\n    area: string\n    description: string\n    module: string\n    version: string | number\n    sequence: string | number\n    consumer_interfaces_link: ConsumerInterfaceLinkDTO[]\n}\n\n\n/**\n * Classe che contiene gli attributi che indicano l'area di appartenenza di un modulo (complex).\n */\nexport class AreaDTO {\n    id: string | number;\n    uuid: string;\n    name: string;\n    description: string;\n    theater: TheaterDTO;\n    deleted: boolean | string;\n}\n\n/**\n * Classe che contiene gli attributi che indicano l'area di appartenenza di un modulo (simple).\n */\nexport class SimpleAreaDTO {\n    area: string\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà dell'istanza di un teatro all'interno del node_templates.\n */\nexport class TheaterInstancePropertiesDTO {\n    mode: string\n    tags: TagTIP[]\n    areas: SimpleAreaDTO[]\n    author: string\n    version: string | number\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano un tag.\n */\nexport class TagTIP{\n    tag: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano in via generale le caratteristiche di un elemento che deve essere presente nel node_templates.\n */\nexport class ElementIntoTheaterDTO {  // goes into map in blueprint [name:string]: Module...\n    properties: ModuleInstancePropertiesDTO | TheaterInstancePropertiesDTO\n    type: string\n}\n\n\n/**\n * Classe che contiene gli attributi che indicano le caratteristiche di un teatro presente nel node_templates.\n */\nexport class ModuleInstanceDTO {\n    properties: ModuleInstancePropertiesDTO\n    type: string\n}\n/**\n * Classe che contiene gli attributi che indicano le caratteristiche di un modulo presente nel node_templates.\n */\nexport class TheaterInstanceDTO {\n    properties: TheaterInstancePropertiesDTO\n    type: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/EmptyModuleInfo.html":{"url":"classes/EmptyModuleInfo.html","title":"class - EmptyModuleInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  EmptyModuleInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/rete-settings/nodes/rete-modules/export-rete-modules.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Elemento che assegna le variabili a funzioni che restituiscono una struttura inizializzata vuota dei singoli nodi.\nSee {getEmptyReteMirroringModuleInstanceInfo}\nSee {getEmptyReteTheaterModuleInstanceInfo}\nSee {getEmptyReteTheaterInternalServiceModuleInstanceInfo}\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                AutomaticSystem\n                            \n                            \n                                Border\n                            \n                            \n                                ExternalVirtualMachine\n                            \n                            \n                                MirroringModuleInstance\n                            \n                            \n                                TheaterInternalServiceModuleInstance\n                            \n                            \n                                TheaterModuleInstance\n                            \n                            \n                                VirtualServerModuleInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        AutomaticSystem\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ReteMirroringModuleInstanceInfo\n\n                    \n                \n                \n                    \n                        Valore predefinito : getEmptyReteMirroringModuleInstanceInfo()\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-modules/export-rete-modules.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Border\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ReteMirroringModuleInstanceInfo\n\n                    \n                \n                \n                    \n                        Valore predefinito : getEmptyReteMirroringModuleInstanceInfo()\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-modules/export-rete-modules.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ExternalVirtualMachine\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ReteMirroringModuleInstanceInfo\n\n                    \n                \n                \n                    \n                        Valore predefinito : getEmptyReteMirroringModuleInstanceInfo()\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-modules/export-rete-modules.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MirroringModuleInstance\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ReteMirroringModuleInstanceInfo\n\n                    \n                \n                \n                    \n                        Valore predefinito : getEmptyReteMirroringModuleInstanceInfo()\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-modules/export-rete-modules.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TheaterInternalServiceModuleInstance\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ReteTheaterInternalServiceModuleInstanceInfo\n\n                    \n                \n                \n                    \n                        Valore predefinito : getEmptyReteTheaterInternalServiceModuleInstanceInfo()\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-modules/export-rete-modules.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TheaterModuleInstance\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ReteTheaterModuleInstanceInfo\n\n                    \n                \n                \n                    \n                        Valore predefinito : getEmptyReteTheaterModuleInstanceInfo()\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-modules/export-rete-modules.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        VirtualServerModuleInstance\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ReteMirroringModuleInstanceInfo\n\n                    \n                \n                \n                    \n                        Valore predefinito : getEmptyReteMirroringModuleInstanceInfo()\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-modules/export-rete-modules.ts:41\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { getEmptyReteMirroringModuleInstanceInfo, MirroringModuleInstanceNode, ReteMirroringModuleInstanceInfo } from \"./mirroringModuleInstance/mirroringModuleInstanceNode\";\nimport { getEmptyReteTheaterInternalServiceModuleInstanceInfo, ReteTheaterInternalServiceModuleInstanceInfo, TheaterInternalServiceModuleInstanceNode } from \"./theaterInternalServiceModuleInstance/theaterInternalServiceModuleInstanceNode\";\nimport { getEmptyReteTheaterModuleInstanceInfo, ReteTheaterModuleInstanceInfo, TheaterModuleInstanceNode } from \"./theaterModuleInstance/theaterModuleInstanceNode\";\n\n/**\n * Enum utilizzato per indicare l'indice di riferimento degli array contenenti le informazioni.\n * @see {NodeComponents}\n */\nexport enum IndexModuleComponent {\n    TheaterModuleInstance = 0, //SINONIMO -> TheatreModuleInstance = 0, \n    MirroringModuleInstance = 1,\n    TheaterInternalServiceModuleInstance = 2,\n    VirtualServerModuleInstance = 1, //todo\n    ExternalVirtualMachine = 1, //todo\n    AutomaticSystem = 1, //todo\n    Border = 1 //todo\n}\n\n\n/**\n * Array utilizzato per assegnare i valori al component negli editor. \n * Usato per processare e creare i vari nodi (rete-node).\n */\nexport const ModuleComponents = [\n    new TheaterModuleInstanceNode(),\n    new MirroringModuleInstanceNode(),\n    new TheaterInternalServiceModuleInstanceNode()\n];\n\n\n/**\n * Elemento che assegna le variabili a funzioni che restituiscono una struttura inizializzata vuota dei singoli nodi.\n * @see {getEmptyReteMirroringModuleInstanceInfo}\n * @see {getEmptyReteTheaterModuleInstanceInfo}\n * @see {getEmptyReteTheaterInternalServiceModuleInstanceInfo}\n */\nexport class EmptyModuleInfo {\n    TheaterModuleInstance: ReteTheaterModuleInstanceInfo = getEmptyReteTheaterModuleInstanceInfo()\n    TheaterInternalServiceModuleInstance: ReteTheaterInternalServiceModuleInstanceInfo = getEmptyReteTheaterInternalServiceModuleInstanceInfo()\n    MirroringModuleInstance: ReteMirroringModuleInstanceInfo = getEmptyReteMirroringModuleInstanceInfo()\n    VirtualServerModuleInstance: ReteMirroringModuleInstanceInfo = getEmptyReteMirroringModuleInstanceInfo() // todo\n    ExternalVirtualMachine: ReteMirroringModuleInstanceInfo = getEmptyReteMirroringModuleInstanceInfo() // todo\n    AutomaticSystem: ReteMirroringModuleInstanceInfo = getEmptyReteMirroringModuleInstanceInfo() // todo\n    Border: ReteMirroringModuleInstanceInfo = getEmptyReteMirroringModuleInstanceInfo() // todo\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/EmptyNodeInfo.html":{"url":"classes/EmptyNodeInfo.html","title":"class - EmptyNodeInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  EmptyNodeInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/rete-settings/nodes/rete-nodes/export-rete-nodes.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Elemento che assegna le variabili a funzioni che restituiscono una struttura inizializzata vuota dei singoli nodi.\nSee {getEmptyHostInfo}\nSee {getEmptySubnetInfo}\nSee {getEmptyNetworkInfo}\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                Host\n                            \n                            \n                                    Static\n                                Network\n                            \n                            \n                                    Static\n                                Subnet\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        Host\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ReteHostInfo\n\n                    \n                \n                \n                    \n                        Valore predefinito : getEmptyHostInfo()\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-nodes/export-rete-nodes.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        Network\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ReteNetworkInfo\n\n                    \n                \n                \n                    \n                        Valore predefinito : getEmptyNetworkInfo()\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-nodes/export-rete-nodes.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        Subnet\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ReteSubnetInfo\n\n                    \n                \n                \n                    \n                        Valore predefinito : getEmptySubnetInfo()\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-nodes/export-rete-nodes.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { getEmptyHostInfo, HostNode, ReteHostInfo } from \"./host/hostNode\";\nimport { getEmptyNetworkInfo, NetworkNode, ReteNetworkInfo } from \"./network/networkNode\";\nimport { getEmptySubnetInfo, ReteSubnetInfo, SubnetNode } from \"./subnet/subnetNode\";\n\n/**\n * Enum utilizzato per indicare l'indice di riferimento degli array contenenti le informazioni.\n * @see {NodeComponents}\n */\nexport enum IndexNodeComponent {\n    Host = 0,\n    Subnet = 1,\n    Network = 2\n}\n\n/**\n * Array utilizzato per assegnare i valori al component negli editor. \n * Usato per processare e creare i vari nodi (rete-node).\n */\nexport const NodeComponents = [\n    new HostNode(),\n    new SubnetNode(),\n    new NetworkNode()\n];\n\n/**\n * Elemento che assegna le variabili a funzioni che restituiscono una struttura inizializzata vuota dei singoli nodi.\n * @see {getEmptyHostInfo}\n * @see {getEmptySubnetInfo}\n * @see {getEmptyNetworkInfo}\n */\nexport class EmptyNodeInfo {\n    static Host: ReteHostInfo = getEmptyHostInfo();\n    static Subnet: ReteSubnetInfo = getEmptySubnetInfo();\n    static Network: ReteNetworkInfo = getEmptyNetworkInfo();\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/EntityNameMappingFileDTO.html":{"url":"classes/EntityNameMappingFileDTO.html","title":"class - EntityNameMappingFileDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  EntityNameMappingFileDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsDTO/theaterDTO.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indica l'array dei mapping nome-modulo.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                name_mapping\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        name_mapping\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         NameMappingDTO[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/theaterDTO.ts:54\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ModuleInstanceDTO, TheaterInstanceDTO } from \"./moduleDTO\"\n\n/**\n * Classe che contiene gli attributi che indicano il catalogo di riferimento di un teatro.\n */\nexport class TagCatalogueDTO {\n    description: string\n    id: string | number\n    name: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano lo stato di un teatro.\n */\nexport class TheatreStatusDTO {\n    code: string\n    id: string | number\n    name: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano un elemento nella sequenza di deploy.\n */\nexport class DeployInstanceDTO {\n    moduleInstanceConfigurationUUID?: string\n    moduleInstanceName: string\n    moduleInstanceUUID: string\n    moduleUUID: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano il blueprint di un teatro.\n */\nexport class BlueprintFileDTO {\n    description: string\n    imports: string[]\n    node_templates: {[name:string]:ModuleInstanceDTO|TheaterInstanceDTO}\n    tosca_definitions_version: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano il mapping nome-modulo.\n */\nexport class NameMappingDTO {\n    display_name: string\n    module_instance_name: string\n    module_name: string\n    node_template_name: string\n}\n/**\n * Classe che contiene gli attributi che indica l'array dei mapping nome-modulo.\n */\nexport class EntityNameMappingFileDTO {\n    name_mapping: NameMappingDTO[]\n}\n\n/**\n * Classe che contiene gli attributi che indicano il teaatro.\n */\nexport class TheaterDTO {\n    author: string\n    blueprintFile: BlueprintFileDTO\n    blueprintUUID: string | number\n    createdBy: string\n    createdDate: string\n    deploymentSequence: {[index:string]:DeployInstanceDTO} //tosee\n    description: string\n    entityNameMappingFile: EntityNameMappingFileDTO\n    id: string | number\n    isLocked: boolean\n    lastModifiedBy: string\n    lastModifiedDate: string\n    lockAcquiredTimestamp: string\n    lockLastUserAcquiring: string\n    lockReleasedTimestamp: string\n    name: string\n    status: TheatreStatusDTO\n    tags: TagCatalogueDTO[]\n    uuid: string\n    version: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/ExportModule.html":{"url":"classes/ExportModule.html","title":"class - ExportModule","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  ExportModule\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/application/export/exportModule.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che ha lo scopo di convertire il modulo nel formato YAML (standard TOSCA).\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                dataEditor\n                            \n                            \n                                    Protected\n                                module\n                            \n                            \n                                    Protected\n                                virtualMachines\n                            \n                        \n                    \n                \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                convertModule\n                            \n                            \n                                findNode\n                            \n                            \n                                getHostExport\n                            \n                            \n                                getModuleExport\n                            \n                            \n                                getNetworkExport\n                            \n                            \n                                getSubnetExport\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Costruttore\n        \n            \n                \n                    \nconstructor(module: ModuleApplication, dataEditor: Data)\n                    \n                \n                        \n                            \n                                Definito in src/app/services/application/export/exportModule.ts:28\n                            \n                        \n\n                \n                    \n                            Costruttore classe ExportModule\n\n                            \n                                    Parametri :\n                                    \n                                        \n                                            \n                                                Nome\n                                                    Tipo\n                                                Opzionale\n                                            \n                                        \n                                        \n                                                \n                                                        module\n                                                  \n                                                        \n                                                                        ModuleApplication\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dataEditor\n                                                  \n                                                        \n                                                                        Data\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        dataEditor\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         Data\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/application/export/exportModule.ts:22\n                        \n                    \n\n            \n                \n                    Variabile che ha lo scopo di memorizzare i dati dell'editor fornito al costruttore.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ModuleApplication\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/application/export/exportModule.ts:17\n                        \n                    \n\n            \n                \n                    Variabile che ha lo scopo di memorizzare il modulo fornito al costruttore.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        virtualMachines\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         VirtualMachine[]\n\n                    \n                \n                \n                    \n                        Valore predefinito : []\n                    \n                \n                    \n                        \n                                Definito in src/app/services/application/export/exportModule.ts:28\n                        \n                    \n\n            \n                \n                    Variabile di supporto.\nUsata per ottimizzare la parte di inserimento delle virtual machine nel ModuleSimpleData.\nSee {getHostExport}\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        convertModule\n                        \n                    \n                \n            \n            \n                \nconvertModule()\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/export/exportModule.ts:50\n                \n            \n\n\n            \n                \n                    Funzione che si occupa del parsing del modulo in formato adattabile all'export dello YAML.\n\nInizia assegnando i valori alle variabili che possono essere semplicemente dedotte dal modulo fornito nel costruttore.\nPrende i dati forniti dell'editor e itera su questi: in base al tipo richiama la funzione che restituisce il nodo parsed come oggetto YAML.\nSee {ModuleExport}\nSee {getHostExport}\nSee {getSubnetExport}\nSee {getNetworkExport}\n\n\n\n                    \n                    \n                    \n                        Returns :         ModuleExport\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findNode\n                        \n                    \n                \n            \n            \n                \nfindNode(name: string)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/export/exportModule.ts:316\n                \n            \n\n\n            \n                \n                    Funzone che serve per trovare il nodo partendo dal nome all'interno dei dati del canvas.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     NodeData\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHostExport\n                        \n                    \n                \n            \n            \n                \ngetHostExport(node: NodeData)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/export/exportModule.ts:92\n                \n            \n\n\n            \n                \n                    Funzione di parsing dell'host e delle porte.\n\nControlla le porte di output per le connessioni in uscita.\nItera sulle connessioni (porte i/o) e controlla le connessioni depends_on (subnet) e contained_in (network)\nSee {virtualMachines}\n\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                            NodeData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getModuleExport\n                        \n                    \n                \n            \n            \n                \ngetModuleExport()\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/export/exportModule.ts:241\n                \n            \n\n\n            \n                \n                    Funzione di parsing del modulo. Creazione dell'elemento modulo nel node_template.\n\nValorizza i dati che sono direttamente reperibili dalle informazioni del Modulo.\nSalva le virtual_machine @see {virtualMachines}\nInserimento delle interfacce consumer/provisor del modulo.\n\n\n\n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        : ModuleSimpleData }\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNetworkExport\n                        \n                    \n                \n            \n            \n                \ngetNetworkExport(network: NodeData)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/export/exportModule.ts:217\n                \n            \n\n\n            \n                \n                    Funzione di parsing del network.\n\nValorizza solamente i dati che sono direttamente reperibili dalle informazioni del nodo.\n\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    network\n                                    \n                                            NodeData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSubnetExport\n                        \n                    \n                \n            \n            \n                \ngetSubnetExport(subnet: NodeData)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/export/exportModule.ts:180\n                \n            \n\n\n            \n                \n                    Funzione di parsing della subnet.\n\nValorizza i dati che sono direttamente reperibili dalle informazioni del nodo.\nControlla le porte di output (connesisoni) che si collegano con la network per le relazioni contained_in.\n\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    subnet\n                                    \n                                            NodeData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Data, InputData, NodeData, NodesData, OutputData } from \"rete/types/core/data\";\nimport { EnumNodeType, InterfacePortType } from \"src/app/models/appType\";\nimport { ModuleApplication } from \"../../modelsApplication/applicationModels\";\nimport { ModuleExport, ModuleSimpleData, NetworkSimpleData, NodeSimpleData, PortSimpleData, PropertiesMSD, PropertiesSSD, SubnetSimpleData, VirtualMachine, VirtualMachinePorts } from \"../../modelsExport/moduleExport\";\nimport { ModeTypeExport, ModuleTypeExport, NetworkTypeExport, NodeTypeExport, PortTypeExport, RelationshipsTypeExport, SubnetTypeExport, ToscaDefinitionType } from \"../../modelsExport/TypeExport\";\n\n\n/**\n * Classe che ha lo scopo di convertire il modulo nel formato YAML (standard TOSCA).\n */\nexport class ExportModule {\n\n    /**\n     * Variabile che ha lo scopo di memorizzare il modulo fornito al costruttore.\n     * @type {ModuleApplication}\n     */\n    protected module: ModuleApplication\n    /**\n     * Variabile che ha lo scopo di memorizzare i dati dell'editor fornito al costruttore.\n     * @type {Data}\n     */\n    protected dataEditor: Data\n    /**\n     * Variabile di supporto.\n     * Usata per ottimizzare la parte di inserimento delle virtual machine nel ModuleSimpleData. \n     * @see {getHostExport}\n     */\n    protected virtualMachines: VirtualMachine[] = []; \n\n    /**\n     * Costruttore classe ExportModule\n     * @param module \n     * @param dataEditor \n     */\n    constructor(module: ModuleApplication, dataEditor: Data) {\n        this.module = module;\n        this.dataEditor = dataEditor;\n    }\n\n    /**\n     * Funzione che si occupa del parsing del modulo in formato adattabile all'export dello YAML.\n     * 1) Inizia assegnando i valori alle variabili che possono essere semplicemente dedotte dal modulo fornito nel costruttore.\n     * 2) Prende i dati forniti dell'editor e itera su questi: in base al tipo richiama la funzione che restituisce il nodo parsed come oggetto YAML.\n     * @return {ModuleExport}\n     * @see {ModuleExport} \n     * @see {getHostExport}\n     * @see {getSubnetExport}\n     * @see {getNetworkExport}\n     */\n    convertModule(): ModuleExport {\n        let me: ModuleExport = new ModuleExport();\n        me.tosca_definitions_version = ToscaDefinitionType.cloudify;\n        me.description = this.module.description;\n        me.imports = this.module.imports;\n        // node_Tempates\n        let nt: { [name: string]: ModuleSimpleData | NodeSimpleData | PortSimpleData | NetworkSimpleData | SubnetSimpleData } = {};\n        // inizia a prendere i nodi del modulo\n        for (let key in this.dataEditor.nodes) {\n            let element: NodeData = this.dataEditor.nodes[key];\n            if (element.data.type === EnumNodeType.Host) {\n                nt = Object.assign({}, nt, this.getHostExport(element));\n            }\n            else if (element.data.type === EnumNodeType.Subnet) {\n                nt = { ...nt, ...this.getSubnetExport(element) }\n            }\n            else if (element.data.type === EnumNodeType.Network) {\n                nt = { ...nt, ...this.getNetworkExport(element) }\n            }\n            else {\n                console.warn(\"Module type not recognized\");\n                continue;\n            }\n        }\n        // inserimento del modulo nei templates // deve essere fatto dopo che tutti i moduli sono stati completati -> guardare this.virtualMachines\n        nt = { ...nt, ...this.getModuleExport() }\n\n        me.node_templates = nt;\n\n        return me;\n    }\n\n\n\n    /**\n     * Funzione di parsing dell'host e delle porte.\n     * 1) Controlla le porte di output per le connessioni in uscita.\n     * 2) Itera sulle connessioni (porte i/o) e controlla le connessioni depends_on (subnet) e contained_in (network)\n     * @param node \n     * @return { { [name: string]: NodeSimpleData | PortSimpleData }}\n     * @see {virtualMachines}\n     */\n    getHostExport(node: NodeData): { [name: string]: NodeSimpleData | PortSimpleData } {\n\n        //serve al ModuleSimpleData\n        let MSDvm: VirtualMachine = { \n            virtual_machine: node.data.name as unknown as string, \n            ports: [] \n        };\n        let index: number = -1;\n\n        // get node\n        let singleNode: { [name: string]: NodeSimpleData } = {}\n        let nodeSimpleData: NodeSimpleData = {\n            type: NodeTypeExport.Host,\n            properties: undefined,\n            interfaces: undefined,\n            relationships: []\n        };\n        // node relation -> port # per ora solo le connessioni con le porte\n        (node.data.Output as []).forEach(\n            (out) => {\n                nodeSimpleData.relationships.push(\n                    { type: RelationshipsTypeExport.connect_port, target: out }\n                )\n            }\n        )\n        singleNode[node.data.name as unknown as string] = nodeSimpleData;\n\n\n\n        // get node ports\n        let ports: { [name: string]: PortSimpleData } = {};\n        for (let portName in node.outputs) {\n\n            MSDvm.ports[++index] = {\n                port: portName,\n                network: \"\",\n                subnets: [],\n            };\n\n            let nodePort: OutputData = node.outputs[portName];\n            let portSimpleData: PortSimpleData = {\n                type: PortTypeExport.Port,\n                relationships: []\n            }\n            // port relation -> net & sub # controllo ambo contained_in (net) e dependes_on (sub)\n            nodePort.connections.forEach(c => {\n                // prima depends_on\n                let subnetLinkedToPort: NodeData = this.dataEditor.nodes[c.node];\n                portSimpleData.relationships.push(\n                    { type: RelationshipsTypeExport.depends_on, target: subnetLinkedToPort.data.name as unknown as string }\n                );\n                MSDvm.ports[index].subnets.push({ subnet: subnetLinkedToPort.data.name as unknown as string });\n                // poi contained_in\n                for (let key in subnetLinkedToPort.outputs) {\n                    let subnetPort: OutputData = subnetLinkedToPort.outputs[key];\n                    // controllo network connesso alla sub.\n                    subnetPort.connections.forEach(c => {\n                        let networkConnectedToSubnet: NodeData = this.dataEditor.nodes[c.node];\n                        portSimpleData.relationships.push(\n                            { type: RelationshipsTypeExport.contained_in, target: networkConnectedToSubnet.data.name as unknown as string }\n                        );\n                        MSDvm.ports[index].network = networkConnectedToSubnet.data.name as unknown as string;\n                    })\n                }\n\n            })\n\n            ports[portName] = portSimpleData;\n        }\n\n        let out: { [name: string]: NodeSimpleData | PortSimpleData } = {};\n        out = Object.assign({}, singleNode, ports);\n\n\n        this.virtualMachines.push(MSDvm);\n\n        return out;\n    }\n\n\n\n    /**\n     * Funzione di parsing della subnet.\n     * 1) Valorizza i dati che sono direttamente reperibili dalle informazioni del nodo.\n     * 2) Controlla le porte di output (connesisoni) che si collegano con la network per le relazioni contained_in.\n     * @param subnet \n     * @returns {{ [name: string]: SubnetSimpleData }}\n     */\n    getSubnetExport(subnet: NodeData): { [name: string]: SubnetSimpleData } {\n        // get subnet\n        let singleSubnet: { [name: string]: SubnetSimpleData } = {}\n        let subnetSimpleData: SubnetSimpleData = {\n            type: SubnetTypeExport.Subnet,\n            relationships: [],\n            properties: {\n                openstack_config: null,\n                use_external_resource: false,\n                subnet: {\n                    ip_version: subnet.data.version as unknown as number,\n                    cidr: subnet.data.cidr as unknown as string,\n                    enable_dhcp: subnet.data.isDhcp as unknown as boolean,\n                    gateway_ip: null\n                }\n            }\n        };\n        // subnet relation -> network (only contained in)\n        (subnet.data.Output as []).forEach(\n            (out) => {\n                subnetSimpleData.relationships.push(\n                    { type: RelationshipsTypeExport.contained_in, target: out }\n                )\n            }\n        )\n        singleSubnet[subnet.data.name as unknown as string] = subnetSimpleData;\n\n        return singleSubnet;\n    }\n\n\n    /**\n     * Funzione di parsing del network.\n     * 1) Valorizza solamente i dati che sono direttamente reperibili dalle informazioni del nodo.\n     * @param subnet \n     * @returns {{ [name: string]: NetworkSimpleData }}\n     */\n    getNetworkExport(network: NodeData): { [name: string]: NetworkSimpleData } {\n        // get subnet\n        let singleNetwork: { [name: string]: NetworkSimpleData } = {}\n        let networkSimpleData: NetworkSimpleData = {\n            type: NetworkTypeExport.Network,\n            properties: {\n                openstack_config: null,\n                use_external_resource: false,\n            }\n        };\n\n        singleNetwork[network.data.name as unknown as string] = networkSimpleData;\n\n        return singleNetwork;\n    }\n\n\n    /**\n     * Funzione di parsing del modulo. Creazione dell'elemento modulo nel node_template.\n     * 1) Valorizza i dati che sono direttamente reperibili dalle informazioni del Modulo.\n     * 2) Salva le virtual_machine @see {virtualMachines}\n     * 3) Inserimento delle interfacce consumer/provisor del modulo.\n     * @returns { [name: string]: ModuleSimpleData }\n     */\n    getModuleExport(): { [name: string]: ModuleSimpleData } {\n        let moduleExport: { [name: string]: ModuleSimpleData } = {}\n        let moduleSimpleData: ModuleSimpleData = {\n            type: ModuleTypeExport[this.module.type]?ModuleTypeExport[this.module.type]:ModuleTypeExport[0],\n            properties: {\n                mode: ModeTypeExport.managed,\n                description: this.module.description,\n                version: this.module.version as number,\n                constraints: {\n                    interface_constraints: [],\n                    module_constraints: [],\n                    network_constraints: []\n                },\n                interface_networks: {\n                    providers: [],\n                    consumers: []\n                },\n                virtual_machines: this.virtualMachines ? this.virtualMachines : null, // per il come si è reperito -> guardare this.virtualMachines\n            }\n        };\n\n        // inserisco interfacce consumer/privisor\n        let index: number = null;\n        let indexC: number = -1;\n        let indexP: number = -1;\n        let type: string = null;\n        this.module.interfaces.forEach(i => {\n            if (i.type === InterfacePortType.CONSUMER) {\n                type = \"consumers\";\n                index = ++indexC;\n            }\n            else if (i.type === InterfacePortType.PRODUCER) {\n                type = \"providers\"\n                index = ++indexP;\n            }\n            else {\n                type = null;\n                console.warn(\"type not recognized\")\n                index = null;\n                return;\n            };\n            moduleSimpleData.properties.interface_networks[type].push(\n                {\n                    interface: i.nodeName,\n                    tag: i.nodeName,\n                    network: i.network.name,\n                    subnets: []\n                }\n            )\n            // prende le network + subnet ad esso connesse (se sono connesse)\n            let network: NodeData = this.findNode(i.network.name);\n            if (network) {\n                for (let key in network.inputs) {\n                    let networkInputPort: InputData = network.inputs[key];\n                    networkInputPort.connections.forEach(c => {\n                        let subnet: NodeData = this.dataEditor.nodes[c.node];\n                        moduleSimpleData.properties.interface_networks[type][index].subnets.push(\n                            { subnet: subnet.data.name as unknown as string }\n                        )\n                    })\n                }\n            }\n            index++;\n        })\n\n        moduleExport[this.module.name] = moduleSimpleData;\n\n        return moduleExport;\n    }\n\n    /**\n     * Funzone che serve per trovare il nodo partendo dal nome all'interno dei dati del canvas.\n     * @param name \n     * @returns {NodeData}\n     */\n    findNode(name: string): NodeData {\n        let n: NodeData = undefined\n        for (let key in this.dataEditor.nodes) {\n            let node: NodeData = this.dataEditor.nodes[key];\n            if ((node.data.name as unknown as string) === name) {\n                n = node;\n                break;\n            }\n        }\n        return n\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"injectables/ExportService.html":{"url":"injectables/ExportService.html","title":"injectable - ExportService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ExportService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/application/export/export.service.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Servizio di export del canvas/editor sottoforma di file (scaricabile)\n\nPrevede l'export del teatro e modulo sottoforma di JSON (da poter utilizzare nell'applicazione).\nPrevede l'export del teatro e modulo sottoforma di YAML (standard tosca).\n\n\n            \n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                moduleType\n                            \n                            \n                                    Protected\n                                theaterType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                exportModuleToJSON\n                            \n                            \n                                exportModuleToYAML\n                            \n                            \n                                exportTheaterToJSON\n                            \n                            \n                                exportTheaterToYAML\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Costruttore\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Definito in src/app/services/application/export/export.service.ts:32\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        exportModuleToJSON\n                        \n                    \n                \n            \n            \n                \nexportModuleToJSON(module: ModuleApplication, editor: Data)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/export/export.service.ts:54\n                \n            \n\n\n            \n                \n                    Funzione che esegue l'export di un modulo nel formato JSON (application).\nSee {exportToJson}\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    module\n                                    \n                                                ModuleApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    editor\n                                    \n                                                Data\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        exportModuleToYAML\n                        \n                    \n                \n            \n            \n                \nexportModuleToYAML(module: ModuleApplication, editor: Data)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/export/export.service.ts:43\n                \n            \n\n\n            \n                \n                    Funzione che esegue l'export di un modulo nel formato YAML standrard tosca.\nSee {ExportModule}\nSee {exportToYaml}\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    module\n                                    \n                                                ModuleApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    editor\n                                    \n                                                Data\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        exportTheaterToJSON\n                        \n                    \n                \n            \n            \n                \nexportTheaterToJSON(theater: TheaterApplication, editor: Data)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/export/export.service.ts:77\n                \n            \n\n\n            \n                \n                    Funzione che esegue l'export di un teatro nel formato JSON (application).\nSee {exportToJson}\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    theater\n                                    \n                                                TheaterApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    editor\n                                    \n                                                Data\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        exportTheaterToYAML\n                        \n                    \n                \n            \n            \n                \nexportTheaterToYAML(theater: TheaterApplication, editor: Data)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/export/export.service.ts:66\n                \n            \n\n\n            \n                \n                    Funzione che esegue l'export di un teatro nel formato YAML standrard tosca.\nSee {exportTheater}\nSee {exportToYaml}\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    theater\n                                    \n                                                TheaterApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    editor\n                                    \n                                                Data\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moduleType\n                        \n                    \n                \n            \n                \n                    \n                        Valore predefinito : \".\"+SubjectType.MODULE.toLowerCase()\n                    \n                \n                    \n                        \n                                Definito in src/app/services/application/export/export.service.ts:32\n                        \n                    \n\n            \n                \n                    Variabile che indica l'estensione aggiuntiva al nome e tipo del file\nSe si dovesse scaricare l'application (json) di un modulo, essa sarebbe: nomeMosulo.module.json\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        theaterType\n                        \n                    \n                \n            \n                \n                    \n                        Valore predefinito : \".\"+SubjectType.THEATER.toLowerCase()\n                    \n                \n                    \n                        \n                                Definito in src/app/services/application/export/export.service.ts:26\n                        \n                    \n\n            \n                \n                    Variabile che indica l'estensione aggiuntiva al nome e tipo del file\nSe si dovesse scaricare l'application (json) di un teatro, essa sarebbe: nomeTeatro.theater.json\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Data } from 'rete/types/core/data';\nimport { ModuleApplication, TheaterApplication } from '../../modelsApplication/applicationModels';\nimport { ModuleExport } from '../../modelsExport/moduleExport';\nimport { ExportModule } from './exportModule';\nimport { ExportTheater } from './exportTheater';\nimport { TheaterExport } from '../../modelsExport/theaterExport';\nimport { SubjectType } from 'src/app/models/appType';\nimport { exportToYaml, exportToJson } from './exportTo';\n\n/**\n * Servizio di export del canvas/editor sottoforma di file (scaricabile)\n * - Prevede l'export del teatro e modulo sottoforma di JSON (da poter utilizzare nell'applicazione).\n * - Prevede l'export del teatro e modulo sottoforma di YAML (standard tosca).\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ExportService {\n\n  /**\n   * Variabile che indica l'estensione aggiuntiva al nome e tipo del file\n   * @example \n   * Se si dovesse scaricare l'application (json) di un teatro, essa sarebbe: nomeTeatro.theater.json \n   */\n  protected theaterType=\".\"+SubjectType.THEATER.toLowerCase();\n    /**\n   * Variabile che indica l'estensione aggiuntiva al nome e tipo del file\n   * @example \n   * Se si dovesse scaricare l'application (json) di un modulo, essa sarebbe: nomeMosulo.module.json \n   */\n  protected moduleType=\".\"+SubjectType.MODULE.toLowerCase();\n\n  constructor() { }\n\n  /**\n   * Funzione che esegue l'export di un modulo nel formato YAML standrard tosca.\n   * @param module \n   * @param editor \n   * @see {ExportModule}\n   * @see {exportToYaml}\n   */\n  exportModuleToYAML(module: ModuleApplication, editor: Data) {\n    let data: ModuleExport = new ExportModule(module, editor).convertModule();\n    return exportToYaml(module.name, data);\n  }\n\n  /**\n   * Funzione che esegue l'export di un modulo nel formato JSON (application).\n   * @param module \n   * @param editor \n   * @see {exportToJson} \n   */\n  exportModuleToJSON(module: ModuleApplication, editor: Data) {\n    return exportToJson(module.name+this.moduleType, module);\n  }\n\n\n  /**\n   * Funzione che esegue l'export di un teatro nel formato YAML standrard tosca.\n   * @param module \n   * @param editor \n   * @see {exportTheater}\n   * @see {exportToYaml}\n   */\n  exportTheaterToYAML(theater: TheaterApplication, editor: Data) {\n    let data: TheaterExport = new ExportTheater(theater, editor).convertTheater();\n    return exportToYaml(theater.name, data);\n  }\n\n  /**\n   * Funzione che esegue l'export di un teatro nel formato JSON (application).\n   * @param module \n   * @param editor \n   * @see {exportToJson} \n   */\n  exportTheaterToJSON(theater: TheaterApplication, editor: Data) {\n    return exportToJson(theater.name+this.theaterType, theater);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/ExportTheater.html":{"url":"classes/ExportTheater.html","title":"class - ExportTheater","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  ExportTheater\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/application/export/exportTheater.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che ha lo scopo di convertire il teatro nel formato YAML (standard TOSCA).\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                dataEditor\n                            \n                            \n                                theater\n                            \n                        \n                    \n                \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                convertTheater\n                            \n                            \n                                getModuleInstanceExport\n                            \n                            \n                                getTheaterExport\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Costruttore\n        \n            \n                \n                    \nconstructor(theater: TheaterApplication, dataEditor: Data)\n                    \n                \n                        \n                            \n                                Definito in src/app/services/application/export/exportTheater.ts:19\n                            \n                        \n\n                \n                    \n                            Costruttore classe ExportTheater\n\n                            \n                                    Parametri :\n                                    \n                                        \n                                            \n                                                Nome\n                                                    Tipo\n                                                Opzionale\n                                            \n                                        \n                                        \n                                                \n                                                        theater\n                                                  \n                                                        \n                                                                        TheaterApplication\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dataEditor\n                                                  \n                                                        \n                                                                        Data\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        dataEditor\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         Data\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/application/export/exportTheater.ts:19\n                        \n                    \n\n            \n                \n                    Variabile che ha lo scopo di memorizzare i dati dell'editor fornito al costruttore.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        theater\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         TheaterApplication\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/application/export/exportTheater.ts:14\n                        \n                    \n\n            \n                \n                    Variabile che ha lo scopo di memorizzare il teatro fornito al costruttore.\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        convertTheater\n                        \n                    \n                \n            \n            \n                \nconvertTheater()\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/export/exportTheater.ts:37\n                \n            \n\n\n            \n                \n                    Funzione che si occupa del parsing del modulo in formato adattabile all'export dello YAML.\n\nInizia assegnando i valori alle variabili che possono essere semplicemente dedotte dal teatro fornito nel costruttore.\nPrende i dati forniti dell'editor e itera su questi - restituisce il modulo parsed come oggetto YAML.\n\n\n\n                    \n                    \n                    \n                        Returns :         TheaterExport\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getModuleInstanceExport\n                        \n                    \n                \n            \n            \n                \ngetModuleInstanceExport(module: NodeData)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/export/exportTheater.ts:62\n                \n            \n\n\n            \n                \n                    Funzione che prende in input un nodo-modulo e lo converte in un oggetto adattabile allo YAML (TOSCA).\n\nInizia valorizzando i dati immediatamente disponibile dalle info del nodo.\nItera sulle connessioni in ingresso del nodo e salva le varie associazioni.\n\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    module\n                                    \n                                            NodeData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTheaterExport\n                        \n                    \n                \n            \n            \n                \ngetTheaterExport()\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/export/exportTheater.ts:101\n                \n            \n\n\n            \n                \n                    Funzione di parsing del teatro. Creazione dell'elemento teatro nel node_template.\n\nValorizza i dati che sono direttamente reperibili dalle informazioni del Modulo.\nSalva le informazioni delle aree e dei tag.\n\n\n\n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        : TheaterSimpleData }\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Data, InputData, NodeData } from \"rete/types/core/data\";\nimport { TheaterApplication } from \"../../modelsApplication/applicationModels\";\nimport { ModuleInstanceSimpleData, PropertiesMISD, TheaterExport, TheaterSimpleData } from \"../../modelsExport/theaterExport\";\nimport { ModeTypeExport, ModuleTypeExport, TheaterTypeExport, ToscaDefinitionType } from \"../../modelsExport/TypeExport\";\n\n/**\n * Classe che ha lo scopo di convertire il teatro nel formato YAML (standard TOSCA).\n */\nexport class ExportTheater {\n    /**\n     * Variabile che ha lo scopo di memorizzare il teatro fornito al costruttore.\n     * @type {TheaterApplication}\n     */\n    theater: TheaterApplication\n    /**\n     * Variabile che ha lo scopo di memorizzare i dati dell'editor fornito al costruttore.\n     * @type {Data}\n     */\n    dataEditor: Data\n\n    /**\n     * Costruttore classe ExportTheater\n     * @param theater \n     * @param dataEditor \n     */\n    constructor(theater: TheaterApplication, dataEditor: Data) {\n        this.theater = theater;\n        this.dataEditor = dataEditor;\n    }\n\n    /**\n     * Funzione che si occupa del parsing del modulo in formato adattabile all'export dello YAML.\n     * 1) Inizia assegnando i valori alle variabili che possono essere semplicemente dedotte dal teatro fornito nel costruttore.\n     * 2) Prende i dati forniti dell'editor e itera su questi - restituisce il modulo parsed come oggetto YAML.\n     * @returns {TheaterExport}\n     */\n    convertTheater(): TheaterExport {\n        let te: TheaterExport = new TheaterExport();\n        te.tosca_definitions_version = ToscaDefinitionType.cloudify\n        te.description = this.theater.description;\n        te.imports = this.theater.blueprintFile.imports;\n        let nt: { [name: string]: TheaterSimpleData | ModuleInstanceSimpleData } = {}\n        // inizia a prendere i moduli del teatro\n        for (let key in this.dataEditor.nodes) {\n            let element: NodeData = this.dataEditor.nodes[key];\n            nt = Object.assign({}, nt, this.getModuleInstanceExport(element));\n        }\n        nt = { ...nt, ...this.getTheaterExport() }\n        te.node_templates = nt;\n        return te;\n    }\n\n\n\n    /**\n     * Funzione che prende in input un nodo-modulo e lo converte in un oggetto adattabile allo YAML (TOSCA).\n     * 1) Inizia valorizzando i dati immediatamente disponibile dalle info del nodo.\n     * 2) Itera sulle connessioni in ingresso del nodo e salva le varie associazioni.\n     * @param module \n     * @returns  {{ [name: string]: ModuleInstanceSimpleData }}\n     */\n    getModuleInstanceExport(module: NodeData): { [name: string]: ModuleInstanceSimpleData } {\n        let mi: { [name: string]: ModuleInstanceSimpleData } = {};\n        let moduleInstanceSimpleData: ModuleInstanceSimpleData = {\n            type: ModuleTypeExport[module.data.type as unknown as string] ? ModuleTypeExport[module.data.type as unknown as string] : ModuleTypeExport[0],\n            properties: {\n                module: module.data.module as unknown as string,\n                version: module.data.version as unknown as string,\n                area: module.data.area as unknown as string,\n                sequence: module.data.sequence as unknown as number,\n                consumer_interface_link: [],\n                sources: null,\n            }\n        }\n\n        for (let key in module.inputs) {\n            let consumerIF: InputData = module.inputs[key];\n            consumerIF.connections.forEach(c => {\n                let moduleConnected: NodeData = this.dataEditor.nodes[c.node];\n                moduleInstanceSimpleData.properties.consumer_interface_link.push(\n                    {\n                        local_interface: key,\n                        module_interface: moduleConnected.data.name as unknown as string,\n                        remote_interface: c.output\n                    }\n                )\n            })\n        }\n\n        mi[module.data.name as unknown as string] = moduleInstanceSimpleData;\n        return mi;\n    }\n\n\n    /**\n     * Funzione di parsing del teatro. Creazione dell'elemento teatro nel node_template.\n     * 1) Valorizza i dati che sono direttamente reperibili dalle informazioni del Modulo.\n     * 3) Salva le informazioni delle aree e dei tag.\n     * @returns { [name: string]: TheaterSimpleData }\n     */\n    getTheaterExport(): { [name: string]: TheaterSimpleData } {\n        let ti: { [name: string]: TheaterSimpleData } = {};\n        let theaterSimpleData: TheaterSimpleData = {\n            type: TheaterTypeExport.Theater,\n            properties: {\n                version: this.theater.version,\n                description: this.theater.version,\n                mode: ModeTypeExport.managed,\n                author: this.theater.author,\n                areas: [],\n                tags: [],\n            }\n        }\n\n        this.theater.properties.areas.forEach(a => {\n            theaterSimpleData.properties.areas.push(\n                { area: a.area, description: a.description }\n            )\n        });\n\n        this.theater.tags.forEach(t => {\n            theaterSimpleData.properties.tags.push(\n                { tag: t.name }\n            )\n        });\n\n        ti[this.theater.name] = theaterSimpleData;\n        return ti\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"injectables/FileService.html":{"url":"injectables/FileService.html","title":"injectable - FileService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FileService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/application/file/file.service.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Servizio di gestione di importing file da locale all'app.\n\n            \n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                moduleType\n                            \n                            \n                                    Protected\n                                selectedFile\n                            \n                            \n                                    Protected\n                                theaterType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                getFile\n                            \n                            \n                                isFileValid\n                            \n                            \n                                    Async\n                                onFileSelected\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Costruttore\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Definito in src/app/services/application/file/file.service.ts:31\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        getFile\n                        \n                    \n                \n            \n            \n                \ngetFile()\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/file/file.service.ts:69\n                \n            \n\n\n            \n                \n                    Funzione cha come scopo ritornare il file (sottoforma di oggetto parserizzato) captato dall'input.\n\n\n                    \n                    \n                    \n                        Returns :     File\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isFileValid\n                        \n                    \n                \n            \n            \n                \nisFileValid(file: File, data: any, filefor: SubjectType)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/file/file.service.ts:79\n                \n            \n\n\n            \n                \n                    Funzione che ha lo scopo di controllare se il file è accettabile dall'applicazione o meno.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                            File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filefor\n                                    \n                                                SubjectType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onFileSelected\n                        \n                    \n                \n            \n            \n                \n                    \n                    onFileSelected(event: any, filefor: SubjectType)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/file/file.service.ts:41\n                \n            \n\n\n            \n                \n                    Funzione che viene richiamata per gestire l'evento dell'input una volta captato il file.\nSi occupa anche di parserizzare il file sottoforma di oggetto (json).\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filefor\n                                    \n                                                SubjectType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moduleType\n                        \n                    \n                \n            \n                \n                    \n                        Valore predefinito : \".\" + SubjectType.MODULE.toLowerCase() + \".json\"\n                    \n                \n                    \n                        \n                                Definito in src/app/services/application/file/file.service.ts:24\n                        \n                    \n\n            \n                \n                    Variabile che indica l'estensione aggiuntiva al nome e tipo del file\nSe si dovesse scaricare l'application (json) di un modulo, essa sarebbe: nomeMosulo.module.json\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        selectedFile\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     File\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/application/file/file.service.ts:31\n                        \n                    \n\n            \n                \n                    Variabile che ha come scopo il salvataggio di informazioni del file.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        theaterType\n                        \n                    \n                \n            \n                \n                    \n                        Valore predefinito : \".\" + SubjectType.THEATER.toLowerCase() + \".json\"\n                    \n                \n                    \n                        \n                                Definito in src/app/services/application/file/file.service.ts:18\n                        \n                    \n\n            \n                \n                    Variabile che indica l'estensione aggiuntiva al nome e tipo del file\nSe si dovesse scaricare l'application (json) di un teatro, essa sarebbe: nomeTeatro.theater.json\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { SubjectType } from 'src/app/models/appType';\nimport { ModuleApplication, TheaterApplication } from '../../modelsApplication/applicationModels';\n\n/**\n * Servizio di gestione di importing file da locale all'app.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class FileService {\n\n  /**\n * Variabile che indica l'estensione aggiuntiva al nome e tipo del file\n * @example \n * Se si dovesse scaricare l'application (json) di un teatro, essa sarebbe: nomeTeatro.theater.json \n */\n  protected theaterType = \".\" + SubjectType.THEATER.toLowerCase() + \".json\";\n  /**\n * Variabile che indica l'estensione aggiuntiva al nome e tipo del file\n * @example \n * Se si dovesse scaricare l'application (json) di un modulo, essa sarebbe: nomeMosulo.module.json \n */\n  protected moduleType = \".\" + SubjectType.MODULE.toLowerCase() + \".json\";\n\n\n  /**\n   * Variabile che ha come scopo il salvataggio di informazioni del file.\n   * @type {File}\n   */\n  protected selectedFile: File;\n\n  constructor() { }\n\n  /**\n   * Funzione che viene richiamata per gestire l'evento dell'input una volta captato il file.\n   * Si occupa anche di parserizzare il file sottoforma di oggetto (json).\n   * @param event \n   * @return {Promise}\n   */\n  async onFileSelected(event: any, filefor:SubjectType): Promise {\n    this.selectedFile = event.target.files[0];\n    const fileReader = new FileReader();\n    fileReader.readAsText(this.selectedFile, \"UTF-8\");\n    return new Promise((resolve, reject) => {\n      fileReader.onload = async () => {\n        try {\n          var data = JSON.parse(fileReader.result as string)\n          if (this.isFileValid(this.selectedFile, data, filefor))\n            resolve(data)\n          else\n            reject(\"The file selected is not valid\")\n        }\n        catch (e) {\n          reject(e);\n        }\n      }\n      fileReader.onerror = (error) => {\n        reject(\"Unable to read file.\");\n      }\n    }\n    )\n  }\n\n  /**\n   * Funzione cha come scopo ritornare il file (sottoforma di oggetto parserizzato) captato dall'input.\n   * @returns \n   */\n  getFile(): File {\n    return this.selectedFile;\n  }\n\n  /**\n   * Funzione che ha lo scopo di controllare se il file è accettabile dall'applicazione o meno.\n   * @param file \n   * @param data \n   * @returns {boolean}\n   */\n  isFileValid(file: File, data: any, filefor: SubjectType): boolean {\n    if (file.type !== \"application/json\")\n      return false\n    if (file.name.includes(this.theaterType) && filefor === SubjectType.THEATER) {\n      if ((data as TheaterApplication).validateObject === \"theater\")\n        return true\n      else\n        return false\n    }\n    else if (file.name.includes(this.moduleType)  && filefor === SubjectType.MODULE) {\n      if ((data as ModuleApplication).validateObject === \"module\")\n        return true\n      else\n        return false\n    }\n    else\n      return false\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/FlavorApplication.html":{"url":"classes/FlavorApplication.html","title":"class - FlavorApplication","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  FlavorApplication\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsApplication/applicationModels.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        FlavorBasicInfo\n            \n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                flavorName\n                            \n                            \n                                cpu\n                            \n                            \n                                disk\n                            \n                            \n                                ram\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        flavorName\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsApplication/applicationModels.ts:116\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cpu\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     number | string\n\n                    \n                \n                        \n                            \n                                ereditato da         FlavorBasicInfo\n\n                            \n                        \n                    \n                        \n                                Definito in         FlavorBasicInfo:5\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        disk\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     number | string\n\n                    \n                \n                        \n                            \n                                ereditato da         FlavorBasicInfo\n\n                            \n                        \n                    \n                        \n                                Definito in         FlavorBasicInfo:6\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ram\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     number | string\n\n                    \n                \n                        \n                            \n                                ereditato da         FlavorBasicInfo\n\n                            \n                        \n                    \n                        \n                                Definito in         FlavorBasicInfo:7\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ReteHostInfo } from \"src/app/rete-settings/nodes/rete-nodes/host/hostNode\";\nimport { ReteNetworkInfo } from \"src/app/rete-settings/nodes/rete-nodes/network/networkNode\";\nimport { ReteSubnetInfo } from \"src/app/rete-settings/nodes/rete-nodes/subnet/subnetNode\";\nimport { ReteMirroringModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/mirroringModuleInstance/mirroringModuleInstanceNode\";\nimport { ReteTheaterInternalServiceModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/theaterInternalServiceModuleInstance/theaterInternalServiceModuleInstanceNode\";\nimport { ReteTheaterModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/theaterModuleInstance/theaterModuleInstanceNode\";\nimport { FlavorBasicInfo } from \"../modelsDTO/falvorDTO\";\nimport { HostModuleDTO } from \"../modelsDTO/hostDTO\";\nimport { ModuleNetworkInterfaceDTO, ModuleInstancePropertiesDTO, SimpleModuleDTO, TheaterInstancePropertiesDTO, ModuleInstanceDTO, ModuleDTO, SimpleAreaDTO, AreaDTO } from \"../modelsDTO/moduleDTO\";\nimport { TheaterDTO } from \"../modelsDTO/theaterDTO\";\n\n\nexport interface CommonModule {\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n}\n\n\n/**\n * Classe contenente gli attributi utilizzati per le operazioni che coinvolgono i moduli.\n * ps. Questa struttura è prettamente utilizzata nella chiamata relativa al singolo modulo.\n */\nexport class ModuleApplication extends ModuleDTO implements CommonModule {\n    imports: string[] // perchè nell'export yaml è previsto\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n    // serve per validare il json risultante dal parsing del theaterApplication\n    validateObject?: string = \"module\";\n}\n// PER IMPLEMENTAZIONI FUTURE, PER COERENZA, PRENDERE DIRETTAMENTE I SINGOLI NODI DALLA CHIAMATA ESCLUSIVA E NON DA QUELLA CHE RESTITUISCE TUTTI I TEATRI\n/**\n * Classe contenente gli attributi utilizzati per le operazioni che coinvolgono i moduli.\n * ps. Questa struttura è prettamente utilizzata nella chiamata che prende tutti i moduli del teatro.\n */\nexport class SimpleModuleApplication extends SimpleModuleDTO implements CommonModule {\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n}\n\n\nexport class ReteConnection {\n    from: string;\n    port_src: string;\n    to: string;\n    port_dst: string;\n}\n\nexport interface TopologyList {\n    rete: any;\n    topology?: TopologyElement\n}\nexport class TopologyElement {\n    elements: { [name: string]: any };\n    connection: ReteConnection[]\n}\n\n// apptype module topology\n\nexport class NodeTopologyElement implements TopologyElement {\n    elements: { [hostName: string]: ReteHostInfo | ReteSubnetInfo | ReteNetworkInfo };\n    connection: ReteConnection[]\n}\n\nexport interface ModuleTopology extends TopologyList {\n    rete: ReteMirroringModuleInstanceInfo | ReteTheaterInternalServiceModuleInstanceInfo | ReteTheaterModuleInstanceInfo\n    topology: NodeTopologyElement;\n}\n\nexport class ModuleInstance extends ModuleInstanceDTO implements ModuleTopology {\n    // moduleTopology data\n    rete: ReteTheaterModuleInstanceInfo | ReteTheaterInternalServiceModuleInstanceInfo | ReteMirroringModuleInstanceInfo;\n    topology: NodeTopologyElement;\n    // other data\n    moduleInfo: SimpleModuleApplication\n}\n\n// apptype theater theater\n\nexport interface TheaterTopology extends TopologyElement {\n    elements: { [hostName: string]: ModuleInstance };\n    connection: ReteConnection[];\n}\n\nexport class TheaterApplication extends TheaterDTO implements TheaterTopology {\n    // theaterTopology data\n    elements: { [hostName: string]: ModuleInstance; };\n    connection: ReteConnection[];\n    // other data\n    properties: TheaterInstancePropertiesDTO;\n    topology: TheaterTopology;\n    // serve per validare il json risultante dal parsing del theaterApplication\n    validateObject?: string = \"theater\";\n}\n\nexport class AreaApplication extends AreaDTO {\n    color?: string;\n}\nexport class AreaColorDTO extends SimpleAreaDTO {\n    color: string;\n}\n\n\nexport class FlavorApplication extends FlavorBasicInfo {\n    flavorName: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/FlavorBasicInfo.html":{"url":"classes/FlavorBasicInfo.html","title":"class - FlavorBasicInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  FlavorBasicInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsDTO/falvorDTO.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi generali che indicano il flavor.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                cpu\n                            \n                            \n                                disk\n                            \n                            \n                                ram\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        cpu\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     number | string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/falvorDTO.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        disk\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     number | string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/falvorDTO.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ram\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     number | string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/falvorDTO.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class FlavorBasicInfo {\n    cpu: number | string;\n    disk: number | string;\n    ram: number | string;\n}\n\n/**\n * Classe che contiene gli attributi che indicano l'environment virtualizzato del flavor.\n */\nexport class VirtualizationEnvironmentTypeDTO {\n    description: string\n    id: number\n    isEnabled: true\n    name: string\n    nameAlias: string\n    supportMachineId: number\n    uuid: string\n}\n\n\n/**\n * Classe che contiene gli attributi che indicano i flavor utilizzabili.\n * @extends {FlavorBasicInfo}\n */\nexport class FlavorDTO extends FlavorBasicInfo {\n    name: string;\n    detailJson: {};\n    id: number | string;\n    uuid: string;\n    virtualizationEnvironmentType: VirtualizationEnvironmentTypeDTO;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/FlavorDTO.html":{"url":"classes/FlavorDTO.html","title":"class - FlavorDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  FlavorDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsDTO/falvorDTO.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano i flavor utilizzabili.\n\n            \n\n            \n                Extends\n            \n            \n                        FlavorBasicInfo\n            \n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                detailJson\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                uuid\n                            \n                            \n                                virtualizationEnvironmentType\n                            \n                            \n                                cpu\n                            \n                            \n                                disk\n                            \n                            \n                                ram\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        detailJson\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     literal type\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/falvorDTO.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     number | string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/falvorDTO.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/falvorDTO.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uuid\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/falvorDTO.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        virtualizationEnvironmentType\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         VirtualizationEnvironmentTypeDTO\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/falvorDTO.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cpu\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     number | string\n\n                    \n                \n                        \n                            \n                                ereditato da         FlavorBasicInfo\n\n                            \n                        \n                    \n                        \n                                Definito in         FlavorBasicInfo:5\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        disk\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     number | string\n\n                    \n                \n                        \n                            \n                                ereditato da         FlavorBasicInfo\n\n                            \n                        \n                    \n                        \n                                Definito in         FlavorBasicInfo:6\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ram\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     number | string\n\n                    \n                \n                        \n                            \n                                ereditato da         FlavorBasicInfo\n\n                            \n                        \n                    \n                        \n                                Definito in         FlavorBasicInfo:7\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class FlavorBasicInfo {\n    cpu: number | string;\n    disk: number | string;\n    ram: number | string;\n}\n\n/**\n * Classe che contiene gli attributi che indicano l'environment virtualizzato del flavor.\n */\nexport class VirtualizationEnvironmentTypeDTO {\n    description: string\n    id: number\n    isEnabled: true\n    name: string\n    nameAlias: string\n    supportMachineId: number\n    uuid: string\n}\n\n\n/**\n * Classe che contiene gli attributi che indicano i flavor utilizzabili.\n * @extends {FlavorBasicInfo}\n */\nexport class FlavorDTO extends FlavorBasicInfo {\n    name: string;\n    detailJson: {};\n    id: number | string;\n    uuid: string;\n    virtualizationEnvironmentType: VirtualizationEnvironmentTypeDTO;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"injectables/FlavorService.html":{"url":"injectables/FlavorService.html","title":"injectable - FlavorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FlavorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/api/flavor.service.ts\n        \n\n\n\n\n\n            \n    Indice\n    \n        \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getAllFlavor\n                            \n                            \n                                    Async\n                                getFlavorByID\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Costruttore\n        \n            \n                \n                    \nconstructor(http: HttpClient, tokenService: TokenService)\n                    \n                \n                        \n                            \n                                Definito in src/app/services/api/flavor.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parametri :\n                                    \n                                        \n                                            \n                                                Nome\n                                                    Tipo\n                                                Opzionale\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tokenService\n                                                  \n                                                        \n                                                                        TokenService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllFlavor\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllFlavor()\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/api/flavor.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getFlavorByID\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFlavorByID(id: number | string)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/api/flavor.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            number | string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { FlavorDTO } from '../modelsDTO/falvorDTO';\nimport { TokenService } from '../token/token.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FlavorService {\n\n  constructor(private http: HttpClient, private tokenService: TokenService) { }\n\n  async getAllFlavor(): Promise {\n\n    let link: string = environment.getAllFlavor;\n\n    const promise = await new Promise((resolve, reject) => {\n      this.http.get\n        (\n          link,\n          this.tokenService.getHttpgetOption()\n        )\n        .toPromise()\n        .then(\n          (res: FlavorDTO[]) => {\n            resolve(res);\n          }\n        )\n        .catch(\n          error => {\n            reject(error);\n          }\n        );\n    }\n    );\n    return promise;\n  }\n  \n  async getFlavorByID(id: number|string): Promise {\n\n    let link: string = environment.getAllFlavor+'/'+id;\n\n    const promise = await new Promise((resolve, reject) => {\n      this.http.get\n        (\n          link,\n          this.tokenService.getHttpgetOption()\n        )\n        .toPromise()\n        .then(\n          (res: FlavorDTO) => {\n            resolve(res);\n          }\n        )\n        .catch(\n          error => {\n            reject(error);\n          }\n        );\n    }\n    );\n    return promise;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/GenericParameterDTO.html":{"url":"classes/GenericParameterDTO.html","title":"class - GenericParameterDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  GenericParameterDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsDTO/moduleDTO.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano un parametro generico.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                default\n                            \n                            \n                                description\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        default\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:49\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PageableDTO, SortDTO } from './elementDTO';\nimport { NetworkDTO } from './networkDTO';\nimport { TheaterDTO } from './theaterDTO';\n\n/**\n * Classe che contiene gli attributi che indicano l'insieme dei moduli ritornati dal teatro.\n */\nexport class ModuleListDTO {\n    content: SimpleModuleDTO[]\n    pageable: PageableDTO\n    last: boolean\n    totalPages: string | number\n    totalElements: string | number\n    size: string | number\n    number: string | number\n    sort: SortDTO\n    numberOfElements: string | number\n    first: boolean\n    empty: boolean\n}\n\n/**\n * Classe che contiene gli attributi che indica il catalogo del tipo.\n */\nexport class TypesCatalogueDTO {\n    group: string\n    id: string | number\n    parentId: {}\n    value: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano la classificazione del modulo.\n */\nexport class ModuleClassificationDTO {\n    blueprintType: string\n    category: string\n    expectedInstanceType: string\n    id: string | number\n    mcClass: string\n    type: string\n    uuid: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano un parametro generico.\n */\nexport class GenericParameterDTO {\n    type: string\n    default: string\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano i parametri di configurazione di un modulto.\n */\nexport class ConfigurationTemplateDTO {\n    anchor_parameters: { [name: string]: GenericParameterDTO | string }\n    instance_parameters: { [name: string]: GenericParameterDTO }\n    structural_parameters: { [name: string]: GenericParameterDTO }\n    fixed_parameters: { [name: string]: GenericParameterDTO }\n    control_parameters: { [name: string]: GenericParameterDTO }\n    infrastructure_parameters: { [name: string]: GenericParameterDTO }\n    module: string\n    description: string\n    category: string\n    version: string | number\n    platform: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano la modalità di un modulo.\n */\nexport class ModuleModeDTO {\n    code: string\n    id: string | number\n    name: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano lo stato di un modulo.\n */\nexport class ModuleStatusDTO {\n    descriptionCode: string\n    id: string | number\n    name: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le statitistiche di un modulo.\n */\nexport class StatisticItemDTO {\n    error: string | number\n    updated: string | number\n    inserted: string | number\n}\n\n/**\n * Classe che contiene gli attributi che indicano il modulo (simple - in dipendenza del teatro).\n */\nexport class SimpleModuleDTO {\n    createdBy: string\n    createdDate: string\n    description: string\n    id: string | number\n    isLocked: boolean\n    lastModifiedBy: string\n    lastModifiedDate: string\n    lockAcquiredTimestamp: string\n    lockLastUserAcquiring: string\n    lockReleasedTimestamp: string\n    name: string\n    status: ModuleStatusDTO\n    type?: string | any\n    uuid: string\n    version: string | number\n}\n\n/**\n * Classe che contiene gli attributi che indicano il modulo (complex - ritorato da call appostita).\n * @extends {SimpleModuleDTO}\n */\nexport class ModuleDTO extends SimpleModuleDTO {\n    attachments: string[]\n    author: string\n    capabilities: { [name: string]: string }\n    catalog1: TypesCatalogueDTO\n    catalog2: TypesCatalogueDTO\n    catalog3: TypesCatalogueDTO\n    classification: ModuleClassificationDTO\n    configurationTemplate: ConfigurationTemplateDTO\n    detailProperties: {}\n    input: { [name: string]: string }\n    output: { [name: string]: string }\n    mode: ModuleModeDTO\n    statistics: { [name: string]: StatisticItemDTO | string | number }\n    tags: []\n}\n\n/**\n * Classe che contiene gli attributi che indicano le interfacce esposte da un modulo.\n */\nexport class ModuleNetworkInterfaceDTO {\n    id: string | number\n    label: string\n    module: ModuleDTO\n    network: NetworkDTO\n    nodeName: string\n    type: string\n    uuid: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le connessioni interfaccia-modulo.\n */\nexport class ConsumerInterfaceLinkDTO {\n    local_interface: string\n    module_instance: string\n    remote_interface: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà dell'istanza di un modulo all'interno del node_templates.\n */\nexport class ModuleInstancePropertiesDTO {\n    area: string\n    description: string\n    module: string\n    version: string | number\n    sequence: string | number\n    consumer_interfaces_link: ConsumerInterfaceLinkDTO[]\n}\n\n\n/**\n * Classe che contiene gli attributi che indicano l'area di appartenenza di un modulo (complex).\n */\nexport class AreaDTO {\n    id: string | number;\n    uuid: string;\n    name: string;\n    description: string;\n    theater: TheaterDTO;\n    deleted: boolean | string;\n}\n\n/**\n * Classe che contiene gli attributi che indicano l'area di appartenenza di un modulo (simple).\n */\nexport class SimpleAreaDTO {\n    area: string\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà dell'istanza di un teatro all'interno del node_templates.\n */\nexport class TheaterInstancePropertiesDTO {\n    mode: string\n    tags: TagTIP[]\n    areas: SimpleAreaDTO[]\n    author: string\n    version: string | number\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano un tag.\n */\nexport class TagTIP{\n    tag: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano in via generale le caratteristiche di un elemento che deve essere presente nel node_templates.\n */\nexport class ElementIntoTheaterDTO {  // goes into map in blueprint [name:string]: Module...\n    properties: ModuleInstancePropertiesDTO | TheaterInstancePropertiesDTO\n    type: string\n}\n\n\n/**\n * Classe che contiene gli attributi che indicano le caratteristiche di un teatro presente nel node_templates.\n */\nexport class ModuleInstanceDTO {\n    properties: ModuleInstancePropertiesDTO\n    type: string\n}\n/**\n * Classe che contiene gli attributi che indicano le caratteristiche di un modulo presente nel node_templates.\n */\nexport class TheaterInstanceDTO {\n    properties: TheaterInstancePropertiesDTO\n    type: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Componenti\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/home/home.component.ts\n\n\n\n    \n        Descrizione\n    \n    \n        Componente (pagina) che ha lo scopo di mostrare all'utente una landing tale per cui potrà scegliere di:\n\nCreare un teatro.\nCreare un modulo.\nVisualizzare un teatro.\nVisualizzare un modulo.\n\n\n    \n\n\n\n\n\n    Metadati\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                ./home.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                author\n                            \n                            \n                                    Protected\n                                branch\n                            \n                            \n                                    Protected\n                                COMPOSER\n                            \n                            \n                                    Opzionale\n                                data_input_template\n                            \n                            \n                                    Protected\n                                dataModal\n                            \n                            \n                                    Protected\n                                description\n                            \n                            \n                                    Protected\n                                fileJSON\n                            \n                            \n                                    Protected\n                                fileLoaded\n                            \n                            \n                                    Protected\n                                formElementComposer\n                            \n                            \n                                    Protected\n                                formElementModal\n                            \n                            \n                                    Protected\n                                formElementVisualizer\n                            \n                            \n                                    Protected\n                                id\n                            \n                            \n                                    Protected\n                                isModalActive\n                            \n                            \n                                    Protected\n                                Module\n                            \n                            \n                                    Protected\n                                name\n                            \n                            \n                                    Protected\n                                Theater\n                            \n                            \n                                    Protected\n                                type\n                            \n                            \n                                    Protected\n                                VISUALIZER\n                            \n                        \n                    \n                \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                buttonClick\n                            \n                            \n                                dataInputReturned\n                            \n                            \n                                    Async\n                                onFileSelected\n                            \n                            \n                                onReset\n                            \n                            \n                                onUpload\n                            \n                            \n                                startapplication\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Costruttore\n        \n            \n                \n                    \nconstructor(router: Router, fileService: FileService, storageService: StorageService)\n                    \n                \n                        \n                            \n                                Definito in src/app/pages/home/home.component.ts:173\n                            \n                        \n\n                \n                    \n                            Costruttore componente HomeComponent\n\n                            \n                                    Parametri :\n                                    \n                                        \n                                            \n                                                Nome\n                                                    Tipo\n                                                Opzionale\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fileService\n                                                  \n                                                        \n                                                                        FileService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        buttonClick\n                        \n                    \n                \n            \n            \n                \nbuttonClick(branch: ComposerVisualizerType, type: SubjectType)\n                \n            \n\n\n            \n                \n                    Definito in src/app/pages/home/home.component.ts:197\n                \n            \n\n\n            \n                \n                    Funzione richiamata al momento del click su una scelta.\nValorizza il branch (designer/visualize) e tipo (module/theater) scelto.\nSee {dataModal}\nSee {branch}\nSee {type}\nSee {isModalActive}\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    branch\n                                    \n                                                ComposerVisualizerType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    type\n                                    \n                                                SubjectType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataInputReturned\n                        \n                    \n                \n            \n            \n                \ndataInputReturned(val: DataInputReturned)\n                \n            \n\n\n            \n                \n                    Definito in src/app/pages/home/home.component.ts:225\n                \n            \n\n\n            \n                \n                    Funzione richiamata non appena la form è stata validata.\n\nSalva i dati di ritorno nelle opportune variabili.\nEsegue le operazioni per il routing degli elementi.\nSee {startapplication}\n\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                DataInputReturned\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onFileSelected\n                        \n                    \n                \n            \n            \n                \n                    \n                    onFileSelected(event: any)\n                \n            \n\n\n            \n                \n                    Definito in src/app/pages/home/home.component.ts:289\n                \n            \n\n\n            \n                \n                    Funzione richiamata quando si seleziona il file.\nRichiama il servizio di gestione dell'upload file e prende il risultato.\nSee {fileService}\nSee {fileJSON}\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onReset\n                        \n                    \n                \n            \n            \n                \nonReset(input)\n                \n            \n\n\n            \n                \n                    Definito in src/app/pages/home/home.component.ts:315\n                \n            \n\n\n            \n                \n                    Funzione richiamata quando si esegue un reset dei dati del file dato in input.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    input\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onUpload\n                        \n                    \n                \n            \n            \n                \nonUpload()\n                \n            \n\n\n            \n                \n                    Definito in src/app/pages/home/home.component.ts:306\n                \n            \n\n\n            \n                \n                    Funzione richiamata dopo aver aggiunto il file.\nSe corretto, esegue la funzione di route dell'elemento scelto.\nSee {startapplication}\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startapplication\n                        \n                    \n                \n            \n            \n                \nstartapplication()\n                \n            \n\n\n            \n                \n                    Definito in src/app/pages/home/home.component.ts:246\n                \n            \n\n\n            \n                \n                    Funzione richiamata non appena i hanno i dati valorizzati.\nSi occupa del redirezionamento per il branch scelto con passaggio di variabili nella route.\nSee {router}\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        author\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/pages/home/home.component.ts:45\n                        \n                    \n\n            \n                \n                    Variabile di supporto che conterrà l'autore il nome del modulo/teatro da costruire\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        branch\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ComposerVisualizerType\n\n                    \n                \n                    \n                        \n                                Definito in src/app/pages/home/home.component.ts:88\n                        \n                    \n\n            \n                \n                    Variabile che indica il tipo di operazione selezionata al momento\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        COMPOSER\n                        \n                    \n                \n            \n                \n                    \n                        Valore predefinito : ComposerVisualizerType.COMPOSER\n                    \n                \n                    \n                        \n                                Definito in src/app/pages/home/home.component.ts:63\n                        \n                    \n\n            \n                \n                    Variabile di supporto che indica il composer\nSee {ComposerVisualizerType}\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        data_input_template\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     TemplateRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('data_input_template')\n                        \n                    \n                \n                    \n                        \n                                Definito in src/app/pages/home/home.component.ts:53\n                        \n                    \n\n            \n                \n                    Variabile che indica l'elemento del DOM.\nIn particolare contiene le informmazioni del form da visualizzare per la creazione / visualizzazione.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        dataModal\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ModalItem\n\n                    \n                \n                    \n                        \n                                Definito in src/app/pages/home/home.component.ts:158\n                        \n                    \n\n            \n                \n                    Variabile che contiene l'isieme delle opzioni per la modale.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/pages/home/home.component.ts:40\n                        \n                    \n\n            \n                \n                    Variabile di supporto che conterrà la descrizione del modulo/teatro da costruire\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        fileJSON\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         any\n\n                    \n                \n                \n                    \n                        Valore predefinito : undefined\n                    \n                \n                    \n                        \n                                Definito in src/app/pages/home/home.component.ts:167\n                        \n                    \n\n            \n                \n                    Variabile che contiene i dati del file dato in input.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        fileLoaded\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                \n                    \n                        Valore predefinito : false\n                    \n                \n                    \n                        \n                                Definito in src/app/pages/home/home.component.ts:173\n                        \n                    \n\n            \n                \n                    Variabile che indica se e quando il file è stato caricato (correttamente).\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        formElementComposer\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         DataInputElement\n\n                    \n                \n                \n                    \n                        Valore predefinito : {\n    element: [\n      {\n        id: \"author\",\n        text: \"Author\",\n        type: \"text\",\n        required: true\n      },\n      {\n        id: \"name\",\n        text: \"Name\",\n        type: \"text\",\n        required: true\n      },\n      {\n        id: \"description\",\n        text: \"Description\",\n        type: \"textarea\",\n        required: true\n      },\n    ]\n  }\n                    \n                \n                    \n                        \n                                Definito in src/app/pages/home/home.component.ts:108\n                        \n                    \n\n            \n                \n                    Variabile che indica i tipi di input che devono esserci nel form al momento dell'inserimento della creazione di un modulo/teatro.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        formElementModal\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         DataInputElement\n\n                    \n                \n                    \n                        \n                                Definito in src/app/pages/home/home.component.ts:98\n                        \n                    \n\n            \n                \n                    Variabile che indica il tipo di form da visualizzare, una volta scelto.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        formElementVisualizer\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         DataInputElement\n\n                    \n                \n                \n                    \n                        Valore predefinito : {\n    element: [\n      {\n        id: \"id\",\n        text: \"Id\",\n        type: \"text\",\n        required: true,\n      },\n    ]\n  }\n                    \n                \n                    \n                        \n                                Definito in src/app/pages/home/home.component.ts:134\n                        \n                    \n\n            \n                \n                    Variabile che indica i tipi di input che devono esserci nel form al momento dell'inserimento della visualizzazione di un modulo/teatro.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/pages/home/home.component.ts:30\n                        \n                    \n\n            \n                \n                    Variabile di supporto che conterrà l'id del modulo/teatro da visualizzare\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        isModalActive\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                \n                    \n                        Valore predefinito : false\n                    \n                \n                    \n                        \n                                Definito in src/app/pages/home/home.component.ts:154\n                        \n                    \n\n            \n                \n                    Variabile utilizzata per lo stato show/hide della modal.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        Module\n                        \n                    \n                \n            \n                \n                    \n                        Valore predefinito : SubjectType.MODULE\n                    \n                \n                    \n                        \n                                Definito in src/app/pages/home/home.component.ts:73\n                        \n                    \n\n            \n                \n                    Variabile di supporto che indica il modulo\nSee {SubjectType}\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/pages/home/home.component.ts:35\n                        \n                    \n\n            \n                \n                    Variabile di supporto che conterrà il nome del modulo/teatro da costruire\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        Theater\n                        \n                    \n                \n            \n                \n                    \n                        Valore predefinito : SubjectType.THEATER\n                    \n                \n                    \n                        \n                                Definito in src/app/pages/home/home.component.ts:78\n                        \n                    \n\n            \n                \n                    Variabile di supporto che indica il teatro\nSee {SubjectType}\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         SubjectType\n\n                    \n                \n                    \n                        \n                                Definito in src/app/pages/home/home.component.ts:93\n                        \n                    \n\n            \n                \n                    Variabile che indica il tipo di elemento selezionata al momento\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        VISUALIZER\n                        \n                    \n                \n            \n                \n                    \n                        Valore predefinito : ComposerVisualizerType.VISUALIZER\n                    \n                \n                    \n                        \n                                Definito in src/app/pages/home/home.component.ts:68\n                        \n                    \n\n            \n                \n                    Variabile di supporto che indica il visualizer\nSee {ComposerVisualizerType}\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { DataInputElement, DataInputReturned } from 'src/app/components/data-input/dataInputType';\nimport { ModalItem } from 'src/app/components/modal/modalType';\nimport { SubjectType, ComposerVisualizerType, DataRouteComposer, DataRouteVisualizer } from 'src/app/models/appType';\nimport { FileService } from 'src/app/services/application/file/file.service';\nimport { StorageService } from 'src/app/services/application/storage/storage.service';\n\n/**\n * Componente (pagina) che ha lo scopo di mostrare all'utente una landing tale per cui potrà scegliere di:\n * - Creare un teatro.\n * - Creare un modulo.\n * - Visualizzare un teatro.\n * - Visualizzare un modulo.\n */\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.sass']\n})\nexport class HomeComponent {\n\n\n  // support var\n\n  /**\n   * Variabile di supporto che conterrà l'id del modulo/teatro da visualizzare\n   * @type {number}\n   */\n  protected id: number;\n  /**\n   * Variabile di supporto che conterrà il nome del modulo/teatro da costruire\n   * @type {string}\n   */\n  protected name: string;\n  /**\n   * Variabile di supporto che conterrà la descrizione del modulo/teatro da costruire\n   * @type {string}\n   */\n  protected description: string;\n  /**\n   * Variabile di supporto che conterrà l'autore il nome del modulo/teatro da costruire\n   * @type {string}\n   */\n  protected author: string;\n\n\n  /**\n   * Variabile che indica l'elemento del DOM.\n   * In particolare contiene le informmazioni del form da visualizzare per la creazione / visualizzazione.\n   * @type {TemplateRef}\n   */\n  @ViewChild('data_input_template') data_input_template?: TemplateRef;\n\n\n\n  //support var\n\n  /**\n   * Variabile di supporto che indica il composer \n   * @see {ComposerVisualizerType}\n   */\n  protected COMPOSER = ComposerVisualizerType.COMPOSER;\n  /**\n   * Variabile di supporto che indica il visualizer \n   * @see {ComposerVisualizerType}\n   */\n  protected VISUALIZER = ComposerVisualizerType.VISUALIZER;\n  /**\n    * Variabile di supporto che indica il modulo \n    * @see {SubjectType}\n    */\n  protected Module = SubjectType.MODULE;\n  /**\n    * Variabile di supporto che indica il teatro \n    * @see {SubjectType}\n    */\n  protected Theater = SubjectType.THEATER;\n\n\n\n  // state var\n\n  /**\n   * Variabile che indica il tipo di operazione selezionata al momento\n   * @type {ComposerVisualizerType}\n   */\n  protected branch: ComposerVisualizerType;\n    /**\n   * Variabile che indica il tipo di elemento selezionata al momento\n   * @type {SubjectType}\n   */\n  protected type: SubjectType;\n  /**\n   * Variabile che indica il tipo di form da visualizzare, una volta scelto.\n   * @type {DataInputElement} \n   */\n  protected formElementModal: DataInputElement;\n\n\n\n  // input conf\n\n  /**\n   * Variabile che indica i tipi di input che devono esserci nel form al momento dell'inserimento della creazione di un modulo/teatro.\n   * @type {DataInputElement}\n   */\n  protected formElementComposer: DataInputElement = {\n    element: [\n      {\n        id: \"author\",\n        text: \"Author\",\n        type: \"text\",\n        required: true\n      },\n      {\n        id: \"name\",\n        text: \"Name\",\n        type: \"text\",\n        required: true\n      },\n      {\n        id: \"description\",\n        text: \"Description\",\n        type: \"textarea\",\n        required: true\n      },\n    ]\n  };\n    /**\n   * Variabile che indica i tipi di input che devono esserci nel form al momento dell'inserimento della visualizzazione di un modulo/teatro.\n   * @type {DataInputElement}\n   */\n  protected formElementVisualizer: DataInputElement = {\n    element: [\n      {\n        id: \"id\",\n        text: \"Id\",\n        type: \"text\",\n        required: true,\n      },\n    ]\n  };\n\n\n\n  // modal conf\n\n  /**\n   * Variabile utilizzata per lo stato show/hide della modal.\n   * @type {boolean}\n   * @default {false}\n   */\n  protected isModalActive: boolean = false;\n  /**\n   * Variabile che contiene l'isieme delle opzioni per la modale.\n   */\n  protected dataModal: ModalItem;\n\n\n\n  // file var\n\n  /**\n   * Variabile che contiene i dati del file dato in input.\n   */\n  protected fileJSON: any = undefined;\n  /**\n   * Variabile che indica se e quando il file è stato caricato (correttamente).\n   * @type {boolean}\n   * @default {false}\n   */\n  protected fileLoaded: boolean = false;\n\n\n\n  /**\n   * Costruttore componente HomeComponent\n   * @param router \n   * @param fileService \n   * @param storageService \n   */\n  constructor(private router: Router, private fileService: FileService, private storageService: StorageService) {\n  }\n\n\n  /**\n   * Funzione richiamata al momento del click su una scelta.\n   * Valorizza il branch (designer/visualize) e tipo (module/theater) scelto.\n   * @param branch \n   * @param type \n   * @see {dataModal}\n   * @see {branch}\n   * @see {type}\n   * @see {isModalActive}\n   */\n  buttonClick(branch: ComposerVisualizerType, type: SubjectType): void {\n    this.branch = branch;\n    this.type = type;\n    let title: string = type + \" \" + branch;\n    if (branch === ComposerVisualizerType.COMPOSER) {\n      this.formElementModal = this.formElementComposer\n    }\n    else {\n      this.formElementModal = this.formElementVisualizer\n    }\n    this.dataModal = {\n      title: title,\n      template: this.data_input_template,\n      buttons: [],\n      backgroundColor: \"#0000005e\",\n      //f9fafb24\n    };\n    this.isModalActive = true;\n  }\n\n\n  /**\n   * Funzione richiamata non appena la form è stata validata.\n   * - Salva i dati di ritorno nelle opportune variabili.\n   * - Esegue le operazioni per il routing degli elementi.\n   * @param val \n   * @see {startapplication}\n   */\n  dataInputReturned(val: DataInputReturned) {\n    this.isModalActive = false;\n    if (!val || !val.isValid) return;\n    if (this.branch === ComposerVisualizerType.VISUALIZER) {\n      this.id = val.element[\"id\"].value\n    }\n    if (this.branch === ComposerVisualizerType.COMPOSER) {\n      this.name = val.element['name'].value;\n      this.description = val.element['description'].value;\n      this.author = val.element['author'].value;\n    }\n    this.startapplication();\n  }\n\n\n\n  /**\n   * Funzione richiamata non appena i hanno i dati valorizzati. \n   * Si occupa del redirezionamento per il branch scelto con passaggio di variabili nella route.\n   * @see {router}\n   */\n  startapplication() {\n    var state: DataRouteComposer | DataRouteVisualizer;\n    if (this.branch === ComposerVisualizerType.VISUALIZER) {\n      var id = this.id;\n      state = {\n        id: id as number,\n        type: this.type\n      };\n      this.router.navigateByUrl(\n        '/visualizer',\n        {\n          state\n        }\n      );\n    }\n    else if (this.branch === ComposerVisualizerType.COMPOSER) {\n      var name = this.name;\n      var description = this.description;\n      var author = this.author;\n      state = {\n        name: name as string,\n        description: description as string,\n        author: author as string,\n        type: this.type\n      };\n      this.router.navigateByUrl(\n        '/composer',\n        {\n          state\n        }\n      );\n    }\n  }\n\n\n\n  /**\n   * Funzione richiamata quando si seleziona il file.\n   * Richiama il servizio di gestione dell'upload file e prende il risultato.\n   * @param event \n   * @see {fileService}\n   * @see {fileJSON}\n   */\n  async onFileSelected(event: any) {\n    await this.fileService.onFileSelected(event,this.type)\n      .then((v) => {\n        this.fileJSON = v; this.fileLoaded = true;\n      })\n      .catch((e) => {\n        alert(e + \"\\n Make sure it ends with \\\" .\" + this.type.toLowerCase() + \".json \\\"\")\n      })\n  }\n\n\n\n  /**\n   * Funzione richiamata dopo aver aggiunto il file. \n   * Se corretto, esegue la funzione di route dell'elemento scelto.\n   * @see {startapplication}\n   */\n  onUpload() {\n    this.storageService.data = this.fileJSON;\n    this.startapplication();\n  }\n\n  /**\n   * Funzione richiamata quando si esegue un reset dei dati del file dato in input.\n   * @param input \n   */\n  onReset(input) {\n    input.value = \"\"\n    this.fileLoaded = false;\n    this.fileJSON = undefined;\n  }\n\n}\n\n    \n\n    \n        \n    \n\n    \n        \n            \n                 Cyber Range Theater and Module Visualization/Constructor \n            \n            \n                 Visual design orchestrator for infrastructured system \n            \n            \n\n                \n                    \n                         Designer \n                    \n                    \n                        \n                            Create Theater\n                        \n                        \n                            Create Module\n                        \n                    \n                \n\n                \n                    \n                         CyberRange\n                    \n                    \n                        \n                            Visualize Theater\n                        \n                        \n                            Visualize Module\n                        \n                    \n                \n\n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n        \n            \n                \n                    {{branch===COMPOSER?\"Create new \":\"Visualize \"}}{{type}}\n                \n            \n            \n                \n                    \n                    \n                \n            \n        \n        \n            \n                \n                    {{branch===COMPOSER?\"Design \":\"Visualize \"}}{{type}} from file\n                \n            \n            \n                \n                    \n                    Select File\n                    Upload\n                    Cancel\n                \n            \n        \n    \n\n    \n\n    \n                \n                    ./home.component.sass\n                \n                .component-div\n    display: flex\n    justify-content: center\n    height: 100%\n\n.bg-component\n    \n    // background-image: linear-gradient(rgba(15, 19, 26, 0.7), #0f131a), url(/../assets/images/bg-images/bg-img-rpt-xy.png)\n    // background-size: contain\n    // background-repeat: round\n    // background-blend-mode: hard-light\n    // height: 100%\n\n    //background-image: linear-gradient(rgba(15, 19, 26, 0.7), #0f131a), url(/../assets/images/bg-images/node-x.jpg)\n    background-size: cover\n    background-repeat: repeat-x\n    background-blend-mode: color-burn\n    height: 100%\n\n.box-color-1\n    margin: 1em\n    padding: 1em\n    border-width: 1em\n    border-radius: 1em\n    background-color: #dc3545\n\n.box-color-2\n    margin: 1em\n    padding: 1em\n    border-width: 1em\n    border-radius: 1em\n    background-color: #0d6fd0\n\n.font-size-05\n    font-size: calc(0.5rem + 2.7vw)\n    font-weight: 1.2em\n    color: #fff\n\n.zoom\n    transition: transform 0.2s // Animation\n.zoom:hover\n    transform: scale(1.5) // (150% zoom - Note: if the zoom is too large, it will go outside of the viewport)\n    -webkit-box-shadow: 0px 0px 39px 0px #000000\n    -moz-box-shadow: 0px 0px 39px 0px #000000\n    -o-box-shadow: 0px 0px 39px 0px #000000\n    box-shadow: 0px 0px 39px 0px #000000\n\n    \n\n    \n        \n        \n            \n                Legenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento html con direttive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                             Cyber Range Theater and Module Visualization/Constructor                                          Visual design orchestrator for infrastructured system                                                                                      Designer                                                                                             Create Theater                                                                            Create Module                                                                                                                         CyberRange                                                                                            Visualize Theater                                                                            Visualize Module                                                                                                                                                {{branch===COMPOSER?\"Create new \":\"Visualize \"}}{{type}}                                                                                                                                                                                            {{branch===COMPOSER?\"Design \":\"Visualize \"}}{{type}} from file                                                                                                Select File                    Upload                    Cancel                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ComposerComponent', 'selector': 'app-composer'},{'name': 'ControlTemplate', 'selector': ''},{'name': 'DataInputComponent', 'selector': 'app-data-input'},{'name': 'DataInputV2Component', 'selector': 'app-data-input-v2'},{'name': 'DataItemComponent', 'selector': 'app-window-item'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HostComponent', 'selector': ''},{'name': 'HowToUseComponent', 'selector': 'app-how-to-use'},{'name': 'MirroringModuleInstanceComponent', 'selector': ''},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavbarElementComponent', 'selector': 'app-navbar-element'},{'name': 'NetworkComponent', 'selector': ''},{'name': 'OffcanvasComponent', 'selector': 'app-offcanvas'},{'name': 'ReteModuleComposerComponent', 'selector': 'app-rete-module-composer'},{'name': 'ReteModuleVisualizerComponent', 'selector': 'app-rete-module-visualizer'},{'name': 'ReteTheaterComposerComponent', 'selector': 'app-rete-theater-composer'},{'name': 'ReteTheaterVisualizerComponent', 'selector': 'app-rete-theater-visualizer'},{'name': 'SubnetComponent', 'selector': ''},{'name': 'TabnavComponent', 'selector': 'app-tabnav'},{'name': 'TheaterInternalServiceModuleInstanceComponent', 'selector': ''},{'name': 'TheaterModuleInstanceComponent', 'selector': ''},{'name': 'UnderbarComponent', 'selector': 'app-underbar'},{'name': 'VisualizerComponent', 'selector': 'app-displayer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"components/HostComponent.html":{"url":"components/HostComponent.html","title":"component - HostComponent","body":"\n                   \n\n\n\n\n\n  Componenti\n  \n  HostComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/rete-settings/nodes/rete-nodes/host/host.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n            NodeComponent\n    \n\n\n\n\n    Metadati\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            NodeService\n                \n            \n\n\n\n            \n                styleUrls\n                ./host.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./host.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                HostIcon\n                            \n                            \n                                NodeType\n                            \n                            \n                                showInputOutlet\n                            \n                            \n                                showOutputOutlet\n                            \n                            \n                                showPorts\n                            \n                        \n                    \n                \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                showhidesocket\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Costruttore\n        \n            \n                \n                    \nconstructor(service: NodeService, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Definito in src/app/rete-settings/nodes/rete-nodes/host/host.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parametri :\n                                    \n                                        \n                                            \n                                                Nome\n                                                    Tipo\n                                                Opzionale\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                    NodeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        showhidesocket\n                        \n                    \n                \n            \n            \n                \nshowhidesocket()\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-nodes/host/host.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        HostIcon\n                        \n                    \n                \n            \n                \n                    \n                        Valore predefinito : HostIcon\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-nodes/host/host.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        NodeType\n                        \n                    \n                \n            \n                \n                    \n                        Valore predefinito : EnumNodeType\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-nodes/host/host.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showInputOutlet\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                \n                    \n                        Valore predefinito : false\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-nodes/host/host.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showOutputOutlet\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                \n                    \n                        Valore predefinito : true\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-nodes/host/host.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showPorts\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                \n                    \n                        Valore predefinito : true\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-nodes/host/host.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, ChangeDetectorRef, ChangeDetectionStrategy } from '@angular/core';\nimport { NodeComponent, NodeService } from 'rete-angular-render-plugin';\nimport { EnumNodeType } from 'src/app/models/appType';\nimport { HostIcon } from 'src/app/rete-settings/style/styleIconConfig';\n// import { EnumNodeType } from 'src/app/rete-settings/models/reteModelType';\n\n\n@Component({\n  templateUrl: './host.component.html',\n  styleUrls: ['./host.component.sass',],\n  providers: [NodeService],\n  changeDetection: ChangeDetectionStrategy.OnPush, // render più veloce.\n})\n\nexport class HostComponent extends NodeComponent {\n\n  showPorts: boolean = true;\n  showOutputOutlet: boolean = true;\n  showInputOutlet: boolean = false;\n  NodeType = EnumNodeType;\n  HostIcon = HostIcon;\n  \n  constructor(\n    protected service: NodeService,\n    protected cdr: ChangeDetectorRef) {\n    super(service, cdr);\n  }\n\n  showhidesocket() {\n    this.showPorts = !this.showPorts;\n  }\n  \n}\n\n    \n\n    \n        \n\n  \n    \n      \n        \n          {{ node.data.name === \"\" || node.data.name === undefined ? \"Assign name\" : node.data.name }}\n        \n      \n      \n        \n          \n          \n        \n      \n    \n   -->\n\n\n  \n  \n    \n      \n        \n          \n            \n              \n                 \n              \n              \n                \n                  {{\n                  (node.data.name && node.data.name!=='')\n                  ?node.data.name\n                  :NodeType.HOST\n                  }}\n                \n                \n                  {{\n                  (node.data.os && node.data.os!=='')\n                  ?\"os: \"+node.data.os\n                  :''\n                  }}\n                \n                \n                  \n                    {{\n                    (node.data.ram && node.data.ram!=='')\n                    ?\"ram (MB): \"+node.data.ram\n                    :''\n                    }}\n                  \n                  \n                    {{\n                    (node.data.disk && node.data.disk!=='')\n                    ?\"disk (MB): \"+node.data.disk\n                    :''\n                    }}\n                  \n                  \n                    {{\n                    (node.data.cpu && node.data.cpu!=='')\n                    ?\"cpu (#): \"+node.data.cpu\n                    :''\n                    }}\n                  \n                \n              \n            \n          \n        \n      \n    \n  \n\n\n  \n    \n      Button with data-bs-target\n    \n  \n  \n    \n      Some placeholder content for the collapse component. This panel is hidden by default but revealed when the user\n      activates the relevant trigger.\n    \n   -->\n\n\n  \n\n    \n    \n      \n        {{output.name}}\n        \n          \n          \n        \n      \n    \n\n\n     -->\n\n    \n    \n      \n        \n          \n          \n          \n        \n        {{input.name}}\n        \n      \n    \n\n  \n\n    \n\n    \n                \n                    ./host.component.sass\n                \n                @import \"../vars\"\n\n.node\n  background: $node-color\n  border: 2px solid #f124\n  border-radius: 10px\n  cursor: pointer\n  min-width: $node-width\n  height: auto\n  padding-bottom: 6px\n  box-sizing: content-box\n  position: relative\n  user-select: none\n  &:hover\n    background: lighten($node-color,4%)\n  &.selected\n    background: $node-color-selected\n    border-color: #ff0000\n  .title\n    color: $text-color\n    font-family: $font-fam\n    font-size: 18px\n    padding: 8px\n  .output\n    text-align: right\n    display: flex\n    justify-content: flex-end\n  .input\n    text-align: left\n    display: flex\n    justify-content: flex-start\n  .input-title,.output-title\n    vertical-align: middle\n    color: $text-color\n    display: inline-block\n    font-family: $font-fam\n    font-size: 14px\n    margin: $socket-margin\n    line-height: $socket-size\n    &[hidden]\n      display: none\n  .input-control\n    z-index: 1\n    width: calc(100% - #{$socket-size + 2*$socket-margin})\n    vertical-align: middle\n    display: inline-block\n  .control\n    padding: $socket-margin $socket-size/2 + $socket-margin\n\n    \n\n    \n        \n        \n            \n                Legenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento html con direttive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              {{ node.data.name === \"\" || node.data.name === undefined ? \"Assign name\" : node.data.name }}                                                                     -->                                                                                                                                         {{                  (node.data.name && node.data.name!==\\'\\')                  ?node.data.name                  :NodeType.HOST                  }}                                                  {{                  (node.data.os && node.data.os!==\\'\\')                  ?\"os: \"+node.data.os                  :\\'\\'                  }}                                                                      {{                    (node.data.ram && node.data.ram!==\\'\\')                    ?\"ram (MB): \"+node.data.ram                    :\\'\\'                    }}                                                        {{                    (node.data.disk && node.data.disk!==\\'\\')                    ?\"disk (MB): \"+node.data.disk                    :\\'\\'                    }}                                                        {{                    (node.data.cpu && node.data.cpu!==\\'\\')                    ?\"cpu (#): \"+node.data.cpu                    :\\'\\'                    }}                                                                                                      Button with data-bs-target                  Some placeholder content for the collapse component. This panel is hidden by default but revealed when the user      activates the relevant trigger.       -->                        {{output.name}}                                                   -->                                                                    {{input.name}}                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ComposerComponent', 'selector': 'app-composer'},{'name': 'ControlTemplate', 'selector': ''},{'name': 'DataInputComponent', 'selector': 'app-data-input'},{'name': 'DataInputV2Component', 'selector': 'app-data-input-v2'},{'name': 'DataItemComponent', 'selector': 'app-window-item'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HostComponent', 'selector': ''},{'name': 'HowToUseComponent', 'selector': 'app-how-to-use'},{'name': 'MirroringModuleInstanceComponent', 'selector': ''},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavbarElementComponent', 'selector': 'app-navbar-element'},{'name': 'NetworkComponent', 'selector': ''},{'name': 'OffcanvasComponent', 'selector': 'app-offcanvas'},{'name': 'ReteModuleComposerComponent', 'selector': 'app-rete-module-composer'},{'name': 'ReteModuleVisualizerComponent', 'selector': 'app-rete-module-visualizer'},{'name': 'ReteTheaterComposerComponent', 'selector': 'app-rete-theater-composer'},{'name': 'ReteTheaterVisualizerComponent', 'selector': 'app-rete-theater-visualizer'},{'name': 'SubnetComponent', 'selector': ''},{'name': 'TabnavComponent', 'selector': 'app-tabnav'},{'name': 'TheaterInternalServiceModuleInstanceComponent', 'selector': ''},{'name': 'TheaterModuleInstanceComponent', 'selector': ''},{'name': 'UnderbarComponent', 'selector': 'app-underbar'},{'name': 'VisualizerComponent', 'selector': 'app-displayer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HostComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/HostModuleDTO.html":{"url":"classes/HostModuleDTO.html","title":"class - HostModuleDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  HostModuleDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsDTO/hostDTO.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano gli host.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                hasQuery\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                ports\n                            \n                            \n                                uuid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        hasQuery\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/hostDTO.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/hostDTO.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/hostDTO.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ports\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     HostPortModuleDTO[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/hostDTO.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uuid\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/hostDTO.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { NetworkDTO, SubnetDTO } from \"./networkDTO\"\n\n/**\n * Classe che contiene gli attributi che indicano le porte degli host.\n */\nexport class HostPortModuleDTO {\n    id: string | number\n    name: string\n    networks: NetworkDTO[]\n    subnets: SubnetDTO[]\n}\n\n/**\n * Classe che contiene gli attributi che indicano gli host.\n */\nexport class HostModuleDTO {\n    hasQuery: boolean\n    id: string | number\n    name: string\n    ports: HostPortModuleDTO[]\n    uuid: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/HostNode.html":{"url":"classes/HostNode.html","title":"class - HostNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  HostNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/rete-settings/nodes/rete-nodes/host/hostNode.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che rappresenta il nodo (rete-node) Host all'interno del canvas/editor di rete.\n\n            \n\n            \n                Extends\n            \n            \n                        Component\n            \n\n            \n                Implementa\n            \n            \n                        AngularComponent\n            \n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                builder\n                            \n                            \n                                created\n                            \n                            \n                                createNewNode\n                            \n                            \n                                destroyed\n                            \n                            \n                                valorizeNode\n                            \n                            \n                                worker\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Costruttore\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Definito in src/app/rete-settings/nodes/rete-nodes/host/hostNode.ts:49\n                            \n                        \n\n                \n                    \n                            Costruttore di HostNode\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     AngularComponentData\n\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-nodes/host/hostNode.ts:49\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        builder\n                        \n                    \n                \n            \n            \n                \n                    \n                    builder(node: Node)\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-nodes/host/hostNode.ts:67\n                \n            \n\n\n            \n                \n                    Funzione richiamata in fase di costruzione del nodo (rete-node).\nControlla se bisogna instanziare il nodo oppure crearne uno nuovo:\n\nIn fase di design, il nodo non ha dati, per cui bisogna crearne uno nuovo.\nIn fase di visualizing, il nodo presenta dei dati, per cui va valorizzato il nodo.\n\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        created\n                        \n                    \n                \n            \n            \n                \ncreated(node: Node)\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-nodes/host/hostNode.ts:132\n                \n            \n\n\n            \n                \n                    Funzione richiamata una volta in nodo creato.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createNewNode\n                        \n                    \n                \n            \n            \n                \ncreateNewNode(node: Node)\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-nodes/host/hostNode.ts:80\n                \n            \n\n\n            \n                \n                    Funzione che ha come scopo creare un nodo (rete-node).\nIn particolare gli assegna una struttura vuota.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destroyed\n                        \n                    \n                \n            \n            \n                \ndestroyed(node: Node)\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-nodes/host/hostNode.ts:140\n                \n            \n\n\n            \n                \n                    Funzione richiamata una volta in nodo cancellato.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        valorizeNode\n                        \n                    \n                \n            \n            \n                \nvalorizeNode(node: Node)\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-nodes/host/hostNode.ts:94\n                \n            \n\n\n            \n                \n                    Funzione che ha come scopo la valorizzazione del nodo (rete-node) con i dati in suo possesso.\nIn quasta fase avviene anche la fase iniziale di instanziamento delle porte input/output.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        worker\n                        \n                    \n                \n            \n            \n                \nworker(node: NodeData, inputs: WorkerInputs, outputs: WorkerOutputs)\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-nodes/host/hostNode.ts:124\n                \n            \n\n\n            \n                \n                    Funzione richiamta per eseguire operazioni che conivolgono computazioni dei nodi.\nNon sono necessari in questa versione.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                            NodeData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    inputs\n                                    \n                                            WorkerInputs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    outputs\n                                    \n                                            WorkerOutputs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Component, Input, Output, Node } from 'rete';\nimport { _Socket } from '../../../sockets/socket';\nimport { _Control } from '../../../controls/control';\nimport { AngularComponent, AngularComponentData } from 'rete-angular-render-plugin';\nimport { HostComponent } from '../../../nodes/rete-nodes/host/host.component'\nimport { NodeData, WorkerInputs, WorkerOutputs } from 'rete/types/core/data';\nimport {  reteBasicNodeInfo } from '../../reteBasic';\nimport { EnumNodeType } from 'src/app/models/appType';\n\n/**\n * Classe utilizzata per indicare il tipo di modulo HostNode.\n * @see {reteBasicModuleInfo}\n */\nexport class ReteHostInfo extends reteBasicNodeInfo {\n  os: string;\n  flavorName: string;\n  cpu: number | string;\n  disk: number | string;\n  ram: number | string;\n  type: EnumNodeType.Host\n}\n\n/**\n * Funzione dichiarata in HostNode. \n * Essa ha lo scopo di generare una struttura dati empty.\n * Viene utilizzata in per instanziare un nodo del tipo di ritorno indicato senza dati.\n * @returns {ReteSubnetInfo}\n */\nexport function getEmptyHostInfo(): ReteHostInfo {\n  let x: ReteHostInfo = {\n    os: \"\",\n    Input: [],\n    Output: [],\n    name: \"\",\n    type: EnumNodeType.Host,\n    cpu: '',\n    disk: '',\n    ram: '',\n    flavorName: ''\n  };\n  return x;\n}\n\n/**\n * Classe che rappresenta il nodo (rete-node) Host all'interno del canvas/editor di rete.\n */\nexport class HostNode extends Component implements AngularComponent {\n\n  data: AngularComponentData;\n\n    /**\n   * Costruttore di HostNode\n   */\n  constructor() {\n    super(EnumNodeType.Host);\n    this.data.render = 'angular';\n    this.data.component = HostComponent;\n  }\n\n  /**\n   * Funzione richiamata in fase di costruzione del nodo (rete-node).\n   * Controlla se bisogna instanziare il nodo oppure crearne uno nuovo:\n   * - In fase di design, il nodo non ha dati, per cui bisogna crearne uno nuovo.\n   * - In fase di visualizing, il nodo presenta dei dati, per cui va valorizzato il nodo.\n   * @param node \n   */\n  async builder(node: Node) {\n    if (Object.keys(node.data).length === 0)\n      this.createNewNode(node)\n    else\n      this.valorizeNode(node)\n  }\n\n\n  /**\n   * Funzione che ha come scopo creare un nodo (rete-node).\n   * In particolare gli assegna una struttura vuota.\n   * @param node \n   */\n  createNewNode(node: Node) {\n    let t = getEmptyHostInfo()\n    node.data = {\n      ...node.data,\n      ...t\n    }\n  }\n\n\n  /**\n   * Funzione che ha come scopo la valorizzazione del nodo (rete-node) con i dati in suo possesso.\n   * In quasta fase avviene anche la fase iniziale di instanziamento delle porte input/output.\n   * @param node \n   */\n  valorizeNode(node: Node) {\n    var i: any = node.data['Input'];\n    var o: any = node.data['Output'];\n    var il = i.length;\n    var ol = o.length;\n\n    for (let index = 0; index \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/HostPortModuleDTO.html":{"url":"classes/HostPortModuleDTO.html","title":"class - HostPortModuleDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  HostPortModuleDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsDTO/hostDTO.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano le porte degli host.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                networks\n                            \n                            \n                                subnets\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/hostDTO.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/hostDTO.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        networks\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         NetworkDTO[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/hostDTO.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subnets\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         SubnetDTO[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/hostDTO.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { NetworkDTO, SubnetDTO } from \"./networkDTO\"\n\n/**\n * Classe che contiene gli attributi che indicano le porte degli host.\n */\nexport class HostPortModuleDTO {\n    id: string | number\n    name: string\n    networks: NetworkDTO[]\n    subnets: SubnetDTO[]\n}\n\n/**\n * Classe che contiene gli attributi che indicano gli host.\n */\nexport class HostModuleDTO {\n    hasQuery: boolean\n    id: string | number\n    name: string\n    ports: HostPortModuleDTO[]\n    uuid: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"components/HowToUseComponent.html":{"url":"components/HowToUseComponent.html","title":"component - HowToUseComponent","body":"\n                   \n\n\n\n\n\n  Componenti\n  \n  HowToUseComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/how-to-use/how-to-use.component.ts\n\n\n\n\n\n    \n        Implementa\n    \n    \n                    OnInit\n    \n\n\n\n    Metadati\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-how-to-use\n            \n\n            \n                styleUrls\n                ./how-to-use.component.css\n            \n\n\n\n            \n                templateUrl\n                ./how-to-use.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Indice\n    \n        \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Costruttore\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Definito in src/app/pages/how-to-use/how-to-use.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Definito in src/app/pages/how-to-use/how-to-use.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-how-to-use',\n  templateUrl: './how-to-use.component.html',\n  styleUrls: ['./how-to-use.component.css']\n})\nexport class HowToUseComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n\n\n    \n\n    \n                \n                    ./how-to-use.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento html con direttive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ComposerComponent', 'selector': 'app-composer'},{'name': 'ControlTemplate', 'selector': ''},{'name': 'DataInputComponent', 'selector': 'app-data-input'},{'name': 'DataInputV2Component', 'selector': 'app-data-input-v2'},{'name': 'DataItemComponent', 'selector': 'app-window-item'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HostComponent', 'selector': ''},{'name': 'HowToUseComponent', 'selector': 'app-how-to-use'},{'name': 'MirroringModuleInstanceComponent', 'selector': ''},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavbarElementComponent', 'selector': 'app-navbar-element'},{'name': 'NetworkComponent', 'selector': ''},{'name': 'OffcanvasComponent', 'selector': 'app-offcanvas'},{'name': 'ReteModuleComposerComponent', 'selector': 'app-rete-module-composer'},{'name': 'ReteModuleVisualizerComponent', 'selector': 'app-rete-module-visualizer'},{'name': 'ReteTheaterComposerComponent', 'selector': 'app-rete-theater-composer'},{'name': 'ReteTheaterVisualizerComponent', 'selector': 'app-rete-theater-visualizer'},{'name': 'SubnetComponent', 'selector': ''},{'name': 'TabnavComponent', 'selector': 'app-tabnav'},{'name': 'TheaterInternalServiceModuleInstanceComponent', 'selector': ''},{'name': 'TheaterModuleInstanceComponent', 'selector': ''},{'name': 'UnderbarComponent', 'selector': 'app-underbar'},{'name': 'VisualizerComponent', 'selector': 'app-displayer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HowToUseComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/InterfaceConstraints.html":{"url":"classes/InterfaceConstraints.html","title":"class - InterfaceConstraints","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  InterfaceConstraints\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsExport/moduleExport.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano i viconli per le interfacce di connessione del modulo.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                compatibility\n                            \n                            \n                                local_interface\n                            \n                            \n                                module_name\n                            \n                            \n                                multiple_mode\n                            \n                            \n                                remote_interface\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        compatibility\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                \n                    \n                        Valore predefinito : \"1.0\"\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        local_interface\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        module_name\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        multiple_mode\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                \n                    \n                        Valore predefinito : false\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remote_interface\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:56\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ModeTypeExport, ModuleTypeExport, NetworkTypeExport, NodeTypeExport, PortTypeExport, RelationshipsTypeExport, SubnetTypeExport, ToscaDefinitionType } from \"./TypeExport\"\n\n\n/**\n * Classe utilizzata per l'export. \n * Contiene le informazioni generali per il modulo che devono esserci nello standard Tosca.\n */\nexport class ModuleExport {\n    tosca_definitions_version: ToscaDefinitionType\n    description: string\n    imports: string[]\n    node_templates: { [name: string]: ModuleSimpleData | NodeSimpleData | PortSimpleData | NetworkSimpleData | SubnetSimpleData }\n    dsl_definition: any | null; //future\n    capabilites: any | null //future\n    outputs: any | null //future\n}\n\n/**\n * Classe che contiene gli attributi che indicano la rappresentazione del modulo per l'export.\n */\nexport class ModuleSimpleData {\n    type: ModuleTypeExport\n    properties: PropertiesMSD\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà del modulo per l'export.\n */\nexport class PropertiesMSD {\n    mode: ModeTypeExport\n    description: string\n    version: string | number\n    constraints: ConstraintsMSD\n    interface_networks: {\n        providers: InterfaceNetworksProvider[]\n        consumers: InterfaceNetworksConsumer[]\n    }\n    virtual_machines: VirtualMachine[]\n}\n/**\n * Classe che contiene gli attributi che indicano i vincoli di connessione del modulo per l'export.\n */\nexport class ConstraintsMSD {\n    interface_constraints: InterfaceConstraints[]\n    module_constraints: ModuleConstraints[]\n    network_constraints: NetworkConstraints[]\n}\n/**\n * Classe che contiene gli attributi che indicano i viconli per le interfacce di connessione del modulo.\n */\nexport class InterfaceConstraints {\n    local_interface: string\n    multiple_mode: boolean = false //future\n    module_name: string\n    compatibility: string = \"1.0\" // future\n    remote_interface: string\n}\n/**\n * Classe che contiene gli attributi che indicano i viconli del modulo.\n */\nexport class ModuleConstraints {\n}\n/**\n * Classe che contiene gli attributi che indicano i viconli dei network del modulo.\n */\nexport class NetworkConstraints {\n}\n/**\n * Classe che contiene gli attributi che indicano le interfacce provider del modulo.\n */\nexport class InterfaceNetworksProvider {\n    interface: string\n    network: string\n    tag: string\n    subnets: SubnetExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano le interfacce consumer del modulo.\n */\nexport class InterfaceNetworksConsumer {\n    interface: string\n    network: string\n    tag: string\n    subnets: SubnetExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano l'insieme di host presenti in un modulo.\n */\nexport class VirtualMachine {\n    virtual_machine: string\n    ports: VirtualMachinePorts[]\n}\n/**\n * Classe che contiene gli attributi che indicano le porte associate ad un host di un modulo.\n */\nexport class VirtualMachinePorts {\n    port: string\n    network: string\n    subnets: SubnetExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano la subnet connessa alla porte dell'host.\n * @see {VirtualMachinePorts}\n */\nexport class SubnetExport {\n    subnet: string;\n}\n\n/**\n * Classe che contiene gli attributi che indica un nodo all'interno dei node_templates.\n * @see {ModuleExport}\n */\nexport class NodeSimpleData {\n    type: NodeTypeExport\n    properties: any | null // future\n    interfaces: any | null // future\n    relationships: RelationshipsExport[]\n}\n\n/**\n * Classe che contiene gli attributi che indicano le relazioni generali.\n */\nexport class RelationshipsExport {\n    type: RelationshipsTypeExport\n    target: string\n}\n/**\n * Classe che contiene gli attributi che indicano i dati della porta all'interno dei node_templates.\n */\nexport class PortSimpleData {\n    type: PortTypeExport\n    relationships: RelationshipsExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano i dati delle network all'interno dei node_templates.\n */\nexport class NetworkSimpleData {\n    type: NetworkTypeExport\n    properties: PropertiesNSD\n}\n/**\n * Classe che contiene gli attributi che indicano le proprietà della network all'interno dei node_templates.\n * @see {NetworkSimpleData}\n */\nexport class PropertiesNSD {\n    openstack_config?: any | null // future\n    use_external_resource?: boolean | null // future\n    resource_id?: any | null // future\n}\n\n/**\n * Classe che contiene gli attributi che indicano i dati delle subnet all'interno dei node_templates.\n */\nexport class SubnetSimpleData {\n    type: SubnetTypeExport\n    relationships: RelationshipsExport[]\n    properties: PropertiesSSD\n}\n/**\n * Classe che contiene gli attributi che indicano le proprietà della subnet all'interno dei node_templates.\n * @see {NetworkSimpleData}\n */\nexport class PropertiesSSD {\n    subnet?: {\n        ip_version: string | number\n        cidr: string\n        enable_dhcp: boolean\n        gateway_ip?: any | null // future\n    }\n    openstack_config?: any | null // future\n    use_external_resource?: boolean | null // future\n    resource_id?: any | null // future\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/InterfaceNetworksConsumer.html":{"url":"classes/InterfaceNetworksConsumer.html","title":"class - InterfaceNetworksConsumer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  InterfaceNetworksConsumer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsExport/moduleExport.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano le interfacce consumer del modulo.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                interface\n                            \n                            \n                                network\n                            \n                            \n                                subnets\n                            \n                            \n                                tag\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        interface\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        network\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subnets\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         SubnetExport[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:84\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tag\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:83\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ModeTypeExport, ModuleTypeExport, NetworkTypeExport, NodeTypeExport, PortTypeExport, RelationshipsTypeExport, SubnetTypeExport, ToscaDefinitionType } from \"./TypeExport\"\n\n\n/**\n * Classe utilizzata per l'export. \n * Contiene le informazioni generali per il modulo che devono esserci nello standard Tosca.\n */\nexport class ModuleExport {\n    tosca_definitions_version: ToscaDefinitionType\n    description: string\n    imports: string[]\n    node_templates: { [name: string]: ModuleSimpleData | NodeSimpleData | PortSimpleData | NetworkSimpleData | SubnetSimpleData }\n    dsl_definition: any | null; //future\n    capabilites: any | null //future\n    outputs: any | null //future\n}\n\n/**\n * Classe che contiene gli attributi che indicano la rappresentazione del modulo per l'export.\n */\nexport class ModuleSimpleData {\n    type: ModuleTypeExport\n    properties: PropertiesMSD\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà del modulo per l'export.\n */\nexport class PropertiesMSD {\n    mode: ModeTypeExport\n    description: string\n    version: string | number\n    constraints: ConstraintsMSD\n    interface_networks: {\n        providers: InterfaceNetworksProvider[]\n        consumers: InterfaceNetworksConsumer[]\n    }\n    virtual_machines: VirtualMachine[]\n}\n/**\n * Classe che contiene gli attributi che indicano i vincoli di connessione del modulo per l'export.\n */\nexport class ConstraintsMSD {\n    interface_constraints: InterfaceConstraints[]\n    module_constraints: ModuleConstraints[]\n    network_constraints: NetworkConstraints[]\n}\n/**\n * Classe che contiene gli attributi che indicano i viconli per le interfacce di connessione del modulo.\n */\nexport class InterfaceConstraints {\n    local_interface: string\n    multiple_mode: boolean = false //future\n    module_name: string\n    compatibility: string = \"1.0\" // future\n    remote_interface: string\n}\n/**\n * Classe che contiene gli attributi che indicano i viconli del modulo.\n */\nexport class ModuleConstraints {\n}\n/**\n * Classe che contiene gli attributi che indicano i viconli dei network del modulo.\n */\nexport class NetworkConstraints {\n}\n/**\n * Classe che contiene gli attributi che indicano le interfacce provider del modulo.\n */\nexport class InterfaceNetworksProvider {\n    interface: string\n    network: string\n    tag: string\n    subnets: SubnetExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano le interfacce consumer del modulo.\n */\nexport class InterfaceNetworksConsumer {\n    interface: string\n    network: string\n    tag: string\n    subnets: SubnetExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano l'insieme di host presenti in un modulo.\n */\nexport class VirtualMachine {\n    virtual_machine: string\n    ports: VirtualMachinePorts[]\n}\n/**\n * Classe che contiene gli attributi che indicano le porte associate ad un host di un modulo.\n */\nexport class VirtualMachinePorts {\n    port: string\n    network: string\n    subnets: SubnetExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano la subnet connessa alla porte dell'host.\n * @see {VirtualMachinePorts}\n */\nexport class SubnetExport {\n    subnet: string;\n}\n\n/**\n * Classe che contiene gli attributi che indica un nodo all'interno dei node_templates.\n * @see {ModuleExport}\n */\nexport class NodeSimpleData {\n    type: NodeTypeExport\n    properties: any | null // future\n    interfaces: any | null // future\n    relationships: RelationshipsExport[]\n}\n\n/**\n * Classe che contiene gli attributi che indicano le relazioni generali.\n */\nexport class RelationshipsExport {\n    type: RelationshipsTypeExport\n    target: string\n}\n/**\n * Classe che contiene gli attributi che indicano i dati della porta all'interno dei node_templates.\n */\nexport class PortSimpleData {\n    type: PortTypeExport\n    relationships: RelationshipsExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano i dati delle network all'interno dei node_templates.\n */\nexport class NetworkSimpleData {\n    type: NetworkTypeExport\n    properties: PropertiesNSD\n}\n/**\n * Classe che contiene gli attributi che indicano le proprietà della network all'interno dei node_templates.\n * @see {NetworkSimpleData}\n */\nexport class PropertiesNSD {\n    openstack_config?: any | null // future\n    use_external_resource?: boolean | null // future\n    resource_id?: any | null // future\n}\n\n/**\n * Classe che contiene gli attributi che indicano i dati delle subnet all'interno dei node_templates.\n */\nexport class SubnetSimpleData {\n    type: SubnetTypeExport\n    relationships: RelationshipsExport[]\n    properties: PropertiesSSD\n}\n/**\n * Classe che contiene gli attributi che indicano le proprietà della subnet all'interno dei node_templates.\n * @see {NetworkSimpleData}\n */\nexport class PropertiesSSD {\n    subnet?: {\n        ip_version: string | number\n        cidr: string\n        enable_dhcp: boolean\n        gateway_ip?: any | null // future\n    }\n    openstack_config?: any | null // future\n    use_external_resource?: boolean | null // future\n    resource_id?: any | null // future\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/InterfaceNetworksProvider.html":{"url":"classes/InterfaceNetworksProvider.html","title":"class - InterfaceNetworksProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  InterfaceNetworksProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsExport/moduleExport.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano le interfacce provider del modulo.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                interface\n                            \n                            \n                                network\n                            \n                            \n                                subnets\n                            \n                            \n                                tag\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        interface\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        network\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subnets\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         SubnetExport[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tag\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:74\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ModeTypeExport, ModuleTypeExport, NetworkTypeExport, NodeTypeExport, PortTypeExport, RelationshipsTypeExport, SubnetTypeExport, ToscaDefinitionType } from \"./TypeExport\"\n\n\n/**\n * Classe utilizzata per l'export. \n * Contiene le informazioni generali per il modulo che devono esserci nello standard Tosca.\n */\nexport class ModuleExport {\n    tosca_definitions_version: ToscaDefinitionType\n    description: string\n    imports: string[]\n    node_templates: { [name: string]: ModuleSimpleData | NodeSimpleData | PortSimpleData | NetworkSimpleData | SubnetSimpleData }\n    dsl_definition: any | null; //future\n    capabilites: any | null //future\n    outputs: any | null //future\n}\n\n/**\n * Classe che contiene gli attributi che indicano la rappresentazione del modulo per l'export.\n */\nexport class ModuleSimpleData {\n    type: ModuleTypeExport\n    properties: PropertiesMSD\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà del modulo per l'export.\n */\nexport class PropertiesMSD {\n    mode: ModeTypeExport\n    description: string\n    version: string | number\n    constraints: ConstraintsMSD\n    interface_networks: {\n        providers: InterfaceNetworksProvider[]\n        consumers: InterfaceNetworksConsumer[]\n    }\n    virtual_machines: VirtualMachine[]\n}\n/**\n * Classe che contiene gli attributi che indicano i vincoli di connessione del modulo per l'export.\n */\nexport class ConstraintsMSD {\n    interface_constraints: InterfaceConstraints[]\n    module_constraints: ModuleConstraints[]\n    network_constraints: NetworkConstraints[]\n}\n/**\n * Classe che contiene gli attributi che indicano i viconli per le interfacce di connessione del modulo.\n */\nexport class InterfaceConstraints {\n    local_interface: string\n    multiple_mode: boolean = false //future\n    module_name: string\n    compatibility: string = \"1.0\" // future\n    remote_interface: string\n}\n/**\n * Classe che contiene gli attributi che indicano i viconli del modulo.\n */\nexport class ModuleConstraints {\n}\n/**\n * Classe che contiene gli attributi che indicano i viconli dei network del modulo.\n */\nexport class NetworkConstraints {\n}\n/**\n * Classe che contiene gli attributi che indicano le interfacce provider del modulo.\n */\nexport class InterfaceNetworksProvider {\n    interface: string\n    network: string\n    tag: string\n    subnets: SubnetExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano le interfacce consumer del modulo.\n */\nexport class InterfaceNetworksConsumer {\n    interface: string\n    network: string\n    tag: string\n    subnets: SubnetExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano l'insieme di host presenti in un modulo.\n */\nexport class VirtualMachine {\n    virtual_machine: string\n    ports: VirtualMachinePorts[]\n}\n/**\n * Classe che contiene gli attributi che indicano le porte associate ad un host di un modulo.\n */\nexport class VirtualMachinePorts {\n    port: string\n    network: string\n    subnets: SubnetExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano la subnet connessa alla porte dell'host.\n * @see {VirtualMachinePorts}\n */\nexport class SubnetExport {\n    subnet: string;\n}\n\n/**\n * Classe che contiene gli attributi che indica un nodo all'interno dei node_templates.\n * @see {ModuleExport}\n */\nexport class NodeSimpleData {\n    type: NodeTypeExport\n    properties: any | null // future\n    interfaces: any | null // future\n    relationships: RelationshipsExport[]\n}\n\n/**\n * Classe che contiene gli attributi che indicano le relazioni generali.\n */\nexport class RelationshipsExport {\n    type: RelationshipsTypeExport\n    target: string\n}\n/**\n * Classe che contiene gli attributi che indicano i dati della porta all'interno dei node_templates.\n */\nexport class PortSimpleData {\n    type: PortTypeExport\n    relationships: RelationshipsExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano i dati delle network all'interno dei node_templates.\n */\nexport class NetworkSimpleData {\n    type: NetworkTypeExport\n    properties: PropertiesNSD\n}\n/**\n * Classe che contiene gli attributi che indicano le proprietà della network all'interno dei node_templates.\n * @see {NetworkSimpleData}\n */\nexport class PropertiesNSD {\n    openstack_config?: any | null // future\n    use_external_resource?: boolean | null // future\n    resource_id?: any | null // future\n}\n\n/**\n * Classe che contiene gli attributi che indicano i dati delle subnet all'interno dei node_templates.\n */\nexport class SubnetSimpleData {\n    type: SubnetTypeExport\n    relationships: RelationshipsExport[]\n    properties: PropertiesSSD\n}\n/**\n * Classe che contiene gli attributi che indicano le proprietà della subnet all'interno dei node_templates.\n * @see {NetworkSimpleData}\n */\nexport class PropertiesSSD {\n    subnet?: {\n        ip_version: string | number\n        cidr: string\n        enable_dhcp: boolean\n        gateway_ip?: any | null // future\n    }\n    openstack_config?: any | null // future\n    use_external_resource?: boolean | null // future\n    resource_id?: any | null // future\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"components/MirroringModuleInstanceComponent.html":{"url":"components/MirroringModuleInstanceComponent.html","title":"component - MirroringModuleInstanceComponent","body":"\n                   \n\n\n\n\n\n  Componenti\n  \n  MirroringModuleInstanceComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/rete-settings/nodes/rete-modules/mirroringModuleInstance/mirroringModuleInstance.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n            NodeComponent\n    \n\n\n\n\n    Metadati\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            NodeService\n                \n            \n\n\n\n            \n                styleUrls\n                ./mirroringModuleInstance.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./mirroringModuleInstance.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                HostIcon\n                            \n                            \n                                MirroringModuleInstanceIcon\n                            \n                            \n                                ModuleType\n                            \n                            \n                                NetworkIcon\n                            \n                            \n                                showFooter\n                            \n                            \n                                showInputOutlet\n                            \n                            \n                                showOutputOutlet\n                            \n                            \n                                showPorts\n                            \n                            \n                                SubnetIcon\n                            \n                        \n                    \n                \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                showhidesocket\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Costruttore\n        \n            \n                \n                    \nconstructor(service: NodeService, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Definito in src/app/rete-settings/nodes/rete-modules/mirroringModuleInstance/mirroringModuleInstance.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parametri :\n                                    \n                                        \n                                            \n                                                Nome\n                                                    Tipo\n                                                Opzionale\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                    NodeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        showhidesocket\n                        \n                    \n                \n            \n            \n                \nshowhidesocket()\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-modules/mirroringModuleInstance/mirroringModuleInstance.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        HostIcon\n                        \n                    \n                \n            \n                \n                    \n                        Valore predefinito : HostIcon\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-modules/mirroringModuleInstance/mirroringModuleInstance.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MirroringModuleInstanceIcon\n                        \n                    \n                \n            \n                \n                    \n                        Valore predefinito : MirroringModuleInstance_ICON\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-modules/mirroringModuleInstance/mirroringModuleInstance.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ModuleType\n                        \n                    \n                \n            \n                \n                    \n                        Valore predefinito : EnumModuleType\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-modules/mirroringModuleInstance/mirroringModuleInstance.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        NetworkIcon\n                        \n                    \n                \n            \n                \n                    \n                        Valore predefinito : NetworkIcon\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-modules/mirroringModuleInstance/mirroringModuleInstance.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showFooter\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                \n                    \n                        Valore predefinito : true\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-modules/mirroringModuleInstance/mirroringModuleInstance.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showInputOutlet\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                \n                    \n                        Valore predefinito : true\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-modules/mirroringModuleInstance/mirroringModuleInstance.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showOutputOutlet\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                \n                    \n                        Valore predefinito : true\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-modules/mirroringModuleInstance/mirroringModuleInstance.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showPorts\n                        \n                    \n                \n            \n                \n                    \n                        Valore predefinito : true\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-modules/mirroringModuleInstance/mirroringModuleInstance.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SubnetIcon\n                        \n                    \n                \n            \n                \n                    \n                        Valore predefinito : SubnetIcon\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-modules/mirroringModuleInstance/mirroringModuleInstance.component.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, ChangeDetectorRef, ChangeDetectionStrategy } from '@angular/core';\nimport { NodeComponent, NodeService } from 'rete-angular-render-plugin';\nimport { EnumModuleType } from 'src/app/models/appType';\nimport { MirroringModuleInstance_ICON, SubnetIcon, NetworkIcon, HostIcon } from 'src/app/rete-settings/style/styleIconConfig';\n// import { EnumModuleType } from 'src/app/rete-settings/models/reteModelType';\n\n\n@Component({\n  templateUrl: './mirroringModuleInstance.component.html',\n  styleUrls: ['./mirroringModuleInstance.component.sass',],\n  providers: [NodeService],\n  changeDetection: ChangeDetectionStrategy.OnPush, // render più veloce.\n})\n\nexport class MirroringModuleInstanceComponent extends NodeComponent {\n\n  showPorts = true;\n  showOutputOutlet: boolean = true;\n  showInputOutlet: boolean = true;\n  showFooter: boolean = true;\n  \n  MirroringModuleInstanceIcon = MirroringModuleInstance_ICON;\n  ModuleType = EnumModuleType;\n  SubnetIcon=SubnetIcon;\n  NetworkIcon=NetworkIcon;\n  HostIcon=HostIcon;\n\n  constructor(\n    protected service: NodeService,\n    protected cdr: ChangeDetectorRef) {\n    super(service, cdr);\n  }\n\n  showhidesocket() {\n    this.showPorts = !this.showPorts;    \n  }\n  \n}\n\n    \n\n    \n        \n\n  \n    \n      \n        \n          {{ node.data.name === \"\" || node.data.name === undefined ? \"Assign name\" : node.data.name }}\n        \n      \n      \n        \n          \n          \n        \n      \n    \n   -->\n\n\n  \n  \n    \n      \n        \n          \n            \n              \n                 \n              \n              \n                \n                  {{\n                  (node.data.name && node.data.name!=='')\n                  ?node.data.name\n                  :ModuleType.MirroringModuleInstance\n                  }}\n                \n                \n                  {{\n                  (node.data.area && node.data.area!=='')\n                  ?\"area: \"+node.data.area\n                  :''\n                  }}\n                \n                \n                  {{\n                  (node.data.version && node.data.version!=='')\n                  ?\"version: \"+node.data.version\n                  :''\n                  }}\n                \n              \n            \n          \n        \n      \n    \n  \n\n\n  \n    \n      Button with data-bs-target\n    \n  \n  \n    \n      Some placeholder content for the collapse component. This panel is hidden by default but revealed when the user\n      activates the relevant trigger.\n    \n   -->\n\n\n  \n\n    \n    \n      \n        {{output.name}}\n        \n          \n          P\n          \n        \n      \n    \n\n\n     -->\n\n    \n    \n      \n        \n          \n          \n          C\n          \n        \n        {{input.name}}\n        \n      \n    \n\n  \n\n\n\n  \n  \n    \n\n      \n        \n        {{\n        node.data.host_number\n        ?node.data.host_number\n        :0\n        }}\n      \n\n      \n        \n        {{\n        node.data.subnet_number\n        ?node.data.subnet_number\n        :0\n        }}\n      \n\n      \n        \n        {{\n        node.data.network_number\n        ?node.data.network_number\n        :0\n        }}\n      \n\n    \n  \n\n\n\n    \n\n    \n                \n                    ./mirroringModuleInstance.component.sass\n                \n                @import \"../vars\"\n\n.node\n  background: $node-color\n  border: 2px solid #f124\n  border-radius: 10px\n  cursor: pointer\n  min-width: $node-width\n  height: auto\n  padding-bottom: 6px\n  box-sizing: content-box\n  position: relative\n  user-select: none\n  &:hover\n    background: lighten($node-color,4%)\n  &.selected\n    background: $node-color-selected\n    border-color: #ff0000\n  .title\n    color: $text-color\n    font-family: $font-fam\n    font-size: 18px\n    padding: 8px\n  .output\n    text-align: right\n    display: flex\n    justify-content: flex-end\n  .input\n    text-align: left\n    display: flex\n    justify-content: flex-start\n  .input-title,.output-title\n    vertical-align: middle\n    color: $text-color\n    display: inline-block\n    font-family: $font-fam\n    font-size: 14px\n    margin: $socket-margin\n    line-height: $socket-size\n    &[hidden]\n      display: none\n  .input-control\n    z-index: 1\n    width: calc(100% - #{$socket-size + 2*$socket-margin})\n    vertical-align: middle\n    display: inline-block\n  .control\n    padding: $socket-margin $socket-size/2 + $socket-margin\n\n    \n\n    \n        \n        \n            \n                Legenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento html con direttive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              {{ node.data.name === \"\" || node.data.name === undefined ? \"Assign name\" : node.data.name }}                                                                     -->                                                                                                                                         {{                  (node.data.name && node.data.name!==\\'\\')                  ?node.data.name                  :ModuleType.MirroringModuleInstance                  }}                                                  {{                  (node.data.area && node.data.area!==\\'\\')                  ?\"area: \"+node.data.area                  :\\'\\'                  }}                                                  {{                  (node.data.version && node.data.version!==\\'\\')                  ?\"version: \"+node.data.version                  :\\'\\'                  }}                                                                                    Button with data-bs-target                  Some placeholder content for the collapse component. This panel is hidden by default but revealed when the user      activates the relevant trigger.       -->                        {{output.name}}                            P                                 -->                                                    C                          {{input.name}}                                                  {{        node.data.host_number        ?node.data.host_number        :0        }}                            {{        node.data.subnet_number        ?node.data.subnet_number        :0        }}                            {{        node.data.network_number        ?node.data.network_number        :0        }}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ComposerComponent', 'selector': 'app-composer'},{'name': 'ControlTemplate', 'selector': ''},{'name': 'DataInputComponent', 'selector': 'app-data-input'},{'name': 'DataInputV2Component', 'selector': 'app-data-input-v2'},{'name': 'DataItemComponent', 'selector': 'app-window-item'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HostComponent', 'selector': ''},{'name': 'HowToUseComponent', 'selector': 'app-how-to-use'},{'name': 'MirroringModuleInstanceComponent', 'selector': ''},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavbarElementComponent', 'selector': 'app-navbar-element'},{'name': 'NetworkComponent', 'selector': ''},{'name': 'OffcanvasComponent', 'selector': 'app-offcanvas'},{'name': 'ReteModuleComposerComponent', 'selector': 'app-rete-module-composer'},{'name': 'ReteModuleVisualizerComponent', 'selector': 'app-rete-module-visualizer'},{'name': 'ReteTheaterComposerComponent', 'selector': 'app-rete-theater-composer'},{'name': 'ReteTheaterVisualizerComponent', 'selector': 'app-rete-theater-visualizer'},{'name': 'SubnetComponent', 'selector': ''},{'name': 'TabnavComponent', 'selector': 'app-tabnav'},{'name': 'TheaterInternalServiceModuleInstanceComponent', 'selector': ''},{'name': 'TheaterModuleInstanceComponent', 'selector': ''},{'name': 'UnderbarComponent', 'selector': 'app-underbar'},{'name': 'VisualizerComponent', 'selector': 'app-displayer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MirroringModuleInstanceComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/MirroringModuleInstanceNode.html":{"url":"classes/MirroringModuleInstanceNode.html","title":"class - MirroringModuleInstanceNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  MirroringModuleInstanceNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/rete-settings/nodes/rete-modules/mirroringModuleInstance/mirroringModuleInstanceNode.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che rappresenta il modulo (rete-node) MirroringModuleInstance all'interno del canvas/editor di rete.\n\n            \n\n            \n                Extends\n            \n            \n                        Component\n            \n\n            \n                Implementa\n            \n            \n                        AngularComponent\n            \n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                builder\n                            \n                            \n                                created\n                            \n                            \n                                createNewNode\n                            \n                            \n                                destroyed\n                            \n                            \n                                valorizeNode\n                            \n                            \n                                worker\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Costruttore\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Definito in src/app/rete-settings/nodes/rete-modules/mirroringModuleInstance/mirroringModuleInstanceNode.ts:49\n                            \n                        \n\n                \n                    \n                            Costruttore di MirroringModuleInstanceNode\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     AngularComponentData\n\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-modules/mirroringModuleInstance/mirroringModuleInstanceNode.ts:49\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        builder\n                        \n                    \n                \n            \n            \n                \n                    \n                    builder(node: Node)\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-modules/mirroringModuleInstance/mirroringModuleInstanceNode.ts:67\n                \n            \n\n\n            \n                \n                    Funzione richiamata in fase di costruzione del nodo (rete-node).\nControlla se bisogna instanziare il nodo oppure crearne uno nuovo:\n\nIn fase di design, il nodo non ha dati, per cui bisogna crearne uno nuovo.\nIn fase di visualizing, il nodo presenta dei dati, per cui va valorizzato il nodo.\n\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        created\n                        \n                    \n                \n            \n            \n                \ncreated(node: Node)\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-modules/mirroringModuleInstance/mirroringModuleInstanceNode.ts:130\n                \n            \n\n\n            \n                \n                    Funzione richiamata una volta in nodo creato.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createNewNode\n                        \n                    \n                \n            \n            \n                \ncreateNewNode(node: Node)\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-modules/mirroringModuleInstance/mirroringModuleInstanceNode.ts:79\n                \n            \n\n\n            \n                \n                    Funzione che ha come scopo creare un nodo (rete-node).\nIn particolare gli assegna una struttura vuota.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destroyed\n                        \n                    \n                \n            \n            \n                \ndestroyed(node: Node)\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-modules/mirroringModuleInstance/mirroringModuleInstanceNode.ts:138\n                \n            \n\n\n            \n                \n                    Funzione richiamata una volta in nodo cancellato.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        valorizeNode\n                        \n                    \n                \n            \n            \n                \nvalorizeNode(node: Node)\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-modules/mirroringModuleInstance/mirroringModuleInstanceNode.ts:92\n                \n            \n\n\n            \n                \n                    Funzione che ha come scopo la valorizzazione del nodo (rete-node) con i dati in suo possesso.\nIn quasta fase avviene anche la fase iniziale di instanziamento delle porte input/output.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        worker\n                        \n                    \n                \n            \n            \n                \nworker(node: NodeData, inputs: WorkerInputs, outputs: WorkerOutputs)\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-modules/mirroringModuleInstance/mirroringModuleInstanceNode.ts:122\n                \n            \n\n\n            \n                \n                    Funzione richiamta per eseguire operazioni che conivolgono computazioni dei nodi.\nNon sono necessari in questa versione.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                            NodeData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    inputs\n                                    \n                                            WorkerInputs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    outputs\n                                    \n                                            WorkerOutputs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Component, Input, Output, Node } from 'rete';\nimport { _Socket } from '../../../sockets/socket';\nimport { _Control } from '../../../controls/control';\nimport { AngularComponent, AngularComponentData } from 'rete-angular-render-plugin';\nimport { NodeData, WorkerInputs, WorkerOutputs } from 'rete/types/core/data';\nimport { MirroringModuleInstanceComponent } from './mirroringModuleInstance.component';\nimport { reteBasicModuleInfo } from '../../reteBasic';\nimport { EnumModuleType } from 'src/app/models/appType';\n\n/**\n * Classe utilizzata per indicare il tipo di modulo MirroringModuleInstanceNode.\n * @see {reteBasicModuleInfo}\n */\nexport class ReteMirroringModuleInstanceInfo extends reteBasicModuleInfo {\n  type: EnumModuleType.MirroringModuleInstance;\n}\n\n/**\n * Funzione dichiarata in MirroringModuleInstanceNode. \n * Essa ha lo scopo di generare una struttura dati empty.\n * Viene utilizzata in per instanziare un nodo del tipo di ritorno indicato senza dati.\n * @returns {ReteMirroringModuleInstanceInfo}\n */\nexport function getEmptyReteMirroringModuleInstanceInfo(): ReteMirroringModuleInstanceInfo {\n  let x: ReteMirroringModuleInstanceInfo = {\n    Input: [],\n    Output: [],\n    description: \"\",\n    name: \"\",\n    type: EnumModuleType.MirroringModuleInstance,\n    area: \"\",\n    host_number: 0,\n    network_number: 0,\n    subnet_number: 0,\n    module: '',\n    version: '',\n    sequence: '',\n    consumer_interfaces_link: []\n  };\n  return x;\n}\n\n\n/**\n * Classe che rappresenta il modulo (rete-node) MirroringModuleInstance all'interno del canvas/editor di rete.\n */\nexport class MirroringModuleInstanceNode extends Component implements AngularComponent {\n\n  data: AngularComponentData;\n\n  /**\n   * Costruttore di MirroringModuleInstanceNode\n   */\n  constructor() {\n    super(EnumModuleType.MirroringModuleInstance);\n    this.data.render = 'angular';\n    this.data.component = MirroringModuleInstanceComponent;\n  }\n\n  /**\n   * Funzione richiamata in fase di costruzione del nodo (rete-node).\n   * Controlla se bisogna instanziare il nodo oppure crearne uno nuovo:\n   * - In fase di design, il nodo non ha dati, per cui bisogna crearne uno nuovo.\n   * - In fase di visualizing, il nodo presenta dei dati, per cui va valorizzato il nodo.\n   * @param node \n   */\n  async builder(node: Node) {\n    if (Object.keys(node.data).length === 0)\n      this.createNewNode(node)\n    else\n      this.valorizeNode(node)\n  }\n\n  /**\n   * Funzione che ha come scopo creare un nodo (rete-node).\n   * In particolare gli assegna una struttura vuota.\n   * @param node \n   */\n  createNewNode(node: Node) {\n    let t = getEmptyReteMirroringModuleInstanceInfo()\n    node.data = {\n      ...node.data,\n      ...t\n    }\n  }\n\n  /**\n   * Funzione che ha come scopo la valorizzazione del nodo (rete-node) con i dati in suo possesso.\n   * In quasta fase avviene anche la fase iniziale di instanziamento delle porte input/output.\n   * @param node \n   */\n  valorizeNode(node: Node) {\n    var i: any = node.data['Input'];\n    var o: any = node.data['Output'];\n    var il = i.length;\n    var ol = o.length;\n\n    for (let index = 0; index \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/ModalButton.html":{"url":"classes/ModalButton.html","title":"class - ModalButton","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  ModalButton\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/modal/modalType.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Elemento che indica il tipo di pulsante nel modal.\nEsso è usato anche come di ritorno dell'evento \"button-clicked\".\nSee {ModalComponent}\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                text\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/modal/modalType.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        text\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/modal/modalType.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     \"primary\" | \"secondary\" | \"danger\" | \"success\"\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/modal/modalType.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { TemplateRef } from \"@angular/core\";\n\n/**\n * Tipo di dato passato alla componente ModalComponent per l'elaborazione.\n *  @see {ModalComponent}\n */\nexport class ModalItem {\n    title: string;\n    text_content?: string;\n    template?: TemplateRef;\n    buttons: ModalButton[];\n    backgroundColor?: string = \"ffffff5e\";\n}\n/**\n * Elemento che indica il tipo di pulsante nel modal.\n * Esso è usato anche come di ritorno dell'evento \"button-clicked\".\n * @see {ModalComponent}\n */\nexport class ModalButton {\n    id: string;\n    text: string;\n    type: \"primary\" | \"secondary\" | \"danger\" | \"success\";\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"components/ModalComponent.html":{"url":"components/ModalComponent.html","title":"component - ModalComponent","body":"\n                   \n\n\n\n\n\n  Componenti\n  \n  ModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/modal/modal.component.ts\n\n\n\n    \n        Descrizione\n    \n    \n        Componente che ha come scopo la visualizzazione di una modale a contenuto generico.\n\n    \n\n\n\n\n\n    Metadati\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-modal\n            \n\n            \n                styleUrls\n                ./modal.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./modal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _show\n                            \n                        \n                    \n                \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                clickButton\n                            \n                            \n                                closemodal\n                            \n                            \n                                showModal\n                            \n                        \n                    \n                \n\n                \n                    \n                        Input\n                    \n                \n                \n                    \n                        \n                            \n                                element\n                            \n                            \n                                show\n                            \n                        \n                    \n                \n\n                \n                    \n                        Output\n                    \n                \n                \n                    \n                        \n                            \n                                onButtonPressed\n                            \n                            \n                                showChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessori\n                        \n                    \n                    \n                        \n                            \n                                \n                                    show\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Costruttore\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Definito in src/app/components/modal/modal.component.ts:46\n                            \n                        \n\n                \n                    \n                            Costrutture componente ModalComponent.\n\n                    \n                \n            \n        \n\n\n    \n    Input\n        \n            \n                \n                    \n                        \n                        element\n                    \n                \n                \n                    \n                        Tipo :         ModalItem\n\n                    \n                \n                        \n                            \n                                    Definito in src/app/components/modal/modal.component.ts:20\n                            \n                        \n                \n                    \n                        Variabile in input usata per la configurazione della modale.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        show\n                    \n                \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                        \n                            \n                                    Definito in src/app/components/modal/modal.component.ts:33\n                            \n                        \n                \n                    \n                        Variabile (set) input che rappresenta lo stato dell'hide-or-show della modale\nQuando esegue l'update del valore show. Lo emette anche in output.\nSee {_show}\n\n                    \n                \n            \n        \n\n    \n    Output\n        \n            \n                \n                    \n                        \n                        onButtonPressed\n                    \n                \n                \n                    \n                        Tipo :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Definito in src/app/components/modal/modal.component.ts:46\n                            \n                        \n                \n                    \n                        Variabile (emitter) di output che rappresenta l'evento di click dei pulsanti.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        showChange\n                    \n                \n                \n                    \n                        Tipo :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Definito in src/app/components/modal/modal.component.ts:40\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        clickButton\n                        \n                    \n                \n            \n            \n                \nclickButton(val: ModalButton)\n                \n            \n\n\n            \n                \n                    Definito in src/app/components/modal/modal.component.ts:75\n                \n            \n\n\n            \n                \n                    Funzione che capta l'evento di pulsante cliccato e lo emette in output.\nSee {onButtonPressed}\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                ModalButton\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        closemodal\n                        \n                    \n                \n            \n            \n                \nclosemodal()\n                \n            \n\n\n            \n                \n                    Definito in src/app/components/modal/modal.component.ts:58\n                \n            \n\n\n            \n                \n                    Funzione che setta la variabile show a false\nSee {show}\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showModal\n                        \n                    \n                \n            \n            \n                \nshowModal()\n                \n            \n\n\n            \n                \n                    Definito in src/app/components/modal/modal.component.ts:66\n                \n            \n\n\n            \n                \n                    Funzione che setta la variabile show a true\nSee {show}\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _show\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/modal/modal.component.ts:26\n                        \n                    \n\n            \n                \n                    Variabile di appoggio per l'hide-or-show della modale\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessori\n    \n        \n            \n                \n                    \n                        \n                        show\n                    \n                \n\n                \n                    \n                        getshow()\n                    \n                \n                            \n                                \n                                    Definito in src/app/components/modal/modal.component.ts:37\n                                \n                            \n\n                \n                    \n                        setshow(val: boolean)\n                    \n                \n                            \n                                \n                                    Definito in src/app/components/modal/modal.component.ts:33\n                                \n                            \n                    \n                        \n                                Variabile (set) input che rappresenta lo stato dell'hide-or-show della modale\nQuando esegue l'update del valore show. Lo emette anche in output.\nSee {_show}\n\n\n                                \n                                        Parametri :\n                                        \n                                            \n                                                \n                                                    Nome\n                                                        Tipo\n                                                    Opzionale\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, EventEmitter, Input } from '@angular/core';\nimport { Output } from '@angular/core';\nimport { ModalButton, ModalItem } from './modalType';\n\n\n/**\n * Componente che ha come scopo la visualizzazione di una modale a contenuto generico.\n */\n@Component({\n  selector: 'app-modal',\n  templateUrl: './modal.component.html',\n  styleUrls: ['./modal.component.sass']\n})\nexport class ModalComponent {\n\n  /**\n   * Variabile in input usata per la configurazione della modale.\n   * @type {ModalItem}\n   */\n  @Input() element: ModalItem;\n\n  /**\n   * Variabile di appoggio per l'hide-or-show della modale\n   * @type {boolean}\n   */\n  protected _show: boolean;  \n  /**\n   * Variabile (set) input che rappresenta lo stato dell'hide-or-show della modale\n   * Quando esegue l'update del valore show. Lo emette anche in output.\n   * @see {_show}\n   */\n  @Input()\n  set show(val: boolean) {\n    this.showChange.emit(val);\n    this._show = val;\n  }\n  get show() {\n    return this._show;\n  }\n  @Output() showChange: EventEmitter = new EventEmitter();\n\n  /**\n   * Variabile (emitter) di output che rappresenta l'evento di click dei pulsanti.\n   * @type {EventEmitter}\n   */\n  @Output() onButtonPressed: EventEmitter = new EventEmitter();\n\n  /**\n   * Costrutture componente ModalComponent.\n   */\n  constructor() {\n  }\n\n  /**\n   * Funzione che setta la variabile show a false\n   * @see {show}\n   */\n  closemodal(){\n    this.show=false;\n  }\n\n  /**\n   * Funzione che setta la variabile show a true\n   * @see {show}\n   */\n  showModal(){\n    this.show=true;\n  }\n\n  /**\n   * Funzione che capta l'evento di pulsante cliccato e lo emette in output.\n   * @param val \n   * @see {onButtonPressed}\n   */\n  clickButton( val: ModalButton){\n    this.onButtonPressed.emit(val);\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n            \n                \n                    {{element.title}}\n                \n                \n                    \n                        &times;\n                    \n                \n            \n            \n                 {{element.text_content}} \n                \n                \n            \n            0\" class=\"modal-footer\">\n                \n                    \n                        {{item.text}}\n                    \n                \n            \n        \n    \n\n    \n\n    \n                \n                    ./modal.component.sass\n                \n                \n    \n\n    \n        \n        \n            \n                Legenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento html con direttive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                            {{element.title}}                                                                            ×                                                                             {{element.text_content}}                                                         0\" class=\"modal-footer\">                                                            {{item.text}}                                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ComposerComponent', 'selector': 'app-composer'},{'name': 'ControlTemplate', 'selector': ''},{'name': 'DataInputComponent', 'selector': 'app-data-input'},{'name': 'DataInputV2Component', 'selector': 'app-data-input-v2'},{'name': 'DataItemComponent', 'selector': 'app-window-item'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HostComponent', 'selector': ''},{'name': 'HowToUseComponent', 'selector': 'app-how-to-use'},{'name': 'MirroringModuleInstanceComponent', 'selector': ''},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavbarElementComponent', 'selector': 'app-navbar-element'},{'name': 'NetworkComponent', 'selector': ''},{'name': 'OffcanvasComponent', 'selector': 'app-offcanvas'},{'name': 'ReteModuleComposerComponent', 'selector': 'app-rete-module-composer'},{'name': 'ReteModuleVisualizerComponent', 'selector': 'app-rete-module-visualizer'},{'name': 'ReteTheaterComposerComponent', 'selector': 'app-rete-theater-composer'},{'name': 'ReteTheaterVisualizerComponent', 'selector': 'app-rete-theater-visualizer'},{'name': 'SubnetComponent', 'selector': ''},{'name': 'TabnavComponent', 'selector': 'app-tabnav'},{'name': 'TheaterInternalServiceModuleInstanceComponent', 'selector': ''},{'name': 'TheaterModuleInstanceComponent', 'selector': ''},{'name': 'UnderbarComponent', 'selector': 'app-underbar'},{'name': 'VisualizerComponent', 'selector': 'app-displayer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/ModalItem.html":{"url":"classes/ModalItem.html","title":"class - ModalItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  ModalItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/modal/modalType.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Tipo di dato passato alla componente ModalComponent per l'elaborazione.\n @see {ModalComponent}\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                    Opzionale\n                                backgroundColor\n                            \n                            \n                                buttons\n                            \n                            \n                                    Opzionale\n                                template\n                            \n                            \n                                    Opzionale\n                                text_content\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        backgroundColor\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                \n                    \n                        Valore predefinito : \"ffffff5e\"\n                    \n                \n                    \n                        \n                                Definito in src/app/components/modal/modalType.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buttons\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ModalButton[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/modal/modalType.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        template\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     TemplateRef\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/modal/modalType.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        text_content\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/modal/modalType.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/modal/modalType.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { TemplateRef } from \"@angular/core\";\n\n/**\n * Tipo di dato passato alla componente ModalComponent per l'elaborazione.\n *  @see {ModalComponent}\n */\nexport class ModalItem {\n    title: string;\n    text_content?: string;\n    template?: TemplateRef;\n    buttons: ModalButton[];\n    backgroundColor?: string = \"ffffff5e\";\n}\n/**\n * Elemento che indica il tipo di pulsante nel modal.\n * Esso è usato anche come di ritorno dell'evento \"button-clicked\".\n * @see {ModalComponent}\n */\nexport class ModalButton {\n    id: string;\n    text: string;\n    type: \"primary\" | \"secondary\" | \"danger\" | \"success\";\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"injectables/ModalService.html":{"url":"injectables/ModalService.html","title":"injectable - ModalService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ModalService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/application/modal/modal.service.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Servizio di gestione modale.\nQuesto servizio è direttamente collegato con le generiche componenti verso l'AppComponent (principale).\nNell'AppComponent si trova una modale.\nIl che comporta la possibilità, attraverso questo servizio di poter essere attivata da tutte le componenti.\nUtilizzata quasi esclusivamente per delle conferma/cancellazione delle operazioni.\nAttenzione. Nella fase di show e scelta, essa ritorna 2 valori: Un valore null (da non considerare) e il secondo valore, la scelta dell'utente.\nPer cui va utilizzata, nella subscribe, take(2). Per fare in modo di ricevere questi due valori e poi eseguire l'unsibscribe\n\n            \n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                modalData\n                            \n                            \n                                    Public\n                                show\n                            \n                            \n                                    Public\n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                getModal\n                            \n                            \n                                setConfirmationModal\n                            \n                            \n                                setResponse\n                            \n                            \n                                showConfirmationModal\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Costruttore\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Definito in src/app/services/application/modal/modal.service.ts:56\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        getModal\n                        \n                    \n                \n            \n            \n                \ngetModal()\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/modal/modal.service.ts:66\n                \n            \n\n\n            \n                \n                    Funzione che ritorna lo stato della modale show/hide.\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setConfirmationModal\n                        \n                    \n                \n            \n            \n                \nsetConfirmationModal(text_content: string)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/modal/modal.service.ts:74\n                \n            \n\n\n            \n                \n                    Funzione che setta la modale in un determinato stato con un determinato messaggio.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    text_content\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setResponse\n                        \n                    \n                \n            \n            \n                \nsetResponse(val: ModalButton)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/modal/modal.service.ts:86\n                \n            \n\n\n            \n                \n                    Funzione che consente di settare il valore (conferma/non conferma) della modale.\nQuando si sceglie, in automatico avviene la chiusura.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                ModalButton\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showConfirmationModal\n                        \n                    \n                \n            \n            \n                \nshowConfirmationModal(text_content: string)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/modal/modal.service.ts:106\n                \n            \n\n\n            \n                \n                    Funzione che setta lo stato della modale. E la mostra.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    text_content\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        modalData\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Valore predefinito : new BehaviorSubject(modalItem)\n                    \n                \n                    \n                        \n                                Definito in src/app/services/application/modal/modal.service.ts:44\n                        \n                    \n\n            \n                \n                    Variabile che memorizza i dati della modale.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        show\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Valore predefinito : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Definito in src/app/services/application/modal/modal.service.ts:50\n                        \n                    \n\n            \n                \n                    Variabile che indica lo stato della modale hide/show.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Valore predefinito : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Definito in src/app/services/application/modal/modal.service.ts:56\n                        \n                    \n\n            \n                \n                    Variabile che indica lo stato della modale hide/show.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { ModalButton, ModalItem } from 'src/app/components/modal/modalType';\n\n\n\nlet modalItem: ModalItem = {\n  title: 'Confirm operation',\n  buttons: [\n    {\n      id: \"yes\",\n      text: \"Yes\",\n      type: \"primary\",\n    },\n    {\n      id: \"no\",\n      text: \"No\",\n      type: \"secondary\",\n    }\n  ],\n  backgroundColor: \"#0000005e\",\n  text_content: \"\"\n};\n\n\n/**\n * Servizio di gestione modale.\n * Questo servizio è direttamente collegato con le generiche componenti verso l'AppComponent (principale).\n * Nell'AppComponent si trova una modale.\n * Il che comporta la possibilità, attraverso questo servizio di poter essere attivata da tutte le componenti.\n * Utilizzata quasi esclusivamente per delle conferma/cancellazione delle operazioni.\n * Attenzione. Nella fase di show e scelta, essa ritorna 2 valori: Un valore null (da non considerare) e il secondo valore, la scelta dell'utente.\n * Per cui va utilizzata, nella subscribe, take(2). Per fare in modo di ricevere questi due valori e poi eseguire l'unsibscribe\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ModalService {\n\n  /**\n   * Variabile che memorizza i dati della modale.\n   * @type {BehaviorSubject}\n   */\n  public modalData: BehaviorSubject = new BehaviorSubject(modalItem);\n  /**\n   * Variabile che indica lo stato della modale hide/show.\n   * @type {BehaviorSubject}\n   * @default {false}\n   */\n  public show: BehaviorSubject = new BehaviorSubject(false);\n  /**\n   * Variabile che indica lo stato della modale hide/show.\n   * @type {BehaviorSubject}\n   * @default {false}\n   */\n  public value: BehaviorSubject = new BehaviorSubject(false);\n\n  constructor() {\n    // this.setConfirmationModal(\"\");\n  }\n\n  /**\n   * Funzione che ritorna lo stato della modale show/hide.\n   * @returns {Observable}\n   */\n  getModal(): Observable {\n    return this.value.asObservable();\n  }\n\n  /**\n   * Funzione che setta la modale in un determinato stato con un determinato messaggio.\n   * @param text_content \n   */\n  setConfirmationModal(text_content: string) {\n    this.value.next(null); //clear old resposnse first\n    modalItem.text_content = text_content;\n    this.modalData.next(modalItem);\n    this.show.next(true);\n  }\n\n  /**\n   * Funzione che consente di settare il valore (conferma/non conferma) della modale.\n   * Quando si sceglie, in automatico avviene la chiusura.\n   * @param val \n   */\n  setResponse(val: ModalButton){\n    if(!val) return \n    if(val.id===\"yes\"){\n      this.value.next(true);\n    }\n    else if(val.id===\"no\"){\n      this.value.next(false);\n    }\n    else{\n      console.warn(\"only yes-no available\");\n    }\n    this.show.next(false);\n  }\n\n\n  /**\n   * Funzione che setta lo stato della modale. E la mostra.\n   * @param text_content \n   * @returns {Observable}\n   */\n  showConfirmationModal(text_content: string): Observable{\n    if (!text_content) return; \n    this.setConfirmationModal(text_content);\n    return this.getModal();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/ModuleApplication.html":{"url":"classes/ModuleApplication.html","title":"class - ModuleApplication","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  ModuleApplication\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsApplication/applicationModels.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe contenente gli attributi utilizzati per le operazioni che coinvolgono i moduli.\nps. Questa struttura è prettamente utilizzata nella chiamata relativa al singolo modulo.\n\n            \n\n            \n                Extends\n            \n            \n                        ModuleDTO\n            \n\n            \n                Implementa\n            \n            \n                            CommonModule\n            \n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                host_number\n                            \n                            \n                                hosts\n                            \n                            \n                                imports\n                            \n                            \n                                interfaces\n                            \n                            \n                                network_number\n                            \n                            \n                                subnet_number\n                            \n                            \n                                topology\n                            \n                            \n                                    Opzionale\n                                validateObject\n                            \n                            \n                                attachments\n                            \n                            \n                                author\n                            \n                            \n                                capabilities\n                            \n                            \n                                catalog1\n                            \n                            \n                                catalog2\n                            \n                            \n                                catalog3\n                            \n                            \n                                classification\n                            \n                            \n                                configurationTemplate\n                            \n                            \n                                detailProperties\n                            \n                            \n                                input\n                            \n                            \n                                mode\n                            \n                            \n                                output\n                            \n                            \n                                statistics\n                            \n                            \n                                tags\n                            \n                            \n                                createdBy\n                            \n                            \n                                createdDate\n                            \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                isLocked\n                            \n                            \n                                lastModifiedBy\n                            \n                            \n                                lastModifiedDate\n                            \n                            \n                                lockAcquiredTimestamp\n                            \n                            \n                                lockLastUserAcquiring\n                            \n                            \n                                lockReleasedTimestamp\n                            \n                            \n                                name\n                            \n                            \n                                status\n                            \n                            \n                                    Opzionale\n                                type\n                            \n                            \n                                uuid\n                            \n                            \n                                version\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        host_number\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsApplication/applicationModels.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hosts\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     HostModuleDTO[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsApplication/applicationModels.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        imports\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsApplication/applicationModels.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        interfaces\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ModuleNetworkInterfaceDTO[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsApplication/applicationModels.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        network_number\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsApplication/applicationModels.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subnet_number\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsApplication/applicationModels.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        topology\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         NodeTopologyElement\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsApplication/applicationModels.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        validateObject\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                \n                    \n                        Valore predefinito : \"module\"\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsApplication/applicationModels.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        attachments\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string[]\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleDTO:124\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        author\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleDTO:125\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        capabilities\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     literal type\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleDTO:126\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        catalog1\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         TypesCatalogueDTO\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleDTO:127\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        catalog2\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         TypesCatalogueDTO\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleDTO:128\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        catalog3\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         TypesCatalogueDTO\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleDTO:129\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        classification\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ModuleClassificationDTO\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleDTO:130\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        configurationTemplate\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ConfigurationTemplateDTO\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleDTO:131\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        detailProperties\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     literal type\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleDTO:132\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        input\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     literal type\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleDTO:133\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ModuleModeDTO\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleDTO:135\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        output\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     literal type\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleDTO:134\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        statistics\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     literal type\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleDTO:136\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tags\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     []\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleDTO:137\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:102\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdDate\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:103\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:104\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:105\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLocked\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:106\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastModifiedBy\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:107\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastModifiedDate\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:108\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lockAcquiredTimestamp\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:109\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lockLastUserAcquiring\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:110\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lockReleasedTimestamp\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:111\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:112\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ModuleStatusDTO\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:113\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | any\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:114\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uuid\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:115\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:116\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ReteHostInfo } from \"src/app/rete-settings/nodes/rete-nodes/host/hostNode\";\nimport { ReteNetworkInfo } from \"src/app/rete-settings/nodes/rete-nodes/network/networkNode\";\nimport { ReteSubnetInfo } from \"src/app/rete-settings/nodes/rete-nodes/subnet/subnetNode\";\nimport { ReteMirroringModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/mirroringModuleInstance/mirroringModuleInstanceNode\";\nimport { ReteTheaterInternalServiceModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/theaterInternalServiceModuleInstance/theaterInternalServiceModuleInstanceNode\";\nimport { ReteTheaterModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/theaterModuleInstance/theaterModuleInstanceNode\";\nimport { FlavorBasicInfo } from \"../modelsDTO/falvorDTO\";\nimport { HostModuleDTO } from \"../modelsDTO/hostDTO\";\nimport { ModuleNetworkInterfaceDTO, ModuleInstancePropertiesDTO, SimpleModuleDTO, TheaterInstancePropertiesDTO, ModuleInstanceDTO, ModuleDTO, SimpleAreaDTO, AreaDTO } from \"../modelsDTO/moduleDTO\";\nimport { TheaterDTO } from \"../modelsDTO/theaterDTO\";\n\n\nexport interface CommonModule {\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n}\n\n\n/**\n * Classe contenente gli attributi utilizzati per le operazioni che coinvolgono i moduli.\n * ps. Questa struttura è prettamente utilizzata nella chiamata relativa al singolo modulo.\n */\nexport class ModuleApplication extends ModuleDTO implements CommonModule {\n    imports: string[] // perchè nell'export yaml è previsto\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n    // serve per validare il json risultante dal parsing del theaterApplication\n    validateObject?: string = \"module\";\n}\n// PER IMPLEMENTAZIONI FUTURE, PER COERENZA, PRENDERE DIRETTAMENTE I SINGOLI NODI DALLA CHIAMATA ESCLUSIVA E NON DA QUELLA CHE RESTITUISCE TUTTI I TEATRI\n/**\n * Classe contenente gli attributi utilizzati per le operazioni che coinvolgono i moduli.\n * ps. Questa struttura è prettamente utilizzata nella chiamata che prende tutti i moduli del teatro.\n */\nexport class SimpleModuleApplication extends SimpleModuleDTO implements CommonModule {\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n}\n\n\nexport class ReteConnection {\n    from: string;\n    port_src: string;\n    to: string;\n    port_dst: string;\n}\n\nexport interface TopologyList {\n    rete: any;\n    topology?: TopologyElement\n}\nexport class TopologyElement {\n    elements: { [name: string]: any };\n    connection: ReteConnection[]\n}\n\n// apptype module topology\n\nexport class NodeTopologyElement implements TopologyElement {\n    elements: { [hostName: string]: ReteHostInfo | ReteSubnetInfo | ReteNetworkInfo };\n    connection: ReteConnection[]\n}\n\nexport interface ModuleTopology extends TopologyList {\n    rete: ReteMirroringModuleInstanceInfo | ReteTheaterInternalServiceModuleInstanceInfo | ReteTheaterModuleInstanceInfo\n    topology: NodeTopologyElement;\n}\n\nexport class ModuleInstance extends ModuleInstanceDTO implements ModuleTopology {\n    // moduleTopology data\n    rete: ReteTheaterModuleInstanceInfo | ReteTheaterInternalServiceModuleInstanceInfo | ReteMirroringModuleInstanceInfo;\n    topology: NodeTopologyElement;\n    // other data\n    moduleInfo: SimpleModuleApplication\n}\n\n// apptype theater theater\n\nexport interface TheaterTopology extends TopologyElement {\n    elements: { [hostName: string]: ModuleInstance };\n    connection: ReteConnection[];\n}\n\nexport class TheaterApplication extends TheaterDTO implements TheaterTopology {\n    // theaterTopology data\n    elements: { [hostName: string]: ModuleInstance; };\n    connection: ReteConnection[];\n    // other data\n    properties: TheaterInstancePropertiesDTO;\n    topology: TheaterTopology;\n    // serve per validare il json risultante dal parsing del theaterApplication\n    validateObject?: string = \"theater\";\n}\n\nexport class AreaApplication extends AreaDTO {\n    color?: string;\n}\nexport class AreaColorDTO extends SimpleAreaDTO {\n    color: string;\n}\n\n\nexport class FlavorApplication extends FlavorBasicInfo {\n    flavorName: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/ModuleClassificationDTO.html":{"url":"classes/ModuleClassificationDTO.html","title":"class - ModuleClassificationDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  ModuleClassificationDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsDTO/moduleDTO.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano la classificazione del modulo.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                blueprintType\n                            \n                            \n                                category\n                            \n                            \n                                expectedInstanceType\n                            \n                            \n                                id\n                            \n                            \n                                mcClass\n                            \n                            \n                                type\n                            \n                            \n                                uuid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        blueprintType\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        expectedInstanceType\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mcClass\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uuid\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:42\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PageableDTO, SortDTO } from './elementDTO';\nimport { NetworkDTO } from './networkDTO';\nimport { TheaterDTO } from './theaterDTO';\n\n/**\n * Classe che contiene gli attributi che indicano l'insieme dei moduli ritornati dal teatro.\n */\nexport class ModuleListDTO {\n    content: SimpleModuleDTO[]\n    pageable: PageableDTO\n    last: boolean\n    totalPages: string | number\n    totalElements: string | number\n    size: string | number\n    number: string | number\n    sort: SortDTO\n    numberOfElements: string | number\n    first: boolean\n    empty: boolean\n}\n\n/**\n * Classe che contiene gli attributi che indica il catalogo del tipo.\n */\nexport class TypesCatalogueDTO {\n    group: string\n    id: string | number\n    parentId: {}\n    value: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano la classificazione del modulo.\n */\nexport class ModuleClassificationDTO {\n    blueprintType: string\n    category: string\n    expectedInstanceType: string\n    id: string | number\n    mcClass: string\n    type: string\n    uuid: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano un parametro generico.\n */\nexport class GenericParameterDTO {\n    type: string\n    default: string\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano i parametri di configurazione di un modulto.\n */\nexport class ConfigurationTemplateDTO {\n    anchor_parameters: { [name: string]: GenericParameterDTO | string }\n    instance_parameters: { [name: string]: GenericParameterDTO }\n    structural_parameters: { [name: string]: GenericParameterDTO }\n    fixed_parameters: { [name: string]: GenericParameterDTO }\n    control_parameters: { [name: string]: GenericParameterDTO }\n    infrastructure_parameters: { [name: string]: GenericParameterDTO }\n    module: string\n    description: string\n    category: string\n    version: string | number\n    platform: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano la modalità di un modulo.\n */\nexport class ModuleModeDTO {\n    code: string\n    id: string | number\n    name: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano lo stato di un modulo.\n */\nexport class ModuleStatusDTO {\n    descriptionCode: string\n    id: string | number\n    name: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le statitistiche di un modulo.\n */\nexport class StatisticItemDTO {\n    error: string | number\n    updated: string | number\n    inserted: string | number\n}\n\n/**\n * Classe che contiene gli attributi che indicano il modulo (simple - in dipendenza del teatro).\n */\nexport class SimpleModuleDTO {\n    createdBy: string\n    createdDate: string\n    description: string\n    id: string | number\n    isLocked: boolean\n    lastModifiedBy: string\n    lastModifiedDate: string\n    lockAcquiredTimestamp: string\n    lockLastUserAcquiring: string\n    lockReleasedTimestamp: string\n    name: string\n    status: ModuleStatusDTO\n    type?: string | any\n    uuid: string\n    version: string | number\n}\n\n/**\n * Classe che contiene gli attributi che indicano il modulo (complex - ritorato da call appostita).\n * @extends {SimpleModuleDTO}\n */\nexport class ModuleDTO extends SimpleModuleDTO {\n    attachments: string[]\n    author: string\n    capabilities: { [name: string]: string }\n    catalog1: TypesCatalogueDTO\n    catalog2: TypesCatalogueDTO\n    catalog3: TypesCatalogueDTO\n    classification: ModuleClassificationDTO\n    configurationTemplate: ConfigurationTemplateDTO\n    detailProperties: {}\n    input: { [name: string]: string }\n    output: { [name: string]: string }\n    mode: ModuleModeDTO\n    statistics: { [name: string]: StatisticItemDTO | string | number }\n    tags: []\n}\n\n/**\n * Classe che contiene gli attributi che indicano le interfacce esposte da un modulo.\n */\nexport class ModuleNetworkInterfaceDTO {\n    id: string | number\n    label: string\n    module: ModuleDTO\n    network: NetworkDTO\n    nodeName: string\n    type: string\n    uuid: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le connessioni interfaccia-modulo.\n */\nexport class ConsumerInterfaceLinkDTO {\n    local_interface: string\n    module_instance: string\n    remote_interface: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà dell'istanza di un modulo all'interno del node_templates.\n */\nexport class ModuleInstancePropertiesDTO {\n    area: string\n    description: string\n    module: string\n    version: string | number\n    sequence: string | number\n    consumer_interfaces_link: ConsumerInterfaceLinkDTO[]\n}\n\n\n/**\n * Classe che contiene gli attributi che indicano l'area di appartenenza di un modulo (complex).\n */\nexport class AreaDTO {\n    id: string | number;\n    uuid: string;\n    name: string;\n    description: string;\n    theater: TheaterDTO;\n    deleted: boolean | string;\n}\n\n/**\n * Classe che contiene gli attributi che indicano l'area di appartenenza di un modulo (simple).\n */\nexport class SimpleAreaDTO {\n    area: string\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà dell'istanza di un teatro all'interno del node_templates.\n */\nexport class TheaterInstancePropertiesDTO {\n    mode: string\n    tags: TagTIP[]\n    areas: SimpleAreaDTO[]\n    author: string\n    version: string | number\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano un tag.\n */\nexport class TagTIP{\n    tag: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano in via generale le caratteristiche di un elemento che deve essere presente nel node_templates.\n */\nexport class ElementIntoTheaterDTO {  // goes into map in blueprint [name:string]: Module...\n    properties: ModuleInstancePropertiesDTO | TheaterInstancePropertiesDTO\n    type: string\n}\n\n\n/**\n * Classe che contiene gli attributi che indicano le caratteristiche di un teatro presente nel node_templates.\n */\nexport class ModuleInstanceDTO {\n    properties: ModuleInstancePropertiesDTO\n    type: string\n}\n/**\n * Classe che contiene gli attributi che indicano le caratteristiche di un modulo presente nel node_templates.\n */\nexport class TheaterInstanceDTO {\n    properties: TheaterInstancePropertiesDTO\n    type: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/ModuleConstraints.html":{"url":"classes/ModuleConstraints.html","title":"class - ModuleConstraints","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  ModuleConstraints\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsExport/moduleExport.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano i viconli del modulo.\n\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ModeTypeExport, ModuleTypeExport, NetworkTypeExport, NodeTypeExport, PortTypeExport, RelationshipsTypeExport, SubnetTypeExport, ToscaDefinitionType } from \"./TypeExport\"\n\n\n/**\n * Classe utilizzata per l'export. \n * Contiene le informazioni generali per il modulo che devono esserci nello standard Tosca.\n */\nexport class ModuleExport {\n    tosca_definitions_version: ToscaDefinitionType\n    description: string\n    imports: string[]\n    node_templates: { [name: string]: ModuleSimpleData | NodeSimpleData | PortSimpleData | NetworkSimpleData | SubnetSimpleData }\n    dsl_definition: any | null; //future\n    capabilites: any | null //future\n    outputs: any | null //future\n}\n\n/**\n * Classe che contiene gli attributi che indicano la rappresentazione del modulo per l'export.\n */\nexport class ModuleSimpleData {\n    type: ModuleTypeExport\n    properties: PropertiesMSD\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà del modulo per l'export.\n */\nexport class PropertiesMSD {\n    mode: ModeTypeExport\n    description: string\n    version: string | number\n    constraints: ConstraintsMSD\n    interface_networks: {\n        providers: InterfaceNetworksProvider[]\n        consumers: InterfaceNetworksConsumer[]\n    }\n    virtual_machines: VirtualMachine[]\n}\n/**\n * Classe che contiene gli attributi che indicano i vincoli di connessione del modulo per l'export.\n */\nexport class ConstraintsMSD {\n    interface_constraints: InterfaceConstraints[]\n    module_constraints: ModuleConstraints[]\n    network_constraints: NetworkConstraints[]\n}\n/**\n * Classe che contiene gli attributi che indicano i viconli per le interfacce di connessione del modulo.\n */\nexport class InterfaceConstraints {\n    local_interface: string\n    multiple_mode: boolean = false //future\n    module_name: string\n    compatibility: string = \"1.0\" // future\n    remote_interface: string\n}\n/**\n * Classe che contiene gli attributi che indicano i viconli del modulo.\n */\nexport class ModuleConstraints {\n}\n/**\n * Classe che contiene gli attributi che indicano i viconli dei network del modulo.\n */\nexport class NetworkConstraints {\n}\n/**\n * Classe che contiene gli attributi che indicano le interfacce provider del modulo.\n */\nexport class InterfaceNetworksProvider {\n    interface: string\n    network: string\n    tag: string\n    subnets: SubnetExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano le interfacce consumer del modulo.\n */\nexport class InterfaceNetworksConsumer {\n    interface: string\n    network: string\n    tag: string\n    subnets: SubnetExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano l'insieme di host presenti in un modulo.\n */\nexport class VirtualMachine {\n    virtual_machine: string\n    ports: VirtualMachinePorts[]\n}\n/**\n * Classe che contiene gli attributi che indicano le porte associate ad un host di un modulo.\n */\nexport class VirtualMachinePorts {\n    port: string\n    network: string\n    subnets: SubnetExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano la subnet connessa alla porte dell'host.\n * @see {VirtualMachinePorts}\n */\nexport class SubnetExport {\n    subnet: string;\n}\n\n/**\n * Classe che contiene gli attributi che indica un nodo all'interno dei node_templates.\n * @see {ModuleExport}\n */\nexport class NodeSimpleData {\n    type: NodeTypeExport\n    properties: any | null // future\n    interfaces: any | null // future\n    relationships: RelationshipsExport[]\n}\n\n/**\n * Classe che contiene gli attributi che indicano le relazioni generali.\n */\nexport class RelationshipsExport {\n    type: RelationshipsTypeExport\n    target: string\n}\n/**\n * Classe che contiene gli attributi che indicano i dati della porta all'interno dei node_templates.\n */\nexport class PortSimpleData {\n    type: PortTypeExport\n    relationships: RelationshipsExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano i dati delle network all'interno dei node_templates.\n */\nexport class NetworkSimpleData {\n    type: NetworkTypeExport\n    properties: PropertiesNSD\n}\n/**\n * Classe che contiene gli attributi che indicano le proprietà della network all'interno dei node_templates.\n * @see {NetworkSimpleData}\n */\nexport class PropertiesNSD {\n    openstack_config?: any | null // future\n    use_external_resource?: boolean | null // future\n    resource_id?: any | null // future\n}\n\n/**\n * Classe che contiene gli attributi che indicano i dati delle subnet all'interno dei node_templates.\n */\nexport class SubnetSimpleData {\n    type: SubnetTypeExport\n    relationships: RelationshipsExport[]\n    properties: PropertiesSSD\n}\n/**\n * Classe che contiene gli attributi che indicano le proprietà della subnet all'interno dei node_templates.\n * @see {NetworkSimpleData}\n */\nexport class PropertiesSSD {\n    subnet?: {\n        ip_version: string | number\n        cidr: string\n        enable_dhcp: boolean\n        gateway_ip?: any | null // future\n    }\n    openstack_config?: any | null // future\n    use_external_resource?: boolean | null // future\n    resource_id?: any | null // future\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/ModuleDTO.html":{"url":"classes/ModuleDTO.html","title":"class - ModuleDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  ModuleDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsDTO/moduleDTO.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano il modulo (complex - ritorato da call appostita).\n\n            \n\n            \n                Extends\n            \n            \n                        SimpleModuleDTO\n            \n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                attachments\n                            \n                            \n                                author\n                            \n                            \n                                capabilities\n                            \n                            \n                                catalog1\n                            \n                            \n                                catalog2\n                            \n                            \n                                catalog3\n                            \n                            \n                                classification\n                            \n                            \n                                configurationTemplate\n                            \n                            \n                                detailProperties\n                            \n                            \n                                input\n                            \n                            \n                                mode\n                            \n                            \n                                output\n                            \n                            \n                                statistics\n                            \n                            \n                                tags\n                            \n                            \n                                createdBy\n                            \n                            \n                                createdDate\n                            \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                isLocked\n                            \n                            \n                                lastModifiedBy\n                            \n                            \n                                lastModifiedDate\n                            \n                            \n                                lockAcquiredTimestamp\n                            \n                            \n                                lockLastUserAcquiring\n                            \n                            \n                                lockReleasedTimestamp\n                            \n                            \n                                name\n                            \n                            \n                                status\n                            \n                            \n                                    Opzionale\n                                type\n                            \n                            \n                                uuid\n                            \n                            \n                                version\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        attachments\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:124\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        author\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:125\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        capabilities\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     literal type\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:126\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        catalog1\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         TypesCatalogueDTO\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:127\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        catalog2\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         TypesCatalogueDTO\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:128\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        catalog3\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         TypesCatalogueDTO\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:129\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        classification\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ModuleClassificationDTO\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:130\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        configurationTemplate\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ConfigurationTemplateDTO\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:131\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        detailProperties\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     literal type\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:132\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        input\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     literal type\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:133\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ModuleModeDTO\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:135\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        output\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     literal type\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:134\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        statistics\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     literal type\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:136\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tags\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     []\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:137\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:102\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdDate\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:103\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:104\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:105\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLocked\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:106\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastModifiedBy\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:107\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastModifiedDate\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:108\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lockAcquiredTimestamp\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:109\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lockLastUserAcquiring\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:110\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lockReleasedTimestamp\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:111\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:112\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ModuleStatusDTO\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:113\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | any\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:114\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uuid\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:115\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:116\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PageableDTO, SortDTO } from './elementDTO';\nimport { NetworkDTO } from './networkDTO';\nimport { TheaterDTO } from './theaterDTO';\n\n/**\n * Classe che contiene gli attributi che indicano l'insieme dei moduli ritornati dal teatro.\n */\nexport class ModuleListDTO {\n    content: SimpleModuleDTO[]\n    pageable: PageableDTO\n    last: boolean\n    totalPages: string | number\n    totalElements: string | number\n    size: string | number\n    number: string | number\n    sort: SortDTO\n    numberOfElements: string | number\n    first: boolean\n    empty: boolean\n}\n\n/**\n * Classe che contiene gli attributi che indica il catalogo del tipo.\n */\nexport class TypesCatalogueDTO {\n    group: string\n    id: string | number\n    parentId: {}\n    value: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano la classificazione del modulo.\n */\nexport class ModuleClassificationDTO {\n    blueprintType: string\n    category: string\n    expectedInstanceType: string\n    id: string | number\n    mcClass: string\n    type: string\n    uuid: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano un parametro generico.\n */\nexport class GenericParameterDTO {\n    type: string\n    default: string\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano i parametri di configurazione di un modulto.\n */\nexport class ConfigurationTemplateDTO {\n    anchor_parameters: { [name: string]: GenericParameterDTO | string }\n    instance_parameters: { [name: string]: GenericParameterDTO }\n    structural_parameters: { [name: string]: GenericParameterDTO }\n    fixed_parameters: { [name: string]: GenericParameterDTO }\n    control_parameters: { [name: string]: GenericParameterDTO }\n    infrastructure_parameters: { [name: string]: GenericParameterDTO }\n    module: string\n    description: string\n    category: string\n    version: string | number\n    platform: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano la modalità di un modulo.\n */\nexport class ModuleModeDTO {\n    code: string\n    id: string | number\n    name: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano lo stato di un modulo.\n */\nexport class ModuleStatusDTO {\n    descriptionCode: string\n    id: string | number\n    name: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le statitistiche di un modulo.\n */\nexport class StatisticItemDTO {\n    error: string | number\n    updated: string | number\n    inserted: string | number\n}\n\n/**\n * Classe che contiene gli attributi che indicano il modulo (simple - in dipendenza del teatro).\n */\nexport class SimpleModuleDTO {\n    createdBy: string\n    createdDate: string\n    description: string\n    id: string | number\n    isLocked: boolean\n    lastModifiedBy: string\n    lastModifiedDate: string\n    lockAcquiredTimestamp: string\n    lockLastUserAcquiring: string\n    lockReleasedTimestamp: string\n    name: string\n    status: ModuleStatusDTO\n    type?: string | any\n    uuid: string\n    version: string | number\n}\n\n/**\n * Classe che contiene gli attributi che indicano il modulo (complex - ritorato da call appostita).\n * @extends {SimpleModuleDTO}\n */\nexport class ModuleDTO extends SimpleModuleDTO {\n    attachments: string[]\n    author: string\n    capabilities: { [name: string]: string }\n    catalog1: TypesCatalogueDTO\n    catalog2: TypesCatalogueDTO\n    catalog3: TypesCatalogueDTO\n    classification: ModuleClassificationDTO\n    configurationTemplate: ConfigurationTemplateDTO\n    detailProperties: {}\n    input: { [name: string]: string }\n    output: { [name: string]: string }\n    mode: ModuleModeDTO\n    statistics: { [name: string]: StatisticItemDTO | string | number }\n    tags: []\n}\n\n/**\n * Classe che contiene gli attributi che indicano le interfacce esposte da un modulo.\n */\nexport class ModuleNetworkInterfaceDTO {\n    id: string | number\n    label: string\n    module: ModuleDTO\n    network: NetworkDTO\n    nodeName: string\n    type: string\n    uuid: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le connessioni interfaccia-modulo.\n */\nexport class ConsumerInterfaceLinkDTO {\n    local_interface: string\n    module_instance: string\n    remote_interface: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà dell'istanza di un modulo all'interno del node_templates.\n */\nexport class ModuleInstancePropertiesDTO {\n    area: string\n    description: string\n    module: string\n    version: string | number\n    sequence: string | number\n    consumer_interfaces_link: ConsumerInterfaceLinkDTO[]\n}\n\n\n/**\n * Classe che contiene gli attributi che indicano l'area di appartenenza di un modulo (complex).\n */\nexport class AreaDTO {\n    id: string | number;\n    uuid: string;\n    name: string;\n    description: string;\n    theater: TheaterDTO;\n    deleted: boolean | string;\n}\n\n/**\n * Classe che contiene gli attributi che indicano l'area di appartenenza di un modulo (simple).\n */\nexport class SimpleAreaDTO {\n    area: string\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà dell'istanza di un teatro all'interno del node_templates.\n */\nexport class TheaterInstancePropertiesDTO {\n    mode: string\n    tags: TagTIP[]\n    areas: SimpleAreaDTO[]\n    author: string\n    version: string | number\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano un tag.\n */\nexport class TagTIP{\n    tag: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano in via generale le caratteristiche di un elemento che deve essere presente nel node_templates.\n */\nexport class ElementIntoTheaterDTO {  // goes into map in blueprint [name:string]: Module...\n    properties: ModuleInstancePropertiesDTO | TheaterInstancePropertiesDTO\n    type: string\n}\n\n\n/**\n * Classe che contiene gli attributi che indicano le caratteristiche di un teatro presente nel node_templates.\n */\nexport class ModuleInstanceDTO {\n    properties: ModuleInstancePropertiesDTO\n    type: string\n}\n/**\n * Classe che contiene gli attributi che indicano le caratteristiche di un modulo presente nel node_templates.\n */\nexport class TheaterInstanceDTO {\n    properties: TheaterInstancePropertiesDTO\n    type: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/ModuleExport.html":{"url":"classes/ModuleExport.html","title":"class - ModuleExport","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  ModuleExport\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsExport/moduleExport.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe utilizzata per l'export.\nContiene le informazioni generali per il modulo che devono esserci nello standard Tosca.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                capabilites\n                            \n                            \n                                description\n                            \n                            \n                                dsl_definition\n                            \n                            \n                                imports\n                            \n                            \n                                node_templates\n                            \n                            \n                                outputs\n                            \n                            \n                                tosca_definitions_version\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        capabilites\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     any | null\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dsl_definition\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     any | null\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        imports\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        node_templates\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     literal type\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        outputs\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     any | null\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tosca_definitions_version\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ToscaDefinitionType\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ModeTypeExport, ModuleTypeExport, NetworkTypeExport, NodeTypeExport, PortTypeExport, RelationshipsTypeExport, SubnetTypeExport, ToscaDefinitionType } from \"./TypeExport\"\n\n\n/**\n * Classe utilizzata per l'export. \n * Contiene le informazioni generali per il modulo che devono esserci nello standard Tosca.\n */\nexport class ModuleExport {\n    tosca_definitions_version: ToscaDefinitionType\n    description: string\n    imports: string[]\n    node_templates: { [name: string]: ModuleSimpleData | NodeSimpleData | PortSimpleData | NetworkSimpleData | SubnetSimpleData }\n    dsl_definition: any | null; //future\n    capabilites: any | null //future\n    outputs: any | null //future\n}\n\n/**\n * Classe che contiene gli attributi che indicano la rappresentazione del modulo per l'export.\n */\nexport class ModuleSimpleData {\n    type: ModuleTypeExport\n    properties: PropertiesMSD\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà del modulo per l'export.\n */\nexport class PropertiesMSD {\n    mode: ModeTypeExport\n    description: string\n    version: string | number\n    constraints: ConstraintsMSD\n    interface_networks: {\n        providers: InterfaceNetworksProvider[]\n        consumers: InterfaceNetworksConsumer[]\n    }\n    virtual_machines: VirtualMachine[]\n}\n/**\n * Classe che contiene gli attributi che indicano i vincoli di connessione del modulo per l'export.\n */\nexport class ConstraintsMSD {\n    interface_constraints: InterfaceConstraints[]\n    module_constraints: ModuleConstraints[]\n    network_constraints: NetworkConstraints[]\n}\n/**\n * Classe che contiene gli attributi che indicano i viconli per le interfacce di connessione del modulo.\n */\nexport class InterfaceConstraints {\n    local_interface: string\n    multiple_mode: boolean = false //future\n    module_name: string\n    compatibility: string = \"1.0\" // future\n    remote_interface: string\n}\n/**\n * Classe che contiene gli attributi che indicano i viconli del modulo.\n */\nexport class ModuleConstraints {\n}\n/**\n * Classe che contiene gli attributi che indicano i viconli dei network del modulo.\n */\nexport class NetworkConstraints {\n}\n/**\n * Classe che contiene gli attributi che indicano le interfacce provider del modulo.\n */\nexport class InterfaceNetworksProvider {\n    interface: string\n    network: string\n    tag: string\n    subnets: SubnetExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano le interfacce consumer del modulo.\n */\nexport class InterfaceNetworksConsumer {\n    interface: string\n    network: string\n    tag: string\n    subnets: SubnetExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano l'insieme di host presenti in un modulo.\n */\nexport class VirtualMachine {\n    virtual_machine: string\n    ports: VirtualMachinePorts[]\n}\n/**\n * Classe che contiene gli attributi che indicano le porte associate ad un host di un modulo.\n */\nexport class VirtualMachinePorts {\n    port: string\n    network: string\n    subnets: SubnetExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano la subnet connessa alla porte dell'host.\n * @see {VirtualMachinePorts}\n */\nexport class SubnetExport {\n    subnet: string;\n}\n\n/**\n * Classe che contiene gli attributi che indica un nodo all'interno dei node_templates.\n * @see {ModuleExport}\n */\nexport class NodeSimpleData {\n    type: NodeTypeExport\n    properties: any | null // future\n    interfaces: any | null // future\n    relationships: RelationshipsExport[]\n}\n\n/**\n * Classe che contiene gli attributi che indicano le relazioni generali.\n */\nexport class RelationshipsExport {\n    type: RelationshipsTypeExport\n    target: string\n}\n/**\n * Classe che contiene gli attributi che indicano i dati della porta all'interno dei node_templates.\n */\nexport class PortSimpleData {\n    type: PortTypeExport\n    relationships: RelationshipsExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano i dati delle network all'interno dei node_templates.\n */\nexport class NetworkSimpleData {\n    type: NetworkTypeExport\n    properties: PropertiesNSD\n}\n/**\n * Classe che contiene gli attributi che indicano le proprietà della network all'interno dei node_templates.\n * @see {NetworkSimpleData}\n */\nexport class PropertiesNSD {\n    openstack_config?: any | null // future\n    use_external_resource?: boolean | null // future\n    resource_id?: any | null // future\n}\n\n/**\n * Classe che contiene gli attributi che indicano i dati delle subnet all'interno dei node_templates.\n */\nexport class SubnetSimpleData {\n    type: SubnetTypeExport\n    relationships: RelationshipsExport[]\n    properties: PropertiesSSD\n}\n/**\n * Classe che contiene gli attributi che indicano le proprietà della subnet all'interno dei node_templates.\n * @see {NetworkSimpleData}\n */\nexport class PropertiesSSD {\n    subnet?: {\n        ip_version: string | number\n        cidr: string\n        enable_dhcp: boolean\n        gateway_ip?: any | null // future\n    }\n    openstack_config?: any | null // future\n    use_external_resource?: boolean | null // future\n    resource_id?: any | null // future\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/ModuleInstance.html":{"url":"classes/ModuleInstance.html","title":"class - ModuleInstance","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  ModuleInstance\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsApplication/applicationModels.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ModuleInstanceDTO\n            \n\n            \n                Implementa\n            \n            \n                            ModuleTopology\n            \n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                moduleInfo\n                            \n                            \n                                rete\n                            \n                            \n                                topology\n                            \n                            \n                                properties\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        moduleInfo\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         SimpleModuleApplication\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsApplication/applicationModels.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rete\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     ReteTheaterModuleInstanceInfo | ReteTheaterInternalServiceModuleInstanceInfo | ReteMirroringModuleInstanceInfo\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsApplication/applicationModels.ts:83\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        topology\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         NodeTopologyElement\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsApplication/applicationModels.ts:84\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        properties\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ModuleInstancePropertiesDTO\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleInstanceDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleInstanceDTO:227\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleInstanceDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleInstanceDTO:228\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ReteHostInfo } from \"src/app/rete-settings/nodes/rete-nodes/host/hostNode\";\nimport { ReteNetworkInfo } from \"src/app/rete-settings/nodes/rete-nodes/network/networkNode\";\nimport { ReteSubnetInfo } from \"src/app/rete-settings/nodes/rete-nodes/subnet/subnetNode\";\nimport { ReteMirroringModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/mirroringModuleInstance/mirroringModuleInstanceNode\";\nimport { ReteTheaterInternalServiceModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/theaterInternalServiceModuleInstance/theaterInternalServiceModuleInstanceNode\";\nimport { ReteTheaterModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/theaterModuleInstance/theaterModuleInstanceNode\";\nimport { FlavorBasicInfo } from \"../modelsDTO/falvorDTO\";\nimport { HostModuleDTO } from \"../modelsDTO/hostDTO\";\nimport { ModuleNetworkInterfaceDTO, ModuleInstancePropertiesDTO, SimpleModuleDTO, TheaterInstancePropertiesDTO, ModuleInstanceDTO, ModuleDTO, SimpleAreaDTO, AreaDTO } from \"../modelsDTO/moduleDTO\";\nimport { TheaterDTO } from \"../modelsDTO/theaterDTO\";\n\n\nexport interface CommonModule {\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n}\n\n\n/**\n * Classe contenente gli attributi utilizzati per le operazioni che coinvolgono i moduli.\n * ps. Questa struttura è prettamente utilizzata nella chiamata relativa al singolo modulo.\n */\nexport class ModuleApplication extends ModuleDTO implements CommonModule {\n    imports: string[] // perchè nell'export yaml è previsto\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n    // serve per validare il json risultante dal parsing del theaterApplication\n    validateObject?: string = \"module\";\n}\n// PER IMPLEMENTAZIONI FUTURE, PER COERENZA, PRENDERE DIRETTAMENTE I SINGOLI NODI DALLA CHIAMATA ESCLUSIVA E NON DA QUELLA CHE RESTITUISCE TUTTI I TEATRI\n/**\n * Classe contenente gli attributi utilizzati per le operazioni che coinvolgono i moduli.\n * ps. Questa struttura è prettamente utilizzata nella chiamata che prende tutti i moduli del teatro.\n */\nexport class SimpleModuleApplication extends SimpleModuleDTO implements CommonModule {\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n}\n\n\nexport class ReteConnection {\n    from: string;\n    port_src: string;\n    to: string;\n    port_dst: string;\n}\n\nexport interface TopologyList {\n    rete: any;\n    topology?: TopologyElement\n}\nexport class TopologyElement {\n    elements: { [name: string]: any };\n    connection: ReteConnection[]\n}\n\n// apptype module topology\n\nexport class NodeTopologyElement implements TopologyElement {\n    elements: { [hostName: string]: ReteHostInfo | ReteSubnetInfo | ReteNetworkInfo };\n    connection: ReteConnection[]\n}\n\nexport interface ModuleTopology extends TopologyList {\n    rete: ReteMirroringModuleInstanceInfo | ReteTheaterInternalServiceModuleInstanceInfo | ReteTheaterModuleInstanceInfo\n    topology: NodeTopologyElement;\n}\n\nexport class ModuleInstance extends ModuleInstanceDTO implements ModuleTopology {\n    // moduleTopology data\n    rete: ReteTheaterModuleInstanceInfo | ReteTheaterInternalServiceModuleInstanceInfo | ReteMirroringModuleInstanceInfo;\n    topology: NodeTopologyElement;\n    // other data\n    moduleInfo: SimpleModuleApplication\n}\n\n// apptype theater theater\n\nexport interface TheaterTopology extends TopologyElement {\n    elements: { [hostName: string]: ModuleInstance };\n    connection: ReteConnection[];\n}\n\nexport class TheaterApplication extends TheaterDTO implements TheaterTopology {\n    // theaterTopology data\n    elements: { [hostName: string]: ModuleInstance; };\n    connection: ReteConnection[];\n    // other data\n    properties: TheaterInstancePropertiesDTO;\n    topology: TheaterTopology;\n    // serve per validare il json risultante dal parsing del theaterApplication\n    validateObject?: string = \"theater\";\n}\n\nexport class AreaApplication extends AreaDTO {\n    color?: string;\n}\nexport class AreaColorDTO extends SimpleAreaDTO {\n    color: string;\n}\n\n\nexport class FlavorApplication extends FlavorBasicInfo {\n    flavorName: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/ModuleInstanceDTO.html":{"url":"classes/ModuleInstanceDTO.html","title":"class - ModuleInstanceDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  ModuleInstanceDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsDTO/moduleDTO.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano le caratteristiche di un teatro presente nel node_templates.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                properties\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        properties\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ModuleInstancePropertiesDTO\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:227\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:228\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PageableDTO, SortDTO } from './elementDTO';\nimport { NetworkDTO } from './networkDTO';\nimport { TheaterDTO } from './theaterDTO';\n\n/**\n * Classe che contiene gli attributi che indicano l'insieme dei moduli ritornati dal teatro.\n */\nexport class ModuleListDTO {\n    content: SimpleModuleDTO[]\n    pageable: PageableDTO\n    last: boolean\n    totalPages: string | number\n    totalElements: string | number\n    size: string | number\n    number: string | number\n    sort: SortDTO\n    numberOfElements: string | number\n    first: boolean\n    empty: boolean\n}\n\n/**\n * Classe che contiene gli attributi che indica il catalogo del tipo.\n */\nexport class TypesCatalogueDTO {\n    group: string\n    id: string | number\n    parentId: {}\n    value: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano la classificazione del modulo.\n */\nexport class ModuleClassificationDTO {\n    blueprintType: string\n    category: string\n    expectedInstanceType: string\n    id: string | number\n    mcClass: string\n    type: string\n    uuid: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano un parametro generico.\n */\nexport class GenericParameterDTO {\n    type: string\n    default: string\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano i parametri di configurazione di un modulto.\n */\nexport class ConfigurationTemplateDTO {\n    anchor_parameters: { [name: string]: GenericParameterDTO | string }\n    instance_parameters: { [name: string]: GenericParameterDTO }\n    structural_parameters: { [name: string]: GenericParameterDTO }\n    fixed_parameters: { [name: string]: GenericParameterDTO }\n    control_parameters: { [name: string]: GenericParameterDTO }\n    infrastructure_parameters: { [name: string]: GenericParameterDTO }\n    module: string\n    description: string\n    category: string\n    version: string | number\n    platform: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano la modalità di un modulo.\n */\nexport class ModuleModeDTO {\n    code: string\n    id: string | number\n    name: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano lo stato di un modulo.\n */\nexport class ModuleStatusDTO {\n    descriptionCode: string\n    id: string | number\n    name: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le statitistiche di un modulo.\n */\nexport class StatisticItemDTO {\n    error: string | number\n    updated: string | number\n    inserted: string | number\n}\n\n/**\n * Classe che contiene gli attributi che indicano il modulo (simple - in dipendenza del teatro).\n */\nexport class SimpleModuleDTO {\n    createdBy: string\n    createdDate: string\n    description: string\n    id: string | number\n    isLocked: boolean\n    lastModifiedBy: string\n    lastModifiedDate: string\n    lockAcquiredTimestamp: string\n    lockLastUserAcquiring: string\n    lockReleasedTimestamp: string\n    name: string\n    status: ModuleStatusDTO\n    type?: string | any\n    uuid: string\n    version: string | number\n}\n\n/**\n * Classe che contiene gli attributi che indicano il modulo (complex - ritorato da call appostita).\n * @extends {SimpleModuleDTO}\n */\nexport class ModuleDTO extends SimpleModuleDTO {\n    attachments: string[]\n    author: string\n    capabilities: { [name: string]: string }\n    catalog1: TypesCatalogueDTO\n    catalog2: TypesCatalogueDTO\n    catalog3: TypesCatalogueDTO\n    classification: ModuleClassificationDTO\n    configurationTemplate: ConfigurationTemplateDTO\n    detailProperties: {}\n    input: { [name: string]: string }\n    output: { [name: string]: string }\n    mode: ModuleModeDTO\n    statistics: { [name: string]: StatisticItemDTO | string | number }\n    tags: []\n}\n\n/**\n * Classe che contiene gli attributi che indicano le interfacce esposte da un modulo.\n */\nexport class ModuleNetworkInterfaceDTO {\n    id: string | number\n    label: string\n    module: ModuleDTO\n    network: NetworkDTO\n    nodeName: string\n    type: string\n    uuid: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le connessioni interfaccia-modulo.\n */\nexport class ConsumerInterfaceLinkDTO {\n    local_interface: string\n    module_instance: string\n    remote_interface: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà dell'istanza di un modulo all'interno del node_templates.\n */\nexport class ModuleInstancePropertiesDTO {\n    area: string\n    description: string\n    module: string\n    version: string | number\n    sequence: string | number\n    consumer_interfaces_link: ConsumerInterfaceLinkDTO[]\n}\n\n\n/**\n * Classe che contiene gli attributi che indicano l'area di appartenenza di un modulo (complex).\n */\nexport class AreaDTO {\n    id: string | number;\n    uuid: string;\n    name: string;\n    description: string;\n    theater: TheaterDTO;\n    deleted: boolean | string;\n}\n\n/**\n * Classe che contiene gli attributi che indicano l'area di appartenenza di un modulo (simple).\n */\nexport class SimpleAreaDTO {\n    area: string\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà dell'istanza di un teatro all'interno del node_templates.\n */\nexport class TheaterInstancePropertiesDTO {\n    mode: string\n    tags: TagTIP[]\n    areas: SimpleAreaDTO[]\n    author: string\n    version: string | number\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano un tag.\n */\nexport class TagTIP{\n    tag: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano in via generale le caratteristiche di un elemento che deve essere presente nel node_templates.\n */\nexport class ElementIntoTheaterDTO {  // goes into map in blueprint [name:string]: Module...\n    properties: ModuleInstancePropertiesDTO | TheaterInstancePropertiesDTO\n    type: string\n}\n\n\n/**\n * Classe che contiene gli attributi che indicano le caratteristiche di un teatro presente nel node_templates.\n */\nexport class ModuleInstanceDTO {\n    properties: ModuleInstancePropertiesDTO\n    type: string\n}\n/**\n * Classe che contiene gli attributi che indicano le caratteristiche di un modulo presente nel node_templates.\n */\nexport class TheaterInstanceDTO {\n    properties: TheaterInstancePropertiesDTO\n    type: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/ModuleInstancePropertiesDTO.html":{"url":"classes/ModuleInstancePropertiesDTO.html","title":"class - ModuleInstancePropertiesDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  ModuleInstancePropertiesDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsDTO/moduleDTO.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano le proprietà dell'istanza di un modulo all'interno del node_templates.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                area\n                            \n                            \n                                consumer_interfaces_link\n                            \n                            \n                                description\n                            \n                            \n                                module\n                            \n                            \n                                sequence\n                            \n                            \n                                version\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        area\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:166\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        consumer_interfaces_link\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ConsumerInterfaceLinkDTO[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:171\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:167\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:168\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sequence\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:170\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:169\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PageableDTO, SortDTO } from './elementDTO';\nimport { NetworkDTO } from './networkDTO';\nimport { TheaterDTO } from './theaterDTO';\n\n/**\n * Classe che contiene gli attributi che indicano l'insieme dei moduli ritornati dal teatro.\n */\nexport class ModuleListDTO {\n    content: SimpleModuleDTO[]\n    pageable: PageableDTO\n    last: boolean\n    totalPages: string | number\n    totalElements: string | number\n    size: string | number\n    number: string | number\n    sort: SortDTO\n    numberOfElements: string | number\n    first: boolean\n    empty: boolean\n}\n\n/**\n * Classe che contiene gli attributi che indica il catalogo del tipo.\n */\nexport class TypesCatalogueDTO {\n    group: string\n    id: string | number\n    parentId: {}\n    value: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano la classificazione del modulo.\n */\nexport class ModuleClassificationDTO {\n    blueprintType: string\n    category: string\n    expectedInstanceType: string\n    id: string | number\n    mcClass: string\n    type: string\n    uuid: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano un parametro generico.\n */\nexport class GenericParameterDTO {\n    type: string\n    default: string\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano i parametri di configurazione di un modulto.\n */\nexport class ConfigurationTemplateDTO {\n    anchor_parameters: { [name: string]: GenericParameterDTO | string }\n    instance_parameters: { [name: string]: GenericParameterDTO }\n    structural_parameters: { [name: string]: GenericParameterDTO }\n    fixed_parameters: { [name: string]: GenericParameterDTO }\n    control_parameters: { [name: string]: GenericParameterDTO }\n    infrastructure_parameters: { [name: string]: GenericParameterDTO }\n    module: string\n    description: string\n    category: string\n    version: string | number\n    platform: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano la modalità di un modulo.\n */\nexport class ModuleModeDTO {\n    code: string\n    id: string | number\n    name: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano lo stato di un modulo.\n */\nexport class ModuleStatusDTO {\n    descriptionCode: string\n    id: string | number\n    name: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le statitistiche di un modulo.\n */\nexport class StatisticItemDTO {\n    error: string | number\n    updated: string | number\n    inserted: string | number\n}\n\n/**\n * Classe che contiene gli attributi che indicano il modulo (simple - in dipendenza del teatro).\n */\nexport class SimpleModuleDTO {\n    createdBy: string\n    createdDate: string\n    description: string\n    id: string | number\n    isLocked: boolean\n    lastModifiedBy: string\n    lastModifiedDate: string\n    lockAcquiredTimestamp: string\n    lockLastUserAcquiring: string\n    lockReleasedTimestamp: string\n    name: string\n    status: ModuleStatusDTO\n    type?: string | any\n    uuid: string\n    version: string | number\n}\n\n/**\n * Classe che contiene gli attributi che indicano il modulo (complex - ritorato da call appostita).\n * @extends {SimpleModuleDTO}\n */\nexport class ModuleDTO extends SimpleModuleDTO {\n    attachments: string[]\n    author: string\n    capabilities: { [name: string]: string }\n    catalog1: TypesCatalogueDTO\n    catalog2: TypesCatalogueDTO\n    catalog3: TypesCatalogueDTO\n    classification: ModuleClassificationDTO\n    configurationTemplate: ConfigurationTemplateDTO\n    detailProperties: {}\n    input: { [name: string]: string }\n    output: { [name: string]: string }\n    mode: ModuleModeDTO\n    statistics: { [name: string]: StatisticItemDTO | string | number }\n    tags: []\n}\n\n/**\n * Classe che contiene gli attributi che indicano le interfacce esposte da un modulo.\n */\nexport class ModuleNetworkInterfaceDTO {\n    id: string | number\n    label: string\n    module: ModuleDTO\n    network: NetworkDTO\n    nodeName: string\n    type: string\n    uuid: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le connessioni interfaccia-modulo.\n */\nexport class ConsumerInterfaceLinkDTO {\n    local_interface: string\n    module_instance: string\n    remote_interface: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà dell'istanza di un modulo all'interno del node_templates.\n */\nexport class ModuleInstancePropertiesDTO {\n    area: string\n    description: string\n    module: string\n    version: string | number\n    sequence: string | number\n    consumer_interfaces_link: ConsumerInterfaceLinkDTO[]\n}\n\n\n/**\n * Classe che contiene gli attributi che indicano l'area di appartenenza di un modulo (complex).\n */\nexport class AreaDTO {\n    id: string | number;\n    uuid: string;\n    name: string;\n    description: string;\n    theater: TheaterDTO;\n    deleted: boolean | string;\n}\n\n/**\n * Classe che contiene gli attributi che indicano l'area di appartenenza di un modulo (simple).\n */\nexport class SimpleAreaDTO {\n    area: string\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà dell'istanza di un teatro all'interno del node_templates.\n */\nexport class TheaterInstancePropertiesDTO {\n    mode: string\n    tags: TagTIP[]\n    areas: SimpleAreaDTO[]\n    author: string\n    version: string | number\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano un tag.\n */\nexport class TagTIP{\n    tag: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano in via generale le caratteristiche di un elemento che deve essere presente nel node_templates.\n */\nexport class ElementIntoTheaterDTO {  // goes into map in blueprint [name:string]: Module...\n    properties: ModuleInstancePropertiesDTO | TheaterInstancePropertiesDTO\n    type: string\n}\n\n\n/**\n * Classe che contiene gli attributi che indicano le caratteristiche di un teatro presente nel node_templates.\n */\nexport class ModuleInstanceDTO {\n    properties: ModuleInstancePropertiesDTO\n    type: string\n}\n/**\n * Classe che contiene gli attributi che indicano le caratteristiche di un modulo presente nel node_templates.\n */\nexport class TheaterInstanceDTO {\n    properties: TheaterInstancePropertiesDTO\n    type: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/ModuleInstanceSimpleData.html":{"url":"classes/ModuleInstanceSimpleData.html","title":"class - ModuleInstanceSimpleData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  ModuleInstanceSimpleData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsExport/theaterExport.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano il modulo all'interno dei node_modules.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                properties\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        properties\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         PropertiesMISD\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/theaterExport.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ModuleTypeExport\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/theaterExport.ts:51\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ModeTypeExport, ModuleTypeExport, TheaterTypeExport, ToscaDefinitionType } from \"./TypeExport\"\n\n/**\n * Classe utilizzata per l'export. \n * Contiene le informazioni generali per il teatro che devono esserci nello standard Tosca.\n */\nexport class TheaterExport {\n    tosca_definitions_version: ToscaDefinitionType\n    description: string\n    imports: string[]\n    node_templates: { [name: string]: TheaterSimpleData | ModuleInstanceSimpleData }\n}\n/**\n * Classe che contiene gli attributi che indicano il teatro all'interno dei node_templates.\n */\nexport class TheaterSimpleData {\n    type: TheaterTypeExport\n    properties: PropertiesTSD\n}\n/**\n * Classe che contiene gli attributi che indicano le proprietà del teatro.\n */\nexport class PropertiesTSD {\n    version: string | number\n    description: string\n    mode: ModeTypeExport\n    author: string\n    tags: TagsExport[]\n    areas: AreaExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano i tag nelle proprietà del teatro.\n * @see {PropertiesTSD}\n */\nexport class TagsExport {\n    tag: string\n}\n/**\n * Classe che contiene gli attributi che indicano le aree nelle proprietà del teatr.\n * @see {PropertiesTSD}\n */\nexport class AreaExport {\n    area: string\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano il modulo all'interno dei node_modules.\n */\nexport class ModuleInstanceSimpleData {\n    type: ModuleTypeExport\n    properties: PropertiesMISD\n}\n/**\n * Classe che contiene gli attributi che indicano le propeitò del modulo all'interno dei node_templates.\n */\nexport class PropertiesMISD{\n    module: string\n    version: string | number\n    area: string\n    sequence: number\n    sources?: SourceExport[]\n    consumer_interface_link: ConsumerInterfaceLinkExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano le porte di ingresso del modulo all'interno dei node_templates.\n */\nexport class SourceExport{\n    module_instance: string\n    host:string\n    interfaces: string[]\n}\n/**\n * Classe che contiene gli attributi che indicano i collegamenti e relazioni intramodulo con le varie interfacce.\n */\nexport class ConsumerInterfaceLinkExport{\n    local_interface: string\n    module_interface:string\n    remote_interface:string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/ModuleListDTO.html":{"url":"classes/ModuleListDTO.html","title":"class - ModuleListDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  ModuleListDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsDTO/moduleDTO.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano l'insieme dei moduli ritornati dal teatro.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                empty\n                            \n                            \n                                first\n                            \n                            \n                                last\n                            \n                            \n                                number\n                            \n                            \n                                numberOfElements\n                            \n                            \n                                pageable\n                            \n                            \n                                size\n                            \n                            \n                                sort\n                            \n                            \n                                totalElements\n                            \n                            \n                                totalPages\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     SimpleModuleDTO[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        empty\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        first\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        last\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        number\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        numberOfElements\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pageable\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         PageableDTO\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        size\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sort\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         SortDTO\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalElements\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalPages\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PageableDTO, SortDTO } from './elementDTO';\nimport { NetworkDTO } from './networkDTO';\nimport { TheaterDTO } from './theaterDTO';\n\n/**\n * Classe che contiene gli attributi che indicano l'insieme dei moduli ritornati dal teatro.\n */\nexport class ModuleListDTO {\n    content: SimpleModuleDTO[]\n    pageable: PageableDTO\n    last: boolean\n    totalPages: string | number\n    totalElements: string | number\n    size: string | number\n    number: string | number\n    sort: SortDTO\n    numberOfElements: string | number\n    first: boolean\n    empty: boolean\n}\n\n/**\n * Classe che contiene gli attributi che indica il catalogo del tipo.\n */\nexport class TypesCatalogueDTO {\n    group: string\n    id: string | number\n    parentId: {}\n    value: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano la classificazione del modulo.\n */\nexport class ModuleClassificationDTO {\n    blueprintType: string\n    category: string\n    expectedInstanceType: string\n    id: string | number\n    mcClass: string\n    type: string\n    uuid: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano un parametro generico.\n */\nexport class GenericParameterDTO {\n    type: string\n    default: string\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano i parametri di configurazione di un modulto.\n */\nexport class ConfigurationTemplateDTO {\n    anchor_parameters: { [name: string]: GenericParameterDTO | string }\n    instance_parameters: { [name: string]: GenericParameterDTO }\n    structural_parameters: { [name: string]: GenericParameterDTO }\n    fixed_parameters: { [name: string]: GenericParameterDTO }\n    control_parameters: { [name: string]: GenericParameterDTO }\n    infrastructure_parameters: { [name: string]: GenericParameterDTO }\n    module: string\n    description: string\n    category: string\n    version: string | number\n    platform: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano la modalità di un modulo.\n */\nexport class ModuleModeDTO {\n    code: string\n    id: string | number\n    name: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano lo stato di un modulo.\n */\nexport class ModuleStatusDTO {\n    descriptionCode: string\n    id: string | number\n    name: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le statitistiche di un modulo.\n */\nexport class StatisticItemDTO {\n    error: string | number\n    updated: string | number\n    inserted: string | number\n}\n\n/**\n * Classe che contiene gli attributi che indicano il modulo (simple - in dipendenza del teatro).\n */\nexport class SimpleModuleDTO {\n    createdBy: string\n    createdDate: string\n    description: string\n    id: string | number\n    isLocked: boolean\n    lastModifiedBy: string\n    lastModifiedDate: string\n    lockAcquiredTimestamp: string\n    lockLastUserAcquiring: string\n    lockReleasedTimestamp: string\n    name: string\n    status: ModuleStatusDTO\n    type?: string | any\n    uuid: string\n    version: string | number\n}\n\n/**\n * Classe che contiene gli attributi che indicano il modulo (complex - ritorato da call appostita).\n * @extends {SimpleModuleDTO}\n */\nexport class ModuleDTO extends SimpleModuleDTO {\n    attachments: string[]\n    author: string\n    capabilities: { [name: string]: string }\n    catalog1: TypesCatalogueDTO\n    catalog2: TypesCatalogueDTO\n    catalog3: TypesCatalogueDTO\n    classification: ModuleClassificationDTO\n    configurationTemplate: ConfigurationTemplateDTO\n    detailProperties: {}\n    input: { [name: string]: string }\n    output: { [name: string]: string }\n    mode: ModuleModeDTO\n    statistics: { [name: string]: StatisticItemDTO | string | number }\n    tags: []\n}\n\n/**\n * Classe che contiene gli attributi che indicano le interfacce esposte da un modulo.\n */\nexport class ModuleNetworkInterfaceDTO {\n    id: string | number\n    label: string\n    module: ModuleDTO\n    network: NetworkDTO\n    nodeName: string\n    type: string\n    uuid: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le connessioni interfaccia-modulo.\n */\nexport class ConsumerInterfaceLinkDTO {\n    local_interface: string\n    module_instance: string\n    remote_interface: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà dell'istanza di un modulo all'interno del node_templates.\n */\nexport class ModuleInstancePropertiesDTO {\n    area: string\n    description: string\n    module: string\n    version: string | number\n    sequence: string | number\n    consumer_interfaces_link: ConsumerInterfaceLinkDTO[]\n}\n\n\n/**\n * Classe che contiene gli attributi che indicano l'area di appartenenza di un modulo (complex).\n */\nexport class AreaDTO {\n    id: string | number;\n    uuid: string;\n    name: string;\n    description: string;\n    theater: TheaterDTO;\n    deleted: boolean | string;\n}\n\n/**\n * Classe che contiene gli attributi che indicano l'area di appartenenza di un modulo (simple).\n */\nexport class SimpleAreaDTO {\n    area: string\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà dell'istanza di un teatro all'interno del node_templates.\n */\nexport class TheaterInstancePropertiesDTO {\n    mode: string\n    tags: TagTIP[]\n    areas: SimpleAreaDTO[]\n    author: string\n    version: string | number\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano un tag.\n */\nexport class TagTIP{\n    tag: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano in via generale le caratteristiche di un elemento che deve essere presente nel node_templates.\n */\nexport class ElementIntoTheaterDTO {  // goes into map in blueprint [name:string]: Module...\n    properties: ModuleInstancePropertiesDTO | TheaterInstancePropertiesDTO\n    type: string\n}\n\n\n/**\n * Classe che contiene gli attributi che indicano le caratteristiche di un teatro presente nel node_templates.\n */\nexport class ModuleInstanceDTO {\n    properties: ModuleInstancePropertiesDTO\n    type: string\n}\n/**\n * Classe che contiene gli attributi che indicano le caratteristiche di un modulo presente nel node_templates.\n */\nexport class TheaterInstanceDTO {\n    properties: TheaterInstancePropertiesDTO\n    type: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/ModuleModeDTO.html":{"url":"classes/ModuleModeDTO.html","title":"class - ModuleModeDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  ModuleModeDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsDTO/moduleDTO.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano la modalità di un modulo.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                code\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:77\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PageableDTO, SortDTO } from './elementDTO';\nimport { NetworkDTO } from './networkDTO';\nimport { TheaterDTO } from './theaterDTO';\n\n/**\n * Classe che contiene gli attributi che indicano l'insieme dei moduli ritornati dal teatro.\n */\nexport class ModuleListDTO {\n    content: SimpleModuleDTO[]\n    pageable: PageableDTO\n    last: boolean\n    totalPages: string | number\n    totalElements: string | number\n    size: string | number\n    number: string | number\n    sort: SortDTO\n    numberOfElements: string | number\n    first: boolean\n    empty: boolean\n}\n\n/**\n * Classe che contiene gli attributi che indica il catalogo del tipo.\n */\nexport class TypesCatalogueDTO {\n    group: string\n    id: string | number\n    parentId: {}\n    value: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano la classificazione del modulo.\n */\nexport class ModuleClassificationDTO {\n    blueprintType: string\n    category: string\n    expectedInstanceType: string\n    id: string | number\n    mcClass: string\n    type: string\n    uuid: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano un parametro generico.\n */\nexport class GenericParameterDTO {\n    type: string\n    default: string\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano i parametri di configurazione di un modulto.\n */\nexport class ConfigurationTemplateDTO {\n    anchor_parameters: { [name: string]: GenericParameterDTO | string }\n    instance_parameters: { [name: string]: GenericParameterDTO }\n    structural_parameters: { [name: string]: GenericParameterDTO }\n    fixed_parameters: { [name: string]: GenericParameterDTO }\n    control_parameters: { [name: string]: GenericParameterDTO }\n    infrastructure_parameters: { [name: string]: GenericParameterDTO }\n    module: string\n    description: string\n    category: string\n    version: string | number\n    platform: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano la modalità di un modulo.\n */\nexport class ModuleModeDTO {\n    code: string\n    id: string | number\n    name: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano lo stato di un modulo.\n */\nexport class ModuleStatusDTO {\n    descriptionCode: string\n    id: string | number\n    name: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le statitistiche di un modulo.\n */\nexport class StatisticItemDTO {\n    error: string | number\n    updated: string | number\n    inserted: string | number\n}\n\n/**\n * Classe che contiene gli attributi che indicano il modulo (simple - in dipendenza del teatro).\n */\nexport class SimpleModuleDTO {\n    createdBy: string\n    createdDate: string\n    description: string\n    id: string | number\n    isLocked: boolean\n    lastModifiedBy: string\n    lastModifiedDate: string\n    lockAcquiredTimestamp: string\n    lockLastUserAcquiring: string\n    lockReleasedTimestamp: string\n    name: string\n    status: ModuleStatusDTO\n    type?: string | any\n    uuid: string\n    version: string | number\n}\n\n/**\n * Classe che contiene gli attributi che indicano il modulo (complex - ritorato da call appostita).\n * @extends {SimpleModuleDTO}\n */\nexport class ModuleDTO extends SimpleModuleDTO {\n    attachments: string[]\n    author: string\n    capabilities: { [name: string]: string }\n    catalog1: TypesCatalogueDTO\n    catalog2: TypesCatalogueDTO\n    catalog3: TypesCatalogueDTO\n    classification: ModuleClassificationDTO\n    configurationTemplate: ConfigurationTemplateDTO\n    detailProperties: {}\n    input: { [name: string]: string }\n    output: { [name: string]: string }\n    mode: ModuleModeDTO\n    statistics: { [name: string]: StatisticItemDTO | string | number }\n    tags: []\n}\n\n/**\n * Classe che contiene gli attributi che indicano le interfacce esposte da un modulo.\n */\nexport class ModuleNetworkInterfaceDTO {\n    id: string | number\n    label: string\n    module: ModuleDTO\n    network: NetworkDTO\n    nodeName: string\n    type: string\n    uuid: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le connessioni interfaccia-modulo.\n */\nexport class ConsumerInterfaceLinkDTO {\n    local_interface: string\n    module_instance: string\n    remote_interface: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà dell'istanza di un modulo all'interno del node_templates.\n */\nexport class ModuleInstancePropertiesDTO {\n    area: string\n    description: string\n    module: string\n    version: string | number\n    sequence: string | number\n    consumer_interfaces_link: ConsumerInterfaceLinkDTO[]\n}\n\n\n/**\n * Classe che contiene gli attributi che indicano l'area di appartenenza di un modulo (complex).\n */\nexport class AreaDTO {\n    id: string | number;\n    uuid: string;\n    name: string;\n    description: string;\n    theater: TheaterDTO;\n    deleted: boolean | string;\n}\n\n/**\n * Classe che contiene gli attributi che indicano l'area di appartenenza di un modulo (simple).\n */\nexport class SimpleAreaDTO {\n    area: string\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà dell'istanza di un teatro all'interno del node_templates.\n */\nexport class TheaterInstancePropertiesDTO {\n    mode: string\n    tags: TagTIP[]\n    areas: SimpleAreaDTO[]\n    author: string\n    version: string | number\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano un tag.\n */\nexport class TagTIP{\n    tag: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano in via generale le caratteristiche di un elemento che deve essere presente nel node_templates.\n */\nexport class ElementIntoTheaterDTO {  // goes into map in blueprint [name:string]: Module...\n    properties: ModuleInstancePropertiesDTO | TheaterInstancePropertiesDTO\n    type: string\n}\n\n\n/**\n * Classe che contiene gli attributi che indicano le caratteristiche di un teatro presente nel node_templates.\n */\nexport class ModuleInstanceDTO {\n    properties: ModuleInstancePropertiesDTO\n    type: string\n}\n/**\n * Classe che contiene gli attributi che indicano le caratteristiche di un modulo presente nel node_templates.\n */\nexport class TheaterInstanceDTO {\n    properties: TheaterInstancePropertiesDTO\n    type: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/ModuleNetworkInterfaceDTO.html":{"url":"classes/ModuleNetworkInterfaceDTO.html","title":"class - ModuleNetworkInterfaceDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  ModuleNetworkInterfaceDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsDTO/moduleDTO.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano le interfacce esposte da un modulo.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                label\n                            \n                            \n                                module\n                            \n                            \n                                network\n                            \n                            \n                                nodeName\n                            \n                            \n                                type\n                            \n                            \n                                uuid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:144\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        label\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:145\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ModuleDTO\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:146\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        network\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         NetworkDTO\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:147\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nodeName\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:148\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:149\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uuid\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:150\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PageableDTO, SortDTO } from './elementDTO';\nimport { NetworkDTO } from './networkDTO';\nimport { TheaterDTO } from './theaterDTO';\n\n/**\n * Classe che contiene gli attributi che indicano l'insieme dei moduli ritornati dal teatro.\n */\nexport class ModuleListDTO {\n    content: SimpleModuleDTO[]\n    pageable: PageableDTO\n    last: boolean\n    totalPages: string | number\n    totalElements: string | number\n    size: string | number\n    number: string | number\n    sort: SortDTO\n    numberOfElements: string | number\n    first: boolean\n    empty: boolean\n}\n\n/**\n * Classe che contiene gli attributi che indica il catalogo del tipo.\n */\nexport class TypesCatalogueDTO {\n    group: string\n    id: string | number\n    parentId: {}\n    value: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano la classificazione del modulo.\n */\nexport class ModuleClassificationDTO {\n    blueprintType: string\n    category: string\n    expectedInstanceType: string\n    id: string | number\n    mcClass: string\n    type: string\n    uuid: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano un parametro generico.\n */\nexport class GenericParameterDTO {\n    type: string\n    default: string\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano i parametri di configurazione di un modulto.\n */\nexport class ConfigurationTemplateDTO {\n    anchor_parameters: { [name: string]: GenericParameterDTO | string }\n    instance_parameters: { [name: string]: GenericParameterDTO }\n    structural_parameters: { [name: string]: GenericParameterDTO }\n    fixed_parameters: { [name: string]: GenericParameterDTO }\n    control_parameters: { [name: string]: GenericParameterDTO }\n    infrastructure_parameters: { [name: string]: GenericParameterDTO }\n    module: string\n    description: string\n    category: string\n    version: string | number\n    platform: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano la modalità di un modulo.\n */\nexport class ModuleModeDTO {\n    code: string\n    id: string | number\n    name: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano lo stato di un modulo.\n */\nexport class ModuleStatusDTO {\n    descriptionCode: string\n    id: string | number\n    name: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le statitistiche di un modulo.\n */\nexport class StatisticItemDTO {\n    error: string | number\n    updated: string | number\n    inserted: string | number\n}\n\n/**\n * Classe che contiene gli attributi che indicano il modulo (simple - in dipendenza del teatro).\n */\nexport class SimpleModuleDTO {\n    createdBy: string\n    createdDate: string\n    description: string\n    id: string | number\n    isLocked: boolean\n    lastModifiedBy: string\n    lastModifiedDate: string\n    lockAcquiredTimestamp: string\n    lockLastUserAcquiring: string\n    lockReleasedTimestamp: string\n    name: string\n    status: ModuleStatusDTO\n    type?: string | any\n    uuid: string\n    version: string | number\n}\n\n/**\n * Classe che contiene gli attributi che indicano il modulo (complex - ritorato da call appostita).\n * @extends {SimpleModuleDTO}\n */\nexport class ModuleDTO extends SimpleModuleDTO {\n    attachments: string[]\n    author: string\n    capabilities: { [name: string]: string }\n    catalog1: TypesCatalogueDTO\n    catalog2: TypesCatalogueDTO\n    catalog3: TypesCatalogueDTO\n    classification: ModuleClassificationDTO\n    configurationTemplate: ConfigurationTemplateDTO\n    detailProperties: {}\n    input: { [name: string]: string }\n    output: { [name: string]: string }\n    mode: ModuleModeDTO\n    statistics: { [name: string]: StatisticItemDTO | string | number }\n    tags: []\n}\n\n/**\n * Classe che contiene gli attributi che indicano le interfacce esposte da un modulo.\n */\nexport class ModuleNetworkInterfaceDTO {\n    id: string | number\n    label: string\n    module: ModuleDTO\n    network: NetworkDTO\n    nodeName: string\n    type: string\n    uuid: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le connessioni interfaccia-modulo.\n */\nexport class ConsumerInterfaceLinkDTO {\n    local_interface: string\n    module_instance: string\n    remote_interface: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà dell'istanza di un modulo all'interno del node_templates.\n */\nexport class ModuleInstancePropertiesDTO {\n    area: string\n    description: string\n    module: string\n    version: string | number\n    sequence: string | number\n    consumer_interfaces_link: ConsumerInterfaceLinkDTO[]\n}\n\n\n/**\n * Classe che contiene gli attributi che indicano l'area di appartenenza di un modulo (complex).\n */\nexport class AreaDTO {\n    id: string | number;\n    uuid: string;\n    name: string;\n    description: string;\n    theater: TheaterDTO;\n    deleted: boolean | string;\n}\n\n/**\n * Classe che contiene gli attributi che indicano l'area di appartenenza di un modulo (simple).\n */\nexport class SimpleAreaDTO {\n    area: string\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà dell'istanza di un teatro all'interno del node_templates.\n */\nexport class TheaterInstancePropertiesDTO {\n    mode: string\n    tags: TagTIP[]\n    areas: SimpleAreaDTO[]\n    author: string\n    version: string | number\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano un tag.\n */\nexport class TagTIP{\n    tag: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano in via generale le caratteristiche di un elemento che deve essere presente nel node_templates.\n */\nexport class ElementIntoTheaterDTO {  // goes into map in blueprint [name:string]: Module...\n    properties: ModuleInstancePropertiesDTO | TheaterInstancePropertiesDTO\n    type: string\n}\n\n\n/**\n * Classe che contiene gli attributi che indicano le caratteristiche di un teatro presente nel node_templates.\n */\nexport class ModuleInstanceDTO {\n    properties: ModuleInstancePropertiesDTO\n    type: string\n}\n/**\n * Classe che contiene gli attributi che indicano le caratteristiche di un modulo presente nel node_templates.\n */\nexport class TheaterInstanceDTO {\n    properties: TheaterInstancePropertiesDTO\n    type: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"injectables/ModuleService.html":{"url":"injectables/ModuleService.html","title":"injectable - ModuleService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ModuleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/api/module.service.ts\n        \n\n\n\n\n\n            \n    Indice\n    \n        \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getAllModules\n                            \n                            \n                                    Async\n                                getAllModulesPage\n                            \n                            \n                                    Async\n                                getModuleByID\n                            \n                            \n                                    Async\n                                getModuleHostByTheaterUUID\n                            \n                            \n                                    Async\n                                getModuleInterfacesByModuleID\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Costruttore\n        \n            \n                \n                    \nconstructor(http: HttpClient, tokenService: TokenService)\n                    \n                \n                        \n                            \n                                Definito in src/app/services/api/module.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parametri :\n                                    \n                                        \n                                            \n                                                Nome\n                                                    Tipo\n                                                Opzionale\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tokenService\n                                                  \n                                                        \n                                                                        TokenService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllModules\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllModules()\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/api/module.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllModulesPage\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllModulesPage(pageindex: number)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/api/module.service.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    pageindex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getModuleByID\n                        \n                    \n                \n            \n            \n                \n                    \n                    getModuleByID(id: string | number)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/api/module.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            string | number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getModuleHostByTheaterUUID\n                        \n                    \n                \n            \n            \n                \n                    \n                    getModuleHostByTheaterUUID(theater_uuid: number | string)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/api/module.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    theater_uuid\n                                    \n                                            number | string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getModuleInterfacesByModuleID\n                        \n                    \n                \n            \n            \n                \n                    \n                    getModuleInterfacesByModuleID(module_id: number | string)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/api/module.service.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    module_id\n                                    \n                                            number | string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { HostModuleDTO } from '../modelsDTO/hostDTO';\nimport { ModuleDTO, ModuleListDTO, ModuleNetworkInterfaceDTO, SimpleModuleDTO } from '../modelsDTO/moduleDTO';\nimport { TokenService } from '../token/token.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ModuleService {\n\n  constructor(private http: HttpClient, private tokenService: TokenService) { }\n\n  async getModuleByID(id: string | number): Promise {\n\n    let link: string = environment.getAllModules + \"/\" + id;\n\n    const promise = await new Promise((resolve, reject) => {\n      this.http.get\n        (\n          link,\n          this.tokenService.getHttpgetOption()\n        )\n        .toPromise()\n        .then(\n          (res: ModuleDTO) => {\n            resolve(res);\n          }\n        )\n        .catch(\n          error => {\n            reject(error);\n          }\n        );\n    }\n    );\n    return promise;\n  }\n\n  async getAllModules(): Promise {\n    let x: SimpleModuleDTO[] = [];\n    let currentpage = 0, endpage = 1; // at least 1 page \n    while (currentpage  {\n\n    let link: string = environment.getModulesHostsByTheaterUUID + (theater_uuid as unknown as string) + environment.GMHhost;\n\n    const promise = await new Promise((resolve, reject) => {\n      this.http.get\n        (\n          link,\n          this.tokenService.getHttpgetOption()\n        )\n        .toPromise()\n        .then(\n          (res: HostModuleDTO[]) => {\n            resolve(res);\n          }\n        )\n        .catch(\n          error => {\n            reject(error);\n          }\n        );\n    }\n    );\n    return promise;\n  }\n\n  async getModuleInterfacesByModuleID(module_id: number | string): Promise {\n\n    let link: string = environment.getModuleInterfacesByModuleID + (module_id as unknown as string);\n\n    const promise = await new Promise((resolve, reject) => {\n      this.http.get\n        (\n          link,\n          this.tokenService.getHttpgetOption()\n        )\n        .toPromise()\n        .then(\n          (res: ModuleNetworkInterfaceDTO[]) => {\n            resolve(res);\n          }\n        )\n        .catch(\n          error => {\n            reject(error);\n          }\n        );\n    }\n    );\n    return promise;\n  }\n\n  async getAllModulesPage(pageindex: number): Promise {\n\n    let link: string = environment.getAllModules + '?page=' + (pageindex ? pageindex : 0);\n\n    const promise = await new Promise((resolve, reject) => {\n      this.http.get\n        (\n          link,\n          this.tokenService.getHttpgetOption()\n        )\n        .toPromise()\n        .then(\n          (res: ModuleListDTO) => {\n            resolve(res);\n          }\n        )\n        .catch(\n          error => {\n            reject(error);\n          }\n        );\n    }\n    );\n    return promise;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/ModuleSimpleData.html":{"url":"classes/ModuleSimpleData.html","title":"class - ModuleSimpleData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  ModuleSimpleData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsExport/moduleExport.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano la rappresentazione del modulo per l'export.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                properties\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        properties\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         PropertiesMSD\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ModuleTypeExport\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ModeTypeExport, ModuleTypeExport, NetworkTypeExport, NodeTypeExport, PortTypeExport, RelationshipsTypeExport, SubnetTypeExport, ToscaDefinitionType } from \"./TypeExport\"\n\n\n/**\n * Classe utilizzata per l'export. \n * Contiene le informazioni generali per il modulo che devono esserci nello standard Tosca.\n */\nexport class ModuleExport {\n    tosca_definitions_version: ToscaDefinitionType\n    description: string\n    imports: string[]\n    node_templates: { [name: string]: ModuleSimpleData | NodeSimpleData | PortSimpleData | NetworkSimpleData | SubnetSimpleData }\n    dsl_definition: any | null; //future\n    capabilites: any | null //future\n    outputs: any | null //future\n}\n\n/**\n * Classe che contiene gli attributi che indicano la rappresentazione del modulo per l'export.\n */\nexport class ModuleSimpleData {\n    type: ModuleTypeExport\n    properties: PropertiesMSD\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà del modulo per l'export.\n */\nexport class PropertiesMSD {\n    mode: ModeTypeExport\n    description: string\n    version: string | number\n    constraints: ConstraintsMSD\n    interface_networks: {\n        providers: InterfaceNetworksProvider[]\n        consumers: InterfaceNetworksConsumer[]\n    }\n    virtual_machines: VirtualMachine[]\n}\n/**\n * Classe che contiene gli attributi che indicano i vincoli di connessione del modulo per l'export.\n */\nexport class ConstraintsMSD {\n    interface_constraints: InterfaceConstraints[]\n    module_constraints: ModuleConstraints[]\n    network_constraints: NetworkConstraints[]\n}\n/**\n * Classe che contiene gli attributi che indicano i viconli per le interfacce di connessione del modulo.\n */\nexport class InterfaceConstraints {\n    local_interface: string\n    multiple_mode: boolean = false //future\n    module_name: string\n    compatibility: string = \"1.0\" // future\n    remote_interface: string\n}\n/**\n * Classe che contiene gli attributi che indicano i viconli del modulo.\n */\nexport class ModuleConstraints {\n}\n/**\n * Classe che contiene gli attributi che indicano i viconli dei network del modulo.\n */\nexport class NetworkConstraints {\n}\n/**\n * Classe che contiene gli attributi che indicano le interfacce provider del modulo.\n */\nexport class InterfaceNetworksProvider {\n    interface: string\n    network: string\n    tag: string\n    subnets: SubnetExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano le interfacce consumer del modulo.\n */\nexport class InterfaceNetworksConsumer {\n    interface: string\n    network: string\n    tag: string\n    subnets: SubnetExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano l'insieme di host presenti in un modulo.\n */\nexport class VirtualMachine {\n    virtual_machine: string\n    ports: VirtualMachinePorts[]\n}\n/**\n * Classe che contiene gli attributi che indicano le porte associate ad un host di un modulo.\n */\nexport class VirtualMachinePorts {\n    port: string\n    network: string\n    subnets: SubnetExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano la subnet connessa alla porte dell'host.\n * @see {VirtualMachinePorts}\n */\nexport class SubnetExport {\n    subnet: string;\n}\n\n/**\n * Classe che contiene gli attributi che indica un nodo all'interno dei node_templates.\n * @see {ModuleExport}\n */\nexport class NodeSimpleData {\n    type: NodeTypeExport\n    properties: any | null // future\n    interfaces: any | null // future\n    relationships: RelationshipsExport[]\n}\n\n/**\n * Classe che contiene gli attributi che indicano le relazioni generali.\n */\nexport class RelationshipsExport {\n    type: RelationshipsTypeExport\n    target: string\n}\n/**\n * Classe che contiene gli attributi che indicano i dati della porta all'interno dei node_templates.\n */\nexport class PortSimpleData {\n    type: PortTypeExport\n    relationships: RelationshipsExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano i dati delle network all'interno dei node_templates.\n */\nexport class NetworkSimpleData {\n    type: NetworkTypeExport\n    properties: PropertiesNSD\n}\n/**\n * Classe che contiene gli attributi che indicano le proprietà della network all'interno dei node_templates.\n * @see {NetworkSimpleData}\n */\nexport class PropertiesNSD {\n    openstack_config?: any | null // future\n    use_external_resource?: boolean | null // future\n    resource_id?: any | null // future\n}\n\n/**\n * Classe che contiene gli attributi che indicano i dati delle subnet all'interno dei node_templates.\n */\nexport class SubnetSimpleData {\n    type: SubnetTypeExport\n    relationships: RelationshipsExport[]\n    properties: PropertiesSSD\n}\n/**\n * Classe che contiene gli attributi che indicano le proprietà della subnet all'interno dei node_templates.\n * @see {NetworkSimpleData}\n */\nexport class PropertiesSSD {\n    subnet?: {\n        ip_version: string | number\n        cidr: string\n        enable_dhcp: boolean\n        gateway_ip?: any | null // future\n    }\n    openstack_config?: any | null // future\n    use_external_resource?: boolean | null // future\n    resource_id?: any | null // future\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/ModuleStatusDTO.html":{"url":"classes/ModuleStatusDTO.html","title":"class - ModuleStatusDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  ModuleStatusDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsDTO/moduleDTO.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano lo stato di un modulo.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                descriptionCode\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        descriptionCode\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:84\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:85\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:86\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PageableDTO, SortDTO } from './elementDTO';\nimport { NetworkDTO } from './networkDTO';\nimport { TheaterDTO } from './theaterDTO';\n\n/**\n * Classe che contiene gli attributi che indicano l'insieme dei moduli ritornati dal teatro.\n */\nexport class ModuleListDTO {\n    content: SimpleModuleDTO[]\n    pageable: PageableDTO\n    last: boolean\n    totalPages: string | number\n    totalElements: string | number\n    size: string | number\n    number: string | number\n    sort: SortDTO\n    numberOfElements: string | number\n    first: boolean\n    empty: boolean\n}\n\n/**\n * Classe che contiene gli attributi che indica il catalogo del tipo.\n */\nexport class TypesCatalogueDTO {\n    group: string\n    id: string | number\n    parentId: {}\n    value: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano la classificazione del modulo.\n */\nexport class ModuleClassificationDTO {\n    blueprintType: string\n    category: string\n    expectedInstanceType: string\n    id: string | number\n    mcClass: string\n    type: string\n    uuid: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano un parametro generico.\n */\nexport class GenericParameterDTO {\n    type: string\n    default: string\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano i parametri di configurazione di un modulto.\n */\nexport class ConfigurationTemplateDTO {\n    anchor_parameters: { [name: string]: GenericParameterDTO | string }\n    instance_parameters: { [name: string]: GenericParameterDTO }\n    structural_parameters: { [name: string]: GenericParameterDTO }\n    fixed_parameters: { [name: string]: GenericParameterDTO }\n    control_parameters: { [name: string]: GenericParameterDTO }\n    infrastructure_parameters: { [name: string]: GenericParameterDTO }\n    module: string\n    description: string\n    category: string\n    version: string | number\n    platform: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano la modalità di un modulo.\n */\nexport class ModuleModeDTO {\n    code: string\n    id: string | number\n    name: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano lo stato di un modulo.\n */\nexport class ModuleStatusDTO {\n    descriptionCode: string\n    id: string | number\n    name: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le statitistiche di un modulo.\n */\nexport class StatisticItemDTO {\n    error: string | number\n    updated: string | number\n    inserted: string | number\n}\n\n/**\n * Classe che contiene gli attributi che indicano il modulo (simple - in dipendenza del teatro).\n */\nexport class SimpleModuleDTO {\n    createdBy: string\n    createdDate: string\n    description: string\n    id: string | number\n    isLocked: boolean\n    lastModifiedBy: string\n    lastModifiedDate: string\n    lockAcquiredTimestamp: string\n    lockLastUserAcquiring: string\n    lockReleasedTimestamp: string\n    name: string\n    status: ModuleStatusDTO\n    type?: string | any\n    uuid: string\n    version: string | number\n}\n\n/**\n * Classe che contiene gli attributi che indicano il modulo (complex - ritorato da call appostita).\n * @extends {SimpleModuleDTO}\n */\nexport class ModuleDTO extends SimpleModuleDTO {\n    attachments: string[]\n    author: string\n    capabilities: { [name: string]: string }\n    catalog1: TypesCatalogueDTO\n    catalog2: TypesCatalogueDTO\n    catalog3: TypesCatalogueDTO\n    classification: ModuleClassificationDTO\n    configurationTemplate: ConfigurationTemplateDTO\n    detailProperties: {}\n    input: { [name: string]: string }\n    output: { [name: string]: string }\n    mode: ModuleModeDTO\n    statistics: { [name: string]: StatisticItemDTO | string | number }\n    tags: []\n}\n\n/**\n * Classe che contiene gli attributi che indicano le interfacce esposte da un modulo.\n */\nexport class ModuleNetworkInterfaceDTO {\n    id: string | number\n    label: string\n    module: ModuleDTO\n    network: NetworkDTO\n    nodeName: string\n    type: string\n    uuid: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le connessioni interfaccia-modulo.\n */\nexport class ConsumerInterfaceLinkDTO {\n    local_interface: string\n    module_instance: string\n    remote_interface: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà dell'istanza di un modulo all'interno del node_templates.\n */\nexport class ModuleInstancePropertiesDTO {\n    area: string\n    description: string\n    module: string\n    version: string | number\n    sequence: string | number\n    consumer_interfaces_link: ConsumerInterfaceLinkDTO[]\n}\n\n\n/**\n * Classe che contiene gli attributi che indicano l'area di appartenenza di un modulo (complex).\n */\nexport class AreaDTO {\n    id: string | number;\n    uuid: string;\n    name: string;\n    description: string;\n    theater: TheaterDTO;\n    deleted: boolean | string;\n}\n\n/**\n * Classe che contiene gli attributi che indicano l'area di appartenenza di un modulo (simple).\n */\nexport class SimpleAreaDTO {\n    area: string\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà dell'istanza di un teatro all'interno del node_templates.\n */\nexport class TheaterInstancePropertiesDTO {\n    mode: string\n    tags: TagTIP[]\n    areas: SimpleAreaDTO[]\n    author: string\n    version: string | number\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano un tag.\n */\nexport class TagTIP{\n    tag: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano in via generale le caratteristiche di un elemento che deve essere presente nel node_templates.\n */\nexport class ElementIntoTheaterDTO {  // goes into map in blueprint [name:string]: Module...\n    properties: ModuleInstancePropertiesDTO | TheaterInstancePropertiesDTO\n    type: string\n}\n\n\n/**\n * Classe che contiene gli attributi che indicano le caratteristiche di un teatro presente nel node_templates.\n */\nexport class ModuleInstanceDTO {\n    properties: ModuleInstancePropertiesDTO\n    type: string\n}\n/**\n * Classe che contiene gli attributi che indicano le caratteristiche di un modulo presente nel node_templates.\n */\nexport class TheaterInstanceDTO {\n    properties: TheaterInstancePropertiesDTO\n    type: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"interfaces/ModuleTopology.html":{"url":"interfaces/ModuleTopology.html","title":"interface - ModuleTopology","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfacce\n  \n  ModuleTopology\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsApplication/applicationModels.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        TopologyList\n            \n\n        \n            Indice\n            \n                \n                    \n                        \n                            Proprietà\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            rete\n                                        \n                                \n                                \n                                        \n                                            topology\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Proprietà\n                    \n                        \n                                \n                                    \n                                        \n                                        rete\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rete:     ReteMirroringModuleInstanceInfo | ReteTheaterInternalServiceModuleInstanceInfo | ReteTheaterModuleInstanceInfo\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :     ReteMirroringModuleInstanceInfo | ReteTheaterInternalServiceModuleInstanceInfo | ReteTheaterModuleInstanceInfo\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        topology\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        topology:         NodeTopologyElement\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         NodeTopologyElement\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ReteHostInfo } from \"src/app/rete-settings/nodes/rete-nodes/host/hostNode\";\nimport { ReteNetworkInfo } from \"src/app/rete-settings/nodes/rete-nodes/network/networkNode\";\nimport { ReteSubnetInfo } from \"src/app/rete-settings/nodes/rete-nodes/subnet/subnetNode\";\nimport { ReteMirroringModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/mirroringModuleInstance/mirroringModuleInstanceNode\";\nimport { ReteTheaterInternalServiceModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/theaterInternalServiceModuleInstance/theaterInternalServiceModuleInstanceNode\";\nimport { ReteTheaterModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/theaterModuleInstance/theaterModuleInstanceNode\";\nimport { FlavorBasicInfo } from \"../modelsDTO/falvorDTO\";\nimport { HostModuleDTO } from \"../modelsDTO/hostDTO\";\nimport { ModuleNetworkInterfaceDTO, ModuleInstancePropertiesDTO, SimpleModuleDTO, TheaterInstancePropertiesDTO, ModuleInstanceDTO, ModuleDTO, SimpleAreaDTO, AreaDTO } from \"../modelsDTO/moduleDTO\";\nimport { TheaterDTO } from \"../modelsDTO/theaterDTO\";\n\n\nexport interface CommonModule {\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n}\n\n\n/**\n * Classe contenente gli attributi utilizzati per le operazioni che coinvolgono i moduli.\n * ps. Questa struttura è prettamente utilizzata nella chiamata relativa al singolo modulo.\n */\nexport class ModuleApplication extends ModuleDTO implements CommonModule {\n    imports: string[] // perchè nell'export yaml è previsto\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n    // serve per validare il json risultante dal parsing del theaterApplication\n    validateObject?: string = \"module\";\n}\n// PER IMPLEMENTAZIONI FUTURE, PER COERENZA, PRENDERE DIRETTAMENTE I SINGOLI NODI DALLA CHIAMATA ESCLUSIVA E NON DA QUELLA CHE RESTITUISCE TUTTI I TEATRI\n/**\n * Classe contenente gli attributi utilizzati per le operazioni che coinvolgono i moduli.\n * ps. Questa struttura è prettamente utilizzata nella chiamata che prende tutti i moduli del teatro.\n */\nexport class SimpleModuleApplication extends SimpleModuleDTO implements CommonModule {\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n}\n\n\nexport class ReteConnection {\n    from: string;\n    port_src: string;\n    to: string;\n    port_dst: string;\n}\n\nexport interface TopologyList {\n    rete: any;\n    topology?: TopologyElement\n}\nexport class TopologyElement {\n    elements: { [name: string]: any };\n    connection: ReteConnection[]\n}\n\n// apptype module topology\n\nexport class NodeTopologyElement implements TopologyElement {\n    elements: { [hostName: string]: ReteHostInfo | ReteSubnetInfo | ReteNetworkInfo };\n    connection: ReteConnection[]\n}\n\nexport interface ModuleTopology extends TopologyList {\n    rete: ReteMirroringModuleInstanceInfo | ReteTheaterInternalServiceModuleInstanceInfo | ReteTheaterModuleInstanceInfo\n    topology: NodeTopologyElement;\n}\n\nexport class ModuleInstance extends ModuleInstanceDTO implements ModuleTopology {\n    // moduleTopology data\n    rete: ReteTheaterModuleInstanceInfo | ReteTheaterInternalServiceModuleInstanceInfo | ReteMirroringModuleInstanceInfo;\n    topology: NodeTopologyElement;\n    // other data\n    moduleInfo: SimpleModuleApplication\n}\n\n// apptype theater theater\n\nexport interface TheaterTopology extends TopologyElement {\n    elements: { [hostName: string]: ModuleInstance };\n    connection: ReteConnection[];\n}\n\nexport class TheaterApplication extends TheaterDTO implements TheaterTopology {\n    // theaterTopology data\n    elements: { [hostName: string]: ModuleInstance; };\n    connection: ReteConnection[];\n    // other data\n    properties: TheaterInstancePropertiesDTO;\n    topology: TheaterTopology;\n    // serve per validare il json risultante dal parsing del theaterApplication\n    validateObject?: string = \"theater\";\n}\n\nexport class AreaApplication extends AreaDTO {\n    color?: string;\n}\nexport class AreaColorDTO extends SimpleAreaDTO {\n    color: string;\n}\n\n\nexport class FlavorApplication extends FlavorBasicInfo {\n    flavorName: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/NameMappingDTO.html":{"url":"classes/NameMappingDTO.html","title":"class - NameMappingDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  NameMappingDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsDTO/theaterDTO.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano il mapping nome-modulo.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                display_name\n                            \n                            \n                                module_instance_name\n                            \n                            \n                                module_name\n                            \n                            \n                                node_template_name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        display_name\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/theaterDTO.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        module_instance_name\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/theaterDTO.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        module_name\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/theaterDTO.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        node_template_name\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/theaterDTO.ts:48\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ModuleInstanceDTO, TheaterInstanceDTO } from \"./moduleDTO\"\n\n/**\n * Classe che contiene gli attributi che indicano il catalogo di riferimento di un teatro.\n */\nexport class TagCatalogueDTO {\n    description: string\n    id: string | number\n    name: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano lo stato di un teatro.\n */\nexport class TheatreStatusDTO {\n    code: string\n    id: string | number\n    name: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano un elemento nella sequenza di deploy.\n */\nexport class DeployInstanceDTO {\n    moduleInstanceConfigurationUUID?: string\n    moduleInstanceName: string\n    moduleInstanceUUID: string\n    moduleUUID: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano il blueprint di un teatro.\n */\nexport class BlueprintFileDTO {\n    description: string\n    imports: string[]\n    node_templates: {[name:string]:ModuleInstanceDTO|TheaterInstanceDTO}\n    tosca_definitions_version: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano il mapping nome-modulo.\n */\nexport class NameMappingDTO {\n    display_name: string\n    module_instance_name: string\n    module_name: string\n    node_template_name: string\n}\n/**\n * Classe che contiene gli attributi che indica l'array dei mapping nome-modulo.\n */\nexport class EntityNameMappingFileDTO {\n    name_mapping: NameMappingDTO[]\n}\n\n/**\n * Classe che contiene gli attributi che indicano il teaatro.\n */\nexport class TheaterDTO {\n    author: string\n    blueprintFile: BlueprintFileDTO\n    blueprintUUID: string | number\n    createdBy: string\n    createdDate: string\n    deploymentSequence: {[index:string]:DeployInstanceDTO} //tosee\n    description: string\n    entityNameMappingFile: EntityNameMappingFileDTO\n    id: string | number\n    isLocked: boolean\n    lastModifiedBy: string\n    lastModifiedDate: string\n    lockAcquiredTimestamp: string\n    lockLastUserAcquiring: string\n    lockReleasedTimestamp: string\n    name: string\n    status: TheatreStatusDTO\n    tags: TagCatalogueDTO[]\n    uuid: string\n    version: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"components/NavbarComponent.html":{"url":"components/NavbarComponent.html","title":"component - NavbarComponent","body":"\n                   \n\n\n\n\n\n  Componenti\n  \n  NavbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/navbar/navbar.component.ts\n\n\n\n    \n        Descrizione\n    \n    \n        Componente che genera una navbar a contenuto variabile.\n\n    \n\n\n    \n        Implementa\n    \n    \n                    AfterViewInit\n    \n\n\n\n    Metadati\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navbar\n            \n\n            \n                styleUrls\n                ./navbar.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./navbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Indice\n    \n        \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                select_item\n                            \n                        \n                    \n                \n\n                \n                    \n                        Input\n                    \n                \n                \n                    \n                        \n                            \n                                element\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Output\n                    \n                \n                \n                    \n                        \n                            \n                                itemSelected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Costruttore\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Definito in src/app/components/navbar/navbar.component.ts:27\n                            \n                        \n\n                \n                    \n                            Costruttore componente NavbarComonent\n\n                    \n                \n            \n        \n\n\n    \n    Input\n        \n            \n                \n                    \n                        \n                        element\n                    \n                \n                \n                    \n                        Tipo :         NavbarElement\n\n                    \n                \n                        \n                            \n                                    Definito in src/app/components/navbar/navbar.component.ts:19\n                            \n                        \n                \n                    \n                        Variabile passata in input che fornisce le caratterisiche della navbar\nSee {NavbarElement}\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                    Definito in src/app/components/navbar/navbar.component.ts:23\n                            \n                        \n                \n                    \n                        Variabile passata in input che rappresenta il titolo della nav\n\n                    \n                \n            \n        \n\n    \n    Output\n        \n            \n                \n                    \n                        \n                        itemSelected\n                    \n                \n                \n                    \n                        Tipo :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Definito in src/app/components/navbar/navbar.component.ts:27\n                            \n                        \n                \n                    \n                        Variabile di output che ritorna l'evento del click di un elemento selezionato.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Definito in src/app/components/navbar/navbar.component.ts:39\n                \n            \n\n\n            \n                \n                    Funzione richiamata non appena la navbar è visibile.\nHa lo scopo di valorizzare gli attrubuti dei singoli elementi passati in input.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        select_item\n                        \n                    \n                \n            \n            \n                \nselect_item(val: NavbarElement)\n                \n            \n\n\n            \n                \n                    Definito in src/app/components/navbar/navbar.component.ts:57\n                \n            \n\n\n            \n                \n                    Funzione che emette il valore di click su elemento appena è stato selezionato.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                NavbarElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { AfterViewInit, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { NavbarElement } from './navbarType';\n\n\n/**\n * Componente che genera una navbar a contenuto variabile.\n */\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.sass']\n})\nexport class NavbarComponent implements AfterViewInit {\n\n  /**\n   * Variabile passata in input che fornisce le caratterisiche della navbar\n   * @see {NavbarElement}\n   */\n  @Input() element: NavbarElement;\n  /**\n   * Variabile passata in input che rappresenta il titolo della nav\n   */\n  @Input() title: string;\n  /**\n   * Variabile di output che ritorna l'evento del click di un elemento selezionato.\n   */\n  @Output() itemSelected = new EventEmitter();\n\n  /**\n   * Costruttore componente NavbarComonent\n   */\n  constructor() {\n  }\n\n  /**\n   * Funzione richiamata non appena la navbar è visibile.\n   * Ha lo scopo di valorizzare gli attrubuti dei singoli elementi passati in input.\n   */\n  ngAfterViewInit(): void {\n    this.element.element.forEach(\n      (el) => {\n        let a_element: HTMLElement = document.getElementById(el.id);\n        if (el.a_option)\n          el.a_option.forEach(\n            (opt) => {\n              a_element.setAttribute(opt.attr_key, opt.attr_val);\n            }\n          );\n      }\n    )\n  }\n\n  /**\n   * Funzione che emette il valore di click su elemento appena è stato selezionato.\n   * @param val \n   */\n  select_item(val: NavbarElement) {\n    this.itemSelected.emit(val);\n  }\n\n}\n\n    \n\n    \n        \n    \n\n        \n        \n             {{title}} {{'-'+' '+element.type}} \n            \n            \n        \n\n        \n        \n            \n        \n\n        \n            \n                \n                    \n                        {{item.text}}\n                    \n                    \n                    \n                \n            \n        \n\n    \n\n    \n\n    \n                \n                    ./navbar.component.sass\n                \n                \n    \n\n    \n        \n        \n            \n                Legenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento html con direttive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                 {{title}} {{\\'-\\'+\\' \\'+element.type}}                                                                                                                                                     {{item.text}}                                                                                                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ComposerComponent', 'selector': 'app-composer'},{'name': 'ControlTemplate', 'selector': ''},{'name': 'DataInputComponent', 'selector': 'app-data-input'},{'name': 'DataInputV2Component', 'selector': 'app-data-input-v2'},{'name': 'DataItemComponent', 'selector': 'app-window-item'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HostComponent', 'selector': ''},{'name': 'HowToUseComponent', 'selector': 'app-how-to-use'},{'name': 'MirroringModuleInstanceComponent', 'selector': ''},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavbarElementComponent', 'selector': 'app-navbar-element'},{'name': 'NetworkComponent', 'selector': ''},{'name': 'OffcanvasComponent', 'selector': 'app-offcanvas'},{'name': 'ReteModuleComposerComponent', 'selector': 'app-rete-module-composer'},{'name': 'ReteModuleVisualizerComponent', 'selector': 'app-rete-module-visualizer'},{'name': 'ReteTheaterComposerComponent', 'selector': 'app-rete-theater-composer'},{'name': 'ReteTheaterVisualizerComponent', 'selector': 'app-rete-theater-visualizer'},{'name': 'SubnetComponent', 'selector': ''},{'name': 'TabnavComponent', 'selector': 'app-tabnav'},{'name': 'TheaterInternalServiceModuleInstanceComponent', 'selector': ''},{'name': 'TheaterModuleInstanceComponent', 'selector': ''},{'name': 'UnderbarComponent', 'selector': 'app-underbar'},{'name': 'VisualizerComponent', 'selector': 'app-displayer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/NavbarElement.html":{"url":"classes/NavbarElement.html","title":"class - NavbarElement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  NavbarElement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/navbar/navbarType.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Elemento passato come parametro alla componente NavbarComponent\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                element\n                            \n                            \n                                    Opzionale\n                                logo_img\n                            \n                            \n                                    Opzionale\n                                template_title\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        element\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         NavbarItem[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/navbar/navbarType.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        logo_img\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         any\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/navbar/navbarType.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        template_title\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     TemplateRef\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/navbar/navbarType.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     \"module\" | \"theater\"\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/navbar/navbarType.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { TemplateRef } from \"@angular/core\";\n\n/**\n * Elemento passato come parametro alla componente NavbarComponent\n */\nexport class NavbarElement {\n    template_title?: TemplateRef;\n    type: \"module\" | \"theater\";\n    logo_img?: any;\n    element: NavbarItem[];\n}\n\n/**\n * Oggetto che rappresenta un singolo elemento della Navbar\n */\nexport class NavbarItem{\n    id: string;\n    text: string;\n    a_option?: Aoption[];\n    template?: TemplateRef;\n}\n\n/**\n * Rappresenta le opzioni per il tag \n */\nexport class Aoption {\n    attr_key: string;\n    attr_val: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"components/NavbarElementComponent.html":{"url":"components/NavbarElementComponent.html","title":"component - NavbarElementComponent","body":"\n                   \n\n\n\n\n\n  Componenti\n  \n  NavbarElementComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/elements/navbar-element/navbar-element.component.ts\n\n\n\n    \n        Descrizione\n    \n    \n        Componente che ha come scopo mostrare una navbar per le schermate della landing.\n\n    \n\n\n\n\n\n    Metadati\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navbar-element\n            \n\n            \n                styleUrls\n                ./navbar-element.component.css\n            \n\n\n\n            \n                templateUrl\n                ./navbar-element.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Costruttore\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Definito in src/app/pages/elements/navbar-element/navbar-element.component.ts:11\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * Componente che ha come scopo mostrare una navbar per le schermate della landing.\n */\n@Component({\n  selector: 'app-navbar-element',\n  templateUrl: './navbar-element.component.html',\n  styleUrls: ['./navbar-element.component.css']\n})\nexport class NavbarElementComponent {\n  constructor() { }\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n      \n        &nbsp;Infra\n        Create\n      \n    \n\n    Navbar -->\n\n    \n    \n      \n    \n\n    \n      \n        \n          Home\n        \n        \n          Documentation\n        \n        \n          How to use\n        \n      \n    \n\n  \n\n    \n\n    \n                \n                    ./navbar-element.component.css\n                \n                .bg-custom {\n    background-color: rgb(41 39 39 / 50%);\n}\n\n\n\n.rotate-scale-down {\n    transition: rotate-scale-down 0.2s\n}\n.rotate-scale-down:hover{\n    -webkit-animation: rotate-scale-down 0.6s linear both;\n    animation: rotate-scale-down 0.6s linear both;\n}\n\n@-webkit-keyframes rotate-scale-down {\n    0% {\n        -webkit-transform: scale(1) rotateZ(0);\n        transform: scale(1) rotateZ(0);\n    }\n\n    50% {\n        -webkit-transform: scale(0.5) rotateZ(180deg);\n        transform: scale(0.5) rotateZ(180deg);\n    }\n\n    100% {\n        -webkit-transform: scale(1) rotateZ(360deg);\n        transform: scale(1) rotateZ(360deg);\n    }\n}\n\n@keyframes rotate-scale-down {\n    0% {\n        -webkit-transform: scale(1) rotateZ(0);\n        transform: scale(1) rotateZ(0);\n    }\n\n    50% {\n        -webkit-transform: scale(0.5) rotateZ(180deg);\n        transform: scale(0.5) rotateZ(180deg);\n    }\n\n    100% {\n        -webkit-transform: scale(1) rotateZ(360deg);\n        transform: scale(1) rotateZ(360deg);\n    }\n}\n    \n\n    \n        \n        \n            \n                Legenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento html con direttive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                               Infra        Create              Navbar -->                                              Home                          Documentation                          How to use                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ComposerComponent', 'selector': 'app-composer'},{'name': 'ControlTemplate', 'selector': ''},{'name': 'DataInputComponent', 'selector': 'app-data-input'},{'name': 'DataInputV2Component', 'selector': 'app-data-input-v2'},{'name': 'DataItemComponent', 'selector': 'app-window-item'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HostComponent', 'selector': ''},{'name': 'HowToUseComponent', 'selector': 'app-how-to-use'},{'name': 'MirroringModuleInstanceComponent', 'selector': ''},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavbarElementComponent', 'selector': 'app-navbar-element'},{'name': 'NetworkComponent', 'selector': ''},{'name': 'OffcanvasComponent', 'selector': 'app-offcanvas'},{'name': 'ReteModuleComposerComponent', 'selector': 'app-rete-module-composer'},{'name': 'ReteModuleVisualizerComponent', 'selector': 'app-rete-module-visualizer'},{'name': 'ReteTheaterComposerComponent', 'selector': 'app-rete-theater-composer'},{'name': 'ReteTheaterVisualizerComponent', 'selector': 'app-rete-theater-visualizer'},{'name': 'SubnetComponent', 'selector': ''},{'name': 'TabnavComponent', 'selector': 'app-tabnav'},{'name': 'TheaterInternalServiceModuleInstanceComponent', 'selector': ''},{'name': 'TheaterModuleInstanceComponent', 'selector': ''},{'name': 'UnderbarComponent', 'selector': 'app-underbar'},{'name': 'VisualizerComponent', 'selector': 'app-displayer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavbarElementComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/NavbarItem.html":{"url":"classes/NavbarItem.html","title":"class - NavbarItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  NavbarItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/navbar/navbarType.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Oggetto che rappresenta un singolo elemento della Navbar\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                    Opzionale\n                                a_option\n                            \n                            \n                                id\n                            \n                            \n                                    Opzionale\n                                template\n                            \n                            \n                                text\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        a_option\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         Aoption[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/navbar/navbarType.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/navbar/navbarType.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        template\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     TemplateRef\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/navbar/navbarType.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        text\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/navbar/navbarType.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { TemplateRef } from \"@angular/core\";\n\n/**\n * Elemento passato come parametro alla componente NavbarComponent\n */\nexport class NavbarElement {\n    template_title?: TemplateRef;\n    type: \"module\" | \"theater\";\n    logo_img?: any;\n    element: NavbarItem[];\n}\n\n/**\n * Oggetto che rappresenta un singolo elemento della Navbar\n */\nexport class NavbarItem{\n    id: string;\n    text: string;\n    a_option?: Aoption[];\n    template?: TemplateRef;\n}\n\n/**\n * Rappresenta le opzioni per il tag \n */\nexport class Aoption {\n    attr_key: string;\n    attr_val: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/NetOSRouterDTO.html":{"url":"classes/NetOSRouterDTO.html","title":"class - NetOSRouterDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  NetOSRouterDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsDTO/networkDTO.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano le net os.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                borderNetwork\n                            \n                            \n                                id\n                            \n                            \n                                subnet\n                            \n                            \n                                uuid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        borderNetwork\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         BorderNetworkDTO\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/networkDTO.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/networkDTO.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subnet\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     literal type | null\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/networkDTO.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uuid\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/networkDTO.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class NetworkDTO {\n    id: string | number\n    name: string\n    uuid: string\n}\n\n/**\n * Classe che contiene gli attributi che indica la border network.\n */\nexport class BorderNetworkDTO {\n    bnName: string\n    id: string | number\n    subnet: {} | null\n    uuid: string | number\n}\n\n/**\n * Classe che contiene gli attributi che indicano le net os.\n */\nexport class NetOSRouterDTO {\n    borderNetwork: BorderNetworkDTO\n    id: string | number\n    subnet: {} | null\n    uuid: string | number\n}\n\n\n/**\n * Classe che contiene gli attributi che indicano le subnet.\n */\nexport class SubnetDTO {\n    allocationPool: string\n    borderNetwork: BorderNetworkDTO\n    cidr: string\n    dns: string\n    gateway: string\n    id: string | number\n    isDhcp: boolean\n    name: string\n    network: NetworkDTO\n    router: NetOSRouterDTO\n    uuid: string\n    version: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"components/NetworkComponent.html":{"url":"components/NetworkComponent.html","title":"component - NetworkComponent","body":"\n                   \n\n\n\n\n\n  Componenti\n  \n  NetworkComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/rete-settings/nodes/rete-nodes/network/network.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n            NodeComponent\n    \n\n\n\n\n    Metadati\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            NodeService\n                \n            \n\n\n\n            \n                styleUrls\n                ./network.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./network.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                NetworkIcon\n                            \n                            \n                                NodeType\n                            \n                            \n                                showInputOutlet\n                            \n                            \n                                showOutputOutlet\n                            \n                            \n                                showPorts\n                            \n                        \n                    \n                \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                showhidesocket\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Costruttore\n        \n            \n                \n                    \nconstructor(service: NodeService, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Definito in src/app/rete-settings/nodes/rete-nodes/network/network.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parametri :\n                                    \n                                        \n                                            \n                                                Nome\n                                                    Tipo\n                                                Opzionale\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                    NodeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        showhidesocket\n                        \n                    \n                \n            \n            \n                \nshowhidesocket()\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-nodes/network/network.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        NetworkIcon\n                        \n                    \n                \n            \n                \n                    \n                        Valore predefinito : NetworkIcon\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-nodes/network/network.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        NodeType\n                        \n                    \n                \n            \n                \n                    \n                        Valore predefinito : EnumNodeType\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-nodes/network/network.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showInputOutlet\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                \n                    \n                        Valore predefinito : true\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-nodes/network/network.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showOutputOutlet\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                \n                    \n                        Valore predefinito : false\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-nodes/network/network.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showPorts\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                \n                    \n                        Valore predefinito : true\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-nodes/network/network.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, ChangeDetectorRef, ChangeDetectionStrategy } from '@angular/core';\nimport { NodeComponent, NodeService } from 'rete-angular-render-plugin';\nimport { EnumNodeType } from 'src/app/models/appType';\nimport { NetworkIcon } from 'src/app/rete-settings/style/styleIconConfig';\n// import { EnumNodeType } from 'src/app/rete-settings/models/reteModelType';\n\n@Component({\n  templateUrl: './network.component.html',\n  styleUrls: ['./network.component.sass',],\n  providers: [NodeService],\n  changeDetection: ChangeDetectionStrategy.OnPush, // render più veloce.\n})\n\nexport class NetworkComponent extends NodeComponent {\n\n  showPorts: boolean = true;\n  showOutputOutlet: boolean = false;\n  showInputOutlet: boolean = true;\n  NetworkIcon = NetworkIcon;\n  NodeType = EnumNodeType;\n\n\n  constructor(\n    protected service: NodeService,\n    protected cdr: ChangeDetectorRef) {\n    super(service, cdr);\n  }\n\n  showhidesocket() {\n    this.showPorts = !this.showPorts;\n  }\n\n}\n\n    \n\n    \n        \n\n\n  \n    \n      \n        \n          {{ node.data.name === \"\" || node.data.name === undefined ? \"Assign name\" : node.data.name }}\n        \n      \n      \n        \n          \n          \n        \n      \n    \n   -->\n\n\n  \n  \n    \n      \n        \n          \n            \n              \n                 \n              \n              \n                \n                  {{\n                  (node.data.name && node.data.name!=='')\n                  ?node.data.name\n                  :NodeType.NETWORK\n                  }}\n                \n                \n                  \n                    {{\n                    (node.data.externalInterfaceName && node.data.externalInterfaceName!=='')\n                    ?\"External interface name: \"+node.data.externalInterfaceName\n                    :''\n                    }}\n                  \n                  \n                    {{\n                    (node.data.externalInterfaceType && node.data.externalInterfaceType!=='')\n                    ?\"type: \"+node.data.externalInterfaceType\n                    :''\n                    }}\n                  \n                \n              \n            \n          \n        \n      \n    \n  \n\n\n  \n    \n      Button with data-bs-target\n    \n  \n  \n    \n      Some placeholder content for the collapse component. This panel is hidden by default but revealed when the user\n      activates the relevant trigger.\n    \n   -->\n\n\n  \n\n       \n       \n        \n          {{output.name}}\n          \n            \n            \n          \n        \n      \n  \n  \n       -->\n  \n      \n      \n        \n          \n            \n            \n            \n          \n          {{input.name}}\n          \n        \n      \n\n  \n    \n\n    \n                \n                    ./network.component.sass\n                \n                @import \"../vars\"\n\n.node\n  background: $node-color\n  border: 2px solid #f124\n  border-radius: 10px\n  cursor: pointer\n  min-width: $node-width\n  height: auto\n  padding-bottom: 6px\n  box-sizing: content-box\n  position: relative\n  user-select: none\n  &:hover\n    background: lighten($node-color,4%)\n  &.selected\n    background: $node-color-selected\n    border-color: #ff0000\n  .title\n    color: $text-color\n    font-family: $font-fam\n    font-size: 18px\n    padding: 8px\n  .output\n    text-align: right\n    display: flex\n    justify-content: flex-end\n  .input\n    text-align: left\n    display: flex\n    justify-content: flex-start\n  .input-title,.output-title\n    vertical-align: middle\n    color: $text-color\n    display: inline-block\n    font-family: $font-fam\n    font-size: 14px\n    margin: $socket-margin\n    line-height: $socket-size\n    &[hidden]\n      display: none\n  .input-control\n    z-index: 1\n    width: calc(100% - #{$socket-size + 2*$socket-margin})\n    vertical-align: middle\n    display: inline-block\n  .control\n    padding: $socket-margin $socket-size/2 + $socket-margin\n\n.external-network-info-div\n  border-style: groove\n  border-radius: 1em\n  padding: 1em\n\n    \n\n    \n        \n        \n            \n                Legenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento html con direttive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              {{ node.data.name === \"\" || node.data.name === undefined ? \"Assign name\" : node.data.name }}                                                                     -->                                                                                                                                         {{                  (node.data.name && node.data.name!==\\'\\')                  ?node.data.name                  :NodeType.NETWORK                  }}                                                                      {{                    (node.data.externalInterfaceName && node.data.externalInterfaceName!==\\'\\')                    ?\"External interface name: \"+node.data.externalInterfaceName                    :\\'\\'                    }}                                                        {{                    (node.data.externalInterfaceType && node.data.externalInterfaceType!==\\'\\')                    ?\"type: \"+node.data.externalInterfaceType                    :\\'\\'                    }}                                                                                                      Button with data-bs-target                  Some placeholder content for the collapse component. This panel is hidden by default but revealed when the user      activates the relevant trigger.       -->                                  {{output.name}}                                                                     -->                                                                                        {{input.name}}                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ComposerComponent', 'selector': 'app-composer'},{'name': 'ControlTemplate', 'selector': ''},{'name': 'DataInputComponent', 'selector': 'app-data-input'},{'name': 'DataInputV2Component', 'selector': 'app-data-input-v2'},{'name': 'DataItemComponent', 'selector': 'app-window-item'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HostComponent', 'selector': ''},{'name': 'HowToUseComponent', 'selector': 'app-how-to-use'},{'name': 'MirroringModuleInstanceComponent', 'selector': ''},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavbarElementComponent', 'selector': 'app-navbar-element'},{'name': 'NetworkComponent', 'selector': ''},{'name': 'OffcanvasComponent', 'selector': 'app-offcanvas'},{'name': 'ReteModuleComposerComponent', 'selector': 'app-rete-module-composer'},{'name': 'ReteModuleVisualizerComponent', 'selector': 'app-rete-module-visualizer'},{'name': 'ReteTheaterComposerComponent', 'selector': 'app-rete-theater-composer'},{'name': 'ReteTheaterVisualizerComponent', 'selector': 'app-rete-theater-visualizer'},{'name': 'SubnetComponent', 'selector': ''},{'name': 'TabnavComponent', 'selector': 'app-tabnav'},{'name': 'TheaterInternalServiceModuleInstanceComponent', 'selector': ''},{'name': 'TheaterModuleInstanceComponent', 'selector': ''},{'name': 'UnderbarComponent', 'selector': 'app-underbar'},{'name': 'VisualizerComponent', 'selector': 'app-displayer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NetworkComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/NetworkConstraints.html":{"url":"classes/NetworkConstraints.html","title":"class - NetworkConstraints","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  NetworkConstraints\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsExport/moduleExport.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano i viconli dei network del modulo.\n\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ModeTypeExport, ModuleTypeExport, NetworkTypeExport, NodeTypeExport, PortTypeExport, RelationshipsTypeExport, SubnetTypeExport, ToscaDefinitionType } from \"./TypeExport\"\n\n\n/**\n * Classe utilizzata per l'export. \n * Contiene le informazioni generali per il modulo che devono esserci nello standard Tosca.\n */\nexport class ModuleExport {\n    tosca_definitions_version: ToscaDefinitionType\n    description: string\n    imports: string[]\n    node_templates: { [name: string]: ModuleSimpleData | NodeSimpleData | PortSimpleData | NetworkSimpleData | SubnetSimpleData }\n    dsl_definition: any | null; //future\n    capabilites: any | null //future\n    outputs: any | null //future\n}\n\n/**\n * Classe che contiene gli attributi che indicano la rappresentazione del modulo per l'export.\n */\nexport class ModuleSimpleData {\n    type: ModuleTypeExport\n    properties: PropertiesMSD\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà del modulo per l'export.\n */\nexport class PropertiesMSD {\n    mode: ModeTypeExport\n    description: string\n    version: string | number\n    constraints: ConstraintsMSD\n    interface_networks: {\n        providers: InterfaceNetworksProvider[]\n        consumers: InterfaceNetworksConsumer[]\n    }\n    virtual_machines: VirtualMachine[]\n}\n/**\n * Classe che contiene gli attributi che indicano i vincoli di connessione del modulo per l'export.\n */\nexport class ConstraintsMSD {\n    interface_constraints: InterfaceConstraints[]\n    module_constraints: ModuleConstraints[]\n    network_constraints: NetworkConstraints[]\n}\n/**\n * Classe che contiene gli attributi che indicano i viconli per le interfacce di connessione del modulo.\n */\nexport class InterfaceConstraints {\n    local_interface: string\n    multiple_mode: boolean = false //future\n    module_name: string\n    compatibility: string = \"1.0\" // future\n    remote_interface: string\n}\n/**\n * Classe che contiene gli attributi che indicano i viconli del modulo.\n */\nexport class ModuleConstraints {\n}\n/**\n * Classe che contiene gli attributi che indicano i viconli dei network del modulo.\n */\nexport class NetworkConstraints {\n}\n/**\n * Classe che contiene gli attributi che indicano le interfacce provider del modulo.\n */\nexport class InterfaceNetworksProvider {\n    interface: string\n    network: string\n    tag: string\n    subnets: SubnetExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano le interfacce consumer del modulo.\n */\nexport class InterfaceNetworksConsumer {\n    interface: string\n    network: string\n    tag: string\n    subnets: SubnetExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano l'insieme di host presenti in un modulo.\n */\nexport class VirtualMachine {\n    virtual_machine: string\n    ports: VirtualMachinePorts[]\n}\n/**\n * Classe che contiene gli attributi che indicano le porte associate ad un host di un modulo.\n */\nexport class VirtualMachinePorts {\n    port: string\n    network: string\n    subnets: SubnetExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano la subnet connessa alla porte dell'host.\n * @see {VirtualMachinePorts}\n */\nexport class SubnetExport {\n    subnet: string;\n}\n\n/**\n * Classe che contiene gli attributi che indica un nodo all'interno dei node_templates.\n * @see {ModuleExport}\n */\nexport class NodeSimpleData {\n    type: NodeTypeExport\n    properties: any | null // future\n    interfaces: any | null // future\n    relationships: RelationshipsExport[]\n}\n\n/**\n * Classe che contiene gli attributi che indicano le relazioni generali.\n */\nexport class RelationshipsExport {\n    type: RelationshipsTypeExport\n    target: string\n}\n/**\n * Classe che contiene gli attributi che indicano i dati della porta all'interno dei node_templates.\n */\nexport class PortSimpleData {\n    type: PortTypeExport\n    relationships: RelationshipsExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano i dati delle network all'interno dei node_templates.\n */\nexport class NetworkSimpleData {\n    type: NetworkTypeExport\n    properties: PropertiesNSD\n}\n/**\n * Classe che contiene gli attributi che indicano le proprietà della network all'interno dei node_templates.\n * @see {NetworkSimpleData}\n */\nexport class PropertiesNSD {\n    openstack_config?: any | null // future\n    use_external_resource?: boolean | null // future\n    resource_id?: any | null // future\n}\n\n/**\n * Classe che contiene gli attributi che indicano i dati delle subnet all'interno dei node_templates.\n */\nexport class SubnetSimpleData {\n    type: SubnetTypeExport\n    relationships: RelationshipsExport[]\n    properties: PropertiesSSD\n}\n/**\n * Classe che contiene gli attributi che indicano le proprietà della subnet all'interno dei node_templates.\n * @see {NetworkSimpleData}\n */\nexport class PropertiesSSD {\n    subnet?: {\n        ip_version: string | number\n        cidr: string\n        enable_dhcp: boolean\n        gateway_ip?: any | null // future\n    }\n    openstack_config?: any | null // future\n    use_external_resource?: boolean | null // future\n    resource_id?: any | null // future\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/NetworkDTO.html":{"url":"classes/NetworkDTO.html","title":"class - NetworkDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  NetworkDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsDTO/networkDTO.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano i network.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                uuid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/networkDTO.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/networkDTO.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uuid\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/networkDTO.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class NetworkDTO {\n    id: string | number\n    name: string\n    uuid: string\n}\n\n/**\n * Classe che contiene gli attributi che indica la border network.\n */\nexport class BorderNetworkDTO {\n    bnName: string\n    id: string | number\n    subnet: {} | null\n    uuid: string | number\n}\n\n/**\n * Classe che contiene gli attributi che indicano le net os.\n */\nexport class NetOSRouterDTO {\n    borderNetwork: BorderNetworkDTO\n    id: string | number\n    subnet: {} | null\n    uuid: string | number\n}\n\n\n/**\n * Classe che contiene gli attributi che indicano le subnet.\n */\nexport class SubnetDTO {\n    allocationPool: string\n    borderNetwork: BorderNetworkDTO\n    cidr: string\n    dns: string\n    gateway: string\n    id: string | number\n    isDhcp: boolean\n    name: string\n    network: NetworkDTO\n    router: NetOSRouterDTO\n    uuid: string\n    version: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/NetworkNode.html":{"url":"classes/NetworkNode.html","title":"class - NetworkNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  NetworkNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/rete-settings/nodes/rete-nodes/network/networkNode.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che rappresenta il nodo (rete-node) Network all'interno del canvas/editor di rete.\n\n            \n\n            \n                Extends\n            \n            \n                        Component\n            \n\n            \n                Implementa\n            \n            \n                        AngularComponent\n            \n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                builder\n                            \n                            \n                                created\n                            \n                            \n                                createNewNode\n                            \n                            \n                                destroyed\n                            \n                            \n                                valorizeNode\n                            \n                            \n                                worker\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Costruttore\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Definito in src/app/rete-settings/nodes/rete-nodes/network/networkNode.ts:45\n                            \n                        \n\n                \n                    \n                            Costruttore di NetworkNode\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     AngularComponentData\n\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-nodes/network/networkNode.ts:45\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        builder\n                        \n                    \n                \n            \n            \n                \n                    \n                    builder(node: Node)\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-nodes/network/networkNode.ts:63\n                \n            \n\n\n            \n                \n                    Funzione richiamata in fase di costruzione del nodo (rete-node).\nControlla se bisogna instanziare il nodo oppure crearne uno nuovo:\n\nIn fase di design, il nodo non ha dati, per cui bisogna crearne uno nuovo.\nIn fase di visualizing, il nodo presenta dei dati, per cui va valorizzato il nodo.\n\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        created\n                        \n                    \n                \n            \n            \n                \ncreated(node)\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-nodes/network/networkNode.ts:127\n                \n            \n\n\n            \n                \n                    Funzione richiamata una volta in nodo creato.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    node\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createNewNode\n                        \n                    \n                \n            \n            \n                \ncreateNewNode(node: Node)\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-nodes/network/networkNode.ts:75\n                \n            \n\n\n            \n                \n                    Funzione che ha come scopo creare un nodo (rete-node).\nIn particolare gli assegna una struttura vuota.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destroyed\n                        \n                    \n                \n            \n            \n                \ndestroyed(node)\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-nodes/network/networkNode.ts:135\n                \n            \n\n\n            \n                \n                    Funzione richiamata una volta in nodo cancellato.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    node\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        valorizeNode\n                        \n                    \n                \n            \n            \n                \nvalorizeNode(node: Node)\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-nodes/network/networkNode.ts:88\n                \n            \n\n\n            \n                \n                    Funzione che ha come scopo la valorizzazione del nodo (rete-node) con i dati in suo possesso.\nIn quasta fase avviene anche la fase iniziale di instanziamento delle porte input/output.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        worker\n                        \n                    \n                \n            \n            \n                \nworker(node: NodeData, inputs: WorkerInputs, outputs: WorkerOutputs)\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-nodes/network/networkNode.ts:119\n                \n            \n\n\n            \n                \n                    Funzione richiamta per eseguire operazioni che conivolgono computazioni dei nodi.\nNon sono necessari in questa versione.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                            NodeData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    inputs\n                                    \n                                            WorkerInputs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    outputs\n                                    \n                                            WorkerOutputs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Component, Input, Output, Node } from 'rete';\nimport { _Socket } from '../../../sockets/socket';\nimport { _Control } from '../../../controls/control';\nimport { AngularComponent, AngularComponentData } from 'rete-angular-render-plugin';\nimport { NetworkComponent } from './network.component';\nimport { NodeData, WorkerInputs, WorkerOutputs } from 'rete/types/core/data';\nimport {  reteBasicNodeInfo } from '../../reteBasic';\nimport { EnumNodeType, InterfacePortType } from 'src/app/models/appType';\n\n/**\n * Classe utilizzata per indicare il tipo di modulo NetworkNode.\n * @see {reteBasicNodeInfo}\n */\nexport class ReteNetworkInfo extends reteBasicNodeInfo {\n  type: EnumNodeType.Network;\n  externalInterfaceName: string;\n  externalInterfaceType: InterfacePortType;\n}\n\n/**\n * Funzione dichiarata in NetworkNode. \n * Essa ha lo scopo di generare una struttura dati empty.\n * Viene utilizzata in per instanziare un nodo del tipo di ritorno indicato senza dati.\n * @returns {ReteSubnetInfo}\n */\nexport function getEmptyNetworkInfo():ReteNetworkInfo {\n  let x: ReteNetworkInfo = {\n    Input: [],\n    Output: [],\n    name: \"\",\n    type: EnumNodeType.Network,\n    externalInterfaceName: '',\n    externalInterfaceType: undefined\n  };\n  return x;\n\n}\n\n\n/**\n * Classe che rappresenta il nodo (rete-node) Network all'interno del canvas/editor di rete.\n */\nexport class NetworkNode extends Component implements AngularComponent {\n\n  data: AngularComponentData;\n\n  /**\n   * Costruttore di NetworkNode\n   */\n  constructor() {\n    super(EnumNodeType.Network);\n    this.data.render = 'angular';\n    this.data.component = NetworkComponent;\n  }\n\n  /**\n   * Funzione richiamata in fase di costruzione del nodo (rete-node).\n   * Controlla se bisogna instanziare il nodo oppure crearne uno nuovo:\n   * - In fase di design, il nodo non ha dati, per cui bisogna crearne uno nuovo.\n   * - In fase di visualizing, il nodo presenta dei dati, per cui va valorizzato il nodo.\n   * @param node \n   */\n  async builder(node: Node) {\n    if (Object.keys(node.data).length === 0)\n      this.createNewNode(node)\n    else\n      this.valorizeNode(node)\n  }\n\n  /**\n   * Funzione che ha come scopo creare un nodo (rete-node).\n   * In particolare gli assegna una struttura vuota.\n   * @param node \n   */\n  createNewNode(node: Node) {\n    let t = getEmptyNetworkInfo()\n    node.data = {\n      ...node.data,\n      ...t\n    }\n  }\n\n  /**\n   * Funzione che ha come scopo la valorizzazione del nodo (rete-node) con i dati in suo possesso.\n   * In quasta fase avviene anche la fase iniziale di instanziamento delle porte input/output.\n   * @param node \n   */\n  valorizeNode(node: Node) {\n    var i: any = node.data['Input'];\n    var o: any = node.data['Output'];\n    var il = i.length;\n    var ol = o.length;\n\n    for (let index = 0; index \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/NetworkSimpleData.html":{"url":"classes/NetworkSimpleData.html","title":"class - NetworkSimpleData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  NetworkSimpleData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsExport/moduleExport.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano i dati delle network all'interno dei node_templates.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                properties\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        properties\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         PropertiesNSD\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:139\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         NetworkTypeExport\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:138\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ModeTypeExport, ModuleTypeExport, NetworkTypeExport, NodeTypeExport, PortTypeExport, RelationshipsTypeExport, SubnetTypeExport, ToscaDefinitionType } from \"./TypeExport\"\n\n\n/**\n * Classe utilizzata per l'export. \n * Contiene le informazioni generali per il modulo che devono esserci nello standard Tosca.\n */\nexport class ModuleExport {\n    tosca_definitions_version: ToscaDefinitionType\n    description: string\n    imports: string[]\n    node_templates: { [name: string]: ModuleSimpleData | NodeSimpleData | PortSimpleData | NetworkSimpleData | SubnetSimpleData }\n    dsl_definition: any | null; //future\n    capabilites: any | null //future\n    outputs: any | null //future\n}\n\n/**\n * Classe che contiene gli attributi che indicano la rappresentazione del modulo per l'export.\n */\nexport class ModuleSimpleData {\n    type: ModuleTypeExport\n    properties: PropertiesMSD\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà del modulo per l'export.\n */\nexport class PropertiesMSD {\n    mode: ModeTypeExport\n    description: string\n    version: string | number\n    constraints: ConstraintsMSD\n    interface_networks: {\n        providers: InterfaceNetworksProvider[]\n        consumers: InterfaceNetworksConsumer[]\n    }\n    virtual_machines: VirtualMachine[]\n}\n/**\n * Classe che contiene gli attributi che indicano i vincoli di connessione del modulo per l'export.\n */\nexport class ConstraintsMSD {\n    interface_constraints: InterfaceConstraints[]\n    module_constraints: ModuleConstraints[]\n    network_constraints: NetworkConstraints[]\n}\n/**\n * Classe che contiene gli attributi che indicano i viconli per le interfacce di connessione del modulo.\n */\nexport class InterfaceConstraints {\n    local_interface: string\n    multiple_mode: boolean = false //future\n    module_name: string\n    compatibility: string = \"1.0\" // future\n    remote_interface: string\n}\n/**\n * Classe che contiene gli attributi che indicano i viconli del modulo.\n */\nexport class ModuleConstraints {\n}\n/**\n * Classe che contiene gli attributi che indicano i viconli dei network del modulo.\n */\nexport class NetworkConstraints {\n}\n/**\n * Classe che contiene gli attributi che indicano le interfacce provider del modulo.\n */\nexport class InterfaceNetworksProvider {\n    interface: string\n    network: string\n    tag: string\n    subnets: SubnetExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano le interfacce consumer del modulo.\n */\nexport class InterfaceNetworksConsumer {\n    interface: string\n    network: string\n    tag: string\n    subnets: SubnetExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano l'insieme di host presenti in un modulo.\n */\nexport class VirtualMachine {\n    virtual_machine: string\n    ports: VirtualMachinePorts[]\n}\n/**\n * Classe che contiene gli attributi che indicano le porte associate ad un host di un modulo.\n */\nexport class VirtualMachinePorts {\n    port: string\n    network: string\n    subnets: SubnetExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano la subnet connessa alla porte dell'host.\n * @see {VirtualMachinePorts}\n */\nexport class SubnetExport {\n    subnet: string;\n}\n\n/**\n * Classe che contiene gli attributi che indica un nodo all'interno dei node_templates.\n * @see {ModuleExport}\n */\nexport class NodeSimpleData {\n    type: NodeTypeExport\n    properties: any | null // future\n    interfaces: any | null // future\n    relationships: RelationshipsExport[]\n}\n\n/**\n * Classe che contiene gli attributi che indicano le relazioni generali.\n */\nexport class RelationshipsExport {\n    type: RelationshipsTypeExport\n    target: string\n}\n/**\n * Classe che contiene gli attributi che indicano i dati della porta all'interno dei node_templates.\n */\nexport class PortSimpleData {\n    type: PortTypeExport\n    relationships: RelationshipsExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano i dati delle network all'interno dei node_templates.\n */\nexport class NetworkSimpleData {\n    type: NetworkTypeExport\n    properties: PropertiesNSD\n}\n/**\n * Classe che contiene gli attributi che indicano le proprietà della network all'interno dei node_templates.\n * @see {NetworkSimpleData}\n */\nexport class PropertiesNSD {\n    openstack_config?: any | null // future\n    use_external_resource?: boolean | null // future\n    resource_id?: any | null // future\n}\n\n/**\n * Classe che contiene gli attributi che indicano i dati delle subnet all'interno dei node_templates.\n */\nexport class SubnetSimpleData {\n    type: SubnetTypeExport\n    relationships: RelationshipsExport[]\n    properties: PropertiesSSD\n}\n/**\n * Classe che contiene gli attributi che indicano le proprietà della subnet all'interno dei node_templates.\n * @see {NetworkSimpleData}\n */\nexport class PropertiesSSD {\n    subnet?: {\n        ip_version: string | number\n        cidr: string\n        enable_dhcp: boolean\n        gateway_ip?: any | null // future\n    }\n    openstack_config?: any | null // future\n    use_external_resource?: boolean | null // future\n    resource_id?: any | null // future\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/NodeSimpleData.html":{"url":"classes/NodeSimpleData.html","title":"class - NodeSimpleData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  NodeSimpleData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsExport/moduleExport.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indica un nodo all'interno dei node_templates.\nSee {ModuleExport}\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                interfaces\n                            \n                            \n                                properties\n                            \n                            \n                                relationships\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        interfaces\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     any | null\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:116\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        properties\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     any | null\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:115\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        relationships\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         RelationshipsExport[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:117\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         NodeTypeExport\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:114\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ModeTypeExport, ModuleTypeExport, NetworkTypeExport, NodeTypeExport, PortTypeExport, RelationshipsTypeExport, SubnetTypeExport, ToscaDefinitionType } from \"./TypeExport\"\n\n\n/**\n * Classe utilizzata per l'export. \n * Contiene le informazioni generali per il modulo che devono esserci nello standard Tosca.\n */\nexport class ModuleExport {\n    tosca_definitions_version: ToscaDefinitionType\n    description: string\n    imports: string[]\n    node_templates: { [name: string]: ModuleSimpleData | NodeSimpleData | PortSimpleData | NetworkSimpleData | SubnetSimpleData }\n    dsl_definition: any | null; //future\n    capabilites: any | null //future\n    outputs: any | null //future\n}\n\n/**\n * Classe che contiene gli attributi che indicano la rappresentazione del modulo per l'export.\n */\nexport class ModuleSimpleData {\n    type: ModuleTypeExport\n    properties: PropertiesMSD\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà del modulo per l'export.\n */\nexport class PropertiesMSD {\n    mode: ModeTypeExport\n    description: string\n    version: string | number\n    constraints: ConstraintsMSD\n    interface_networks: {\n        providers: InterfaceNetworksProvider[]\n        consumers: InterfaceNetworksConsumer[]\n    }\n    virtual_machines: VirtualMachine[]\n}\n/**\n * Classe che contiene gli attributi che indicano i vincoli di connessione del modulo per l'export.\n */\nexport class ConstraintsMSD {\n    interface_constraints: InterfaceConstraints[]\n    module_constraints: ModuleConstraints[]\n    network_constraints: NetworkConstraints[]\n}\n/**\n * Classe che contiene gli attributi che indicano i viconli per le interfacce di connessione del modulo.\n */\nexport class InterfaceConstraints {\n    local_interface: string\n    multiple_mode: boolean = false //future\n    module_name: string\n    compatibility: string = \"1.0\" // future\n    remote_interface: string\n}\n/**\n * Classe che contiene gli attributi che indicano i viconli del modulo.\n */\nexport class ModuleConstraints {\n}\n/**\n * Classe che contiene gli attributi che indicano i viconli dei network del modulo.\n */\nexport class NetworkConstraints {\n}\n/**\n * Classe che contiene gli attributi che indicano le interfacce provider del modulo.\n */\nexport class InterfaceNetworksProvider {\n    interface: string\n    network: string\n    tag: string\n    subnets: SubnetExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano le interfacce consumer del modulo.\n */\nexport class InterfaceNetworksConsumer {\n    interface: string\n    network: string\n    tag: string\n    subnets: SubnetExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano l'insieme di host presenti in un modulo.\n */\nexport class VirtualMachine {\n    virtual_machine: string\n    ports: VirtualMachinePorts[]\n}\n/**\n * Classe che contiene gli attributi che indicano le porte associate ad un host di un modulo.\n */\nexport class VirtualMachinePorts {\n    port: string\n    network: string\n    subnets: SubnetExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano la subnet connessa alla porte dell'host.\n * @see {VirtualMachinePorts}\n */\nexport class SubnetExport {\n    subnet: string;\n}\n\n/**\n * Classe che contiene gli attributi che indica un nodo all'interno dei node_templates.\n * @see {ModuleExport}\n */\nexport class NodeSimpleData {\n    type: NodeTypeExport\n    properties: any | null // future\n    interfaces: any | null // future\n    relationships: RelationshipsExport[]\n}\n\n/**\n * Classe che contiene gli attributi che indicano le relazioni generali.\n */\nexport class RelationshipsExport {\n    type: RelationshipsTypeExport\n    target: string\n}\n/**\n * Classe che contiene gli attributi che indicano i dati della porta all'interno dei node_templates.\n */\nexport class PortSimpleData {\n    type: PortTypeExport\n    relationships: RelationshipsExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano i dati delle network all'interno dei node_templates.\n */\nexport class NetworkSimpleData {\n    type: NetworkTypeExport\n    properties: PropertiesNSD\n}\n/**\n * Classe che contiene gli attributi che indicano le proprietà della network all'interno dei node_templates.\n * @see {NetworkSimpleData}\n */\nexport class PropertiesNSD {\n    openstack_config?: any | null // future\n    use_external_resource?: boolean | null // future\n    resource_id?: any | null // future\n}\n\n/**\n * Classe che contiene gli attributi che indicano i dati delle subnet all'interno dei node_templates.\n */\nexport class SubnetSimpleData {\n    type: SubnetTypeExport\n    relationships: RelationshipsExport[]\n    properties: PropertiesSSD\n}\n/**\n * Classe che contiene gli attributi che indicano le proprietà della subnet all'interno dei node_templates.\n * @see {NetworkSimpleData}\n */\nexport class PropertiesSSD {\n    subnet?: {\n        ip_version: string | number\n        cidr: string\n        enable_dhcp: boolean\n        gateway_ip?: any | null // future\n    }\n    openstack_config?: any | null // future\n    use_external_resource?: boolean | null // future\n    resource_id?: any | null // future\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/NodeTopologyElement.html":{"url":"classes/NodeTopologyElement.html","title":"class - NodeTopologyElement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  NodeTopologyElement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsApplication/applicationModels.ts\n        \n\n\n\n\n            \n                Implementa\n            \n            \n                            TopologyElement\n            \n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                connection\n                            \n                            \n                                elements\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        connection\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ReteConnection[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsApplication/applicationModels.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        elements\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     literal type\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsApplication/applicationModels.ts:72\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ReteHostInfo } from \"src/app/rete-settings/nodes/rete-nodes/host/hostNode\";\nimport { ReteNetworkInfo } from \"src/app/rete-settings/nodes/rete-nodes/network/networkNode\";\nimport { ReteSubnetInfo } from \"src/app/rete-settings/nodes/rete-nodes/subnet/subnetNode\";\nimport { ReteMirroringModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/mirroringModuleInstance/mirroringModuleInstanceNode\";\nimport { ReteTheaterInternalServiceModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/theaterInternalServiceModuleInstance/theaterInternalServiceModuleInstanceNode\";\nimport { ReteTheaterModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/theaterModuleInstance/theaterModuleInstanceNode\";\nimport { FlavorBasicInfo } from \"../modelsDTO/falvorDTO\";\nimport { HostModuleDTO } from \"../modelsDTO/hostDTO\";\nimport { ModuleNetworkInterfaceDTO, ModuleInstancePropertiesDTO, SimpleModuleDTO, TheaterInstancePropertiesDTO, ModuleInstanceDTO, ModuleDTO, SimpleAreaDTO, AreaDTO } from \"../modelsDTO/moduleDTO\";\nimport { TheaterDTO } from \"../modelsDTO/theaterDTO\";\n\n\nexport interface CommonModule {\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n}\n\n\n/**\n * Classe contenente gli attributi utilizzati per le operazioni che coinvolgono i moduli.\n * ps. Questa struttura è prettamente utilizzata nella chiamata relativa al singolo modulo.\n */\nexport class ModuleApplication extends ModuleDTO implements CommonModule {\n    imports: string[] // perchè nell'export yaml è previsto\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n    // serve per validare il json risultante dal parsing del theaterApplication\n    validateObject?: string = \"module\";\n}\n// PER IMPLEMENTAZIONI FUTURE, PER COERENZA, PRENDERE DIRETTAMENTE I SINGOLI NODI DALLA CHIAMATA ESCLUSIVA E NON DA QUELLA CHE RESTITUISCE TUTTI I TEATRI\n/**\n * Classe contenente gli attributi utilizzati per le operazioni che coinvolgono i moduli.\n * ps. Questa struttura è prettamente utilizzata nella chiamata che prende tutti i moduli del teatro.\n */\nexport class SimpleModuleApplication extends SimpleModuleDTO implements CommonModule {\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n}\n\n\nexport class ReteConnection {\n    from: string;\n    port_src: string;\n    to: string;\n    port_dst: string;\n}\n\nexport interface TopologyList {\n    rete: any;\n    topology?: TopologyElement\n}\nexport class TopologyElement {\n    elements: { [name: string]: any };\n    connection: ReteConnection[]\n}\n\n// apptype module topology\n\nexport class NodeTopologyElement implements TopologyElement {\n    elements: { [hostName: string]: ReteHostInfo | ReteSubnetInfo | ReteNetworkInfo };\n    connection: ReteConnection[]\n}\n\nexport interface ModuleTopology extends TopologyList {\n    rete: ReteMirroringModuleInstanceInfo | ReteTheaterInternalServiceModuleInstanceInfo | ReteTheaterModuleInstanceInfo\n    topology: NodeTopologyElement;\n}\n\nexport class ModuleInstance extends ModuleInstanceDTO implements ModuleTopology {\n    // moduleTopology data\n    rete: ReteTheaterModuleInstanceInfo | ReteTheaterInternalServiceModuleInstanceInfo | ReteMirroringModuleInstanceInfo;\n    topology: NodeTopologyElement;\n    // other data\n    moduleInfo: SimpleModuleApplication\n}\n\n// apptype theater theater\n\nexport interface TheaterTopology extends TopologyElement {\n    elements: { [hostName: string]: ModuleInstance };\n    connection: ReteConnection[];\n}\n\nexport class TheaterApplication extends TheaterDTO implements TheaterTopology {\n    // theaterTopology data\n    elements: { [hostName: string]: ModuleInstance; };\n    connection: ReteConnection[];\n    // other data\n    properties: TheaterInstancePropertiesDTO;\n    topology: TheaterTopology;\n    // serve per validare il json risultante dal parsing del theaterApplication\n    validateObject?: string = \"theater\";\n}\n\nexport class AreaApplication extends AreaDTO {\n    color?: string;\n}\nexport class AreaColorDTO extends SimpleAreaDTO {\n    color: string;\n}\n\n\nexport class FlavorApplication extends FlavorBasicInfo {\n    flavorName: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"components/OffcanvasComponent.html":{"url":"components/OffcanvasComponent.html","title":"component - OffcanvasComponent","body":"\n                   \n\n\n\n\n\n  Componenti\n  \n  OffcanvasComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/offcanvas/offcanvas.component.ts\n\n\n\n    \n        Descrizione\n    \n    \n        Componente utilizzata per il rendering degli offcanvas a contenuto generico.\nSupporta operazioni di full-screen e mid-screen con posizioni: destra, sinistra, sotto, sopra\n\n    \n\n\n\n\n\n    Metadati\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-offcanvas\n            \n\n            \n                styleUrls\n                ./offcanvas.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./offcanvas.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _show\n                            \n                            \n                                    Protected\n                                closeIconClass\n                            \n                            \n                                    Protected\n                                toOpenIconClass\n                            \n                            \n                                    Protected\n                                toReduceIconClass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                closeOffcanvas\n                            \n                            \n                                reduce\n                            \n                        \n                    \n                \n\n                \n                    \n                        Input\n                    \n                \n                \n                    \n                        \n                            \n                                alt_title\n                            \n                            \n                                element\n                            \n                            \n                                isfull\n                            \n                            \n                                position\n                            \n                            \n                                show\n                            \n                            \n                                title\n                            \n                            \n                                title_template\n                            \n                        \n                    \n                \n\n                \n                    \n                        Output\n                    \n                \n                \n                    \n                        \n                            \n                                showChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessori\n                        \n                    \n                    \n                        \n                            \n                                \n                                    show\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Costruttore\n        \n            \n                \n                    \nconstructor(cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Definito in src/app/components/offcanvas/offcanvas.component.ts:76\n                            \n                        \n\n                \n                    \n                            Constructor componente OffcavanvasComponent\n\n                            \n                                    Parametri :\n                                    \n                                        \n                                            \n                                                Nome\n                                                    Tipo\n                                                Opzionale\n                                            \n                                        \n                                        \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Input\n        \n            \n                \n                    \n                        \n                        alt_title\n                    \n                \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                    Definito in src/app/components/offcanvas/offcanvas.component.ts:43\n                            \n                        \n                \n                    \n                        Variabile in input che rappresente un titolo alternativo (se presente).\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        element\n                    \n                \n                \n                    \n                        Tipo :     TemplateRef\n\n                    \n                \n                        \n                            \n                                    Definito in src/app/components/offcanvas/offcanvas.component.ts:54\n                            \n                        \n                \n                    \n                        Variabile in input che rappresenta il Blob da visualizzare come contenuto nell'offcanvas\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isfull\n                    \n                \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                \n                    \n                        Valore predefinito : false\n                    \n                \n                        \n                            \n                                    Definito in src/app/components/offcanvas/offcanvas.component.ts:71\n                            \n                        \n                \n                    \n                        Variabile che rappresenta lo stato di visualizzazione full-screen / mid-screen\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        position\n                    \n                \n                \n                    \n                        Tipo :     \"end\" | \"start\" | \"top\" | \"bottom\"\n\n                    \n                \n                        \n                            \n                                    Definito in src/app/components/offcanvas/offcanvas.component.ts:64\n                            \n                        \n                \n                    \n                        Variabile che indica la posizione dell'offcanvas.\nCi sono quattro possibilità:\n @type {\"end\"} dx\n @type {\"start\"} sx\n @type {\"top\"} sopra\n @type {\"bottom\"} sotto\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        show\n                    \n                \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                        \n                            \n                                    Definito in src/app/components/offcanvas/offcanvas.component.ts:25\n                            \n                        \n                \n                    \n                        Variabile (set) input che rappresenta lo stato dell'hide-or-show dell'offcanvas\nQuando esegue l'update del valore show. Lo emette anche in output.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                    Definito in src/app/components/offcanvas/offcanvas.component.ts:38\n                            \n                        \n                \n                    \n                        Variabile in input che rappresenta il titolo.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        title_template\n                    \n                \n                \n                    \n                        Tipo :     TemplateRef\n\n                    \n                \n                        \n                            \n                                    Definito in src/app/components/offcanvas/offcanvas.component.ts:48\n                            \n                        \n                \n                    \n                        Variabile in input, messo, se presente, al posto del titolo.\n\n                    \n                \n            \n        \n\n    \n    Output\n        \n            \n                \n                    \n                        \n                        showChange\n                    \n                \n                \n                    \n                        Tipo :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Definito in src/app/components/offcanvas/offcanvas.component.ts:32\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        closeOffcanvas\n                        \n                    \n                \n            \n            \n                \ncloseOffcanvas()\n                \n            \n\n\n            \n                \n                    Definito in src/app/components/offcanvas/offcanvas.component.ts:91\n                \n            \n\n\n            \n                \n                    Funzione richiamata per la chiusura dell'offcanvas\nSee {show}\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reduce\n                        \n                    \n                \n            \n            \n                \nreduce()\n                \n            \n\n\n            \n                \n                    Definito in src/app/components/offcanvas/offcanvas.component.ts:100\n                \n            \n\n\n            \n                \n                    funzione richiamata per lo stato full/mid-screen dell'offcanvas\nSee {isfull}\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _show\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/offcanvas/offcanvas.component.ts:19\n                        \n                    \n\n            \n                \n                    Variabile di appoggio per lo stato \"hide-or-show\" dell'offcanvas.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        closeIconClass\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                \n                    \n                        Valore predefinito : \"bi bi-x-lg\"\n                    \n                \n                    \n                        \n                                Definito in src/app/components/offcanvas/offcanvas.component.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        toOpenIconClass\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                \n                    \n                        Valore predefinito : \"bi bi-square\"\n                    \n                \n                    \n                        \n                                Definito in src/app/components/offcanvas/offcanvas.component.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        toReduceIconClass\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                \n                    \n                        Valore predefinito : \"bi bi-box-arrow-in-down-right\"\n                    \n                \n                    \n                        \n                                Definito in src/app/components/offcanvas/offcanvas.component.ts:74\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessori\n    \n        \n            \n                \n                    \n                        \n                        show\n                    \n                \n\n                \n                    \n                        getshow()\n                    \n                \n                            \n                                \n                                    Definito in src/app/components/offcanvas/offcanvas.component.ts:29\n                                \n                            \n\n                \n                    \n                        setshow(val: boolean)\n                    \n                \n                            \n                                \n                                    Definito in src/app/components/offcanvas/offcanvas.component.ts:25\n                                \n                            \n                    \n                        \n                                Variabile (set) input che rappresenta lo stato dell'hide-or-show dell'offcanvas\nQuando esegue l'update del valore show. Lo emette anche in output.\n\n\n                                \n                                        Parametri :\n                                        \n                                            \n                                                \n                                                    Nome\n                                                        Tipo\n                                                    Opzionale\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { ChangeDetectorRef, Component, EventEmitter, Input, Output, TemplateRef } from '@angular/core';\n\n\n/**\n * Componente utilizzata per il rendering degli offcanvas a contenuto generico.\n * Supporta operazioni di full-screen e mid-screen con posizioni: destra, sinistra, sotto, sopra \n */\n@Component({\n  selector: 'app-offcanvas',\n  templateUrl: './offcanvas.component.html',\n  styleUrls: ['./offcanvas.component.sass'],\n  // changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class OffcanvasComponent {\n\n  /**\n   * Variabile di appoggio per lo stato \"hide-or-show\" dell'offcanvas.\n   */\n  protected _show: boolean;\n  /**\n   * Variabile (set) input che rappresenta lo stato dell'hide-or-show dell'offcanvas\n   * Quando esegue l'update del valore show. Lo emette anche in output.\n   */\n  @Input()\n  set show(val: boolean) {\n    this.showChange.emit(val);\n    this._show = val;\n  }\n  get show() {\n    return this._show;\n  }\n  @Output() showChange: EventEmitter = new EventEmitter();\n\n  /**\n   * Variabile in input che rappresenta il titolo.\n   * @type {string}\n   */\n  @Input() title: string;\n  /**\n   * Variabile in input che rappresente un titolo alternativo (se presente).\n   * @type {string}\n   */\n  @Input() alt_title?: string;\n  /**\n   * Variabile in input, messo, se presente, al posto del titolo.\n   * @type {TemplateRef}\n   */\n  @Input() title_template?: TemplateRef;\n\n  /**\n   * Variabile in input che rappresenta il Blob da visualizzare come contenuto nell'offcanvas\n   * @type {TemplateRef}\n   */\n  @Input() element: TemplateRef;\n\n  /**\n   * Variabile che indica la posizione dell'offcanvas.\n   * Ci sono quattro possibilità:\n   *  @type {\"end\"} dx\n   *  @type {\"start\"} sx\n   *  @type {\"top\"} sopra\n   *  @type {\"bottom\"} sotto\n   */\n  @Input() position: \"end\" | \"start\" | \"top\" | \"bottom\";\n\n  /**\n   * Variabile che rappresenta lo stato di visualizzazione full-screen / mid-screen\n   * @type {boolean}\n   * @default {false}\n   */\n  @Input() isfull?: boolean = false;\n  \n  // variabili classe icone\n  protected toReduceIconClass: string = \"bi bi-box-arrow-in-down-right\";\n  protected toOpenIconClass: string = \"bi bi-square\";\n  protected closeIconClass: string = \"bi bi-x-lg\";\n\n\n  /**\n   * Constructor componente OffcavanvasComponent\n   * @param cdr \n   */\n  constructor(private cdr: ChangeDetectorRef) {\n  }\n\n\n  /**\n   * Funzione richiamata per la chiusura dell'offcanvas\n   * @see {show}\n   */\n  closeOffcanvas() {\n    this.show = false;\n    this.cdr.detectChanges();\n  }\n\n  /**\n   * funzione richiamata per lo stato full/mid-screen dell'offcanvas\n   * @see {isfull}\n   */\n  reduce() {\n    this.isfull = !this.isfull;\n    this.cdr.detectChanges();\n  }\n\n}\n\n    \n\n    \n        \n\n    \n    \n        \n            {{ title }}\n        \n        \n            {{ alt_title }}\n        \n        \n        \n        \n\n        \n            \n                \n                    \n                \n                 \n                \n            \n        \n    \n\n    \n    \n\n        \n        \n\n    \n\n    \n\n    \n                \n                    ./offcanvas.component.sass\n                \n                $background-color: #2a2f34\n$text-color: white\n$cite-color: #b3b3b3\n$shadow-color: rgba(0,0,0,.53)!important\n\n$text-tab-selected: white\n$text-tab-unselected: #93a1ba\n\n\n.side-wrapper-opt\n    background-color: $background-color\n    /* padding-right: 1.5em */\n\n.my-offcanvas\n    opacity: 99%\n    // min-width: 50%\n    visibility: visible\n    visibility: visible\n    opacity: 99%\n    box-shadow: 0 .5rem 1rem $shadow-color!important\n\n.my-offcanvas-title\n    overflow: hidden\n    text-overflow: ellipsis\n\n.my-offcanvas-body\n    width: 100%\n    height: 100% !important\n    padding: 0\n\np,h4,h5\n    color: $text-color\n\ncite\n    color: $cite-color\n\n.text-tab-selected\n    // font-size: 1.5em\n    color: $text-tab-selected !important\n    font-weight: bold\n\n.text-tab-unselected\n    // fonr-size: 1em\n    color: $text-tab-unselected !important\n\n@media (max-width: 768px) \n    #offcanvasInfo\n        min-width: 50%!important\n    \n    \n\n    \n        \n        \n            \n                Legenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento html con direttive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            {{ title }}                            {{ alt_title }}                                                                                                                                                                                             '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ComposerComponent', 'selector': 'app-composer'},{'name': 'ControlTemplate', 'selector': ''},{'name': 'DataInputComponent', 'selector': 'app-data-input'},{'name': 'DataInputV2Component', 'selector': 'app-data-input-v2'},{'name': 'DataItemComponent', 'selector': 'app-window-item'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HostComponent', 'selector': ''},{'name': 'HowToUseComponent', 'selector': 'app-how-to-use'},{'name': 'MirroringModuleInstanceComponent', 'selector': ''},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavbarElementComponent', 'selector': 'app-navbar-element'},{'name': 'NetworkComponent', 'selector': ''},{'name': 'OffcanvasComponent', 'selector': 'app-offcanvas'},{'name': 'ReteModuleComposerComponent', 'selector': 'app-rete-module-composer'},{'name': 'ReteModuleVisualizerComponent', 'selector': 'app-rete-module-visualizer'},{'name': 'ReteTheaterComposerComponent', 'selector': 'app-rete-theater-composer'},{'name': 'ReteTheaterVisualizerComponent', 'selector': 'app-rete-theater-visualizer'},{'name': 'SubnetComponent', 'selector': ''},{'name': 'TabnavComponent', 'selector': 'app-tabnav'},{'name': 'TheaterInternalServiceModuleInstanceComponent', 'selector': ''},{'name': 'TheaterModuleInstanceComponent', 'selector': ''},{'name': 'UnderbarComponent', 'selector': 'app-underbar'},{'name': 'VisualizerComponent', 'selector': 'app-displayer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OffcanvasComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/PageableDTO.html":{"url":"classes/PageableDTO.html","title":"class - PageableDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  PageableDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsDTO/elementDTO.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano il tipo di paging ritornato dalle api.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                offset\n                            \n                            \n                                paged\n                            \n                            \n                                pageNumber\n                            \n                            \n                                pageSize\n                            \n                            \n                                sort\n                            \n                            \n                                unpaged\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        offset\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/elementDTO.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        paged\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/elementDTO.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pageNumber\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/elementDTO.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pageSize\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/elementDTO.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sort\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         SortDTO\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/elementDTO.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unpaged\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/elementDTO.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class SortDTO {\n    empty: boolean\n    sorted: boolean\n    unsorted: boolean\n}\n/**\n * Classe che contiene gli attributi che indicano il tipo di paging ritornato dalle api.\n */\nexport class PageableDTO {\n    offset: string | number\n    pageNumber: string | number\n    pageSize: string | number\n    paged: boolean\n    sort: SortDTO\n    unpaged: boolean\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/ParseDataForTheaterVisualizer.html":{"url":"classes/ParseDataForTheaterVisualizer.html","title":"class - ParseDataForTheaterVisualizer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  ParseDataForTheaterVisualizer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/application/parse/parseDataForTheaterVisualizer.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Elemento che ha lo scopo di eseguire il fetching ed il parsing dei dati per la visualizzazione del teatro.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                fixTheaterName\n                            \n                            \n                                get_and_remove_theater_properties_from_blueprint\n                            \n                            \n                                getModuleConnection\n                            \n                            \n                                    Async\n                                getModuleDict\n                            \n                            \n                                    Async\n                                getModulesDetails\n                            \n                            \n                                    Async\n                                getModulesInterfaces\n                            \n                            \n                                    Async\n                                getModulesNodes\n                            \n                            \n                                getModulesTopology\n                            \n                            \n                                initTheaterAfterFetch\n                            \n                            \n                                parseModuleInstance\n                            \n                            \n                                    Async\n                                parseModulesFromTheater\n                            \n                            \n                                    Async\n                                parseTheater\n                            \n                            \n                                    Async\n                                parseTheaterForTheaterVisualizer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Costruttore\n        \n            \n                \n                    \nconstructor(theaterService: TheaterService, moduleService: ModuleService)\n                    \n                \n                        \n                            \n                                Definito in src/app/services/application/parse/parseDataForTheaterVisualizer.ts:18\n                            \n                        \n\n                \n                    \n                            Costruttore componente.\n\n                            \n                                    Parametri :\n                                    \n                                        \n                                            \n                                                Nome\n                                                    Tipo\n                                                Opzionale\n                                            \n                                        \n                                        \n                                                \n                                                        theaterService\n                                                  \n                                                        \n                                                                        TheaterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        moduleService\n                                                  \n                                                        \n                                                                        ModuleService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        fixTheaterName\n                        \n                    \n                \n            \n            \n                \nfixTheaterName(rowTheater: TheaterDTO)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/parse/parseDataForTheaterVisualizer.ts:112\n                \n            \n\n\n            \n                \n                    Funzione che ha come scopo la fix del nome del teatro nel caso diverga dalla sua rappresentazione nel node_templates.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    rowTheater\n                                    \n                                                TheaterDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get_and_remove_theater_properties_from_blueprint\n                        \n                    \n                \n            \n            \n                \nget_and_remove_theater_properties_from_blueprint(rowTheater: TheaterDTO)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/parse/parseDataForTheaterVisualizer.ts:135\n                \n            \n\n\n            \n                \n                    Funzione che serve ad esportare le proprietà del modulo dalla parte dei node_templates all'oggetto generale.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    rowTheater\n                                    \n                                                TheaterDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TheaterInstancePropertiesDTO\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getModuleConnection\n                        \n                    \n                \n            \n            \n                \ngetModuleConnection(theater: TheaterApplication)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/parse/parseDataForTheaterVisualizer.ts:299\n                \n            \n\n\n            \n                \n                    Funzione che ha lo scopo di valorizzare le connessioni dei moduli\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    theater\n                                    \n                                                TheaterApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ReteConnection[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getModuleDict\n                        \n                    \n                \n            \n            \n                \n                    \n                    getModuleDict(modules: SimpleModuleDTO[])\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/parse/parseDataForTheaterVisualizer.ts:174\n                \n            \n\n\n            \n                \n                    Funzione che prende in input i dati dei moduli del teatro e le ritorna parserizzati e sottoforma organizzata di dizionario.\nSee {getModulesDetails}\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    modules\n                                    \n                                            SimpleModuleDTO[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getModulesDetails\n                        \n                    \n                \n            \n            \n                \n                    \n                    getModulesDetails(modules: SimpleModuleDTO[])\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/parse/parseDataForTheaterVisualizer.ts:193\n                \n            \n\n\n            \n                \n                    Funzione che prende i moduli reperiti dal server e li parserizza e \"arricchisce\" con le informazione dei nodi e interfacce.\nSee {getModulesNodes}\nSee {getModulesInterfaces}\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    modules\n                                    \n                                            SimpleModuleDTO[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getModulesInterfaces\n                        \n                    \n                \n            \n            \n                \n                    \n                    getModulesInterfaces(modules: SimpleModuleDTO[])\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/parse/parseDataForTheaterVisualizer.ts:244\n                \n            \n\n\n            \n                \n                    Funzione che esegue il fetch delle interfacce di un modulo di un teatro.\nSee {moduleService}\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    modules\n                                    \n                                            SimpleModuleDTO[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getModulesNodes\n                        \n                    \n                \n            \n            \n                \n                    \n                    getModulesNodes(modules: SimpleModuleDTO[])\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/parse/parseDataForTheaterVisualizer.ts:219\n                \n            \n\n\n            \n                \n                    Funzione che esegue il fetch degli host di un modulo di un teatro.\nSee {moduleService}\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    modules\n                                    \n                                            SimpleModuleDTO[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getModulesTopology\n                        \n                    \n                \n            \n            \n                \ngetModulesTopology(modulesInfo: literal type)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/parse/parseDataForTheaterVisualizer.ts:331\n                \n            \n\n\n            \n                \n                    Funzione che ha lo scopo di controllare ed inserire la topologia dei nodi di ogni moduli del teatro.\nQuesta funzione inizializza già i nodi da poter essere inseriti nel canvas.\nSee {createHost}\nSee {createSubnet}\nSee {createNetwork}\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    modulesInfo\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initTheaterAfterFetch\n                        \n                    \n                \n            \n            \n                \ninitTheaterAfterFetch(rowTheater: TheaterDTO)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/parse/parseDataForTheaterVisualizer.ts:91\n                \n            \n\n\n            \n                \n                    Funzione che inizializza gli attributi del teatro per l'applicazione.\nSee {fixTheaterName}\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    rowTheater\n                                    \n                                                TheaterDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TheaterApplication\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        parseModuleInstance\n                        \n                    \n                \n            \n            \n                \nparseModuleInstance(theater: TheaterApplication, modules: literal type)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/parse/parseDataForTheaterVisualizer.ts:269\n                \n            \n\n\n            \n                \n                    Funzione che si occupa di collegare le istanze dei moduli del teatro con i dettagli dei singoli moduli (root).\nQuesta funzione produce direttamente i dati del modulo (sottoforma di nodo) da poter essere inserito nel canvas.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    theater\n                                    \n                                                TheaterApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    modules\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        parseModulesFromTheater\n                        \n                    \n                \n            \n            \n                \n                    \n                    parseModulesFromTheater(theaterUUID: string | number)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/parse/parseDataForTheaterVisualizer.ts:156\n                \n            \n\n\n            \n                \n                    Funzione che si occupa di eseguire il fetching dei moduli appartenenti al teatro e le ritorna come dizionario di modulo-oggetto.\nSi occupa anche di organizzare la topologia dei moduli del teatro.\nSee {theaterService}\nSee {getModuleDict}\nSee {getModulesTopology}\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    theaterUUID\n                                    \n                                            string | number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        parseTheater\n                        \n                    \n                \n            \n            \n                \n                    \n                    parseTheater(id: string | number)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/parse/parseDataForTheaterVisualizer.ts:75\n                \n            \n\n\n            \n                \n                    Funzione che ritorna i dati a seguito della fetch con il server.\nSee {theaterService}\nSee {initTheaterAfterFetch}\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            string | number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        parseTheaterForTheaterVisualizer\n                        \n                    \n                \n            \n            \n                \n                    \n                    parseTheaterForTheaterVisualizer(id: string | number)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/parse/parseDataForTheaterVisualizer.ts:44\n                \n            \n\n\n            \n                \n                    Funzione che viene richiamata per fornire il teatro pareserizzato.\nQuesta funzione si avvale di tutte quei metodi che permettono di restituire e fixare un output adatto all'applicazione.\nSee {parseTheater}\nSee {parseModulesFromTheater}\nSee {parseModuleInstance}\nSee {getModuleConnection}\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            string | number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { TheaterService } from '../../api/theater.service';\nimport { ModuleService } from '../../api/module.service';\nimport { TheaterDTO } from '../../modelsDTO/theaterDTO';\nimport { ElementIntoTheaterDTO, ModuleInstanceDTO, ModuleNetworkInterfaceDTO, SimpleModuleDTO, TheaterInstancePropertiesDTO } from '../../modelsDTO/moduleDTO';\nimport { SimpleModuleApplication, ModuleInstance, TheaterApplication, ReteConnection } from '../../modelsApplication/applicationModels';\nimport { HostModuleDTO, HostPortModuleDTO } from '../../modelsDTO/hostDTO';\nimport { SubnetDTO } from '../../modelsDTO/networkDTO';\nimport { ReteHostInfo } from 'src/app/rete-settings/nodes/rete-nodes/host/hostNode';\nimport { ReteNetworkInfo } from 'src/app/rete-settings/nodes/rete-nodes/network/networkNode';\nimport { ReteSubnetInfo } from 'src/app/rete-settings/nodes/rete-nodes/subnet/subnetNode';\nimport { StaticValue, TheaterType } from 'src/app/models/appType';\nimport { createHost, createSubnet, createNetwork, createModuleNode } from './parseCommonElement';\n\n\n/**\n * Elemento che ha lo scopo di eseguire il fetching ed il parsing dei dati per la visualizzazione del teatro.\n */\nexport class ParseDataForTheaterVisualizer {\n\n    /**\n     * Costruttore componente.\n     * @param theaterService \n     * @param moduleService \n     */\n    constructor(\n        private theaterService: TheaterService,\n        private moduleService: ModuleService,\n    ) {\n    }\n\n\n\n\n    /**\n     * Funzione che viene richiamata per fornire il teatro pareserizzato.\n     * Questa funzione si avvale di tutte quei metodi che permettono di restituire e fixare un output adatto all'applicazione.\n     * @param id \n     * @returns {Promise}\n     * @see {parseTheater}\n     * @see {parseModulesFromTheater}\n     * @see {parseModuleInstance}\n     * @see {getModuleConnection}\n     */\n    async parseTheaterForTheaterVisualizer(id: string | number): Promise {\n\n        var theaterDTO: TheaterDTO;\n        var theater: TheaterApplication;\n        [theaterDTO, theater] = await this.parseTheater(id as string);\n\n        var modules: { [name: string]: SimpleModuleApplication } = await this.parseModulesFromTheater(theater.uuid);\n\n        // connect modules to instance-module into theater\n        var moduleInstances: { [name: string]: ModuleInstance }\n            = await this.parseModuleInstance(theater, modules);\n\n        //assign theater topology\n        theater.topology = {\n            elements: moduleInstances,\n            connection: this.getModuleConnection(theater)\n        }\n\n        return theater;\n    }\n\n\n\n\n    /**\n     * Funzione che ritorna i dati a seguito della fetch con il server.\n     * @param id \n     * @returns {Promise}\n     * @see {theaterService}\n     * @see {initTheaterAfterFetch}\n     */\n    async parseTheater(id: string | number): Promise {\n        //normalizzazione & get theater\n        var rowTheater: TheaterDTO = await this.theaterService.getTheaterInfoByID(id);\n        let theater: TheaterApplication = await this.initTheaterAfterFetch(rowTheater);\n        return [rowTheater, theater];\n    }\n\n\n\n\n    /**\n     * Funzione che inizializza gli attributi del teatro per l'applicazione.\n     * @param rowTheater \n     * @returns {TheaterApplication}\n     * @see {fixTheaterName}\n     */\n    initTheaterAfterFetch(rowTheater: TheaterDTO): TheaterApplication {\n        this.fixTheaterName(rowTheater);\n        let theaterProperties: TheaterInstancePropertiesDTO = this.get_and_remove_theater_properties_from_blueprint(rowTheater);\n        let theater: TheaterApplication = {\n            ...rowTheater,\n            properties: theaterProperties,\n            elements: {},\n            connection: [],\n            topology: undefined\n        };\n        return theater;\n    }\n\n\n\n\n\n    /**\n     * Funzione che ha come scopo la fix del nome del teatro nel caso diverga dalla sua rappresentazione nel node_templates.\n     * @param rowTheater \n     */\n    fixTheaterName(rowTheater: TheaterDTO) {\n        // @check controllo incoerenza nome teatro con quello riporato in node_templates -> si preferisce quello proveniente dal blueprint\n        if (!rowTheater.blueprintFile.node_templates[rowTheater.name]) {\n            Object.entries(rowTheater.blueprintFile.node_templates).map(([key, value]) => {\n                let moduleIntoTheater: ElementIntoTheaterDTO = value as ElementIntoTheaterDTO\n                if (moduleIntoTheater.type.toLowerCase().includes(TheaterType.theater.toLowerCase())) {\n                    rowTheater.name = key;\n                    return;\n                }\n            });\n            console.warn(\"Theater name doesn't match\");\n        }\n    }\n\n\n\n\n\n    /**\n     * Funzione che serve ad esportare le proprietà del modulo dalla parte dei node_templates all'oggetto generale.\n     * @param rowTheater \n     * @returns {TheaterInstancePropertiesDTO}\n     */\n    get_and_remove_theater_properties_from_blueprint(rowTheater: TheaterDTO): TheaterInstancePropertiesDTO {\n        // esporta e rimuove le proprietà situate in node_modules\n        let moduleIntoTheater: ElementIntoTheaterDTO = rowTheater.blueprintFile.node_templates[rowTheater.name];\n        let theaterProperties: TheaterInstancePropertiesDTO = moduleIntoTheater.properties as TheaterInstancePropertiesDTO;\n        delete rowTheater.blueprintFile.node_templates[rowTheater.name];\n        return theaterProperties;\n    }\n\n\n\n\n\n    /**\n     * Funzione che si occupa di eseguire il fetching dei moduli appartenenti al teatro e le ritorna come dizionario di modulo-oggetto.\n     * Si occupa anche di organizzare la topologia dei moduli del teatro.\n     * @param theaterUUID \n     * @returns {Promise}\n     * @see {theaterService}\n     * @see {getModuleDict}\n     * @see {getModulesTopology}\n     */\n    async parseModulesFromTheater(theaterUUID: string | number): Promise {\n        //normalizzazione & get modules -> Assign Map\n        let rowModules: SimpleModuleDTO[] = await this.theaterService.getTheaterModulesByUUID(theaterUUID);\n        let modules: { [name: string]: SimpleModuleApplication } = await this.getModuleDict(rowModules);\n        this.getModulesTopology(modules);\n        return modules;\n    }\n\n\n\n\n\n    /**\n     * Funzione che prende in input i dati dei moduli del teatro e le ritorna parserizzati e sottoforma organizzata di dizionario.\n     * @param modules \n     * @returns { Promise}\n     * @see {getModulesDetails}\n     */\n    async getModuleDict(modules: SimpleModuleDTO[]): Promise {\n        let moduleDict: { [name: string]: SimpleModuleApplication } = {};\n        let modulesApplication: SimpleModuleApplication[] = await this.getModulesDetails(modules);\n        Object.entries(modulesApplication).map(async ([key, value]) => {\n            moduleDict[value.name] = value;\n        });\n        return moduleDict;\n    }\n\n\n\n\n    /**\n     * Funzione che prende i moduli reperiti dal server e li parserizza e \"arricchisce\" con le informazione dei nodi e interfacce.\n     * @param modules \n     * @returns {Promise}\n     * @see {getModulesNodes}\n     * @see {getModulesInterfaces}\n     */\n    async getModulesDetails(modules: SimpleModuleDTO[]): Promise {\n        let h: { [key: string]: HostModuleDTO[] } = await this.getModulesNodes(modules);\n        let i: { [key: string]: ModuleNetworkInterfaceDTO[] } = await this.getModulesInterfaces(modules);\n        let moduleInfo: SimpleModuleApplication[] = [];\n        await Promise.all(\n            Object.entries(modules).map(async ([key, value]) => {\n                moduleInfo[key] = {\n                    ...value,\n                    hosts: h[key],\n                    interfaces: i[key],\n                }\n            })\n        )\n        return moduleInfo;\n    }\n\n\n\n\n\n    /**\n     * Funzione che esegue il fetch degli host di un modulo di un teatro.\n     * @param modules \n     * @returns {Promise}\n     * @see {moduleService}\n     */\n    async getModulesNodes(modules: SimpleModuleDTO[]): Promise {\n        let h: { [key: string]: HostModuleDTO[] } = {};\n        await Promise.all(\n            Object.entries(modules).map(async ([key, value]) => {\n                let simpleModuleDTO: SimpleModuleDTO = value as SimpleModuleDTO;\n                try {\n                    h[key] = await this.moduleService.getModuleHostByTheaterUUID(simpleModuleDTO.uuid);\n                } catch (e) {\n                    console.error(e);\n                }\n            })\n        )\n        return h;\n    }\n\n\n\n\n\n    /**\n     * Funzione che esegue il fetch delle interfacce di un modulo di un teatro.\n     * @param modules \n     * @returns {Promise}\n     * @see {moduleService}\n     */\n    async getModulesInterfaces(modules: SimpleModuleDTO[]): Promise {\n        let i: { [key: string]: ModuleNetworkInterfaceDTO[] } = {};\n        await Promise.all(\n            Object.entries(modules).map(async ([key, value]) => {\n                let simpleModuleDTO: SimpleModuleDTO = value as SimpleModuleDTO;\n                try {\n                    i[key] = await this.moduleService.getModuleInterfacesByModuleID(simpleModuleDTO.id);\n                } catch (e) {\n                    console.error(e);\n                }\n            })\n        )\n        return i;\n    }\n\n\n\n\n    /**\n     * Funzione che si occupa di collegare le istanze dei moduli del teatro con i dettagli dei singoli moduli (root).\n     * Questa funzione produce direttamente i dati del modulo (sottoforma di nodo) da poter essere inserito nel canvas.\n     * @param theater \n     * @param modules \n     * @returns {{ [name: string]: ModuleInstance }}\n     */\n    parseModuleInstance(theater: TheaterApplication, modules: { [name: string]: SimpleModuleApplication }): { [name: string]: ModuleInstance } {\n        var elements: { [name: string]: ModuleInstance } = {};\n        Object.entries(theater.blueprintFile.node_templates).map(async ([key, value]) => {\n            let moduleInstanceName: string = key;\n            let moduleInstance: ModuleInstanceDTO = value as ModuleInstanceDTO;\n            let smr = modules[moduleInstance.properties.module]\n            // @check -> if module instance has connection with module root & name is correct\n            if (!smr) {\n                for (let key in modules) {\n                    if (key.toLowerCase().includes(moduleInstance.properties.module.toLowerCase())) {\n                        smr = modules[key]; //modulo più probabile\n                    }\n                }\n                console.warn(\"Root module not exists or invalid.\\n Declared into instance: \", moduleInstance.properties.module, \".\\nLinked to\", smr.name, \"into Root module list\")\n            }\n            let newModule: ModuleInstance = createModuleNode(moduleInstanceName, moduleInstance, smr);\n            elements[moduleInstanceName] = newModule;\n        });\n        return elements;\n    }\n\n\n\n\n\n    /**\n     * Funzione che ha lo scopo di valorizzare le connessioni dei moduli\n     * @param theater \n     * @returns {ReteConnection[]}\n     */\n    getModuleConnection(theater: TheaterApplication): ReteConnection[] {\n        var connections_list: ReteConnection[] = [];\n        Object.entries(theater.blueprintFile.node_templates).map(([key, value]) => {\n            let module_name: string = key;\n            let module_content: ModuleInstanceDTO = value as ModuleInstanceDTO;\n            if (module_content.properties.consumer_interfaces_link) {\n                Object.entries(module_content.properties.consumer_interfaces_link).map(([key, value]) => {\n                    connections_list.push(\n                        {\n                            from: module_name,\n                            port_src: value.local_interface,\n                            to: value.module_instance,\n                            port_dst: value.remote_interface\n                        }\n                    );\n                });\n            }\n        });\n        return connections_list;\n    }\n\n\n\n\n    /**\n     * Funzione che ha lo scopo di controllare ed inserire la topologia dei nodi di ogni moduli del teatro.\n     * Questa funzione inizializza già i nodi da poter essere inseriti nel canvas.\n     * @param modulesInfo \n     * @see {createHost}\n     * @see {createSubnet}\n     * @see {createNetwork}\n     */\n    getModulesTopology(modulesInfo: { [name: string]: SimpleModuleApplication }) {\n        Object.entries(modulesInfo).map(([key, value]) => {\n            let moduleInfo: SimpleModuleApplication = value;\n            var occourence: Map = new Map();\n            var connections_list: ReteConnection[] = [];\n            var elements: { [name: string]: ReteHostInfo | ReteSubnetInfo | ReteNetworkInfo } = {};\n            var hn: number = 0, sn: number = 0, nn: number = 0;\n            moduleInfo.hosts.forEach(\n                (node: HostModuleDTO) => {\n                    let host_name: string = node.name;\n                    elements[host_name] = createHost(host_name, node);\n                    hn++; // counter\n                    node.ports.forEach(\n                        (port: HostPortModuleDTO) => {\n                            let port_name: string = port.name;\n                            port.subnets.forEach(\n                                (subnet: SubnetDTO) => { // controllo subnet & network\n                                    let subnet_name: string = subnet.name;\n                                    let network_name: string = subnet.network.name;\n                                    if (!occourence.get(subnet_name)) { // se non è stata considerata la subnet -> add\n                                        elements[subnet_name] = createSubnet(subnet_name, subnet)\n                                        occourence.set(subnet_name, subnet_name) // segno l'occorrenza\n                                        sn++; // counter\n                                        elements[subnet_name].Output.push(network_name) // add output port to sub\n\n                                        if (!occourence.get(network_name)) { // se non è stata considerata la network -> add\n                                            elements[network_name] = createNetwork(network_name, moduleInfo.interfaces);\n                                            occourence.set(network_name, network_name); // segno l'occorrenza\n                                            nn++; // counter\n                                        }\n                                        elements[network_name].Input.push(subnet_name) // add input port to net\n\n                                        connections_list.push( // add connection sub->net\n                                            {\n                                                from: subnet_name,\n                                                port_src: network_name,\n                                                to: network_name,\n                                                port_dst: subnet_name\n                                            }\n                                        )\n                                    }\n                                    elements[host_name].Output.push(port_name) // add output port to host\n                                    connections_list.push( // add connection host->sub\n                                        {\n                                            from: host_name,\n                                            port_src: port_name,\n                                            to: subnet_name,\n                                            port_dst: StaticValue.SubnetOutput\n                                        }\n                                    )\n                                }\n                            )\n                        }\n                    )\n                }\n            )\n            // assign value to module\n            moduleInfo.topology = {\n                connection: connections_list,\n                elements: elements\n            };\n            moduleInfo.host_number = hn;\n            moduleInfo.subnet_number = sn;\n            moduleInfo.network_number = nn;\n        });\n    }\n\n\n\n\n\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"injectables/ParseService.html":{"url":"injectables/ParseService.html","title":"injectable - ParseService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ParseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/application/parse/parse.service.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Servizio che ha lo scopo di captare i dati provenienti o meno dal server e convertirli in un formato comprensibile all'applacazione e al canvas.\n\n            \n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                    Opzionale\n                                mocked\n                            \n                        \n                    \n                \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                parseFlavorForModuleComposer\n                            \n                            \n                                    Async\n                                parseModuleForModuleVisualizer\n                            \n                            \n                                    Async\n                                parseModuleForTheaterComposer\n                            \n                            \n                                    Async\n                                parseTheaterForTheaterVisualizer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Costruttore\n        \n            \n                \n                    \nconstructor(theaterService: TheaterService, moduleService: ModuleService, flavorService: FlavorService)\n                    \n                \n                        \n                            \n                                Definito in src/app/services/application/parse/parse.service.ts:27\n                            \n                        \n\n                \n                    \n                            Costrutture servizio parsing.\n\n                            \n                                    Parametri :\n                                    \n                                        \n                                            \n                                                Nome\n                                                    Tipo\n                                                Opzionale\n                                            \n                                        \n                                        \n                                                \n                                                        theaterService\n                                                  \n                                                        \n                                                                        TheaterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        moduleService\n                                                  \n                                                        \n                                                                        ModuleService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        flavorService\n                                                  \n                                                        \n                                                                        FlavorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        parseFlavorForModuleComposer\n                        \n                    \n                \n            \n            \n                \n                    \n                    parseFlavorForModuleComposer()\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/parse/parse.service.ts:113\n                \n            \n\n\n            \n                \n                    Funzione che si occupa del parsing dei flavor per la costruzione dei moduli\nSee {PerseDataForModuleComposer}\nSee {MockedAllFlavors}\n\n\n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        parseModuleForModuleVisualizer\n                        \n                    \n                \n            \n            \n                \n                    \n                    parseModuleForModuleVisualizer(id: string | number)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/parse/parse.service.ts:96\n                \n            \n\n\n            \n                \n                    Funzione che si occupa del parsing del modulo per la visualizzazione\nSee {PerseDataForModuleVisualizer}\nSee {MockedModule}\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            string | number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        parseModuleForTheaterComposer\n                        \n                    \n                \n            \n            \n                \n                    \n                    parseModuleForTheaterComposer()\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/parse/parse.service.ts:79\n                \n            \n\n\n            \n                \n                    Funzione che si occupa del parsing dei moduli per la composizione del teatro.\nSee {PerseDataForTheaterComposer}\nSee {MockedAllModules}\n\n\n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        parseTheaterForTheaterVisualizer\n                        \n                    \n                \n            \n            \n                \n                    \n                    parseTheaterForTheaterVisualizer(id: string | number)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/parse/parse.service.ts:63\n                \n            \n\n\n            \n                \n                    Funzione che si occupa del parsing del teatro per la visualizzazione.\nSee {ParseDataForTheaterVisualizer}\nSee {MockedTheater}\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            string | number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        mocked\n                        \n                    \n                \n            \n                \n                    \n                        Valore predefinito : environment.mocked\n                    \n                \n                    \n                        \n                                Definito in src/app/services/application/parse/parse.service.ts:27\n                        \n                    \n\n            \n                \n                    Variabile che contiene l'opzione di mock dei dati.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { TheaterService } from '../../api/theater.service';\nimport { ModuleService } from '../../api/module.service';\nimport {  ModuleInstance, TheaterApplication, ModuleApplication, FlavorApplication } from '../../modelsApplication/applicationModels';\nimport { FlavorService } from '../../api/flavor.service';\nimport { ParseDataForTheaterVisualizer } from './parseDataForTheaterVisualizer';\nimport { PerseDataForTheaterComposer } from './perseDataForTheaterComposer';\nimport { PerseDataForModuleVisualizer } from './perseDataForModuleVisualizer';\nimport { PerseDataForModuleComposer } from './perseDataForModuleComposer';\nimport { MockedTheater } from '../../mock/dataset-theaterVisualizer/TVdata';\nimport { MockedModule } from '../../mock/dataset-moduleVisualizer/MVdata';\nimport { MockedAllFlavors } from '../../mock/dataset-moduleDesigner/MDdata';\nimport { MockedAllModules } from '../../mock/dataset-theaterDesigner/TDdata';\nimport { environment } from 'src/environments/environment';\n\n/**\n * Servizio che ha lo scopo di captare i dati provenienti o meno dal server e convertirli in un formato comprensibile all'applacazione e al canvas.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ParseService {\n\n  /**\n   * Variabile che contiene l'opzione di mock dei dati.\n   */\n  mocked?=environment.mocked;\n\n\n\n\n\n\n\n\n  \n  /**\n   * Costrutture servizio parsing.\n   * @param theaterService \n   * @param moduleService \n   * @param flavorService \n   */\n  constructor(\n    private theaterService: TheaterService,\n    private moduleService: ModuleService,\n    private flavorService: FlavorService\n  ) {\n  }\n\n\n\n\n\n  // parsing type\n\n  /**\n   * Funzione che si occupa del parsing del teatro per la visualizzazione.\n   * @param id \n   * @returns {Promise}\n   * @see {ParseDataForTheaterVisualizer}\n   * @see {MockedTheater}\n   */\n  async parseTheaterForTheaterVisualizer(id: string | number): Promise {\n    if (this.mocked)\n      return (await MockedTheater(id) as unknown as TheaterApplication)\n    else\n      return await new ParseDataForTheaterVisualizer(this.theaterService, this.moduleService).parseTheaterForTheaterVisualizer(id);\n  }\n\n\n\n\n  /**\n   * Funzione che si occupa del parsing dei moduli per la composizione del teatro.\n   * @returns { Promise }\n   * @see {PerseDataForTheaterComposer}\n   * @see {MockedAllModules}\n   */\n  async parseModuleForTheaterComposer(): Promise {\n    if (this.mocked)\n      return await MockedAllModules() as unknown as { [name: string]: ModuleInstance }\n    else\n      return await new PerseDataForTheaterComposer(this.moduleService).parseModuleForTheaterComposer();\n  }\n\n\n\n\n  /**\n   * Funzione che si occupa del parsing del modulo per la visualizzazione\n   * @param id \n   * @returns {Promise}\n   * @see {PerseDataForModuleVisualizer}\n   * @see {MockedModule}\n   */\n  async parseModuleForModuleVisualizer(id: string | number): Promise {\n    if (this.mocked)\n      return (await MockedModule(id) as unknown as ModuleApplication)\n    else\n      return await new PerseDataForModuleVisualizer(this.moduleService).parseModuleForModuleVisualizer(id);\n  }\n\n\n\n\n\n  /**\n   * Funzione che si occupa del parsing dei flavor per la costruzione dei moduli\n   * @returns {Promise}\n   * @see {PerseDataForModuleComposer}\n   * @see {MockedAllFlavors}\n   */\n  async parseFlavorForModuleComposer(): Promise {\n    if (this.mocked)\n      return await MockedAllFlavors() as unknown as FlavorApplication[]\n    else\n      return await new PerseDataForModuleComposer(this.flavorService).parseFlavorForModuleComposer();\n  }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/PerseDataForModuleComposer.html":{"url":"classes/PerseDataForModuleComposer.html","title":"class - PerseDataForModuleComposer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  PerseDataForModuleComposer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/application/parse/perseDataForModuleComposer.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Elemento che ha lo scopo di eseguire il fetching ed il parsing dei dati per la costruzione del modulo.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                parseFlavor\n                            \n                            \n                                    Async\n                                parseFlavorForModuleComposer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Costruttore\n        \n            \n                \n                    \nconstructor(flavorService: FlavorService)\n                    \n                \n                        \n                            \n                                Definito in src/app/services/application/parse/perseDataForModuleComposer.ts:9\n                            \n                        \n\n                \n                    \n                            Costrutture della componente-\n\n                            \n                                    Parametri :\n                                    \n                                        \n                                            \n                                                Nome\n                                                    Tipo\n                                                Opzionale\n                                            \n                                        \n                                        \n                                                \n                                                        flavorService\n                                                  \n                                                        \n                                                                        FlavorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        parseFlavor\n                        \n                    \n                \n            \n            \n                \nparseFlavor(flavorDTO: FlavorDTO[])\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/parse/perseDataForModuleComposer.ts:41\n                \n            \n\n\n            \n                \n                    Funzione che si occupa di eseguire il parsing dei flavor.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    flavorDTO\n                                    \n                                                FlavorDTO[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FlavorApplication[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        parseFlavorForModuleComposer\n                        \n                    \n                \n            \n            \n                \n                    \n                    parseFlavorForModuleComposer()\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/parse/perseDataForModuleComposer.ts:27\n                \n            \n\n\n            \n                \n                    Funzione che esegue il fetching ed il parsing dei dati flavor.\nSee {flavorService}\nSee {parseFlavor}\n\n\n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { FlavorService } from '../../api/flavor.service';\nimport { FlavorApplication } from '../../modelsApplication/applicationModels';\nimport { FlavorDTO } from '../../modelsDTO/falvorDTO';\n\n\n/**\n * Elemento che ha lo scopo di eseguire il fetching ed il parsing dei dati per la costruzione del modulo.\n */\nexport class PerseDataForModuleComposer {\n\n\n    /**\n     * Costrutture della componente-\n     * @param flavorService \n     */\n    constructor(private flavorService: FlavorService) {\n    }\n\n\n\n    /**\n     * Funzione che esegue il fetching ed il parsing dei dati flavor.\n     * @returns {Promise}\n     * @see {flavorService}\n     * @see {parseFlavor}\n     */\n    async parseFlavorForModuleComposer(): Promise {\n        let flavorDTO: FlavorDTO[] = await this.flavorService.getAllFlavor();\n        let flavorApplication: FlavorApplication[] = this.parseFlavor(flavorDTO);\n        return flavorApplication;\n    }\n\n\n\n\n    /**\n     * Funzione che si occupa di eseguire il parsing dei flavor.\n     * @param flavorDTO\n     * @returns { FlavorApplication[] }\n     */\n    parseFlavor(flavorDTO: FlavorDTO[]): FlavorApplication[] {\n        let fa: FlavorApplication[] = []\n        flavorDTO.forEach(f => {\n            fa.push({\n                flavorName: f.name,\n                cpu: f.cpu,\n                ram: f.ram,\n                disk: f.disk,\n            })\n        })\n        return fa;\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/PerseDataForModuleVisualizer.html":{"url":"classes/PerseDataForModuleVisualizer.html","title":"class - PerseDataForModuleVisualizer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  PerseDataForModuleVisualizer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/application/parse/perseDataForModuleVisualizer.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Elemento che ha lo scopo di eseguire il fetching ed il parsing dei dati per la costruzione del modulo.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getMainModuleDetails\n                            \n                            \n                                    Async\n                                getMainModuleInterfaces\n                            \n                            \n                                    Async\n                                getMainModuleNodes\n                            \n                            \n                                getMainModuleTopology\n                            \n                            \n                                    Async\n                                parseMainModule\n                            \n                            \n                                    Async\n                                parseModuleForModuleVisualizer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Costruttore\n        \n            \n                \n                    \nconstructor(moduleService: ModuleService)\n                    \n                \n                        \n                            \n                                Definito in src/app/services/application/parse/perseDataForModuleVisualizer.ts:16\n                            \n                        \n\n                \n                    \n                            Costruttore della componente.\n\n                            \n                                    Parametri :\n                                    \n                                        \n                                            \n                                                Nome\n                                                    Tipo\n                                                Opzionale\n                                            \n                                        \n                                        \n                                                \n                                                        moduleService\n                                                  \n                                                        \n                                                                        ModuleService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getMainModuleDetails\n                        \n                    \n                \n            \n            \n                \n                    \n                    getMainModuleDetails(module: ModuleDTO)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/parse/perseDataForModuleVisualizer.ts:71\n                \n            \n\n\n            \n                \n                    Funzione che prende i dati dei nodi e interfacce del modulo e le collega ad esso.\nSee {getMainModuleNodes}\nSee {getMainModuleInterfaces}\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    module\n                                    \n                                                ModuleDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getMainModuleInterfaces\n                        \n                    \n                \n            \n            \n                \n                    \n                    getMainModuleInterfaces(module: ModuleDTO)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/parse/perseDataForModuleVisualizer.ts:115\n                \n            \n\n\n            \n                \n                    Funzione che segue il fetching delle intefracce del modulo.\nSee {moduleService}\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    module\n                                    \n                                                ModuleDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getMainModuleNodes\n                        \n                    \n                \n            \n            \n                \n                    \n                    getMainModuleNodes(module: ModuleDTO)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/parse/perseDataForModuleVisualizer.ts:96\n                \n            \n\n\n            \n                \n                    Funzione che segue il fetching degli host del modulo.\nSee {moduleService}\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    module\n                                    \n                                                ModuleDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMainModuleTopology\n                        \n                    \n                \n            \n            \n                \ngetMainModuleTopology(moduleInfo: ModuleApplication)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/parse/perseDataForModuleVisualizer.ts:136\n                \n            \n\n\n            \n                \n                    Funzione che ha lo scopo di collegare, inizializzare e parserizzare i nodi del modulo e strutturare la topologia per la visualizzazione su canvas.\nCrea anche direttamente i nodi per il rendering dell'editor.\nSee {createHost}\nSee {createSubnet}\nSee {createNetwork}\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    moduleInfo\n                                    \n                                                ModuleApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        parseMainModule\n                        \n                    \n                \n            \n            \n                \n                    \n                    parseMainModule(id: string | number)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/parse/perseDataForModuleVisualizer.ts:54\n                \n            \n\n\n            \n                \n                    Funzione che esegue il fetching e il parsing dei dati del modulo.\nSi procura anche i dati di dettaglio sui nodi e topologie.\nSee {getModuleByID}\nSee {getMainModuleDetails}\nSee {getMainModuleTopology}\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            string | number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        parseModuleForModuleVisualizer\n                        \n                    \n                \n            \n            \n                \n                    \n                    parseModuleForModuleVisualizer(id: string | number)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/parse/perseDataForModuleVisualizer.ts:35\n                \n            \n\n\n            \n                \n                    Funzione che ritorna il modulo parserizzato per la visualizzazione.\nSee {parseMainModule}\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            string | number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ModuleService } from '../../api/module.service';\nimport { ModuleNetworkInterfaceDTO, ModuleDTO } from '../../modelsDTO/moduleDTO';\nimport {ReteConnection, NodeTopologyElement, ModuleApplication } from '../../modelsApplication/applicationModels';\nimport { HostModuleDTO, HostPortModuleDTO } from '../../modelsDTO/hostDTO';\nimport { SubnetDTO } from '../../modelsDTO/networkDTO';\nimport {  ReteHostInfo } from 'src/app/rete-settings/nodes/rete-nodes/host/hostNode';\nimport {  ReteNetworkInfo } from 'src/app/rete-settings/nodes/rete-nodes/network/networkNode';\nimport { ReteSubnetInfo } from 'src/app/rete-settings/nodes/rete-nodes/subnet/subnetNode';\nimport {  StaticValue } from 'src/app/models/appType';\nimport { createHost, createSubnet, createNetwork } from './parseCommonElement';\n\n\n/**\n * Elemento che ha lo scopo di eseguire il fetching ed il parsing dei dati per la costruzione del modulo.\n */\nexport class PerseDataForModuleVisualizer {\n\n\n    /**\n     * Costruttore della componente.\n     * @param moduleService \n     */\n    constructor(private moduleService: ModuleService) {\n    }\n\n\n\n\n    /**\n     * Funzione che ritorna il modulo parserizzato per la visualizzazione.\n     * @param id \n     * @returns {Promise }\n     * @see {parseMainModule}\n     */\n    async parseModuleForModuleVisualizer(id: string | number): Promise {\n        let moduleDTO: ModuleDTO;\n        let module: ModuleApplication;\n        [moduleDTO, module] = await this.parseMainModule(id);\n        return module;\n    }\n\n\n\n\n    /**\n     * Funzione che esegue il fetching e il parsing dei dati del modulo.\n     * Si procura anche i dati di dettaglio sui nodi e topologie.\n     * @param id \n     * @returns {Promise}\n     * @see {getModuleByID}\n     * @see {getMainModuleDetails}\n     * @see {getMainModuleTopology}\n     */\n    async parseMainModule(id: string | number): Promise {\n        let module: ModuleDTO = await this.moduleService.getModuleByID(id);\n        let parsedModule: ModuleApplication = await this.getMainModuleDetails(module)\n        this.getMainModuleTopology(parsedModule);\n        return [module, parsedModule];\n    }\n\n\n\n\n    /**\n     * Funzione che prende i dati dei nodi e interfacce del modulo e le collega ad esso.\n     * @param module \n     * @returns {Promise }\n     * @see {getMainModuleNodes}\n     * @see {getMainModuleInterfaces}\n     */\n    async getMainModuleDetails(module: ModuleDTO): Promise {\n        let h: HostModuleDTO[] = await this.getMainModuleNodes(module);\n        let i: ModuleNetworkInterfaceDTO[] = await this.getMainModuleInterfaces(module);\n        let moduleInfo2: ModuleApplication = {\n            imports: [],\n            ...module,\n            hosts: h,\n            interfaces: i,\n            host_number: 0,\n            subnet_number: 0,\n            network_number: 0,\n            topology: new NodeTopologyElement\n        };\n        return moduleInfo2;\n    }\n\n\n\n\n    /**\n     * Funzione che segue il fetching degli host del modulo.\n     * @param module \n     * @returns {Promise}\n     * @see {moduleService}\n     */\n    async getMainModuleNodes(module: ModuleDTO): Promise {\n        let h: HostModuleDTO[] = undefined;\n        try {\n            h = await this.moduleService.getModuleHostByTheaterUUID(module.uuid);\n        } catch (e) {\n            console.error(e);\n        }\n        return h;\n    }\n\n\n\n\n    /**\n     * Funzione che segue il fetching delle intefracce del modulo.\n     * @param module \n     * @returns {Promise}\n     * @see {moduleService}\n     */\n    async getMainModuleInterfaces(module: ModuleDTO): Promise {\n        let i: ModuleNetworkInterfaceDTO[] = [];\n        try {\n            i = await this.moduleService.getModuleInterfacesByModuleID(module.id);\n        } catch (e) {\n            console.error(e);\n        }\n        return i;\n    }\n\n\n\n\n    /**\n     * Funzione che ha lo scopo di collegare, inizializzare e parserizzare i nodi del modulo e strutturare la topologia per la visualizzazione su canvas.\n     * Crea anche direttamente i nodi per il rendering dell'editor.\n     * @param moduleInfo \n     * @see {createHost}\n     * @see {createSubnet}\n     * @see {createNetwork}\n     */\n    getMainModuleTopology(moduleInfo: ModuleApplication) {\n        var occourence: Map = new Map();\n        var connections_list: ReteConnection[] = [];\n        var elements: { [name: string]: ReteHostInfo | ReteSubnetInfo | ReteNetworkInfo } = {};\n        var hn: number = 0, sn: number = 0, nn: number = 0;\n        moduleInfo.hosts.forEach(\n            (node: HostModuleDTO) => {\n                let host_name: string = node.name;\n                elements[host_name] = createHost(host_name, node);\n                hn++; // counter\n                node.ports.forEach(\n                    (port: HostPortModuleDTO) => {\n                        let port_name: string = port.name;\n                        port.subnets.forEach(\n                            (subnet: SubnetDTO) => { // controllo subnet & network\n                                let subnet_name: string = subnet.name;\n                                let network_name: string = subnet.network.name;\n                                if (!occourence.get(subnet_name)) { // se non è stata considerata la subnet -> add\n                                    elements[subnet_name] = createSubnet(subnet_name, subnet)\n                                    occourence.set(subnet_name, subnet_name) // segno l'occorrenza\n                                    sn++; // counter\n                                    elements[subnet_name].Output.push(network_name) // add output port to sub\n\n                                    if (!occourence.get(network_name)) { // se non è stata considerata la network -> add\n                                        elements[network_name] = createNetwork(network_name, moduleInfo.interfaces);\n                                        occourence.set(network_name, network_name) // segno l'occorrenza\n                                        nn++; // counter\n                                    }\n                                    elements[network_name].Input.push(subnet_name) // add input port to net\n\n                                    connections_list.push( // add connection sub->net\n                                        {\n                                            from: subnet_name,\n                                            port_src: network_name,\n                                            to: network_name,\n                                            port_dst: subnet_name\n                                        }\n                                    )\n                                }\n                                elements[host_name].Output.push(port_name) // add output port to host\n                                connections_list.push( // add connection host->sub\n                                    {\n                                        from: host_name,\n                                        port_src: port_name,\n                                        to: subnet_name,\n                                        port_dst: StaticValue.SubnetOutput\n                                    }\n                                )\n                            }\n                        )\n                    }\n                )\n            }\n        )\n        // assign value to module\n        moduleInfo.topology = {\n            connection: connections_list,\n            elements: elements\n        };\n        moduleInfo.host_number = hn;\n        moduleInfo.subnet_number = sn;\n        moduleInfo.network_number = nn;\n    }\n\n\n\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/PerseDataForTheaterComposer.html":{"url":"classes/PerseDataForTheaterComposer.html","title":"class - PerseDataForTheaterComposer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  PerseDataForTheaterComposer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/application/parse/perseDataForTheaterComposer.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Elemento che ha lo scopo di eseguire il fetching ed il parsing dei dati per la costruzione del teatro.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getModuleDict\n                            \n                            \n                                    Async\n                                getModulesDetails\n                            \n                            \n                                    Async\n                                getModulesInterfaces\n                            \n                            \n                                    Async\n                                getModulesNodes\n                            \n                            \n                                getModulesTopology\n                            \n                            \n                                initEmptyModuleInstance\n                            \n                            \n                                    Async\n                                parseModuleForTheaterComposer\n                            \n                            \n                                    Async\n                                parseModuleList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Costruttore\n        \n            \n                \n                    \nconstructor(moduleService: ModuleService)\n                    \n                \n                        \n                            \n                                Definito in src/app/services/application/parse/perseDataForTheaterComposer.ts:18\n                            \n                        \n\n                \n                    \n                            Costruttore della componente\n\n                            \n                                    Parametri :\n                                    \n                                        \n                                            \n                                                Nome\n                                                    Tipo\n                                                Opzionale\n                                            \n                                        \n                                        \n                                                \n                                                        moduleService\n                                                  \n                                                        \n                                                                        ModuleService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getModuleDict\n                        \n                    \n                \n            \n            \n                \n                    \n                    getModuleDict(modules: SimpleModuleDTO[])\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/parse/perseDataForTheaterComposer.ts:70\n                \n            \n\n\n            \n                \n                    Funzione che si occupa di convertire i moduli in un dizionario.\nQuesta esegue anche le chiamate per reperire i dettagli dei singoli moduli.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    modules\n                                    \n                                            SimpleModuleDTO[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getModulesDetails\n                        \n                    \n                \n            \n            \n                \n                    \n                    getModulesDetails(modules: SimpleModuleDTO[])\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/parse/perseDataForTheaterComposer.ts:89\n                \n            \n\n\n            \n                \n                    Funzione che collega un modulo con i suoi dettagli (nodi e interfacce).\nSee {getModulesNodes}\nSee {getModulesInterfaces}\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    modules\n                                    \n                                            SimpleModuleDTO[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getModulesInterfaces\n                        \n                    \n                \n            \n            \n                \n                    \n                    getModulesInterfaces(modules: SimpleModuleDTO[])\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/parse/perseDataForTheaterComposer.ts:138\n                \n            \n\n\n            \n                \n                    Funzione che esegue il fetching dei dettagli sulle interfacce dei singoli moduli.\nSee {moduleService}\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    modules\n                                    \n                                            SimpleModuleDTO[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getModulesNodes\n                        \n                    \n                \n            \n            \n                \n                    \n                    getModulesNodes(modules: SimpleModuleDTO[])\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/parse/perseDataForTheaterComposer.ts:114\n                \n            \n\n\n            \n                \n                    Funzione che esegue il fetching dei dettagli sugli host dei singoli moduli.\nSee {moduleService}\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    modules\n                                    \n                                            SimpleModuleDTO[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getModulesTopology\n                        \n                    \n                \n            \n            \n                \ngetModulesTopology(modulesInfo: literal type)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/parse/perseDataForTheaterComposer.ts:164\n                \n            \n\n\n            \n                \n                    Funzione che struttura la topologia dei singoli moduli.\nEssa instanzia anche i nodi per poterli inserire direttamente nel canvas.\nSee {createHost}\nSee {createSubnet}\nSee {createNetwork}\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    modulesInfo\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initEmptyModuleInstance\n                        \n                    \n                \n            \n            \n                \ninitEmptyModuleInstance(modules: literal type)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/parse/perseDataForTheaterComposer.ts:240\n                \n            \n\n\n            \n                \n                    Funzione che ha come scopo inizializzare i dati, valori e attributi per il teatro da usare nell'applicazione.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    modules\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        parseModuleForTheaterComposer\n                        \n                    \n                \n            \n            \n                \n                    \n                    parseModuleForTheaterComposer()\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/parse/perseDataForTheaterComposer.ts:36\n                \n            \n\n\n            \n                \n                    Funzione che ritorna un dizionario di moduli utilizzati per la costruzione della topologia del teatro.\nQuesta provvede anche l'instanziazione dei dati per il rendering dei moduli sul canvas.\nSee {parseModuleList}\nSee {initEmptyModuleInstance}\n\n\n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        parseModuleList\n                        \n                    \n                \n            \n            \n                \n                    \n                    parseModuleList()\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/parse/perseDataForTheaterComposer.ts:53\n                \n            \n\n\n            \n                \n                    Funzione che esegue il fetching di tutti i moduli disponibili.\nQuesta funzione ritorna un dizionario degli stessi, annessa anche la topologia.\nSee {moduleService}\nSee {getModuleDict}\nSee {getModulesTopology}\n\n\n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ModuleService } from '../../api/module.service';\nimport { ModuleInstanceDTO, ModuleNetworkInterfaceDTO, SimpleModuleDTO } from '../../modelsDTO/moduleDTO';\nimport { SimpleModuleApplication, ModuleInstance, ReteConnection } from '../../modelsApplication/applicationModels';\nimport { HostModuleDTO, HostPortModuleDTO } from '../../modelsDTO/hostDTO';\nimport { SubnetDTO } from '../../modelsDTO/networkDTO';\nimport { ReteHostInfo } from 'src/app/rete-settings/nodes/rete-nodes/host/hostNode';\nimport { ReteNetworkInfo } from 'src/app/rete-settings/nodes/rete-nodes/network/networkNode';\nimport { ReteSubnetInfo } from 'src/app/rete-settings/nodes/rete-nodes/subnet/subnetNode';\nimport { ModuleType2, StaticValue, ModuleTypeTheater } from 'src/app/models/appType';\nimport { createHost, createSubnet, createNetwork, createModuleNode } from './parseCommonElement';\n\n\n\n/**\n * Elemento che ha lo scopo di eseguire il fetching ed il parsing dei dati per la costruzione del teatro.\n */\nexport class PerseDataForTheaterComposer {\n\n    /**\n     * Costruttore della componente\n     * @param moduleService \n     */\n    constructor(private moduleService: ModuleService) {\n    }\n\n\n\n    /**\n     * Funzione che ritorna un dizionario di moduli utilizzati per la costruzione della topologia del teatro.\n     * Questa provvede anche l'instanziazione dei dati per il rendering dei moduli sul canvas.\n     * @returns {Promise}\n     * @see {parseModuleList}\n     * @see {initEmptyModuleInstance}\n     */\n    async parseModuleForTheaterComposer(): Promise {\n        let modules: { [name: string]: SimpleModuleApplication } = await this.parseModuleList();\n        let moduleInstances: { [name: string]: ModuleInstance } = await this.initEmptyModuleInstance(modules);\n        return moduleInstances\n    }\n\n\n\n\n    /**\n     * Funzione che esegue il fetching di tutti i moduli disponibili.\n     * Questa funzione ritorna un dizionario degli stessi, annessa anche la topologia.\n     * @returns {Promise}\n     * @see {moduleService}\n     * @see {getModuleDict}\n     * @see {getModulesTopology}\n     */\n    async parseModuleList(): Promise {\n        let rowModules: SimpleModuleDTO[] = await this.moduleService.getAllModules();\n        let modules: { [name: string]: SimpleModuleApplication } = await this.getModuleDict(rowModules)\n        this.getModulesTopology(modules);\n        return modules;\n    }\n\n\n\n\n\n    /**\n     * Funzione che si occupa di convertire i moduli in un dizionario.\n     * Questa esegue anche le chiamate per reperire i dettagli dei singoli moduli.\n     * @param modules \n     * @returns { Promise }\n     */\n    async getModuleDict(modules: SimpleModuleDTO[]): Promise {\n        let moduleDict: { [name: string]: SimpleModuleApplication } = {};\n        let modulesApplication: SimpleModuleApplication[] = await this.getModulesDetails(modules);\n        Object.entries(modulesApplication).map(async ([key, value]) => {\n            moduleDict[value.name] = value;\n        });\n        return moduleDict;\n    }\n\n\n\n\n    /**\n     * Funzione che collega un modulo con i suoi dettagli (nodi e interfacce).\n     * @param modules  \n     * @returns {Promise}\n     * @see {getModulesNodes}\n     * @see {getModulesInterfaces}\n     */\n    async getModulesDetails(modules: SimpleModuleDTO[]): Promise {\n        let h: { [key: string]: HostModuleDTO[] } = await this.getModulesNodes(modules);\n        let i: { [key: string]: ModuleNetworkInterfaceDTO[] } = await this.getModulesInterfaces(modules);\n        let moduleInfo: SimpleModuleApplication[] = [];\n        await Promise.all(\n            Object.entries(modules).map(async ([key, value]) => {\n                moduleInfo[key] = {\n                    ...value,\n                    hosts: h[key],\n                    interfaces: i[key],\n                }\n            })\n        )\n        return moduleInfo;\n    }\n\n\n\n\n    /**\n     * Funzione che esegue il fetching dei dettagli sugli host dei singoli moduli.\n     * @param modules \n     * @returns {Promise }\n     * @see {moduleService}\n     */\n    async getModulesNodes(modules: SimpleModuleDTO[]): Promise {\n        let h: { [key: string]: HostModuleDTO[] } = {};\n        await Promise.all(\n            Object.entries(modules).map(async ([key, value]) => {\n                let simpleModuleDTO: SimpleModuleDTO = value as SimpleModuleDTO;\n                try {\n                    h[key] = await this.moduleService.getModuleHostByTheaterUUID(simpleModuleDTO.uuid);\n                } catch (e) {\n                    console.error(e);\n                }\n            })\n        )\n        return h;\n    }\n\n\n\n\n    /**\n     * Funzione che esegue il fetching dei dettagli sulle interfacce dei singoli moduli.\n     * @param modules \n     * @returns {Promise }\n     * @see {moduleService}\n     */\n    async getModulesInterfaces(modules: SimpleModuleDTO[]): Promise {\n        let i: { [key: string]: ModuleNetworkInterfaceDTO[] } = {};\n        await Promise.all(\n            Object.entries(modules).map(async ([key, value]) => {\n                let simpleModuleDTO: SimpleModuleDTO = value as SimpleModuleDTO;\n                try {\n                    i[key] = await this.moduleService.getModuleInterfacesByModuleID(simpleModuleDTO.id);\n                } catch (e) {\n                    console.error(e);\n                }\n            })\n        )\n        return i;\n    }\n\n\n\n\n    /**\n     * Funzione che struttura la topologia dei singoli moduli. \n     * Essa instanzia anche i nodi per poterli inserire direttamente nel canvas.\n     * @param modulesInfo \n     * @see {createHost}\n     * @see {createSubnet}\n     * @see {createNetwork}\n     */\n    getModulesTopology(modulesInfo: { [name: string]: SimpleModuleApplication }) {\n        Object.entries(modulesInfo).map(([key, value]) => {\n            let moduleInfo: SimpleModuleApplication = value;\n            var occourence: Map = new Map();\n            var connections_list: ReteConnection[] = [];\n            var elements: { [name: string]: ReteHostInfo | ReteSubnetInfo | ReteNetworkInfo } = {};\n            var hn: number = 0, sn: number = 0, nn: number = 0;\n            moduleInfo.hosts.forEach(\n                (node: HostModuleDTO) => {\n                    let host_name: string = node.name;\n                    elements[host_name] = createHost(host_name, node);\n                    hn++; // counter\n                    node.ports.forEach(\n                        (port: HostPortModuleDTO) => {\n                            let port_name: string = port.name;\n                            port.subnets.forEach(\n                                (subnet: SubnetDTO) => { // controllo subnet & network\n                                    let subnet_name: string = subnet.name;\n                                    let network_name: string = subnet.network.name;\n                                    if (!occourence.get(subnet_name)) { // se non è stata considerata la subnet -> add\n                                        elements[subnet_name] = createSubnet(subnet_name, subnet)\n                                        occourence.set(subnet_name, subnet_name) // segno l'occorrenza\n                                        sn++; // counter\n                                        elements[subnet_name].Output.push(network_name) // add output port to sub\n\n                                        if (!occourence.get(network_name)) { // se non è stata considerata la network -> add\n                                            elements[network_name] = createNetwork(network_name, moduleInfo.interfaces);\n                                            occourence.set(network_name, network_name); // segno l'occorrenza\n                                            nn++; // counter\n                                        }\n                                        elements[network_name].Input.push(subnet_name) // add input port to net\n\n                                        connections_list.push( // add connection sub->net\n                                            {\n                                                from: subnet_name,\n                                                port_src: network_name,\n                                                to: network_name,\n                                                port_dst: subnet_name\n                                            }\n                                        )\n                                    }\n                                    elements[host_name].Output.push(port_name) // add output port to host\n                                    connections_list.push( // add connection host->sub\n                                        {\n                                            from: host_name,\n                                            port_src: port_name,\n                                            to: subnet_name,\n                                            port_dst: StaticValue.SubnetOutput\n                                        }\n                                    )\n                                }\n                            )\n                        }\n                    )\n                }\n            )\n            // assign value to module\n            moduleInfo.topology = {\n                connection: connections_list,\n                elements: elements\n            };\n            moduleInfo.host_number = hn;\n            moduleInfo.subnet_number = sn;\n            moduleInfo.network_number = nn;\n        });\n    }\n\n\n\n\n\n    /**\n     * Funzione che ha come scopo inizializzare i dati, valori e attributi per il teatro da usare nell'applicazione.\n     * @param modules \n     * @returns \n     */\n    initEmptyModuleInstance(modules: { [name: string]: SimpleModuleApplication }): { [name: string]: ModuleInstance } {\n        let x: { [name: string]: ModuleInstance } = {};\n        Object.entries(modules).map(async ([key, value]) => {\n            let smr: SimpleModuleApplication = value as SimpleModuleApplication;\n            if (ModuleType2[smr.type]) {  // se è tra i tipi definiti\n                let mit: ModuleInstanceDTO = {\n                    properties: {\n                        description: '',\n                        area: '',\n                        module: smr.name,\n                        version: undefined,\n                        sequence: '',\n                        consumer_interfaces_link: []\n                    },\n                    type: ModuleTypeTheater[ModuleType2[value.type]],\n                };\n\n                let ma: ModuleInstance = createModuleNode(undefined, mit, smr)\n                // x[\"Instance \"+key] = ma;\n                x[key] = ma;\n            }\n        });\n        return x;\n    }\n\n\n\n\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/PortSimpleData.html":{"url":"classes/PortSimpleData.html","title":"class - PortSimpleData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  PortSimpleData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsExport/moduleExport.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano i dati della porta all'interno dei node_templates.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                relationships\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        relationships\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         RelationshipsExport[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:132\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         PortTypeExport\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:131\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ModeTypeExport, ModuleTypeExport, NetworkTypeExport, NodeTypeExport, PortTypeExport, RelationshipsTypeExport, SubnetTypeExport, ToscaDefinitionType } from \"./TypeExport\"\n\n\n/**\n * Classe utilizzata per l'export. \n * Contiene le informazioni generali per il modulo che devono esserci nello standard Tosca.\n */\nexport class ModuleExport {\n    tosca_definitions_version: ToscaDefinitionType\n    description: string\n    imports: string[]\n    node_templates: { [name: string]: ModuleSimpleData | NodeSimpleData | PortSimpleData | NetworkSimpleData | SubnetSimpleData }\n    dsl_definition: any | null; //future\n    capabilites: any | null //future\n    outputs: any | null //future\n}\n\n/**\n * Classe che contiene gli attributi che indicano la rappresentazione del modulo per l'export.\n */\nexport class ModuleSimpleData {\n    type: ModuleTypeExport\n    properties: PropertiesMSD\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà del modulo per l'export.\n */\nexport class PropertiesMSD {\n    mode: ModeTypeExport\n    description: string\n    version: string | number\n    constraints: ConstraintsMSD\n    interface_networks: {\n        providers: InterfaceNetworksProvider[]\n        consumers: InterfaceNetworksConsumer[]\n    }\n    virtual_machines: VirtualMachine[]\n}\n/**\n * Classe che contiene gli attributi che indicano i vincoli di connessione del modulo per l'export.\n */\nexport class ConstraintsMSD {\n    interface_constraints: InterfaceConstraints[]\n    module_constraints: ModuleConstraints[]\n    network_constraints: NetworkConstraints[]\n}\n/**\n * Classe che contiene gli attributi che indicano i viconli per le interfacce di connessione del modulo.\n */\nexport class InterfaceConstraints {\n    local_interface: string\n    multiple_mode: boolean = false //future\n    module_name: string\n    compatibility: string = \"1.0\" // future\n    remote_interface: string\n}\n/**\n * Classe che contiene gli attributi che indicano i viconli del modulo.\n */\nexport class ModuleConstraints {\n}\n/**\n * Classe che contiene gli attributi che indicano i viconli dei network del modulo.\n */\nexport class NetworkConstraints {\n}\n/**\n * Classe che contiene gli attributi che indicano le interfacce provider del modulo.\n */\nexport class InterfaceNetworksProvider {\n    interface: string\n    network: string\n    tag: string\n    subnets: SubnetExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano le interfacce consumer del modulo.\n */\nexport class InterfaceNetworksConsumer {\n    interface: string\n    network: string\n    tag: string\n    subnets: SubnetExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano l'insieme di host presenti in un modulo.\n */\nexport class VirtualMachine {\n    virtual_machine: string\n    ports: VirtualMachinePorts[]\n}\n/**\n * Classe che contiene gli attributi che indicano le porte associate ad un host di un modulo.\n */\nexport class VirtualMachinePorts {\n    port: string\n    network: string\n    subnets: SubnetExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano la subnet connessa alla porte dell'host.\n * @see {VirtualMachinePorts}\n */\nexport class SubnetExport {\n    subnet: string;\n}\n\n/**\n * Classe che contiene gli attributi che indica un nodo all'interno dei node_templates.\n * @see {ModuleExport}\n */\nexport class NodeSimpleData {\n    type: NodeTypeExport\n    properties: any | null // future\n    interfaces: any | null // future\n    relationships: RelationshipsExport[]\n}\n\n/**\n * Classe che contiene gli attributi che indicano le relazioni generali.\n */\nexport class RelationshipsExport {\n    type: RelationshipsTypeExport\n    target: string\n}\n/**\n * Classe che contiene gli attributi che indicano i dati della porta all'interno dei node_templates.\n */\nexport class PortSimpleData {\n    type: PortTypeExport\n    relationships: RelationshipsExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano i dati delle network all'interno dei node_templates.\n */\nexport class NetworkSimpleData {\n    type: NetworkTypeExport\n    properties: PropertiesNSD\n}\n/**\n * Classe che contiene gli attributi che indicano le proprietà della network all'interno dei node_templates.\n * @see {NetworkSimpleData}\n */\nexport class PropertiesNSD {\n    openstack_config?: any | null // future\n    use_external_resource?: boolean | null // future\n    resource_id?: any | null // future\n}\n\n/**\n * Classe che contiene gli attributi che indicano i dati delle subnet all'interno dei node_templates.\n */\nexport class SubnetSimpleData {\n    type: SubnetTypeExport\n    relationships: RelationshipsExport[]\n    properties: PropertiesSSD\n}\n/**\n * Classe che contiene gli attributi che indicano le proprietà della subnet all'interno dei node_templates.\n * @see {NetworkSimpleData}\n */\nexport class PropertiesSSD {\n    subnet?: {\n        ip_version: string | number\n        cidr: string\n        enable_dhcp: boolean\n        gateway_ip?: any | null // future\n    }\n    openstack_config?: any | null // future\n    use_external_resource?: boolean | null // future\n    resource_id?: any | null // future\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/PropertiesMISD.html":{"url":"classes/PropertiesMISD.html","title":"class - PropertiesMISD","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  PropertiesMISD\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsExport/theaterExport.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano le propeitò del modulo all'interno dei node_templates.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                area\n                            \n                            \n                                consumer_interface_link\n                            \n                            \n                                module\n                            \n                            \n                                sequence\n                            \n                            \n                                    Opzionale\n                                sources\n                            \n                            \n                                version\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        area\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/theaterExport.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        consumer_interface_link\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ConsumerInterfaceLinkExport[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/theaterExport.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/theaterExport.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sequence\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/theaterExport.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        sources\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         SourceExport[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/theaterExport.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/theaterExport.ts:59\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ModeTypeExport, ModuleTypeExport, TheaterTypeExport, ToscaDefinitionType } from \"./TypeExport\"\n\n/**\n * Classe utilizzata per l'export. \n * Contiene le informazioni generali per il teatro che devono esserci nello standard Tosca.\n */\nexport class TheaterExport {\n    tosca_definitions_version: ToscaDefinitionType\n    description: string\n    imports: string[]\n    node_templates: { [name: string]: TheaterSimpleData | ModuleInstanceSimpleData }\n}\n/**\n * Classe che contiene gli attributi che indicano il teatro all'interno dei node_templates.\n */\nexport class TheaterSimpleData {\n    type: TheaterTypeExport\n    properties: PropertiesTSD\n}\n/**\n * Classe che contiene gli attributi che indicano le proprietà del teatro.\n */\nexport class PropertiesTSD {\n    version: string | number\n    description: string\n    mode: ModeTypeExport\n    author: string\n    tags: TagsExport[]\n    areas: AreaExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano i tag nelle proprietà del teatro.\n * @see {PropertiesTSD}\n */\nexport class TagsExport {\n    tag: string\n}\n/**\n * Classe che contiene gli attributi che indicano le aree nelle proprietà del teatr.\n * @see {PropertiesTSD}\n */\nexport class AreaExport {\n    area: string\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano il modulo all'interno dei node_modules.\n */\nexport class ModuleInstanceSimpleData {\n    type: ModuleTypeExport\n    properties: PropertiesMISD\n}\n/**\n * Classe che contiene gli attributi che indicano le propeitò del modulo all'interno dei node_templates.\n */\nexport class PropertiesMISD{\n    module: string\n    version: string | number\n    area: string\n    sequence: number\n    sources?: SourceExport[]\n    consumer_interface_link: ConsumerInterfaceLinkExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano le porte di ingresso del modulo all'interno dei node_templates.\n */\nexport class SourceExport{\n    module_instance: string\n    host:string\n    interfaces: string[]\n}\n/**\n * Classe che contiene gli attributi che indicano i collegamenti e relazioni intramodulo con le varie interfacce.\n */\nexport class ConsumerInterfaceLinkExport{\n    local_interface: string\n    module_interface:string\n    remote_interface:string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/PropertiesMSD.html":{"url":"classes/PropertiesMSD.html","title":"class - PropertiesMSD","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  PropertiesMSD\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsExport/moduleExport.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano le proprietà del modulo per l'export.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                constraints\n                            \n                            \n                                description\n                            \n                            \n                                interface_networks\n                            \n                            \n                                mode\n                            \n                            \n                                version\n                            \n                            \n                                virtual_machines\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        constraints\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ConstraintsMSD\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        interface_networks\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     literal type\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ModeTypeExport\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        virtual_machines\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         VirtualMachine[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:38\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ModeTypeExport, ModuleTypeExport, NetworkTypeExport, NodeTypeExport, PortTypeExport, RelationshipsTypeExport, SubnetTypeExport, ToscaDefinitionType } from \"./TypeExport\"\n\n\n/**\n * Classe utilizzata per l'export. \n * Contiene le informazioni generali per il modulo che devono esserci nello standard Tosca.\n */\nexport class ModuleExport {\n    tosca_definitions_version: ToscaDefinitionType\n    description: string\n    imports: string[]\n    node_templates: { [name: string]: ModuleSimpleData | NodeSimpleData | PortSimpleData | NetworkSimpleData | SubnetSimpleData }\n    dsl_definition: any | null; //future\n    capabilites: any | null //future\n    outputs: any | null //future\n}\n\n/**\n * Classe che contiene gli attributi che indicano la rappresentazione del modulo per l'export.\n */\nexport class ModuleSimpleData {\n    type: ModuleTypeExport\n    properties: PropertiesMSD\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà del modulo per l'export.\n */\nexport class PropertiesMSD {\n    mode: ModeTypeExport\n    description: string\n    version: string | number\n    constraints: ConstraintsMSD\n    interface_networks: {\n        providers: InterfaceNetworksProvider[]\n        consumers: InterfaceNetworksConsumer[]\n    }\n    virtual_machines: VirtualMachine[]\n}\n/**\n * Classe che contiene gli attributi che indicano i vincoli di connessione del modulo per l'export.\n */\nexport class ConstraintsMSD {\n    interface_constraints: InterfaceConstraints[]\n    module_constraints: ModuleConstraints[]\n    network_constraints: NetworkConstraints[]\n}\n/**\n * Classe che contiene gli attributi che indicano i viconli per le interfacce di connessione del modulo.\n */\nexport class InterfaceConstraints {\n    local_interface: string\n    multiple_mode: boolean = false //future\n    module_name: string\n    compatibility: string = \"1.0\" // future\n    remote_interface: string\n}\n/**\n * Classe che contiene gli attributi che indicano i viconli del modulo.\n */\nexport class ModuleConstraints {\n}\n/**\n * Classe che contiene gli attributi che indicano i viconli dei network del modulo.\n */\nexport class NetworkConstraints {\n}\n/**\n * Classe che contiene gli attributi che indicano le interfacce provider del modulo.\n */\nexport class InterfaceNetworksProvider {\n    interface: string\n    network: string\n    tag: string\n    subnets: SubnetExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano le interfacce consumer del modulo.\n */\nexport class InterfaceNetworksConsumer {\n    interface: string\n    network: string\n    tag: string\n    subnets: SubnetExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano l'insieme di host presenti in un modulo.\n */\nexport class VirtualMachine {\n    virtual_machine: string\n    ports: VirtualMachinePorts[]\n}\n/**\n * Classe che contiene gli attributi che indicano le porte associate ad un host di un modulo.\n */\nexport class VirtualMachinePorts {\n    port: string\n    network: string\n    subnets: SubnetExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano la subnet connessa alla porte dell'host.\n * @see {VirtualMachinePorts}\n */\nexport class SubnetExport {\n    subnet: string;\n}\n\n/**\n * Classe che contiene gli attributi che indica un nodo all'interno dei node_templates.\n * @see {ModuleExport}\n */\nexport class NodeSimpleData {\n    type: NodeTypeExport\n    properties: any | null // future\n    interfaces: any | null // future\n    relationships: RelationshipsExport[]\n}\n\n/**\n * Classe che contiene gli attributi che indicano le relazioni generali.\n */\nexport class RelationshipsExport {\n    type: RelationshipsTypeExport\n    target: string\n}\n/**\n * Classe che contiene gli attributi che indicano i dati della porta all'interno dei node_templates.\n */\nexport class PortSimpleData {\n    type: PortTypeExport\n    relationships: RelationshipsExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano i dati delle network all'interno dei node_templates.\n */\nexport class NetworkSimpleData {\n    type: NetworkTypeExport\n    properties: PropertiesNSD\n}\n/**\n * Classe che contiene gli attributi che indicano le proprietà della network all'interno dei node_templates.\n * @see {NetworkSimpleData}\n */\nexport class PropertiesNSD {\n    openstack_config?: any | null // future\n    use_external_resource?: boolean | null // future\n    resource_id?: any | null // future\n}\n\n/**\n * Classe che contiene gli attributi che indicano i dati delle subnet all'interno dei node_templates.\n */\nexport class SubnetSimpleData {\n    type: SubnetTypeExport\n    relationships: RelationshipsExport[]\n    properties: PropertiesSSD\n}\n/**\n * Classe che contiene gli attributi che indicano le proprietà della subnet all'interno dei node_templates.\n * @see {NetworkSimpleData}\n */\nexport class PropertiesSSD {\n    subnet?: {\n        ip_version: string | number\n        cidr: string\n        enable_dhcp: boolean\n        gateway_ip?: any | null // future\n    }\n    openstack_config?: any | null // future\n    use_external_resource?: boolean | null // future\n    resource_id?: any | null // future\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/PropertiesNSD.html":{"url":"classes/PropertiesNSD.html","title":"class - PropertiesNSD","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  PropertiesNSD\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsExport/moduleExport.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano le proprietà della network all'interno dei node_templates.\nSee {NetworkSimpleData}\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                    Opzionale\n                                openstack_config\n                            \n                            \n                                    Opzionale\n                                resource_id\n                            \n                            \n                                    Opzionale\n                                use_external_resource\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        openstack_config\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     any | null\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:146\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        resource_id\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     any | null\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:148\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        use_external_resource\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     boolean | null\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:147\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ModeTypeExport, ModuleTypeExport, NetworkTypeExport, NodeTypeExport, PortTypeExport, RelationshipsTypeExport, SubnetTypeExport, ToscaDefinitionType } from \"./TypeExport\"\n\n\n/**\n * Classe utilizzata per l'export. \n * Contiene le informazioni generali per il modulo che devono esserci nello standard Tosca.\n */\nexport class ModuleExport {\n    tosca_definitions_version: ToscaDefinitionType\n    description: string\n    imports: string[]\n    node_templates: { [name: string]: ModuleSimpleData | NodeSimpleData | PortSimpleData | NetworkSimpleData | SubnetSimpleData }\n    dsl_definition: any | null; //future\n    capabilites: any | null //future\n    outputs: any | null //future\n}\n\n/**\n * Classe che contiene gli attributi che indicano la rappresentazione del modulo per l'export.\n */\nexport class ModuleSimpleData {\n    type: ModuleTypeExport\n    properties: PropertiesMSD\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà del modulo per l'export.\n */\nexport class PropertiesMSD {\n    mode: ModeTypeExport\n    description: string\n    version: string | number\n    constraints: ConstraintsMSD\n    interface_networks: {\n        providers: InterfaceNetworksProvider[]\n        consumers: InterfaceNetworksConsumer[]\n    }\n    virtual_machines: VirtualMachine[]\n}\n/**\n * Classe che contiene gli attributi che indicano i vincoli di connessione del modulo per l'export.\n */\nexport class ConstraintsMSD {\n    interface_constraints: InterfaceConstraints[]\n    module_constraints: ModuleConstraints[]\n    network_constraints: NetworkConstraints[]\n}\n/**\n * Classe che contiene gli attributi che indicano i viconli per le interfacce di connessione del modulo.\n */\nexport class InterfaceConstraints {\n    local_interface: string\n    multiple_mode: boolean = false //future\n    module_name: string\n    compatibility: string = \"1.0\" // future\n    remote_interface: string\n}\n/**\n * Classe che contiene gli attributi che indicano i viconli del modulo.\n */\nexport class ModuleConstraints {\n}\n/**\n * Classe che contiene gli attributi che indicano i viconli dei network del modulo.\n */\nexport class NetworkConstraints {\n}\n/**\n * Classe che contiene gli attributi che indicano le interfacce provider del modulo.\n */\nexport class InterfaceNetworksProvider {\n    interface: string\n    network: string\n    tag: string\n    subnets: SubnetExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano le interfacce consumer del modulo.\n */\nexport class InterfaceNetworksConsumer {\n    interface: string\n    network: string\n    tag: string\n    subnets: SubnetExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano l'insieme di host presenti in un modulo.\n */\nexport class VirtualMachine {\n    virtual_machine: string\n    ports: VirtualMachinePorts[]\n}\n/**\n * Classe che contiene gli attributi che indicano le porte associate ad un host di un modulo.\n */\nexport class VirtualMachinePorts {\n    port: string\n    network: string\n    subnets: SubnetExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano la subnet connessa alla porte dell'host.\n * @see {VirtualMachinePorts}\n */\nexport class SubnetExport {\n    subnet: string;\n}\n\n/**\n * Classe che contiene gli attributi che indica un nodo all'interno dei node_templates.\n * @see {ModuleExport}\n */\nexport class NodeSimpleData {\n    type: NodeTypeExport\n    properties: any | null // future\n    interfaces: any | null // future\n    relationships: RelationshipsExport[]\n}\n\n/**\n * Classe che contiene gli attributi che indicano le relazioni generali.\n */\nexport class RelationshipsExport {\n    type: RelationshipsTypeExport\n    target: string\n}\n/**\n * Classe che contiene gli attributi che indicano i dati della porta all'interno dei node_templates.\n */\nexport class PortSimpleData {\n    type: PortTypeExport\n    relationships: RelationshipsExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano i dati delle network all'interno dei node_templates.\n */\nexport class NetworkSimpleData {\n    type: NetworkTypeExport\n    properties: PropertiesNSD\n}\n/**\n * Classe che contiene gli attributi che indicano le proprietà della network all'interno dei node_templates.\n * @see {NetworkSimpleData}\n */\nexport class PropertiesNSD {\n    openstack_config?: any | null // future\n    use_external_resource?: boolean | null // future\n    resource_id?: any | null // future\n}\n\n/**\n * Classe che contiene gli attributi che indicano i dati delle subnet all'interno dei node_templates.\n */\nexport class SubnetSimpleData {\n    type: SubnetTypeExport\n    relationships: RelationshipsExport[]\n    properties: PropertiesSSD\n}\n/**\n * Classe che contiene gli attributi che indicano le proprietà della subnet all'interno dei node_templates.\n * @see {NetworkSimpleData}\n */\nexport class PropertiesSSD {\n    subnet?: {\n        ip_version: string | number\n        cidr: string\n        enable_dhcp: boolean\n        gateway_ip?: any | null // future\n    }\n    openstack_config?: any | null // future\n    use_external_resource?: boolean | null // future\n    resource_id?: any | null // future\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/PropertiesSSD.html":{"url":"classes/PropertiesSSD.html","title":"class - PropertiesSSD","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  PropertiesSSD\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsExport/moduleExport.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano le proprietà della subnet all'interno dei node_templates.\nSee {NetworkSimpleData}\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                    Opzionale\n                                openstack_config\n                            \n                            \n                                    Opzionale\n                                resource_id\n                            \n                            \n                                    Opzionale\n                                subnet\n                            \n                            \n                                    Opzionale\n                                use_external_resource\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        openstack_config\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     any | null\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:170\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        resource_id\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     any | null\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:172\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        subnet\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     literal type\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:164\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        use_external_resource\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     boolean | null\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:171\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ModeTypeExport, ModuleTypeExport, NetworkTypeExport, NodeTypeExport, PortTypeExport, RelationshipsTypeExport, SubnetTypeExport, ToscaDefinitionType } from \"./TypeExport\"\n\n\n/**\n * Classe utilizzata per l'export. \n * Contiene le informazioni generali per il modulo che devono esserci nello standard Tosca.\n */\nexport class ModuleExport {\n    tosca_definitions_version: ToscaDefinitionType\n    description: string\n    imports: string[]\n    node_templates: { [name: string]: ModuleSimpleData | NodeSimpleData | PortSimpleData | NetworkSimpleData | SubnetSimpleData }\n    dsl_definition: any | null; //future\n    capabilites: any | null //future\n    outputs: any | null //future\n}\n\n/**\n * Classe che contiene gli attributi che indicano la rappresentazione del modulo per l'export.\n */\nexport class ModuleSimpleData {\n    type: ModuleTypeExport\n    properties: PropertiesMSD\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà del modulo per l'export.\n */\nexport class PropertiesMSD {\n    mode: ModeTypeExport\n    description: string\n    version: string | number\n    constraints: ConstraintsMSD\n    interface_networks: {\n        providers: InterfaceNetworksProvider[]\n        consumers: InterfaceNetworksConsumer[]\n    }\n    virtual_machines: VirtualMachine[]\n}\n/**\n * Classe che contiene gli attributi che indicano i vincoli di connessione del modulo per l'export.\n */\nexport class ConstraintsMSD {\n    interface_constraints: InterfaceConstraints[]\n    module_constraints: ModuleConstraints[]\n    network_constraints: NetworkConstraints[]\n}\n/**\n * Classe che contiene gli attributi che indicano i viconli per le interfacce di connessione del modulo.\n */\nexport class InterfaceConstraints {\n    local_interface: string\n    multiple_mode: boolean = false //future\n    module_name: string\n    compatibility: string = \"1.0\" // future\n    remote_interface: string\n}\n/**\n * Classe che contiene gli attributi che indicano i viconli del modulo.\n */\nexport class ModuleConstraints {\n}\n/**\n * Classe che contiene gli attributi che indicano i viconli dei network del modulo.\n */\nexport class NetworkConstraints {\n}\n/**\n * Classe che contiene gli attributi che indicano le interfacce provider del modulo.\n */\nexport class InterfaceNetworksProvider {\n    interface: string\n    network: string\n    tag: string\n    subnets: SubnetExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano le interfacce consumer del modulo.\n */\nexport class InterfaceNetworksConsumer {\n    interface: string\n    network: string\n    tag: string\n    subnets: SubnetExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano l'insieme di host presenti in un modulo.\n */\nexport class VirtualMachine {\n    virtual_machine: string\n    ports: VirtualMachinePorts[]\n}\n/**\n * Classe che contiene gli attributi che indicano le porte associate ad un host di un modulo.\n */\nexport class VirtualMachinePorts {\n    port: string\n    network: string\n    subnets: SubnetExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano la subnet connessa alla porte dell'host.\n * @see {VirtualMachinePorts}\n */\nexport class SubnetExport {\n    subnet: string;\n}\n\n/**\n * Classe che contiene gli attributi che indica un nodo all'interno dei node_templates.\n * @see {ModuleExport}\n */\nexport class NodeSimpleData {\n    type: NodeTypeExport\n    properties: any | null // future\n    interfaces: any | null // future\n    relationships: RelationshipsExport[]\n}\n\n/**\n * Classe che contiene gli attributi che indicano le relazioni generali.\n */\nexport class RelationshipsExport {\n    type: RelationshipsTypeExport\n    target: string\n}\n/**\n * Classe che contiene gli attributi che indicano i dati della porta all'interno dei node_templates.\n */\nexport class PortSimpleData {\n    type: PortTypeExport\n    relationships: RelationshipsExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano i dati delle network all'interno dei node_templates.\n */\nexport class NetworkSimpleData {\n    type: NetworkTypeExport\n    properties: PropertiesNSD\n}\n/**\n * Classe che contiene gli attributi che indicano le proprietà della network all'interno dei node_templates.\n * @see {NetworkSimpleData}\n */\nexport class PropertiesNSD {\n    openstack_config?: any | null // future\n    use_external_resource?: boolean | null // future\n    resource_id?: any | null // future\n}\n\n/**\n * Classe che contiene gli attributi che indicano i dati delle subnet all'interno dei node_templates.\n */\nexport class SubnetSimpleData {\n    type: SubnetTypeExport\n    relationships: RelationshipsExport[]\n    properties: PropertiesSSD\n}\n/**\n * Classe che contiene gli attributi che indicano le proprietà della subnet all'interno dei node_templates.\n * @see {NetworkSimpleData}\n */\nexport class PropertiesSSD {\n    subnet?: {\n        ip_version: string | number\n        cidr: string\n        enable_dhcp: boolean\n        gateway_ip?: any | null // future\n    }\n    openstack_config?: any | null // future\n    use_external_resource?: boolean | null // future\n    resource_id?: any | null // future\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/PropertiesTSD.html":{"url":"classes/PropertiesTSD.html","title":"class - PropertiesTSD","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  PropertiesTSD\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsExport/theaterExport.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano le proprietà del teatro.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                areas\n                            \n                            \n                                author\n                            \n                            \n                                description\n                            \n                            \n                                mode\n                            \n                            \n                                tags\n                            \n                            \n                                version\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        areas\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         AreaExport[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/theaterExport.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        author\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/theaterExport.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/theaterExport.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ModeTypeExport\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/theaterExport.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tags\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         TagsExport[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/theaterExport.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/theaterExport.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ModeTypeExport, ModuleTypeExport, TheaterTypeExport, ToscaDefinitionType } from \"./TypeExport\"\n\n/**\n * Classe utilizzata per l'export. \n * Contiene le informazioni generali per il teatro che devono esserci nello standard Tosca.\n */\nexport class TheaterExport {\n    tosca_definitions_version: ToscaDefinitionType\n    description: string\n    imports: string[]\n    node_templates: { [name: string]: TheaterSimpleData | ModuleInstanceSimpleData }\n}\n/**\n * Classe che contiene gli attributi che indicano il teatro all'interno dei node_templates.\n */\nexport class TheaterSimpleData {\n    type: TheaterTypeExport\n    properties: PropertiesTSD\n}\n/**\n * Classe che contiene gli attributi che indicano le proprietà del teatro.\n */\nexport class PropertiesTSD {\n    version: string | number\n    description: string\n    mode: ModeTypeExport\n    author: string\n    tags: TagsExport[]\n    areas: AreaExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano i tag nelle proprietà del teatro.\n * @see {PropertiesTSD}\n */\nexport class TagsExport {\n    tag: string\n}\n/**\n * Classe che contiene gli attributi che indicano le aree nelle proprietà del teatr.\n * @see {PropertiesTSD}\n */\nexport class AreaExport {\n    area: string\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano il modulo all'interno dei node_modules.\n */\nexport class ModuleInstanceSimpleData {\n    type: ModuleTypeExport\n    properties: PropertiesMISD\n}\n/**\n * Classe che contiene gli attributi che indicano le propeitò del modulo all'interno dei node_templates.\n */\nexport class PropertiesMISD{\n    module: string\n    version: string | number\n    area: string\n    sequence: number\n    sources?: SourceExport[]\n    consumer_interface_link: ConsumerInterfaceLinkExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano le porte di ingresso del modulo all'interno dei node_templates.\n */\nexport class SourceExport{\n    module_instance: string\n    host:string\n    interfaces: string[]\n}\n/**\n * Classe che contiene gli attributi che indicano i collegamenti e relazioni intramodulo con le varie interfacce.\n */\nexport class ConsumerInterfaceLinkExport{\n    local_interface: string\n    module_interface:string\n    remote_interface:string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/RelationshipsExport.html":{"url":"classes/RelationshipsExport.html","title":"class - RelationshipsExport","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  RelationshipsExport\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsExport/moduleExport.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano le relazioni generali.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                target\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:125\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         RelationshipsTypeExport\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:124\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ModeTypeExport, ModuleTypeExport, NetworkTypeExport, NodeTypeExport, PortTypeExport, RelationshipsTypeExport, SubnetTypeExport, ToscaDefinitionType } from \"./TypeExport\"\n\n\n/**\n * Classe utilizzata per l'export. \n * Contiene le informazioni generali per il modulo che devono esserci nello standard Tosca.\n */\nexport class ModuleExport {\n    tosca_definitions_version: ToscaDefinitionType\n    description: string\n    imports: string[]\n    node_templates: { [name: string]: ModuleSimpleData | NodeSimpleData | PortSimpleData | NetworkSimpleData | SubnetSimpleData }\n    dsl_definition: any | null; //future\n    capabilites: any | null //future\n    outputs: any | null //future\n}\n\n/**\n * Classe che contiene gli attributi che indicano la rappresentazione del modulo per l'export.\n */\nexport class ModuleSimpleData {\n    type: ModuleTypeExport\n    properties: PropertiesMSD\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà del modulo per l'export.\n */\nexport class PropertiesMSD {\n    mode: ModeTypeExport\n    description: string\n    version: string | number\n    constraints: ConstraintsMSD\n    interface_networks: {\n        providers: InterfaceNetworksProvider[]\n        consumers: InterfaceNetworksConsumer[]\n    }\n    virtual_machines: VirtualMachine[]\n}\n/**\n * Classe che contiene gli attributi che indicano i vincoli di connessione del modulo per l'export.\n */\nexport class ConstraintsMSD {\n    interface_constraints: InterfaceConstraints[]\n    module_constraints: ModuleConstraints[]\n    network_constraints: NetworkConstraints[]\n}\n/**\n * Classe che contiene gli attributi che indicano i viconli per le interfacce di connessione del modulo.\n */\nexport class InterfaceConstraints {\n    local_interface: string\n    multiple_mode: boolean = false //future\n    module_name: string\n    compatibility: string = \"1.0\" // future\n    remote_interface: string\n}\n/**\n * Classe che contiene gli attributi che indicano i viconli del modulo.\n */\nexport class ModuleConstraints {\n}\n/**\n * Classe che contiene gli attributi che indicano i viconli dei network del modulo.\n */\nexport class NetworkConstraints {\n}\n/**\n * Classe che contiene gli attributi che indicano le interfacce provider del modulo.\n */\nexport class InterfaceNetworksProvider {\n    interface: string\n    network: string\n    tag: string\n    subnets: SubnetExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano le interfacce consumer del modulo.\n */\nexport class InterfaceNetworksConsumer {\n    interface: string\n    network: string\n    tag: string\n    subnets: SubnetExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano l'insieme di host presenti in un modulo.\n */\nexport class VirtualMachine {\n    virtual_machine: string\n    ports: VirtualMachinePorts[]\n}\n/**\n * Classe che contiene gli attributi che indicano le porte associate ad un host di un modulo.\n */\nexport class VirtualMachinePorts {\n    port: string\n    network: string\n    subnets: SubnetExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano la subnet connessa alla porte dell'host.\n * @see {VirtualMachinePorts}\n */\nexport class SubnetExport {\n    subnet: string;\n}\n\n/**\n * Classe che contiene gli attributi che indica un nodo all'interno dei node_templates.\n * @see {ModuleExport}\n */\nexport class NodeSimpleData {\n    type: NodeTypeExport\n    properties: any | null // future\n    interfaces: any | null // future\n    relationships: RelationshipsExport[]\n}\n\n/**\n * Classe che contiene gli attributi che indicano le relazioni generali.\n */\nexport class RelationshipsExport {\n    type: RelationshipsTypeExport\n    target: string\n}\n/**\n * Classe che contiene gli attributi che indicano i dati della porta all'interno dei node_templates.\n */\nexport class PortSimpleData {\n    type: PortTypeExport\n    relationships: RelationshipsExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano i dati delle network all'interno dei node_templates.\n */\nexport class NetworkSimpleData {\n    type: NetworkTypeExport\n    properties: PropertiesNSD\n}\n/**\n * Classe che contiene gli attributi che indicano le proprietà della network all'interno dei node_templates.\n * @see {NetworkSimpleData}\n */\nexport class PropertiesNSD {\n    openstack_config?: any | null // future\n    use_external_resource?: boolean | null // future\n    resource_id?: any | null // future\n}\n\n/**\n * Classe che contiene gli attributi che indicano i dati delle subnet all'interno dei node_templates.\n */\nexport class SubnetSimpleData {\n    type: SubnetTypeExport\n    relationships: RelationshipsExport[]\n    properties: PropertiesSSD\n}\n/**\n * Classe che contiene gli attributi che indicano le proprietà della subnet all'interno dei node_templates.\n * @see {NetworkSimpleData}\n */\nexport class PropertiesSSD {\n    subnet?: {\n        ip_version: string | number\n        cidr: string\n        enable_dhcp: boolean\n        gateway_ip?: any | null // future\n    }\n    openstack_config?: any | null // future\n    use_external_resource?: boolean | null // future\n    resource_id?: any | null // future\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/ReteConnection.html":{"url":"classes/ReteConnection.html","title":"class - ReteConnection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  ReteConnection\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsApplication/applicationModels.ts\n        \n\n\n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                from\n                            \n                            \n                                port_dst\n                            \n                            \n                                port_src\n                            \n                            \n                                to\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        from\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsApplication/applicationModels.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        port_dst\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsApplication/applicationModels.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        port_src\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsApplication/applicationModels.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        to\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsApplication/applicationModels.ts:56\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ReteHostInfo } from \"src/app/rete-settings/nodes/rete-nodes/host/hostNode\";\nimport { ReteNetworkInfo } from \"src/app/rete-settings/nodes/rete-nodes/network/networkNode\";\nimport { ReteSubnetInfo } from \"src/app/rete-settings/nodes/rete-nodes/subnet/subnetNode\";\nimport { ReteMirroringModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/mirroringModuleInstance/mirroringModuleInstanceNode\";\nimport { ReteTheaterInternalServiceModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/theaterInternalServiceModuleInstance/theaterInternalServiceModuleInstanceNode\";\nimport { ReteTheaterModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/theaterModuleInstance/theaterModuleInstanceNode\";\nimport { FlavorBasicInfo } from \"../modelsDTO/falvorDTO\";\nimport { HostModuleDTO } from \"../modelsDTO/hostDTO\";\nimport { ModuleNetworkInterfaceDTO, ModuleInstancePropertiesDTO, SimpleModuleDTO, TheaterInstancePropertiesDTO, ModuleInstanceDTO, ModuleDTO, SimpleAreaDTO, AreaDTO } from \"../modelsDTO/moduleDTO\";\nimport { TheaterDTO } from \"../modelsDTO/theaterDTO\";\n\n\nexport interface CommonModule {\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n}\n\n\n/**\n * Classe contenente gli attributi utilizzati per le operazioni che coinvolgono i moduli.\n * ps. Questa struttura è prettamente utilizzata nella chiamata relativa al singolo modulo.\n */\nexport class ModuleApplication extends ModuleDTO implements CommonModule {\n    imports: string[] // perchè nell'export yaml è previsto\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n    // serve per validare il json risultante dal parsing del theaterApplication\n    validateObject?: string = \"module\";\n}\n// PER IMPLEMENTAZIONI FUTURE, PER COERENZA, PRENDERE DIRETTAMENTE I SINGOLI NODI DALLA CHIAMATA ESCLUSIVA E NON DA QUELLA CHE RESTITUISCE TUTTI I TEATRI\n/**\n * Classe contenente gli attributi utilizzati per le operazioni che coinvolgono i moduli.\n * ps. Questa struttura è prettamente utilizzata nella chiamata che prende tutti i moduli del teatro.\n */\nexport class SimpleModuleApplication extends SimpleModuleDTO implements CommonModule {\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n}\n\n\nexport class ReteConnection {\n    from: string;\n    port_src: string;\n    to: string;\n    port_dst: string;\n}\n\nexport interface TopologyList {\n    rete: any;\n    topology?: TopologyElement\n}\nexport class TopologyElement {\n    elements: { [name: string]: any };\n    connection: ReteConnection[]\n}\n\n// apptype module topology\n\nexport class NodeTopologyElement implements TopologyElement {\n    elements: { [hostName: string]: ReteHostInfo | ReteSubnetInfo | ReteNetworkInfo };\n    connection: ReteConnection[]\n}\n\nexport interface ModuleTopology extends TopologyList {\n    rete: ReteMirroringModuleInstanceInfo | ReteTheaterInternalServiceModuleInstanceInfo | ReteTheaterModuleInstanceInfo\n    topology: NodeTopologyElement;\n}\n\nexport class ModuleInstance extends ModuleInstanceDTO implements ModuleTopology {\n    // moduleTopology data\n    rete: ReteTheaterModuleInstanceInfo | ReteTheaterInternalServiceModuleInstanceInfo | ReteMirroringModuleInstanceInfo;\n    topology: NodeTopologyElement;\n    // other data\n    moduleInfo: SimpleModuleApplication\n}\n\n// apptype theater theater\n\nexport interface TheaterTopology extends TopologyElement {\n    elements: { [hostName: string]: ModuleInstance };\n    connection: ReteConnection[];\n}\n\nexport class TheaterApplication extends TheaterDTO implements TheaterTopology {\n    // theaterTopology data\n    elements: { [hostName: string]: ModuleInstance; };\n    connection: ReteConnection[];\n    // other data\n    properties: TheaterInstancePropertiesDTO;\n    topology: TheaterTopology;\n    // serve per validare il json risultante dal parsing del theaterApplication\n    validateObject?: string = \"theater\";\n}\n\nexport class AreaApplication extends AreaDTO {\n    color?: string;\n}\nexport class AreaColorDTO extends SimpleAreaDTO {\n    color: string;\n}\n\n\nexport class FlavorApplication extends FlavorBasicInfo {\n    flavorName: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/ReteHostInfo.html":{"url":"classes/ReteHostInfo.html","title":"class - ReteHostInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  ReteHostInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/rete-settings/nodes/rete-nodes/host/hostNode.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe utilizzata per indicare il tipo di modulo HostNode.\nSee {reteBasicModuleInfo}\n\n            \n\n            \n                Extends\n            \n            \n                        reteBasicNodeInfo\n            \n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                cpu\n                            \n                            \n                                disk\n                            \n                            \n                                flavorName\n                            \n                            \n                                os\n                            \n                            \n                                ram\n                            \n                            \n                                type\n                            \n                            \n                                Input\n                            \n                            \n                                name\n                            \n                            \n                                Output\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        cpu\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     number | string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-nodes/host/hostNode.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        disk\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     number | string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-nodes/host/hostNode.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        flavorName\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-nodes/host/hostNode.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        os\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-nodes/host/hostNode.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ram\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     number | string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-nodes/host/hostNode.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         EnumNodeType.Host\n\n                    \n                \n                        \n                            \n                                ereditato da         reteBasicNodeInfo\n\n                            \n                        \n                    \n                        \n                                Definito in         reteBasicNodeInfo:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Input\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string[]\n\n                    \n                \n                        \n                            \n                                ereditato da         reteBasicNodeInfo\n\n                            \n                        \n                    \n                        \n                                Definito in         reteBasicNodeInfo:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         reteBasicNodeInfo\n\n                            \n                        \n                    \n                        \n                                Definito in         reteBasicNodeInfo:10\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Output\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string[]\n\n                    \n                \n                        \n                            \n                                ereditato da         reteBasicNodeInfo\n\n                            \n                        \n                    \n                        \n                                Definito in         reteBasicNodeInfo:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Component, Input, Output, Node } from 'rete';\nimport { _Socket } from '../../../sockets/socket';\nimport { _Control } from '../../../controls/control';\nimport { AngularComponent, AngularComponentData } from 'rete-angular-render-plugin';\nimport { HostComponent } from '../../../nodes/rete-nodes/host/host.component'\nimport { NodeData, WorkerInputs, WorkerOutputs } from 'rete/types/core/data';\nimport {  reteBasicNodeInfo } from '../../reteBasic';\nimport { EnumNodeType } from 'src/app/models/appType';\n\n/**\n * Classe utilizzata per indicare il tipo di modulo HostNode.\n * @see {reteBasicModuleInfo}\n */\nexport class ReteHostInfo extends reteBasicNodeInfo {\n  os: string;\n  flavorName: string;\n  cpu: number | string;\n  disk: number | string;\n  ram: number | string;\n  type: EnumNodeType.Host\n}\n\n/**\n * Funzione dichiarata in HostNode. \n * Essa ha lo scopo di generare una struttura dati empty.\n * Viene utilizzata in per instanziare un nodo del tipo di ritorno indicato senza dati.\n * @returns {ReteSubnetInfo}\n */\nexport function getEmptyHostInfo(): ReteHostInfo {\n  let x: ReteHostInfo = {\n    os: \"\",\n    Input: [],\n    Output: [],\n    name: \"\",\n    type: EnumNodeType.Host,\n    cpu: '',\n    disk: '',\n    ram: '',\n    flavorName: ''\n  };\n  return x;\n}\n\n/**\n * Classe che rappresenta il nodo (rete-node) Host all'interno del canvas/editor di rete.\n */\nexport class HostNode extends Component implements AngularComponent {\n\n  data: AngularComponentData;\n\n    /**\n   * Costruttore di HostNode\n   */\n  constructor() {\n    super(EnumNodeType.Host);\n    this.data.render = 'angular';\n    this.data.component = HostComponent;\n  }\n\n  /**\n   * Funzione richiamata in fase di costruzione del nodo (rete-node).\n   * Controlla se bisogna instanziare il nodo oppure crearne uno nuovo:\n   * - In fase di design, il nodo non ha dati, per cui bisogna crearne uno nuovo.\n   * - In fase di visualizing, il nodo presenta dei dati, per cui va valorizzato il nodo.\n   * @param node \n   */\n  async builder(node: Node) {\n    if (Object.keys(node.data).length === 0)\n      this.createNewNode(node)\n    else\n      this.valorizeNode(node)\n  }\n\n\n  /**\n   * Funzione che ha come scopo creare un nodo (rete-node).\n   * In particolare gli assegna una struttura vuota.\n   * @param node \n   */\n  createNewNode(node: Node) {\n    let t = getEmptyHostInfo()\n    node.data = {\n      ...node.data,\n      ...t\n    }\n  }\n\n\n  /**\n   * Funzione che ha come scopo la valorizzazione del nodo (rete-node) con i dati in suo possesso.\n   * In quasta fase avviene anche la fase iniziale di instanziamento delle porte input/output.\n   * @param node \n   */\n  valorizeNode(node: Node) {\n    var i: any = node.data['Input'];\n    var o: any = node.data['Output'];\n    var il = i.length;\n    var ol = o.length;\n\n    for (let index = 0; index \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/ReteMirroringModuleInstanceInfo.html":{"url":"classes/ReteMirroringModuleInstanceInfo.html","title":"class - ReteMirroringModuleInstanceInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  ReteMirroringModuleInstanceInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/rete-settings/nodes/rete-modules/mirroringModuleInstance/mirroringModuleInstanceNode.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe utilizzata per indicare il tipo di modulo MirroringModuleInstanceNode.\nSee {reteBasicModuleInfo}\n\n            \n\n            \n                Extends\n            \n            \n                        reteBasicModuleInfo\n            \n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                type\n                            \n                            \n                                host_number\n                            \n                            \n                                Input\n                            \n                            \n                                name\n                            \n                            \n                                network_number\n                            \n                            \n                                Output\n                            \n                            \n                                subnet_number\n                            \n                            \n                                area\n                            \n                            \n                                consumer_interfaces_link\n                            \n                            \n                                description\n                            \n                            \n                                module\n                            \n                            \n                                sequence\n                            \n                            \n                                version\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         EnumModuleType.MirroringModuleInstance\n\n                    \n                \n                        \n                            \n                                ereditato da         reteBasicModuleInfo\n\n                            \n                        \n                    \n                        \n                                Definito in         reteBasicModuleInfo:15\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        host_number\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         number\n\n                    \n                \n                        \n                            \n                                ereditato da         reteBasicModuleInfo\n\n                            \n                        \n                    \n                        \n                                Definito in         reteBasicModuleInfo:23\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Input\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string[]\n\n                    \n                \n                        \n                            \n                                ereditato da         reteBasicModuleInfo\n\n                            \n                        \n                    \n                        \n                                Definito in         reteBasicModuleInfo:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         reteBasicModuleInfo\n\n                            \n                        \n                    \n                        \n                                Definito in         reteBasicModuleInfo:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        network_number\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         number\n\n                    \n                \n                        \n                            \n                                ereditato da         reteBasicModuleInfo\n\n                            \n                        \n                    \n                        \n                                Definito in         reteBasicModuleInfo:24\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Output\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string[]\n\n                    \n                \n                        \n                            \n                                ereditato da         reteBasicModuleInfo\n\n                            \n                        \n                    \n                        \n                                Definito in         reteBasicModuleInfo:21\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subnet_number\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         number\n\n                    \n                \n                        \n                            \n                                ereditato da         reteBasicModuleInfo\n\n                            \n                        \n                    \n                        \n                                Definito in         reteBasicModuleInfo:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        area\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleInstancePropertiesDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleInstancePropertiesDTO:166\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        consumer_interfaces_link\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ConsumerInterfaceLinkDTO[]\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleInstancePropertiesDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleInstancePropertiesDTO:171\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleInstancePropertiesDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleInstancePropertiesDTO:167\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleInstancePropertiesDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleInstancePropertiesDTO:168\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sequence\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleInstancePropertiesDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleInstancePropertiesDTO:170\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleInstancePropertiesDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleInstancePropertiesDTO:169\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Component, Input, Output, Node } from 'rete';\nimport { _Socket } from '../../../sockets/socket';\nimport { _Control } from '../../../controls/control';\nimport { AngularComponent, AngularComponentData } from 'rete-angular-render-plugin';\nimport { NodeData, WorkerInputs, WorkerOutputs } from 'rete/types/core/data';\nimport { MirroringModuleInstanceComponent } from './mirroringModuleInstance.component';\nimport { reteBasicModuleInfo } from '../../reteBasic';\nimport { EnumModuleType } from 'src/app/models/appType';\n\n/**\n * Classe utilizzata per indicare il tipo di modulo MirroringModuleInstanceNode.\n * @see {reteBasicModuleInfo}\n */\nexport class ReteMirroringModuleInstanceInfo extends reteBasicModuleInfo {\n  type: EnumModuleType.MirroringModuleInstance;\n}\n\n/**\n * Funzione dichiarata in MirroringModuleInstanceNode. \n * Essa ha lo scopo di generare una struttura dati empty.\n * Viene utilizzata in per instanziare un nodo del tipo di ritorno indicato senza dati.\n * @returns {ReteMirroringModuleInstanceInfo}\n */\nexport function getEmptyReteMirroringModuleInstanceInfo(): ReteMirroringModuleInstanceInfo {\n  let x: ReteMirroringModuleInstanceInfo = {\n    Input: [],\n    Output: [],\n    description: \"\",\n    name: \"\",\n    type: EnumModuleType.MirroringModuleInstance,\n    area: \"\",\n    host_number: 0,\n    network_number: 0,\n    subnet_number: 0,\n    module: '',\n    version: '',\n    sequence: '',\n    consumer_interfaces_link: []\n  };\n  return x;\n}\n\n\n/**\n * Classe che rappresenta il modulo (rete-node) MirroringModuleInstance all'interno del canvas/editor di rete.\n */\nexport class MirroringModuleInstanceNode extends Component implements AngularComponent {\n\n  data: AngularComponentData;\n\n  /**\n   * Costruttore di MirroringModuleInstanceNode\n   */\n  constructor() {\n    super(EnumModuleType.MirroringModuleInstance);\n    this.data.render = 'angular';\n    this.data.component = MirroringModuleInstanceComponent;\n  }\n\n  /**\n   * Funzione richiamata in fase di costruzione del nodo (rete-node).\n   * Controlla se bisogna instanziare il nodo oppure crearne uno nuovo:\n   * - In fase di design, il nodo non ha dati, per cui bisogna crearne uno nuovo.\n   * - In fase di visualizing, il nodo presenta dei dati, per cui va valorizzato il nodo.\n   * @param node \n   */\n  async builder(node: Node) {\n    if (Object.keys(node.data).length === 0)\n      this.createNewNode(node)\n    else\n      this.valorizeNode(node)\n  }\n\n  /**\n   * Funzione che ha come scopo creare un nodo (rete-node).\n   * In particolare gli assegna una struttura vuota.\n   * @param node \n   */\n  createNewNode(node: Node) {\n    let t = getEmptyReteMirroringModuleInstanceInfo()\n    node.data = {\n      ...node.data,\n      ...t\n    }\n  }\n\n  /**\n   * Funzione che ha come scopo la valorizzazione del nodo (rete-node) con i dati in suo possesso.\n   * In quasta fase avviene anche la fase iniziale di instanziamento delle porte input/output.\n   * @param node \n   */\n  valorizeNode(node: Node) {\n    var i: any = node.data['Input'];\n    var o: any = node.data['Output'];\n    var il = i.length;\n    var ol = o.length;\n\n    for (let index = 0; index \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/ReteModuleComposerSettings.html":{"url":"classes/ReteModuleComposerSettings.html","title":"class - ReteModuleComposerSettings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  ReteModuleComposerSettings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/rete-settings/settings/editor-settings/reteModuleComposerSettings.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che ha lo scopo di eseguire i dovuti settaggi all'ambiente di rete.\nQuesta riguarda la parte di ReteModuleComposer\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                components\n                            \n                            \n                                container\n                            \n                            \n                                editor\n                            \n                            \n                                engine\n                            \n                            \n                                nodeSelected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                editorUSE\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Costruttore\n        \n            \n                \n                    \nconstructor(container: any, edito: NodeEditor, components: any, engine: Engine)\n                    \n                \n                        \n                            \n                                Definito in src/app/rete-settings/settings/editor-settings/reteModuleComposerSettings.ts:24\n                            \n                        \n\n                \n                    \n                            Costruttore di ReteModuleComposerSettings\n\n                            \n                                    Parametri :\n                                    \n                                        \n                                            \n                                                Nome\n                                                    Tipo\n                                                Opzionale\n                                            \n                                        \n                                        \n                                                \n                                                        container\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        edito\n                                                  \n                                                        \n                                                                    NodeEditor\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        components\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        engine\n                                                  \n                                                        \n                                                                    Engine\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        components\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     null\n\n                    \n                \n                \n                    \n                        Valore predefinito : null\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/settings/editor-settings/reteModuleComposerSettings.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        container\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     null\n\n                    \n                \n                \n                    \n                        Valore predefinito : null\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/settings/editor-settings/reteModuleComposerSettings.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editor\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     NodeEditor\n\n                    \n                \n                \n                    \n                        Valore predefinito : null\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/settings/editor-settings/reteModuleComposerSettings.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        engine\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     Engine\n\n                    \n                \n                \n                    \n                        Valore predefinito : null\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/settings/editor-settings/reteModuleComposerSettings.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nodeSelected\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         any\n\n                    \n                \n                \n                    \n                        Valore predefinito : {}\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/settings/editor-settings/reteModuleComposerSettings.ts:24\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        editorUSE\n                        \n                    \n                \n            \n            \n                \neditorUSE()\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/settings/editor-settings/reteModuleComposerSettings.ts:43\n                \n            \n\n\n            \n                \n                    Funzione che, una volta richiamata, setta l'editor i dovuti plugin.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Engine, NodeEditor, Node, Output as or, Input as ir } from \"rete\";\nimport ConnectionPlugin from 'rete-connection-plugin';\nimport ConnectionPathPlugin from 'rete-connection-path-plugin';\nimport ContextMenuPlugin from 'rete-context-menu-plugin';\nimport { AngularRenderPlugin } from 'rete-angular-render-plugin';\nimport AreaPlugin from 'rete-area-plugin';\nimport MinimapPlugin from 'rete-minimap-plugin';\nimport AutoArrangePlugin from 'rete-auto-arrange-plugin'\nimport DockPlugin from 'rete-dock-plugin';\nimport Vue from 'vue/dist/vue.esm';\nimport { _Socket } from '../../sockets/socket';\nimport HistoryPlugin from 'rete-history-plugin';\n\n\n/**\n * Classe che ha lo scopo di eseguire i dovuti settaggi all'ambiente di rete.\n * Questa riguarda la parte di ReteModuleComposer\n */\nexport class ReteModuleComposerSettings {\n    container = null;\n    editor: NodeEditor = null;\n    components = null;\n    engine: Engine = null;\n    nodeSelected: any = {};\n\n    /**\n     * Costruttore di ReteModuleComposerSettings\n     * @param container \n     * @param edito \n     * @param components \n     * @param engine \n     */\n    constructor(container: any, edito: NodeEditor, components: any, engine: Engine) {\n        this.container = container;\n        this.editor = edito;\n        this.components = components;\n        this.engine = engine;\n    }\n\n    /**\n     * Funzione che, una volta richiamata, setta l'editor i dovuti plugin.\n     */\n    editorUSE() {\n\n        this.editor.use(ConnectionPlugin);\n\n        this.editor.use(AngularRenderPlugin)//, { component: MyNodeComponent });\n\n        this.editor.use(MinimapPlugin, { Vue });\n\n        this.editor.use(HistoryPlugin, { keyboard: true });\n\n        this.editor.use(ContextMenuPlugin, {\n            searchBar: false,\n            components: {},\n            items: {\n                \"Undo\": () => {\n                    this.editor.trigger(\"undo\");\n                },\n                \"Redo\": () => {\n                    this.editor.trigger(\"redo\");\n                },\n                \"Show all nodes\": () => {\n                    AreaPlugin.zoomAt(this.editor, this.editor.nodes);\n                },\n                \"Editor\": () => {\n                    console.log(JSON.stringify(this.editor.toJSON()));\n                },\n                \"Nodes\": () => {\n                    var x = this.editor.toJSON();\n                    var z = [];\n                    for (let key in x) {\n                        let value = x[key];\n                        z.push(value);\n                    }\n                    return z;\n                }\n            },\n            allocate(component: any) {\n                return ['Create nodes'];\n            },\n            rename(component: any) {\n                return component.name;\n            },\n        });\n\n        this.editor.use(AreaPlugin, {\n            background: false, //righe\n            snap: false,\n            scaleExtent: { min: 0.1, max: 1 },\n            translateExtent: { width: 5000, height: 4000 }\n        })\n\n        this.editor.use(AutoArrangePlugin, {\n            // snap: {size: 64, dynamic: true},\n            margin: { x: 400, y: 100 },\n            depth: 0,\n            vertical: false,\n        })\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/ReteModuleVisualizerSettings.html":{"url":"classes/ReteModuleVisualizerSettings.html","title":"class - ReteModuleVisualizerSettings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  ReteModuleVisualizerSettings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/rete-settings/settings/editor-settings/reteModuleVisualizerSettings.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che ha lo scopo di eseguire i dovuti settaggi all'ambiente di rete.\nQuesta riguarda la parte di ReteModuleVisualizer\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                components\n                            \n                            \n                                container\n                            \n                            \n                                editor\n                            \n                            \n                                engine\n                            \n                            \n                                nodeSelected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                editorUSE\n                            \n                            \n                                editorUSE_simple\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Costruttore\n        \n            \n                \n                    \nconstructor(container: any, edito: NodeEditor, components: any, engine: Engine)\n                    \n                \n                        \n                            \n                                Definito in src/app/rete-settings/settings/editor-settings/reteModuleVisualizerSettings.ts:25\n                            \n                        \n\n                \n                    \n                            Costruttore di ReteModuleVisualizerSettings\n\n                            \n                                    Parametri :\n                                    \n                                        \n                                            \n                                                Nome\n                                                    Tipo\n                                                Opzionale\n                                            \n                                        \n                                        \n                                                \n                                                        container\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        edito\n                                                  \n                                                        \n                                                                    NodeEditor\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        components\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        engine\n                                                  \n                                                        \n                                                                    Engine\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        components\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     null\n\n                    \n                \n                \n                    \n                        Valore predefinito : null\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/settings/editor-settings/reteModuleVisualizerSettings.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        container\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     null\n\n                    \n                \n                \n                    \n                        Valore predefinito : null\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/settings/editor-settings/reteModuleVisualizerSettings.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editor\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     NodeEditor\n\n                    \n                \n                \n                    \n                        Valore predefinito : null\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/settings/editor-settings/reteModuleVisualizerSettings.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        engine\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     Engine\n\n                    \n                \n                \n                    \n                        Valore predefinito : null\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/settings/editor-settings/reteModuleVisualizerSettings.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nodeSelected\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         any\n\n                    \n                \n                \n                    \n                        Valore predefinito : {}\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/settings/editor-settings/reteModuleVisualizerSettings.ts:25\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        editorUSE\n                        \n                    \n                \n            \n            \n                \neditorUSE()\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/settings/editor-settings/reteModuleVisualizerSettings.ts:44\n                \n            \n\n\n            \n                \n                    Funzione che, una volta richiamata, setta l'editor i dovuti plugin.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editorUSE_simple\n                        \n                    \n                \n            \n            \n                \neditorUSE_simple()\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/settings/editor-settings/reteModuleVisualizerSettings.ts:107\n                \n            \n\n\n            \n                \n                    Funzione che, una volta richiamata, setta l'editor i dovuti plugin.\nQuesta è richiamata quando si renderizza l'editor in modalità simple.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Engine, NodeEditor, Node, Output as or, Input as ir } from \"rete\";\nimport ConnectionPlugin from 'rete-connection-plugin';\nimport ConnectionPathPlugin from 'rete-connection-path-plugin';\nimport ContextMenuPlugin from 'rete-context-menu-plugin';\nimport { AngularRenderPlugin } from 'rete-angular-render-plugin';\nimport AreaPlugin from 'rete-area-plugin';\nimport MinimapPlugin from 'rete-minimap-plugin';\nimport AutoArrangePlugin from 'rete-auto-arrange-plugin'\nimport DockPlugin from 'rete-dock-plugin';\nimport Vue from 'vue/dist/vue.esm';\nimport { _Socket } from '../../sockets/socket';\nimport ReadonlyPlugin from 'rete-readonly-plugin';\nimport HistoryPlugin from 'rete-history-plugin';\n\n\n/**\n * Classe che ha lo scopo di eseguire i dovuti settaggi all'ambiente di rete.\n * Questa riguarda la parte di ReteModuleVisualizer\n */\nexport class ReteModuleVisualizerSettings {\n  container = null;\n  editor: NodeEditor = null;\n  components = null;\n  engine: Engine = null;\n  nodeSelected: any = {};\n\n  /**\n   * Costruttore di ReteModuleVisualizerSettings\n   * @param container \n   * @param edito \n   * @param components \n   * @param engine \n   */\n  constructor(container: any, edito: NodeEditor, components: any, engine: Engine) {\n    this.container = container;\n    this.editor = edito;\n    this.components = components;\n    this.engine = engine;\n  }\n\n  /**\n   * Funzione che, una volta richiamata, setta l'editor i dovuti plugin.\n   */\n  editorUSE() {\n\n    this.editor.use(ConnectionPlugin);\n\n    this.editor.use(AngularRenderPlugin)//, { component: MyNodeComponent });\n\n    this.editor.use(MinimapPlugin, { Vue });\n\n    this.editor.use(HistoryPlugin, { keyboard: true });\n\n    this.editor.use(ContextMenuPlugin, {\n      searchBar: false,\n      components: {},\n      items: {\n        \"Undo\": () => {\n          this.editor.trigger(\"undo\");\n        },\n        \"Redo\": () => {\n          this.editor.trigger(\"redo\");\n        },\n        \"Show all nodes\": () => {\n          AreaPlugin.zoomAt(this.editor, this.editor.nodes);\n        },\n        \"Editor\": () => {\n          console.log(JSON.stringify(this.editor.toJSON()));\n        },\n        \"Nodes\": () => {\n          var x = this.editor.toJSON();\n          var z = [];\n          for (let key in x) {\n            let value = x[key];\n            z.push(value);\n          }\n          return z;\n        }\n      },\n      allocate(component: any) {\n        return null;\n      },\n      // rename(component) {\n      //   return component.name;\n      // }\n    });\n\n    this.editor.use(AreaPlugin, {\n      background: false, //righe\n      snap: false,\n      scaleExtent: { min: 0.1, max: 1 },\n      translateExtent: { width: 5000, height: 4000 }\n    })\n\n    this.editor.use(AutoArrangePlugin, {\n      // snap: {size: 64, dynamic: true},\n      margin: { x: 400, y: 100 },\n      depth: 0,\n      vertical: false,\n    })\n  }\n\n  /**\n   * Funzione che, una volta richiamata, setta l'editor i dovuti plugin.\n   * Questa è richiamata quando si renderizza l'editor in modalità simple.\n   */\n  editorUSE_simple() {\n\n    this.editor.use(ConnectionPlugin);\n    this.editor.use(AngularRenderPlugin)//, { component: MyNodeComponent });\n    this.editor.use(ContextMenuPlugin, {\n      searchBar: false,\n      components: {},\n      items: {\n        \"Show all nodes\": () => {\n          AreaPlugin.zoomAt(this.editor, this.editor.nodes);\n        },\n        \"Editor\": () => {\n          console.log(JSON.stringify(this.editor.toJSON()));\n        },\n        \"Nodes\": () => {\n          var x = this.editor.toJSON();\n          var z = [];\n          for (let key in x) {\n            let value = x[key];\n            z.push(value);\n          }\n          return z;\n        }\n      },\n      allocate(component: any) {\n        return null;\n      },\n      // rename(component) {\n      //   return component.name;\n      // }\n    });\n\n\n    this.editor.use(AreaPlugin, {\n      background: false, //righe\n      snap: false,\n      scaleExtent: { min: 0.1, max: 1 },\n      translateExtent: { width: 5000, height: 4000 }\n    })\n    this.editor.use(AutoArrangePlugin, {\n      margin: { x: 400, y: 200 },\n      depth: 1,\n      vertical: false,\n    })\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/ReteNetworkInfo.html":{"url":"classes/ReteNetworkInfo.html","title":"class - ReteNetworkInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  ReteNetworkInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/rete-settings/nodes/rete-nodes/network/networkNode.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe utilizzata per indicare il tipo di modulo NetworkNode.\nSee {reteBasicNodeInfo}\n\n            \n\n            \n                Extends\n            \n            \n                        reteBasicNodeInfo\n            \n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                externalInterfaceName\n                            \n                            \n                                externalInterfaceType\n                            \n                            \n                                type\n                            \n                            \n                                Input\n                            \n                            \n                                name\n                            \n                            \n                                Output\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        externalInterfaceName\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-nodes/network/networkNode.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        externalInterfaceType\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         InterfacePortType\n\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-nodes/network/networkNode.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         EnumNodeType.Network\n\n                    \n                \n                        \n                            \n                                ereditato da         reteBasicNodeInfo\n\n                            \n                        \n                    \n                        \n                                Definito in         reteBasicNodeInfo:15\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Input\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string[]\n\n                    \n                \n                        \n                            \n                                ereditato da         reteBasicNodeInfo\n\n                            \n                        \n                    \n                        \n                                Definito in         reteBasicNodeInfo:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         reteBasicNodeInfo\n\n                            \n                        \n                    \n                        \n                                Definito in         reteBasicNodeInfo:10\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Output\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string[]\n\n                    \n                \n                        \n                            \n                                ereditato da         reteBasicNodeInfo\n\n                            \n                        \n                    \n                        \n                                Definito in         reteBasicNodeInfo:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Component, Input, Output, Node } from 'rete';\nimport { _Socket } from '../../../sockets/socket';\nimport { _Control } from '../../../controls/control';\nimport { AngularComponent, AngularComponentData } from 'rete-angular-render-plugin';\nimport { NetworkComponent } from './network.component';\nimport { NodeData, WorkerInputs, WorkerOutputs } from 'rete/types/core/data';\nimport {  reteBasicNodeInfo } from '../../reteBasic';\nimport { EnumNodeType, InterfacePortType } from 'src/app/models/appType';\n\n/**\n * Classe utilizzata per indicare il tipo di modulo NetworkNode.\n * @see {reteBasicNodeInfo}\n */\nexport class ReteNetworkInfo extends reteBasicNodeInfo {\n  type: EnumNodeType.Network;\n  externalInterfaceName: string;\n  externalInterfaceType: InterfacePortType;\n}\n\n/**\n * Funzione dichiarata in NetworkNode. \n * Essa ha lo scopo di generare una struttura dati empty.\n * Viene utilizzata in per instanziare un nodo del tipo di ritorno indicato senza dati.\n * @returns {ReteSubnetInfo}\n */\nexport function getEmptyNetworkInfo():ReteNetworkInfo {\n  let x: ReteNetworkInfo = {\n    Input: [],\n    Output: [],\n    name: \"\",\n    type: EnumNodeType.Network,\n    externalInterfaceName: '',\n    externalInterfaceType: undefined\n  };\n  return x;\n\n}\n\n\n/**\n * Classe che rappresenta il nodo (rete-node) Network all'interno del canvas/editor di rete.\n */\nexport class NetworkNode extends Component implements AngularComponent {\n\n  data: AngularComponentData;\n\n  /**\n   * Costruttore di NetworkNode\n   */\n  constructor() {\n    super(EnumNodeType.Network);\n    this.data.render = 'angular';\n    this.data.component = NetworkComponent;\n  }\n\n  /**\n   * Funzione richiamata in fase di costruzione del nodo (rete-node).\n   * Controlla se bisogna instanziare il nodo oppure crearne uno nuovo:\n   * - In fase di design, il nodo non ha dati, per cui bisogna crearne uno nuovo.\n   * - In fase di visualizing, il nodo presenta dei dati, per cui va valorizzato il nodo.\n   * @param node \n   */\n  async builder(node: Node) {\n    if (Object.keys(node.data).length === 0)\n      this.createNewNode(node)\n    else\n      this.valorizeNode(node)\n  }\n\n  /**\n   * Funzione che ha come scopo creare un nodo (rete-node).\n   * In particolare gli assegna una struttura vuota.\n   * @param node \n   */\n  createNewNode(node: Node) {\n    let t = getEmptyNetworkInfo()\n    node.data = {\n      ...node.data,\n      ...t\n    }\n  }\n\n  /**\n   * Funzione che ha come scopo la valorizzazione del nodo (rete-node) con i dati in suo possesso.\n   * In quasta fase avviene anche la fase iniziale di instanziamento delle porte input/output.\n   * @param node \n   */\n  valorizeNode(node: Node) {\n    var i: any = node.data['Input'];\n    var o: any = node.data['Output'];\n    var il = i.length;\n    var ol = o.length;\n\n    for (let index = 0; index \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/ReteSubnetInfo.html":{"url":"classes/ReteSubnetInfo.html","title":"class - ReteSubnetInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  ReteSubnetInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/rete-settings/nodes/rete-nodes/subnet/subnetNode.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe utilizzata per indicare il tipo di modulo SubnetNode.\nSee {reteBasicModuleInfo}\n\n            \n\n            \n                Extends\n            \n            \n                        reteBasicNodeInfo\n            \n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                cidr\n                            \n                            \n                                isDhcp\n                            \n                            \n                                type\n                            \n                            \n                                version\n                            \n                            \n                                Input\n                            \n                            \n                                name\n                            \n                            \n                                Output\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        cidr\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-nodes/subnet/subnetNode.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDhcp\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | boolean\n\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-nodes/subnet/subnetNode.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         EnumNodeType.Subnet\n\n                    \n                \n                        \n                            \n                                ereditato da         reteBasicNodeInfo\n\n                            \n                        \n                    \n                        \n                                Definito in         reteBasicNodeInfo:18\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-nodes/subnet/subnetNode.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Input\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string[]\n\n                    \n                \n                        \n                            \n                                ereditato da         reteBasicNodeInfo\n\n                            \n                        \n                    \n                        \n                                Definito in         reteBasicNodeInfo:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         reteBasicNodeInfo\n\n                            \n                        \n                    \n                        \n                                Definito in         reteBasicNodeInfo:10\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Output\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string[]\n\n                    \n                \n                        \n                            \n                                ereditato da         reteBasicNodeInfo\n\n                            \n                        \n                    \n                        \n                                Definito in         reteBasicNodeInfo:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Component, Input, Output, Node } from 'rete';\nimport { _Socket } from '../../../sockets/socket';\nimport { _Control } from '../../../controls/control';\nimport { AngularComponent, AngularComponentData } from 'rete-angular-render-plugin';\nimport { SubnetComponent } from './subnet.component';\nimport { NodeData, WorkerInputs, WorkerOutputs } from 'rete/types/core/data';\nimport {  reteBasicNodeInfo } from '../../reteBasic';\nimport { EnumNodeType } from 'src/app/models/appType';\n\n/**\n * Classe utilizzata per indicare il tipo di modulo SubnetNode.\n * @see {reteBasicModuleInfo}\n */\nexport class ReteSubnetInfo extends reteBasicNodeInfo {\n  cidr: string;\n  version: string | number;\n  isDhcp: string | boolean;\n  type: EnumNodeType.Subnet;\n}\n\n/**\n * Funzione dichiarata in SubnetNode. \n * Essa ha lo scopo di generare una struttura dati empty.\n * Viene utilizzata in per instanziare un nodo del tipo di ritorno indicato senza dati.\n * @returns {ReteSubnetInfo}\n */\nexport function getEmptySubnetInfo(): ReteSubnetInfo {\n  let x: ReteSubnetInfo = {\n    cidr: \"\",\n    Input: [],\n    Output: [],\n    name: \"\",\n    type: EnumNodeType.Subnet,\n    version: \"\",\n    isDhcp: ''\n  };\n  return x;\n}\n\n\n/**\n * Classe che rappresenta il nodo (rete-node) Subnet all'interno del canvas/editor di rete.\n */\nexport class SubnetNode extends Component implements AngularComponent {\n\n  data: AngularComponentData;\n\n  /**\n   * Costruttore di SubnetNode\n   */\n  constructor() {\n    super(EnumNodeType.Subnet);\n    this.data.render = 'angular';\n    this.data.component = SubnetComponent;\n  }\n\n  /**\n   * Funzione richiamata in fase di costruzione del nodo (rete-node).\n   * Controlla se bisogna instanziare il nodo oppure crearne uno nuovo:\n   * - In fase di design, il nodo non ha dati, per cui bisogna crearne uno nuovo.\n   * - In fase di visualizing, il nodo presenta dei dati, per cui va valorizzato il nodo.\n   * @param node \n   */\n  async builder(node: Node) {\n    if (Object.keys(node.data).length === 0)\n      this.createNewNode(node)\n    else\n      this.valorizeNode(node)\n  }\n\n  /**\n   * Funzione che ha come scopo creare un nodo (rete-node).\n   * In particolare gli assegna una struttura vuota.\n   * @param node \n   */\n  createNewNode(node: Node) {\n    let t = getEmptySubnetInfo()\n    node.data = {\n      ...node.data,\n      ...t\n    }\n  }\n\n  /**\n   * Funzione che ha come scopo la valorizzazione del nodo (rete-node) con i dati in suo possesso.\n   * In quasta fase avviene anche la fase iniziale di instanziamento delle porte input/output.\n   * @param node \n   */\n  valorizeNode(node: Node) {\n    var i: any = node.data['Input'];\n    var o: any = node.data['Output'];\n    var il = i.length;\n    var ol = o.length;\n\n    for (let index = 0; index \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/ReteTheaterComposerSettings.html":{"url":"classes/ReteTheaterComposerSettings.html","title":"class - ReteTheaterComposerSettings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  ReteTheaterComposerSettings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/rete-settings/settings/editor-settings/reteTheaterComposerSettings.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che ha lo scopo di eseguire i dovuti settaggi all'ambiente di rete.\nQuesta riguarda la parte di ReteTheaterComposer\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                components\n                            \n                            \n                                    Public\n                                container\n                            \n                            \n                                    Public\n                                editor\n                            \n                            \n                                    Public\n                                engine\n                            \n                            \n                                    Public\n                                nodeSelected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                editorUSE\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Costruttore\n        \n            \n                \n                    \nconstructor(container: any, edito: NodeEditor, components: any, engine: Engine)\n                    \n                \n                        \n                            \n                                Definito in src/app/rete-settings/settings/editor-settings/reteTheaterComposerSettings.ts:21\n                            \n                        \n\n                \n                    \n                            Costruttore di ReteTheaterComposerSettings\n\n                            \n                                    Parametri :\n                                    \n                                        \n                                            \n                                                Nome\n                                                    Tipo\n                                                Opzionale\n                                            \n                                        \n                                        \n                                                \n                                                        container\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        edito\n                                                  \n                                                        \n                                                                    NodeEditor\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        components\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        engine\n                                                  \n                                                        \n                                                                    Engine\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        components\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     null\n\n                    \n                \n                \n                    \n                        Valore predefinito : null\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/settings/editor-settings/reteTheaterComposerSettings.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        container\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     null\n\n                    \n                \n                \n                    \n                        Valore predefinito : null\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/settings/editor-settings/reteTheaterComposerSettings.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        editor\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     NodeEditor\n\n                    \n                \n                \n                    \n                        Valore predefinito : null\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/settings/editor-settings/reteTheaterComposerSettings.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        engine\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     Engine\n\n                    \n                \n                \n                    \n                        Valore predefinito : null\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/settings/editor-settings/reteTheaterComposerSettings.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        nodeSelected\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         any\n\n                    \n                \n                \n                    \n                        Valore predefinito : {}\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/settings/editor-settings/reteTheaterComposerSettings.ts:21\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        editorUSE\n                        \n                    \n                \n            \n            \n                \neditorUSE()\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/settings/editor-settings/reteTheaterComposerSettings.ts:42\n                \n            \n\n\n            \n                \n                    Funzione che, una volta richiamata, setta l'editor i dovuti plugin.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Engine, NodeEditor, Node, Output as or, Input as ir } from \"rete\";\nimport ConnectionPlugin from 'rete-connection-plugin';\nimport ContextMenuPlugin from 'rete-context-menu-plugin';\nimport { AngularRenderPlugin } from 'rete-angular-render-plugin';\nimport AreaPlugin from 'rete-area-plugin';\nimport MinimapPlugin from 'rete-minimap-plugin';\nimport AutoArrangePlugin from 'rete-auto-arrange-plugin'\nimport Vue from 'vue/dist/vue.esm';\nimport { _Socket } from '../../sockets/socket';\nimport HistoryPlugin from 'rete-history-plugin';\n\n/**\n * Classe che ha lo scopo di eseguire i dovuti settaggi all'ambiente di rete.\n * Questa riguarda la parte di ReteTheaterComposer\n */\nexport class ReteTheaterComposerSettings {\n    public container = null;\n    public editor: NodeEditor = null;\n    public components = null;\n    public engine: Engine = null;\n    public nodeSelected: any = {};\n\n\n    /**\n     * Costruttore di ReteTheaterComposerSettings\n     * @param container \n     * @param edito \n     * @param components \n     * @param engine \n     */\n    constructor(container: any, edito: NodeEditor, components: any, engine: Engine) {\n        this.container = container;\n        this.editor = edito;\n        this.components = components;\n        this.engine = engine;\n    }\n\n\n    /**\n     * Funzione che, una volta richiamata, setta l'editor i dovuti plugin.\n     */\n    editorUSE() {\n\n        this.editor.use(ConnectionPlugin);\n\n        this.editor.use(AngularRenderPlugin)//, { component: MyNodeComponent });\n\n        this.editor.use(MinimapPlugin, { Vue });\n\n        this.editor.use(HistoryPlugin, { keyboard: true });\n\n        this.editor.use(ContextMenuPlugin, {\n            searchBar: false,\n            components: {},\n            items: {\n                \"Undo\": () => {\n                    this.editor.trigger(\"undo\");\n                },\n                \"Redo\": () => {\n                    this.editor.trigger(\"redo\");\n                },\n                \"Show all nodes\": () => {\n                    AreaPlugin.zoomAt(this.editor, this.editor.nodes);\n                },\n                \"Editor\": () => {\n                    console.log(JSON.stringify(this.editor.toJSON()));\n                },\n                \"Nodes\": () => {\n                    var x = this.editor.toJSON();\n                    var z = [];\n                    for (let key in x) {\n                        let value = x[key];\n                        z.push(value);\n                    }\n                    return z;\n                }\n            },\n            allocate(component: any) {\n                return null;\n            },\n            // rename(component) {\n            //   return component.name;\n            // }\n        });\n\n        this.editor.use(AreaPlugin, {\n            background: false, //righe\n            snap: false,\n            scaleExtent: { min: 0.1, max: 1 },\n            translateExtent: { width: 5000, height: 4000 }\n        })\n\n        this.editor.use(AutoArrangePlugin, {\n            // snap: {size: 64, dynamic: true},\n            margin: { x: 400, y: 100 },\n            depth: 0,\n            vertical: false,\n        })\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/ReteTheaterInternalServiceModuleInstanceInfo.html":{"url":"classes/ReteTheaterInternalServiceModuleInstanceInfo.html","title":"class - ReteTheaterInternalServiceModuleInstanceInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  ReteTheaterInternalServiceModuleInstanceInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/rete-settings/nodes/rete-modules/theaterInternalServiceModuleInstance/theaterInternalServiceModuleInstanceNode.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe utilizzata per indicare il tipo di modulo TheaterInternalServiceModuleInstanceNode.\nSee {reteBasicModuleInfo}\n\n            \n\n            \n                Extends\n            \n            \n                        reteBasicModuleInfo\n            \n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                type\n                            \n                            \n                                host_number\n                            \n                            \n                                Input\n                            \n                            \n                                name\n                            \n                            \n                                network_number\n                            \n                            \n                                Output\n                            \n                            \n                                subnet_number\n                            \n                            \n                                area\n                            \n                            \n                                consumer_interfaces_link\n                            \n                            \n                                description\n                            \n                            \n                                module\n                            \n                            \n                                sequence\n                            \n                            \n                                version\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         EnumModuleType.TheaterInternalServiceModuleInstance\n\n                    \n                \n                        \n                            \n                                ereditato da         reteBasicModuleInfo\n\n                            \n                        \n                    \n                        \n                                Definito in         reteBasicModuleInfo:15\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        host_number\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         number\n\n                    \n                \n                        \n                            \n                                ereditato da         reteBasicModuleInfo\n\n                            \n                        \n                    \n                        \n                                Definito in         reteBasicModuleInfo:23\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Input\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string[]\n\n                    \n                \n                        \n                            \n                                ereditato da         reteBasicModuleInfo\n\n                            \n                        \n                    \n                        \n                                Definito in         reteBasicModuleInfo:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         reteBasicModuleInfo\n\n                            \n                        \n                    \n                        \n                                Definito in         reteBasicModuleInfo:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        network_number\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         number\n\n                    \n                \n                        \n                            \n                                ereditato da         reteBasicModuleInfo\n\n                            \n                        \n                    \n                        \n                                Definito in         reteBasicModuleInfo:24\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Output\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string[]\n\n                    \n                \n                        \n                            \n                                ereditato da         reteBasicModuleInfo\n\n                            \n                        \n                    \n                        \n                                Definito in         reteBasicModuleInfo:21\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subnet_number\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         number\n\n                    \n                \n                        \n                            \n                                ereditato da         reteBasicModuleInfo\n\n                            \n                        \n                    \n                        \n                                Definito in         reteBasicModuleInfo:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        area\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleInstancePropertiesDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleInstancePropertiesDTO:166\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        consumer_interfaces_link\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ConsumerInterfaceLinkDTO[]\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleInstancePropertiesDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleInstancePropertiesDTO:171\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleInstancePropertiesDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleInstancePropertiesDTO:167\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleInstancePropertiesDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleInstancePropertiesDTO:168\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sequence\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleInstancePropertiesDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleInstancePropertiesDTO:170\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleInstancePropertiesDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleInstancePropertiesDTO:169\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Component, Input, Output, Node } from 'rete';\nimport { _Socket } from '../../../sockets/socket';\nimport { _Control } from '../../../controls/control';\nimport { AngularComponent, AngularComponentData } from 'rete-angular-render-plugin';\nimport { NodeData, WorkerInputs, WorkerOutputs } from 'rete/types/core/data';\nimport { TheaterInternalServiceModuleInstanceComponent } from './theaterInternalServiceModuleInstance.component';\nimport {  reteBasicModuleInfo } from '../../reteBasic';\nimport { EnumModuleType } from 'src/app/models/appType';\n\n/**\n * Classe utilizzata per indicare il tipo di modulo TheaterInternalServiceModuleInstanceNode.\n * @see {reteBasicModuleInfo}\n */\nexport class ReteTheaterInternalServiceModuleInstanceInfo extends reteBasicModuleInfo {\n  type: EnumModuleType.TheaterInternalServiceModuleInstance;\n}\n\n/**\n * Funzione dichiarata in TheaterInternalServiceModuleInstanceNode. \n * Essa ha lo scopo di generare una struttura dati empty.\n * Viene utilizzata in per instanziare un nodo del tipo di ritorno indicato senza dati.\n * @returns {ReteTheaterInternalServiceModuleInstanceInfo}\n */\nexport function getEmptyReteTheaterInternalServiceModuleInstanceInfo(): ReteTheaterInternalServiceModuleInstanceInfo {\n  let x: ReteTheaterInternalServiceModuleInstanceInfo = {\n    Input: [],\n    Output: [],\n    name: \"\",\n    description: \"\",\n    type: EnumModuleType.TheaterInternalServiceModuleInstance,\n    host_number: 0,\n    network_number: 0,\n    subnet_number: 0,\n    area: '',\n    module: '',\n    version: '',\n    sequence: '',\n    consumer_interfaces_link: []\n  };\n  return x;\n}\n\n\n/**\n * Classe che rappresenta il modulo (rete-node) TheaterInternalServiceModuleInstance all'interno del canvas/editor di rete.\n */\nexport class TheaterInternalServiceModuleInstanceNode extends Component implements AngularComponent {\n\n  data: AngularComponentData;\n\n    /**\n   * Costruttore di TheaterInternalServiceModuleInstanceNode\n   */\n  constructor() {\n    super(EnumModuleType.TheaterInternalServiceModuleInstance);\n    this.data.render = 'angular';\n    this.data.component = TheaterInternalServiceModuleInstanceComponent;\n  }\n\n  /**\n   * Funzione richiamata in fase di costruzione del nodo (rete-node).\n   * Controlla se bisogna instanziare il nodo oppure crearne uno nuovo:\n   * - In fase di design, il nodo non ha dati, per cui bisogna crearne uno nuovo.\n   * - In fase di visualizing, il nodo presenta dei dati, per cui va valorizzato il nodo.\n   * @param node \n   */\n  async builder(node: Node) {\n    if (Object.keys(node.data).length === 0)\n      this.createNewNode(node)\n    else\n      this.valorizeNode(node)\n  }\n\n  /**\n   * Funzione che ha come scopo creare un nodo (rete-node).\n   * In particolare gli assegna una struttura vuota.\n   * @param node \n   */\n  createNewNode(node: Node) {\n    let t = getEmptyReteTheaterInternalServiceModuleInstanceInfo()\n    node.data = {\n      ...node.data,\n      ...t\n    }\n  }\n\n  /**\n   * Funzione che ha come scopo la valorizzazione del nodo (rete-node) con i dati in suo possesso.\n   * In quasta fase avviene anche la fase iniziale di instanziamento delle porte input/output.\n   * @param node \n   */\n  valorizeNode(node: Node) {\n    var i: any = node.data['Input'];\n    var o: any = node.data['Output'];\n    var il = i.length;\n    var ol = o.length;\n\n    for (let index = 0; index \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/ReteTheaterModuleInstanceInfo.html":{"url":"classes/ReteTheaterModuleInstanceInfo.html","title":"class - ReteTheaterModuleInstanceInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  ReteTheaterModuleInstanceInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/rete-settings/nodes/rete-modules/theaterModuleInstance/theaterModuleInstanceNode.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe utilizzata per indicare il tipo di modulo MirroringModuleInstanceNode.\nSee {reteBasicModuleInfo}\n\n            \n\n            \n                Extends\n            \n            \n                        reteBasicModuleInfo\n            \n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                type\n                            \n                            \n                                host_number\n                            \n                            \n                                Input\n                            \n                            \n                                name\n                            \n                            \n                                network_number\n                            \n                            \n                                Output\n                            \n                            \n                                subnet_number\n                            \n                            \n                                area\n                            \n                            \n                                consumer_interfaces_link\n                            \n                            \n                                description\n                            \n                            \n                                module\n                            \n                            \n                                sequence\n                            \n                            \n                                version\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         EnumModuleType.TheaterModuleInstance\n\n                    \n                \n                        \n                            \n                                ereditato da         reteBasicModuleInfo\n\n                            \n                        \n                    \n                        \n                                Definito in         reteBasicModuleInfo:15\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        host_number\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         number\n\n                    \n                \n                        \n                            \n                                ereditato da         reteBasicModuleInfo\n\n                            \n                        \n                    \n                        \n                                Definito in         reteBasicModuleInfo:23\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Input\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string[]\n\n                    \n                \n                        \n                            \n                                ereditato da         reteBasicModuleInfo\n\n                            \n                        \n                    \n                        \n                                Definito in         reteBasicModuleInfo:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         reteBasicModuleInfo\n\n                            \n                        \n                    \n                        \n                                Definito in         reteBasicModuleInfo:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        network_number\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         number\n\n                    \n                \n                        \n                            \n                                ereditato da         reteBasicModuleInfo\n\n                            \n                        \n                    \n                        \n                                Definito in         reteBasicModuleInfo:24\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Output\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string[]\n\n                    \n                \n                        \n                            \n                                ereditato da         reteBasicModuleInfo\n\n                            \n                        \n                    \n                        \n                                Definito in         reteBasicModuleInfo:21\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subnet_number\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         number\n\n                    \n                \n                        \n                            \n                                ereditato da         reteBasicModuleInfo\n\n                            \n                        \n                    \n                        \n                                Definito in         reteBasicModuleInfo:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        area\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleInstancePropertiesDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleInstancePropertiesDTO:166\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        consumer_interfaces_link\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ConsumerInterfaceLinkDTO[]\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleInstancePropertiesDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleInstancePropertiesDTO:171\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleInstancePropertiesDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleInstancePropertiesDTO:167\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleInstancePropertiesDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleInstancePropertiesDTO:168\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sequence\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleInstancePropertiesDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleInstancePropertiesDTO:170\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleInstancePropertiesDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleInstancePropertiesDTO:169\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Component, Input, Output, Node } from 'rete';\nimport { _Socket } from '../../../sockets/socket';\nimport { _Control } from '../../../controls/control';\nimport { AngularComponent, AngularComponentData } from 'rete-angular-render-plugin';\nimport { NodeData, WorkerInputs, WorkerOutputs } from 'rete/types/core/data';\nimport { TheaterModuleInstanceComponent } from './theaterModuleInstance.component';\nimport {  reteBasicModuleInfo } from '../../reteBasic';\nimport { EnumModuleType } from 'src/app/models/appType';\n\n/**\n * Classe utilizzata per indicare il tipo di modulo MirroringModuleInstanceNode.\n * @see {reteBasicModuleInfo}\n */\nexport class ReteTheaterModuleInstanceInfo extends reteBasicModuleInfo {\n  type: EnumModuleType.TheaterModuleInstance;\n}\n\n/**\n * Funzione dichiarata in TheaterModuleInstanceNode. \n * Essa ha lo scopo di generare una struttura dati empty.\n * Viene utilizzata in per instanziare un nodo del tipo di ritorno indicato senza dati.\n * @returns {ReteTheaterModuleInstanceInfo}\n */\nexport function getEmptyReteTheaterModuleInstanceInfo(): ReteTheaterModuleInstanceInfo {\n  let x: ReteTheaterModuleInstanceInfo = {\n    Input: [],\n    Output: [],\n    description: \"\",\n    name: \"\",\n    type: EnumModuleType.TheaterModuleInstance,\n    host_number: 0,\n    network_number: 0,\n    subnet_number: 0,\n    area: '',\n    module: '',\n    version: '',\n    sequence: '',\n    consumer_interfaces_link: []\n  };\n  return x;\n\n}\n\n/**\n * Classe che rappresenta il modulo (rete-node) TheaterModuleInstance all'interno del canvas/editor di rete.\n */\nexport class TheaterModuleInstanceNode extends Component implements AngularComponent {\n\n  data: AngularComponentData;\n\n    /**\n   * Costruttore di MirroringModuleInstanceNode\n   */\n  constructor() {\n    super(EnumModuleType.TheaterModuleInstance);\n    this.data.render = 'angular';\n    this.data.component = TheaterModuleInstanceComponent;\n  }\n\n    /**\n   * Funzione richiamata in fase di costruzione del nodo (rete-node).\n   * Controlla se bisogna instanziare il nodo oppure crearne uno nuovo:\n   * - In fase di design, il nodo non ha dati, per cui bisogna crearne uno nuovo.\n   * - In fase di visualizing, il nodo presenta dei dati, per cui va valorizzato il nodo.\n   * @param node \n   */\n  async builder(node: Node) {\n    if (Object.keys(node.data).length === 0)\n      this.createNewNode(node)\n    else\n      this.valorizeNode(node)\n  }\n\n  /**\n   * Funzione che ha come scopo creare un nodo (rete-node).\n   * In particolare gli assegna una struttura vuota.\n   * @param node \n   */\n  createNewNode(node: Node) {\n    let t = getEmptyReteTheaterModuleInstanceInfo()\n    node.data = {\n      ...node.data,\n      ...t\n    }\n  }\n\n  /**\n   * Funzione che ha come scopo la valorizzazione del nodo (rete-node) con i dati in suo possesso.\n   * In quasta fase avviene anche la fase iniziale di instanziamento delle porte input/output.\n   * @param node \n   */\n  valorizeNode(node: Node) {\n    var i: any = node.data['Input'];\n    var o: any = node.data['Output'];\n    var il = i.length;\n    var ol = o.length;\n\n    for (let index = 0; index \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/ReteTheaterVisualizerSettings.html":{"url":"classes/ReteTheaterVisualizerSettings.html","title":"class - ReteTheaterVisualizerSettings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  ReteTheaterVisualizerSettings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/rete-settings/settings/editor-settings/reteTheaterVisualizerSettings.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che ha lo scopo di eseguire i dovuti settaggi all'ambiente di rete.\nQuesta riguarda la parte di ReteTheaterVisualizer\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                components\n                            \n                            \n                                container\n                            \n                            \n                                editor\n                            \n                            \n                                engine\n                            \n                            \n                                nodeSelected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                editorUSE\n                            \n                            \n                                editorUSE_simple\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Costruttore\n        \n            \n                \n                    \nconstructor(container: any, edito: NodeEditor, components: any, engine: Engine)\n                    \n                \n                        \n                            \n                                Definito in src/app/rete-settings/settings/editor-settings/reteTheaterVisualizerSettings.ts:22\n                            \n                        \n\n                \n                    \n                            Costruttore di ReteTheaterVisualizerSettings\n\n                            \n                                    Parametri :\n                                    \n                                        \n                                            \n                                                Nome\n                                                    Tipo\n                                                Opzionale\n                                            \n                                        \n                                        \n                                                \n                                                        container\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        edito\n                                                  \n                                                        \n                                                                    NodeEditor\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        components\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        engine\n                                                  \n                                                        \n                                                                    Engine\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        components\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     null\n\n                    \n                \n                \n                    \n                        Valore predefinito : null\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/settings/editor-settings/reteTheaterVisualizerSettings.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        container\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     null\n\n                    \n                \n                \n                    \n                        Valore predefinito : null\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/settings/editor-settings/reteTheaterVisualizerSettings.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editor\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     NodeEditor\n\n                    \n                \n                \n                    \n                        Valore predefinito : null\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/settings/editor-settings/reteTheaterVisualizerSettings.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        engine\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     Engine\n\n                    \n                \n                \n                    \n                        Valore predefinito : null\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/settings/editor-settings/reteTheaterVisualizerSettings.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nodeSelected\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         any\n\n                    \n                \n                \n                    \n                        Valore predefinito : {}\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/settings/editor-settings/reteTheaterVisualizerSettings.ts:22\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        editorUSE\n                        \n                    \n                \n            \n            \n                \neditorUSE()\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/settings/editor-settings/reteTheaterVisualizerSettings.ts:42\n                \n            \n\n\n            \n                \n                    Funzione che, una volta richiamata, setta l'editor i dovuti plugin.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editorUSE_simple\n                        \n                    \n                \n            \n            \n                \neditorUSE_simple()\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/settings/editor-settings/reteTheaterVisualizerSettings.ts:108\n                \n            \n\n\n            \n                \n                    Funzione che, una volta richiamata, setta l'editor i dovuti plugin.\nQuesta è richiamata quando si renderizza l'editor in modalità simple.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Engine, NodeEditor, Node, Output as or, Input as ir } from \"rete\";\nimport ConnectionPlugin from 'rete-connection-plugin';\nimport ContextMenuPlugin from 'rete-context-menu-plugin';\nimport { AngularRenderPlugin } from 'rete-angular-render-plugin';\nimport AreaPlugin from 'rete-area-plugin';\nimport MinimapPlugin from 'rete-minimap-plugin';\nimport AutoArrangePlugin from 'rete-auto-arrange-plugin'\nimport Vue from 'vue/dist/vue.esm';\nimport { _Socket } from '../../sockets/socket';\nimport HistoryPlugin from 'rete-history-plugin';\n\n\n/**\n * Classe che ha lo scopo di eseguire i dovuti settaggi all'ambiente di rete.\n * Questa riguarda la parte di ReteTheaterVisualizer\n */\nexport class ReteTheaterVisualizerSettings {\n  container = null;\n  editor: NodeEditor = null;\n  components = null;\n  engine: Engine = null;\n  nodeSelected: any = {};\n\n\n  /**\n   * Costruttore di ReteTheaterVisualizerSettings\n   * @param container \n   * @param edito \n   * @param components \n   * @param engine \n   */\n  constructor(container: any, edito: NodeEditor, components: any, engine: Engine) {\n    this.container = container;\n    this.editor = edito;\n    this.components = components;\n    this.engine = engine;\n  }\n\n  /**\n   * Funzione che, una volta richiamata, setta l'editor i dovuti plugin.\n   */\n  editorUSE() {\n\n    this.editor.use(ConnectionPlugin);\n\n    this.editor.use(AngularRenderPlugin)//, { component: MyNodeComponent });\n\n    this.editor.use(MinimapPlugin, { Vue });\n\n    this.editor.use(HistoryPlugin, { keyboard: true });\n\n    this.editor.use(ContextMenuPlugin, {\n      searchBar: false,\n      components: {},\n      items: {\n        \"Undo\": () => {\n          this.editor.trigger(\"undo\");\n        },\n        \"Redo\": () => {\n          this.editor.trigger(\"redo\");\n        },\n        \"Show all nodes\": () => {\n          AreaPlugin.zoomAt(this.editor, this.editor.nodes);\n        },\n        \"Editor\": () => {\n          console.log(JSON.stringify(this.editor.toJSON()));\n        },\n        \"Nodes\": () => {\n          var x = this.editor.toJSON();\n          var z = [];\n          for (let key in x) {\n            let value = x[key];\n            z.push(value);\n          }\n          return z;\n        }\n      },\n      allocate(component: any) {\n        return null;\n      },\n      // rename(component) {\n      //   return component.name;\n      // }\n    });\n\n    this.editor.use(AreaPlugin, {\n      background: false, //righe\n      snap: false,\n      scaleExtent: { min: 0.1, max: 1 },\n      translateExtent: { width: 5000, height: 4000 }\n    })\n\n    this.editor.use(AutoArrangePlugin, {\n      // snap: {size: 64, dynamic: true},\n      margin: { x: 400, y: 100 },\n      depth: 0,\n      vertical: false,\n    })\n\n\n  }\n\n\n  /**\n   * Funzione che, una volta richiamata, setta l'editor i dovuti plugin.\n   * Questa è richiamata quando si renderizza l'editor in modalità simple.\n   */\n  editorUSE_simple() {\n\n    this.editor.use(ConnectionPlugin);\n\n    this.editor.use(AngularRenderPlugin)//, { component: MyNodeComponent });\n\n    this.editor.use(ContextMenuPlugin, {\n      searchBar: false,\n      components: {},\n      items: {\n        \"Show all nodes\": () => {\n          AreaPlugin.zoomAt(this.editor, this.editor.nodes);\n        },\n        \"Editor\": () => {\n          console.log(JSON.stringify(this.editor.toJSON()));\n        },\n        \"Nodes\": () => {\n          var x = this.editor.toJSON();\n          var z = [];\n          for (let key in x) {\n            let value = x[key];\n            z.push(value);\n          }\n          return z;\n        }\n      },\n      allocate(component: any) {\n        return null;\n      },\n      // rename(component) {\n      //   return component.name;\n      // }\n    });\n\n    this.editor.use(AreaPlugin, {\n      background: false, //righe\n      snap: false,\n      scaleExtent: { min: 0.1, max: 1 },\n      translateExtent: { width: 5000, height: 4000 }\n    });\n\n    this.editor.use(AutoArrangePlugin, {\n      margin: { x: 400, y: 200 },\n      depth: 1,\n      vertical: false,\n    });\n\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/SelectOption.html":{"url":"classes/SelectOption.html","title":"class - SelectOption","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  SelectOption\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/data-input/dataInputType.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Tipo usato per le selezioni (multiselect option).\nSee {DataInputComponet}\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                    Opzionale\n                                other\n                            \n                            \n                                text\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        other\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         any\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/data-input/dataInputType.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        text\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/data-input/dataInputType.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/data-input/dataInputType.ts:53\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class DataInputElement{\n    element: Array;\n}\n\n/**\n * Tipo di dato Input contenente variabili generali.\n * @see {DataInputComponet}\n */\nexport class DataInput{\n    id: string;\n    text?: string;\n    type: \"textarea\" | \"text\" | \"selection\" | \"checkbox\";\n    data_prepended?: string;\n    data_appended?: string;\n    required: boolean;\n}\n/**\n * Tipo input text base/area.\n * Estende DataInput.\n  * @see {DataInputComponet}\n */\nexport class DataInputText extends DataInput{\n    placeholder?: string;\n}\n/**\n * Tipo input selection.\n * Estende DataInput.\n  * @see {DataInputComponet}\n */\nexport class DataInputSelection extends DataInput{\n    multiple?: boolean;\n    selected_number: number;\n    selection: SelectOption[];\n}\n/**\n * Tipo input check (toggle).\n * Estende DataInput.\n * @see {DataInputComponet}\n */\nexport class DataInputCheck  extends DataInput{\n    checked?: boolean;\n}\n\n/**\n * Tipo usato per le selezioni (multiselect option).\n  * @see {DataInputComponet}\n */\nexport class SelectOption{\n    value: string;\n    text: string;\n    other?: any;\n}\n\n/**\n * Tipo di ritorno della componente DataInputReturned.\n  * @see {DataInputComponet}\n */\nexport class DataInputReturned{\n    element: { [key:string]: SingleDataInputReturned};\n    isValid: boolean;\n    exitStatus?: 'submitted' | 'cancel' | 'error';\n}\n/**\n * Singolo elemento dato in ritorno al submit.\n  * @see {DataInputComponet}\n */\nexport class SingleDataInputReturned{\n    id: string;\n    text: string;\n    type: string;\n    value: any;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/SimpleAreaDTO.html":{"url":"classes/SimpleAreaDTO.html","title":"class - SimpleAreaDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  SimpleAreaDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsDTO/moduleDTO.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano l'area di appartenenza di un modulo (simple).\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                area\n                            \n                            \n                                description\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        area\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:191\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:192\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PageableDTO, SortDTO } from './elementDTO';\nimport { NetworkDTO } from './networkDTO';\nimport { TheaterDTO } from './theaterDTO';\n\n/**\n * Classe che contiene gli attributi che indicano l'insieme dei moduli ritornati dal teatro.\n */\nexport class ModuleListDTO {\n    content: SimpleModuleDTO[]\n    pageable: PageableDTO\n    last: boolean\n    totalPages: string | number\n    totalElements: string | number\n    size: string | number\n    number: string | number\n    sort: SortDTO\n    numberOfElements: string | number\n    first: boolean\n    empty: boolean\n}\n\n/**\n * Classe che contiene gli attributi che indica il catalogo del tipo.\n */\nexport class TypesCatalogueDTO {\n    group: string\n    id: string | number\n    parentId: {}\n    value: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano la classificazione del modulo.\n */\nexport class ModuleClassificationDTO {\n    blueprintType: string\n    category: string\n    expectedInstanceType: string\n    id: string | number\n    mcClass: string\n    type: string\n    uuid: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano un parametro generico.\n */\nexport class GenericParameterDTO {\n    type: string\n    default: string\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano i parametri di configurazione di un modulto.\n */\nexport class ConfigurationTemplateDTO {\n    anchor_parameters: { [name: string]: GenericParameterDTO | string }\n    instance_parameters: { [name: string]: GenericParameterDTO }\n    structural_parameters: { [name: string]: GenericParameterDTO }\n    fixed_parameters: { [name: string]: GenericParameterDTO }\n    control_parameters: { [name: string]: GenericParameterDTO }\n    infrastructure_parameters: { [name: string]: GenericParameterDTO }\n    module: string\n    description: string\n    category: string\n    version: string | number\n    platform: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano la modalità di un modulo.\n */\nexport class ModuleModeDTO {\n    code: string\n    id: string | number\n    name: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano lo stato di un modulo.\n */\nexport class ModuleStatusDTO {\n    descriptionCode: string\n    id: string | number\n    name: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le statitistiche di un modulo.\n */\nexport class StatisticItemDTO {\n    error: string | number\n    updated: string | number\n    inserted: string | number\n}\n\n/**\n * Classe che contiene gli attributi che indicano il modulo (simple - in dipendenza del teatro).\n */\nexport class SimpleModuleDTO {\n    createdBy: string\n    createdDate: string\n    description: string\n    id: string | number\n    isLocked: boolean\n    lastModifiedBy: string\n    lastModifiedDate: string\n    lockAcquiredTimestamp: string\n    lockLastUserAcquiring: string\n    lockReleasedTimestamp: string\n    name: string\n    status: ModuleStatusDTO\n    type?: string | any\n    uuid: string\n    version: string | number\n}\n\n/**\n * Classe che contiene gli attributi che indicano il modulo (complex - ritorato da call appostita).\n * @extends {SimpleModuleDTO}\n */\nexport class ModuleDTO extends SimpleModuleDTO {\n    attachments: string[]\n    author: string\n    capabilities: { [name: string]: string }\n    catalog1: TypesCatalogueDTO\n    catalog2: TypesCatalogueDTO\n    catalog3: TypesCatalogueDTO\n    classification: ModuleClassificationDTO\n    configurationTemplate: ConfigurationTemplateDTO\n    detailProperties: {}\n    input: { [name: string]: string }\n    output: { [name: string]: string }\n    mode: ModuleModeDTO\n    statistics: { [name: string]: StatisticItemDTO | string | number }\n    tags: []\n}\n\n/**\n * Classe che contiene gli attributi che indicano le interfacce esposte da un modulo.\n */\nexport class ModuleNetworkInterfaceDTO {\n    id: string | number\n    label: string\n    module: ModuleDTO\n    network: NetworkDTO\n    nodeName: string\n    type: string\n    uuid: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le connessioni interfaccia-modulo.\n */\nexport class ConsumerInterfaceLinkDTO {\n    local_interface: string\n    module_instance: string\n    remote_interface: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà dell'istanza di un modulo all'interno del node_templates.\n */\nexport class ModuleInstancePropertiesDTO {\n    area: string\n    description: string\n    module: string\n    version: string | number\n    sequence: string | number\n    consumer_interfaces_link: ConsumerInterfaceLinkDTO[]\n}\n\n\n/**\n * Classe che contiene gli attributi che indicano l'area di appartenenza di un modulo (complex).\n */\nexport class AreaDTO {\n    id: string | number;\n    uuid: string;\n    name: string;\n    description: string;\n    theater: TheaterDTO;\n    deleted: boolean | string;\n}\n\n/**\n * Classe che contiene gli attributi che indicano l'area di appartenenza di un modulo (simple).\n */\nexport class SimpleAreaDTO {\n    area: string\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà dell'istanza di un teatro all'interno del node_templates.\n */\nexport class TheaterInstancePropertiesDTO {\n    mode: string\n    tags: TagTIP[]\n    areas: SimpleAreaDTO[]\n    author: string\n    version: string | number\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano un tag.\n */\nexport class TagTIP{\n    tag: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano in via generale le caratteristiche di un elemento che deve essere presente nel node_templates.\n */\nexport class ElementIntoTheaterDTO {  // goes into map in blueprint [name:string]: Module...\n    properties: ModuleInstancePropertiesDTO | TheaterInstancePropertiesDTO\n    type: string\n}\n\n\n/**\n * Classe che contiene gli attributi che indicano le caratteristiche di un teatro presente nel node_templates.\n */\nexport class ModuleInstanceDTO {\n    properties: ModuleInstancePropertiesDTO\n    type: string\n}\n/**\n * Classe che contiene gli attributi che indicano le caratteristiche di un modulo presente nel node_templates.\n */\nexport class TheaterInstanceDTO {\n    properties: TheaterInstancePropertiesDTO\n    type: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/SimpleModuleApplication.html":{"url":"classes/SimpleModuleApplication.html","title":"class - SimpleModuleApplication","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  SimpleModuleApplication\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsApplication/applicationModels.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe contenente gli attributi utilizzati per le operazioni che coinvolgono i moduli.\nps. Questa struttura è prettamente utilizzata nella chiamata che prende tutti i moduli del teatro.\n\n            \n\n            \n                Extends\n            \n            \n                        SimpleModuleDTO\n            \n\n            \n                Implementa\n            \n            \n                            CommonModule\n            \n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                host_number\n                            \n                            \n                                hosts\n                            \n                            \n                                interfaces\n                            \n                            \n                                network_number\n                            \n                            \n                                subnet_number\n                            \n                            \n                                topology\n                            \n                            \n                                createdBy\n                            \n                            \n                                createdDate\n                            \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                isLocked\n                            \n                            \n                                lastModifiedBy\n                            \n                            \n                                lastModifiedDate\n                            \n                            \n                                lockAcquiredTimestamp\n                            \n                            \n                                lockLastUserAcquiring\n                            \n                            \n                                lockReleasedTimestamp\n                            \n                            \n                                name\n                            \n                            \n                                status\n                            \n                            \n                                    Opzionale\n                                type\n                            \n                            \n                                uuid\n                            \n                            \n                                version\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        host_number\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsApplication/applicationModels.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hosts\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     HostModuleDTO[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsApplication/applicationModels.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        interfaces\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ModuleNetworkInterfaceDTO[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsApplication/applicationModels.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        network_number\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsApplication/applicationModels.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subnet_number\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsApplication/applicationModels.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        topology\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         NodeTopologyElement\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsApplication/applicationModels.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:102\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdDate\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:103\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:104\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:105\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLocked\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:106\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastModifiedBy\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:107\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastModifiedDate\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:108\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lockAcquiredTimestamp\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:109\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lockLastUserAcquiring\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:110\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lockReleasedTimestamp\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:111\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:112\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ModuleStatusDTO\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:113\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | any\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:114\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uuid\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:115\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                        \n                            \n                                ereditato da         SimpleModuleDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         SimpleModuleDTO:116\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ReteHostInfo } from \"src/app/rete-settings/nodes/rete-nodes/host/hostNode\";\nimport { ReteNetworkInfo } from \"src/app/rete-settings/nodes/rete-nodes/network/networkNode\";\nimport { ReteSubnetInfo } from \"src/app/rete-settings/nodes/rete-nodes/subnet/subnetNode\";\nimport { ReteMirroringModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/mirroringModuleInstance/mirroringModuleInstanceNode\";\nimport { ReteTheaterInternalServiceModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/theaterInternalServiceModuleInstance/theaterInternalServiceModuleInstanceNode\";\nimport { ReteTheaterModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/theaterModuleInstance/theaterModuleInstanceNode\";\nimport { FlavorBasicInfo } from \"../modelsDTO/falvorDTO\";\nimport { HostModuleDTO } from \"../modelsDTO/hostDTO\";\nimport { ModuleNetworkInterfaceDTO, ModuleInstancePropertiesDTO, SimpleModuleDTO, TheaterInstancePropertiesDTO, ModuleInstanceDTO, ModuleDTO, SimpleAreaDTO, AreaDTO } from \"../modelsDTO/moduleDTO\";\nimport { TheaterDTO } from \"../modelsDTO/theaterDTO\";\n\n\nexport interface CommonModule {\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n}\n\n\n/**\n * Classe contenente gli attributi utilizzati per le operazioni che coinvolgono i moduli.\n * ps. Questa struttura è prettamente utilizzata nella chiamata relativa al singolo modulo.\n */\nexport class ModuleApplication extends ModuleDTO implements CommonModule {\n    imports: string[] // perchè nell'export yaml è previsto\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n    // serve per validare il json risultante dal parsing del theaterApplication\n    validateObject?: string = \"module\";\n}\n// PER IMPLEMENTAZIONI FUTURE, PER COERENZA, PRENDERE DIRETTAMENTE I SINGOLI NODI DALLA CHIAMATA ESCLUSIVA E NON DA QUELLA CHE RESTITUISCE TUTTI I TEATRI\n/**\n * Classe contenente gli attributi utilizzati per le operazioni che coinvolgono i moduli.\n * ps. Questa struttura è prettamente utilizzata nella chiamata che prende tutti i moduli del teatro.\n */\nexport class SimpleModuleApplication extends SimpleModuleDTO implements CommonModule {\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n}\n\n\nexport class ReteConnection {\n    from: string;\n    port_src: string;\n    to: string;\n    port_dst: string;\n}\n\nexport interface TopologyList {\n    rete: any;\n    topology?: TopologyElement\n}\nexport class TopologyElement {\n    elements: { [name: string]: any };\n    connection: ReteConnection[]\n}\n\n// apptype module topology\n\nexport class NodeTopologyElement implements TopologyElement {\n    elements: { [hostName: string]: ReteHostInfo | ReteSubnetInfo | ReteNetworkInfo };\n    connection: ReteConnection[]\n}\n\nexport interface ModuleTopology extends TopologyList {\n    rete: ReteMirroringModuleInstanceInfo | ReteTheaterInternalServiceModuleInstanceInfo | ReteTheaterModuleInstanceInfo\n    topology: NodeTopologyElement;\n}\n\nexport class ModuleInstance extends ModuleInstanceDTO implements ModuleTopology {\n    // moduleTopology data\n    rete: ReteTheaterModuleInstanceInfo | ReteTheaterInternalServiceModuleInstanceInfo | ReteMirroringModuleInstanceInfo;\n    topology: NodeTopologyElement;\n    // other data\n    moduleInfo: SimpleModuleApplication\n}\n\n// apptype theater theater\n\nexport interface TheaterTopology extends TopologyElement {\n    elements: { [hostName: string]: ModuleInstance };\n    connection: ReteConnection[];\n}\n\nexport class TheaterApplication extends TheaterDTO implements TheaterTopology {\n    // theaterTopology data\n    elements: { [hostName: string]: ModuleInstance; };\n    connection: ReteConnection[];\n    // other data\n    properties: TheaterInstancePropertiesDTO;\n    topology: TheaterTopology;\n    // serve per validare il json risultante dal parsing del theaterApplication\n    validateObject?: string = \"theater\";\n}\n\nexport class AreaApplication extends AreaDTO {\n    color?: string;\n}\nexport class AreaColorDTO extends SimpleAreaDTO {\n    color: string;\n}\n\n\nexport class FlavorApplication extends FlavorBasicInfo {\n    flavorName: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/SimpleModuleDTO.html":{"url":"classes/SimpleModuleDTO.html","title":"class - SimpleModuleDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  SimpleModuleDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsDTO/moduleDTO.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano il modulo (simple - in dipendenza del teatro).\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                createdBy\n                            \n                            \n                                createdDate\n                            \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                isLocked\n                            \n                            \n                                lastModifiedBy\n                            \n                            \n                                lastModifiedDate\n                            \n                            \n                                lockAcquiredTimestamp\n                            \n                            \n                                lockLastUserAcquiring\n                            \n                            \n                                lockReleasedTimestamp\n                            \n                            \n                                name\n                            \n                            \n                                status\n                            \n                            \n                                    Opzionale\n                                type\n                            \n                            \n                                uuid\n                            \n                            \n                                version\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:102\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdDate\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:103\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:104\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:105\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLocked\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:106\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastModifiedBy\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:107\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastModifiedDate\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:108\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lockAcquiredTimestamp\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:109\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lockLastUserAcquiring\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:110\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lockReleasedTimestamp\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:111\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:112\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ModuleStatusDTO\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:113\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | any\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:114\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uuid\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:115\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:116\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PageableDTO, SortDTO } from './elementDTO';\nimport { NetworkDTO } from './networkDTO';\nimport { TheaterDTO } from './theaterDTO';\n\n/**\n * Classe che contiene gli attributi che indicano l'insieme dei moduli ritornati dal teatro.\n */\nexport class ModuleListDTO {\n    content: SimpleModuleDTO[]\n    pageable: PageableDTO\n    last: boolean\n    totalPages: string | number\n    totalElements: string | number\n    size: string | number\n    number: string | number\n    sort: SortDTO\n    numberOfElements: string | number\n    first: boolean\n    empty: boolean\n}\n\n/**\n * Classe che contiene gli attributi che indica il catalogo del tipo.\n */\nexport class TypesCatalogueDTO {\n    group: string\n    id: string | number\n    parentId: {}\n    value: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano la classificazione del modulo.\n */\nexport class ModuleClassificationDTO {\n    blueprintType: string\n    category: string\n    expectedInstanceType: string\n    id: string | number\n    mcClass: string\n    type: string\n    uuid: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano un parametro generico.\n */\nexport class GenericParameterDTO {\n    type: string\n    default: string\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano i parametri di configurazione di un modulto.\n */\nexport class ConfigurationTemplateDTO {\n    anchor_parameters: { [name: string]: GenericParameterDTO | string }\n    instance_parameters: { [name: string]: GenericParameterDTO }\n    structural_parameters: { [name: string]: GenericParameterDTO }\n    fixed_parameters: { [name: string]: GenericParameterDTO }\n    control_parameters: { [name: string]: GenericParameterDTO }\n    infrastructure_parameters: { [name: string]: GenericParameterDTO }\n    module: string\n    description: string\n    category: string\n    version: string | number\n    platform: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano la modalità di un modulo.\n */\nexport class ModuleModeDTO {\n    code: string\n    id: string | number\n    name: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano lo stato di un modulo.\n */\nexport class ModuleStatusDTO {\n    descriptionCode: string\n    id: string | number\n    name: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le statitistiche di un modulo.\n */\nexport class StatisticItemDTO {\n    error: string | number\n    updated: string | number\n    inserted: string | number\n}\n\n/**\n * Classe che contiene gli attributi che indicano il modulo (simple - in dipendenza del teatro).\n */\nexport class SimpleModuleDTO {\n    createdBy: string\n    createdDate: string\n    description: string\n    id: string | number\n    isLocked: boolean\n    lastModifiedBy: string\n    lastModifiedDate: string\n    lockAcquiredTimestamp: string\n    lockLastUserAcquiring: string\n    lockReleasedTimestamp: string\n    name: string\n    status: ModuleStatusDTO\n    type?: string | any\n    uuid: string\n    version: string | number\n}\n\n/**\n * Classe che contiene gli attributi che indicano il modulo (complex - ritorato da call appostita).\n * @extends {SimpleModuleDTO}\n */\nexport class ModuleDTO extends SimpleModuleDTO {\n    attachments: string[]\n    author: string\n    capabilities: { [name: string]: string }\n    catalog1: TypesCatalogueDTO\n    catalog2: TypesCatalogueDTO\n    catalog3: TypesCatalogueDTO\n    classification: ModuleClassificationDTO\n    configurationTemplate: ConfigurationTemplateDTO\n    detailProperties: {}\n    input: { [name: string]: string }\n    output: { [name: string]: string }\n    mode: ModuleModeDTO\n    statistics: { [name: string]: StatisticItemDTO | string | number }\n    tags: []\n}\n\n/**\n * Classe che contiene gli attributi che indicano le interfacce esposte da un modulo.\n */\nexport class ModuleNetworkInterfaceDTO {\n    id: string | number\n    label: string\n    module: ModuleDTO\n    network: NetworkDTO\n    nodeName: string\n    type: string\n    uuid: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le connessioni interfaccia-modulo.\n */\nexport class ConsumerInterfaceLinkDTO {\n    local_interface: string\n    module_instance: string\n    remote_interface: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà dell'istanza di un modulo all'interno del node_templates.\n */\nexport class ModuleInstancePropertiesDTO {\n    area: string\n    description: string\n    module: string\n    version: string | number\n    sequence: string | number\n    consumer_interfaces_link: ConsumerInterfaceLinkDTO[]\n}\n\n\n/**\n * Classe che contiene gli attributi che indicano l'area di appartenenza di un modulo (complex).\n */\nexport class AreaDTO {\n    id: string | number;\n    uuid: string;\n    name: string;\n    description: string;\n    theater: TheaterDTO;\n    deleted: boolean | string;\n}\n\n/**\n * Classe che contiene gli attributi che indicano l'area di appartenenza di un modulo (simple).\n */\nexport class SimpleAreaDTO {\n    area: string\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà dell'istanza di un teatro all'interno del node_templates.\n */\nexport class TheaterInstancePropertiesDTO {\n    mode: string\n    tags: TagTIP[]\n    areas: SimpleAreaDTO[]\n    author: string\n    version: string | number\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano un tag.\n */\nexport class TagTIP{\n    tag: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano in via generale le caratteristiche di un elemento che deve essere presente nel node_templates.\n */\nexport class ElementIntoTheaterDTO {  // goes into map in blueprint [name:string]: Module...\n    properties: ModuleInstancePropertiesDTO | TheaterInstancePropertiesDTO\n    type: string\n}\n\n\n/**\n * Classe che contiene gli attributi che indicano le caratteristiche di un teatro presente nel node_templates.\n */\nexport class ModuleInstanceDTO {\n    properties: ModuleInstancePropertiesDTO\n    type: string\n}\n/**\n * Classe che contiene gli attributi che indicano le caratteristiche di un modulo presente nel node_templates.\n */\nexport class TheaterInstanceDTO {\n    properties: TheaterInstancePropertiesDTO\n    type: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/SingleDataInputReturned.html":{"url":"classes/SingleDataInputReturned.html","title":"class - SingleDataInputReturned","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  SingleDataInputReturned\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/data-input/dataInputType.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Singolo elemento dato in ritorno al submit.\nSee {DataInputComponet}\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                text\n                            \n                            \n                                type\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/data-input/dataInputType.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        text\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/data-input/dataInputType.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/data-input/dataInputType.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         any\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/data-input/dataInputType.ts:75\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class DataInputElement{\n    element: Array;\n}\n\n/**\n * Tipo di dato Input contenente variabili generali.\n * @see {DataInputComponet}\n */\nexport class DataInput{\n    id: string;\n    text?: string;\n    type: \"textarea\" | \"text\" | \"selection\" | \"checkbox\";\n    data_prepended?: string;\n    data_appended?: string;\n    required: boolean;\n}\n/**\n * Tipo input text base/area.\n * Estende DataInput.\n  * @see {DataInputComponet}\n */\nexport class DataInputText extends DataInput{\n    placeholder?: string;\n}\n/**\n * Tipo input selection.\n * Estende DataInput.\n  * @see {DataInputComponet}\n */\nexport class DataInputSelection extends DataInput{\n    multiple?: boolean;\n    selected_number: number;\n    selection: SelectOption[];\n}\n/**\n * Tipo input check (toggle).\n * Estende DataInput.\n * @see {DataInputComponet}\n */\nexport class DataInputCheck  extends DataInput{\n    checked?: boolean;\n}\n\n/**\n * Tipo usato per le selezioni (multiselect option).\n  * @see {DataInputComponet}\n */\nexport class SelectOption{\n    value: string;\n    text: string;\n    other?: any;\n}\n\n/**\n * Tipo di ritorno della componente DataInputReturned.\n  * @see {DataInputComponet}\n */\nexport class DataInputReturned{\n    element: { [key:string]: SingleDataInputReturned};\n    isValid: boolean;\n    exitStatus?: 'submitted' | 'cancel' | 'error';\n}\n/**\n * Singolo elemento dato in ritorno al submit.\n  * @see {DataInputComponet}\n */\nexport class SingleDataInputReturned{\n    id: string;\n    text: string;\n    type: string;\n    value: any;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/SortDTO.html":{"url":"classes/SortDTO.html","title":"class - SortDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  SortDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsDTO/elementDTO.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano il tipo di sorting ritornato dalle api.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                empty\n                            \n                            \n                                sorted\n                            \n                            \n                                unsorted\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        empty\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/elementDTO.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sorted\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/elementDTO.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unsorted\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/elementDTO.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class SortDTO {\n    empty: boolean\n    sorted: boolean\n    unsorted: boolean\n}\n/**\n * Classe che contiene gli attributi che indicano il tipo di paging ritornato dalle api.\n */\nexport class PageableDTO {\n    offset: string | number\n    pageNumber: string | number\n    pageSize: string | number\n    paged: boolean\n    sort: SortDTO\n    unpaged: boolean\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/SourceExport.html":{"url":"classes/SourceExport.html","title":"class - SourceExport","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  SourceExport\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsExport/theaterExport.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano le porte di ingresso del modulo all'interno dei node_templates.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                host\n                            \n                            \n                                interfaces\n                            \n                            \n                                module_instance\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        host\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/theaterExport.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        interfaces\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/theaterExport.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        module_instance\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/theaterExport.ts:69\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ModeTypeExport, ModuleTypeExport, TheaterTypeExport, ToscaDefinitionType } from \"./TypeExport\"\n\n/**\n * Classe utilizzata per l'export. \n * Contiene le informazioni generali per il teatro che devono esserci nello standard Tosca.\n */\nexport class TheaterExport {\n    tosca_definitions_version: ToscaDefinitionType\n    description: string\n    imports: string[]\n    node_templates: { [name: string]: TheaterSimpleData | ModuleInstanceSimpleData }\n}\n/**\n * Classe che contiene gli attributi che indicano il teatro all'interno dei node_templates.\n */\nexport class TheaterSimpleData {\n    type: TheaterTypeExport\n    properties: PropertiesTSD\n}\n/**\n * Classe che contiene gli attributi che indicano le proprietà del teatro.\n */\nexport class PropertiesTSD {\n    version: string | number\n    description: string\n    mode: ModeTypeExport\n    author: string\n    tags: TagsExport[]\n    areas: AreaExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano i tag nelle proprietà del teatro.\n * @see {PropertiesTSD}\n */\nexport class TagsExport {\n    tag: string\n}\n/**\n * Classe che contiene gli attributi che indicano le aree nelle proprietà del teatr.\n * @see {PropertiesTSD}\n */\nexport class AreaExport {\n    area: string\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano il modulo all'interno dei node_modules.\n */\nexport class ModuleInstanceSimpleData {\n    type: ModuleTypeExport\n    properties: PropertiesMISD\n}\n/**\n * Classe che contiene gli attributi che indicano le propeitò del modulo all'interno dei node_templates.\n */\nexport class PropertiesMISD{\n    module: string\n    version: string | number\n    area: string\n    sequence: number\n    sources?: SourceExport[]\n    consumer_interface_link: ConsumerInterfaceLinkExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano le porte di ingresso del modulo all'interno dei node_templates.\n */\nexport class SourceExport{\n    module_instance: string\n    host:string\n    interfaces: string[]\n}\n/**\n * Classe che contiene gli attributi che indicano i collegamenti e relazioni intramodulo con le varie interfacce.\n */\nexport class ConsumerInterfaceLinkExport{\n    local_interface: string\n    module_interface:string\n    remote_interface:string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/SpinnerData.html":{"url":"classes/SpinnerData.html","title":"class - SpinnerData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  SpinnerData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/application/spinner/spinner.service.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe utilizzata per lo stato dello spinner.\nSee {SpinnerService}\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                show\n                            \n                            \n                                text\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        show\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/application/spinner/spinner.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        text\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/application/spinner/spinner.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { Observable, Subject } from 'rxjs';\n\n/**\n * Classe utilizzata per lo stato dello spinner.\n * @see {SpinnerService}\n */\nclass SpinnerData {\n  show: boolean;\n  text: string\n}\n\n/**\n * Servizio di settaggio dello spinner (operazioni di loading).\n * Questo serivizio è associato allo spinner situato nell'AppComponent.\n * Questo servizio rende raggiungibile lo stesso dalle diverse componenti dell'applicazione. \n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class SpinnerService {\n\n  /**\n   * Variabile che memorizza lo stato dello spinner.\n   * @type {Subject}\n   */\n  protected spinnerData: Subject = new Subject();\n\n  /**\n   * Costruttore dello SpinnerService\n   * Setta lo spinner come \"hide\"\n   * @param ss \n   */\n  constructor(private ss: NgxSpinnerService) {\n    this.setSpinner(false);\n  }\n\n  /**\n   * Funzione che ritorna l'observable dello stato dello spinner.\n   * @returns {Observable}\n   */\n  getSpinner(): Observable {\n    return this.spinnerData.asObservable();\n  }\n\n  /**\n   * Funzone che setta lo stato dello spinner.\n   * @param show \n   * @param text \n   */\n  setSpinner(show: boolean, text: string = \"Loading\") {\n    this.spinnerData.next({ show: show, text: text });\n    show\n      ? this.ss.show()\n      : this.ss.hide();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"injectables/SpinnerService.html":{"url":"injectables/SpinnerService.html","title":"injectable - SpinnerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SpinnerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/application/spinner/spinner.service.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Servizio di settaggio dello spinner (operazioni di loading).\nQuesto serivizio è associato allo spinner situato nell'AppComponent.\nQuesto servizio rende raggiungibile lo stesso dalle diverse componenti dell'applicazione.\n\n            \n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                spinnerData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                getSpinner\n                            \n                            \n                                setSpinner\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Costruttore\n        \n            \n                \n                    \nconstructor(ss: NgxSpinnerService)\n                    \n                \n                        \n                            \n                                Definito in src/app/services/application/spinner/spinner.service.ts:28\n                            \n                        \n\n                \n                    \n                            Costruttore dello SpinnerService\nSetta lo spinner come \"hide\"\n\n                            \n                                    Parametri :\n                                    \n                                        \n                                            \n                                                Nome\n                                                    Tipo\n                                                Opzionale\n                                            \n                                        \n                                        \n                                                \n                                                        ss\n                                                  \n                                                        \n                                                                        NgxSpinnerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        getSpinner\n                        \n                    \n                \n            \n            \n                \ngetSpinner()\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/spinner/spinner.service.ts:43\n                \n            \n\n\n            \n                \n                    Funzione che ritorna l'observable dello stato dello spinner.\n\n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSpinner\n                        \n                    \n                \n            \n            \n                \nsetSpinner(show: boolean, text: string)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/application/spinner/spinner.service.ts:52\n                \n            \n\n\n            \n                \n                    Funzone che setta lo stato dello spinner.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                    Valore predefinito\n                                \n                            \n                            \n                                \n                                    show\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        \"Loading\"\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        spinnerData\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         Subject\n\n                    \n                \n                \n                    \n                        Valore predefinito : new Subject()\n                    \n                \n                    \n                        \n                                Definito in src/app/services/application/spinner/spinner.service.ts:28\n                        \n                    \n\n            \n                \n                    Variabile che memorizza lo stato dello spinner.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { Observable, Subject } from 'rxjs';\n\n/**\n * Classe utilizzata per lo stato dello spinner.\n * @see {SpinnerService}\n */\nclass SpinnerData {\n  show: boolean;\n  text: string\n}\n\n/**\n * Servizio di settaggio dello spinner (operazioni di loading).\n * Questo serivizio è associato allo spinner situato nell'AppComponent.\n * Questo servizio rende raggiungibile lo stesso dalle diverse componenti dell'applicazione. \n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class SpinnerService {\n\n  /**\n   * Variabile che memorizza lo stato dello spinner.\n   * @type {Subject}\n   */\n  protected spinnerData: Subject = new Subject();\n\n  /**\n   * Costruttore dello SpinnerService\n   * Setta lo spinner come \"hide\"\n   * @param ss \n   */\n  constructor(private ss: NgxSpinnerService) {\n    this.setSpinner(false);\n  }\n\n  /**\n   * Funzione che ritorna l'observable dello stato dello spinner.\n   * @returns {Observable}\n   */\n  getSpinner(): Observable {\n    return this.spinnerData.asObservable();\n  }\n\n  /**\n   * Funzone che setta lo stato dello spinner.\n   * @param show \n   * @param text \n   */\n  setSpinner(show: boolean, text: string = \"Loading\") {\n    this.spinnerData.next({ show: show, text: text });\n    show\n      ? this.ss.show()\n      : this.ss.hide();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/StatisticItemDTO.html":{"url":"classes/StatisticItemDTO.html","title":"class - StatisticItemDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  StatisticItemDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsDTO/moduleDTO.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano le statitistiche di un modulo.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                inserted\n                            \n                            \n                                updated\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:93\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        inserted\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:95\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updated\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:94\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PageableDTO, SortDTO } from './elementDTO';\nimport { NetworkDTO } from './networkDTO';\nimport { TheaterDTO } from './theaterDTO';\n\n/**\n * Classe che contiene gli attributi che indicano l'insieme dei moduli ritornati dal teatro.\n */\nexport class ModuleListDTO {\n    content: SimpleModuleDTO[]\n    pageable: PageableDTO\n    last: boolean\n    totalPages: string | number\n    totalElements: string | number\n    size: string | number\n    number: string | number\n    sort: SortDTO\n    numberOfElements: string | number\n    first: boolean\n    empty: boolean\n}\n\n/**\n * Classe che contiene gli attributi che indica il catalogo del tipo.\n */\nexport class TypesCatalogueDTO {\n    group: string\n    id: string | number\n    parentId: {}\n    value: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano la classificazione del modulo.\n */\nexport class ModuleClassificationDTO {\n    blueprintType: string\n    category: string\n    expectedInstanceType: string\n    id: string | number\n    mcClass: string\n    type: string\n    uuid: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano un parametro generico.\n */\nexport class GenericParameterDTO {\n    type: string\n    default: string\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano i parametri di configurazione di un modulto.\n */\nexport class ConfigurationTemplateDTO {\n    anchor_parameters: { [name: string]: GenericParameterDTO | string }\n    instance_parameters: { [name: string]: GenericParameterDTO }\n    structural_parameters: { [name: string]: GenericParameterDTO }\n    fixed_parameters: { [name: string]: GenericParameterDTO }\n    control_parameters: { [name: string]: GenericParameterDTO }\n    infrastructure_parameters: { [name: string]: GenericParameterDTO }\n    module: string\n    description: string\n    category: string\n    version: string | number\n    platform: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano la modalità di un modulo.\n */\nexport class ModuleModeDTO {\n    code: string\n    id: string | number\n    name: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano lo stato di un modulo.\n */\nexport class ModuleStatusDTO {\n    descriptionCode: string\n    id: string | number\n    name: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le statitistiche di un modulo.\n */\nexport class StatisticItemDTO {\n    error: string | number\n    updated: string | number\n    inserted: string | number\n}\n\n/**\n * Classe che contiene gli attributi che indicano il modulo (simple - in dipendenza del teatro).\n */\nexport class SimpleModuleDTO {\n    createdBy: string\n    createdDate: string\n    description: string\n    id: string | number\n    isLocked: boolean\n    lastModifiedBy: string\n    lastModifiedDate: string\n    lockAcquiredTimestamp: string\n    lockLastUserAcquiring: string\n    lockReleasedTimestamp: string\n    name: string\n    status: ModuleStatusDTO\n    type?: string | any\n    uuid: string\n    version: string | number\n}\n\n/**\n * Classe che contiene gli attributi che indicano il modulo (complex - ritorato da call appostita).\n * @extends {SimpleModuleDTO}\n */\nexport class ModuleDTO extends SimpleModuleDTO {\n    attachments: string[]\n    author: string\n    capabilities: { [name: string]: string }\n    catalog1: TypesCatalogueDTO\n    catalog2: TypesCatalogueDTO\n    catalog3: TypesCatalogueDTO\n    classification: ModuleClassificationDTO\n    configurationTemplate: ConfigurationTemplateDTO\n    detailProperties: {}\n    input: { [name: string]: string }\n    output: { [name: string]: string }\n    mode: ModuleModeDTO\n    statistics: { [name: string]: StatisticItemDTO | string | number }\n    tags: []\n}\n\n/**\n * Classe che contiene gli attributi che indicano le interfacce esposte da un modulo.\n */\nexport class ModuleNetworkInterfaceDTO {\n    id: string | number\n    label: string\n    module: ModuleDTO\n    network: NetworkDTO\n    nodeName: string\n    type: string\n    uuid: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le connessioni interfaccia-modulo.\n */\nexport class ConsumerInterfaceLinkDTO {\n    local_interface: string\n    module_instance: string\n    remote_interface: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà dell'istanza di un modulo all'interno del node_templates.\n */\nexport class ModuleInstancePropertiesDTO {\n    area: string\n    description: string\n    module: string\n    version: string | number\n    sequence: string | number\n    consumer_interfaces_link: ConsumerInterfaceLinkDTO[]\n}\n\n\n/**\n * Classe che contiene gli attributi che indicano l'area di appartenenza di un modulo (complex).\n */\nexport class AreaDTO {\n    id: string | number;\n    uuid: string;\n    name: string;\n    description: string;\n    theater: TheaterDTO;\n    deleted: boolean | string;\n}\n\n/**\n * Classe che contiene gli attributi che indicano l'area di appartenenza di un modulo (simple).\n */\nexport class SimpleAreaDTO {\n    area: string\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà dell'istanza di un teatro all'interno del node_templates.\n */\nexport class TheaterInstancePropertiesDTO {\n    mode: string\n    tags: TagTIP[]\n    areas: SimpleAreaDTO[]\n    author: string\n    version: string | number\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano un tag.\n */\nexport class TagTIP{\n    tag: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano in via generale le caratteristiche di un elemento che deve essere presente nel node_templates.\n */\nexport class ElementIntoTheaterDTO {  // goes into map in blueprint [name:string]: Module...\n    properties: ModuleInstancePropertiesDTO | TheaterInstancePropertiesDTO\n    type: string\n}\n\n\n/**\n * Classe che contiene gli attributi che indicano le caratteristiche di un teatro presente nel node_templates.\n */\nexport class ModuleInstanceDTO {\n    properties: ModuleInstancePropertiesDTO\n    type: string\n}\n/**\n * Classe che contiene gli attributi che indicano le caratteristiche di un modulo presente nel node_templates.\n */\nexport class TheaterInstanceDTO {\n    properties: TheaterInstancePropertiesDTO\n    type: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"injectables/StorageService.html":{"url":"injectables/StorageService.html","title":"injectable - StorageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/application/storage/storage.service.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Service che si occupa dello storaging di dati condivisibili attraverso le componenti.\n\n            \n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _data\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessori\n                        \n                    \n                    \n                        \n                            \n                                \n                                    data\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Costruttore\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Definito in src/app/services/application/storage/storage.service.ts:27\n                            \n                        \n\n            \n        \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _data\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         any\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/application/storage/storage.service.ts:14\n                        \n                    \n\n            \n                \n                    Variabile che memorizza le informazioni da salvare\n\n                \n            \n\n        \n    \n\n\n            \n    \n        Accessori\n    \n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n\n                \n                    \n                        getdata()\n                    \n                \n                            \n                                \n                                    Definito in src/app/services/application/storage/storage.service.ts:25\n                                \n                            \n                    \n                        \n                                Funzione che ritorna i dati memorizzati.\n\n\n                        \n                    \n\n                \n                    \n                        setdata(data: any)\n                    \n                \n                            \n                                \n                                    Definito in src/app/services/application/storage/storage.service.ts:19\n                                \n                            \n                    \n                        \n                                Funzione che consente di settare i dati.\n\n\n                                \n                                        Parametri :\n                                        \n                                            \n                                                \n                                                    Nome\n                                                        Tipo\n                                                    Opzionale\n                                                \n                                            \n                                            \n                                                    \n                                                            data\n                                                    \n                                                            \n                                                                            any\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n * Service che si occupa dello storaging di dati condivisibili attraverso le componenti.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class StorageService {\n\n  /**\n   * Variabile che memorizza le informazioni da salvare\n   */\n  private _data: any;\n\n  /**\n   * Funzione che consente di settare i dati.\n   */\n  set data(data: any) {\n    this._data = data;\n  }\n  /**\n   * Funzione che ritorna i dati memorizzati.\n   */\n  get data() {\n    return this._data;\n  }\n\n  constructor() { }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"components/SubnetComponent.html":{"url":"components/SubnetComponent.html","title":"component - SubnetComponent","body":"\n                   \n\n\n\n\n\n  Componenti\n  \n  SubnetComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/rete-settings/nodes/rete-nodes/subnet/subnet.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n            NodeComponent\n    \n\n\n\n\n    Metadati\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            NodeService\n                \n            \n\n\n\n            \n                styleUrls\n                ./subnet.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./subnet.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                NodeType\n                            \n                            \n                                showInputOutlet\n                            \n                            \n                                showOutputOutlet\n                            \n                            \n                                showPorts\n                            \n                            \n                                SubnetIcon\n                            \n                        \n                    \n                \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                showhidesocket\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Costruttore\n        \n            \n                \n                    \nconstructor(service: NodeService, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Definito in src/app/rete-settings/nodes/rete-nodes/subnet/subnet.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parametri :\n                                    \n                                        \n                                            \n                                                Nome\n                                                    Tipo\n                                                Opzionale\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                    NodeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        showhidesocket\n                        \n                    \n                \n            \n            \n                \nshowhidesocket()\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-nodes/subnet/subnet.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        NodeType\n                        \n                    \n                \n            \n                \n                    \n                        Valore predefinito : EnumNodeType\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-nodes/subnet/subnet.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showInputOutlet\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                \n                    \n                        Valore predefinito : true\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-nodes/subnet/subnet.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showOutputOutlet\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                \n                    \n                        Valore predefinito : true\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-nodes/subnet/subnet.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showPorts\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                \n                    \n                        Valore predefinito : true\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-nodes/subnet/subnet.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SubnetIcon\n                        \n                    \n                \n            \n                \n                    \n                        Valore predefinito : SubnetIcon\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-nodes/subnet/subnet.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, ChangeDetectorRef, ChangeDetectionStrategy } from '@angular/core';\nimport { NodeComponent, NodeService } from 'rete-angular-render-plugin';\nimport { EnumNodeType } from 'src/app/models/appType';\nimport { SubnetIcon } from 'src/app/rete-settings/style/styleIconConfig';\n// import { EnumNodeType } from 'src/app/rete-settings/models/reteModelType';\n\n@Component({\n  templateUrl: './subnet.component.html',\n  styleUrls: ['./subnet.component.sass',],\n  providers: [NodeService],\n  changeDetection: ChangeDetectionStrategy.OnPush, // render più veloce.\n})\n\nexport class SubnetComponent extends NodeComponent {\n\n  showPorts: boolean = true;\n  showOutputOutlet: boolean = true;\n  showInputOutlet: boolean = true;\n  NodeType = EnumNodeType;\n  SubnetIcon = SubnetIcon;\n\n  constructor(\n    protected service: NodeService,\n    protected cdr: ChangeDetectorRef) {\n    super(service, cdr);\n  }\n\n  showhidesocket() {\n    this.showPorts = !this.showPorts;\n  }\n  \n}\n\n    \n\n    \n        \n\n\n  \n    \n      \n        \n          {{ node.data.name === \"\" || node.data.name === undefined ? \"Assign name\" : node.data.name }}\n        \n      \n      \n        \n          \n          \n        \n      \n    \n   -->\n\n\n  \n  \n    \n      \n        \n          \n            \n              \n                \n              \n              \n                \n                  {{\n                  (node.data.name && node.data.name!=='')\n                  ?node.data.name\n                  :NodeType.SUBNET\n                  }}\n                \n                \n                  {{\n                  (node.data.cidr && node.data.cidr!=='')\n                  ?\"cidr: \"+node.data.cidr\n                  :''\n                  }}\n                \n                \n                  {{\n                  (node.data.isDhcp !== undefined)\n                  ? \"DHCP: \"+ (node.data.isDhcp?\"true\":\"false\")\n                  :''\n                  }}\n                \n                \n                  {{\n                  (node.data.version && node.data.version!=='')\n                  ?\"version: \"+node.data.version\n                  :''\n                  }}\n                \n              \n            \n          \n        \n      \n    \n  \n\n\n  \n    \n      Button with data-bs-target\n    \n  \n  \n    \n      Some placeholder content for the collapse component. This panel is hidden by default but revealed when the user\n      activates the relevant trigger.\n    \n   -->\n\n\n  \n\n    \n    \n      \n        {{output.name}}\n        \n          \n          \n        \n      \n    \n\n\n     -->\n\n    \n    \n      \n        \n          \n          \n          \n        \n        {{input.name}}\n        \n      \n    \n\n  \n    \n\n    \n                \n                    ./subnet.component.sass\n                \n                @import \"../vars\"\n\n.node\n  background: $node-color\n  border: 2px solid #f124\n  border-radius: 10px\n  cursor: pointer\n  min-width: $node-width\n  height: auto\n  padding-bottom: 6px\n  box-sizing: content-box\n  position: relative\n  user-select: none\n  &:hover\n    background: lighten($node-color,4%)\n  &.selected\n    background: $node-color-selected\n    border-color: #ff0000\n  .title\n    color: $text-color\n    font-family: $font-fam\n    font-size: 18px\n    padding: 8px\n  .output\n    text-align: right\n    display: flex\n    justify-content: flex-end\n  .input\n    text-align: left\n    display: flex\n    justify-content: flex-start\n  .input-title,.output-title\n    vertical-align: middle\n    color: $text-color\n    display: inline-block\n    font-family: $font-fam\n    font-size: 14px\n    margin: $socket-margin\n    line-height: $socket-size\n    &[hidden]\n      display: none\n  .input-control\n    z-index: 1\n    width: calc(100% - #{$socket-size + 2*$socket-margin})\n    vertical-align: middle\n    display: inline-block\n  .control\n    padding: $socket-margin $socket-size/2 + $socket-margin\n    \n\n    \n        \n        \n            \n                Legenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento html con direttive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              {{ node.data.name === \"\" || node.data.name === undefined ? \"Assign name\" : node.data.name }}                                                                     -->                                                                                                                                        {{                  (node.data.name && node.data.name!==\\'\\')                  ?node.data.name                  :NodeType.SUBNET                  }}                                                  {{                  (node.data.cidr && node.data.cidr!==\\'\\')                  ?\"cidr: \"+node.data.cidr                  :\\'\\'                  }}                                                  {{                  (node.data.isDhcp !== undefined)                  ? \"DHCP: \"+ (node.data.isDhcp?\"true\":\"false\")                  :\\'\\'                  }}                                                  {{                  (node.data.version && node.data.version!==\\'\\')                  ?\"version: \"+node.data.version                  :\\'\\'                  }}                                                                                    Button with data-bs-target                  Some placeholder content for the collapse component. This panel is hidden by default but revealed when the user      activates the relevant trigger.       -->                        {{output.name}}                                                   -->                                                                    {{input.name}}                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ComposerComponent', 'selector': 'app-composer'},{'name': 'ControlTemplate', 'selector': ''},{'name': 'DataInputComponent', 'selector': 'app-data-input'},{'name': 'DataInputV2Component', 'selector': 'app-data-input-v2'},{'name': 'DataItemComponent', 'selector': 'app-window-item'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HostComponent', 'selector': ''},{'name': 'HowToUseComponent', 'selector': 'app-how-to-use'},{'name': 'MirroringModuleInstanceComponent', 'selector': ''},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavbarElementComponent', 'selector': 'app-navbar-element'},{'name': 'NetworkComponent', 'selector': ''},{'name': 'OffcanvasComponent', 'selector': 'app-offcanvas'},{'name': 'ReteModuleComposerComponent', 'selector': 'app-rete-module-composer'},{'name': 'ReteModuleVisualizerComponent', 'selector': 'app-rete-module-visualizer'},{'name': 'ReteTheaterComposerComponent', 'selector': 'app-rete-theater-composer'},{'name': 'ReteTheaterVisualizerComponent', 'selector': 'app-rete-theater-visualizer'},{'name': 'SubnetComponent', 'selector': ''},{'name': 'TabnavComponent', 'selector': 'app-tabnav'},{'name': 'TheaterInternalServiceModuleInstanceComponent', 'selector': ''},{'name': 'TheaterModuleInstanceComponent', 'selector': ''},{'name': 'UnderbarComponent', 'selector': 'app-underbar'},{'name': 'VisualizerComponent', 'selector': 'app-displayer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SubnetComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/SubnetDTO.html":{"url":"classes/SubnetDTO.html","title":"class - SubnetDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  SubnetDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsDTO/networkDTO.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano le subnet.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                allocationPool\n                            \n                            \n                                borderNetwork\n                            \n                            \n                                cidr\n                            \n                            \n                                dns\n                            \n                            \n                                gateway\n                            \n                            \n                                id\n                            \n                            \n                                isDhcp\n                            \n                            \n                                name\n                            \n                            \n                                network\n                            \n                            \n                                router\n                            \n                            \n                                uuid\n                            \n                            \n                                version\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        allocationPool\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/networkDTO.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        borderNetwork\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         BorderNetworkDTO\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/networkDTO.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cidr\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/networkDTO.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dns\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/networkDTO.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gateway\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/networkDTO.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/networkDTO.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDhcp\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/networkDTO.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/networkDTO.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        network\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         NetworkDTO\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/networkDTO.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         NetOSRouterDTO\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/networkDTO.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uuid\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/networkDTO.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/networkDTO.ts:46\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class NetworkDTO {\n    id: string | number\n    name: string\n    uuid: string\n}\n\n/**\n * Classe che contiene gli attributi che indica la border network.\n */\nexport class BorderNetworkDTO {\n    bnName: string\n    id: string | number\n    subnet: {} | null\n    uuid: string | number\n}\n\n/**\n * Classe che contiene gli attributi che indicano le net os.\n */\nexport class NetOSRouterDTO {\n    borderNetwork: BorderNetworkDTO\n    id: string | number\n    subnet: {} | null\n    uuid: string | number\n}\n\n\n/**\n * Classe che contiene gli attributi che indicano le subnet.\n */\nexport class SubnetDTO {\n    allocationPool: string\n    borderNetwork: BorderNetworkDTO\n    cidr: string\n    dns: string\n    gateway: string\n    id: string | number\n    isDhcp: boolean\n    name: string\n    network: NetworkDTO\n    router: NetOSRouterDTO\n    uuid: string\n    version: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/SubnetExport.html":{"url":"classes/SubnetExport.html","title":"class - SubnetExport","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  SubnetExport\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsExport/moduleExport.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano la subnet connessa alla porte dell'host.\nSee {VirtualMachinePorts}\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                subnet\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        subnet\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:106\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ModeTypeExport, ModuleTypeExport, NetworkTypeExport, NodeTypeExport, PortTypeExport, RelationshipsTypeExport, SubnetTypeExport, ToscaDefinitionType } from \"./TypeExport\"\n\n\n/**\n * Classe utilizzata per l'export. \n * Contiene le informazioni generali per il modulo che devono esserci nello standard Tosca.\n */\nexport class ModuleExport {\n    tosca_definitions_version: ToscaDefinitionType\n    description: string\n    imports: string[]\n    node_templates: { [name: string]: ModuleSimpleData | NodeSimpleData | PortSimpleData | NetworkSimpleData | SubnetSimpleData }\n    dsl_definition: any | null; //future\n    capabilites: any | null //future\n    outputs: any | null //future\n}\n\n/**\n * Classe che contiene gli attributi che indicano la rappresentazione del modulo per l'export.\n */\nexport class ModuleSimpleData {\n    type: ModuleTypeExport\n    properties: PropertiesMSD\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà del modulo per l'export.\n */\nexport class PropertiesMSD {\n    mode: ModeTypeExport\n    description: string\n    version: string | number\n    constraints: ConstraintsMSD\n    interface_networks: {\n        providers: InterfaceNetworksProvider[]\n        consumers: InterfaceNetworksConsumer[]\n    }\n    virtual_machines: VirtualMachine[]\n}\n/**\n * Classe che contiene gli attributi che indicano i vincoli di connessione del modulo per l'export.\n */\nexport class ConstraintsMSD {\n    interface_constraints: InterfaceConstraints[]\n    module_constraints: ModuleConstraints[]\n    network_constraints: NetworkConstraints[]\n}\n/**\n * Classe che contiene gli attributi che indicano i viconli per le interfacce di connessione del modulo.\n */\nexport class InterfaceConstraints {\n    local_interface: string\n    multiple_mode: boolean = false //future\n    module_name: string\n    compatibility: string = \"1.0\" // future\n    remote_interface: string\n}\n/**\n * Classe che contiene gli attributi che indicano i viconli del modulo.\n */\nexport class ModuleConstraints {\n}\n/**\n * Classe che contiene gli attributi che indicano i viconli dei network del modulo.\n */\nexport class NetworkConstraints {\n}\n/**\n * Classe che contiene gli attributi che indicano le interfacce provider del modulo.\n */\nexport class InterfaceNetworksProvider {\n    interface: string\n    network: string\n    tag: string\n    subnets: SubnetExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano le interfacce consumer del modulo.\n */\nexport class InterfaceNetworksConsumer {\n    interface: string\n    network: string\n    tag: string\n    subnets: SubnetExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano l'insieme di host presenti in un modulo.\n */\nexport class VirtualMachine {\n    virtual_machine: string\n    ports: VirtualMachinePorts[]\n}\n/**\n * Classe che contiene gli attributi che indicano le porte associate ad un host di un modulo.\n */\nexport class VirtualMachinePorts {\n    port: string\n    network: string\n    subnets: SubnetExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano la subnet connessa alla porte dell'host.\n * @see {VirtualMachinePorts}\n */\nexport class SubnetExport {\n    subnet: string;\n}\n\n/**\n * Classe che contiene gli attributi che indica un nodo all'interno dei node_templates.\n * @see {ModuleExport}\n */\nexport class NodeSimpleData {\n    type: NodeTypeExport\n    properties: any | null // future\n    interfaces: any | null // future\n    relationships: RelationshipsExport[]\n}\n\n/**\n * Classe che contiene gli attributi che indicano le relazioni generali.\n */\nexport class RelationshipsExport {\n    type: RelationshipsTypeExport\n    target: string\n}\n/**\n * Classe che contiene gli attributi che indicano i dati della porta all'interno dei node_templates.\n */\nexport class PortSimpleData {\n    type: PortTypeExport\n    relationships: RelationshipsExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano i dati delle network all'interno dei node_templates.\n */\nexport class NetworkSimpleData {\n    type: NetworkTypeExport\n    properties: PropertiesNSD\n}\n/**\n * Classe che contiene gli attributi che indicano le proprietà della network all'interno dei node_templates.\n * @see {NetworkSimpleData}\n */\nexport class PropertiesNSD {\n    openstack_config?: any | null // future\n    use_external_resource?: boolean | null // future\n    resource_id?: any | null // future\n}\n\n/**\n * Classe che contiene gli attributi che indicano i dati delle subnet all'interno dei node_templates.\n */\nexport class SubnetSimpleData {\n    type: SubnetTypeExport\n    relationships: RelationshipsExport[]\n    properties: PropertiesSSD\n}\n/**\n * Classe che contiene gli attributi che indicano le proprietà della subnet all'interno dei node_templates.\n * @see {NetworkSimpleData}\n */\nexport class PropertiesSSD {\n    subnet?: {\n        ip_version: string | number\n        cidr: string\n        enable_dhcp: boolean\n        gateway_ip?: any | null // future\n    }\n    openstack_config?: any | null // future\n    use_external_resource?: boolean | null // future\n    resource_id?: any | null // future\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/SubnetNode.html":{"url":"classes/SubnetNode.html","title":"class - SubnetNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  SubnetNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/rete-settings/nodes/rete-nodes/subnet/subnetNode.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che rappresenta il nodo (rete-node) Subnet all'interno del canvas/editor di rete.\n\n            \n\n            \n                Extends\n            \n            \n                        Component\n            \n\n            \n                Implementa\n            \n            \n                        AngularComponent\n            \n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                builder\n                            \n                            \n                                created\n                            \n                            \n                                createNewNode\n                            \n                            \n                                destroyed\n                            \n                            \n                                valorizeNode\n                            \n                            \n                                worker\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Costruttore\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Definito in src/app/rete-settings/nodes/rete-nodes/subnet/subnetNode.ts:46\n                            \n                        \n\n                \n                    \n                            Costruttore di SubnetNode\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     AngularComponentData\n\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-nodes/subnet/subnetNode.ts:46\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        builder\n                        \n                    \n                \n            \n            \n                \n                    \n                    builder(node: Node)\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-nodes/subnet/subnetNode.ts:64\n                \n            \n\n\n            \n                \n                    Funzione richiamata in fase di costruzione del nodo (rete-node).\nControlla se bisogna instanziare il nodo oppure crearne uno nuovo:\n\nIn fase di design, il nodo non ha dati, per cui bisogna crearne uno nuovo.\nIn fase di visualizing, il nodo presenta dei dati, per cui va valorizzato il nodo.\n\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        created\n                        \n                    \n                \n            \n            \n                \ncreated(node)\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-nodes/subnet/subnetNode.ts:127\n                \n            \n\n\n            \n                \n                    Funzione richiamata una volta in nodo creato.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    node\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createNewNode\n                        \n                    \n                \n            \n            \n                \ncreateNewNode(node: Node)\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-nodes/subnet/subnetNode.ts:76\n                \n            \n\n\n            \n                \n                    Funzione che ha come scopo creare un nodo (rete-node).\nIn particolare gli assegna una struttura vuota.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destroyed\n                        \n                    \n                \n            \n            \n                \ndestroyed(node)\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-nodes/subnet/subnetNode.ts:135\n                \n            \n\n\n            \n                \n                    Funzione richiamata una volta in nodo cancellato.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    node\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        valorizeNode\n                        \n                    \n                \n            \n            \n                \nvalorizeNode(node: Node)\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-nodes/subnet/subnetNode.ts:89\n                \n            \n\n\n            \n                \n                    Funzione che ha come scopo la valorizzazione del nodo (rete-node) con i dati in suo possesso.\nIn quasta fase avviene anche la fase iniziale di instanziamento delle porte input/output.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        worker\n                        \n                    \n                \n            \n            \n                \nworker(node: NodeData, inputs: WorkerInputs, outputs: WorkerOutputs)\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-nodes/subnet/subnetNode.ts:119\n                \n            \n\n\n            \n                \n                    Funzione richiamta per eseguire operazioni che conivolgono computazioni dei nodi.\nNon sono necessari in questa versione.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                            NodeData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    inputs\n                                    \n                                            WorkerInputs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    outputs\n                                    \n                                            WorkerOutputs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Component, Input, Output, Node } from 'rete';\nimport { _Socket } from '../../../sockets/socket';\nimport { _Control } from '../../../controls/control';\nimport { AngularComponent, AngularComponentData } from 'rete-angular-render-plugin';\nimport { SubnetComponent } from './subnet.component';\nimport { NodeData, WorkerInputs, WorkerOutputs } from 'rete/types/core/data';\nimport {  reteBasicNodeInfo } from '../../reteBasic';\nimport { EnumNodeType } from 'src/app/models/appType';\n\n/**\n * Classe utilizzata per indicare il tipo di modulo SubnetNode.\n * @see {reteBasicModuleInfo}\n */\nexport class ReteSubnetInfo extends reteBasicNodeInfo {\n  cidr: string;\n  version: string | number;\n  isDhcp: string | boolean;\n  type: EnumNodeType.Subnet;\n}\n\n/**\n * Funzione dichiarata in SubnetNode. \n * Essa ha lo scopo di generare una struttura dati empty.\n * Viene utilizzata in per instanziare un nodo del tipo di ritorno indicato senza dati.\n * @returns {ReteSubnetInfo}\n */\nexport function getEmptySubnetInfo(): ReteSubnetInfo {\n  let x: ReteSubnetInfo = {\n    cidr: \"\",\n    Input: [],\n    Output: [],\n    name: \"\",\n    type: EnumNodeType.Subnet,\n    version: \"\",\n    isDhcp: ''\n  };\n  return x;\n}\n\n\n/**\n * Classe che rappresenta il nodo (rete-node) Subnet all'interno del canvas/editor di rete.\n */\nexport class SubnetNode extends Component implements AngularComponent {\n\n  data: AngularComponentData;\n\n  /**\n   * Costruttore di SubnetNode\n   */\n  constructor() {\n    super(EnumNodeType.Subnet);\n    this.data.render = 'angular';\n    this.data.component = SubnetComponent;\n  }\n\n  /**\n   * Funzione richiamata in fase di costruzione del nodo (rete-node).\n   * Controlla se bisogna instanziare il nodo oppure crearne uno nuovo:\n   * - In fase di design, il nodo non ha dati, per cui bisogna crearne uno nuovo.\n   * - In fase di visualizing, il nodo presenta dei dati, per cui va valorizzato il nodo.\n   * @param node \n   */\n  async builder(node: Node) {\n    if (Object.keys(node.data).length === 0)\n      this.createNewNode(node)\n    else\n      this.valorizeNode(node)\n  }\n\n  /**\n   * Funzione che ha come scopo creare un nodo (rete-node).\n   * In particolare gli assegna una struttura vuota.\n   * @param node \n   */\n  createNewNode(node: Node) {\n    let t = getEmptySubnetInfo()\n    node.data = {\n      ...node.data,\n      ...t\n    }\n  }\n\n  /**\n   * Funzione che ha come scopo la valorizzazione del nodo (rete-node) con i dati in suo possesso.\n   * In quasta fase avviene anche la fase iniziale di instanziamento delle porte input/output.\n   * @param node \n   */\n  valorizeNode(node: Node) {\n    var i: any = node.data['Input'];\n    var o: any = node.data['Output'];\n    var il = i.length;\n    var ol = o.length;\n\n    for (let index = 0; index \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/SubnetSimpleData.html":{"url":"classes/SubnetSimpleData.html","title":"class - SubnetSimpleData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  SubnetSimpleData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsExport/moduleExport.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano i dati delle subnet all'interno dei node_templates.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                properties\n                            \n                            \n                                relationships\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        properties\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         PropertiesSSD\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:157\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        relationships\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         RelationshipsExport[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:156\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         SubnetTypeExport\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:155\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ModeTypeExport, ModuleTypeExport, NetworkTypeExport, NodeTypeExport, PortTypeExport, RelationshipsTypeExport, SubnetTypeExport, ToscaDefinitionType } from \"./TypeExport\"\n\n\n/**\n * Classe utilizzata per l'export. \n * Contiene le informazioni generali per il modulo che devono esserci nello standard Tosca.\n */\nexport class ModuleExport {\n    tosca_definitions_version: ToscaDefinitionType\n    description: string\n    imports: string[]\n    node_templates: { [name: string]: ModuleSimpleData | NodeSimpleData | PortSimpleData | NetworkSimpleData | SubnetSimpleData }\n    dsl_definition: any | null; //future\n    capabilites: any | null //future\n    outputs: any | null //future\n}\n\n/**\n * Classe che contiene gli attributi che indicano la rappresentazione del modulo per l'export.\n */\nexport class ModuleSimpleData {\n    type: ModuleTypeExport\n    properties: PropertiesMSD\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà del modulo per l'export.\n */\nexport class PropertiesMSD {\n    mode: ModeTypeExport\n    description: string\n    version: string | number\n    constraints: ConstraintsMSD\n    interface_networks: {\n        providers: InterfaceNetworksProvider[]\n        consumers: InterfaceNetworksConsumer[]\n    }\n    virtual_machines: VirtualMachine[]\n}\n/**\n * Classe che contiene gli attributi che indicano i vincoli di connessione del modulo per l'export.\n */\nexport class ConstraintsMSD {\n    interface_constraints: InterfaceConstraints[]\n    module_constraints: ModuleConstraints[]\n    network_constraints: NetworkConstraints[]\n}\n/**\n * Classe che contiene gli attributi che indicano i viconli per le interfacce di connessione del modulo.\n */\nexport class InterfaceConstraints {\n    local_interface: string\n    multiple_mode: boolean = false //future\n    module_name: string\n    compatibility: string = \"1.0\" // future\n    remote_interface: string\n}\n/**\n * Classe che contiene gli attributi che indicano i viconli del modulo.\n */\nexport class ModuleConstraints {\n}\n/**\n * Classe che contiene gli attributi che indicano i viconli dei network del modulo.\n */\nexport class NetworkConstraints {\n}\n/**\n * Classe che contiene gli attributi che indicano le interfacce provider del modulo.\n */\nexport class InterfaceNetworksProvider {\n    interface: string\n    network: string\n    tag: string\n    subnets: SubnetExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano le interfacce consumer del modulo.\n */\nexport class InterfaceNetworksConsumer {\n    interface: string\n    network: string\n    tag: string\n    subnets: SubnetExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano l'insieme di host presenti in un modulo.\n */\nexport class VirtualMachine {\n    virtual_machine: string\n    ports: VirtualMachinePorts[]\n}\n/**\n * Classe che contiene gli attributi che indicano le porte associate ad un host di un modulo.\n */\nexport class VirtualMachinePorts {\n    port: string\n    network: string\n    subnets: SubnetExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano la subnet connessa alla porte dell'host.\n * @see {VirtualMachinePorts}\n */\nexport class SubnetExport {\n    subnet: string;\n}\n\n/**\n * Classe che contiene gli attributi che indica un nodo all'interno dei node_templates.\n * @see {ModuleExport}\n */\nexport class NodeSimpleData {\n    type: NodeTypeExport\n    properties: any | null // future\n    interfaces: any | null // future\n    relationships: RelationshipsExport[]\n}\n\n/**\n * Classe che contiene gli attributi che indicano le relazioni generali.\n */\nexport class RelationshipsExport {\n    type: RelationshipsTypeExport\n    target: string\n}\n/**\n * Classe che contiene gli attributi che indicano i dati della porta all'interno dei node_templates.\n */\nexport class PortSimpleData {\n    type: PortTypeExport\n    relationships: RelationshipsExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano i dati delle network all'interno dei node_templates.\n */\nexport class NetworkSimpleData {\n    type: NetworkTypeExport\n    properties: PropertiesNSD\n}\n/**\n * Classe che contiene gli attributi che indicano le proprietà della network all'interno dei node_templates.\n * @see {NetworkSimpleData}\n */\nexport class PropertiesNSD {\n    openstack_config?: any | null // future\n    use_external_resource?: boolean | null // future\n    resource_id?: any | null // future\n}\n\n/**\n * Classe che contiene gli attributi che indicano i dati delle subnet all'interno dei node_templates.\n */\nexport class SubnetSimpleData {\n    type: SubnetTypeExport\n    relationships: RelationshipsExport[]\n    properties: PropertiesSSD\n}\n/**\n * Classe che contiene gli attributi che indicano le proprietà della subnet all'interno dei node_templates.\n * @see {NetworkSimpleData}\n */\nexport class PropertiesSSD {\n    subnet?: {\n        ip_version: string | number\n        cidr: string\n        enable_dhcp: boolean\n        gateway_ip?: any | null // future\n    }\n    openstack_config?: any | null // future\n    use_external_resource?: boolean | null // future\n    resource_id?: any | null // future\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"components/TabnavComponent.html":{"url":"components/TabnavComponent.html","title":"component - TabnavComponent","body":"\n                   \n\n\n\n\n\n  Componenti\n  \n  TabnavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/tabnav/tabnav.component.ts\n\n\n\n    \n        Descrizione\n    \n    \n        Componente utilizzata per la suddivisione dei tab a contenuto generico.\n\n    \n\n\n    \n        Implementa\n    \n    \n                    OnInit\n    \n\n\n\n    Metadati\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tabnav\n            \n\n            \n                styleUrls\n                ./tabnav.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./tabnav.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                activetab\n                            \n                            \n                                    Protected\n                                hasMultipleTag\n                            \n                        \n                    \n                \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                active\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Input\n                    \n                \n                \n                    \n                        \n                            \n                                alt_title\n                            \n                            \n                                element\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Costruttore\n        \n            \n                \n                    \nconstructor(cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Definito in src/app/components/tabnav/tabnav.component.ts:40\n                            \n                        \n\n                \n                    \n                            Costrutture TabnavComponent.\n\n                            \n                                    Parametri :\n                                    \n                                        \n                                            \n                                                Nome\n                                                    Tipo\n                                                Opzionale\n                                            \n                                        \n                                        \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Input\n        \n            \n                \n                    \n                        \n                        alt_title\n                    \n                \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                    Definito in src/app/components/tabnav/tabnav.component.ts:23\n                            \n                        \n                \n                    \n                        Variabile data in input che rappresenta il titolo alternativo dalla tab.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        element\n                    \n                \n                \n                    \n                        Tipo :         TabnavElement\n\n                    \n                \n                        \n                            \n                                    Definito in src/app/components/tabnav/tabnav.component.ts:28\n                            \n                        \n                \n                    \n                        Variabile data in input che contiene le caratteristiche/quantità della tab.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                    Definito in src/app/components/tabnav/tabnav.component.ts:18\n                            \n                        \n                \n                    \n                        Variabile data in input che rappresenta il titolo dalla tab.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        active\n                        \n                    \n                \n            \n            \n                \nactive(val: string | any)\n                \n            \n\n\n            \n                \n                    Definito in src/app/components/tabnav/tabnav.component.ts:63\n                \n            \n\n\n            \n                \n                    Funzione richiamata quando si seleziona una tab.\nSee {activetab}\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                            string | any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Definito in src/app/components/tabnav/tabnav.component.ts:53\n                \n            \n\n\n            \n                \n                    Funzione richiamata all'inizializzazione del componente.\nControlla che ci siano 1 o più tab.\nSetta la prima tab attiva, in modo da essere mostrata.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        activetab\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/tabnav/tabnav.component.ts:40\n                        \n                    \n\n            \n                \n                    Variabile che indica l'id della tab selezionata.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        hasMultipleTag\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                \n                    \n                        Valore predefinito : true\n                    \n                \n                    \n                        \n                                Definito in src/app/components/tabnav/tabnav.component.ts:34\n                        \n                    \n\n            \n                \n                    Variabile che indica se ci siano più tab.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectorRef, Component, Input, OnInit } from '@angular/core';\nimport { TabnavElement } from './tabnavType';\n\n/**\n * Componente utilizzata per la suddivisione dei tab a contenuto generico.\n */\n@Component({\n  selector: 'app-tabnav',\n  templateUrl: './tabnav.component.html',\n  styleUrls: ['./tabnav.component.sass']\n})\nexport class TabnavComponent implements OnInit {\n\n  /**\n   * Variabile data in input che rappresenta il titolo dalla tab.\n   * @type {string}\n   */\n  @Input() title: string;\n  /**\n   * Variabile data in input che rappresenta il titolo alternativo dalla tab.\n   * @type {string}\n   */\n  @Input() alt_title: string;\n  /**\n   * Variabile data in input che contiene le caratteristiche/quantità della tab.\n   * @type {TabnavElement}\n  */ \n  @Input() element: TabnavElement;\n\n  /**\n   * Variabile che indica se ci siano più tab.\n   * @type {boolean}\n   */\n  protected hasMultipleTag: boolean = true;\n\n  /**\n   * Variabile che indica l'id della tab selezionata.\n   * @type {string}\n   */\n  protected activetab: string;\n\n  /**\n   * Costrutture TabnavComponent.\n   * @param cdr \n   */\n  constructor(private cdr: ChangeDetectorRef) { }\n\n  /**\n   * Funzione richiamata all'inizializzazione del componente.\n   * Controlla che ci siano 1 o più tab.\n   * Setta la prima tab attiva, in modo da essere mostrata. \n   */\n  ngOnInit(): void {\n    this.hasMultipleTag = (this.element.element.length > 1) ? true : false;\n    this.active(this.element.element[0].id);\n  }\n\n  /**\n   * Funzione richiamata quando si seleziona una tab.\n   * @see {activetab} \n   * @param val \n   */\n  active(val: string | any) {\n    this.activetab = val;\n    this.cdr.detectChanges();\n  }\n\n}\n\n    \n\n    \n        \n\n    \n        \n            {{item.text}}\n        \n    \n\n\n\n\n    \n    \n        \n\n            \n\n        \n    \n\n\n    \n\n    \n                \n                    ./tabnav.component.sass\n                \n                .text-tab-selected\n    // font-size: 1.5em\n    color: white !important\n    font-weight: bold\n\n.text-tab-unselected\n    // fonr-size: 1em\n    color: #93a1ba !important\n\n.my-tab-content\n    width: 100%\n    height: 100%\n    overflow: hidden\n    word-break: break-all\n    padding-left: 2em\n    padding-right: 2em\n    padding-bottom: 10em\n\n.cursor-pointer\n    cursor: pointer\n    \n\n    \n        \n        \n            \n                Legenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento html con direttive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        {{item.text}}                                                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ComposerComponent', 'selector': 'app-composer'},{'name': 'ControlTemplate', 'selector': ''},{'name': 'DataInputComponent', 'selector': 'app-data-input'},{'name': 'DataInputV2Component', 'selector': 'app-data-input-v2'},{'name': 'DataItemComponent', 'selector': 'app-window-item'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HostComponent', 'selector': ''},{'name': 'HowToUseComponent', 'selector': 'app-how-to-use'},{'name': 'MirroringModuleInstanceComponent', 'selector': ''},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavbarElementComponent', 'selector': 'app-navbar-element'},{'name': 'NetworkComponent', 'selector': ''},{'name': 'OffcanvasComponent', 'selector': 'app-offcanvas'},{'name': 'ReteModuleComposerComponent', 'selector': 'app-rete-module-composer'},{'name': 'ReteModuleVisualizerComponent', 'selector': 'app-rete-module-visualizer'},{'name': 'ReteTheaterComposerComponent', 'selector': 'app-rete-theater-composer'},{'name': 'ReteTheaterVisualizerComponent', 'selector': 'app-rete-theater-visualizer'},{'name': 'SubnetComponent', 'selector': ''},{'name': 'TabnavComponent', 'selector': 'app-tabnav'},{'name': 'TheaterInternalServiceModuleInstanceComponent', 'selector': ''},{'name': 'TheaterModuleInstanceComponent', 'selector': ''},{'name': 'UnderbarComponent', 'selector': 'app-underbar'},{'name': 'VisualizerComponent', 'selector': 'app-displayer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TabnavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/TabnavElement.html":{"url":"classes/TabnavElement.html","title":"class - TabnavElement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  TabnavElement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/tabnav/tabnavType.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Elemento utilizzato come input dalla componente TabnavComponent\nSee {TabnavComponent}\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                element\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        element\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         TabnavItem[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/tabnav/tabnavType.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { TemplateRef } from \"@angular/core\";\n\n/**\n * Elemento utilizzato come input dalla componente TabnavComponent\n * @see {TabnavComponent}\n */\nexport class TabnavElement {\n    element: TabnavItem[];\n}\n\n/**\n * Elemento che rappresenta una singola tab.\n * @see {TabnavComponent}\n */\nexport class TabnavItem {\n    id: string;\n    text: string;\n    template: TemplateRef\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/TabnavItem.html":{"url":"classes/TabnavItem.html","title":"class - TabnavItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  TabnavItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/tabnav/tabnavType.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Elemento che rappresenta una singola tab.\nSee {TabnavComponent}\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                template\n                            \n                            \n                                text\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/tabnav/tabnavType.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        template\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     TemplateRef\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/tabnav/tabnavType.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        text\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/tabnav/tabnavType.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { TemplateRef } from \"@angular/core\";\n\n/**\n * Elemento utilizzato come input dalla componente TabnavComponent\n * @see {TabnavComponent}\n */\nexport class TabnavElement {\n    element: TabnavItem[];\n}\n\n/**\n * Elemento che rappresenta una singola tab.\n * @see {TabnavComponent}\n */\nexport class TabnavItem {\n    id: string;\n    text: string;\n    template: TemplateRef\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/TagCatalogueDTO.html":{"url":"classes/TagCatalogueDTO.html","title":"class - TagCatalogueDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  TagCatalogueDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsDTO/theaterDTO.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano il catalogo di riferimento di un teatro.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/theaterDTO.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/theaterDTO.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/theaterDTO.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ModuleInstanceDTO, TheaterInstanceDTO } from \"./moduleDTO\"\n\n/**\n * Classe che contiene gli attributi che indicano il catalogo di riferimento di un teatro.\n */\nexport class TagCatalogueDTO {\n    description: string\n    id: string | number\n    name: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano lo stato di un teatro.\n */\nexport class TheatreStatusDTO {\n    code: string\n    id: string | number\n    name: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano un elemento nella sequenza di deploy.\n */\nexport class DeployInstanceDTO {\n    moduleInstanceConfigurationUUID?: string\n    moduleInstanceName: string\n    moduleInstanceUUID: string\n    moduleUUID: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano il blueprint di un teatro.\n */\nexport class BlueprintFileDTO {\n    description: string\n    imports: string[]\n    node_templates: {[name:string]:ModuleInstanceDTO|TheaterInstanceDTO}\n    tosca_definitions_version: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano il mapping nome-modulo.\n */\nexport class NameMappingDTO {\n    display_name: string\n    module_instance_name: string\n    module_name: string\n    node_template_name: string\n}\n/**\n * Classe che contiene gli attributi che indica l'array dei mapping nome-modulo.\n */\nexport class EntityNameMappingFileDTO {\n    name_mapping: NameMappingDTO[]\n}\n\n/**\n * Classe che contiene gli attributi che indicano il teaatro.\n */\nexport class TheaterDTO {\n    author: string\n    blueprintFile: BlueprintFileDTO\n    blueprintUUID: string | number\n    createdBy: string\n    createdDate: string\n    deploymentSequence: {[index:string]:DeployInstanceDTO} //tosee\n    description: string\n    entityNameMappingFile: EntityNameMappingFileDTO\n    id: string | number\n    isLocked: boolean\n    lastModifiedBy: string\n    lastModifiedDate: string\n    lockAcquiredTimestamp: string\n    lockLastUserAcquiring: string\n    lockReleasedTimestamp: string\n    name: string\n    status: TheatreStatusDTO\n    tags: TagCatalogueDTO[]\n    uuid: string\n    version: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/TagTIP.html":{"url":"classes/TagTIP.html","title":"class - TagTIP","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  TagTIP\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsDTO/moduleDTO.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano un tag.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                tag\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        tag\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:211\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PageableDTO, SortDTO } from './elementDTO';\nimport { NetworkDTO } from './networkDTO';\nimport { TheaterDTO } from './theaterDTO';\n\n/**\n * Classe che contiene gli attributi che indicano l'insieme dei moduli ritornati dal teatro.\n */\nexport class ModuleListDTO {\n    content: SimpleModuleDTO[]\n    pageable: PageableDTO\n    last: boolean\n    totalPages: string | number\n    totalElements: string | number\n    size: string | number\n    number: string | number\n    sort: SortDTO\n    numberOfElements: string | number\n    first: boolean\n    empty: boolean\n}\n\n/**\n * Classe che contiene gli attributi che indica il catalogo del tipo.\n */\nexport class TypesCatalogueDTO {\n    group: string\n    id: string | number\n    parentId: {}\n    value: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano la classificazione del modulo.\n */\nexport class ModuleClassificationDTO {\n    blueprintType: string\n    category: string\n    expectedInstanceType: string\n    id: string | number\n    mcClass: string\n    type: string\n    uuid: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano un parametro generico.\n */\nexport class GenericParameterDTO {\n    type: string\n    default: string\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano i parametri di configurazione di un modulto.\n */\nexport class ConfigurationTemplateDTO {\n    anchor_parameters: { [name: string]: GenericParameterDTO | string }\n    instance_parameters: { [name: string]: GenericParameterDTO }\n    structural_parameters: { [name: string]: GenericParameterDTO }\n    fixed_parameters: { [name: string]: GenericParameterDTO }\n    control_parameters: { [name: string]: GenericParameterDTO }\n    infrastructure_parameters: { [name: string]: GenericParameterDTO }\n    module: string\n    description: string\n    category: string\n    version: string | number\n    platform: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano la modalità di un modulo.\n */\nexport class ModuleModeDTO {\n    code: string\n    id: string | number\n    name: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano lo stato di un modulo.\n */\nexport class ModuleStatusDTO {\n    descriptionCode: string\n    id: string | number\n    name: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le statitistiche di un modulo.\n */\nexport class StatisticItemDTO {\n    error: string | number\n    updated: string | number\n    inserted: string | number\n}\n\n/**\n * Classe che contiene gli attributi che indicano il modulo (simple - in dipendenza del teatro).\n */\nexport class SimpleModuleDTO {\n    createdBy: string\n    createdDate: string\n    description: string\n    id: string | number\n    isLocked: boolean\n    lastModifiedBy: string\n    lastModifiedDate: string\n    lockAcquiredTimestamp: string\n    lockLastUserAcquiring: string\n    lockReleasedTimestamp: string\n    name: string\n    status: ModuleStatusDTO\n    type?: string | any\n    uuid: string\n    version: string | number\n}\n\n/**\n * Classe che contiene gli attributi che indicano il modulo (complex - ritorato da call appostita).\n * @extends {SimpleModuleDTO}\n */\nexport class ModuleDTO extends SimpleModuleDTO {\n    attachments: string[]\n    author: string\n    capabilities: { [name: string]: string }\n    catalog1: TypesCatalogueDTO\n    catalog2: TypesCatalogueDTO\n    catalog3: TypesCatalogueDTO\n    classification: ModuleClassificationDTO\n    configurationTemplate: ConfigurationTemplateDTO\n    detailProperties: {}\n    input: { [name: string]: string }\n    output: { [name: string]: string }\n    mode: ModuleModeDTO\n    statistics: { [name: string]: StatisticItemDTO | string | number }\n    tags: []\n}\n\n/**\n * Classe che contiene gli attributi che indicano le interfacce esposte da un modulo.\n */\nexport class ModuleNetworkInterfaceDTO {\n    id: string | number\n    label: string\n    module: ModuleDTO\n    network: NetworkDTO\n    nodeName: string\n    type: string\n    uuid: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le connessioni interfaccia-modulo.\n */\nexport class ConsumerInterfaceLinkDTO {\n    local_interface: string\n    module_instance: string\n    remote_interface: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà dell'istanza di un modulo all'interno del node_templates.\n */\nexport class ModuleInstancePropertiesDTO {\n    area: string\n    description: string\n    module: string\n    version: string | number\n    sequence: string | number\n    consumer_interfaces_link: ConsumerInterfaceLinkDTO[]\n}\n\n\n/**\n * Classe che contiene gli attributi che indicano l'area di appartenenza di un modulo (complex).\n */\nexport class AreaDTO {\n    id: string | number;\n    uuid: string;\n    name: string;\n    description: string;\n    theater: TheaterDTO;\n    deleted: boolean | string;\n}\n\n/**\n * Classe che contiene gli attributi che indicano l'area di appartenenza di un modulo (simple).\n */\nexport class SimpleAreaDTO {\n    area: string\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà dell'istanza di un teatro all'interno del node_templates.\n */\nexport class TheaterInstancePropertiesDTO {\n    mode: string\n    tags: TagTIP[]\n    areas: SimpleAreaDTO[]\n    author: string\n    version: string | number\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano un tag.\n */\nexport class TagTIP{\n    tag: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano in via generale le caratteristiche di un elemento che deve essere presente nel node_templates.\n */\nexport class ElementIntoTheaterDTO {  // goes into map in blueprint [name:string]: Module...\n    properties: ModuleInstancePropertiesDTO | TheaterInstancePropertiesDTO\n    type: string\n}\n\n\n/**\n * Classe che contiene gli attributi che indicano le caratteristiche di un teatro presente nel node_templates.\n */\nexport class ModuleInstanceDTO {\n    properties: ModuleInstancePropertiesDTO\n    type: string\n}\n/**\n * Classe che contiene gli attributi che indicano le caratteristiche di un modulo presente nel node_templates.\n */\nexport class TheaterInstanceDTO {\n    properties: TheaterInstancePropertiesDTO\n    type: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/TagsExport.html":{"url":"classes/TagsExport.html","title":"class - TagsExport","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  TagsExport\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsExport/theaterExport.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano i tag nelle proprietà del teatro.\nSee {PropertiesTSD}\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                tag\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        tag\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/theaterExport.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ModeTypeExport, ModuleTypeExport, TheaterTypeExport, ToscaDefinitionType } from \"./TypeExport\"\n\n/**\n * Classe utilizzata per l'export. \n * Contiene le informazioni generali per il teatro che devono esserci nello standard Tosca.\n */\nexport class TheaterExport {\n    tosca_definitions_version: ToscaDefinitionType\n    description: string\n    imports: string[]\n    node_templates: { [name: string]: TheaterSimpleData | ModuleInstanceSimpleData }\n}\n/**\n * Classe che contiene gli attributi che indicano il teatro all'interno dei node_templates.\n */\nexport class TheaterSimpleData {\n    type: TheaterTypeExport\n    properties: PropertiesTSD\n}\n/**\n * Classe che contiene gli attributi che indicano le proprietà del teatro.\n */\nexport class PropertiesTSD {\n    version: string | number\n    description: string\n    mode: ModeTypeExport\n    author: string\n    tags: TagsExport[]\n    areas: AreaExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano i tag nelle proprietà del teatro.\n * @see {PropertiesTSD}\n */\nexport class TagsExport {\n    tag: string\n}\n/**\n * Classe che contiene gli attributi che indicano le aree nelle proprietà del teatr.\n * @see {PropertiesTSD}\n */\nexport class AreaExport {\n    area: string\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano il modulo all'interno dei node_modules.\n */\nexport class ModuleInstanceSimpleData {\n    type: ModuleTypeExport\n    properties: PropertiesMISD\n}\n/**\n * Classe che contiene gli attributi che indicano le propeitò del modulo all'interno dei node_templates.\n */\nexport class PropertiesMISD{\n    module: string\n    version: string | number\n    area: string\n    sequence: number\n    sources?: SourceExport[]\n    consumer_interface_link: ConsumerInterfaceLinkExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano le porte di ingresso del modulo all'interno dei node_templates.\n */\nexport class SourceExport{\n    module_instance: string\n    host:string\n    interfaces: string[]\n}\n/**\n * Classe che contiene gli attributi che indicano i collegamenti e relazioni intramodulo con le varie interfacce.\n */\nexport class ConsumerInterfaceLinkExport{\n    local_interface: string\n    module_interface:string\n    remote_interface:string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/TheaterApplication.html":{"url":"classes/TheaterApplication.html","title":"class - TheaterApplication","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  TheaterApplication\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsApplication/applicationModels.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        TheaterDTO\n            \n\n            \n                Implementa\n            \n            \n                            TheaterTopology\n            \n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                connection\n                            \n                            \n                                elements\n                            \n                            \n                                properties\n                            \n                            \n                                topology\n                            \n                            \n                                    Opzionale\n                                validateObject\n                            \n                            \n                                author\n                            \n                            \n                                blueprintFile\n                            \n                            \n                                blueprintUUID\n                            \n                            \n                                createdBy\n                            \n                            \n                                createdDate\n                            \n                            \n                                deploymentSequence\n                            \n                            \n                                description\n                            \n                            \n                                entityNameMappingFile\n                            \n                            \n                                id\n                            \n                            \n                                isLocked\n                            \n                            \n                                lastModifiedBy\n                            \n                            \n                                lastModifiedDate\n                            \n                            \n                                lockAcquiredTimestamp\n                            \n                            \n                                lockLastUserAcquiring\n                            \n                            \n                                lockReleasedTimestamp\n                            \n                            \n                                name\n                            \n                            \n                                status\n                            \n                            \n                                tags\n                            \n                            \n                                uuid\n                            \n                            \n                                version\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        connection\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ReteConnection[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsApplication/applicationModels.ts:99\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        elements\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     literal type\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsApplication/applicationModels.ts:98\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        properties\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         TheaterInstancePropertiesDTO\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsApplication/applicationModels.ts:101\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        topology\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         TheaterTopology\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsApplication/applicationModels.ts:102\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        validateObject\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                \n                    \n                        Valore predefinito : \"theater\"\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsApplication/applicationModels.ts:104\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        author\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         TheaterDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         TheaterDTO:61\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        blueprintFile\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         BlueprintFileDTO\n\n                    \n                \n                        \n                            \n                                ereditato da         TheaterDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         TheaterDTO:62\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        blueprintUUID\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                        \n                            \n                                ereditato da         TheaterDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         TheaterDTO:63\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         TheaterDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         TheaterDTO:64\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdDate\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         TheaterDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         TheaterDTO:65\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deploymentSequence\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     literal type\n\n                    \n                \n                        \n                            \n                                ereditato da         TheaterDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         TheaterDTO:66\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         TheaterDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         TheaterDTO:67\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        entityNameMappingFile\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         EntityNameMappingFileDTO\n\n                    \n                \n                        \n                            \n                                ereditato da         TheaterDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         TheaterDTO:68\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                        \n                            \n                                ereditato da         TheaterDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         TheaterDTO:69\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLocked\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                        \n                            \n                                ereditato da         TheaterDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         TheaterDTO:70\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastModifiedBy\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         TheaterDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         TheaterDTO:71\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastModifiedDate\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         TheaterDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         TheaterDTO:72\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lockAcquiredTimestamp\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         TheaterDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         TheaterDTO:73\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lockLastUserAcquiring\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         TheaterDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         TheaterDTO:74\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lockReleasedTimestamp\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         TheaterDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         TheaterDTO:75\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         TheaterDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         TheaterDTO:76\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         TheatreStatusDTO\n\n                    \n                \n                        \n                            \n                                ereditato da         TheaterDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         TheaterDTO:77\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tags\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         TagCatalogueDTO[]\n\n                    \n                \n                        \n                            \n                                ereditato da         TheaterDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         TheaterDTO:78\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uuid\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         TheaterDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         TheaterDTO:79\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         TheaterDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         TheaterDTO:80\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ReteHostInfo } from \"src/app/rete-settings/nodes/rete-nodes/host/hostNode\";\nimport { ReteNetworkInfo } from \"src/app/rete-settings/nodes/rete-nodes/network/networkNode\";\nimport { ReteSubnetInfo } from \"src/app/rete-settings/nodes/rete-nodes/subnet/subnetNode\";\nimport { ReteMirroringModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/mirroringModuleInstance/mirroringModuleInstanceNode\";\nimport { ReteTheaterInternalServiceModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/theaterInternalServiceModuleInstance/theaterInternalServiceModuleInstanceNode\";\nimport { ReteTheaterModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/theaterModuleInstance/theaterModuleInstanceNode\";\nimport { FlavorBasicInfo } from \"../modelsDTO/falvorDTO\";\nimport { HostModuleDTO } from \"../modelsDTO/hostDTO\";\nimport { ModuleNetworkInterfaceDTO, ModuleInstancePropertiesDTO, SimpleModuleDTO, TheaterInstancePropertiesDTO, ModuleInstanceDTO, ModuleDTO, SimpleAreaDTO, AreaDTO } from \"../modelsDTO/moduleDTO\";\nimport { TheaterDTO } from \"../modelsDTO/theaterDTO\";\n\n\nexport interface CommonModule {\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n}\n\n\n/**\n * Classe contenente gli attributi utilizzati per le operazioni che coinvolgono i moduli.\n * ps. Questa struttura è prettamente utilizzata nella chiamata relativa al singolo modulo.\n */\nexport class ModuleApplication extends ModuleDTO implements CommonModule {\n    imports: string[] // perchè nell'export yaml è previsto\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n    // serve per validare il json risultante dal parsing del theaterApplication\n    validateObject?: string = \"module\";\n}\n// PER IMPLEMENTAZIONI FUTURE, PER COERENZA, PRENDERE DIRETTAMENTE I SINGOLI NODI DALLA CHIAMATA ESCLUSIVA E NON DA QUELLA CHE RESTITUISCE TUTTI I TEATRI\n/**\n * Classe contenente gli attributi utilizzati per le operazioni che coinvolgono i moduli.\n * ps. Questa struttura è prettamente utilizzata nella chiamata che prende tutti i moduli del teatro.\n */\nexport class SimpleModuleApplication extends SimpleModuleDTO implements CommonModule {\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n}\n\n\nexport class ReteConnection {\n    from: string;\n    port_src: string;\n    to: string;\n    port_dst: string;\n}\n\nexport interface TopologyList {\n    rete: any;\n    topology?: TopologyElement\n}\nexport class TopologyElement {\n    elements: { [name: string]: any };\n    connection: ReteConnection[]\n}\n\n// apptype module topology\n\nexport class NodeTopologyElement implements TopologyElement {\n    elements: { [hostName: string]: ReteHostInfo | ReteSubnetInfo | ReteNetworkInfo };\n    connection: ReteConnection[]\n}\n\nexport interface ModuleTopology extends TopologyList {\n    rete: ReteMirroringModuleInstanceInfo | ReteTheaterInternalServiceModuleInstanceInfo | ReteTheaterModuleInstanceInfo\n    topology: NodeTopologyElement;\n}\n\nexport class ModuleInstance extends ModuleInstanceDTO implements ModuleTopology {\n    // moduleTopology data\n    rete: ReteTheaterModuleInstanceInfo | ReteTheaterInternalServiceModuleInstanceInfo | ReteMirroringModuleInstanceInfo;\n    topology: NodeTopologyElement;\n    // other data\n    moduleInfo: SimpleModuleApplication\n}\n\n// apptype theater theater\n\nexport interface TheaterTopology extends TopologyElement {\n    elements: { [hostName: string]: ModuleInstance };\n    connection: ReteConnection[];\n}\n\nexport class TheaterApplication extends TheaterDTO implements TheaterTopology {\n    // theaterTopology data\n    elements: { [hostName: string]: ModuleInstance; };\n    connection: ReteConnection[];\n    // other data\n    properties: TheaterInstancePropertiesDTO;\n    topology: TheaterTopology;\n    // serve per validare il json risultante dal parsing del theaterApplication\n    validateObject?: string = \"theater\";\n}\n\nexport class AreaApplication extends AreaDTO {\n    color?: string;\n}\nexport class AreaColorDTO extends SimpleAreaDTO {\n    color: string;\n}\n\n\nexport class FlavorApplication extends FlavorBasicInfo {\n    flavorName: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/TheaterDTO.html":{"url":"classes/TheaterDTO.html","title":"class - TheaterDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  TheaterDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsDTO/theaterDTO.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano il teaatro.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                author\n                            \n                            \n                                blueprintFile\n                            \n                            \n                                blueprintUUID\n                            \n                            \n                                createdBy\n                            \n                            \n                                createdDate\n                            \n                            \n                                deploymentSequence\n                            \n                            \n                                description\n                            \n                            \n                                entityNameMappingFile\n                            \n                            \n                                id\n                            \n                            \n                                isLocked\n                            \n                            \n                                lastModifiedBy\n                            \n                            \n                                lastModifiedDate\n                            \n                            \n                                lockAcquiredTimestamp\n                            \n                            \n                                lockLastUserAcquiring\n                            \n                            \n                                lockReleasedTimestamp\n                            \n                            \n                                name\n                            \n                            \n                                status\n                            \n                            \n                                tags\n                            \n                            \n                                uuid\n                            \n                            \n                                version\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        author\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/theaterDTO.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        blueprintFile\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         BlueprintFileDTO\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/theaterDTO.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        blueprintUUID\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/theaterDTO.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/theaterDTO.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdDate\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/theaterDTO.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deploymentSequence\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     literal type\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/theaterDTO.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/theaterDTO.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        entityNameMappingFile\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         EntityNameMappingFileDTO\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/theaterDTO.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/theaterDTO.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLocked\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/theaterDTO.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastModifiedBy\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/theaterDTO.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastModifiedDate\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/theaterDTO.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lockAcquiredTimestamp\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/theaterDTO.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lockLastUserAcquiring\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/theaterDTO.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lockReleasedTimestamp\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/theaterDTO.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/theaterDTO.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         TheatreStatusDTO\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/theaterDTO.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tags\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         TagCatalogueDTO[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/theaterDTO.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uuid\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/theaterDTO.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/theaterDTO.ts:80\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ModuleInstanceDTO, TheaterInstanceDTO } from \"./moduleDTO\"\n\n/**\n * Classe che contiene gli attributi che indicano il catalogo di riferimento di un teatro.\n */\nexport class TagCatalogueDTO {\n    description: string\n    id: string | number\n    name: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano lo stato di un teatro.\n */\nexport class TheatreStatusDTO {\n    code: string\n    id: string | number\n    name: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano un elemento nella sequenza di deploy.\n */\nexport class DeployInstanceDTO {\n    moduleInstanceConfigurationUUID?: string\n    moduleInstanceName: string\n    moduleInstanceUUID: string\n    moduleUUID: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano il blueprint di un teatro.\n */\nexport class BlueprintFileDTO {\n    description: string\n    imports: string[]\n    node_templates: {[name:string]:ModuleInstanceDTO|TheaterInstanceDTO}\n    tosca_definitions_version: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano il mapping nome-modulo.\n */\nexport class NameMappingDTO {\n    display_name: string\n    module_instance_name: string\n    module_name: string\n    node_template_name: string\n}\n/**\n * Classe che contiene gli attributi che indica l'array dei mapping nome-modulo.\n */\nexport class EntityNameMappingFileDTO {\n    name_mapping: NameMappingDTO[]\n}\n\n/**\n * Classe che contiene gli attributi che indicano il teaatro.\n */\nexport class TheaterDTO {\n    author: string\n    blueprintFile: BlueprintFileDTO\n    blueprintUUID: string | number\n    createdBy: string\n    createdDate: string\n    deploymentSequence: {[index:string]:DeployInstanceDTO} //tosee\n    description: string\n    entityNameMappingFile: EntityNameMappingFileDTO\n    id: string | number\n    isLocked: boolean\n    lastModifiedBy: string\n    lastModifiedDate: string\n    lockAcquiredTimestamp: string\n    lockLastUserAcquiring: string\n    lockReleasedTimestamp: string\n    name: string\n    status: TheatreStatusDTO\n    tags: TagCatalogueDTO[]\n    uuid: string\n    version: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/TheaterExport.html":{"url":"classes/TheaterExport.html","title":"class - TheaterExport","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  TheaterExport\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsExport/theaterExport.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe utilizzata per l'export.\nContiene le informazioni generali per il teatro che devono esserci nello standard Tosca.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                imports\n                            \n                            \n                                node_templates\n                            \n                            \n                                tosca_definitions_version\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/theaterExport.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        imports\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/theaterExport.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        node_templates\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     literal type\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/theaterExport.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tosca_definitions_version\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ToscaDefinitionType\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/theaterExport.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ModeTypeExport, ModuleTypeExport, TheaterTypeExport, ToscaDefinitionType } from \"./TypeExport\"\n\n/**\n * Classe utilizzata per l'export. \n * Contiene le informazioni generali per il teatro che devono esserci nello standard Tosca.\n */\nexport class TheaterExport {\n    tosca_definitions_version: ToscaDefinitionType\n    description: string\n    imports: string[]\n    node_templates: { [name: string]: TheaterSimpleData | ModuleInstanceSimpleData }\n}\n/**\n * Classe che contiene gli attributi che indicano il teatro all'interno dei node_templates.\n */\nexport class TheaterSimpleData {\n    type: TheaterTypeExport\n    properties: PropertiesTSD\n}\n/**\n * Classe che contiene gli attributi che indicano le proprietà del teatro.\n */\nexport class PropertiesTSD {\n    version: string | number\n    description: string\n    mode: ModeTypeExport\n    author: string\n    tags: TagsExport[]\n    areas: AreaExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano i tag nelle proprietà del teatro.\n * @see {PropertiesTSD}\n */\nexport class TagsExport {\n    tag: string\n}\n/**\n * Classe che contiene gli attributi che indicano le aree nelle proprietà del teatr.\n * @see {PropertiesTSD}\n */\nexport class AreaExport {\n    area: string\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano il modulo all'interno dei node_modules.\n */\nexport class ModuleInstanceSimpleData {\n    type: ModuleTypeExport\n    properties: PropertiesMISD\n}\n/**\n * Classe che contiene gli attributi che indicano le propeitò del modulo all'interno dei node_templates.\n */\nexport class PropertiesMISD{\n    module: string\n    version: string | number\n    area: string\n    sequence: number\n    sources?: SourceExport[]\n    consumer_interface_link: ConsumerInterfaceLinkExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano le porte di ingresso del modulo all'interno dei node_templates.\n */\nexport class SourceExport{\n    module_instance: string\n    host:string\n    interfaces: string[]\n}\n/**\n * Classe che contiene gli attributi che indicano i collegamenti e relazioni intramodulo con le varie interfacce.\n */\nexport class ConsumerInterfaceLinkExport{\n    local_interface: string\n    module_interface:string\n    remote_interface:string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/TheaterInstanceDTO.html":{"url":"classes/TheaterInstanceDTO.html","title":"class - TheaterInstanceDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  TheaterInstanceDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsDTO/moduleDTO.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano le caratteristiche di un modulo presente nel node_templates.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                properties\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        properties\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         TheaterInstancePropertiesDTO\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:234\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:235\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PageableDTO, SortDTO } from './elementDTO';\nimport { NetworkDTO } from './networkDTO';\nimport { TheaterDTO } from './theaterDTO';\n\n/**\n * Classe che contiene gli attributi che indicano l'insieme dei moduli ritornati dal teatro.\n */\nexport class ModuleListDTO {\n    content: SimpleModuleDTO[]\n    pageable: PageableDTO\n    last: boolean\n    totalPages: string | number\n    totalElements: string | number\n    size: string | number\n    number: string | number\n    sort: SortDTO\n    numberOfElements: string | number\n    first: boolean\n    empty: boolean\n}\n\n/**\n * Classe che contiene gli attributi che indica il catalogo del tipo.\n */\nexport class TypesCatalogueDTO {\n    group: string\n    id: string | number\n    parentId: {}\n    value: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano la classificazione del modulo.\n */\nexport class ModuleClassificationDTO {\n    blueprintType: string\n    category: string\n    expectedInstanceType: string\n    id: string | number\n    mcClass: string\n    type: string\n    uuid: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano un parametro generico.\n */\nexport class GenericParameterDTO {\n    type: string\n    default: string\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano i parametri di configurazione di un modulto.\n */\nexport class ConfigurationTemplateDTO {\n    anchor_parameters: { [name: string]: GenericParameterDTO | string }\n    instance_parameters: { [name: string]: GenericParameterDTO }\n    structural_parameters: { [name: string]: GenericParameterDTO }\n    fixed_parameters: { [name: string]: GenericParameterDTO }\n    control_parameters: { [name: string]: GenericParameterDTO }\n    infrastructure_parameters: { [name: string]: GenericParameterDTO }\n    module: string\n    description: string\n    category: string\n    version: string | number\n    platform: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano la modalità di un modulo.\n */\nexport class ModuleModeDTO {\n    code: string\n    id: string | number\n    name: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano lo stato di un modulo.\n */\nexport class ModuleStatusDTO {\n    descriptionCode: string\n    id: string | number\n    name: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le statitistiche di un modulo.\n */\nexport class StatisticItemDTO {\n    error: string | number\n    updated: string | number\n    inserted: string | number\n}\n\n/**\n * Classe che contiene gli attributi che indicano il modulo (simple - in dipendenza del teatro).\n */\nexport class SimpleModuleDTO {\n    createdBy: string\n    createdDate: string\n    description: string\n    id: string | number\n    isLocked: boolean\n    lastModifiedBy: string\n    lastModifiedDate: string\n    lockAcquiredTimestamp: string\n    lockLastUserAcquiring: string\n    lockReleasedTimestamp: string\n    name: string\n    status: ModuleStatusDTO\n    type?: string | any\n    uuid: string\n    version: string | number\n}\n\n/**\n * Classe che contiene gli attributi che indicano il modulo (complex - ritorato da call appostita).\n * @extends {SimpleModuleDTO}\n */\nexport class ModuleDTO extends SimpleModuleDTO {\n    attachments: string[]\n    author: string\n    capabilities: { [name: string]: string }\n    catalog1: TypesCatalogueDTO\n    catalog2: TypesCatalogueDTO\n    catalog3: TypesCatalogueDTO\n    classification: ModuleClassificationDTO\n    configurationTemplate: ConfigurationTemplateDTO\n    detailProperties: {}\n    input: { [name: string]: string }\n    output: { [name: string]: string }\n    mode: ModuleModeDTO\n    statistics: { [name: string]: StatisticItemDTO | string | number }\n    tags: []\n}\n\n/**\n * Classe che contiene gli attributi che indicano le interfacce esposte da un modulo.\n */\nexport class ModuleNetworkInterfaceDTO {\n    id: string | number\n    label: string\n    module: ModuleDTO\n    network: NetworkDTO\n    nodeName: string\n    type: string\n    uuid: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le connessioni interfaccia-modulo.\n */\nexport class ConsumerInterfaceLinkDTO {\n    local_interface: string\n    module_instance: string\n    remote_interface: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà dell'istanza di un modulo all'interno del node_templates.\n */\nexport class ModuleInstancePropertiesDTO {\n    area: string\n    description: string\n    module: string\n    version: string | number\n    sequence: string | number\n    consumer_interfaces_link: ConsumerInterfaceLinkDTO[]\n}\n\n\n/**\n * Classe che contiene gli attributi che indicano l'area di appartenenza di un modulo (complex).\n */\nexport class AreaDTO {\n    id: string | number;\n    uuid: string;\n    name: string;\n    description: string;\n    theater: TheaterDTO;\n    deleted: boolean | string;\n}\n\n/**\n * Classe che contiene gli attributi che indicano l'area di appartenenza di un modulo (simple).\n */\nexport class SimpleAreaDTO {\n    area: string\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà dell'istanza di un teatro all'interno del node_templates.\n */\nexport class TheaterInstancePropertiesDTO {\n    mode: string\n    tags: TagTIP[]\n    areas: SimpleAreaDTO[]\n    author: string\n    version: string | number\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano un tag.\n */\nexport class TagTIP{\n    tag: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano in via generale le caratteristiche di un elemento che deve essere presente nel node_templates.\n */\nexport class ElementIntoTheaterDTO {  // goes into map in blueprint [name:string]: Module...\n    properties: ModuleInstancePropertiesDTO | TheaterInstancePropertiesDTO\n    type: string\n}\n\n\n/**\n * Classe che contiene gli attributi che indicano le caratteristiche di un teatro presente nel node_templates.\n */\nexport class ModuleInstanceDTO {\n    properties: ModuleInstancePropertiesDTO\n    type: string\n}\n/**\n * Classe che contiene gli attributi che indicano le caratteristiche di un modulo presente nel node_templates.\n */\nexport class TheaterInstanceDTO {\n    properties: TheaterInstancePropertiesDTO\n    type: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/TheaterInstancePropertiesDTO.html":{"url":"classes/TheaterInstancePropertiesDTO.html","title":"class - TheaterInstancePropertiesDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  TheaterInstancePropertiesDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsDTO/moduleDTO.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano le proprietà dell'istanza di un teatro all'interno del node_templates.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                areas\n                            \n                            \n                                author\n                            \n                            \n                                description\n                            \n                            \n                                mode\n                            \n                            \n                                tags\n                            \n                            \n                                version\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        areas\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     SimpleAreaDTO[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:201\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        author\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:202\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:204\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:199\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tags\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         TagTIP[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:200\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:203\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PageableDTO, SortDTO } from './elementDTO';\nimport { NetworkDTO } from './networkDTO';\nimport { TheaterDTO } from './theaterDTO';\n\n/**\n * Classe che contiene gli attributi che indicano l'insieme dei moduli ritornati dal teatro.\n */\nexport class ModuleListDTO {\n    content: SimpleModuleDTO[]\n    pageable: PageableDTO\n    last: boolean\n    totalPages: string | number\n    totalElements: string | number\n    size: string | number\n    number: string | number\n    sort: SortDTO\n    numberOfElements: string | number\n    first: boolean\n    empty: boolean\n}\n\n/**\n * Classe che contiene gli attributi che indica il catalogo del tipo.\n */\nexport class TypesCatalogueDTO {\n    group: string\n    id: string | number\n    parentId: {}\n    value: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano la classificazione del modulo.\n */\nexport class ModuleClassificationDTO {\n    blueprintType: string\n    category: string\n    expectedInstanceType: string\n    id: string | number\n    mcClass: string\n    type: string\n    uuid: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano un parametro generico.\n */\nexport class GenericParameterDTO {\n    type: string\n    default: string\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano i parametri di configurazione di un modulto.\n */\nexport class ConfigurationTemplateDTO {\n    anchor_parameters: { [name: string]: GenericParameterDTO | string }\n    instance_parameters: { [name: string]: GenericParameterDTO }\n    structural_parameters: { [name: string]: GenericParameterDTO }\n    fixed_parameters: { [name: string]: GenericParameterDTO }\n    control_parameters: { [name: string]: GenericParameterDTO }\n    infrastructure_parameters: { [name: string]: GenericParameterDTO }\n    module: string\n    description: string\n    category: string\n    version: string | number\n    platform: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano la modalità di un modulo.\n */\nexport class ModuleModeDTO {\n    code: string\n    id: string | number\n    name: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano lo stato di un modulo.\n */\nexport class ModuleStatusDTO {\n    descriptionCode: string\n    id: string | number\n    name: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le statitistiche di un modulo.\n */\nexport class StatisticItemDTO {\n    error: string | number\n    updated: string | number\n    inserted: string | number\n}\n\n/**\n * Classe che contiene gli attributi che indicano il modulo (simple - in dipendenza del teatro).\n */\nexport class SimpleModuleDTO {\n    createdBy: string\n    createdDate: string\n    description: string\n    id: string | number\n    isLocked: boolean\n    lastModifiedBy: string\n    lastModifiedDate: string\n    lockAcquiredTimestamp: string\n    lockLastUserAcquiring: string\n    lockReleasedTimestamp: string\n    name: string\n    status: ModuleStatusDTO\n    type?: string | any\n    uuid: string\n    version: string | number\n}\n\n/**\n * Classe che contiene gli attributi che indicano il modulo (complex - ritorato da call appostita).\n * @extends {SimpleModuleDTO}\n */\nexport class ModuleDTO extends SimpleModuleDTO {\n    attachments: string[]\n    author: string\n    capabilities: { [name: string]: string }\n    catalog1: TypesCatalogueDTO\n    catalog2: TypesCatalogueDTO\n    catalog3: TypesCatalogueDTO\n    classification: ModuleClassificationDTO\n    configurationTemplate: ConfigurationTemplateDTO\n    detailProperties: {}\n    input: { [name: string]: string }\n    output: { [name: string]: string }\n    mode: ModuleModeDTO\n    statistics: { [name: string]: StatisticItemDTO | string | number }\n    tags: []\n}\n\n/**\n * Classe che contiene gli attributi che indicano le interfacce esposte da un modulo.\n */\nexport class ModuleNetworkInterfaceDTO {\n    id: string | number\n    label: string\n    module: ModuleDTO\n    network: NetworkDTO\n    nodeName: string\n    type: string\n    uuid: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le connessioni interfaccia-modulo.\n */\nexport class ConsumerInterfaceLinkDTO {\n    local_interface: string\n    module_instance: string\n    remote_interface: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà dell'istanza di un modulo all'interno del node_templates.\n */\nexport class ModuleInstancePropertiesDTO {\n    area: string\n    description: string\n    module: string\n    version: string | number\n    sequence: string | number\n    consumer_interfaces_link: ConsumerInterfaceLinkDTO[]\n}\n\n\n/**\n * Classe che contiene gli attributi che indicano l'area di appartenenza di un modulo (complex).\n */\nexport class AreaDTO {\n    id: string | number;\n    uuid: string;\n    name: string;\n    description: string;\n    theater: TheaterDTO;\n    deleted: boolean | string;\n}\n\n/**\n * Classe che contiene gli attributi che indicano l'area di appartenenza di un modulo (simple).\n */\nexport class SimpleAreaDTO {\n    area: string\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà dell'istanza di un teatro all'interno del node_templates.\n */\nexport class TheaterInstancePropertiesDTO {\n    mode: string\n    tags: TagTIP[]\n    areas: SimpleAreaDTO[]\n    author: string\n    version: string | number\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano un tag.\n */\nexport class TagTIP{\n    tag: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano in via generale le caratteristiche di un elemento che deve essere presente nel node_templates.\n */\nexport class ElementIntoTheaterDTO {  // goes into map in blueprint [name:string]: Module...\n    properties: ModuleInstancePropertiesDTO | TheaterInstancePropertiesDTO\n    type: string\n}\n\n\n/**\n * Classe che contiene gli attributi che indicano le caratteristiche di un teatro presente nel node_templates.\n */\nexport class ModuleInstanceDTO {\n    properties: ModuleInstancePropertiesDTO\n    type: string\n}\n/**\n * Classe che contiene gli attributi che indicano le caratteristiche di un modulo presente nel node_templates.\n */\nexport class TheaterInstanceDTO {\n    properties: TheaterInstancePropertiesDTO\n    type: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"components/TheaterInternalServiceModuleInstanceComponent.html":{"url":"components/TheaterInternalServiceModuleInstanceComponent.html","title":"component - TheaterInternalServiceModuleInstanceComponent","body":"\n                   \n\n\n\n\n\n  Componenti\n  \n  TheaterInternalServiceModuleInstanceComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/rete-settings/nodes/rete-modules/theaterInternalServiceModuleInstance/theaterInternalServiceModuleInstance.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n            NodeComponent\n    \n\n\n\n\n    Metadati\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            NodeService\n                \n            \n\n\n\n            \n                styleUrls\n                ./theaterInternalServiceModuleInstance.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./theaterInternalServiceModuleInstance.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                HostIcon\n                            \n                            \n                                ModuleType\n                            \n                            \n                                NetworkIcon\n                            \n                            \n                                showFooter\n                            \n                            \n                                showInputOutlet\n                            \n                            \n                                showOutputOutlet\n                            \n                            \n                                showPorts\n                            \n                            \n                                SubnetIcon\n                            \n                            \n                                TheaterInternalServiceModuleInstanceIcon\n                            \n                        \n                    \n                \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                showhidesocket\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Costruttore\n        \n            \n                \n                    \nconstructor(service: NodeService, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Definito in src/app/rete-settings/nodes/rete-modules/theaterInternalServiceModuleInstance/theaterInternalServiceModuleInstance.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parametri :\n                                    \n                                        \n                                            \n                                                Nome\n                                                    Tipo\n                                                Opzionale\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                    NodeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        showhidesocket\n                        \n                    \n                \n            \n            \n                \nshowhidesocket()\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-modules/theaterInternalServiceModuleInstance/theaterInternalServiceModuleInstance.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        HostIcon\n                        \n                    \n                \n            \n                \n                    \n                        Valore predefinito : HostIcon\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-modules/theaterInternalServiceModuleInstance/theaterInternalServiceModuleInstance.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ModuleType\n                        \n                    \n                \n            \n                \n                    \n                        Valore predefinito : EnumModuleType\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-modules/theaterInternalServiceModuleInstance/theaterInternalServiceModuleInstance.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        NetworkIcon\n                        \n                    \n                \n            \n                \n                    \n                        Valore predefinito : NetworkIcon\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-modules/theaterInternalServiceModuleInstance/theaterInternalServiceModuleInstance.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showFooter\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                \n                    \n                        Valore predefinito : true\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-modules/theaterInternalServiceModuleInstance/theaterInternalServiceModuleInstance.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showInputOutlet\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                \n                    \n                        Valore predefinito : true\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-modules/theaterInternalServiceModuleInstance/theaterInternalServiceModuleInstance.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showOutputOutlet\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                \n                    \n                        Valore predefinito : true\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-modules/theaterInternalServiceModuleInstance/theaterInternalServiceModuleInstance.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showPorts\n                        \n                    \n                \n            \n                \n                    \n                        Valore predefinito : true\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-modules/theaterInternalServiceModuleInstance/theaterInternalServiceModuleInstance.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SubnetIcon\n                        \n                    \n                \n            \n                \n                    \n                        Valore predefinito : SubnetIcon\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-modules/theaterInternalServiceModuleInstance/theaterInternalServiceModuleInstance.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TheaterInternalServiceModuleInstanceIcon\n                        \n                    \n                \n            \n                \n                    \n                        Valore predefinito : TheaterInternalServiceModuleInstance_ICON\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-modules/theaterInternalServiceModuleInstance/theaterInternalServiceModuleInstance.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, ChangeDetectorRef, ChangeDetectionStrategy } from '@angular/core';\nimport { NodeComponent, NodeService } from 'rete-angular-render-plugin';\nimport { EnumModuleType } from 'src/app/models/appType';\nimport { HostIcon, SubnetIcon, NetworkIcon, TheaterInternalServiceModuleInstance_ICON } from 'src/app/rete-settings/style/styleIconConfig';\n// import { EnumModuleType } from 'src/app/rete-settings/models/reteModelType';\n \n@Component({\n  templateUrl: './theaterInternalServiceModuleInstance.component.html',\n  styleUrls: ['./theaterInternalServiceModuleInstance.component.sass',],\n  providers: [NodeService],\n  changeDetection: ChangeDetectionStrategy.OnPush, // render più veloce.\n})\n\nexport class TheaterInternalServiceModuleInstanceComponent extends NodeComponent {\n\n  showPorts = true;\n  showOutputOutlet: boolean = true;\n  showInputOutlet: boolean = true;\n  showFooter: boolean = true;\n  \n  TheaterInternalServiceModuleInstanceIcon = TheaterInternalServiceModuleInstance_ICON;\n  ModuleType = EnumModuleType;\n  SubnetIcon=SubnetIcon;\n  NetworkIcon=NetworkIcon;\n  HostIcon=HostIcon;\n\n  constructor(\n    protected service: NodeService,\n    protected cdr: ChangeDetectorRef) {\n    super(service, cdr);\n  }\n\n  showhidesocket() {\n    this.showPorts = !this.showPorts;\n    \n  }\n  \n}\n\n    \n\n    \n        \n\n  \n    \n      \n        \n          {{ node.data.name === \"\" || node.data.name === undefined ? \"Assign name\" : node.data.name }}\n        \n      \n      \n        \n          \n          \n        \n      \n    \n   -->\n\n\n  \n  \n    \n      \n        \n          \n            \n              \n                 \n              \n              \n                \n                  {{\n                  (node.data.name && node.data.name!=='')\n                  ?node.data.name\n                  :ModuleType.TheaterInternalServiceModuleInstance\n                  }}\n                \n                \n                  {{\n                  (node.data.area && node.data.area!=='')\n                  ?\"area: \"+node.data.area\n                  :''\n                  }}\n                \n                \n                  {{\n                  (node.data.version && node.data.version!=='')\n                  ?\"version: \"+node.data.version\n                  :''\n                  }}\n                \n              \n            \n          \n        \n      \n    \n  \n\n\n  \n    \n      Button with data-bs-target\n    \n  \n  \n    \n      Some placeholder content for the collapse component. This panel is hidden by default but revealed when the user\n      activates the relevant trigger.\n    \n   -->\n\n\n  \n\n    \n    \n      \n        {{output.name}}\n        \n          \n          P\n          \n        \n      \n    \n\n\n     -->\n\n    \n    \n      \n        \n          \n          \n          C\n          \n        \n        {{input.name}}\n        \n      \n    \n\n  \n\n\n\n  \n  \n    \n\n      \n        \n        {{\n        node.data.host_number\n        ?node.data.host_number\n        :0\n        }}\n      \n\n      \n        \n        {{\n        node.data.subnet_number\n        ?node.data.subnet_number\n        :0\n        }}\n      \n\n      \n        \n        {{\n        node.data.network_number\n        ?node.data.network_number\n        :0\n        }}\n      \n\n    \n  \n\n\n\n    \n\n    \n                \n                    ./theaterInternalServiceModuleInstance.component.sass\n                \n                @import \"../vars\"\n\n.node\n  background: $node-color\n  border: 2px solid #f124\n  border-radius: 10px\n  cursor: pointer\n  min-width: $node-width\n  height: auto\n  padding-bottom: 6px\n  box-sizing: content-box\n  position: relative\n  user-select: none\n  &:hover\n    background: lighten($node-color,4%)\n  &.selected\n    background: $node-color-selected\n    border-color: #ff0000\n  .title\n    color: $text-color\n    font-family: $font-fam\n    font-size: 18px\n    padding: 8px\n  .output\n    text-align: right\n    display: flex\n    justify-content: flex-end\n  .input\n    text-align: left\n    display: flex\n    justify-content: flex-start\n  .input-title,.output-title\n    vertical-align: middle\n    color: $text-color\n    display: inline-block\n    font-family: $font-fam\n    font-size: 14px\n    margin: $socket-margin\n    line-height: $socket-size\n    &[hidden]\n      display: none\n  .input-control\n    z-index: 1\n    width: calc(100% - #{$socket-size + 2*$socket-margin})\n    vertical-align: middle\n    display: inline-block\n  .control\n    padding: $socket-margin $socket-size/2 + $socket-margin\n\n    \n\n    \n        \n        \n            \n                Legenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento html con direttive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              {{ node.data.name === \"\" || node.data.name === undefined ? \"Assign name\" : node.data.name }}                                                                     -->                                                                                                                                         {{                  (node.data.name && node.data.name!==\\'\\')                  ?node.data.name                  :ModuleType.TheaterInternalServiceModuleInstance                  }}                                                  {{                  (node.data.area && node.data.area!==\\'\\')                  ?\"area: \"+node.data.area                  :\\'\\'                  }}                                                  {{                  (node.data.version && node.data.version!==\\'\\')                  ?\"version: \"+node.data.version                  :\\'\\'                  }}                                                                                    Button with data-bs-target                  Some placeholder content for the collapse component. This panel is hidden by default but revealed when the user      activates the relevant trigger.       -->                        {{output.name}}                            P                                 -->                                                    C                          {{input.name}}                                                  {{        node.data.host_number        ?node.data.host_number        :0        }}                            {{        node.data.subnet_number        ?node.data.subnet_number        :0        }}                            {{        node.data.network_number        ?node.data.network_number        :0        }}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ComposerComponent', 'selector': 'app-composer'},{'name': 'ControlTemplate', 'selector': ''},{'name': 'DataInputComponent', 'selector': 'app-data-input'},{'name': 'DataInputV2Component', 'selector': 'app-data-input-v2'},{'name': 'DataItemComponent', 'selector': 'app-window-item'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HostComponent', 'selector': ''},{'name': 'HowToUseComponent', 'selector': 'app-how-to-use'},{'name': 'MirroringModuleInstanceComponent', 'selector': ''},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavbarElementComponent', 'selector': 'app-navbar-element'},{'name': 'NetworkComponent', 'selector': ''},{'name': 'OffcanvasComponent', 'selector': 'app-offcanvas'},{'name': 'ReteModuleComposerComponent', 'selector': 'app-rete-module-composer'},{'name': 'ReteModuleVisualizerComponent', 'selector': 'app-rete-module-visualizer'},{'name': 'ReteTheaterComposerComponent', 'selector': 'app-rete-theater-composer'},{'name': 'ReteTheaterVisualizerComponent', 'selector': 'app-rete-theater-visualizer'},{'name': 'SubnetComponent', 'selector': ''},{'name': 'TabnavComponent', 'selector': 'app-tabnav'},{'name': 'TheaterInternalServiceModuleInstanceComponent', 'selector': ''},{'name': 'TheaterModuleInstanceComponent', 'selector': ''},{'name': 'UnderbarComponent', 'selector': 'app-underbar'},{'name': 'VisualizerComponent', 'selector': 'app-displayer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TheaterInternalServiceModuleInstanceComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/TheaterInternalServiceModuleInstanceNode.html":{"url":"classes/TheaterInternalServiceModuleInstanceNode.html","title":"class - TheaterInternalServiceModuleInstanceNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  TheaterInternalServiceModuleInstanceNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/rete-settings/nodes/rete-modules/theaterInternalServiceModuleInstance/theaterInternalServiceModuleInstanceNode.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che rappresenta il modulo (rete-node) TheaterInternalServiceModuleInstance all'interno del canvas/editor di rete.\n\n            \n\n            \n                Extends\n            \n            \n                        Component\n            \n\n            \n                Implementa\n            \n            \n                        AngularComponent\n            \n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                builder\n                            \n                            \n                                created\n                            \n                            \n                                createNewNode\n                            \n                            \n                                destroyed\n                            \n                            \n                                valorizeNode\n                            \n                            \n                                worker\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Costruttore\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Definito in src/app/rete-settings/nodes/rete-modules/theaterInternalServiceModuleInstance/theaterInternalServiceModuleInstanceNode.ts:49\n                            \n                        \n\n                \n                    \n                            Costruttore di TheaterInternalServiceModuleInstanceNode\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     AngularComponentData\n\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-modules/theaterInternalServiceModuleInstance/theaterInternalServiceModuleInstanceNode.ts:49\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        builder\n                        \n                    \n                \n            \n            \n                \n                    \n                    builder(node: Node)\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-modules/theaterInternalServiceModuleInstance/theaterInternalServiceModuleInstanceNode.ts:67\n                \n            \n\n\n            \n                \n                    Funzione richiamata in fase di costruzione del nodo (rete-node).\nControlla se bisogna instanziare il nodo oppure crearne uno nuovo:\n\nIn fase di design, il nodo non ha dati, per cui bisogna crearne uno nuovo.\nIn fase di visualizing, il nodo presenta dei dati, per cui va valorizzato il nodo.\n\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        created\n                        \n                    \n                \n            \n            \n                \ncreated(node: Node)\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-modules/theaterInternalServiceModuleInstance/theaterInternalServiceModuleInstanceNode.ts:130\n                \n            \n\n\n            \n                \n                    Funzione richiamata una volta in nodo creato.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createNewNode\n                        \n                    \n                \n            \n            \n                \ncreateNewNode(node: Node)\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-modules/theaterInternalServiceModuleInstance/theaterInternalServiceModuleInstanceNode.ts:79\n                \n            \n\n\n            \n                \n                    Funzione che ha come scopo creare un nodo (rete-node).\nIn particolare gli assegna una struttura vuota.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destroyed\n                        \n                    \n                \n            \n            \n                \ndestroyed(node: Node)\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-modules/theaterInternalServiceModuleInstance/theaterInternalServiceModuleInstanceNode.ts:138\n                \n            \n\n\n            \n                \n                    Funzione richiamata una volta in nodo cancellato.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        valorizeNode\n                        \n                    \n                \n            \n            \n                \nvalorizeNode(node: Node)\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-modules/theaterInternalServiceModuleInstance/theaterInternalServiceModuleInstanceNode.ts:92\n                \n            \n\n\n            \n                \n                    Funzione che ha come scopo la valorizzazione del nodo (rete-node) con i dati in suo possesso.\nIn quasta fase avviene anche la fase iniziale di instanziamento delle porte input/output.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        worker\n                        \n                    \n                \n            \n            \n                \nworker(node: NodeData, inputs: WorkerInputs, outputs: WorkerOutputs)\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-modules/theaterInternalServiceModuleInstance/theaterInternalServiceModuleInstanceNode.ts:122\n                \n            \n\n\n            \n                \n                    Funzione richiamta per eseguire operazioni che conivolgono computazioni dei nodi.\nNon sono necessari in questa versione.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                            NodeData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    inputs\n                                    \n                                            WorkerInputs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    outputs\n                                    \n                                            WorkerOutputs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Component, Input, Output, Node } from 'rete';\nimport { _Socket } from '../../../sockets/socket';\nimport { _Control } from '../../../controls/control';\nimport { AngularComponent, AngularComponentData } from 'rete-angular-render-plugin';\nimport { NodeData, WorkerInputs, WorkerOutputs } from 'rete/types/core/data';\nimport { TheaterInternalServiceModuleInstanceComponent } from './theaterInternalServiceModuleInstance.component';\nimport {  reteBasicModuleInfo } from '../../reteBasic';\nimport { EnumModuleType } from 'src/app/models/appType';\n\n/**\n * Classe utilizzata per indicare il tipo di modulo TheaterInternalServiceModuleInstanceNode.\n * @see {reteBasicModuleInfo}\n */\nexport class ReteTheaterInternalServiceModuleInstanceInfo extends reteBasicModuleInfo {\n  type: EnumModuleType.TheaterInternalServiceModuleInstance;\n}\n\n/**\n * Funzione dichiarata in TheaterInternalServiceModuleInstanceNode. \n * Essa ha lo scopo di generare una struttura dati empty.\n * Viene utilizzata in per instanziare un nodo del tipo di ritorno indicato senza dati.\n * @returns {ReteTheaterInternalServiceModuleInstanceInfo}\n */\nexport function getEmptyReteTheaterInternalServiceModuleInstanceInfo(): ReteTheaterInternalServiceModuleInstanceInfo {\n  let x: ReteTheaterInternalServiceModuleInstanceInfo = {\n    Input: [],\n    Output: [],\n    name: \"\",\n    description: \"\",\n    type: EnumModuleType.TheaterInternalServiceModuleInstance,\n    host_number: 0,\n    network_number: 0,\n    subnet_number: 0,\n    area: '',\n    module: '',\n    version: '',\n    sequence: '',\n    consumer_interfaces_link: []\n  };\n  return x;\n}\n\n\n/**\n * Classe che rappresenta il modulo (rete-node) TheaterInternalServiceModuleInstance all'interno del canvas/editor di rete.\n */\nexport class TheaterInternalServiceModuleInstanceNode extends Component implements AngularComponent {\n\n  data: AngularComponentData;\n\n    /**\n   * Costruttore di TheaterInternalServiceModuleInstanceNode\n   */\n  constructor() {\n    super(EnumModuleType.TheaterInternalServiceModuleInstance);\n    this.data.render = 'angular';\n    this.data.component = TheaterInternalServiceModuleInstanceComponent;\n  }\n\n  /**\n   * Funzione richiamata in fase di costruzione del nodo (rete-node).\n   * Controlla se bisogna instanziare il nodo oppure crearne uno nuovo:\n   * - In fase di design, il nodo non ha dati, per cui bisogna crearne uno nuovo.\n   * - In fase di visualizing, il nodo presenta dei dati, per cui va valorizzato il nodo.\n   * @param node \n   */\n  async builder(node: Node) {\n    if (Object.keys(node.data).length === 0)\n      this.createNewNode(node)\n    else\n      this.valorizeNode(node)\n  }\n\n  /**\n   * Funzione che ha come scopo creare un nodo (rete-node).\n   * In particolare gli assegna una struttura vuota.\n   * @param node \n   */\n  createNewNode(node: Node) {\n    let t = getEmptyReteTheaterInternalServiceModuleInstanceInfo()\n    node.data = {\n      ...node.data,\n      ...t\n    }\n  }\n\n  /**\n   * Funzione che ha come scopo la valorizzazione del nodo (rete-node) con i dati in suo possesso.\n   * In quasta fase avviene anche la fase iniziale di instanziamento delle porte input/output.\n   * @param node \n   */\n  valorizeNode(node: Node) {\n    var i: any = node.data['Input'];\n    var o: any = node.data['Output'];\n    var il = i.length;\n    var ol = o.length;\n\n    for (let index = 0; index \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"components/TheaterModuleInstanceComponent.html":{"url":"components/TheaterModuleInstanceComponent.html","title":"component - TheaterModuleInstanceComponent","body":"\n                   \n\n\n\n\n\n  Componenti\n  \n  TheaterModuleInstanceComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/rete-settings/nodes/rete-modules/theaterModuleInstance/theaterModuleInstance.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n            NodeComponent\n    \n\n\n\n\n    Metadati\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            NodeService\n                \n            \n\n\n\n            \n                styleUrls\n                ./theaterModuleInstance.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./theaterModuleInstance.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                HostIcon\n                            \n                            \n                                ModuleType\n                            \n                            \n                                NetworkIcon\n                            \n                            \n                                showFooter\n                            \n                            \n                                showInputOutlet\n                            \n                            \n                                showOutputOutlet\n                            \n                            \n                                showPorts\n                            \n                            \n                                SubnetIcon\n                            \n                            \n                                TheaterModuleInstanceIcon\n                            \n                        \n                    \n                \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                showhidesocket\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Costruttore\n        \n            \n                \n                    \nconstructor(service: NodeService, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Definito in src/app/rete-settings/nodes/rete-modules/theaterModuleInstance/theaterModuleInstance.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parametri :\n                                    \n                                        \n                                            \n                                                Nome\n                                                    Tipo\n                                                Opzionale\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                    NodeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        showhidesocket\n                        \n                    \n                \n            \n            \n                \nshowhidesocket()\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-modules/theaterModuleInstance/theaterModuleInstance.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        HostIcon\n                        \n                    \n                \n            \n                \n                    \n                        Valore predefinito : HostIcon\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-modules/theaterModuleInstance/theaterModuleInstance.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ModuleType\n                        \n                    \n                \n            \n                \n                    \n                        Valore predefinito : EnumModuleType\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-modules/theaterModuleInstance/theaterModuleInstance.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        NetworkIcon\n                        \n                    \n                \n            \n                \n                    \n                        Valore predefinito : NetworkIcon\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-modules/theaterModuleInstance/theaterModuleInstance.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showFooter\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                \n                    \n                        Valore predefinito : true\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-modules/theaterModuleInstance/theaterModuleInstance.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showInputOutlet\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                \n                    \n                        Valore predefinito : true\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-modules/theaterModuleInstance/theaterModuleInstance.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showOutputOutlet\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                \n                    \n                        Valore predefinito : true\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-modules/theaterModuleInstance/theaterModuleInstance.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showPorts\n                        \n                    \n                \n            \n                \n                    \n                        Valore predefinito : true\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-modules/theaterModuleInstance/theaterModuleInstance.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SubnetIcon\n                        \n                    \n                \n            \n                \n                    \n                        Valore predefinito : SubnetIcon\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-modules/theaterModuleInstance/theaterModuleInstance.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TheaterModuleInstanceIcon\n                        \n                    \n                \n            \n                \n                    \n                        Valore predefinito : TheaterModuleInstance_ICON\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-modules/theaterModuleInstance/theaterModuleInstance.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, ChangeDetectorRef, ChangeDetectionStrategy } from '@angular/core';\nimport { NodeComponent, NodeService } from 'rete-angular-render-plugin';\nimport { EnumModuleType } from 'src/app/models/appType';\nimport { HostIcon, SubnetIcon, NetworkIcon, TheaterModuleInstance_ICON } from 'src/app/rete-settings/style/styleIconConfig';\n// import { EnumModuleType } from 'src/app/rete-settings/models/reteModelType';\n \n@Component({\n  templateUrl: './theaterModuleInstance.component.html',\n  styleUrls: ['./theaterModuleInstance.component.sass',],\n  providers: [NodeService],\n  changeDetection: ChangeDetectionStrategy.OnPush, // render più veloce.\n})\n\nexport class TheaterModuleInstanceComponent extends NodeComponent {\n\n  showPorts = true;\n  showOutputOutlet: boolean = true;\n  showInputOutlet: boolean = true;\n  showFooter: boolean = true;\n  \n  TheaterModuleInstanceIcon = TheaterModuleInstance_ICON;\n  ModuleType = EnumModuleType;\n  SubnetIcon=SubnetIcon;\n  NetworkIcon=NetworkIcon;\n  HostIcon=HostIcon;\n\n  constructor(\n    protected service: NodeService,\n    protected cdr: ChangeDetectorRef) {\n    super(service, cdr);\n  }\n\n  showhidesocket() {\n    this.showPorts = !this.showPorts;\n\n  }\n  \n}\n\n    \n\n    \n        \n\n  \n    \n      \n        \n          {{ node.data.name === \"\" || node.data.name === undefined ? \"Assign name\" : node.data.name }}\n        \n      \n      \n        \n          \n          \n        \n      \n    \n   -->\n\n\n  \n  \n    \n      \n        \n          \n            \n              \n                 \n              \n              \n                \n                  {{\n                  (node.data.name && node.data.name!=='')\n                  ?node.data.name\n                  :ModuleType.TheaterModuleInstance\n                  }}\n                \n                \n                  {{\n                  (node.data.area && node.data.area!=='')\n                  ?\"area: \"+node.data.area\n                  :''\n                  }}\n                \n                \n                  {{\n                  (node.data.version && node.data.version!=='')\n                  ?\"version: \"+node.data.version\n                  :''\n                  }}\n                \n              \n            \n          \n        \n      \n    \n  \n\n\n  \n    \n      Button with data-bs-target\n    \n  \n  \n    \n      Some placeholder content for the collapse component. This panel is hidden by default but revealed when the user\n      activates the relevant trigger.\n    \n   -->\n\n\n  \n\n    \n    \n      \n        {{output.name}}\n        \n          \n          \n          P\n          \n        \n      \n    \n\n\n     -->\n\n    \n    \n      \n        \n          \n          \n          C\n          \n        \n        {{input.name}}\n        \n      \n    \n\n  \n\n\n\n  \n  \n    \n\n      \n        \n        {{\n        node.data.host_number\n        ?node.data.host_number\n        :0\n        }}\n      \n\n      \n        \n        {{\n        node.data.subnet_number\n        ?node.data.subnet_number\n        :0\n        }}\n      \n\n      \n        \n        {{\n        node.data.network_number\n        ?node.data.network_number\n        :0\n        }}\n      \n\n    \n  \n\n\n\n    \n\n    \n                \n                    ./theaterModuleInstance.component.sass\n                \n                @import \"../vars\"\n\n.node\n  background: $node-color\n  border: 2px solid #f124\n  border-radius: 10px\n  cursor: pointer\n  min-width: $node-width\n  height: auto\n  padding-bottom: 6px\n  box-sizing: content-box\n  position: relative\n  user-select: none\n  &:hover\n    background: lighten($node-color,4%)\n  &.selected\n    background: $node-color-selected\n    border-color: #ff0000\n  .title\n    color: $text-color\n    font-family: $font-fam\n    font-size: 18px\n    padding: 8px\n  .output\n    text-align: right\n    display: flex\n    justify-content: flex-end\n  .input\n    text-align: left\n    display: flex\n    justify-content: flex-start\n  .input-title,.output-title\n    vertical-align: middle\n    color: $text-color\n    display: inline-block\n    font-family: $font-fam\n    font-size: 14px\n    margin: $socket-margin\n    line-height: $socket-size\n    &[hidden]\n      display: none\n  .input-control\n    z-index: 1\n    width: calc(100% - #{$socket-size + 2*$socket-margin})\n    vertical-align: middle\n    display: inline-block\n  .control\n    padding: $socket-margin $socket-size/2 + $socket-margin\n\n    \n\n    \n        \n        \n            \n                Legenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento html con direttive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              {{ node.data.name === \"\" || node.data.name === undefined ? \"Assign name\" : node.data.name }}                                                                     -->                                                                                                                                         {{                  (node.data.name && node.data.name!==\\'\\')                  ?node.data.name                  :ModuleType.TheaterModuleInstance                  }}                                                  {{                  (node.data.area && node.data.area!==\\'\\')                  ?\"area: \"+node.data.area                  :\\'\\'                  }}                                                  {{                  (node.data.version && node.data.version!==\\'\\')                  ?\"version: \"+node.data.version                  :\\'\\'                  }}                                                                                    Button with data-bs-target                  Some placeholder content for the collapse component. This panel is hidden by default but revealed when the user      activates the relevant trigger.       -->                        {{output.name}}                                      P                                 -->                                                    C                          {{input.name}}                                                  {{        node.data.host_number        ?node.data.host_number        :0        }}                            {{        node.data.subnet_number        ?node.data.subnet_number        :0        }}                            {{        node.data.network_number        ?node.data.network_number        :0        }}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ComposerComponent', 'selector': 'app-composer'},{'name': 'ControlTemplate', 'selector': ''},{'name': 'DataInputComponent', 'selector': 'app-data-input'},{'name': 'DataInputV2Component', 'selector': 'app-data-input-v2'},{'name': 'DataItemComponent', 'selector': 'app-window-item'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HostComponent', 'selector': ''},{'name': 'HowToUseComponent', 'selector': 'app-how-to-use'},{'name': 'MirroringModuleInstanceComponent', 'selector': ''},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavbarElementComponent', 'selector': 'app-navbar-element'},{'name': 'NetworkComponent', 'selector': ''},{'name': 'OffcanvasComponent', 'selector': 'app-offcanvas'},{'name': 'ReteModuleComposerComponent', 'selector': 'app-rete-module-composer'},{'name': 'ReteModuleVisualizerComponent', 'selector': 'app-rete-module-visualizer'},{'name': 'ReteTheaterComposerComponent', 'selector': 'app-rete-theater-composer'},{'name': 'ReteTheaterVisualizerComponent', 'selector': 'app-rete-theater-visualizer'},{'name': 'SubnetComponent', 'selector': ''},{'name': 'TabnavComponent', 'selector': 'app-tabnav'},{'name': 'TheaterInternalServiceModuleInstanceComponent', 'selector': ''},{'name': 'TheaterModuleInstanceComponent', 'selector': ''},{'name': 'UnderbarComponent', 'selector': 'app-underbar'},{'name': 'VisualizerComponent', 'selector': 'app-displayer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TheaterModuleInstanceComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/TheaterModuleInstanceNode.html":{"url":"classes/TheaterModuleInstanceNode.html","title":"class - TheaterModuleInstanceNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  TheaterModuleInstanceNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/rete-settings/nodes/rete-modules/theaterModuleInstance/theaterModuleInstanceNode.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che rappresenta il modulo (rete-node) TheaterModuleInstance all'interno del canvas/editor di rete.\n\n            \n\n            \n                Extends\n            \n            \n                        Component\n            \n\n            \n                Implementa\n            \n            \n                        AngularComponent\n            \n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                builder\n                            \n                            \n                                created\n                            \n                            \n                                createNewNode\n                            \n                            \n                                destroyed\n                            \n                            \n                                valorizeNode\n                            \n                            \n                                worker\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Costruttore\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Definito in src/app/rete-settings/nodes/rete-modules/theaterModuleInstance/theaterModuleInstanceNode.ts:49\n                            \n                        \n\n                \n                    \n                            Costruttore di MirroringModuleInstanceNode\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     AngularComponentData\n\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/rete-modules/theaterModuleInstance/theaterModuleInstanceNode.ts:49\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        builder\n                        \n                    \n                \n            \n            \n                \n                    \n                    builder(node: Node)\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-modules/theaterModuleInstance/theaterModuleInstanceNode.ts:67\n                \n            \n\n\n            \n                \n                    Funzione richiamata in fase di costruzione del nodo (rete-node).\nControlla se bisogna instanziare il nodo oppure crearne uno nuovo:\n\nIn fase di design, il nodo non ha dati, per cui bisogna crearne uno nuovo.\nIn fase di visualizing, il nodo presenta dei dati, per cui va valorizzato il nodo.\n\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        created\n                        \n                    \n                \n            \n            \n                \ncreated(node: Node)\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-modules/theaterModuleInstance/theaterModuleInstanceNode.ts:130\n                \n            \n\n\n            \n                \n                    Funzione richiamata una volta in nodo creato.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createNewNode\n                        \n                    \n                \n            \n            \n                \ncreateNewNode(node: Node)\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-modules/theaterModuleInstance/theaterModuleInstanceNode.ts:79\n                \n            \n\n\n            \n                \n                    Funzione che ha come scopo creare un nodo (rete-node).\nIn particolare gli assegna una struttura vuota.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destroyed\n                        \n                    \n                \n            \n            \n                \ndestroyed(node: Node)\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-modules/theaterModuleInstance/theaterModuleInstanceNode.ts:138\n                \n            \n\n\n            \n                \n                    Funzione richiamata una volta in nodo cancellato.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        valorizeNode\n                        \n                    \n                \n            \n            \n                \nvalorizeNode(node: Node)\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-modules/theaterModuleInstance/theaterModuleInstanceNode.ts:92\n                \n            \n\n\n            \n                \n                    Funzione che ha come scopo la valorizzazione del nodo (rete-node) con i dati in suo possesso.\nIn quasta fase avviene anche la fase iniziale di instanziamento delle porte input/output.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        worker\n                        \n                    \n                \n            \n            \n                \nworker(node: NodeData, inputs: WorkerInputs, outputs: WorkerOutputs)\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/nodes/rete-modules/theaterModuleInstance/theaterModuleInstanceNode.ts:122\n                \n            \n\n\n            \n                \n                    Funzione richiamta per eseguire operazioni che conivolgono computazioni dei nodi.\nNon sono necessari in questa versione.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                            NodeData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    inputs\n                                    \n                                            WorkerInputs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    outputs\n                                    \n                                            WorkerOutputs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Component, Input, Output, Node } from 'rete';\nimport { _Socket } from '../../../sockets/socket';\nimport { _Control } from '../../../controls/control';\nimport { AngularComponent, AngularComponentData } from 'rete-angular-render-plugin';\nimport { NodeData, WorkerInputs, WorkerOutputs } from 'rete/types/core/data';\nimport { TheaterModuleInstanceComponent } from './theaterModuleInstance.component';\nimport {  reteBasicModuleInfo } from '../../reteBasic';\nimport { EnumModuleType } from 'src/app/models/appType';\n\n/**\n * Classe utilizzata per indicare il tipo di modulo MirroringModuleInstanceNode.\n * @see {reteBasicModuleInfo}\n */\nexport class ReteTheaterModuleInstanceInfo extends reteBasicModuleInfo {\n  type: EnumModuleType.TheaterModuleInstance;\n}\n\n/**\n * Funzione dichiarata in TheaterModuleInstanceNode. \n * Essa ha lo scopo di generare una struttura dati empty.\n * Viene utilizzata in per instanziare un nodo del tipo di ritorno indicato senza dati.\n * @returns {ReteTheaterModuleInstanceInfo}\n */\nexport function getEmptyReteTheaterModuleInstanceInfo(): ReteTheaterModuleInstanceInfo {\n  let x: ReteTheaterModuleInstanceInfo = {\n    Input: [],\n    Output: [],\n    description: \"\",\n    name: \"\",\n    type: EnumModuleType.TheaterModuleInstance,\n    host_number: 0,\n    network_number: 0,\n    subnet_number: 0,\n    area: '',\n    module: '',\n    version: '',\n    sequence: '',\n    consumer_interfaces_link: []\n  };\n  return x;\n\n}\n\n/**\n * Classe che rappresenta il modulo (rete-node) TheaterModuleInstance all'interno del canvas/editor di rete.\n */\nexport class TheaterModuleInstanceNode extends Component implements AngularComponent {\n\n  data: AngularComponentData;\n\n    /**\n   * Costruttore di MirroringModuleInstanceNode\n   */\n  constructor() {\n    super(EnumModuleType.TheaterModuleInstance);\n    this.data.render = 'angular';\n    this.data.component = TheaterModuleInstanceComponent;\n  }\n\n    /**\n   * Funzione richiamata in fase di costruzione del nodo (rete-node).\n   * Controlla se bisogna instanziare il nodo oppure crearne uno nuovo:\n   * - In fase di design, il nodo non ha dati, per cui bisogna crearne uno nuovo.\n   * - In fase di visualizing, il nodo presenta dei dati, per cui va valorizzato il nodo.\n   * @param node \n   */\n  async builder(node: Node) {\n    if (Object.keys(node.data).length === 0)\n      this.createNewNode(node)\n    else\n      this.valorizeNode(node)\n  }\n\n  /**\n   * Funzione che ha come scopo creare un nodo (rete-node).\n   * In particolare gli assegna una struttura vuota.\n   * @param node \n   */\n  createNewNode(node: Node) {\n    let t = getEmptyReteTheaterModuleInstanceInfo()\n    node.data = {\n      ...node.data,\n      ...t\n    }\n  }\n\n  /**\n   * Funzione che ha come scopo la valorizzazione del nodo (rete-node) con i dati in suo possesso.\n   * In quasta fase avviene anche la fase iniziale di instanziamento delle porte input/output.\n   * @param node \n   */\n  valorizeNode(node: Node) {\n    var i: any = node.data['Input'];\n    var o: any = node.data['Output'];\n    var il = i.length;\n    var ol = o.length;\n\n    for (let index = 0; index \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"injectables/TheaterService.html":{"url":"injectables/TheaterService.html","title":"injectable - TheaterService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TheaterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/api/theater.service.ts\n        \n\n\n\n\n\n            \n    Indice\n    \n        \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getTheaterInfoByID\n                            \n                            \n                                    Async\n                                getTheaterModulesByUUID\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Costruttore\n        \n            \n                \n                    \nconstructor(http: HttpClient, tokenService: TokenService)\n                    \n                \n                        \n                            \n                                Definito in src/app/services/api/theater.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parametri :\n                                    \n                                        \n                                            \n                                                Nome\n                                                    Tipo\n                                                Opzionale\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tokenService\n                                                  \n                                                        \n                                                                        TokenService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getTheaterInfoByID\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTheaterInfoByID(theater_id: number | string)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/api/theater.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    theater_id\n                                    \n                                            number | string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getTheaterModulesByUUID\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTheaterModulesByUUID(theater_uuid: number | string)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/api/theater.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    theater_uuid\n                                    \n                                            number | string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { SimpleModuleDTO } from '../modelsDTO/moduleDTO';\nimport { TheaterDTO } from '../modelsDTO/theaterDTO';\nimport { TokenService } from '../token/token.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TheaterService {\n\n  constructor(private http: HttpClient, private tokenService: TokenService) { }\n\n  async getTheaterInfoByID(theater_id: number | string): Promise {\n\n    let link: string = environment.getTheaterByID + (theater_id as unknown as string);\n\n    const promise = await new Promise(\n      (resolve, reject) => {\n        this.http.get\n          (\n            link,\n            this.tokenService.getHttpgetOption()\n          )\n          .toPromise()\n          .then(\n            (res: TheaterDTO) => {\n              resolve(res);\n            }\n          )\n          .catch(\n            error => {\n              reject(error);\n            }\n          );\n      }\n    );\n\n    return promise;\n  }\n\n  async getTheaterModulesByUUID(theater_uuid: number | string): Promise {\n\n    let link: string = environment.getTheaterModulesByUUID + (theater_uuid as unknown as string);\n\n    const promise = await new Promise((resolve, reject) => {\n      this.http.get\n        (\n          link,\n          this.tokenService.getHttpgetOption()\n        )\n        .toPromise()\n        .then(\n          (res: SimpleModuleDTO[]) => {\n            resolve(res);\n          }\n        )\n        .catch(\n          error => {\n            reject(error);\n          }\n        );\n    }\n    );\n    return promise;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/TheaterSimpleData.html":{"url":"classes/TheaterSimpleData.html","title":"class - TheaterSimpleData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  TheaterSimpleData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsExport/theaterExport.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano il teatro all'interno dei node_templates.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                properties\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        properties\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         PropertiesTSD\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/theaterExport.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         TheaterTypeExport\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/theaterExport.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ModeTypeExport, ModuleTypeExport, TheaterTypeExport, ToscaDefinitionType } from \"./TypeExport\"\n\n/**\n * Classe utilizzata per l'export. \n * Contiene le informazioni generali per il teatro che devono esserci nello standard Tosca.\n */\nexport class TheaterExport {\n    tosca_definitions_version: ToscaDefinitionType\n    description: string\n    imports: string[]\n    node_templates: { [name: string]: TheaterSimpleData | ModuleInstanceSimpleData }\n}\n/**\n * Classe che contiene gli attributi che indicano il teatro all'interno dei node_templates.\n */\nexport class TheaterSimpleData {\n    type: TheaterTypeExport\n    properties: PropertiesTSD\n}\n/**\n * Classe che contiene gli attributi che indicano le proprietà del teatro.\n */\nexport class PropertiesTSD {\n    version: string | number\n    description: string\n    mode: ModeTypeExport\n    author: string\n    tags: TagsExport[]\n    areas: AreaExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano i tag nelle proprietà del teatro.\n * @see {PropertiesTSD}\n */\nexport class TagsExport {\n    tag: string\n}\n/**\n * Classe che contiene gli attributi che indicano le aree nelle proprietà del teatr.\n * @see {PropertiesTSD}\n */\nexport class AreaExport {\n    area: string\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano il modulo all'interno dei node_modules.\n */\nexport class ModuleInstanceSimpleData {\n    type: ModuleTypeExport\n    properties: PropertiesMISD\n}\n/**\n * Classe che contiene gli attributi che indicano le propeitò del modulo all'interno dei node_templates.\n */\nexport class PropertiesMISD{\n    module: string\n    version: string | number\n    area: string\n    sequence: number\n    sources?: SourceExport[]\n    consumer_interface_link: ConsumerInterfaceLinkExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano le porte di ingresso del modulo all'interno dei node_templates.\n */\nexport class SourceExport{\n    module_instance: string\n    host:string\n    interfaces: string[]\n}\n/**\n * Classe che contiene gli attributi che indicano i collegamenti e relazioni intramodulo con le varie interfacce.\n */\nexport class ConsumerInterfaceLinkExport{\n    local_interface: string\n    module_interface:string\n    remote_interface:string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"interfaces/TheaterTopology.html":{"url":"interfaces/TheaterTopology.html","title":"interface - TheaterTopology","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfacce\n  \n  TheaterTopology\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsApplication/applicationModels.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        TopologyElement\n            \n\n        \n            Indice\n            \n                \n                    \n                        \n                            Proprietà\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            connection\n                                        \n                                \n                                \n                                        \n                                            elements\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Proprietà\n                    \n                        \n                                \n                                    \n                                        \n                                        connection\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        connection:         ReteConnection[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         ReteConnection[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        elements\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        elements:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ReteHostInfo } from \"src/app/rete-settings/nodes/rete-nodes/host/hostNode\";\nimport { ReteNetworkInfo } from \"src/app/rete-settings/nodes/rete-nodes/network/networkNode\";\nimport { ReteSubnetInfo } from \"src/app/rete-settings/nodes/rete-nodes/subnet/subnetNode\";\nimport { ReteMirroringModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/mirroringModuleInstance/mirroringModuleInstanceNode\";\nimport { ReteTheaterInternalServiceModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/theaterInternalServiceModuleInstance/theaterInternalServiceModuleInstanceNode\";\nimport { ReteTheaterModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/theaterModuleInstance/theaterModuleInstanceNode\";\nimport { FlavorBasicInfo } from \"../modelsDTO/falvorDTO\";\nimport { HostModuleDTO } from \"../modelsDTO/hostDTO\";\nimport { ModuleNetworkInterfaceDTO, ModuleInstancePropertiesDTO, SimpleModuleDTO, TheaterInstancePropertiesDTO, ModuleInstanceDTO, ModuleDTO, SimpleAreaDTO, AreaDTO } from \"../modelsDTO/moduleDTO\";\nimport { TheaterDTO } from \"../modelsDTO/theaterDTO\";\n\n\nexport interface CommonModule {\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n}\n\n\n/**\n * Classe contenente gli attributi utilizzati per le operazioni che coinvolgono i moduli.\n * ps. Questa struttura è prettamente utilizzata nella chiamata relativa al singolo modulo.\n */\nexport class ModuleApplication extends ModuleDTO implements CommonModule {\n    imports: string[] // perchè nell'export yaml è previsto\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n    // serve per validare il json risultante dal parsing del theaterApplication\n    validateObject?: string = \"module\";\n}\n// PER IMPLEMENTAZIONI FUTURE, PER COERENZA, PRENDERE DIRETTAMENTE I SINGOLI NODI DALLA CHIAMATA ESCLUSIVA E NON DA QUELLA CHE RESTITUISCE TUTTI I TEATRI\n/**\n * Classe contenente gli attributi utilizzati per le operazioni che coinvolgono i moduli.\n * ps. Questa struttura è prettamente utilizzata nella chiamata che prende tutti i moduli del teatro.\n */\nexport class SimpleModuleApplication extends SimpleModuleDTO implements CommonModule {\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n}\n\n\nexport class ReteConnection {\n    from: string;\n    port_src: string;\n    to: string;\n    port_dst: string;\n}\n\nexport interface TopologyList {\n    rete: any;\n    topology?: TopologyElement\n}\nexport class TopologyElement {\n    elements: { [name: string]: any };\n    connection: ReteConnection[]\n}\n\n// apptype module topology\n\nexport class NodeTopologyElement implements TopologyElement {\n    elements: { [hostName: string]: ReteHostInfo | ReteSubnetInfo | ReteNetworkInfo };\n    connection: ReteConnection[]\n}\n\nexport interface ModuleTopology extends TopologyList {\n    rete: ReteMirroringModuleInstanceInfo | ReteTheaterInternalServiceModuleInstanceInfo | ReteTheaterModuleInstanceInfo\n    topology: NodeTopologyElement;\n}\n\nexport class ModuleInstance extends ModuleInstanceDTO implements ModuleTopology {\n    // moduleTopology data\n    rete: ReteTheaterModuleInstanceInfo | ReteTheaterInternalServiceModuleInstanceInfo | ReteMirroringModuleInstanceInfo;\n    topology: NodeTopologyElement;\n    // other data\n    moduleInfo: SimpleModuleApplication\n}\n\n// apptype theater theater\n\nexport interface TheaterTopology extends TopologyElement {\n    elements: { [hostName: string]: ModuleInstance };\n    connection: ReteConnection[];\n}\n\nexport class TheaterApplication extends TheaterDTO implements TheaterTopology {\n    // theaterTopology data\n    elements: { [hostName: string]: ModuleInstance; };\n    connection: ReteConnection[];\n    // other data\n    properties: TheaterInstancePropertiesDTO;\n    topology: TheaterTopology;\n    // serve per validare il json risultante dal parsing del theaterApplication\n    validateObject?: string = \"theater\";\n}\n\nexport class AreaApplication extends AreaDTO {\n    color?: string;\n}\nexport class AreaColorDTO extends SimpleAreaDTO {\n    color: string;\n}\n\n\nexport class FlavorApplication extends FlavorBasicInfo {\n    flavorName: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/TheatreStatusDTO.html":{"url":"classes/TheatreStatusDTO.html","title":"class - TheatreStatusDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  TheatreStatusDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsDTO/theaterDTO.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano lo stato di un teatro.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                code\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/theaterDTO.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/theaterDTO.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/theaterDTO.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ModuleInstanceDTO, TheaterInstanceDTO } from \"./moduleDTO\"\n\n/**\n * Classe che contiene gli attributi che indicano il catalogo di riferimento di un teatro.\n */\nexport class TagCatalogueDTO {\n    description: string\n    id: string | number\n    name: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano lo stato di un teatro.\n */\nexport class TheatreStatusDTO {\n    code: string\n    id: string | number\n    name: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano un elemento nella sequenza di deploy.\n */\nexport class DeployInstanceDTO {\n    moduleInstanceConfigurationUUID?: string\n    moduleInstanceName: string\n    moduleInstanceUUID: string\n    moduleUUID: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano il blueprint di un teatro.\n */\nexport class BlueprintFileDTO {\n    description: string\n    imports: string[]\n    node_templates: {[name:string]:ModuleInstanceDTO|TheaterInstanceDTO}\n    tosca_definitions_version: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano il mapping nome-modulo.\n */\nexport class NameMappingDTO {\n    display_name: string\n    module_instance_name: string\n    module_name: string\n    node_template_name: string\n}\n/**\n * Classe che contiene gli attributi che indica l'array dei mapping nome-modulo.\n */\nexport class EntityNameMappingFileDTO {\n    name_mapping: NameMappingDTO[]\n}\n\n/**\n * Classe che contiene gli attributi che indicano il teaatro.\n */\nexport class TheaterDTO {\n    author: string\n    blueprintFile: BlueprintFileDTO\n    blueprintUUID: string | number\n    createdBy: string\n    createdDate: string\n    deploymentSequence: {[index:string]:DeployInstanceDTO} //tosee\n    description: string\n    entityNameMappingFile: EntityNameMappingFileDTO\n    id: string | number\n    isLocked: boolean\n    lastModifiedBy: string\n    lastModifiedDate: string\n    lockAcquiredTimestamp: string\n    lockLastUserAcquiring: string\n    lockReleasedTimestamp: string\n    name: string\n    status: TheatreStatusDTO\n    tags: TagCatalogueDTO[]\n    uuid: string\n    version: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"injectables/TokenService.html":{"url":"injectables/TokenService.html","title":"injectable - TokenService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TokenService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/token/token.service.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Servizio che serve per la gestione di un toker per le chiamate al server.\n\n            \n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                headers\n                            \n                            \n                                    Private\n                                httpgetOption\n                            \n                            \n                                    Private\n                                token\n                            \n                        \n                    \n                \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                getHeaders\n                            \n                            \n                                getHttpgetOption\n                            \n                            \n                                getToken\n                            \n                            \n                                setHeaders\n                            \n                            \n                                setHttpgetOption\n                            \n                            \n                                setToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Costruttore\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Definito in src/app/services/token/token.service.ts:24\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        getHeaders\n                        \n                    \n                \n            \n            \n                \ngetHeaders()\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/token/token.service.ts:60\n                \n            \n\n\n            \n                \n                    Funzione che ritorna l'header salvato.\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHttpgetOption\n                        \n                    \n                \n            \n            \n                \ngetHttpgetOption()\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/token/token.service.ts:74\n                \n            \n\n\n            \n                \n                    Funzione che ritorna l'http get option salvato.\n\n\n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getToken\n                        \n                    \n                \n            \n            \n                \ngetToken()\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/token/token.service.ts:46\n                \n            \n\n\n            \n                \n                    Funzione che ha come scopo di ritornare il token salvato.\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setHeaders\n                        \n                    \n                \n            \n            \n                \nsetHeaders(val: HttpHeaders)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/token/token.service.ts:54\n                \n            \n\n\n            \n                \n                    Funzione che setta l'header.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                HttpHeaders\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setHttpgetOption\n                        \n                    \n                \n            \n            \n                \nsetHttpgetOption(val: any)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/token/token.service.ts:67\n                \n            \n\n\n            \n                \n                    Funzione che salva l'http get option.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setToken\n                        \n                    \n                \n            \n            \n                \nsetToken(val: any)\n                \n            \n\n\n            \n                \n                    Definito in src/app/services/token/token.service.ts:32\n                \n            \n\n\n            \n                \n                    Funzione che si occupa di settare il token\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        headers\n                        \n                    \n                \n            \n                    \n                        \n                                Definito in src/app/services/token/token.service.ts:20\n                        \n                    \n\n            \n                \n                    Variabile che serve per memorizzare gli header della chiamata api.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        httpgetOption\n                        \n                    \n                \n            \n                    \n                        \n                                Definito in src/app/services/token/token.service.ts:24\n                        \n                    \n\n            \n                \n                    Variabile utilizzata per salvare le httpOption delle chiamate api.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        token\n                        \n                    \n                \n            \n                    \n                        \n                                Definito in src/app/services/token/token.service.ts:16\n                        \n                    \n\n            \n                \n                    Variabile che serve a memorizzare il token\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n\n/**\n * Servizio che serve per la gestione di un toker per le chiamate al server.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenService {\n\n  /**\n   * Variabile che serve a memorizzare il token\n   */\n  private token;\n  /**\n   * Variabile che serve per memorizzare gli header della chiamata api.\n   */\n  private headers;\n  /**\n   * Variabile utilizzata per salvare le httpOption delle chiamate api.\n   */\n  private httpgetOption;\n\n  constructor() { }\n\n  /**\n   * Funzione che si occupa di settare il token\n   * @param val \n   */\n  setToken(val: any) {\n    this.token = val;\n    this.headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer' + this.token,\n    });\n    this.httpgetOption = {\n      headers: this.headers,\n      observe: \"body\",\n    }\n  }\n  /**\n   * Funzione che ha come scopo di ritornare il token salvato.\n   */\n  getToken() {\n    return this.token;\n  }\n\n  /**\n   * Funzione che setta l'header.\n   * @param val \n   */\n  setHeaders(val: HttpHeaders) {\n    this.headers = val;\n  }\n  /**\n   * Funzione che ritorna l'header salvato.\n   */\n  getHeaders() {\n    return this.headers;\n  }\n\n  /** \n   * Funzione che salva l'http get option.\n  */\n  setHttpgetOption(val: any) {\n    this.httpgetOption = val;\n  }\n  /**\n   * Funzione che ritorna l'http get option salvato.\n   * @returns \n   */\n  getHttpgetOption() {\n    return this.httpgetOption as unknown;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/TopologyElement.html":{"url":"classes/TopologyElement.html","title":"class - TopologyElement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  TopologyElement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsApplication/applicationModels.ts\n        \n\n\n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                connection\n                            \n                            \n                                elements\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        connection\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ReteConnection[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsApplication/applicationModels.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        elements\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     literal type\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsApplication/applicationModels.ts:65\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ReteHostInfo } from \"src/app/rete-settings/nodes/rete-nodes/host/hostNode\";\nimport { ReteNetworkInfo } from \"src/app/rete-settings/nodes/rete-nodes/network/networkNode\";\nimport { ReteSubnetInfo } from \"src/app/rete-settings/nodes/rete-nodes/subnet/subnetNode\";\nimport { ReteMirroringModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/mirroringModuleInstance/mirroringModuleInstanceNode\";\nimport { ReteTheaterInternalServiceModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/theaterInternalServiceModuleInstance/theaterInternalServiceModuleInstanceNode\";\nimport { ReteTheaterModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/theaterModuleInstance/theaterModuleInstanceNode\";\nimport { FlavorBasicInfo } from \"../modelsDTO/falvorDTO\";\nimport { HostModuleDTO } from \"../modelsDTO/hostDTO\";\nimport { ModuleNetworkInterfaceDTO, ModuleInstancePropertiesDTO, SimpleModuleDTO, TheaterInstancePropertiesDTO, ModuleInstanceDTO, ModuleDTO, SimpleAreaDTO, AreaDTO } from \"../modelsDTO/moduleDTO\";\nimport { TheaterDTO } from \"../modelsDTO/theaterDTO\";\n\n\nexport interface CommonModule {\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n}\n\n\n/**\n * Classe contenente gli attributi utilizzati per le operazioni che coinvolgono i moduli.\n * ps. Questa struttura è prettamente utilizzata nella chiamata relativa al singolo modulo.\n */\nexport class ModuleApplication extends ModuleDTO implements CommonModule {\n    imports: string[] // perchè nell'export yaml è previsto\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n    // serve per validare il json risultante dal parsing del theaterApplication\n    validateObject?: string = \"module\";\n}\n// PER IMPLEMENTAZIONI FUTURE, PER COERENZA, PRENDERE DIRETTAMENTE I SINGOLI NODI DALLA CHIAMATA ESCLUSIVA E NON DA QUELLA CHE RESTITUISCE TUTTI I TEATRI\n/**\n * Classe contenente gli attributi utilizzati per le operazioni che coinvolgono i moduli.\n * ps. Questa struttura è prettamente utilizzata nella chiamata che prende tutti i moduli del teatro.\n */\nexport class SimpleModuleApplication extends SimpleModuleDTO implements CommonModule {\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n}\n\n\nexport class ReteConnection {\n    from: string;\n    port_src: string;\n    to: string;\n    port_dst: string;\n}\n\nexport interface TopologyList {\n    rete: any;\n    topology?: TopologyElement\n}\nexport class TopologyElement {\n    elements: { [name: string]: any };\n    connection: ReteConnection[]\n}\n\n// apptype module topology\n\nexport class NodeTopologyElement implements TopologyElement {\n    elements: { [hostName: string]: ReteHostInfo | ReteSubnetInfo | ReteNetworkInfo };\n    connection: ReteConnection[]\n}\n\nexport interface ModuleTopology extends TopologyList {\n    rete: ReteMirroringModuleInstanceInfo | ReteTheaterInternalServiceModuleInstanceInfo | ReteTheaterModuleInstanceInfo\n    topology: NodeTopologyElement;\n}\n\nexport class ModuleInstance extends ModuleInstanceDTO implements ModuleTopology {\n    // moduleTopology data\n    rete: ReteTheaterModuleInstanceInfo | ReteTheaterInternalServiceModuleInstanceInfo | ReteMirroringModuleInstanceInfo;\n    topology: NodeTopologyElement;\n    // other data\n    moduleInfo: SimpleModuleApplication\n}\n\n// apptype theater theater\n\nexport interface TheaterTopology extends TopologyElement {\n    elements: { [hostName: string]: ModuleInstance };\n    connection: ReteConnection[];\n}\n\nexport class TheaterApplication extends TheaterDTO implements TheaterTopology {\n    // theaterTopology data\n    elements: { [hostName: string]: ModuleInstance; };\n    connection: ReteConnection[];\n    // other data\n    properties: TheaterInstancePropertiesDTO;\n    topology: TheaterTopology;\n    // serve per validare il json risultante dal parsing del theaterApplication\n    validateObject?: string = \"theater\";\n}\n\nexport class AreaApplication extends AreaDTO {\n    color?: string;\n}\nexport class AreaColorDTO extends SimpleAreaDTO {\n    color: string;\n}\n\n\nexport class FlavorApplication extends FlavorBasicInfo {\n    flavorName: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"interfaces/TopologyList.html":{"url":"interfaces/TopologyList.html","title":"interface - TopologyList","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfacce\n  \n  TopologyList\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsApplication/applicationModels.ts\n        \n\n\n\n\n        \n            Indice\n            \n                \n                    \n                        \n                            Proprietà\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            rete\n                                        \n                                \n                                \n                                            Opzionale\n                                        \n                                            topology\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Proprietà\n                    \n                        \n                                \n                                    \n                                        \n                                        rete\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rete:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        topology\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        topology:         TopologyElement\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         TopologyElement\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Opzionale\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ReteHostInfo } from \"src/app/rete-settings/nodes/rete-nodes/host/hostNode\";\nimport { ReteNetworkInfo } from \"src/app/rete-settings/nodes/rete-nodes/network/networkNode\";\nimport { ReteSubnetInfo } from \"src/app/rete-settings/nodes/rete-nodes/subnet/subnetNode\";\nimport { ReteMirroringModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/mirroringModuleInstance/mirroringModuleInstanceNode\";\nimport { ReteTheaterInternalServiceModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/theaterInternalServiceModuleInstance/theaterInternalServiceModuleInstanceNode\";\nimport { ReteTheaterModuleInstanceInfo } from \"src/app/rete-settings/nodes/rete-modules/theaterModuleInstance/theaterModuleInstanceNode\";\nimport { FlavorBasicInfo } from \"../modelsDTO/falvorDTO\";\nimport { HostModuleDTO } from \"../modelsDTO/hostDTO\";\nimport { ModuleNetworkInterfaceDTO, ModuleInstancePropertiesDTO, SimpleModuleDTO, TheaterInstancePropertiesDTO, ModuleInstanceDTO, ModuleDTO, SimpleAreaDTO, AreaDTO } from \"../modelsDTO/moduleDTO\";\nimport { TheaterDTO } from \"../modelsDTO/theaterDTO\";\n\n\nexport interface CommonModule {\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n}\n\n\n/**\n * Classe contenente gli attributi utilizzati per le operazioni che coinvolgono i moduli.\n * ps. Questa struttura è prettamente utilizzata nella chiamata relativa al singolo modulo.\n */\nexport class ModuleApplication extends ModuleDTO implements CommonModule {\n    imports: string[] // perchè nell'export yaml è previsto\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n    // serve per validare il json risultante dal parsing del theaterApplication\n    validateObject?: string = \"module\";\n}\n// PER IMPLEMENTAZIONI FUTURE, PER COERENZA, PRENDERE DIRETTAMENTE I SINGOLI NODI DALLA CHIAMATA ESCLUSIVA E NON DA QUELLA CHE RESTITUISCE TUTTI I TEATRI\n/**\n * Classe contenente gli attributi utilizzati per le operazioni che coinvolgono i moduli.\n * ps. Questa struttura è prettamente utilizzata nella chiamata che prende tutti i moduli del teatro.\n */\nexport class SimpleModuleApplication extends SimpleModuleDTO implements CommonModule {\n    interfaces: ModuleNetworkInterfaceDTO[]\n    hosts: HostModuleDTO[]\n    host_number: number\n    subnet_number: number\n    network_number: number\n    topology: NodeTopologyElement\n}\n\n\nexport class ReteConnection {\n    from: string;\n    port_src: string;\n    to: string;\n    port_dst: string;\n}\n\nexport interface TopologyList {\n    rete: any;\n    topology?: TopologyElement\n}\nexport class TopologyElement {\n    elements: { [name: string]: any };\n    connection: ReteConnection[]\n}\n\n// apptype module topology\n\nexport class NodeTopologyElement implements TopologyElement {\n    elements: { [hostName: string]: ReteHostInfo | ReteSubnetInfo | ReteNetworkInfo };\n    connection: ReteConnection[]\n}\n\nexport interface ModuleTopology extends TopologyList {\n    rete: ReteMirroringModuleInstanceInfo | ReteTheaterInternalServiceModuleInstanceInfo | ReteTheaterModuleInstanceInfo\n    topology: NodeTopologyElement;\n}\n\nexport class ModuleInstance extends ModuleInstanceDTO implements ModuleTopology {\n    // moduleTopology data\n    rete: ReteTheaterModuleInstanceInfo | ReteTheaterInternalServiceModuleInstanceInfo | ReteMirroringModuleInstanceInfo;\n    topology: NodeTopologyElement;\n    // other data\n    moduleInfo: SimpleModuleApplication\n}\n\n// apptype theater theater\n\nexport interface TheaterTopology extends TopologyElement {\n    elements: { [hostName: string]: ModuleInstance };\n    connection: ReteConnection[];\n}\n\nexport class TheaterApplication extends TheaterDTO implements TheaterTopology {\n    // theaterTopology data\n    elements: { [hostName: string]: ModuleInstance; };\n    connection: ReteConnection[];\n    // other data\n    properties: TheaterInstancePropertiesDTO;\n    topology: TheaterTopology;\n    // serve per validare il json risultante dal parsing del theaterApplication\n    validateObject?: string = \"theater\";\n}\n\nexport class AreaApplication extends AreaDTO {\n    color?: string;\n}\nexport class AreaColorDTO extends SimpleAreaDTO {\n    color: string;\n}\n\n\nexport class FlavorApplication extends FlavorBasicInfo {\n    flavorName: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/TypesCatalogueDTO.html":{"url":"classes/TypesCatalogueDTO.html","title":"class - TypesCatalogueDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  TypesCatalogueDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsDTO/moduleDTO.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indica il catalogo del tipo.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                group\n                            \n                            \n                                id\n                            \n                            \n                                parentId\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        group\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        parentId\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     literal type\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/moduleDTO.ts:29\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PageableDTO, SortDTO } from './elementDTO';\nimport { NetworkDTO } from './networkDTO';\nimport { TheaterDTO } from './theaterDTO';\n\n/**\n * Classe che contiene gli attributi che indicano l'insieme dei moduli ritornati dal teatro.\n */\nexport class ModuleListDTO {\n    content: SimpleModuleDTO[]\n    pageable: PageableDTO\n    last: boolean\n    totalPages: string | number\n    totalElements: string | number\n    size: string | number\n    number: string | number\n    sort: SortDTO\n    numberOfElements: string | number\n    first: boolean\n    empty: boolean\n}\n\n/**\n * Classe che contiene gli attributi che indica il catalogo del tipo.\n */\nexport class TypesCatalogueDTO {\n    group: string\n    id: string | number\n    parentId: {}\n    value: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano la classificazione del modulo.\n */\nexport class ModuleClassificationDTO {\n    blueprintType: string\n    category: string\n    expectedInstanceType: string\n    id: string | number\n    mcClass: string\n    type: string\n    uuid: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano un parametro generico.\n */\nexport class GenericParameterDTO {\n    type: string\n    default: string\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano i parametri di configurazione di un modulto.\n */\nexport class ConfigurationTemplateDTO {\n    anchor_parameters: { [name: string]: GenericParameterDTO | string }\n    instance_parameters: { [name: string]: GenericParameterDTO }\n    structural_parameters: { [name: string]: GenericParameterDTO }\n    fixed_parameters: { [name: string]: GenericParameterDTO }\n    control_parameters: { [name: string]: GenericParameterDTO }\n    infrastructure_parameters: { [name: string]: GenericParameterDTO }\n    module: string\n    description: string\n    category: string\n    version: string | number\n    platform: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano la modalità di un modulo.\n */\nexport class ModuleModeDTO {\n    code: string\n    id: string | number\n    name: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano lo stato di un modulo.\n */\nexport class ModuleStatusDTO {\n    descriptionCode: string\n    id: string | number\n    name: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le statitistiche di un modulo.\n */\nexport class StatisticItemDTO {\n    error: string | number\n    updated: string | number\n    inserted: string | number\n}\n\n/**\n * Classe che contiene gli attributi che indicano il modulo (simple - in dipendenza del teatro).\n */\nexport class SimpleModuleDTO {\n    createdBy: string\n    createdDate: string\n    description: string\n    id: string | number\n    isLocked: boolean\n    lastModifiedBy: string\n    lastModifiedDate: string\n    lockAcquiredTimestamp: string\n    lockLastUserAcquiring: string\n    lockReleasedTimestamp: string\n    name: string\n    status: ModuleStatusDTO\n    type?: string | any\n    uuid: string\n    version: string | number\n}\n\n/**\n * Classe che contiene gli attributi che indicano il modulo (complex - ritorato da call appostita).\n * @extends {SimpleModuleDTO}\n */\nexport class ModuleDTO extends SimpleModuleDTO {\n    attachments: string[]\n    author: string\n    capabilities: { [name: string]: string }\n    catalog1: TypesCatalogueDTO\n    catalog2: TypesCatalogueDTO\n    catalog3: TypesCatalogueDTO\n    classification: ModuleClassificationDTO\n    configurationTemplate: ConfigurationTemplateDTO\n    detailProperties: {}\n    input: { [name: string]: string }\n    output: { [name: string]: string }\n    mode: ModuleModeDTO\n    statistics: { [name: string]: StatisticItemDTO | string | number }\n    tags: []\n}\n\n/**\n * Classe che contiene gli attributi che indicano le interfacce esposte da un modulo.\n */\nexport class ModuleNetworkInterfaceDTO {\n    id: string | number\n    label: string\n    module: ModuleDTO\n    network: NetworkDTO\n    nodeName: string\n    type: string\n    uuid: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le connessioni interfaccia-modulo.\n */\nexport class ConsumerInterfaceLinkDTO {\n    local_interface: string\n    module_instance: string\n    remote_interface: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà dell'istanza di un modulo all'interno del node_templates.\n */\nexport class ModuleInstancePropertiesDTO {\n    area: string\n    description: string\n    module: string\n    version: string | number\n    sequence: string | number\n    consumer_interfaces_link: ConsumerInterfaceLinkDTO[]\n}\n\n\n/**\n * Classe che contiene gli attributi che indicano l'area di appartenenza di un modulo (complex).\n */\nexport class AreaDTO {\n    id: string | number;\n    uuid: string;\n    name: string;\n    description: string;\n    theater: TheaterDTO;\n    deleted: boolean | string;\n}\n\n/**\n * Classe che contiene gli attributi che indicano l'area di appartenenza di un modulo (simple).\n */\nexport class SimpleAreaDTO {\n    area: string\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà dell'istanza di un teatro all'interno del node_templates.\n */\nexport class TheaterInstancePropertiesDTO {\n    mode: string\n    tags: TagTIP[]\n    areas: SimpleAreaDTO[]\n    author: string\n    version: string | number\n    description: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano un tag.\n */\nexport class TagTIP{\n    tag: string\n}\n\n/**\n * Classe che contiene gli attributi che indicano in via generale le caratteristiche di un elemento che deve essere presente nel node_templates.\n */\nexport class ElementIntoTheaterDTO {  // goes into map in blueprint [name:string]: Module...\n    properties: ModuleInstancePropertiesDTO | TheaterInstancePropertiesDTO\n    type: string\n}\n\n\n/**\n * Classe che contiene gli attributi che indicano le caratteristiche di un teatro presente nel node_templates.\n */\nexport class ModuleInstanceDTO {\n    properties: ModuleInstancePropertiesDTO\n    type: string\n}\n/**\n * Classe che contiene gli attributi che indicano le caratteristiche di un modulo presente nel node_templates.\n */\nexport class TheaterInstanceDTO {\n    properties: TheaterInstancePropertiesDTO\n    type: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"components/UnderbarComponent.html":{"url":"components/UnderbarComponent.html","title":"component - UnderbarComponent","body":"\n                   \n\n\n\n\n\n  Componenti\n  \n  UnderbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/underbar/underbar.component.ts\n\n\n\n    \n        Descrizione\n    \n    \n        Componente che consente di mostrare una underbar (sottoposta) alla navbar ad elementi generici.\n\n    \n\n\n\n\n\n    Metadati\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-underbar\n            \n\n            \n                styleUrls\n                ./underbar.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./underbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Indice\n    \n        \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                itemClicked\n                            \n                        \n                    \n                \n\n                \n                    \n                        Input\n                    \n                \n                \n                    \n                        \n                            \n                                element\n                            \n                        \n                    \n                \n\n                \n                    \n                        Output\n                    \n                \n                \n                    \n                        \n                            \n                                itemSelected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Costruttore\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Definito in src/app/components/underbar/underbar.component.ts:23\n                            \n                        \n\n                \n                    \n                            Costruttore componente UnderbarComponent.\nControlla che tutti gli id siano diversi prima di procedere alla loro visualizzazione.\n\n                    \n                \n            \n        \n\n\n    \n    Input\n        \n            \n                \n                    \n                        \n                        element\n                    \n                \n                \n                    \n                        Tipo :         UnderbarElement[]\n\n                    \n                \n                        \n                            \n                                    Definito in src/app/components/underbar/underbar.component.ts:19\n                            \n                        \n                \n                    \n                        Variabile data in input che contiene gli elementi dell'underbar.\n\n                    \n                \n            \n        \n\n    \n    Output\n        \n            \n                \n                    \n                        \n                        itemSelected\n                    \n                \n                \n                    \n                        Tipo :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Definito in src/app/components/underbar/underbar.component.ts:23\n                            \n                        \n                \n                    \n                        Variabile (event) che ritorna l'elemento selezionatp\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        itemClicked\n                        \n                    \n                \n            \n            \n                \nitemClicked(event: UnderbarItem)\n                \n            \n\n\n            \n                \n                    Definito in src/app/components/underbar/underbar.component.ts:54\n                \n            \n\n\n            \n                \n                    Funzione che emette l'evento appena si seleziona un elemento.\nSee {itemSelected}\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                UnderbarItem\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Output, Input, ChangeDetectionStrategy } from '@angular/core';\nimport { UnderbarItem, UnderbarElement } from './underbarType';\n\n/**\n * Componente che consente di mostrare una underbar (sottoposta) alla navbar ad elementi generici.\n */\n@Component({\n  selector: 'app-underbar',\n  templateUrl: './underbar.component.html',\n  styleUrls: ['./underbar.component.sass'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class UnderbarComponent {\n\n  /**\n   * Variabile data in input che contiene gli elementi dell'underbar.\n   * @type {UnderbarElement}\n   */\n  @Input() element: UnderbarElement[];\n  /**\n   * Variabile (event) che ritorna l'elemento selezionatp\n   */\n  @Output() itemSelected:EventEmitter = new EventEmitter();\n\n  /**\n   * Costruttore componente UnderbarComponent.\n   * Controlla che tutti gli id siano diversi prima di procedere alla loro visualizzazione.\n   * @returns \n   */\n  constructor() {\n    if (!this.element)\n      return\n    let check = [];\n    this.element.forEach(\n      (el) => {\n        el.element.forEach(e => {\n          if (check[e.id])\n            check[e.id] = true;\n          else {\n            console.error(\"UnderbarItem [ID] duplicated\");\n            return;\n          }\n        }\n        );\n      }\n    )\n  }\n\n  /**\n   * Funzione che emette l'evento appena si seleziona un elemento.\n   * @param event \n   * @see {itemSelected}\n   */\n  itemClicked(event: UnderbarItem) {\n    this.itemSelected.emit(event);\n  }\n\n}\n\n    \n\n    \n        \n    \n    \n\n        &nbsp;\n\n        \n\n             1\">\n                \n                    \n                        \n                            \n                        \n                        \n                        \n                    \n                \n            \n\n            \n                \n                    \n                \n            \n\n            \n                \n            \n\n            \n                \n            \n\n        \n\n    \n    \n\n    \n\n    \n                \n                    ./underbar.component.sass\n                \n                \n    \n\n    \n        \n        \n            \n                Legenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento html con direttive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                      1\">                                                                                                                                                                                                                                                                                                                                                                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ComposerComponent', 'selector': 'app-composer'},{'name': 'ControlTemplate', 'selector': ''},{'name': 'DataInputComponent', 'selector': 'app-data-input'},{'name': 'DataInputV2Component', 'selector': 'app-data-input-v2'},{'name': 'DataItemComponent', 'selector': 'app-window-item'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HostComponent', 'selector': ''},{'name': 'HowToUseComponent', 'selector': 'app-how-to-use'},{'name': 'MirroringModuleInstanceComponent', 'selector': ''},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavbarElementComponent', 'selector': 'app-navbar-element'},{'name': 'NetworkComponent', 'selector': ''},{'name': 'OffcanvasComponent', 'selector': 'app-offcanvas'},{'name': 'ReteModuleComposerComponent', 'selector': 'app-rete-module-composer'},{'name': 'ReteModuleVisualizerComponent', 'selector': 'app-rete-module-visualizer'},{'name': 'ReteTheaterComposerComponent', 'selector': 'app-rete-theater-composer'},{'name': 'ReteTheaterVisualizerComponent', 'selector': 'app-rete-theater-visualizer'},{'name': 'SubnetComponent', 'selector': ''},{'name': 'TabnavComponent', 'selector': 'app-tabnav'},{'name': 'TheaterInternalServiceModuleInstanceComponent', 'selector': ''},{'name': 'TheaterModuleInstanceComponent', 'selector': ''},{'name': 'UnderbarComponent', 'selector': 'app-underbar'},{'name': 'VisualizerComponent', 'selector': 'app-displayer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UnderbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/UnderbarElement.html":{"url":"classes/UnderbarElement.html","title":"class - UnderbarElement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  UnderbarElement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/underbar/underbarType.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Funzione usata come input per la componente UnderbarComponent.\nSee {UnderbarComponent}\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                element\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        element\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         UnderbarItem[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/underbar/underbarType.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { TemplateRef } from \"@angular/core\";\n/**\n * Funzione usata come input per la componente UnderbarComponent.\n * @see {UnderbarComponent}\n */\nexport class UnderbarElement {\n    element: UnderbarItem[];\n}\n\n/**\n * Elemento singolo per l'underbar.\n * Usato anche come ritorno.\n * @see {UnderbarComponent}\n */\nexport class UnderbarItem {\n    id: string;\n    type: \"separator\" | \"template\" | \"button\";\n    button?: {\n        iconClass: string\n        tooltipText: string\n    } \n    template?: TemplateRef;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/UnderbarItem.html":{"url":"classes/UnderbarItem.html","title":"class - UnderbarItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  UnderbarItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/underbar/underbarType.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Elemento singolo per l'underbar.\nUsato anche come ritorno.\nSee {UnderbarComponent}\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                    Opzionale\n                                button\n                            \n                            \n                                id\n                            \n                            \n                                    Opzionale\n                                template\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        button\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     literal type\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/underbar/underbarType.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/underbar/underbarType.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Opzionale\n                        template\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     TemplateRef\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/underbar/underbarType.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     \"separator\" | \"template\" | \"button\"\n\n                    \n                \n                    \n                        \n                                Definito in src/app/components/underbar/underbarType.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { TemplateRef } from \"@angular/core\";\n/**\n * Funzione usata come input per la componente UnderbarComponent.\n * @see {UnderbarComponent}\n */\nexport class UnderbarElement {\n    element: UnderbarItem[];\n}\n\n/**\n * Elemento singolo per l'underbar.\n * Usato anche come ritorno.\n * @see {UnderbarComponent}\n */\nexport class UnderbarItem {\n    id: string;\n    type: \"separator\" | \"template\" | \"button\";\n    button?: {\n        iconClass: string\n        tooltipText: string\n    } \n    template?: TemplateRef;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/VirtualMachine.html":{"url":"classes/VirtualMachine.html","title":"class - VirtualMachine","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  VirtualMachine\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsExport/moduleExport.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano l'insieme di host presenti in un modulo.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                ports\n                            \n                            \n                                virtual_machine\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        ports\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     VirtualMachinePorts[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:91\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        virtual_machine\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:90\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ModeTypeExport, ModuleTypeExport, NetworkTypeExport, NodeTypeExport, PortTypeExport, RelationshipsTypeExport, SubnetTypeExport, ToscaDefinitionType } from \"./TypeExport\"\n\n\n/**\n * Classe utilizzata per l'export. \n * Contiene le informazioni generali per il modulo che devono esserci nello standard Tosca.\n */\nexport class ModuleExport {\n    tosca_definitions_version: ToscaDefinitionType\n    description: string\n    imports: string[]\n    node_templates: { [name: string]: ModuleSimpleData | NodeSimpleData | PortSimpleData | NetworkSimpleData | SubnetSimpleData }\n    dsl_definition: any | null; //future\n    capabilites: any | null //future\n    outputs: any | null //future\n}\n\n/**\n * Classe che contiene gli attributi che indicano la rappresentazione del modulo per l'export.\n */\nexport class ModuleSimpleData {\n    type: ModuleTypeExport\n    properties: PropertiesMSD\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà del modulo per l'export.\n */\nexport class PropertiesMSD {\n    mode: ModeTypeExport\n    description: string\n    version: string | number\n    constraints: ConstraintsMSD\n    interface_networks: {\n        providers: InterfaceNetworksProvider[]\n        consumers: InterfaceNetworksConsumer[]\n    }\n    virtual_machines: VirtualMachine[]\n}\n/**\n * Classe che contiene gli attributi che indicano i vincoli di connessione del modulo per l'export.\n */\nexport class ConstraintsMSD {\n    interface_constraints: InterfaceConstraints[]\n    module_constraints: ModuleConstraints[]\n    network_constraints: NetworkConstraints[]\n}\n/**\n * Classe che contiene gli attributi che indicano i viconli per le interfacce di connessione del modulo.\n */\nexport class InterfaceConstraints {\n    local_interface: string\n    multiple_mode: boolean = false //future\n    module_name: string\n    compatibility: string = \"1.0\" // future\n    remote_interface: string\n}\n/**\n * Classe che contiene gli attributi che indicano i viconli del modulo.\n */\nexport class ModuleConstraints {\n}\n/**\n * Classe che contiene gli attributi che indicano i viconli dei network del modulo.\n */\nexport class NetworkConstraints {\n}\n/**\n * Classe che contiene gli attributi che indicano le interfacce provider del modulo.\n */\nexport class InterfaceNetworksProvider {\n    interface: string\n    network: string\n    tag: string\n    subnets: SubnetExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano le interfacce consumer del modulo.\n */\nexport class InterfaceNetworksConsumer {\n    interface: string\n    network: string\n    tag: string\n    subnets: SubnetExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano l'insieme di host presenti in un modulo.\n */\nexport class VirtualMachine {\n    virtual_machine: string\n    ports: VirtualMachinePorts[]\n}\n/**\n * Classe che contiene gli attributi che indicano le porte associate ad un host di un modulo.\n */\nexport class VirtualMachinePorts {\n    port: string\n    network: string\n    subnets: SubnetExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano la subnet connessa alla porte dell'host.\n * @see {VirtualMachinePorts}\n */\nexport class SubnetExport {\n    subnet: string;\n}\n\n/**\n * Classe che contiene gli attributi che indica un nodo all'interno dei node_templates.\n * @see {ModuleExport}\n */\nexport class NodeSimpleData {\n    type: NodeTypeExport\n    properties: any | null // future\n    interfaces: any | null // future\n    relationships: RelationshipsExport[]\n}\n\n/**\n * Classe che contiene gli attributi che indicano le relazioni generali.\n */\nexport class RelationshipsExport {\n    type: RelationshipsTypeExport\n    target: string\n}\n/**\n * Classe che contiene gli attributi che indicano i dati della porta all'interno dei node_templates.\n */\nexport class PortSimpleData {\n    type: PortTypeExport\n    relationships: RelationshipsExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano i dati delle network all'interno dei node_templates.\n */\nexport class NetworkSimpleData {\n    type: NetworkTypeExport\n    properties: PropertiesNSD\n}\n/**\n * Classe che contiene gli attributi che indicano le proprietà della network all'interno dei node_templates.\n * @see {NetworkSimpleData}\n */\nexport class PropertiesNSD {\n    openstack_config?: any | null // future\n    use_external_resource?: boolean | null // future\n    resource_id?: any | null // future\n}\n\n/**\n * Classe che contiene gli attributi che indicano i dati delle subnet all'interno dei node_templates.\n */\nexport class SubnetSimpleData {\n    type: SubnetTypeExport\n    relationships: RelationshipsExport[]\n    properties: PropertiesSSD\n}\n/**\n * Classe che contiene gli attributi che indicano le proprietà della subnet all'interno dei node_templates.\n * @see {NetworkSimpleData}\n */\nexport class PropertiesSSD {\n    subnet?: {\n        ip_version: string | number\n        cidr: string\n        enable_dhcp: boolean\n        gateway_ip?: any | null // future\n    }\n    openstack_config?: any | null // future\n    use_external_resource?: boolean | null // future\n    resource_id?: any | null // future\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/VirtualMachinePorts.html":{"url":"classes/VirtualMachinePorts.html","title":"class - VirtualMachinePorts","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  VirtualMachinePorts\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsExport/moduleExport.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano le porte associate ad un host di un modulo.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                network\n                            \n                            \n                                port\n                            \n                            \n                                subnets\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        network\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:98\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        port\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:97\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subnets\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         SubnetExport[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsExport/moduleExport.ts:99\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ModeTypeExport, ModuleTypeExport, NetworkTypeExport, NodeTypeExport, PortTypeExport, RelationshipsTypeExport, SubnetTypeExport, ToscaDefinitionType } from \"./TypeExport\"\n\n\n/**\n * Classe utilizzata per l'export. \n * Contiene le informazioni generali per il modulo che devono esserci nello standard Tosca.\n */\nexport class ModuleExport {\n    tosca_definitions_version: ToscaDefinitionType\n    description: string\n    imports: string[]\n    node_templates: { [name: string]: ModuleSimpleData | NodeSimpleData | PortSimpleData | NetworkSimpleData | SubnetSimpleData }\n    dsl_definition: any | null; //future\n    capabilites: any | null //future\n    outputs: any | null //future\n}\n\n/**\n * Classe che contiene gli attributi che indicano la rappresentazione del modulo per l'export.\n */\nexport class ModuleSimpleData {\n    type: ModuleTypeExport\n    properties: PropertiesMSD\n}\n\n/**\n * Classe che contiene gli attributi che indicano le proprietà del modulo per l'export.\n */\nexport class PropertiesMSD {\n    mode: ModeTypeExport\n    description: string\n    version: string | number\n    constraints: ConstraintsMSD\n    interface_networks: {\n        providers: InterfaceNetworksProvider[]\n        consumers: InterfaceNetworksConsumer[]\n    }\n    virtual_machines: VirtualMachine[]\n}\n/**\n * Classe che contiene gli attributi che indicano i vincoli di connessione del modulo per l'export.\n */\nexport class ConstraintsMSD {\n    interface_constraints: InterfaceConstraints[]\n    module_constraints: ModuleConstraints[]\n    network_constraints: NetworkConstraints[]\n}\n/**\n * Classe che contiene gli attributi che indicano i viconli per le interfacce di connessione del modulo.\n */\nexport class InterfaceConstraints {\n    local_interface: string\n    multiple_mode: boolean = false //future\n    module_name: string\n    compatibility: string = \"1.0\" // future\n    remote_interface: string\n}\n/**\n * Classe che contiene gli attributi che indicano i viconli del modulo.\n */\nexport class ModuleConstraints {\n}\n/**\n * Classe che contiene gli attributi che indicano i viconli dei network del modulo.\n */\nexport class NetworkConstraints {\n}\n/**\n * Classe che contiene gli attributi che indicano le interfacce provider del modulo.\n */\nexport class InterfaceNetworksProvider {\n    interface: string\n    network: string\n    tag: string\n    subnets: SubnetExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano le interfacce consumer del modulo.\n */\nexport class InterfaceNetworksConsumer {\n    interface: string\n    network: string\n    tag: string\n    subnets: SubnetExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano l'insieme di host presenti in un modulo.\n */\nexport class VirtualMachine {\n    virtual_machine: string\n    ports: VirtualMachinePorts[]\n}\n/**\n * Classe che contiene gli attributi che indicano le porte associate ad un host di un modulo.\n */\nexport class VirtualMachinePorts {\n    port: string\n    network: string\n    subnets: SubnetExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano la subnet connessa alla porte dell'host.\n * @see {VirtualMachinePorts}\n */\nexport class SubnetExport {\n    subnet: string;\n}\n\n/**\n * Classe che contiene gli attributi che indica un nodo all'interno dei node_templates.\n * @see {ModuleExport}\n */\nexport class NodeSimpleData {\n    type: NodeTypeExport\n    properties: any | null // future\n    interfaces: any | null // future\n    relationships: RelationshipsExport[]\n}\n\n/**\n * Classe che contiene gli attributi che indicano le relazioni generali.\n */\nexport class RelationshipsExport {\n    type: RelationshipsTypeExport\n    target: string\n}\n/**\n * Classe che contiene gli attributi che indicano i dati della porta all'interno dei node_templates.\n */\nexport class PortSimpleData {\n    type: PortTypeExport\n    relationships: RelationshipsExport[]\n}\n/**\n * Classe che contiene gli attributi che indicano i dati delle network all'interno dei node_templates.\n */\nexport class NetworkSimpleData {\n    type: NetworkTypeExport\n    properties: PropertiesNSD\n}\n/**\n * Classe che contiene gli attributi che indicano le proprietà della network all'interno dei node_templates.\n * @see {NetworkSimpleData}\n */\nexport class PropertiesNSD {\n    openstack_config?: any | null // future\n    use_external_resource?: boolean | null // future\n    resource_id?: any | null // future\n}\n\n/**\n * Classe che contiene gli attributi che indicano i dati delle subnet all'interno dei node_templates.\n */\nexport class SubnetSimpleData {\n    type: SubnetTypeExport\n    relationships: RelationshipsExport[]\n    properties: PropertiesSSD\n}\n/**\n * Classe che contiene gli attributi che indicano le proprietà della subnet all'interno dei node_templates.\n * @see {NetworkSimpleData}\n */\nexport class PropertiesSSD {\n    subnet?: {\n        ip_version: string | number\n        cidr: string\n        enable_dhcp: boolean\n        gateway_ip?: any | null // future\n    }\n    openstack_config?: any | null // future\n    use_external_resource?: boolean | null // future\n    resource_id?: any | null // future\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/VirtualizationEnvironmentTypeDTO.html":{"url":"classes/VirtualizationEnvironmentTypeDTO.html","title":"class - VirtualizationEnvironmentTypeDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  VirtualizationEnvironmentTypeDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/modelsDTO/falvorDTO.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Classe che contiene gli attributi che indicano l'environment virtualizzato del flavor.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                isEnabled\n                            \n                            \n                                name\n                            \n                            \n                                nameAlias\n                            \n                            \n                                supportMachineId\n                            \n                            \n                                uuid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/falvorDTO.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/falvorDTO.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isEnabled\n                        \n                    \n                \n            \n                    \n                        \n                                Definito in src/app/services/modelsDTO/falvorDTO.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/falvorDTO.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nameAlias\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/falvorDTO.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        supportMachineId\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/falvorDTO.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uuid\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/services/modelsDTO/falvorDTO.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class FlavorBasicInfo {\n    cpu: number | string;\n    disk: number | string;\n    ram: number | string;\n}\n\n/**\n * Classe che contiene gli attributi che indicano l'environment virtualizzato del flavor.\n */\nexport class VirtualizationEnvironmentTypeDTO {\n    description: string\n    id: number\n    isEnabled: true\n    name: string\n    nameAlias: string\n    supportMachineId: number\n    uuid: string\n}\n\n\n/**\n * Classe che contiene gli attributi che indicano i flavor utilizzabili.\n * @extends {FlavorBasicInfo}\n */\nexport class FlavorDTO extends FlavorBasicInfo {\n    name: string;\n    detailJson: {};\n    id: number | string;\n    uuid: string;\n    virtualizationEnvironmentType: VirtualizationEnvironmentTypeDTO;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"components/VisualizerComponent.html":{"url":"components/VisualizerComponent.html","title":"component - VisualizerComponent","body":"\n                   \n\n\n\n\n\n  Componenti\n  \n  VisualizerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/visualizer-system/visualizer/visualizer.component.ts\n\n\n\n    \n        Descrizione\n    \n    \n        Componente che ha come scopo di esegure tutte le preelaborazioni e switchare l'ambiente di visualizzazione moduli e teatri in base ai dati passati.\n\n    \n\n\n    \n        Implementa\n    \n    \n                    OnInit\n    \n\n\n\n    Metadati\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-displayer\n            \n\n            \n                styleUrls\n                ./visualizer.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./visualizer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                active\n                            \n                            \n                                    Protected\n                                data\n                            \n                            \n                                dataFromRouter\n                            \n                            \n                                    Protected\n                                hasFile\n                            \n                            \n                                    Protected\n                                hasproblem\n                            \n                            \n                                    Protected\n                                id\n                            \n                            \n                                    Protected\n                                module\n                            \n                            \n                                    Protected\n                                MODULE\n                            \n                            \n                                    Protected\n                                theater\n                            \n                            \n                                    Protected\n                                THEATER\n                            \n                            \n                                    Protected\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                gohome\n                            \n                            \n                                    Async\n                                initMODULE\n                            \n                            \n                                    Async\n                                initTHEATER\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Costruttore\n        \n            \n                \n                    \nconstructor(router: Router, parseService: ParseService, spinnerService: SpinnerService, storageService: StorageService)\n                    \n                \n                        \n                            \n                                Definito in src/app/visualizer-system/visualizer/visualizer.component.ts:75\n                            \n                        \n\n                \n                    \n                            Costruttore di VisualizerComponent.\nSi occupa di prendere i dati di route url e valorizzare le rispettive variabili.\n\n                            \n                                    Parametri :\n                                    \n                                        \n                                            \n                                                Nome\n                                                    Tipo\n                                                Opzionale\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parseService\n                                                  \n                                                        \n                                                                        ParseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        spinnerService\n                                                  \n                                                        \n                                                                        SpinnerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        gohome\n                        \n                    \n                \n            \n            \n                \n                    \n                    gohome()\n                \n            \n\n\n            \n                \n                    Definito in src/app/visualizer-system/visualizer/visualizer.component.ts:199\n                \n            \n\n\n            \n                \n                    Funzione che esegue una redirezione alla pagine home\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        initMODULE\n                        \n                    \n                \n            \n            \n                \n                    \n                    initMODULE()\n                \n            \n\n\n            \n                \n                    Definito in src/app/visualizer-system/visualizer/visualizer.component.ts:137\n                \n            \n\n\n            \n                \n                    Funzione che esegue tutte le funzioni di inizializzazione, reperimento e filtraggio dati da poter essere passati alla componente di TheaterVisualizer.\nEsegue anche le attività di spinner-loading.\nSee {ReteModuleComposer}\nSee {SpinnerService}\nSee {parseService}\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        initTHEATER\n                        \n                    \n                \n            \n            \n                \n                    \n                    initTHEATER()\n                \n            \n\n\n            \n                \n                    Definito in src/app/visualizer-system/visualizer/visualizer.component.ts:170\n                \n            \n\n\n            \n                \n                    Funzione che esegue tutte le funzioni di inizializzazione, reperimento e filtraggio dati da poter essere passati alla componente di TheaterVisualizer.\nEsegue anche le attività di spinner-loading.\nSee {ReteTheaterComposer}\nSee {SpinnerService}\nSee {parseService}\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Definito in src/app/visualizer-system/visualizer/visualizer.component.ts:117\n                \n            \n\n\n            \n                \n                    Funzione richiamata all'inizializzazione della componente.\nRichiama le funzioni adeguate in base al tipo di componente Modulo o Teatro scelto per la visualizzazione.\nSee {initMODULE}\nSee {initTHEATER}\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        active\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                \n                    \n                        Valore predefinito : false\n                    \n                \n                    \n                        \n                                Definito in src/app/visualizer-system/visualizer/visualizer.component.ts:48\n                        \n                    \n\n            \n                \n                    Variabile che indica lo stato di reperimento dei dati prima di visualizzare le componenti di costruzione\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     TheaterApplication | ModuleApplication\n\n                    \n                \n                    \n                        \n                                Definito in src/app/visualizer-system/visualizer/visualizer.component.ts:75\n                        \n                    \n\n            \n                \n                    Variabile che memorizza il teatro o il modulo importato da un file\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataFromRouter\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         DataRouteVisualizer\n\n                    \n                \n                    \n                        \n                                Definito in src/app/visualizer-system/visualizer/visualizer.component.ts:26\n                        \n                    \n\n            \n                \n                    Variabile che ha come scopo prendere i dati passati come url-parameters\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        hasFile\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                \n                    \n                        Valore predefinito : false\n                    \n                \n                    \n                        \n                                Definito in src/app/visualizer-system/visualizer/visualizer.component.ts:68\n                        \n                    \n\n            \n                \n                    Variabile che viene valorizzata nel momento in cui si presenta il caso di design da un file preso in input\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        hasproblem\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                \n                    \n                        Valore predefinito : false\n                    \n                \n                    \n                        \n                                Definito in src/app/visualizer-system/visualizer/visualizer.component.ts:41\n                        \n                    \n\n            \n                \n                    Variabile che viene valorizzata a true se si è verificato un errore.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/visualizer-system/visualizer/visualizer.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ModuleApplication\n\n                    \n                \n                    \n                        \n                                Definito in src/app/visualizer-system/visualizer/visualizer.component.ts:55\n                        \n                    \n\n            \n                \n                    Variabile che memorizza il modulo ricavato dal parser.\nSee {parseService}\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        MODULE\n                        \n                    \n                \n            \n                \n                    \n                        Valore predefinito : SubjectType.MODULE\n                    \n                \n                    \n                        \n                                Definito in src/app/visualizer-system/visualizer/visualizer.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        theater\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         TheaterApplication\n\n                    \n                \n                    \n                        \n                                Definito in src/app/visualizer-system/visualizer/visualizer.component.ts:62\n                        \n                    \n\n            \n                \n                    Variabile che memorizza il modulo ricavato dal parser.\nSee {parseService}\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        THEATER\n                        \n                    \n                \n            \n                \n                    \n                        Valore predefinito : SubjectType.THEATER\n                    \n                \n                    \n                        \n                                Definito in src/app/visualizer-system/visualizer/visualizer.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         SubjectType\n\n                    \n                \n                    \n                        \n                                Definito in src/app/visualizer-system/visualizer/visualizer.component.ts:29\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { from } from 'rxjs';\nimport { DataRouteVisualizer, SubjectType } from 'src/app/models/appType';\nimport { ParseService } from 'src/app/services/application/parse/parse.service';\nimport { SpinnerService } from 'src/app/services/application/spinner/spinner.service';\nimport { StorageService } from 'src/app/services/application/storage/storage.service';\nimport { ModuleApplication, TheaterApplication } from 'src/app/services/modelsApplication/applicationModels';\n\n/**\n * Componente che ha come scopo di esegure tutte le preelaborazioni e switchare l'ambiente di visualizzazione moduli e teatri in base ai dati passati.\n */\n@Component({\n  selector: 'app-displayer',\n  templateUrl: './visualizer.component.html',\n  styleUrls: ['./visualizer.component.sass'],\n})\n\nexport class VisualizerComponent implements OnInit {\n\n  /**\n   * Variabile che ha come scopo prendere i dati passati come url-parameters\n   * @type {DataRouteComposer} \n   */\n  dataFromRouter: DataRouteVisualizer;\n  // variabili istanziate come valori proveniente dalla dataFormRouter\n  protected id: string | number;\n  protected type: SubjectType;\n\n  // type var\n  protected MODULE = SubjectType.MODULE;\n  protected THEATER = SubjectType.THEATER;\n\n\n  /**\n   * Variabile che viene valorizzata a true se si è verificato un errore.\n   * @type {boolean}\n   * @default false\n   */\n  protected hasproblem: boolean = false;\n\n  /**\n   * Variabile che indica lo stato di reperimento dei dati prima di visualizzare le componenti di costruzione\n   * @type  {boolean}\n   * @default false\n   */\n  protected active: boolean = false;\n\n  /**\n   * Variabile che memorizza il modulo ricavato dal parser.\n   * @type {ModuleApplication}\n   * @see {parseService}\n   */\n  protected module: ModuleApplication;\n\n  /**\n   * Variabile che memorizza il modulo ricavato dal parser.\n   * @type {TheaterApplication}\n   * @see {parseService}\n   */\n  protected theater: TheaterApplication;\n\n  /**\n   * Variabile che viene valorizzata nel momento in cui si presenta il caso di design da un file preso in input\n   * @type {boolean} \n   */\n  protected hasFile: boolean = false;\n\n  /**\n   * Variabile che memorizza il teatro o il modulo importato da un file\n   * @type {TheaterApplication}\n   * @type {ModuleApplication}\n   */\n  protected data: TheaterApplication | ModuleApplication;\n\n\n  /**\n   * Costruttore di VisualizerComponent.\n   * Si occupa di prendere i dati di route url e valorizzare le rispettive variabili.\n   * @param router \n   * @param parseService \n   * @param spinnerService \n   */\n  constructor(\n    private router: Router,\n    private parseService: ParseService,\n    private spinnerService: SpinnerService,\n    private storageService: StorageService\n  ) {\n    this.dataFromRouter = this.router.getCurrentNavigation().extras.state as DataRouteVisualizer\n    console.log(this.dataFromRouter)\n    if (this.dataFromRouter) {\n      this.id = this.dataFromRouter.id;\n      this.type = this.dataFromRouter.type;\n    }\n\n    // se non è stato inizializzato il nome e ci sono dati nello storage\n    if (!this.id && this.storageService.data) {\n      this.hasFile = true;\n      this.data = this.storageService.data;\n      this.storageService.data = undefined; // consumo l'elemento\n    }\n\n    if (!this.id && !this.data) {\n      this.hasproblem = true;\n    }\n\n  }\n\n  /**\n   * Funzione richiamata all'inizializzazione della componente.\n   * Richiama le funzioni adeguate in base al tipo di componente Modulo o Teatro scelto per la visualizzazione.\n   * @see {initMODULE}\n   * @see {initTHEATER}\n   */\n  async ngOnInit() {\n    if (this.type === this.MODULE) {\n      this.initMODULE();\n    }\n    else if (this.type === this.THEATER) {\n      this.initTHEATER();\n    }\n    else {\n      this.hasproblem = true;\n    }\n  }\n\n\n  /**\n   * Funzione che esegue tutte le funzioni di inizializzazione, reperimento e filtraggio dati da poter essere passati alla componente di TheaterVisualizer.\n   * Esegue anche le attività di spinner-loading.\n   * @see {ReteModuleComposer}\n   * @see {SpinnerService}\n   * @see {parseService}\n   */\n  async initMODULE() {\n    this.spinnerService.setSpinner(true, \"Loading module canvas\");\n    if (this.hasFile) {\n      this.data = this.data as ModuleApplication;\n      this.module = this.data;\n      this.active = true;\n      this.spinnerService.setSpinner(false);\n    }\n    else {\n      from(\n        this.parseService.parseModuleForModuleVisualizer(this.id ? this.id : 1459)\n      )\n        .subscribe(el => {\n          if (el) {\n            this.module = el\n            this.spinnerService.setSpinner(false);\n            this.active = true;\n          }\n          else {\n            this.spinnerService.setSpinner(false);\n            this.hasproblem = true;\n          }\n        });\n    }\n  }\n\n  /**\n   * Funzione che esegue tutte le funzioni di inizializzazione, reperimento e filtraggio dati da poter essere passati alla componente di TheaterVisualizer.\n   * Esegue anche le attività di spinner-loading.\n   * @see {ReteTheaterComposer}\n   * @see {SpinnerService}\n   * @see {parseService}\n   */\n  async initTHEATER() {\n    this.spinnerService.setSpinner(true, \"Loading theater canvas\");\n    if (this.hasFile) {\n      this.data = this.data as TheaterApplication;\n      this.theater = this.data;\n      this.active = true;\n      this.spinnerService.setSpinner(false);\n    }\n    else{\n    from(\n      this.parseService.parseTheaterForTheaterVisualizer(this.id ? this.id : 502)\n    )\n      .subscribe(el => {\n        if (el) {\n          this.theater = el\n          this.spinnerService.setSpinner(false);\n          this.active = true;\n        }\n        else {\n          this.spinnerService.setSpinner(false);\n          this.hasproblem = true;\n        }\n      });\n    }\n  }\n\n  /**\n   * Funzione che esegue una redirezione alla pagine home\n   */\n  public gohome() {\n    this.router.navigate(['/home']);\n  }\n\n}\n\n\n\n    \n\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        \n            \n                \n                 A Problem occurred when loading {{type}} with id: {{id}} \n                 A Problem occurred when loading visualizer system \n            \n            \n                \n                     Go home \n                \n            \n        \n    \n\n    \n\n    \n                \n                    ./visualizer.component.sass\n                \n                .oh-imp\n    overflow: hidden !important\n    \n\n    \n        \n        \n            \n                Legenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento html con direttive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                         A Problem occurred when loading {{type}} with id: {{id}}                  A Problem occurred when loading visualizer system                                                              Go home                                         '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ComposerComponent', 'selector': 'app-composer'},{'name': 'ControlTemplate', 'selector': ''},{'name': 'DataInputComponent', 'selector': 'app-data-input'},{'name': 'DataInputV2Component', 'selector': 'app-data-input-v2'},{'name': 'DataItemComponent', 'selector': 'app-window-item'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HostComponent', 'selector': ''},{'name': 'HowToUseComponent', 'selector': 'app-how-to-use'},{'name': 'MirroringModuleInstanceComponent', 'selector': ''},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavbarElementComponent', 'selector': 'app-navbar-element'},{'name': 'NetworkComponent', 'selector': ''},{'name': 'OffcanvasComponent', 'selector': 'app-offcanvas'},{'name': 'ReteModuleComposerComponent', 'selector': 'app-rete-module-composer'},{'name': 'ReteModuleVisualizerComponent', 'selector': 'app-rete-module-visualizer'},{'name': 'ReteTheaterComposerComponent', 'selector': 'app-rete-theater-composer'},{'name': 'ReteTheaterVisualizerComponent', 'selector': 'app-rete-theater-visualizer'},{'name': 'SubnetComponent', 'selector': ''},{'name': 'TabnavComponent', 'selector': 'app-tabnav'},{'name': 'TheaterInternalServiceModuleInstanceComponent', 'selector': ''},{'name': 'TheaterModuleInstanceComponent', 'selector': ''},{'name': 'UnderbarComponent', 'selector': 'app-underbar'},{'name': 'VisualizerComponent', 'selector': 'app-displayer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'VisualizerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/_Control.html":{"url":"classes/_Control.html","title":"class - _Control","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  _Control\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/rete-settings/controls/control.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Elemento indica il control da utilizzare dai vari tipi di nodi/moduli\n\n            \n\n            \n                Extends\n            \n            \n                    Control\n            \n\n            \n                Implementa\n            \n            \n                        AngularControl\n            \n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                component\n                            \n                            \n                                    Public\n                                emitter\n                            \n                            \n                                    Public\n                                key\n                            \n                            \n                                props\n                            \n                        \n                    \n                \n\n                \n                    \n                        Metodi\n                    \n                \n                \n                    \n                        \n                            \n                                onChange\n                            \n                            \n                                setValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Costruttore\n        \n            \n                \n                    \nconstructor(emitter: NodeEditor, key: string, readonly)\n                    \n                \n                        \n                            \n                                Definito in src/app/rete-settings/controls/control.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parametri :\n                                    \n                                        \n                                            \n                                                Nome\n                                                    Tipo\n                                                Opzionale\n                                            \n                                        \n                                        \n                                                \n                                                        emitter\n                                                  \n                                                        \n                                                                    NodeEditor\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        key\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        readonly\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        component\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         Type\n\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/controls/control.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        emitter\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     NodeEditor\n\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/controls/control.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/controls/control.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        props\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     literal type\n\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/controls/control.ts:32\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Metodi\n    \n    \n        \n            \n                \n                    \n                    \n                        onChange\n                        \n                    \n                \n            \n            \n                \nonChange(val: number)\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/controls/control.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setValue\n                        \n                    \n                \n            \n            \n                \nsetValue(val: number)\n                \n            \n\n\n            \n                \n                    Definito in src/app/rete-settings/controls/control.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Component, Input, Type } from '@angular/core';\nimport { Control, NodeEditor } from 'rete';\nimport { AngularControl } from 'rete-angular-render-plugin';\n\n\n/**\n * Componente che si occpa del control per i nodi la libreria retejs\n */\n@Component({\n  templateUrl: './control.html',\n  styleUrls:  ['./control.css'],\n})\nexport class ControlTemplate {\n\n  @Input() value!: number;\n  @Input() readonly!: boolean;\n  @Input() change!: Function;\n  @Input() mounted!: Function;\n\n  ngOnInit() {\n    this.mounted();\n  }\n}\n\n\n/**\n * Elemento indica il control da utilizzare dai vari tipi di nodi/moduli \n */\nexport class _Control extends Control implements AngularControl {\n  \n  component: Type\n  props: { [key: string]: unknown }\n\n  constructor(public emitter: NodeEditor, public key: string, readonly = false) {\n    \n    super(key);\n\n    this.component = ControlTemplate;\n    this.props = {\n      readonly,\n      change: (v: undefined) => this.onChange(v),\n      value: 0,\n      mounted: () => {\n        this.setValue(+(this.getData(key) as any) || 0)\n      },\n  };\n    \n  }\n\n  onChange(val: number) {\n    this.setValue(val);\n    this.emitter.trigger('process');\n  }\n\n  setValue(val: number) {\n    this.props.value = +val;\n    this.putData(this.key, this.props.value)\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~9.1.12\n        \n            @angular/common : ~9.1.12\n        \n            @angular/compiler : ~9.1.12\n        \n            @angular/core : ~9.1.12\n        \n            @angular/elements : ^9.1.12\n        \n            @angular/forms : ~9.1.12\n        \n            @angular/localize : ~9.1.12\n        \n            @angular/platform-browser : ~9.1.12\n        \n            @angular/platform-browser-dynamic : ~9.1.12\n        \n            @angular/router : ~9.1.12\n        \n            @compodoc/compodoc : ^1.1.19\n        \n            @popperjs/core : ^2.10.2\n        \n            ajv : ^6.12.6\n        \n            angular-popper : ^2.0.1\n        \n            bootstrap : ^5.1.3\n        \n            bootstrap-icons : ^1.8.1\n        \n            jquery : ^3.6.0\n        \n            json-to-pretty-yaml : ^1.2.2\n        \n            keycloak-angular : ^8.0.1\n        \n            keycloak-js : ^11.0.2\n        \n            ngx-color-picker : ^12.0.1\n        \n            ngx-spinner : ^9.0.1\n        \n            ngx-typeahead : ^9.2.0\n        \n            popper : ^1.0.1\n        \n            popper.js : ^1.14.0\n        \n            qs : ^6.10.3\n        \n            rete : ^1.4.1\n        \n            rete-angular-render-plugin : ^0.2.0-rc.2\n        \n            rete-area-plugin : ^0.2.1\n        \n            rete-auto-arrange-plugin : ^0.5.0-rc.1\n        \n            rete-cli : ^0.6.1-rc2\n        \n            rete-connection-path-plugin : ^0.3.1\n        \n            rete-connection-plugin : ^0.8.3\n        \n            rete-context-menu-plugin : ^0.6.0\n        \n            rete-dock-plugin : ^0.2.1\n        \n            rete-history-plugin : ^0.2.2\n        \n            rete-minimap-plugin : ^0.3.0\n        \n            rete-readonly-plugin : ^0.4.1\n        \n            rxjs : ~6.4.0\n        \n            tslib : ^1.9.0\n        \n            zone.js : ~0.9.1\n    \n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Varie\n  Funzioni\n\n\n\n    Indice\n    \n        \n            \n                \n                    \n                        \n                            createHost   (src/.../parseCommonElement.ts)\n                        \n                        \n                            createModuleNode   (src/.../parseCommonElement.ts)\n                        \n                        \n                            createNetwork   (src/.../parseCommonElement.ts)\n                        \n                        \n                            createSubnet   (src/.../parseCommonElement.ts)\n                        \n                        \n                            exportToJson   (src/.../exportTo.ts)\n                        \n                        \n                            exportToYaml   (src/.../exportTo.ts)\n                        \n                        \n                            getEmptyHostInfo   (src/.../hostNode.ts)\n                        \n                        \n                            getEmptyNetworkInfo   (src/.../networkNode.ts)\n                        \n                        \n                            getEmptyReteMirroringModuleInstanceInfo   (src/.../mirroringModuleInstanceNode.ts)\n                        \n                        \n                            getEmptyReteTheaterInternalServiceModuleInstanceInfo   (src/.../theaterInternalServiceModuleInstanceNode.ts)\n                        \n                        \n                            getEmptyReteTheaterModuleInstanceInfo   (src/.../theaterModuleInstanceNode.ts)\n                        \n                        \n                            getEmptySubnetInfo   (src/.../subnetNode.ts)\n                        \n                        \n                            initializeKeycloak   (src/.../app.init.ts)\n                        \n                        \n                            ReteDisplayModuleDataMC   (src/.../displayData.ts)\n                        \n                        \n                            ReteDisplayModuleDataMV   (src/.../displayData.ts)\n                        \n                        \n                            ReteDisplayModuleDataTC   (src/.../displayData.ts)\n                        \n                        \n                            ReteDisplayModuleDataTV   (src/.../displayData.ts)\n                        \n                        \n                            ReteDisplayModuleInstanceTC   (src/.../displayData.ts)\n                        \n                        \n                            ReteDisplayNodeDataMV   (src/.../displayData.ts)\n                        \n                        \n                            ReteDisplayTheaterDataTC   (src/.../displayData.ts)\n                        \n                        \n                            ReteDisplayTheaterDataTV   (src/.../displayData.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/services/application/parse/parseCommonElement.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createHost\n                        \n                    \n                \n            \n            \n                \ncreateHost(name: string, hostDTO: HostModuleDTO)\n                \n            \n\n\n\n\n            \n                \n                    Funzione che esegue il settaggio iniziale per i nodi host.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    hostDTO\n                                    \n                                                HostModuleDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ReteHostInfo\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createModuleNode\n                        \n                    \n                \n            \n            \n                \ncreateModuleNode(name: string, moduleInstance: ModuleInstanceDTO, simpleModuleRoot: SimpleModuleApplication)\n                \n            \n\n\n\n\n            \n                \n                    Funzione che esegue il settaggio iniziale per i moduli del teatro.\nLa funzione controlla prima di che tipo è il modulo, prima di eseguire le dovute assegnazioni.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    moduleInstance\n                                    \n                                                ModuleInstanceDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    simpleModuleRoot\n                                    \n                                                SimpleModuleApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ModuleInstance\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createNetwork\n                        \n                    \n                \n            \n            \n                \ncreateNetwork(name: string, moduleInterfaceDTO)\n                \n            \n\n\n\n\n            \n                \n                    Funzione che esegue il settaggio iniziale per i nodi network.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    moduleInterfaceDTO\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ReteNetworkInfo\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createSubnet\n                        \n                    \n                \n            \n            \n                \ncreateSubnet(name: string, subnetDTO: SubnetDTO)\n                \n            \n\n\n\n\n            \n                \n                    Funzione che esegue il settaggio iniziale per i nodi subnet.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    subnetDTO\n                                    \n                                                SubnetDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ReteSubnetInfo\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/app/services/application/export/exportTo.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        exportToJson\n                        \n                    \n                \n            \n            \n                \nexportToJson(fn: string, objectData: any)\n                \n            \n\n\n\n\n            \n                \n                    Funzione che si occupa del download effettivo in un formato json.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    objectData\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        exportToYaml\n                        \n                    \n                \n            \n            \n                \nexportToYaml(fn: string, objectData: any)\n                \n            \n\n\n\n\n            \n                \n                    Funzione che si occupa del download effettivo in un formato yaml.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    objectData\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app/rete-settings/nodes/rete-nodes/host/hostNode.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getEmptyHostInfo\n                        \n                    \n                \n            \n            \n                \ngetEmptyHostInfo()\n                \n            \n\n\n\n\n            \n                \n                    Funzione dichiarata in HostNode. \nEssa ha lo scopo di generare una struttura dati empty.\nViene utilizzata in per instanziare un nodo del tipo di ritorno indicato senza dati.\n\n\n                    \n                    \n                    \n                        Returns :         ReteHostInfo\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/app/rete-settings/nodes/rete-nodes/network/networkNode.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getEmptyNetworkInfo\n                        \n                    \n                \n            \n            \n                \ngetEmptyNetworkInfo()\n                \n            \n\n\n\n\n            \n                \n                    Funzione dichiarata in NetworkNode. \nEssa ha lo scopo di generare una struttura dati empty.\nViene utilizzata in per instanziare un nodo del tipo di ritorno indicato senza dati.\n\n\n                    \n                    \n                    \n                        Returns :         ReteNetworkInfo\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/app/rete-settings/nodes/rete-modules/mirroringModuleInstance/mirroringModuleInstanceNode.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getEmptyReteMirroringModuleInstanceInfo\n                        \n                    \n                \n            \n            \n                \ngetEmptyReteMirroringModuleInstanceInfo()\n                \n            \n\n\n\n\n            \n                \n                    Funzione dichiarata in MirroringModuleInstanceNode. \nEssa ha lo scopo di generare una struttura dati empty.\nViene utilizzata in per instanziare un nodo del tipo di ritorno indicato senza dati.\n\n\n                    \n                    \n                    \n                        Returns :         ReteMirroringModuleInstanceInfo\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/app/rete-settings/nodes/rete-modules/theaterInternalServiceModuleInstance/theaterInternalServiceModuleInstanceNode.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getEmptyReteTheaterInternalServiceModuleInstanceInfo\n                        \n                    \n                \n            \n            \n                \ngetEmptyReteTheaterInternalServiceModuleInstanceInfo()\n                \n            \n\n\n\n\n            \n                \n                    Funzione dichiarata in TheaterInternalServiceModuleInstanceNode. \nEssa ha lo scopo di generare una struttura dati empty.\nViene utilizzata in per instanziare un nodo del tipo di ritorno indicato senza dati.\n\n\n                    \n                    \n                    \n                        Returns :         ReteTheaterInternalServiceModuleInstanceInfo\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/app/rete-settings/nodes/rete-modules/theaterModuleInstance/theaterModuleInstanceNode.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getEmptyReteTheaterModuleInstanceInfo\n                        \n                    \n                \n            \n            \n                \ngetEmptyReteTheaterModuleInstanceInfo()\n                \n            \n\n\n\n\n            \n                \n                    Funzione dichiarata in TheaterModuleInstanceNode. \nEssa ha lo scopo di generare una struttura dati empty.\nViene utilizzata in per instanziare un nodo del tipo di ritorno indicato senza dati.\n\n\n                    \n                    \n                    \n                        Returns :         ReteTheaterModuleInstanceInfo\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/app/rete-settings/nodes/rete-nodes/subnet/subnetNode.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getEmptySubnetInfo\n                        \n                    \n                \n            \n            \n                \ngetEmptySubnetInfo()\n                \n            \n\n\n\n\n            \n                \n                    Funzione dichiarata in SubnetNode. \nEssa ha lo scopo di generare una struttura dati empty.\nViene utilizzata in per instanziare un nodo del tipo di ritorno indicato senza dati.\n\n\n                    \n                    \n                    \n                        Returns :         ReteSubnetInfo\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/app/utility/app.init.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        initializeKeycloak\n                        \n                    \n                \n            \n            \n                \ninitializeKeycloak(keycloak: KeycloakService)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    keycloak\n                                    \n                                            KeycloakService\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/app/rete-settings/settings/displayData.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ReteDisplayModuleDataMC\n                        \n                    \n                \n            \n            \n                \nReteDisplayModuleDataMC(module: ModuleApplication)\n                \n            \n\n\n\n\n            \n                \n                    Funzione che ritorna gli attributi da visualizzare dato un modulo.\nUsata nella componente di creazione modulo.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    module\n                                    \n                                                ModuleApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     [][]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ReteDisplayModuleDataMV\n                        \n                    \n                \n            \n            \n                \nReteDisplayModuleDataMV(module: ModuleApplication)\n                \n            \n\n\n\n\n            \n                \n                    Funzione che ritorna gli attributi da visualizzare dato un modulo.\nUsata nella componente di visualizzazione modulo.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    module\n                                    \n                                                ModuleApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     [][]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ReteDisplayModuleDataTC\n                        \n                    \n                \n            \n            \n                \nReteDisplayModuleDataTC(module: SimpleModuleApplication)\n                \n            \n\n\n\n\n            \n                \n                    Funzione che ritorna gli attributi da visualizzare dato un modulo.\nUsata nella componente di costruzione teatro.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    module\n                                    \n                                                SimpleModuleApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     [][]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ReteDisplayModuleDataTV\n                        \n                    \n                \n            \n            \n                \nReteDisplayModuleDataTV(module: SimpleModuleApplication)\n                \n            \n\n\n\n\n            \n                \n                    Funzione che ritorna gli attributi da visualizzare dato un modulo.\nUsata nella componente di visualizzazione teatro.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    module\n                                    \n                                                SimpleModuleApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     [][]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ReteDisplayModuleInstanceTC\n                        \n                    \n                \n            \n            \n                \nReteDisplayModuleInstanceTC(node: Node)\n                \n            \n\n\n\n\n            \n                \n                    Funzione che ritorna gli attributi da visualizzare dato un'instanza del modulo.\nUsata nella componente di costruzione teatro.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ReteDisplayNodeDataMV\n                        \n                    \n                \n            \n            \n                \nReteDisplayNodeDataMV(node: Node)\n                \n            \n\n\n\n\n            \n                \n                    Funzione che ritorna gli attributi da visualizzare dato un nodo.\nUsata nella componente di visualizzazione modulo.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ReteDisplayTheaterDataTC\n                        \n                    \n                \n            \n            \n                \nReteDisplayTheaterDataTC(theater: TheaterApplication)\n                \n            \n\n\n\n\n            \n                \n                    Funzione che ritorna gli attributi da visualizzare dato un teatro.\nUsata nella componente di creazione teatro.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    theater\n                                    \n                                                TheaterApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ReteDisplayTheaterDataTV\n                        \n                    \n                \n            \n            \n                \nReteDisplayTheaterDataTV(theater: TheaterApplication)\n                \n            \n\n\n\n\n            \n                \n                    Funzione che ritorna gli attributi da visualizzare dato un teatro.\nUsata nella componente di visualizzazione teatro.\n\n\n                    \n                        Parametri :\n                        \n                        \n                            \n                                \n                                    Nome\n                                    Tipo\n                                    Opzionale\n                                \n                            \n                            \n                                \n                                    theater\n                                    \n                                                TheaterApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nInfraCreate\nThis project was generated with Angular CLI version 9.1.12.\nnvm version 12.16.1 \nfor update/install 12.20.\nAggiunta e modifiche elementi in libreria\naggiungere ad event.d.ts  : \n    - arrange: void;\n    - showcontextmenu: { e: MouseEvent, node: Node };\n    - undo: void;\n    - redo: void;\ninstallare minimap-plugin versione 0.3.0\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Moduli\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Il tuo browser non supporta SVG\n                                    \n                                \n                        \n                            Cerca\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    Grafico non disponibile.\n                                \n                        \n                            Cerca\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Sommario\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_exports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nComposerComponent\n\nComposerComponent\n\nAppModule -->\n\nComposerComponent->AppModule\n\n\n\nAppModule -->\n\nComposerComponent->AppModule\n\n\n\n\n\nControlTemplate\n\nControlTemplate\n\nAppModule -->\n\nControlTemplate->AppModule\n\n\n\n\n\nDataInputComponent\n\nDataInputComponent\n\nAppModule -->\n\nDataInputComponent->AppModule\n\n\n\n\n\nDataInputV2Component\n\nDataInputV2Component\n\nAppModule -->\n\nDataInputV2Component->AppModule\n\n\n\n\n\nDataItemComponent\n\nDataItemComponent\n\nAppModule -->\n\nDataItemComponent->AppModule\n\n\n\n\n\nDocsComponent\n\nDocsComponent\n\nAppModule -->\n\nDocsComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nHostComponent\n\nHostComponent\n\nAppModule -->\n\nHostComponent->AppModule\n\n\n\n\n\nHowToUseComponent\n\nHowToUseComponent\n\nAppModule -->\n\nHowToUseComponent->AppModule\n\n\n\n\n\nMirroringModuleInstanceComponent\n\nMirroringModuleInstanceComponent\n\nAppModule -->\n\nMirroringModuleInstanceComponent->AppModule\n\n\n\n\n\nModalComponent\n\nModalComponent\n\nAppModule -->\n\nModalComponent->AppModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nAppModule -->\n\nNavbarComponent->AppModule\n\n\n\n\n\nNavbarElementComponent\n\nNavbarElementComponent\n\nAppModule -->\n\nNavbarElementComponent->AppModule\n\n\n\n\n\nNetworkComponent\n\nNetworkComponent\n\nAppModule -->\n\nNetworkComponent->AppModule\n\n\n\n\n\nOffcanvasComponent\n\nOffcanvasComponent\n\nAppModule -->\n\nOffcanvasComponent->AppModule\n\n\n\n\n\nReteModuleComposerComponent\n\nReteModuleComposerComponent\n\nAppModule -->\n\nReteModuleComposerComponent->AppModule\n\n\n\n\n\nReteModuleVisualizerComponent\n\nReteModuleVisualizerComponent\n\nAppModule -->\n\nReteModuleVisualizerComponent->AppModule\n\n\n\n\n\nReteTheaterComposerComponent\n\nReteTheaterComposerComponent\n\nAppModule -->\n\nReteTheaterComposerComponent->AppModule\n\n\n\n\n\nReteTheaterVisualizerComponent\n\nReteTheaterVisualizerComponent\n\nAppModule -->\n\nReteTheaterVisualizerComponent->AppModule\n\n\n\n\n\nSubnetComponent\n\nSubnetComponent\n\nAppModule -->\n\nSubnetComponent->AppModule\n\n\n\n\n\nTabnavComponent\n\nTabnavComponent\n\nAppModule -->\n\nTabnavComponent->AppModule\n\n\n\n\n\nTheaterInternalServiceModuleInstanceComponent\n\nTheaterInternalServiceModuleInstanceComponent\n\nAppModule -->\n\nTheaterInternalServiceModuleInstanceComponent->AppModule\n\n\n\n\n\nTheaterModuleInstanceComponent\n\nTheaterModuleInstanceComponent\n\nAppModule -->\n\nTheaterModuleInstanceComponent->AppModule\n\n\n\n\n\nUnderbarComponent\n\nUnderbarComponent\n\nAppModule -->\n\nUnderbarComponent->AppModule\n\n\n\n\n\nVisualizerComponent\n\nVisualizerComponent\n\nAppModule -->\n\nVisualizerComponent->AppModule\n\n\n\nAppModule -->\n\nVisualizerComponent->AppModule\n\n\n\n\n\nDataInputComponent \n\nDataInputComponent \n\nDataInputComponent  -->\n\nAppModule->DataInputComponent \n\n\n\n\n\nNavbarComponent \n\nNavbarComponent \n\nNavbarComponent  -->\n\nAppModule->NavbarComponent \n\n\n\n\n\nNavbarElementComponent \n\nNavbarElementComponent \n\nNavbarElementComponent  -->\n\nAppModule->NavbarElementComponent \n\n\n\n\n\nOffcanvasComponent \n\nOffcanvasComponent \n\nOffcanvasComponent  -->\n\nAppModule->OffcanvasComponent \n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nNgxPopper\n\nNgxPopper\n\nAppModule -->\n\nNgxPopper->AppModule\n\n\n\n\n\nModuleService\n\nModuleService\n\nAppModule -->\n\nModuleService->AppModule\n\n\n\n\n\nParseService\n\nParseService\n\nAppModule -->\n\nParseService->AppModule\n\n\n\n\n\nTheaterService\n\nTheaterService\n\nAppModule -->\n\nTheaterService->AppModule\n\n\n\n\n\nTokenService\n\nTokenService\n\nAppModule -->\n\nTokenService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Ingrandisci\n        Reset\n        Rimpocciolisci\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Moduli\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    26 Componenti\n                \n            \n        \n        \n            \n                \n                    \n                    12 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    124 Classi\n                \n            \n        \n        \n            \n                \n                    \n                    4 Interfacce\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        0 \n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Proprietà\n    \n    \n        \n            Version : 1.0.0\n    \n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/reteBasicModuleInfo.html":{"url":"classes/reteBasicModuleInfo.html","title":"class - reteBasicModuleInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  reteBasicModuleInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/rete-settings/nodes/reteBasic.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Elemento che rappresenta una struttura dati generale per le classi dei singoli moduli.\n\n            \n\n            \n                Extends\n            \n            \n                        ModuleInstancePropertiesDTO\n            \n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                host_number\n                            \n                            \n                                Input\n                            \n                            \n                                name\n                            \n                            \n                                network_number\n                            \n                            \n                                Output\n                            \n                            \n                                subnet_number\n                            \n                            \n                                    Readonly\n                                type\n                            \n                            \n                                area\n                            \n                            \n                                consumer_interfaces_link\n                            \n                            \n                                description\n                            \n                            \n                                module\n                            \n                            \n                                sequence\n                            \n                            \n                                version\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        host_number\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/reteBasic.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Input\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/reteBasic.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/reteBasic.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        network_number\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/reteBasic.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Output\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/reteBasic.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subnet_number\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         number\n\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/reteBasic.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         EnumModuleType\n\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/reteBasic.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        area\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleInstancePropertiesDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleInstancePropertiesDTO:166\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        consumer_interfaces_link\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ConsumerInterfaceLinkDTO[]\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleInstancePropertiesDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleInstancePropertiesDTO:171\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleInstancePropertiesDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleInstancePropertiesDTO:167\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleInstancePropertiesDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleInstancePropertiesDTO:168\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sequence\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleInstancePropertiesDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleInstancePropertiesDTO:170\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | number\n\n                    \n                \n                        \n                            \n                                ereditato da         ModuleInstancePropertiesDTO\n\n                            \n                        \n                    \n                        \n                                Definito in         ModuleInstancePropertiesDTO:169\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { EnumNodeType, EnumModuleType } from \"src/app/models/appType\";\nimport { ModuleInstancePropertiesDTO} from \"src/app/services/modelsDTO/moduleDTO\";\n\n/**\n * Elemento che rappresenta una struttura dati generale per le classi dei singoli nodi.\n */\nexport class reteBasicNodeInfo {\n    Input: string[];\n    Output: string[];\n    name: string;\n    readonly type: EnumNodeType;\n}\n\n\n/**\n * Elemento che rappresenta una struttura dati generale per le classi dei singoli moduli.\n * @extends {reteBasicModuleInfo}\n */\nexport class reteBasicModuleInfo extends ModuleInstancePropertiesDTO { // may extends retemodulenodeinfo\n    Input: string[];\n    Output: string[];\n    name: string;\n    host_number: number;\n    network_number: number\n    subnet_number: number\n    readonly type: EnumModuleType;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"classes/reteBasicNodeInfo.html":{"url":"classes/reteBasicNodeInfo.html","title":"class - reteBasicNodeInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classi\n  reteBasicNodeInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/rete-settings/nodes/reteBasic.ts\n        \n\n\n            \n                Descrizione\n            \n            \n                Elemento che rappresenta una struttura dati generale per le classi dei singoli nodi.\n\n            \n\n\n\n\n            \n    Indice\n    \n        \n                \n                    \n                        Proprietà\n                    \n                \n                \n                    \n                        \n                            \n                                Input\n                            \n                            \n                                name\n                            \n                            \n                                Output\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Proprietà\n    \n    \n        \n            \n                \n                    \n                    \n                        Input\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/reteBasic.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/reteBasic.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Output\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string[]\n\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/reteBasic.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         EnumNodeType\n\n                    \n                \n                    \n                        \n                                Definito in src/app/rete-settings/nodes/reteBasic.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { EnumNodeType, EnumModuleType } from \"src/app/models/appType\";\nimport { ModuleInstancePropertiesDTO} from \"src/app/services/modelsDTO/moduleDTO\";\n\n/**\n * Elemento che rappresenta una struttura dati generale per le classi dei singoli nodi.\n */\nexport class reteBasicNodeInfo {\n    Input: string[];\n    Output: string[];\n    name: string;\n    readonly type: EnumNodeType;\n}\n\n\n/**\n * Elemento che rappresenta una struttura dati generale per le classi dei singoli moduli.\n * @extends {reteBasicModuleInfo}\n */\nexport class reteBasicModuleInfo extends ModuleInstancePropertiesDTO { // may extends retemodulenodeinfo\n    Input: string[];\n    Output: string[];\n    name: string;\n    host_number: number;\n    network_number: number\n    subnet_number: number\n    readonly type: EnumModuleType;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         corrispondenza \"\"\n        \n    \n    \n        Nessun risultato corrispondente \"\"\n    \n\n"}}
}
